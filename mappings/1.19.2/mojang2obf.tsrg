com/mojang/blaze3d/Blaze3D dyh
	getTime ()D b
	process (Lcom/mojang/blaze3d/pipeline/RenderPipeline;F)V a
	render (Lcom/mojang/blaze3d/pipeline/RenderPipeline;F)V b
	youJustLostTheGame ()V a
com/mojang/blaze3d/DontObfuscate dyi
com/mojang/blaze3d/FieldsAreNonnullByDefault dyj
com/mojang/blaze3d/MethodsReturnNonnullByDefault dyk
com/mojang/blaze3d/audio/Channel dyl
	BUFFER_DURATION_SECONDS a
	LOGGER b
	QUEUED_BUFFER_COUNT c
	initialized e
	source d
	stream g
	streamingBufferSize f
	attachBufferStream (Lnet/minecraft/client/sounds/AudioStream;)V a
	attachStaticBuffer (Lcom/mojang/blaze3d/audio/SoundBuffer;)V a
	calculateBufferSize (Ljavax/sound/sampled/AudioFormat;I)I a
	create ()Lcom/mojang/blaze3d/audio/Channel; a
	destroy ()V b
	disableAttenuation ()V i
	getState ()I k
	linearAttenuation (F)V c
	pause ()V d
	play ()V c
	playing ()Z g
	pumpBuffers (I)V a
	removeProcessedBuffers ()I l
	setLooping (Z)V a
	setPitch (F)V a
	setRelative (Z)V b
	setSelfPosition (Lnet/minecraft/world/phys/Vec3;)V a
	setVolume (F)V b
	stop ()V f
	stopped ()Z h
	unpause ()V e
	updateStream ()V j
com/mojang/blaze3d/audio/Library dym
	DEFAULT_CHANNEL_COUNT c
	EMPTY h
	LOGGER a
	NO_DEVICE b
	context e
	currentDevice d
	defaultDeviceName g
	listener k
	staticChannels i
	streamingChannels j
	supportsDisconnections f
	acquireChannel (Lcom/mojang/blaze3d/audio/Library$Pool;)Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V d
	getAvailableSoundDevices ()Ljava/util/List; g
	getChannelCount ()I i
	getCurrentDeviceName ()Ljava/lang/String; b
	getDebugString ()Ljava/lang/String; f
	getDefaultDeviceName ()Ljava/lang/String; a
	getListener ()Lcom/mojang/blaze3d/audio/Listener; e
	hasDefaultDeviceChanged ()Z c
	init (Ljava/lang/String;Z)V a
	isCurrentDeviceDisconnected ()Z h
	openDeviceOrFallback (Ljava/lang/String;)J a
	releaseChannel (Lcom/mojang/blaze3d/audio/Channel;)V a
	setHrtf (Z)V a
	tryOpenDevice (Ljava/lang/String;)Ljava/util/OptionalLong; b
com/mojang/blaze3d/audio/Library$ChannelPool dym$a
	acquire ()Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V b
	getMaxCount ()I c
	getUsedCount ()I d
	release (Lcom/mojang/blaze3d/audio/Channel;)Z a
com/mojang/blaze3d/audio/Library$CountingChannelPool dym$b
	activeChannels b
	limit a
	acquire ()Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V b
	getMaxCount ()I c
	getUsedCount ()I d
	release (Lcom/mojang/blaze3d/audio/Channel;)Z a
com/mojang/blaze3d/audio/Library$Pool dym$c
	$VALUES c
	STATIC a
	STREAMING b
	$values ()[Lcom/mojang/blaze3d/audio/Library$Pool; a
com/mojang/blaze3d/audio/Listener dyn
	gain a
	position b
	getGain ()F b
	getListenerPosition ()Lnet/minecraft/world/phys/Vec3; a
	reset ()V c
	setGain (F)V a
	setListenerOrientation (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;)V a
	setListenerPosition (Lnet/minecraft/world/phys/Vec3;)V a
com/mojang/blaze3d/audio/OggAudioStream dyo
	EXPECTED_MAX_FRAME_SIZE a
	audioFormat c
	buffer e
	handle b
	input d
	convertMono (Ljava/nio/FloatBuffer;Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)V a
	convertStereo (Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)V a
	forwardBuffer ()V d
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
	readAll ()Ljava/nio/ByteBuffer; b
	readFrame (Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)Z a
	refillFromStream ()Z c
com/mojang/blaze3d/audio/OggAudioStream$OutputConcat dyo$a
	bufferSize b
	buffers a
	byteCount c
	currentBuffer d
	createNewBuffer ()V b
	get ()Ljava/nio/ByteBuffer; a
	put (F)V a
com/mojang/blaze3d/audio/OpenAlUtil dyp
	LOGGER a
	alErrorToString (I)Ljava/lang/String; a
	alcErrorToString (I)Ljava/lang/String; b
	audioFormatToOpenAl (Ljavax/sound/sampled/AudioFormat;)I a
	checkALCError (JLjava/lang/String;)Z a
	checkALError (Ljava/lang/String;)Z a
com/mojang/blaze3d/audio/SoundBuffer dyq
	alBuffer d
	data a
	format b
	hasAlBuffer c
	discardAlBuffer ()V b
	getAlBuffer ()Ljava/util/OptionalInt; a
	releaseAlBuffer ()Ljava/util/OptionalInt; c
com/mojang/blaze3d/font/GlyphInfo dys
	getAdvance (Z)F a
	getBoldOffset ()F a
	getShadowOffset ()F b
com/mojang/blaze3d/font/GlyphInfo$SpaceGlyphInfo dys$a
com/mojang/blaze3d/font/GlyphProvider dyt
	getGlyph (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
com/mojang/blaze3d/font/SheetGlyphInfo dyu
	getBearingX ()F i
	getBearingY ()F j
	getDown ()F h
	getLeft ()F e
	getOversample ()F d
	getPixelHeight ()I b
	getPixelWidth ()I a
	getRight ()F f
	getUp ()F g
	isColored ()Z c
	upload (II)V a
com/mojang/blaze3d/font/SpaceProvider dyv
	glyphs a
	builderFromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilder; a
	getGlyph (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
com/mojang/blaze3d/font/TrueTypeGlyphProvider dyw
	ascent h
	font b
	fontMemory a
	oversample c
	pointScale g
	shiftX e
	shiftY f
	skip d
	getGlyph (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
com/mojang/blaze3d/font/TrueTypeGlyphProvider$Glyph dyw$a
	advance f
	bearingX d
	bearingY e
	height c
	index g
	width b
com/mojang/blaze3d/pipeline/MainTarget dyz
	DEFAULT_DIMENSIONS l
	DEFAULT_HEIGHT b
	DEFAULT_WIDTH a
	allocateAttachments (II)Lcom/mojang/blaze3d/pipeline/MainTarget$Dimension; c
	allocateColorAttachment (Lcom/mojang/blaze3d/pipeline/MainTarget$Dimension;)Z a
	allocateDepthAttachment (Lcom/mojang/blaze3d/pipeline/MainTarget$Dimension;)Z b
	createFrameBuffer (II)V b
com/mojang/blaze3d/pipeline/MainTarget$AttachmentState dyz$a
	$VALUES f
	COLOR b
	COLOR_DEPTH d
	DEPTH c
	NONE a
	VALUES e
	$values ()[Lcom/mojang/blaze3d/pipeline/MainTarget$AttachmentState; a
	with (Lcom/mojang/blaze3d/pipeline/MainTarget$AttachmentState;)Lcom/mojang/blaze3d/pipeline/MainTarget$AttachmentState; a
com/mojang/blaze3d/pipeline/MainTarget$Dimension dyz$b
	height b
	width a
	listWithFallback (II)Ljava/util/List; a
com/mojang/blaze3d/pipeline/RenderCall dza
com/mojang/blaze3d/pipeline/RenderPipeline dzb
	isProcessing d
	isRecording b
	processedBuffer e
	recordingBuffer c
	renderCalls a
	renderingBuffer f
	beginProcessing ()Z e
	beginRecording ()Z b
	canBeginProcessing ()Z d
	canBeginRecording ()Z a
	endProcessing ()V g
	endRecording ()V c
	getProcessedQueue ()Ljava/util/concurrent/ConcurrentLinkedQueue; j
	getRecordingQueue ()Ljava/util/concurrent/ConcurrentLinkedQueue; i
	processRecordedQueue ()V f
	recordRenderCall (Lcom/mojang/blaze3d/pipeline/RenderCall;)V a
	startRendering ()Ljava/util/concurrent/ConcurrentLinkedQueue; h
com/mojang/blaze3d/pipeline/RenderTarget dzc
	ALPHA_CHANNEL m
	BLUE_CHANNEL l
	GREEN_CHANNEL b
	RED_CHANNEL a
	clearChannels n
	colorTextureId i
	depthBufferId j
	filterMode k
	frameBufferId h
	height d
	useDepth g
	viewHeight f
	viewWidth e
	width c
	_bindWrite (Z)V c
	_blitToScreen (IIZ)V e
	_resize (IIZ)V d
	bindRead ()V c
	bindWrite (Z)V a
	blitToScreen (II)V a
	blitToScreen (IIZ)V c
	checkStatus ()V b
	clear (Z)V b
	copyDepthFrom (Lcom/mojang/blaze3d/pipeline/RenderTarget;)V a
	createBuffers (IIZ)V b
	destroyBuffers ()V a
	getColorTextureId ()I f
	getDepthTextureId ()I g
	resize (IIZ)V a
	setClearColor (FFFF)V a
	setFilterMode (I)V a
	unbindRead ()V d
	unbindWrite ()V e
com/mojang/blaze3d/pipeline/TextureTarget dzd
com/mojang/blaze3d/platform/ClipboardManager dzf
	FORMAT_UNAVAILABLE a
	clipboardScratchBuffer b
	getClipboard (JLorg/lwjgl/glfw/GLFWErrorCallbackI;)Ljava/lang/String; a
	pushClipboard (JLjava/nio/ByteBuffer;[B)V a
	setClipboard (JLjava/lang/String;)V a
com/mojang/blaze3d/platform/DebugMemoryUntracker dzg
	UNTRACK a
	untrack (J)V a
	untrack (Lorg/lwjgl/system/Pointer;)V a
com/mojang/blaze3d/platform/DisplayData dzh
	fullscreenHeight d
	fullscreenWidth c
	height b
	isFullscreen e
	width a
com/mojang/blaze3d/platform/GlDebug dzi
	CIRCULAR_LOG_SIZE b
	DEBUG_LEVELS e
	DEBUG_LEVELS_ARB f
	LOGGER a
	MESSAGE_BUFFER c
	debugEnabled g
	lastEntry d
	enableDebugCallback (IZ)V a
	getLastOpenGlDebugMessages ()Ljava/util/List; a
	isDebugEnabled ()Z b
	printDebugLog (IIIIIJJ)V a
	printUnknownToken (I)Ljava/lang/String; d
	severityToString (I)Ljava/lang/String; c
	sourceToString (I)Ljava/lang/String; a
	typeToString (I)Ljava/lang/String; b
com/mojang/blaze3d/platform/GlDebug$LogEntry dzi$a
	count f
	id a
	message e
	severity d
	source b
	type c
	isSame (IIIILjava/lang/String;)Z a
com/mojang/blaze3d/platform/GlStateManager$BlendState com/mojang/blaze3d/platform/GlStateManager$a
	dstAlpha e
	dstRgb c
	mode a
	srcAlpha d
	srcRgb b
com/mojang/blaze3d/platform/GlStateManager$BooleanState com/mojang/blaze3d/platform/GlStateManager$b
	enabled b
	state a
	disable ()V a
	enable ()V b
	setEnabled (Z)V a
com/mojang/blaze3d/platform/GlStateManager$ColorLogicState com/mojang/blaze3d/platform/GlStateManager$c
	enable a
	op b
com/mojang/blaze3d/platform/GlStateManager$ColorMask com/mojang/blaze3d/platform/GlStateManager$d
	alpha d
	blue c
	green b
	red a
com/mojang/blaze3d/platform/GlStateManager$CullState com/mojang/blaze3d/platform/GlStateManager$e
	enable a
	mode b
com/mojang/blaze3d/platform/GlStateManager$DepthState com/mojang/blaze3d/platform/GlStateManager$f
	func c
	mask b
	mode a
com/mojang/blaze3d/platform/GlStateManager$LogicOp com/mojang/blaze3d/platform/GlStateManager$g
	$VALUES r
	AND a
	AND_INVERTED b
	AND_REVERSE c
	CLEAR d
	COPY e
	COPY_INVERTED f
	EQUIV g
	INVERT h
	NAND i
	NOOP j
	NOR k
	OR l
	OR_INVERTED m
	OR_REVERSE n
	SET o
	XOR p
	value q
	$values ()[Lcom/mojang/blaze3d/platform/GlStateManager$LogicOp; a
com/mojang/blaze3d/platform/GlStateManager$PolygonOffsetState com/mojang/blaze3d/platform/GlStateManager$h
	factor c
	fill a
	line b
	units d
com/mojang/blaze3d/platform/GlStateManager$ScissorState com/mojang/blaze3d/platform/GlStateManager$i
	mode a
com/mojang/blaze3d/platform/GlStateManager$StencilFunc com/mojang/blaze3d/platform/GlStateManager$j
	func a
	mask c
	ref b
com/mojang/blaze3d/platform/GlStateManager$StencilState com/mojang/blaze3d/platform/GlStateManager$k
	fail c
	func a
	mask b
	zfail d
	zpass e
com/mojang/blaze3d/platform/GlStateManager$TextureState com/mojang/blaze3d/platform/GlStateManager$l
	binding b
	enable a
com/mojang/blaze3d/platform/GlStateManager$Viewport com/mojang/blaze3d/platform/GlStateManager$m
	$VALUES f
	INSTANCE a
	height e
	width d
	x b
	y c
	$values ()[Lcom/mojang/blaze3d/platform/GlStateManager$Viewport; e
	height ()I d
	width ()I c
	x ()I a
	y ()I b
com/mojang/blaze3d/platform/GlUtil dzj
	allocateMemory (I)Ljava/nio/ByteBuffer; a
	freeMemory (Ljava/nio/Buffer;)V a
	getCpuInfo ()Ljava/lang/String; b
	getOpenGLVersion ()Ljava/lang/String; d
	getRenderer ()Ljava/lang/String; c
	getVendor ()Ljava/lang/String; a
com/mojang/blaze3d/platform/InputConstants dzk
	CURSOR bs
	CURSOR_DISABLED bt
	CURSOR_NORMAL bu
	GLFW_RAW_MOUSE_MOTION bx
	GLFW_RAW_MOUSE_MOTION_SUPPORTED bw
	KEY_0 a
	KEY_1 b
	KEY_2 c
	KEY_3 d
	KEY_4 e
	KEY_5 f
	KEY_6 g
	KEY_7 h
	KEY_8 i
	KEY_9 j
	KEY_A k
	KEY_ADD aB
	KEY_APOSTROPHE aC
	KEY_B l
	KEY_BACKSLASH aD
	KEY_BACKSPACE ba
	KEY_C m
	KEY_CAPSLOCK bh
	KEY_COMMA aE
	KEY_D n
	KEY_DELETE bb
	KEY_DOWN ax
	KEY_E o
	KEY_END bc
	KEY_EQUALS aF
	KEY_ESCAPE aZ
	KEY_F p
	KEY_F1 K
	KEY_F10 T
	KEY_F11 U
	KEY_F12 V
	KEY_F13 W
	KEY_F14 X
	KEY_F15 Y
	KEY_F16 Z
	KEY_F17 aa
	KEY_F18 ab
	KEY_F19 ac
	KEY_F2 L
	KEY_F20 ad
	KEY_F21 ae
	KEY_F22 af
	KEY_F23 ag
	KEY_F24 ah
	KEY_F25 ai
	KEY_F3 M
	KEY_F4 N
	KEY_F5 O
	KEY_F6 P
	KEY_F7 Q
	KEY_F8 R
	KEY_F9 S
	KEY_G q
	KEY_GRAVE aG
	KEY_H r
	KEY_HOME bd
	KEY_I s
	KEY_INSERT be
	KEY_J t
	KEY_K u
	KEY_L v
	KEY_LALT aQ
	KEY_LBRACKET aH
	KEY_LCONTROL aR
	KEY_LEFT ay
	KEY_LSHIFT aS
	KEY_LWIN aT
	KEY_M w
	KEY_MINUS aI
	KEY_MULTIPLY aJ
	KEY_N x
	KEY_NUMLOCK aj
	KEY_NUMPAD0 ak
	KEY_NUMPAD1 al
	KEY_NUMPAD2 am
	KEY_NUMPAD3 an
	KEY_NUMPAD4 ao
	KEY_NUMPAD5 ap
	KEY_NUMPAD6 aq
	KEY_NUMPAD7 ar
	KEY_NUMPAD8 as
	KEY_NUMPAD9 at
	KEY_NUMPADCOMMA au
	KEY_NUMPADENTER av
	KEY_NUMPADEQUALS aw
	KEY_O y
	KEY_P z
	KEY_PAGEDOWN bf
	KEY_PAGEUP bg
	KEY_PAUSE bi
	KEY_PERIOD aK
	KEY_PRINTSCREEN bk
	KEY_Q A
	KEY_R B
	KEY_RALT aU
	KEY_RBRACKET aL
	KEY_RCONTROL aV
	KEY_RETURN aY
	KEY_RIGHT az
	KEY_RSHIFT aW
	KEY_RWIN aX
	KEY_S C
	KEY_SCROLLLOCK bj
	KEY_SEMICOLON aM
	KEY_SLASH aN
	KEY_SPACE aO
	KEY_T D
	KEY_TAB aP
	KEY_U E
	KEY_UP aA
	KEY_V F
	KEY_W G
	KEY_X H
	KEY_Y I
	KEY_Z J
	MOD_CONTROL br
	MOUSE_BUTTON_LEFT bo
	MOUSE_BUTTON_MIDDLE bp
	MOUSE_BUTTON_RIGHT bq
	PRESS bl
	RELEASE bm
	REPEAT bn
	UNKNOWN bv
	getKey (II)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
	getKey (Ljava/lang/String;)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
	grabOrReleaseMouse (JIDD)V a
	isKeyDown (JI)Z a
	isRawMouseInputSupported ()Z a
	setupKeyboardCallbacks (JLorg/lwjgl/glfw/GLFWKeyCallbackI;Lorg/lwjgl/glfw/GLFWCharModsCallbackI;)V a
	setupMouseCallbacks (JLorg/lwjgl/glfw/GLFWCursorPosCallbackI;Lorg/lwjgl/glfw/GLFWMouseButtonCallbackI;Lorg/lwjgl/glfw/GLFWScrollCallbackI;Lorg/lwjgl/glfw/GLFWDropCallbackI;)V a
	updateRawMouseInput (JZ)V a
com/mojang/blaze3d/platform/InputConstants$Key dzk$a
	NAME_MAP e
	displayName d
	name a
	type b
	value c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getName ()Ljava/lang/String; c
	getNumericKeyValue ()Ljava/util/OptionalInt; e
	getType ()Lcom/mojang/blaze3d/platform/InputConstants$Type; a
	getValue ()I b
com/mojang/blaze3d/platform/InputConstants$Type dzk$b
	$VALUES g
	KEYSYM a
	MOUSE c
	SCANCODE b
	defaultPrefix e
	displayTextSupplier f
	map d
	$values ()[Lcom/mojang/blaze3d/platform/InputConstants$Type; a
	addKey (Lcom/mojang/blaze3d/platform/InputConstants$Type;Ljava/lang/String;I)V a
	getOrCreate (I)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
com/mojang/blaze3d/platform/Lighting dzl
	DIFFUSE_LIGHT_0 a
	DIFFUSE_LIGHT_1 b
	INVENTORY_DIFFUSE_LIGHT_0 e
	INVENTORY_DIFFUSE_LIGHT_1 f
	NETHER_DIFFUSE_LIGHT_0 c
	NETHER_DIFFUSE_LIGHT_1 d
	setupFor3DItems ()V b
	setupForEntityInInventory ()V c
	setupForFlatItems ()V a
	setupLevel (Lcom/mojang/math/Matrix4f;)V b
	setupNetherLevel (Lcom/mojang/math/Matrix4f;)V a
com/mojang/blaze3d/platform/MacosUtil dzm
	NS_FULL_SCREEN_WINDOW_MASK a
	getNsWindow (J)Ljava/util/Optional; b
	isInKioskMode (Lca/weblite/objc/NSObject;)Z a
	loadIcon (Ljava/io/InputStream;)V a
	toggleFullscreen (J)V a
	toggleFullscreen (Lca/weblite/objc/NSObject;)V b
com/mojang/blaze3d/platform/MemoryTracker dzn
	ALLOCATOR a
	create (I)Ljava/nio/ByteBuffer; a
	resize (Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer; a
com/mojang/blaze3d/platform/Monitor dzo
	currentMode c
	monitor a
	videoModes b
	x d
	y e
	getCurrentMode ()Lcom/mojang/blaze3d/platform/VideoMode; b
	getMode (I)Lcom/mojang/blaze3d/platform/VideoMode; a
	getModeCount ()I e
	getMonitor ()J f
	getPreferredVidMode (Ljava/util/Optional;)Lcom/mojang/blaze3d/platform/VideoMode; a
	getVideoModeIndex (Lcom/mojang/blaze3d/platform/VideoMode;)I a
	getX ()I c
	getY ()I d
	refreshVideoModes ()V a
com/mojang/blaze3d/platform/MonitorCreator dzp
com/mojang/blaze3d/platform/NativeImage dzq
	LOGGER a
	OFFSET_A b
	OFFSET_B c
	OFFSET_G d
	OFFSET_R e
	OPEN_OPTIONS f
	format g
	height i
	pixels k
	size l
	useStbFree j
	width h
	_upload (IIIIIIIZZZZ)V b
	asByteArray ()[B f
	blendPixel (III)V b
	checkAllocated ()V i
	combine (IIII)I a
	copyFrom (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	copyFromFont (Lorg/lwjgl/stb/STBTTFontinfo;IIIFFFFII)V a
	copyRect (IIIIIIZZ)V a
	downloadDepthBuffer (F)V a
	downloadTexture (IZ)V a
	drawPixels ()V e
	fillRect (IIIII)V a
	flipY ()V g
	format ()Lcom/mojang/blaze3d/platform/NativeImage$Format; c
	fromBase64 (Ljava/lang/String;)Lcom/mojang/blaze3d/platform/NativeImage; b
	getA (I)I a
	getB (I)I d
	getBlueOrLuminance (II)B d
	getG (I)I c
	getGreenOrLuminance (II)B c
	getHeight ()I b
	getLuminanceOrAlpha (II)B e
	getPixelRGBA (II)I a
	getR (I)I b
	getRedOrLuminance (II)B b
	getWidth ()I a
	isOutsideBounds (II)Z f
	makePixelArray ()[I d
	read (Lcom/mojang/blaze3d/platform/NativeImage$Format;Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Lcom/mojang/blaze3d/platform/NativeImage$Format;Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/platform/NativeImage; a
	resizeSubRectTo (IIIILcom/mojang/blaze3d/platform/NativeImage;)V a
	setFilter (ZZ)V a
	setPixelLuminance (IIB)V a
	setPixelRGBA (III)V a
	untrack ()V h
	upload (IIIIIIIZZ)V a
	upload (IIIIIIIZZZZ)V a
	upload (IIIZ)V a
	writeToChannel (Ljava/nio/channels/WritableByteChannel;)Z a
	writeToFile (Ljava/io/File;)V a
	writeToFile (Ljava/lang/String;)V a
	writeToFile (Ljava/nio/file/Path;)V a
com/mojang/blaze3d/platform/NativeImage$Format dzq$a
	$VALUES r
	LUMINANCE d
	LUMINANCE_ALPHA c
	RGB b
	RGBA a
	alphaOffset p
	blueOffset n
	components e
	glFormat f
	greenOffset m
	hasAlpha k
	hasBlue i
	hasGreen h
	hasLuminance j
	hasRed g
	luminanceOffset o
	redOffset l
	supportedByStb q
	$values ()[Lcom/mojang/blaze3d/platform/NativeImage$Format; x
	alphaOffset ()I n
	blueOffset ()I l
	components ()I a
	getStbFormat (I)Lcom/mojang/blaze3d/platform/NativeImage$Format; a
	glFormat ()I d
	greenOffset ()I k
	hasAlpha ()Z i
	hasBlue ()Z g
	hasGreen ()Z f
	hasLuminance ()Z h
	hasLuminanceOrAlpha ()Z r
	hasLuminanceOrBlue ()Z q
	hasLuminanceOrGreen ()Z p
	hasLuminanceOrRed ()Z o
	hasRed ()Z e
	luminanceOffset ()I m
	luminanceOrAlphaOffset ()I v
	luminanceOrBlueOffset ()I u
	luminanceOrGreenOffset ()I t
	luminanceOrRedOffset ()I s
	redOffset ()I j
	setPackPixelStoreState ()V b
	setUnpackPixelStoreState ()V c
	supportedByStb ()Z w
com/mojang/blaze3d/platform/NativeImage$InternalGlFormat dzq$b
	$VALUES f
	RED d
	RG c
	RGB b
	RGBA a
	glFormat e
	$values ()[Lcom/mojang/blaze3d/platform/NativeImage$InternalGlFormat; b
	glFormat ()I a
com/mojang/blaze3d/platform/NativeImage$WriteCallback dzq$c
	exception b
	output a
	throwIfException ()V a
com/mojang/blaze3d/platform/PngInfo dzr
	height b
	width a
	createCallbacks (Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/PngInfo$StbReader; a
com/mojang/blaze3d/platform/PngInfo$StbReader dzr$a
	closed a
	eof (J)I a
	read (JI)I b
	read (JJI)I a
	skip (I)V a
	skip (JI)V a
com/mojang/blaze3d/platform/PngInfo$StbReaderBufferedChannel dzr$b
	START_BUFFER_SIZE b
	bufferSize e
	channel c
	consumed g
	read f
	readBufferAddress d
	fillReadBuffer (I)V b
	read (JI)I b
	skip (I)V a
com/mojang/blaze3d/platform/PngInfo$StbReaderSeekableByteChannel dzr$c
	channel b
	eof (J)I a
	read (JI)I b
	skip (I)V a
com/mojang/blaze3d/platform/ScreenManager dzs
	LOGGER a
	monitorCreator c
	monitors b
	clamp (III)I a
	findBestMonitor (Lcom/mojang/blaze3d/platform/Window;)Lcom/mojang/blaze3d/platform/Monitor; a
	getMonitor (J)Lcom/mojang/blaze3d/platform/Monitor; a
	onMonitorChange (JI)V a
	shutdown ()V a
com/mojang/blaze3d/platform/VideoMode dzt
	PATTERN g
	blueBits e
	greenBits d
	height b
	redBits c
	refreshRate f
	width a
	getBlueBits ()I e
	getGreenBits ()I d
	getHeight ()I b
	getRedBits ()I c
	getRefreshRate ()I f
	getWidth ()I a
	read (Ljava/lang/String;)Ljava/util/Optional; a
	write ()Ljava/lang/String; g
com/mojang/blaze3d/platform/Window dzu
	LOGGER a
	actuallyFullscreen l
	defaultErrorCallback b
	dirty w
	errorSection v
	eventHandler c
	framebufferHeight r
	framebufferWidth q
	framerateLimit x
	fullscreen k
	guiScale u
	guiScaledHeight t
	guiScaledWidth s
	height p
	preferredFullscreenVideoMode j
	screenManager d
	vsync y
	width o
	window e
	windowedHeight i
	windowedWidth h
	windowedX f
	windowedY g
	x m
	y n
	bootCrash (IJ)V b
	calculateScale (IZ)I a
	changeFullscreenVideoMode ()V g
	checkGlfwError (Ljava/util/function/BiConsumer;)V a
	defaultErrorCallback (IJ)V a
	findBestMonitor ()Lcom/mojang/blaze3d/platform/Monitor; t
	getFramerateLimit ()I d
	getGuiScale ()D s
	getGuiScaledHeight ()I p
	getGuiScaledWidth ()I o
	getHeight ()I l
	getPreferredFullscreenVideoMode ()Ljava/util/Optional; f
	getRefreshRate ()I a
	getScreenHeight ()I n
	getScreenWidth ()I m
	getWidth ()I k
	getWindow ()J i
	getX ()I q
	getY ()I r
	isFullscreen ()Z j
	onEnter (JZ)V b
	onFocus (JZ)V a
	onFramebufferResize (JII)V b
	onMove (JII)V a
	onResize (JII)V c
	readIconPixels (Ljava/io/InputStream;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;)Ljava/nio/ByteBuffer; a
	refreshFramebufferSize ()V v
	setBootErrorCallback ()V u
	setDefaultErrorCallback ()V c
	setErrorSection (Ljava/lang/String;)V a
	setFramerateLimit (I)V a
	setGuiScale (D)V a
	setHeight (I)V c
	setIcon (Ljava/io/InputStream;Ljava/io/InputStream;)V a
	setMode ()V w
	setPreferredFullscreenVideoMode (Ljava/util/Optional;)V a
	setTitle (Ljava/lang/String;)V b
	setWidth (I)V b
	setWindowed (II)V a
	shouldClose ()Z b
	toggleFullScreen ()V h
	updateDisplay ()V e
	updateFullscreen (Z)V c
	updateRawMouseInput (Z)V b
	updateVsync (Z)V a
com/mojang/blaze3d/platform/Window$WindowInitFailed dzu$a
com/mojang/blaze3d/platform/WindowEventHandler dzv
	cursorEntered ()V b
	resizeDisplay ()V a
	setWindowActive (Z)V a
com/mojang/blaze3d/preprocessor/GlslPreprocessor dzx
	C_COMMENT a
	LINE_COMMENT b
	REGEX_ENDS_WITH_WHITESPACE e
	REGEX_MOJ_IMPORT c
	REGEX_VERSION d
	applyImport (ZLjava/lang/String;)Ljava/lang/String; a
	isDirectiveDisabled (Ljava/lang/String;Ljava/util/regex/Matcher;I)Z a
	isDirectiveEnabled (Ljava/lang/String;Ljava/util/regex/Matcher;)Z a
	process (Ljava/lang/String;)Ljava/util/List; a
	processImports (Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor$Context;Ljava/lang/String;)Ljava/util/List; a
	processVersions (Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor$Context;)Ljava/lang/String; a
	setVersion (Ljava/lang/String;I)Ljava/lang/String; a
com/mojang/blaze3d/preprocessor/GlslPreprocessor$Context dzx$a
	glslVersion a
	sourceId b
com/mojang/blaze3d/shaders/AbstractUniform dzz
	set (F)V a
	set (FF)V a
	set (FFF)V a
	set (FFFF)V a
	set (I)V a
	set (II)V a
	set (III)V a
	set (IIII)V b
	set (Lcom/mojang/math/Matrix3f;)V a
	set (Lcom/mojang/math/Matrix4f;)V a
	set (Lcom/mojang/math/Vector3f;)V a
	set (Lcom/mojang/math/Vector4f;)V a
	set ([F)V a
	setMat2x2 (FFFF)V c
	setMat2x3 (FFFFFF)V a
	setMat2x4 (FFFFFFFF)V a
	setMat3x2 (FFFFFF)V b
	setMat3x3 (FFFFFFFFF)V a
	setMat3x4 (FFFFFFFFFFFF)V a
	setMat4x2 (FFFFFFFF)V b
	setMat4x3 (FFFFFFFFFFFF)V b
	setMat4x4 (FFFFFFFFFFFFFFFF)V a
	setSafe (FFFF)V b
	setSafe (IIII)V a
com/mojang/blaze3d/shaders/BlendMode eaa
	blendFunc f
	dstAlphaFactor e
	dstColorFactor d
	lastApplied a
	opaque h
	separateBlend g
	srcAlphaFactor c
	srcColorFactor b
	apply ()V a
	isOpaque ()Z b
	stringToBlendFactor (Ljava/lang/String;)I b
	stringToBlendFunc (Ljava/lang/String;)I a
com/mojang/blaze3d/shaders/Effect eab
com/mojang/blaze3d/shaders/EffectProgram eac
	PREPROCESSOR a
	references b
	attachToEffect (Lcom/mojang/blaze3d/shaders/Effect;)V a
	close ()V a
	compileShader (Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/EffectProgram; a
com/mojang/blaze3d/shaders/FogShape ead
	$VALUES d
	CYLINDER b
	SPHERE a
	index c
	$values ()[Lcom/mojang/blaze3d/shaders/FogShape; b
	getIndex ()I a
com/mojang/blaze3d/shaders/Program eae
	MAX_LOG_LENGTH a
	id d
	name c
	type b
	attachToShader (Lcom/mojang/blaze3d/shaders/Shader;)V a
	close ()V a
	compileShader (Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor;)Lcom/mojang/blaze3d/shaders/Program; a
	compileShaderInternal (Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor;)I b
	getId ()I c
	getName ()Ljava/lang/String; b
com/mojang/blaze3d/shaders/Program$Type eae$a
	$VALUES g
	FRAGMENT b
	VERTEX a
	extension d
	glType e
	name c
	programs f
	$values ()[Lcom/mojang/blaze3d/shaders/Program$Type; e
	getExtension ()Ljava/lang/String; b
	getGlType ()I d
	getName ()Ljava/lang/String; a
	getPrograms ()Ljava/util/Map; c
com/mojang/blaze3d/shaders/ProgramManager eaf
	LOGGER a
	createProgram ()I a
	glUseProgram (I)V a
	linkShader (Lcom/mojang/blaze3d/shaders/Shader;)V b
	releaseProgram (Lcom/mojang/blaze3d/shaders/Shader;)V a
com/mojang/blaze3d/shaders/Shader eag
	attachToProgram ()V e
	getFragmentProgram ()Lcom/mojang/blaze3d/shaders/Program; d
	getId ()I a
	getVertexProgram ()Lcom/mojang/blaze3d/shaders/Program; c
	markDirty ()V b
com/mojang/blaze3d/shaders/Uniform eah
	LOGGER l
	TRANSPOSE_MATRICIES m
	UT_FLOAT1 e
	UT_FLOAT2 f
	UT_FLOAT3 g
	UT_FLOAT4 h
	UT_INT1 a
	UT_INT2 b
	UT_INT3 c
	UT_INT4 d
	UT_MAT2 i
	UT_MAT3 j
	UT_MAT4 k
	count o
	dirty t
	floatValues r
	intValues q
	location n
	name s
	parent u
	type p
	getCount ()I d
	getFloatBuffer ()Ljava/nio/FloatBuffer; g
	getIntBuffer ()Ljava/nio/IntBuffer; f
	getLocation ()I c
	getName ()Ljava/lang/String; a
	getType ()I e
	getTypeFromString (Ljava/lang/String;)I a
	glBindAttribLocation (IILjava/lang/CharSequence;)V a
	glGetAttribLocation (ILjava/lang/CharSequence;)I b
	glGetUniformLocation (ILjava/lang/CharSequence;)I a
	markDirty ()V h
	set (F)V a
	set (FF)V a
	set (FFF)V a
	set (FFFF)V a
	set (I)V a
	set (IF)V a
	set (II)V a
	set (III)V a
	set (IIII)V b
	set (Lcom/mojang/math/Matrix3f;)V a
	set (Lcom/mojang/math/Matrix4f;)V a
	set (Lcom/mojang/math/Vector3f;)V a
	set (Lcom/mojang/math/Vector4f;)V a
	set ([F)V a
	setLocation (I)V b
	setMat2x2 (FFFF)V c
	setMat2x3 (FFFFFF)V a
	setMat2x4 (FFFFFFFF)V a
	setMat3x2 (FFFFFF)V b
	setMat3x3 (FFFFFFFFF)V a
	setMat3x4 (FFFFFFFFFFFF)V a
	setMat4x2 (FFFFFFFF)V b
	setMat4x3 (FFFFFFFFFFFF)V b
	setMat4x4 (FFFFFFFFFFFFFFFF)V a
	setSafe (FFFF)V b
	setSafe (IIII)V a
	upload ()V b
	uploadAsFloat ()V j
	uploadAsInteger ()V i
	uploadAsMatrix ()V k
	uploadInteger (II)V b
com/mojang/blaze3d/systems/RenderSystem$AutoStorageIndexBuffer com/mojang/blaze3d/systems/RenderSystem$a
	generator c
	indexCount f
	indexStride b
	name d
	type e
	vertexStride a
	bind (I)V b
	ensureStorage (I)V c
	hasStorage (I)Z a
	intConsumer (Ljava/nio/ByteBuffer;)Lit/unimi/dsi/fastutil/ints/IntConsumer; a
	type ()Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; a
com/mojang/blaze3d/systems/RenderSystem$AutoStorageIndexBuffer$IndexGenerator com/mojang/blaze3d/systems/RenderSystem$a$a
com/mojang/blaze3d/systems/TimerQuery eaj
	nextQueryName a
	beginProfile ()V b
	endProfile ()Lcom/mojang/blaze3d/systems/TimerQuery$FrameProfile; c
	getInstance ()Ljava/util/Optional; a
com/mojang/blaze3d/systems/TimerQuery$FrameProfile eaj$a
	CANCELLED_RESULT b
	NO_RESULT a
	queryName c
	result d
	cancel ()V a
	get ()J c
	isDone ()Z b
com/mojang/blaze3d/systems/TimerQuery$TimerQueryLazyLoader eaj$b
	INSTANCE a
	instantiate ()Lcom/mojang/blaze3d/systems/TimerQuery; a
com/mojang/blaze3d/vertex/BufferBuilder eal
	GROWTH_SIZE f
	LOGGER g
	buffer h
	building s
	currentElement m
	elementIndex n
	fastFormat q
	format o
	fullFormat r
	indexOnly x
	mode p
	nextElementByte k
	renderedBufferCount i
	renderedBufferPointer j
	sortX u
	sortY v
	sortZ w
	sortingPoints t
	vertices l
	begin (Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;Lcom/mojang/blaze3d/vertex/VertexFormat;)V a
	bufferSlice (II)Ljava/nio/ByteBuffer; c
	building ()Z j
	clear ()V g
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	currentElement ()Lcom/mojang/blaze3d/vertex/VertexFormatElement; i
	discard ()V h
	end ()Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer; d
	endOrDiscardIfEmpty ()Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer; c
	endVertex ()V e
	ensureCapacity (I)V d
	ensureDrawing ()V n
	ensureVertexCapacity ()V l
	getSortState ()Lcom/mojang/blaze3d/vertex/BufferBuilder$SortState; a
	intConsumer (ILcom/mojang/blaze3d/vertex/VertexFormat$IndexType;)Lit/unimi/dsi/fastutil/ints/IntConsumer; a
	isCurrentBatchEmpty ()Z b
	makeQuadSortingPoints ()[Lcom/mojang/math/Vector3f; m
	nextElement ()V f
	putByte (IB)V a
	putFloat (IF)V a
	putShort (IS)V a
	putSortedQuadIndices (Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType;)V a
	releaseRenderedBuffer ()V q
	reset ()V p
	restoreSortState (Lcom/mojang/blaze3d/vertex/BufferBuilder$SortState;)V a
	roundUp (I)I e
	setQuadSortOrigin (FFF)V a
	storeRenderedBuffer ()Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer; o
	switchFormat (Lcom/mojang/blaze3d/vertex/VertexFormat;)V a
	vertex (FFFFFFFFFIIFFF)V a
com/mojang/blaze3d/vertex/BufferBuilder$DrawState eal$a
	format a
	indexCount c
	indexOnly f
	indexType e
	mode d
	sequentialIndex g
	vertexCount b
	bufferSize ()I f
	format ()Lcom/mojang/blaze3d/vertex/VertexFormat; g
	indexBufferEnd ()I e
	indexBufferSize ()I n
	indexBufferStart ()I d
	indexCount ()I i
	indexOnly ()Z l
	indexType ()Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; k
	mode ()Lcom/mojang/blaze3d/vertex/VertexFormat$Mode; j
	sequentialIndex ()Z m
	vertexBufferEnd ()I c
	vertexBufferSize ()I a
	vertexBufferStart ()I b
	vertexCount ()I h
com/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer eal$b
	drawState c
	pointer b
	released d
	drawState ()Lcom/mojang/blaze3d/vertex/BufferBuilder$DrawState; c
	indexBuffer ()Ljava/nio/ByteBuffer; b
	isEmpty ()Z d
	release ()V e
	vertexBuffer ()Ljava/nio/ByteBuffer; a
com/mojang/blaze3d/vertex/BufferBuilder$SortState eal$c
	mode a
	sortX d
	sortY e
	sortZ f
	sortingPoints c
	vertices b
com/mojang/blaze3d/vertex/BufferUploader eam
	lastImmediateBuffer a
	_drawWithShader (Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer;)V c
	bindImmediateBuffer (Lcom/mojang/blaze3d/vertex/VertexBuffer;)V a
	bindImmediateBuffer (Lcom/mojang/blaze3d/vertex/VertexFormat;)Lcom/mojang/blaze3d/vertex/VertexBuffer; a
	draw (Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer;)V b
	drawWithShader (Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer;)V a
	invalidate ()V b
	reset ()V a
	upload (Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer;)Lcom/mojang/blaze3d/vertex/VertexBuffer; d
com/mojang/blaze3d/vertex/BufferVertexConsumer ean
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	currentElement ()Lcom/mojang/blaze3d/vertex/VertexFormatElement; i
	nextElement ()V f
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	normalIntValue (F)B a
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	putByte (IB)V a
	putFloat (IF)V a
	putShort (IS)V a
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	uvShort (SSI)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/DefaultVertexFormat eao
	BLIT_SCREEN i
	BLOCK j
	ELEMENT_COLOR b
	ELEMENT_NORMAL f
	ELEMENT_PADDING g
	ELEMENT_POSITION a
	ELEMENT_UV h
	ELEMENT_UV0 c
	ELEMENT_UV1 d
	ELEMENT_UV2 e
	NEW_ENTITY k
	PARTICLE l
	POSITION m
	POSITION_COLOR n
	POSITION_COLOR_LIGHTMAP p
	POSITION_COLOR_NORMAL o
	POSITION_COLOR_TEX r
	POSITION_COLOR_TEX_LIGHTMAP t
	POSITION_TEX q
	POSITION_TEX_COLOR s
	POSITION_TEX_COLOR_NORMAL v
	POSITION_TEX_LIGHTMAP_COLOR u
com/mojang/blaze3d/vertex/DefaultedVertexConsumer eap
	defaultA e
	defaultB d
	defaultColorSet a
	defaultG c
	defaultR b
	defaultColor (IIII)V b
	unsetDefaultColor ()V k
com/mojang/blaze3d/vertex/PoseStack eaq
	poseStack a
	clear ()Z d
	last ()Lcom/mojang/blaze3d/vertex/PoseStack$Pose; c
	mulPose (Lcom/mojang/math/Quaternion;)V a
	mulPoseMatrix (Lcom/mojang/math/Matrix4f;)V a
	popPose ()V b
	pushPose ()V a
	scale (FFF)V a
	setIdentity ()V e
	translate (DDD)V a
com/mojang/blaze3d/vertex/PoseStack$Pose eaq$a
	normal b
	pose a
	normal ()Lcom/mojang/math/Matrix3f; b
	pose ()Lcom/mojang/math/Matrix4f; a
com/mojang/blaze3d/vertex/SheetedDecalTextureGenerator ear
	cameraInversePose g
	delegate f
	lightCoords n
	normalInversePose h
	nx o
	ny p
	nz q
	overlayU l
	overlayV m
	x i
	y j
	z k
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	endVertex ()V e
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	resetState ()V a
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/Tesselator eas
	INSTANCE d
	MAX_FLOATS b
	MAX_MEMORY_USE a
	builder c
	end ()V b
	getBuilder ()Lcom/mojang/blaze3d/vertex/BufferBuilder; c
	getInstance ()Lcom/mojang/blaze3d/vertex/Tesselator; a
com/mojang/blaze3d/vertex/VertexBuffer eat
	arrayObjectId c
	format d
	indexBufferId b
	indexCount g
	indexType f
	mode h
	sequentialIndices e
	vertexBufferId a
	_drawWithShader (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/ShaderInstance;)V b
	bind ()V a
	draw ()V c
	drawWithShader (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/ShaderInstance;)V a
	getFormat ()Lcom/mojang/blaze3d/vertex/VertexFormat; d
	getIndexType ()Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; f
	isInvalid ()Z e
	unbind ()V b
	upload (Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer;)V a
	uploadIndexBuffer (Lcom/mojang/blaze3d/vertex/BufferBuilder$DrawState;Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/systems/RenderSystem$AutoStorageIndexBuffer; b
	uploadVertexBuffer (Lcom/mojang/blaze3d/vertex/BufferBuilder$DrawState;Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/vertex/VertexFormat; a
com/mojang/blaze3d/vertex/VertexConsumer eau
	color (FFFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	color (I)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V e
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	normal (Lcom/mojang/math/Matrix3f;FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	overlayCoords (I)Lcom/mojang/blaze3d/vertex/VertexConsumer; c
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	putBulkData (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;FFFII)V a
	putBulkData (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;[FFFF[IIZ)V a
	unsetDefaultColor ()V k
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (I)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
	vertex (Lcom/mojang/math/Matrix4f;FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/VertexFormat eav
	elementMapping b
	elements a
	immediateDrawVertexBuffer e
	offsets c
	vertexSize d
	_clearBufferState ()V i
	_setupBufferState ()V h
	clearBufferState ()V f
	getElementAttributeNames ()Lcom/google/common/collect/ImmutableList; d
	getElements ()Lcom/google/common/collect/ImmutableList; c
	getImmediateDrawVertexBuffer ()Lcom/mojang/blaze3d/vertex/VertexBuffer; g
	getIntegerSize ()I a
	getVertexSize ()I b
	setupBufferState ()V e
com/mojang/blaze3d/vertex/VertexFormat$IndexType eav$a
	$VALUES f
	BYTE a
	INT c
	SHORT b
	asGLType d
	bytes e
	$values ()[Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; a
	least (I)Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; a
com/mojang/blaze3d/vertex/VertexFormat$Mode eav$b
	$VALUES m
	DEBUG_LINES c
	DEBUG_LINE_STRIP d
	LINES a
	LINE_STRIP b
	QUADS h
	TRIANGLES e
	TRIANGLE_FAN g
	TRIANGLE_STRIP f
	asGLMode i
	connectedPrimitives l
	primitiveLength j
	primitiveStride k
	$values ()[Lcom/mojang/blaze3d/vertex/VertexFormat$Mode; a
	indexCount (I)I a
com/mojang/blaze3d/vertex/VertexFormatElement eaw
	byteSize e
	count d
	index c
	type a
	usage b
	clearBufferState (I)V a
	getByteSize ()I e
	getCount ()I c
	getIndex ()I d
	getType ()Lcom/mojang/blaze3d/vertex/VertexFormatElement$Type; a
	getUsage ()Lcom/mojang/blaze3d/vertex/VertexFormatElement$Usage; b
	isPosition ()Z f
	setupBufferState (IJI)V a
	supportsUsage (ILcom/mojang/blaze3d/vertex/VertexFormatElement$Usage;)Z a
com/mojang/blaze3d/vertex/VertexFormatElement$Type eaw$a
	$VALUES k
	BYTE c
	FLOAT a
	INT g
	SHORT e
	UBYTE b
	UINT f
	USHORT d
	glType j
	name i
	size h
	$values ()[Lcom/mojang/blaze3d/vertex/VertexFormatElement$Type; d
	getGlType ()I c
	getName ()Ljava/lang/String; b
	getSize ()I a
com/mojang/blaze3d/vertex/VertexFormatElement$Usage eaw$b
	$VALUES j
	COLOR c
	GENERIC f
	NORMAL b
	PADDING e
	POSITION a
	UV d
	clearState i
	name g
	setupState h
	$values ()[Lcom/mojang/blaze3d/vertex/VertexFormatElement$Usage; b
	clearBufferState (II)V a
	getName ()Ljava/lang/String; a
	setupBufferState (IIIJII)V a
com/mojang/blaze3d/vertex/VertexFormatElement$Usage$ClearState eaw$b$a
com/mojang/blaze3d/vertex/VertexFormatElement$Usage$SetupState eaw$b$b
com/mojang/blaze3d/vertex/VertexMultiConsumer eax
	create ()Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	create (Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	create (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	create ([Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/VertexMultiConsumer$Double eax$a
	first a
	second b
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V e
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V k
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
com/mojang/blaze3d/vertex/VertexMultiConsumer$Multiple eax$b
	delegates a
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V e
	forEach (Ljava/util/function/Consumer;)V a
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V k
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
com/mojang/math/Constants a
	DEG_TO_RAD c
	EPSILON d
	PI a
	RAD_TO_DEG b
com/mojang/math/FieldsAreNonnullByDefault b
com/mojang/math/Matrix3f c
	CS l
	G k
	ORDER j
	SQ2 n
	SS m
	m00 a
	m01 b
	m02 c
	m10 d
	m11 e
	m12 f
	m20 g
	m21 h
	m22 i
	add (Lcom/mojang/math/Matrix3f;)V c
	adjugateAndDet ()F d
	approxGivensQuat (FFF)Lcom/mojang/datafixers/util/Pair; b
	bufferIndex (II)I a
	copy ()Lcom/mojang/math/Matrix3f; h
	createScaleMatrix (FFF)Lcom/mojang/math/Matrix3f; a
	determinant ()F e
	invert ()Z f
	load (Lcom/mojang/math/Matrix3f;)V a
	load (Ljava/nio/FloatBuffer;)V a
	load (Ljava/nio/FloatBuffer;Z)V a
	loadTransposed (Ljava/nio/FloatBuffer;)V b
	mul (F)V a
	mul (Lcom/mojang/math/Matrix3f;)V b
	mul (Lcom/mojang/math/Quaternion;)V a
	qrGivensQuat (FF)Lcom/mojang/datafixers/util/Pair; a
	set (IIF)V a
	setIdentity ()V c
	sortSingularValues (Lcom/mojang/math/Matrix3f;Lcom/mojang/math/Quaternion;)V a
	stepJacobi (Lcom/mojang/math/Matrix3f;)Lcom/mojang/math/Quaternion; e
	store (Ljava/nio/FloatBuffer;)V c
	store (Ljava/nio/FloatBuffer;Z)V b
	storeTransposed (Ljava/nio/FloatBuffer;)V d
	sub (Lcom/mojang/math/Matrix3f;)V d
	svdDecompose ()Lorg/apache/commons/lang3/tuple/Triple; b
	trace ()F g
	transpose ()V a
com/mojang/math/Matrix4f d
	ORDER q
	m00 a
	m01 b
	m02 c
	m03 d
	m10 e
	m11 f
	m12 g
	m13 h
	m20 i
	m21 j
	m22 k
	m23 l
	m30 m
	m31 n
	m32 o
	m33 p
	add (Lcom/mojang/math/Matrix4f;)V c
	adjugateAndDet ()F c
	bufferIndex (II)I a
	copy ()Lcom/mojang/math/Matrix4f; h
	createScaleMatrix (FFF)Lcom/mojang/math/Matrix4f; b
	createTranslateMatrix (FFF)Lcom/mojang/math/Matrix4f; c
	determinant ()F d
	invert ()Z f
	isInteger ()Z a
	isInteger (F)Z b
	load (Lcom/mojang/math/Matrix4f;)V a
	load (Ljava/nio/FloatBuffer;)V a
	load (Ljava/nio/FloatBuffer;Z)V a
	loadTransposed (Ljava/nio/FloatBuffer;)V b
	multiply (F)V a
	multiply (Lcom/mojang/math/Matrix4f;)V b
	multiply (Lcom/mojang/math/Quaternion;)V a
	multiplyWithTranslation (FFF)V a
	orthographic (FFFF)Lcom/mojang/math/Matrix4f; a
	orthographic (FFFFFF)Lcom/mojang/math/Matrix4f; a
	perspective (DFFF)Lcom/mojang/math/Matrix4f; a
	setIdentity ()V b
	store (Ljava/nio/FloatBuffer;)V c
	store (Ljava/nio/FloatBuffer;Z)V b
	storeTransposed (Ljava/nio/FloatBuffer;)V d
	subtract (Lcom/mojang/math/Matrix4f;)V d
	trace ()F g
	translate (Lcom/mojang/math/Vector3f;)V a
	transpose ()V e
com/mojang/math/MethodsReturnNonnullByDefault e
com/mojang/math/OctahedralGroup f
	$VALUES ag
	IDENTITY a
	INVERSION y
	INVERT_X z
	INVERT_Y A
	INVERT_Z B
	ROT_120_NNN e
	ROT_120_NNP f
	ROT_120_NPN g
	ROT_120_NPP h
	ROT_120_PNN i
	ROT_120_PNP j
	ROT_120_PPN k
	ROT_120_PPP l
	ROT_180_EDGE_XY_NEG m
	ROT_180_EDGE_XY_POS n
	ROT_180_EDGE_XZ_NEG o
	ROT_180_EDGE_XZ_POS p
	ROT_180_EDGE_YZ_NEG q
	ROT_180_EDGE_YZ_POS r
	ROT_180_FACE_XY b
	ROT_180_FACE_XZ c
	ROT_180_FACE_YZ d
	ROT_60_REF_NNN C
	ROT_60_REF_NNP D
	ROT_60_REF_NPN E
	ROT_60_REF_NPP F
	ROT_60_REF_PNN G
	ROT_60_REF_PNP H
	ROT_60_REF_PPN I
	ROT_60_REF_PPP J
	ROT_90_REF_X_NEG Q
	ROT_90_REF_X_POS R
	ROT_90_REF_Y_NEG S
	ROT_90_REF_Y_POS T
	ROT_90_REF_Z_NEG U
	ROT_90_REF_Z_POS V
	ROT_90_X_NEG s
	ROT_90_X_POS t
	ROT_90_Y_NEG u
	ROT_90_Y_POS v
	ROT_90_Z_NEG w
	ROT_90_Z_POS x
	SWAP_NEG_XY N
	SWAP_NEG_XZ P
	SWAP_NEG_YZ O
	SWAP_XY K
	SWAP_XZ M
	SWAP_YZ L
	cayleyTable ae
	inverseTable af
	invertX aa
	invertY ab
	invertZ ac
	name Y
	permutation ad
	rotatedDirections Z
	transformation X
	$values ()[Lcom/mojang/math/OctahedralGroup; e
	compose (Lcom/mojang/math/OctahedralGroup;)Lcom/mojang/math/OctahedralGroup; a
	getSerializedName ()Ljava/lang/String; c
	inverse ()Lcom/mojang/math/OctahedralGroup; a
	inverts (Lnet/minecraft/core/Direction$Axis;)Z a
	packInversions ()Lit/unimi/dsi/fastutil/booleans/BooleanList; d
	rotate (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	rotate (Lnet/minecraft/core/FrontAndTop;)Lnet/minecraft/core/FrontAndTop; a
	transformation ()Lcom/mojang/math/Matrix3f; b
com/mojang/math/Quaternion g
	ONE a
	i b
	j c
	k d
	r e
	conj ()V i
	copy ()Lcom/mojang/math/Quaternion; k
	cos (F)F b
	fromXYZ (FFF)Lcom/mojang/math/Quaternion; b
	fromXYZ (Lcom/mojang/math/Vector3f;)Lcom/mojang/math/Quaternion; b
	fromXYZDegrees (Lcom/mojang/math/Vector3f;)Lcom/mojang/math/Quaternion; a
	fromYXZ (FFF)Lcom/mojang/math/Quaternion; a
	i ()F e
	j ()F f
	k ()F g
	mul (F)V a
	mul (Lcom/mojang/math/Quaternion;)V a
	normalize ()V j
	r ()F h
	set (FFFF)V a
	sin (F)F c
	slerp (Lcom/mojang/math/Quaternion;F)V a
	toXYZ ()Lcom/mojang/math/Vector3f; a
	toXYZDegrees ()Lcom/mojang/math/Vector3f; b
	toYXZ ()Lcom/mojang/math/Vector3f; c
	toYXZDegrees ()Lcom/mojang/math/Vector3f; d
com/mojang/math/SymmetricGroup3 h
	$VALUES k
	ORDER i
	P123 a
	P132 c
	P213 b
	P231 d
	P312 e
	P321 f
	cayleyTable j
	permutation g
	transformation h
	$values ()[Lcom/mojang/math/SymmetricGroup3; b
	compose (Lcom/mojang/math/SymmetricGroup3;)Lcom/mojang/math/SymmetricGroup3; a
	permutation (I)I a
	transformation ()Lcom/mojang/math/Matrix3f; a
com/mojang/math/Transformation i
	IDENTITY g
	decomposed b
	leftRotation d
	matrix a
	rightRotation f
	scale e
	translation c
	compose (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; a
	compose (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Quaternion;Lcom/mojang/math/Vector3f;Lcom/mojang/math/Quaternion;)Lcom/mojang/math/Matrix4f; a
	ensureDecomposed ()V h
	getLeftRotation ()Lcom/mojang/math/Quaternion; e
	getMatrix ()Lcom/mojang/math/Matrix4f; c
	getRightRotation ()Lcom/mojang/math/Quaternion; g
	getScale ()Lcom/mojang/math/Vector3f; f
	getTranslation ()Lcom/mojang/math/Vector3f; d
	identity ()Lcom/mojang/math/Transformation; a
	inverse ()Lcom/mojang/math/Transformation; b
	slerp (Lcom/mojang/math/Transformation;F)Lcom/mojang/math/Transformation; a
	toAffine (Lcom/mojang/math/Matrix4f;)Lcom/mojang/datafixers/util/Pair; a
com/mojang/math/Vector3d j
	x a
	y b
	z c
	add (Lcom/mojang/math/Vector3d;)V b
	scale (D)V a
	set (DDD)V a
	set (Lcom/mojang/math/Vector3d;)V a
com/mojang/math/Vector3f k
	CODEC a
	XN b
	XP c
	YN d
	YP e
	ZERO h
	ZN f
	ZP g
	x i
	y j
	z k
	add (FFF)V c
	add (Lcom/mojang/math/Vector3f;)V b
	clamp (FF)V a
	clamp (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;)V a
	copy ()Lcom/mojang/math/Vector3f; e
	cross (Lcom/mojang/math/Vector3f;)V e
	dot (Lcom/mojang/math/Vector3f;)F d
	lerp (Lcom/mojang/math/Vector3f;F)V a
	load (Lcom/mojang/math/Vector3f;)V a
	map (Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)V a
	mul (F)V a
	mul (FFF)V a
	normalize ()Z d
	rotation (F)Lcom/mojang/math/Quaternion; b
	rotationDegrees (F)Lcom/mojang/math/Quaternion; c
	set (FFF)V b
	sub (Lcom/mojang/math/Vector3f;)V c
	transform (Lcom/mojang/math/Matrix3f;)V a
	transform (Lcom/mojang/math/Quaternion;)V a
	x ()F a
	y ()F b
	z ()F c
com/mojang/math/Vector4f l
	w d
	x a
	y b
	z c
	add (FFFF)V b
	dot (Lcom/mojang/math/Vector4f;)F a
	lerp (Lcom/mojang/math/Vector4f;F)V a
	mul (F)V a
	mul (Lcom/mojang/math/Vector3f;)V a
	normalize ()Z e
	perspectiveDivide ()V f
	set (FFFF)V a
	transform (Lcom/mojang/math/Matrix4f;)V a
	transform (Lcom/mojang/math/Quaternion;)V a
	w ()F d
	x ()F a
	y ()F b
	z ()F c
com/mojang/realmsclient/KeyCombo eaz
	chars a
	matchIndex b
	onCompletion c
	keyPressed (C)Z a
	reset ()V a
com/mojang/realmsclient/RealmsMainScreen eba
	BUTTON_LOCATION V
	CONFIGURE_LOCATION P
	CONFIGURE_SERVER_TOOLTIP am
	CROSS_ICON_LOCATION T
	DARKEN_LOCATION S
	EXPIRED_ICON_LOCATION I
	EXPIRES_SOON_ICON_LOCATION J
	INVITATION_ICONS_LOCATION L
	INVITE_ICON_LOCATION M
	LEAVE_ICON_LOCATION K
	LEAVE_SERVER_TOOLTIP al
	LOGGER a
	LOGO_LOCATION O
	NEWS_LOCATION Q
	NEWS_TOOLTIP an
	NO_PENDING_INVITES_TEXT W
	OFF_ICON_LOCATION c
	ON_ICON_LOCATION b
	PENDING_INVITES_TEXT X
	POPUP_LOCATION R
	POPUP_TEXT af
	SELECT_MINIGAME_PREFIX ae
	SERVER_CLOSED_TOOLTIP ak
	SERVER_EXPIRED_TOOLTIP ag
	SERVER_EXPIRES_IN_DAY_TOOLTIP ai
	SERVER_EXPIRES_SOON_TOOLTIP ah
	SERVER_OPEN_TOOLTIP aj
	SERVER_UNITIALIZED_TEXT Z
	SUBSCRIPTION_CREATE_TEXT ad
	SUBSCRIPTION_EXPIRED_TEXT aa
	SUBSCRIPTION_RENEW_TEXT ab
	TRIAL_EXPIRED_TEXT ac
	TRIAL_ICON_LOCATION U
	TRIAL_MESSAGE_LINES Y
	TRIAL_TEXT ap
	UNITIALIZED_WORLD_NARRATION ao
	WORLDICON_LOCATION N
	animTick aN
	backButton aG
	buyARealmButton bi
	carouselIndex aW
	carouselTick aX
	checkedClientCompatability ax
	checkedParentalConsent aw
	closeButton bj
	configureButton aI
	connectLock bb
	createTrialButton bh
	createdTrial aS
	dataSubscription ar
	dontSetConnectedToRealms aB
	formattedPopup bc
	hasFetchedServers aO
	hasParentalConsent av
	hasSwitchedCarouselImage aY
	hasUnreadNews aU
	hoveredElement bd
	inviteNarrationLimiter aA
	justClosedPopup aQ
	keyCombos aZ
	lastClickTime ba
	lastScreen aC
	lastScrollYPosition au
	leaveButton aJ
	newsButton bg
	newsLink aV
	numberOfPendingInvites aM
	overrideConfigure at
	pendingInvitesButton bf
	playButton aF
	popupOpenedByUser aP
	realmSelectionList aD
	realmsGenericErrorScreen ay
	realmsSelectionListAdded aE
	realmsServers aL
	regionsPinged az
	renewButton aH
	serverList as
	showPopupButton be
	showingPopup aT
	teaserImages aq
	toolTip aK
	trialsAvailable aR
	addButtons ()V c
	charTyped (CI)Z a
	checkClientCompatability ()V E
	checkParentalConsent ()V F
	configureClicked (Lcom/mojang/realmsclient/dto/RealmsServer;)V g
	drawClose (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V e
	drawConfigure (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V g
	drawExpired (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	drawExpiring (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V b
	drawInvitationPendingIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIZZ)V a
	drawLeave (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V f
	drawOpen (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	drawPopup (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	drawRealmsLogo (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	getOwnedNonExpiredWorldIds ()Ljava/util/List; D
	getSelectedServer ()Lcom/mojang/realmsclient/dto/RealmsServer; K
	hasParentalConsent ()Z z
	inPendingInvitationArea (DD)Z c
	init ()V b
	initDataFetcher (Lcom/mojang/realmsclient/gui/RealmsDataFetcher;)Lcom/mojang/realmsclient/gui/task/DataFetcher$Subscription; a
	isOutsidePopup (DD)Z a
	isSelfOwnedNonExpiredServer (Lcom/mojang/realmsclient/dto/RealmsServer;)Z k
	isSelfOwnedServer (Lcom/mojang/realmsclient/dto/RealmsServer;)Z j
	keyPressed (III)Z a
	leaveClicked (Lcom/mojang/realmsclient/dto/RealmsServer;)V h
	leaveServer (ZLcom/mojang/realmsclient/dto/RealmsServer;)V a
	mouseClicked (DDI)Z a
	newScreen ()Lcom/mojang/realmsclient/RealmsMainScreen; g
	onClosePopup ()V L
	onRenew (Lcom/mojang/realmsclient/dto/RealmsServer;)V f
	pendingButtonPress (Lnet/minecraft/client/gui/components/Button;)V a
	pingRegions ()V C
	play (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/client/gui/screens/Screen;)V a
	popupX0 ()I M
	popupY0 ()I N
	refreshFetcher ()V B
	removeServer (Lcom/mojang/realmsclient/dto/RealmsServer;)V i
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderLocal (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;II)V a
	renderNews (Lcom/mojang/blaze3d/vertex/PoseStack;IIZIIZZ)V a
	renderStage (Lcom/mojang/blaze3d/vertex/PoseStack;)V d
	resetScreen ()V f
	saveListScrollPosition ()V J
	setCreatedTrial (Z)V a
	setTooltip ([Lnet/minecraft/network/chat/Component;)V a
	shouldConfigureButtonBeVisible (Lcom/mojang/realmsclient/dto/RealmsServer;)Z d
	shouldLeaveButtonBeVisible (Lcom/mojang/realmsclient/dto/RealmsServer;)Z e
	shouldPlayButtonBeActive (Lcom/mojang/realmsclient/dto/RealmsServer;)Z b
	shouldRenewButtonBeActive (Lcom/mojang/realmsclient/dto/RealmsServer;)Z c
	shouldShowMessageInList ()Z k
	shouldShowPopup ()Z a
	shouldShowPopupButton ()Z A
	switchToLocal ()V H
	switchToProd ()V I
	switchToStage ()V G
	tick ()V d
	updateButtonStates (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	updateTeaserImages (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
com/mojang/realmsclient/RealmsMainScreen$CloseButton eba$a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
com/mojang/realmsclient/RealmsMainScreen$Entry eba$b
	getServer ()Lcom/mojang/realmsclient/dto/RealmsServer; a
com/mojang/realmsclient/RealmsMainScreen$HoveredElement eba$c
	$VALUES e
	CONFIGURE d
	EXPIRED b
	LEAVE c
	NONE a
	$values ()[Lcom/mojang/realmsclient/RealmsMainScreen$HoveredElement; a
com/mojang/realmsclient/RealmsMainScreen$NewsButton eba$d
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
com/mojang/realmsclient/RealmsMainScreen$PendingInvitesButton eba$e
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	tick ()V a
com/mojang/realmsclient/RealmsMainScreen$RealmSelectionList eba$f
	getMaxPosition ()I b
	getRowWidth ()I c
	isFocused ()Z a
	itemClicked (IIDDI)V a
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	setSelected (Lcom/mojang/realmsclient/RealmsMainScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/RealmsMainScreen$ServerEntry eba$g
	SKIN_HEAD_LARGE_WIDTH c
	serverData d
	getNarration ()Lnet/minecraft/network/chat/Component; b
	getServer ()Lcom/mojang/realmsclient/dto/RealmsServer; a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderLegacy (Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V b
	renderMcoServerItem (Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V a
com/mojang/realmsclient/RealmsMainScreen$TrialEntry eba$h
	getNarration ()Lnet/minecraft/network/chat/Component; b
	getServer ()Lcom/mojang/realmsclient/dto/RealmsServer; a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderTrialItem (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V a
com/mojang/realmsclient/Unit ebb
	$VALUES f
	B a
	BASE_UNIT e
	GB d
	KB b
	MB c
	$values ()[Lcom/mojang/realmsclient/Unit; a
	convertTo (JLcom/mojang/realmsclient/Unit;)D a
	getLargest (J)Lcom/mojang/realmsclient/Unit; a
	humanReadable (J)Ljava/lang/String; b
	humanReadable (JLcom/mojang/realmsclient/Unit;)Ljava/lang/String; b
com/mojang/realmsclient/client/FileDownload ebc
	INVALID_FILE_NAMES k
	LOGGER a
	cancelled b
	currentThread i
	error d
	extracting e
	finished c
	request h
	requestConfig j
	resourcePackPath g
	tempFile f
	cancel ()V a
	contentLength (Ljava/lang/String;)J a
	deletePlayerTag (Ljava/io/File;)V a
	download (Lcom/mojang/realmsclient/dto/WorldDownload;Ljava/lang/String;Lcom/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus;Lnet/minecraft/world/level/storage/LevelStorageSource;)V a
	findAvailableFolderName (Ljava/lang/String;)Ljava/lang/String; b
	isError ()Z c
	isExtracting ()Z d
	isFinished ()Z b
	untarGzipArchive (Ljava/lang/String;Ljava/io/File;Lnet/minecraft/world/level/storage/LevelStorageSource;)V a
com/mojang/realmsclient/client/FileDownload$DownloadCountingOutputStream ebc$a
	listener a
	setListener (Ljava/awt/event/ActionListener;)V a
com/mojang/realmsclient/client/FileDownload$ProgressListener ebc$b
	downloadStatus e
	levelStorageSource d
	tempFile c
	worldName b
com/mojang/realmsclient/client/FileDownload$ResourcePackProgressListener ebc$c
	downloadStatus c
	tempFile b
	worldDownload d
com/mojang/realmsclient/client/FileUpload ebd
	LOGGER a
	MAX_RETRIES b
	UPLOAD_PATH c
	cancelled l
	clientVersion j
	file d
	requestConfig n
	sessionId h
	slotId f
	uploadInfo g
	uploadStatus k
	uploadTask m
	username i
	worldId e
	cancel ()V a
	cleanup (Lorg/apache/http/client/methods/HttpPost;Lorg/apache/http/impl/client/CloseableHttpClient;)V a
	getRetryDelaySeconds (Lorg/apache/http/HttpResponse;)J a
	handleResponse (Lorg/apache/http/HttpResponse;Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder;)V a
	isFinished ()Z b
	requestUpload (I)Lcom/mojang/realmsclient/gui/screens/UploadResult; a
	retryUploadAfter (JI)Lcom/mojang/realmsclient/gui/screens/UploadResult; b
	setupRequest (Lorg/apache/http/client/methods/HttpPost;)V a
	shouldRetry (JI)Z a
	upload (Ljava/util/function/Consumer;)V a
com/mojang/realmsclient/client/FileUpload$CustomInputStreamEntity ebd$a
	content b
	length a
	uploadStatus c
com/mojang/realmsclient/client/Ping ebe
	now ()J b
	ping (Ljava/lang/String;)I a
	ping ([Lcom/mojang/realmsclient/client/Ping$Region;)Ljava/util/List; a
	pingAllRegions ()Ljava/util/List; a
com/mojang/realmsclient/client/Ping$Region ebe$a
	$VALUES k
	AP_NORTHEAST_1 g
	AP_SOUTHEAST_1 e
	AP_SOUTHEAST_2 f
	EU_WEST_1 d
	SA_EAST_1 h
	US_EAST_1 a
	US_WEST_1 c
	US_WEST_2 b
	endpoint j
	name i
	$values ()[Lcom/mojang/realmsclient/client/Ping$Region; a
com/mojang/realmsclient/client/RealmsClient ebf
	ACTIVITIES_RESOURCE k
	GSON S
	INVITES_RESOURCE_PATH h
	LOGGER c
	MCO_RESOURCE_PATH i
	OPS_RESOURCE l
	PATH_ACCEPT_INVITE C
	PATH_AVAILABLE u
	PATH_CLIENT_COMPATIBLE O
	PATH_DELETE_WORLD K
	PATH_GET_ACTIVTIES p
	PATH_GET_LIVESTATS q
	PATH_GET_SUBSCRIPTION r
	PATH_INITIALIZE o
	PATH_NEWS Q
	PATH_OP s
	PATH_PENDING_INVITES B
	PATH_PENDING_INVITES_COUNT A
	PATH_PUT_INTO_MINIGAMES_MODE t
	PATH_REJECT_INVITE D
	PATH_SLOT G
	PATH_STAGE_AVAILABLE R
	PATH_TEMPLATES v
	PATH_TOS_AGREED P
	PATH_UNINVITE_MYSELF E
	PATH_WORLD_BACKUPS L
	PATH_WORLD_CLOSE I
	PATH_WORLD_DOWNLOAD M
	PATH_WORLD_GET x
	PATH_WORLD_INVITES y
	PATH_WORLD_JOIN w
	PATH_WORLD_OPEN H
	PATH_WORLD_RESET J
	PATH_WORLD_UNINVITE z
	PATH_WORLD_UPDATE F
	PATH_WORLD_UPLOAD N
	REGIONS_RESOURCE m
	SUBSCRIPTION_RESOURCE j
	TRIALS_RESOURCE n
	WORLDS_RESOURCE_PATH g
	currentEnvironment a
	initialized b
	minecraft f
	sessionId d
	username e
	acceptInvitation (Ljava/lang/String;)V a
	agreeToTos ()V l
	backupsFor (J)Lcom/mojang/realmsclient/dto/BackupList; e
	clientCompatible ()Lcom/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse; i
	close (J)Ljava/lang/Boolean; g
	create ()Lcom/mojang/realmsclient/client/RealmsClient; a
	create (Lnet/minecraft/client/Minecraft;)Lcom/mojang/realmsclient/client/RealmsClient; a
	deleteWorld (J)V i
	deop (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; f
	execute (Lcom/mojang/realmsclient/client/Request;)Ljava/lang/String; a
	fetchWorldTemplates (IILcom/mojang/realmsclient/dto/RealmsServer$WorldType;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; a
	getActivity (J)Lcom/mojang/realmsclient/dto/ServerActivityList; b
	getHttpCodeDescription (I)Ljava/lang/String; a
	getLiveStats ()Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; f
	getNews ()Lcom/mojang/realmsclient/dto/RealmsNews; m
	getOwnWorld (J)Lcom/mojang/realmsclient/dto/RealmsServer; a
	initializeWorld (JLjava/lang/String;Ljava/lang/String;)V a
	invite (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer; b
	isBlocked (Lcom/mojang/realmsclient/dto/PendingInvite;)Z a
	join (J)Lcom/mojang/realmsclient/dto/RealmsServerAddress; c
	listWorlds ()Lcom/mojang/realmsclient/dto/RealmsServerList; e
	mcoEnabled ()Ljava/lang/Boolean; g
	op (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; e
	open (J)Ljava/lang/Boolean; f
	pendingInvites ()Lcom/mojang/realmsclient/dto/PendingInvitesList; k
	pendingInvitesCount ()I j
	putIntoMinigameMode (JLjava/lang/String;)Ljava/lang/Boolean; d
	rejectInvitation (Ljava/lang/String;)V b
	requestDownloadInfo (JI)Lcom/mojang/realmsclient/dto/WorldDownload; b
	requestUploadInfo (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/UploadInfo; h
	resetWorldWithSeed (JLcom/mojang/realmsclient/util/WorldGenerationInfo;)Ljava/lang/Boolean; a
	resetWorldWithTemplate (JLjava/lang/String;)Ljava/lang/Boolean; g
	restoreWorld (JLjava/lang/String;)V c
	sendPingResults (Lcom/mojang/realmsclient/dto/PingResult;)V a
	stageAvailable ()Ljava/lang/Boolean; h
	subscriptionFor (J)Lcom/mojang/realmsclient/dto/Subscription; h
	switchSlot (JI)Z a
	switchToLocal ()V d
	switchToProd ()V c
	switchToStage ()V b
	trialAvailable ()Ljava/lang/Boolean; n
	uninvite (JLjava/lang/String;)V a
	uninviteMyselfFrom (J)V d
	update (JLjava/lang/String;Ljava/lang/String;)V b
	updateSlot (JILcom/mojang/realmsclient/dto/RealmsWorldOptions;)V a
	url (Ljava/lang/String;)Ljava/lang/String; c
	url (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
com/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse ebf$a
	$VALUES d
	COMPATIBLE a
	OTHER c
	OUTDATED b
	$values ()[Lcom/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse; a
com/mojang/realmsclient/client/RealmsClient$Environment ebf$b
	$VALUES f
	LOCAL c
	PRODUCTION a
	STAGE b
	baseUrl d
	protocol e
	$values ()[Lcom/mojang/realmsclient/client/RealmsClient$Environment; a
com/mojang/realmsclient/client/RealmsClientConfig ebg
	proxy a
	getProxy ()Ljava/net/Proxy; a
	setProxy (Ljava/net/Proxy;)V a
com/mojang/realmsclient/client/RealmsError ebh
	LOGGER a
	errorCode c
	errorMessage b
	getErrorCode ()I b
	getErrorMessage ()Ljava/lang/String; a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/client/RealmsError; a
com/mojang/realmsclient/client/Request ebi
	DEFAULT_CONNECT_TIMEOUT e
	DEFAULT_READ_TIMEOUT d
	connected c
	connection a
	url b
	connect ()Lcom/mojang/realmsclient/client/Request; d
	cookie (Ljava/lang/String;Ljava/lang/String;)V a
	cookie (Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V a
	delete (Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; b
	dispose ()V f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
	get (Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; a
	get (Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; a
	getHeader (Ljava/lang/String;)Ljava/lang/String; c
	getHeader (Ljava/net/HttpURLConnection;Ljava/lang/String;)Ljava/lang/String; a
	getRetryAfterHeader ()I a
	getRetryAfterHeader (Ljava/net/HttpURLConnection;)I a
	header (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; b
	post (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; c
	post (Ljava/lang/String;Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; a
	put (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; d
	put (Ljava/lang/String;Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; b
	read (Ljava/io/InputStream;)Ljava/lang/String; a
	responseCode ()I b
	text ()Ljava/lang/String; c
com/mojang/realmsclient/client/Request$Delete ebi$a
	doConnect ()Lcom/mojang/realmsclient/client/Request$Delete; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Get ebi$b
	doConnect ()Lcom/mojang/realmsclient/client/Request$Get; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Post ebi$c
	content c
	doConnect ()Lcom/mojang/realmsclient/client/Request$Post; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Put ebi$d
	content c
	doConnect ()Lcom/mojang/realmsclient/client/Request$Put; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/UploadStatus ebj
	bytesWritten a
	totalBytes b
com/mojang/realmsclient/dto/Backup ebl
	LOGGER f
	backupId a
	changeList e
	lastModifiedDate b
	metadata d
	size c
	uploadedVersion g
	format (Ljava/lang/String;)Ljava/lang/String; a
	isUploadedVersion ()Z a
	parse (Lcom/google/gson/JsonElement;)Lcom/mojang/realmsclient/dto/Backup; a
	setUploadedVersion (Z)V a
com/mojang/realmsclient/dto/BackupList ebm
	LOGGER b
	backups a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/BackupList; a
com/mojang/realmsclient/dto/GuardedSerializer ebn
	gson a
	fromJson (Ljava/lang/String;Ljava/lang/Class;)Lcom/mojang/realmsclient/dto/ReflectionBasedSerialization; a
	toJson (Lcom/mojang/realmsclient/dto/ReflectionBasedSerialization;)Ljava/lang/String; a
com/mojang/realmsclient/dto/Ops ebo
	ops a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; a
com/mojang/realmsclient/dto/PendingInvite ebp
	LOGGER f
	date e
	invitationId a
	worldName b
	worldOwnerName c
	worldOwnerUuid d
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/PendingInvite; a
com/mojang/realmsclient/dto/PendingInvitesList ebq
	LOGGER b
	pendingInvites a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/PendingInvitesList; a
com/mojang/realmsclient/dto/PingResult ebr
	pingResults a
	worldIds b
com/mojang/realmsclient/dto/PlayerInfo ebs
	accepted d
	name a
	online e
	operator c
	uuid b
	getAccepted ()Z d
	getName ()Ljava/lang/String; a
	getOnline ()Z e
	getUuid ()Ljava/lang/String; b
	isOperator ()Z c
	setAccepted (Z)V b
	setName (Ljava/lang/String;)V a
	setOnline (Z)V c
	setOperator (Z)V a
	setUuid (Ljava/lang/String;)V b
com/mojang/realmsclient/dto/RealmsDescriptionDto ebt
	description b
	name a
com/mojang/realmsclient/dto/RealmsNews ebu
	LOGGER b
	newsLink a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsNews; a
com/mojang/realmsclient/dto/RealmsServer ebv
	LOGGER s
	activeSlot n
	daysLeft l
	expired j
	expiredTrial k
	id a
	minigameId p
	minigameImage q
	minigameName o
	motd d
	name c
	owner f
	ownerUUID g
	players h
	remoteSubscriptionId b
	serverPing r
	slots i
	state e
	worldType m
	clone ()Lcom/mojang/realmsclient/dto/RealmsServer; d
	cloneSlots (Ljava/util/Map;)Ljava/util/Map; a
	createEmptySlots ()Ljava/util/Map; e
	getDescription ()Ljava/lang/String; a
	getMinigameName ()Ljava/lang/String; c
	getName ()Ljava/lang/String; b
	getState (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer$State; e
	getWorldName (I)Ljava/lang/String; a
	getWorldType (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer$WorldType; f
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsServer; a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer; c
	parseInvited (Lcom/google/gson/JsonArray;)Ljava/util/List; a
	parseSlots (Lcom/google/gson/JsonArray;)Ljava/util/Map; b
	setDescription (Ljava/lang/String;)V b
	setName (Ljava/lang/String;)V a
	sortInvited (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	toServerData (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/ServerData; d
	updateServerPing (Lcom/mojang/realmsclient/dto/RealmsServerPlayerList;)V a
com/mojang/realmsclient/dto/RealmsServer$McoServerComparator ebv$a
	refOwner a
	compare (Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/realmsclient/dto/RealmsServer;)I a
com/mojang/realmsclient/dto/RealmsServer$State ebv$b
	$VALUES d
	CLOSED a
	OPEN b
	UNINITIALIZED c
	$values ()[Lcom/mojang/realmsclient/dto/RealmsServer$State; a
com/mojang/realmsclient/dto/RealmsServer$WorldType ebv$c
	$VALUES f
	ADVENTUREMAP c
	EXPERIENCE d
	INSPIRATION e
	MINIGAME b
	NORMAL a
	$values ()[Lcom/mojang/realmsclient/dto/RealmsServer$WorldType; a
com/mojang/realmsclient/dto/RealmsServerAddress ebw
	LOGGER d
	address a
	resourcePackHash c
	resourcePackUrl b
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerAddress; a
com/mojang/realmsclient/dto/RealmsServerList ebx
	LOGGER b
	servers a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerList; a
com/mojang/realmsclient/dto/RealmsServerPing eby
	nrOfPlayers a
	playerList b
com/mojang/realmsclient/dto/RealmsServerPlayerList ebz
	JSON_PARSER d
	LOGGER c
	players b
	serverId a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsServerPlayerList; a
	parsePlayers (Lcom/google/gson/JsonArray;)Ljava/util/List; a
com/mojang/realmsclient/dto/RealmsServerPlayerLists eca
	LOGGER b
	servers a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; a
com/mojang/realmsclient/dto/RealmsWorldOptions ecb
	DEFAULT_COMMAND_BLOCKS t
	DEFAULT_DIFFICULTY u
	DEFAULT_FORCE_GAME_MODE n
	DEFAULT_GAME_MODE v
	DEFAULT_PVP o
	DEFAULT_SLOT_NAME w
	DEFAULT_SPAWN_ANIMALS p
	DEFAULT_SPAWN_MONSTERS q
	DEFAULT_SPAWN_NPCS r
	DEFAULT_SPAWN_PROTECTION s
	DEFAULT_TEMPLATE_ID x
	DEFAULT_TEMPLATE_IMAGE y
	commandBlocks f
	difficulty h
	empty l
	forceGameMode g
	gameMode i
	pvp a
	slotName m
	spawnAnimals b
	spawnMonsters c
	spawnNPCs d
	spawnProtection e
	templateId j
	templateImage k
	clone ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; d
	createDefaults ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; a
	createEmptyDefaults ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; b
	getDefaultSlotName (I)Ljava/lang/String; b
	getSlotName (I)Ljava/lang/String; a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsWorldOptions; a
	setEmpty (Z)V a
	toJson ()Ljava/lang/String; c
com/mojang/realmsclient/dto/RealmsWorldResetDto ecc
	generateStructures d
	levelType c
	seed a
	worldTemplateId b
com/mojang/realmsclient/dto/ReflectionBasedSerialization ecd
com/mojang/realmsclient/dto/RegionPingResult ece
	ping b
	regionName a
	ping ()I a
com/mojang/realmsclient/dto/ServerActivity ecf
	joinTime b
	leaveTime c
	profileUuid a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/ServerActivity; a
com/mojang/realmsclient/dto/ServerActivityList ecg
	periodInMillis a
	serverActivities b
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/ServerActivityList; a
com/mojang/realmsclient/dto/Subscription ech
	LOGGER d
	daysLeft b
	startDate a
	type c
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Subscription; a
	typeFrom (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Subscription$SubscriptionType; b
com/mojang/realmsclient/dto/Subscription$SubscriptionType ech$a
	$VALUES c
	NORMAL a
	RECURRING b
	$values ()[Lcom/mojang/realmsclient/dto/Subscription$SubscriptionType; a
com/mojang/realmsclient/dto/UploadInfo eci
	DEFAULT_PORT c
	DEFAULT_SCHEMA b
	LOGGER a
	URI_SCHEMA_PATTERN d
	token f
	uploadEndpoint g
	worldClosed e
	assembleUri (Ljava/lang/String;I)Ljava/net/URI; a
	createRequest (Ljava/lang/String;)Ljava/lang/String; b
	ensureEndpointSchema (Ljava/lang/String;Ljava/util/regex/Matcher;)Ljava/lang/String; a
	getToken ()Ljava/lang/String; a
	getUploadEndpoint ()Ljava/net/URI; b
	isWorldClosed ()Z c
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/UploadInfo; a
	selectPortOrDefault (II)I a
com/mojang/realmsclient/dto/ValueObject ecj
	getName (Ljava/lang/reflect/Field;)Ljava/lang/String; a
	isStatic (Ljava/lang/reflect/Field;)Z b
com/mojang/realmsclient/dto/WorldDownload eck
	LOGGER d
	downloadLink a
	resourcePackHash c
	resourcePackUrl b
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/WorldDownload; a
com/mojang/realmsclient/dto/WorldTemplate ecl
	LOGGER j
	author d
	id a
	image f
	link e
	name b
	recommendedPlayers h
	trailer g
	type i
	version c
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/WorldTemplate; a
com/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType ecl$a
	$VALUES f
	ADVENTUREMAP c
	EXPERIENCE d
	INSPIRATION e
	MINIGAME b
	WORLD_TEMPLATE a
	$values ()[Lcom/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType; a
com/mojang/realmsclient/dto/WorldTemplatePaginatedList ecm
	LOGGER e
	page b
	size c
	templates a
	total d
	isLastPage ()Z a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; a
com/mojang/realmsclient/exception/RealmsDefaultUncaughtExceptionHandler eco
	logger a
com/mojang/realmsclient/exception/RealmsHttpException ecp
com/mojang/realmsclient/exception/RealmsServiceException ecq
	httpResultCode a
	rawResponse b
	realmsError c
	realmsErrorCodeOrDefault (I)I a
com/mojang/realmsclient/exception/RetryCallException ecr
	DEFAULT_DELAY d
	delaySeconds e
com/mojang/realmsclient/gui/ErrorCallback ect
	error (Ljava/lang/String;)V a
	error (Lnet/minecraft/network/chat/Component;)V a
com/mojang/realmsclient/gui/RealmsDataFetcher ecu
	dataFetcher a
	liveStatsTask c
	newsManager g
	newsTask f
	pendingInvitesTask d
	serverListUpdateTask b
	trialAvailabilityTask e
com/mojang/realmsclient/gui/RealmsNewsManager ecv
	hasUnreadNews b
	newsLink c
	newsLocalStorage a
	hasUnreadNews ()Z a
	newsLink ()Ljava/lang/String; b
	updateNewsStorage (Lcom/mojang/realmsclient/dto/RealmsNews;)Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData; b
	updateUnreadNews (Lcom/mojang/realmsclient/dto/RealmsNews;)V a
com/mojang/realmsclient/gui/RealmsServerList ecw
	minecraft a
	removedServers b
	servers c
	removeItem (Lcom/mojang/realmsclient/dto/RealmsServer;)Ljava/util/List; a
	updateServersList (Ljava/util/List;)Ljava/util/List; a
com/mojang/realmsclient/gui/RealmsWorldSlotButton ecx
	CHECK_MARK_LOCATION c
	DEFAULT_WORLD_SLOT_1 d
	DEFAULT_WORLD_SLOT_2 e
	DEFAULT_WORLD_SLOT_3 f
	EMPTY_SLOT_LOCATION b
	SLOT_ACTIVE_TOOLTIP y
	SLOT_FRAME_LOCATION a
	SWITCH_TO_MINIGAME_SLOT_TOOLTIP z
	SWITCH_TO_WORLD_SLOT_TOOLTIP A
	serverDataProvider B
	slotIndex D
	state E
	toolTipSetter C
	drawSlotFrame (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIZLjava/lang/String;IJLjava/lang/String;ZZLcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action;Lnet/minecraft/network/chat/Component;)V a
	getAction (Lcom/mojang/realmsclient/dto/RealmsServer;ZZ)Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action; a
	getState ()Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton$State; a
	getTooltipAndNarration (Lcom/mojang/realmsclient/dto/RealmsServer;Ljava/lang/String;ZZLcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action;)Lcom/mojang/datafixers/util/Pair; a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderCheckMark (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	tick ()V b
com/mojang/realmsclient/gui/RealmsWorldSlotButton$Action ecx$a
	$VALUES d
	JOIN c
	NOTHING a
	SWITCH_SLOT b
	$values ()[Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action; a
com/mojang/realmsclient/gui/RealmsWorldSlotButton$State ecx$b
	action c
	actionPrompt h
	empty a
	image g
	imageId f
	isCurrentlyActiveSlot d
	minigame b
	slotName e
com/mojang/realmsclient/gui/RowButton ecy
	height b
	width a
	xOffset c
	yOffset d
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	drawButtonsInRow (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;Lnet/minecraft/realms/RealmsObjectSelectionList;IIII)V a
	drawForRowAt (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V a
	getBottom ()I b
	getRight ()I a
	onClick (I)V a
	rowButtonMouseClicked (Lnet/minecraft/realms/RealmsObjectSelectionList;Lnet/minecraft/client/gui/components/ObjectSelectionList$Entry;Ljava/util/List;IDD)V a
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen eda
	TEXT_UNKNOWN a
	backup c
	backupInfoList I
	lastScreen b
	checkForSpecificMetadata (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	gameDifficultyMetadata (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	gameModeMetadata (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; b
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoList eda$a
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoListEntry eda$b
	key b
	value c
	getNarration ()Lnet/minecraft/network/chat/Component; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
com/mojang/realmsclient/gui/screens/RealmsBackupScreen edb
	HAS_CHANGES_TOOLTIP J
	LOGGER a
	NO_BACKUPS_LABEL L
	PLUS_ICON_LOCATION b
	RESTORE_ICON_LOCATION c
	RESTORE_TOOLTIP I
	TITLE K
	UPLOADED_KEY Y
	backupObjectSelectionList Q
	backups O
	changesButton V
	downloadButton T
	lastScreen N
	lastScrollPosition M
	noBackups W
	restoreButton U
	selectedBackup R
	serverData X
	slotId S
	toolTip P
	addToChangeList (Lcom/mojang/realmsclient/dto/Backup;Ljava/lang/String;)V a
	downloadClicked ()V B
	downloadWorldData ()V C
	generateChangeList ()V g
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	restore ()V D
	restoreClicked (I)V a
	shouldChangesButtonBeVisible ()Z z
	shouldRestoreButtonBeVisible ()Z A
	updateButtonStates ()V k
com/mojang/realmsclient/gui/screens/RealmsBackupScreen$BackupObjectSelectionList edb$a
	addEntry (Lcom/mojang/realmsclient/dto/Backup;)V a
	getMaxPosition ()I b
	getRowWidth ()I c
	getScrollbarPosition ()I d
	isFocused ()Z a
	itemClicked (IIDDI)V a
	mouseClicked (DDI)Z a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	selectInviteListItem (I)V b
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsBackupScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsBackupScreen$Entry edb$b
	backup b
	drawInfo (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V b
	drawRestore (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V a
	getMediumDatePresentation (Ljava/util/Date;)Ljava/lang/String; a
	getNarration ()Lnet/minecraft/network/chat/Component; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderBackupItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/realmsclient/dto/Backup;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen edc
	DEFAULT_BUTTON_WIDTH b
	LOGGER a
	animTick P
	lastScreen c
	leftX M
	mainScreen I
	message L
	rightX N
	serverData J
	serverId K
	slotsThatHasBeenDownloaded O
	addButtons ()V g
	backButtonClicked ()V k
	doSwitchOrReset ()V c
	downloadWorld (I)V b
	drawSlotFrame (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIZLjava/lang/String;IJLjava/lang/String;Z)V a
	fetchServerData (J)V a
	getFramePositionX (I)I a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	isMinigame ()Z z
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsClientOutdatedScreen edd
	INCOMPATIBLE_MESSAGES c
	INCOMPATIBLE_MESSAGES_SNAPSHOT b
	INCOMPATIBLE_TITLE a
	lastScreen I
	getMessages ()[Lnet/minecraft/network/chat/Component; g
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen ede
	DEFAULT_BUTTON_OFFSET T
	DEFAULT_BUTTON_WIDTH S
	EXPIRED_ICON_LOCATION I
	EXPIRES_SOON_ICON_LOCATION J
	LOGGER a
	MINIGAME_PREFIX M
	OFF_ICON_LOCATION c
	ON_ICON_LOCATION b
	SERVER_CLOSED_TOOLTIP R
	SERVER_EXPIRED_TOOLTIP N
	SERVER_EXPIRING_IN_DAY_TOOLTIP P
	SERVER_EXPIRING_SOON_TOOLTIP O
	SERVER_OPEN_TOOLTIP Q
	TITLE L
	WORLD_LIST_TITLE K
	animTick ai
	backupButton ae
	clicks aj
	lastScreen V
	leftX Y
	optionsButton ad
	playersButton aa
	resetWorldButton af
	rightX Z
	serverData W
	serverId X
	settingsButton ab
	slotButtonList ak
	stateChanged ah
	subscriptionButton ac
	switchMinigameButton ag
	toolTip U
	addSlotButton (I)Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton; a
	backButtonClicked ()V g
	centerButton (II)I a
	closeTheWorld (Lnet/minecraft/client/gui/screens/Screen;)V a
	disableButtons ()V k
	drawClose (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V f
	drawExpired (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	drawExpiring (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V b
	drawOpen (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V e
	drawServerStatus (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	fetchServerData (J)V a
	frame (I)I c
	getNewScreen ()Lcom/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen; f
	hide (Lnet/minecraft/client/gui/components/Button;)V a
	hideMinigameButtons ()V C
	hideRegularButtons ()V B
	init ()V b
	isMinigame ()Z A
	joinRealm (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	keyPressed (III)Z a
	leftButton (I)I b
	openTheWorld (ZLnet/minecraft/client/gui/screens/Screen;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	saveSettings (Ljava/lang/String;Ljava/lang/String;)V a
	saveSlotSettings (Lcom/mojang/realmsclient/dto/RealmsWorldOptions;)V a
	show (Lnet/minecraft/client/gui/components/Button;)V b
	stateChanged ()V c
	switchToEmptySlot (ILcom/mojang/realmsclient/dto/RealmsServer;)V b
	switchToFullSlot (ILcom/mojang/realmsclient/dto/RealmsServer;)V a
	switchToMinigame ()V z
	templateSelectionCallback (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsConfirmScreen edf
	callback a
	title1 b
	title2 c
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsCreateRealmScreen edg
	DESCRIPTION_LABEL b
	NAME_LABEL a
	createButton L
	descriptionBox K
	lastScreen I
	nameBox J
	server c
	charTyped (CI)Z a
	createWorld ()V g
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
	valid ()Z k
com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen edh
	DOTS Z
	DOWNLOAD_LOCK b
	LOGGER a
	animTick Y
	bytesPersSecond X
	callback ac
	cancelButton L
	cancelled R
	checked ab
	dotIndex aa
	downloadStatus N
	downloadTitle J
	errorMessage O
	extracting U
	finished T
	lastScreen c
	narrationRateLimiter K
	previousTimeSnapshot W
	previousWrittenBytes V
	progress Q
	showDots S
	status P
	worldDownload I
	worldName M
	backButtonClicked ()V z
	checkDownloadSize ()V g
	createProgressNarrationMessage ()Lnet/minecraft/network/chat/Component; k
	downloadCancelled ()V B
	downloadSave ()V A
	drawDots (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	drawDownloadSpeed (Lcom/mojang/blaze3d/vertex/PoseStack;)V d
	drawDownloadSpeed0 (Lcom/mojang/blaze3d/vertex/PoseStack;J)V a
	drawProgressBar (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	getContentLength (Ljava/lang/String;)J a
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus edh$a
	bytesWritten a
	totalBytes b
com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen edi
	line2Split c
	lines b
	nextScreen a
	errorMessage (Lcom/mojang/realmsclient/exception/RealmsServiceException;)Lcom/mojang/datafixers/util/Pair; a
	errorMessage (Lnet/minecraft/network/chat/Component;)Lcom/mojang/datafixers/util/Pair; a
	errorMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lcom/mojang/datafixers/util/Pair; a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsInviteScreen edj
	LOGGER a
	NAME_LABEL b
	NO_SUCH_PLAYER_ERROR_TEXT c
	configureScreen K
	errorMsg M
	lastScreen L
	profileName I
	serverData J
	init ()V b
	keyPressed (III)Z a
	onInvite ()V g
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	showError (Lnet/minecraft/network/chat/Component;)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen edk
	callback a
	line2 c
	line3 I
	type b
	yesNoQuestion J
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type edk$a
	$VALUES e
	Info b
	Warning a
	colorCode c
	text d
	$values ()[Lcom/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type; a
com/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen edl
	LOGGER c
	REPEATED_NARRATOR b
	SYMBOLS a
	aborted L
	animTicks M
	buttonLength O
	cancelOrBackButton P
	errorMessage K
	lastScreen I
	task N
	title J
	aborted ()Z c
	cancelOrBackButtonClicked ()V g
	error (Lnet/minecraft/network/chat/Component;)V a
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setTitle (Lnet/minecraft/network/chat/Component;)V b
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen edm
	INVITE_ICON_LOCATION a
	NEWS_ICON_LOCATION c
	TRIAL_ICON_LOCATION b
	checkedMcoAvailability K
	hasUnreadNews N
	numberOfPendingInvites J
	realmsDataSubscription I
	trialAvailable L
	validClient M
	checkIfMcoEnabled ()V z
	drawIcons (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	getRealmsNotificationsEnabled ()Z g
	inTitleScreen ()Z k
	init ()V b
	initDataFetcher (Lcom/mojang/realmsclient/gui/RealmsDataFetcher;)Lcom/mojang/realmsclient/gui/task/DataFetcher$Subscription; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsParentalConsentScreen edn
	MESSAGE a
	messageLines c
	nextScreen b
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen edo
	ACCEPT_ICON_LOCATION b
	ACCEPT_INVITE_TOOLTIP J
	LOGGER a
	NO_PENDING_INVITES_TEXT I
	REJECT_ICON_LOCATION c
	REJECT_INVITE_TOOLTIP K
	acceptButton Q
	lastScreen L
	loaded N
	pendingInvitationSelectionList O
	rejectButton R
	selectedInvite P
	toolTip M
	accept (I)V c
	init ()V b
	keyPressed (III)Z a
	reject (I)V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	shouldAcceptAndRejectButtonBeVisible (I)Z k
	updateButtonStates ()V g
	updateList (I)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry edo$a
	TEXT_LEFT b
	pendingInvite c
	rowButtons d
	getNarration ()Lnet/minecraft/network/chat/Component; b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderPendingInvitationItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/realmsclient/dto/PendingInvite;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$AcceptRowButton edo$a$a
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	onClick (I)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$RejectRowButton edo$a$b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	onClick (I)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionList edo$b
	getMaxPosition ()I b
	getRowWidth ()I c
	isFocused ()Z a
	removeAtIndex (I)V b
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	selectInviteListItem (I)V c
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen edp
	CROSS_ICON_LOCATION I
	INVITED_LABEL N
	LOGGER a
	NORMAL_USER_TOOLTIP K
	OPTIONS_BACKGROUND J
	OP_ICON_LOCATION b
	OP_TOOLTIP L
	REMOVE_ENTRY_TOOLTIP M
	USER_ICON_LOCATION c
	column1X S
	column2X U
	columnWidth T
	hoveredUserAction ab
	invitedObjectSelectionList R
	lastScreen P
	opdeopButton W
	player Z
	removeButton V
	selectedInvited Y
	selectedInvitedIndex X
	serverData Q
	stateChanged aa
	toolTip O
	backButtonClicked ()V k
	deleteFromInvitedList (I)V o
	deop (I)V m
	drawNormal (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V e
	drawOpped (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	drawRemoveIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	init ()V b
	keyPressed (III)Z a
	op (I)V l
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	shouldRemoveAndOpdeopButtonBeVisible (I)Z k
	uninvite (I)V n
	updateButtonStates ()V g
	updateOps (Lcom/mojang/realmsclient/dto/Ops;)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$Entry edp$a
	playerInfo b
	getNarration ()Lnet/minecraft/network/chat/Component; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderInvitedItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/realmsclient/dto/PlayerInfo;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$InvitedObjectSelectionList edp$b
	addEntry (Lcom/mojang/realmsclient/dto/PlayerInfo;)V a
	getMaxPosition ()I b
	getRowWidth ()I c
	getScrollbarPosition ()I d
	isFocused ()Z a
	itemClicked (IIDDI)V a
	mouseClicked (DDI)Z a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	selectInviteListItem (I)V b
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsPlayerScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$UserAction edp$c
	$VALUES d
	NONE c
	REMOVE b
	TOGGLE_OP a
	$values ()[Lcom/mojang/realmsclient/gui/screens/RealmsPlayerScreen$UserAction; a
com/mojang/realmsclient/gui/screens/RealmsResetNormalWorldScreen edq
	SEED_LABEL a
	buttonTitle K
	callback b
	generateStructures J
	levelType I
	seedEdit c
	init ()V b
	onClose ()V ag_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen edr
	ADVENTURE_MAP_LOCATION O
	EXPERIENCE_LOCATION R
	INSPIRATION_LOCATION S
	LOGGER b
	NEW_WORLD_LOCATION Q
	SLOT_FRAME_LOCATION M
	SURVIVAL_SPAWN_LOCATION P
	UPLOAD_LOCATION N
	adventuremaps U
	buttonTitle K
	callback Z
	experiences V
	inspirations W
	lastScreen c
	resetTitle X
	resetWorldRunnable Y
	serverData I
	slot a
	subtitle J
	subtitleColor L
	templates T
	drawFrame (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;ZZ)V a
	frame (I)I b
	generationSelectionCallback (Lcom/mojang/realmsclient/util/WorldGenerationInfo;)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resetWorld (Ljava/lang/Runnable;)V b
	setResetTitle (Lnet/minecraft/network/chat/Component;)V a
	setSlot (I)V a
	startTask (Lcom/mojang/realmsclient/util/task/LongRunningTask;)V a
	switchSlot (Ljava/lang/Runnable;)V a
	templateSelectionCallback (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$FrameButton edr$a
	image b
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen eds
	CHEATS_TEXT I
	DATE_FORMAT J
	HARDCORE_TEXT c
	LOGGER a
	WORLD_TEXT b
	callback R
	lastScreen K
	levelList O
	selectedWorld P
	slotId M
	uploadButton N
	worldId L
	worldSelectionList Q
	formatLastPlayed (Lnet/minecraft/world/level/storage/LevelSummary;)Ljava/lang/String; b
	gameModeName (Lnet/minecraft/world/level/storage/LevelSummary;)Lnet/minecraft/network/chat/Component; a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	keyPressed (III)Z a
	loadLevelList ()V g
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	upload ()V k
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$Entry eds$a
	id d
	info e
	levelSummary b
	name c
	getNarration ()Lnet/minecraft/network/chat/Component; b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderItem (Lcom/mojang/blaze3d/vertex/PoseStack;III)V a
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$WorldSelectionList eds$b
	addEntry (Lnet/minecraft/world/level/storage/LevelSummary;)V a
	getMaxPosition ()I b
	isFocused ()Z a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen edt
	LINK_ICON b
	LOGGER a
	PUBLISHER_LINK_TOOLTIP J
	SLOT_FRAME_LOCATION I
	TRAILER_ICON c
	TRAILER_LINK_TOOLTIP K
	callback L
	clicks U
	currentLink S
	displayWarning X
	hoverWarning Y
	noTemplatesMessage Z
	publisherButton Q
	selectButton O
	selectedTemplate N
	toolTip R
	trailerButton P
	warning V
	warningURL W
	worldTemplateObjectSelectionList M
	worldType T
	fetchTemplates (Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;Lcom/mojang/realmsclient/client/RealmsClient;)Lcom/mojang/datafixers/util/Either; a
	fetchTemplatesAsync (Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	getSelectedTemplate ()Lcom/mojang/realmsclient/dto/WorldTemplate; A
	hasValidTemplate ()Z D
	init ()V b
	mouseClicked (DDI)Z a
	onClose ()V ag_
	onPublish ()V F
	onTrailer ()V E
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	renderMultilineMessage (Lcom/mojang/blaze3d/vertex/PoseStack;IILjava/util/List;)V a
	selectTemplate ()V C
	setWarning ([Lnet/minecraft/network/chat/Component;)V a
	shouldPublisherBeVisible ()Z z
	shouldSelectButtonBeActive ()Z k
	shouldTrailerBeVisible ()Z B
	tick ()V d
	updateButtonStates ()V g
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$Entry edt$a
	template b
	drawIcons (Lcom/mojang/blaze3d/vertex/PoseStack;IIIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V a
	drawImage (Lcom/mojang/blaze3d/vertex/PoseStack;IIIILcom/mojang/realmsclient/dto/WorldTemplate;)V a
	getNarration ()Lnet/minecraft/network/chat/Component; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderWorldTemplateItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/realmsclient/dto/WorldTemplate;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionList edt$b
	addEntry (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
	get (I)Lcom/mojang/realmsclient/dto/WorldTemplate; b
	getMaxPosition ()I b
	getRowWidth ()I c
	getTemplates ()Ljava/util/List; f
	isEmpty ()Z e
	isFocused ()Z a
	mouseClicked (DDI)Z a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsSettingsScreen edu
	COMPONENT_WIDTH a
	DESCRIPTION_LABEL c
	NAME_LABEL b
	configureWorldScreen I
	descEdit L
	doneButton K
	nameEdit M
	serverData J
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	save ()V f
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen edv
	DEFAULT_DIFFICULTY I
	DEFAULT_GAME_MODE J
	DIFFICULTIES a
	GAME_MODES b
	NAME_LABEL K
	SPAWN_PROTECTION_TEXT L
	SPAWN_WARNING_TITLE M
	column1X O
	columnWidth P
	commandBlocks ab
	defaultSlotName U
	difficulty S
	forceGameMode ac
	gameMode T
	nameEdit N
	options Q
	parent c
	pvp W
	spawnAnimals Y
	spawnMonsters Z
	spawnNPCs X
	spawnProtection aa
	spawnProtectionButton ad
	worldName V
	worldType R
	confirmDangerousOption (Lnet/minecraft/network/chat/Component;Ljava/util/function/Consumer;)Lnet/minecraft/client/gui/components/CycleButton$OnValueChange; a
	findByIndex (Ljava/util/List;II)Ljava/lang/Object; a
	findIndex (Ljava/util/List;Ljava/lang/Object;I)I a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	saveSettings ()V g
	setWorldName (Ljava/lang/String;)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$SettingsSlider edv$a
	maxValue d
	minValue c
	applyValue ()V a
	onClick (DD)V a
	onRelease (DD)V b
	updateMessage ()V b
com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen edw
	DAYS_LEFT_LABEL J
	DAYS_SUFFIX P
	DAY_SUFFIX O
	LOGGER a
	MONTHS_SUFFIX N
	MONTH_SUFFIX M
	PURCHASE_LINK X
	SUBSCRIPTION_EXPIRED_TEXT K
	SUBSCRIPTION_LESS_THAN_A_DAY_TEXT L
	SUBSCRIPTION_START_LABEL c
	SUBSCRIPTION_TITLE b
	TIME_LEFT_LABEL I
	UNKNOWN Q
	daysLeft U
	lastScreen R
	mainScreen T
	serverData S
	startDate V
	type W
	daysLeftPresentation (I)Lnet/minecraft/network/chat/Component; a
	deleteRealm (Z)V c
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	getSubscription (J)V a
	init ()V b
	keyPressed (III)Z a
	localPresentation (J)Lnet/minecraft/network/chat/Component; b
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsTermsScreen edx
	LOGGER a
	TERMS_LINK_TEXT I
	TERMS_STATIC_TEXT c
	TITLE b
	lastScreen J
	mainScreen K
	onLink M
	realmsServer L
	realmsToSUrl N
	agreedToTos ()V g
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsUploadScreen edy
	DOTS c
	LOGGER a
	UPLOAD_LOCK b
	VERIFYING_TEXT I
	backButton W
	bytesPersSecond ab
	callback ac
	cancelButton X
	cancelled S
	errorMessage P
	lastScreen J
	narrationRateLimiter O
	previousTimeSnapshot aa
	previousWrittenBytes Z
	progress R
	selectedLevel K
	showDots U
	slotId M
	status Q
	tickCount Y
	uploadFinished T
	uploadStarted V
	uploadStatus N
	worldId L
	addFileToTarGz (Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;Ljava/lang/String;Z)V a
	createProgressNarrationMessage ()Lnet/minecraft/network/chat/Component; z
	drawDots (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	drawProgressBar (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	drawUploadSpeed (Lcom/mojang/blaze3d/vertex/PoseStack;)V d
	drawUploadSpeed0 (Lcom/mojang/blaze3d/vertex/PoseStack;J)V a
	init ()V b
	keyPressed (III)Z a
	onBack ()V g
	onCancel ()V k
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setErrorMessage ([Lnet/minecraft/network/chat/Component;)V a
	tarGzipArchive (Ljava/io/File;)Ljava/io/File; b
	tick ()V d
	upload ()V A
	uploadCancelled ()V B
	verify (Ljava/io/File;)Z a
com/mojang/realmsclient/gui/screens/UploadResult edz
	errorMessage b
	statusCode a
com/mojang/realmsclient/gui/screens/UploadResult$Builder edz$a
	errorMessage b
	statusCode a
	build ()Lcom/mojang/realmsclient/gui/screens/UploadResult; a
	withErrorMessage (Ljava/lang/String;)Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder; a
	withStatusCode (I)Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder; a
com/mojang/realmsclient/gui/task/DataFetcher eeb
	LOGGER a
	executor b
	resolution c
	timeSource d
	createSubscription ()Lcom/mojang/realmsclient/gui/task/DataFetcher$Subscription; a
	createTask (Ljava/lang/String;Ljava/util/concurrent/Callable;Ljava/time/Duration;Lcom/mojang/realmsclient/gui/task/RepeatedDelayStrategy;)Lcom/mojang/realmsclient/gui/task/DataFetcher$Task; a
com/mojang/realmsclient/gui/task/DataFetcher$ComputationResult eeb$a
	time b
	value a
	time ()J b
	value ()Lcom/mojang/datafixers/util/Either; a
com/mojang/realmsclient/gui/task/DataFetcher$SubscribedTask eeb$b
	lastCheckTime d
	output c
	task b
	reset ()V c
	runCallback ()V b
	runCallbackIfNeeded ()V a
	update (J)V a
com/mojang/realmsclient/gui/task/DataFetcher$Subscription eeb$c
	subscriptions b
	forceUpdate ()V a
	reset ()V c
	subscribe (Lcom/mojang/realmsclient/gui/task/DataFetcher$Task;Ljava/util/function/Consumer;)V a
	tick ()V b
com/mojang/realmsclient/gui/task/DataFetcher$SuccessfulComputationResult eeb$d
	time b
	value a
	time ()J b
	value ()Ljava/lang/Object; a
com/mojang/realmsclient/gui/task/DataFetcher$Task eeb$e
	id b
	lastResult g
	nextUpdate h
	pendingTask f
	period d
	repeatStrategy e
	updater c
	reset ()V a
	updateIfNeeded (J)V a
com/mojang/realmsclient/gui/task/RepeatedDelayStrategy eec
	CONSTANT a
	delayCyclesAfterFailure ()J b
	delayCyclesAfterSuccess ()J a
	exponentialBackoff (I)Lcom/mojang/realmsclient/gui/task/RepeatedDelayStrategy; a
com/mojang/realmsclient/util/JsonUtils eef
	getBooleanOr (Ljava/lang/String;Lcom/google/gson/JsonObject;Z)Z a
	getDateOr (Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/util/Date; a
	getIntOr (Ljava/lang/String;Lcom/google/gson/JsonObject;I)I a
	getLongOr (Ljava/lang/String;Lcom/google/gson/JsonObject;J)J a
	getStringOr (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; a
com/mojang/realmsclient/util/LevelType eeg
	$VALUES g
	AMPLIFIED d
	DEFAULT a
	FLAT b
	LARGE_BIOMES c
	index e
	name f
	$values ()[Lcom/mojang/realmsclient/util/LevelType; c
	getDtoIndex ()I b
	getName ()Lnet/minecraft/network/chat/Component; a
com/mojang/realmsclient/util/RealmsPersistence eeh
	FILE_NAME a
	GSON b
	LOGGER c
	getPathToData ()Ljava/io/File; c
	read ()Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData; a
	readFile ()Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData; b
	save (Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData;)V a
	writeFile (Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData;)V b
com/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData eeh$a
	hasUnreadNews b
	newsLink a
com/mojang/realmsclient/util/RealmsTextureManager eei
	FETCHED_SKINS c
	LOGGER d
	SKIN_FETCH_STATUS b
	TEMPLATE_ICON_LOCATION e
	TEXTURES a
	bindDefaultFace (Ljava/util/UUID;)V a
	bindFace (Ljava/lang/String;)V a
	bindWorldTemplate (Ljava/lang/String;Ljava/lang/String;)V a
	getTextureId (Ljava/lang/String;Ljava/lang/String;)I b
	withBoundFace (Ljava/lang/String;Ljava/lang/Runnable;)V a
com/mojang/realmsclient/util/RealmsTextureManager$RealmsTexture eei$a
	image a
	textureId b
com/mojang/realmsclient/util/RealmsTextureManager$TextureData eei$b
	MISSING d
	data c
	height b
	width a
	load (Ljava/lang/String;)Lcom/mojang/realmsclient/util/RealmsTextureManager$TextureData; a
com/mojang/realmsclient/util/RealmsUtil eej
	AUTHENTICATION_SERVICE b
	DAYS f
	HOURS e
	MINUTES d
	SESSION_SERVICE c
	gameProfileCache a
	convertToAgePresentation (J)Ljava/lang/String; a
	convertToAgePresentationFromInstant (Ljava/util/Date;)Ljava/lang/String; a
	getTextures (Ljava/lang/String;)Ljava/util/Map; b
	uuidToName (Ljava/lang/String;)Ljava/lang/String; a
com/mojang/realmsclient/util/SkinProcessor eek
	height c
	pixels a
	width b
	doLegacyTransparencyHack (IIII)V a
	process (Ljava/awt/image/BufferedImage;)Ljava/awt/image/BufferedImage; a
	setNoAlpha (IIII)V b
com/mojang/realmsclient/util/TextRenderingUtils eel
	decompose (Ljava/lang/String;Ljava/util/List;)Ljava/util/List; a
	decompose (Ljava/lang/String;[Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment;)Ljava/util/List; a
	insertLinks (Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	lineBreak (Ljava/lang/String;)Ljava/util/List; a
	split (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; a
com/mojang/realmsclient/util/TextRenderingUtils$Line eel$a
	segments a
com/mojang/realmsclient/util/TextRenderingUtils$LineSegment eel$b
	fullText a
	linkTitle b
	linkUrl c
	getLinkUrl ()Ljava/lang/String; c
	isLink ()Z b
	link (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment; a
	renderedText ()Ljava/lang/String; a
	text (Ljava/lang/String;)Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment; a
com/mojang/realmsclient/util/UploadTokenCache eem
	TOKEN_CACHE a
	get (J)Ljava/lang/String; a
	invalidate (J)V b
	put (JLjava/lang/String;)V a
com/mojang/realmsclient/util/WorldGenerationInfo een
	generateStructures c
	levelType b
	seed a
	getLevelType ()Lcom/mojang/realmsclient/util/LevelType; b
	getSeed ()Ljava/lang/String; a
	shouldGenerateStructures ()Z c
com/mojang/realmsclient/util/task/CloseServerTask eep
	LOGGER c
	configureScreen e
	serverData d
com/mojang/realmsclient/util/task/ConnectTask eeq
	address e
	realmsConnect c
	server d
	abortTask ()V a
	tick ()V b
com/mojang/realmsclient/util/task/DownloadTask eer
	LOGGER c
	downloadName g
	lastScreen f
	slot e
	worldId d
com/mojang/realmsclient/util/task/GetServerDetailsTask ees
	LOGGER c
	connectLock g
	lastScreen e
	mainScreen f
	server d
	connectScreen (Lcom/mojang/realmsclient/dto/RealmsServerAddress;)Lcom/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen; a
	fetchServerAddress ()Lcom/mojang/realmsclient/dto/RealmsServerAddress; e
	resourcePackDownloadConfirmationScreen (Lcom/mojang/realmsclient/dto/RealmsServerAddress;Ljava/util/function/Function;)Lcom/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen; a
	scheduleResourcePackDownload (Lcom/mojang/realmsclient/dto/RealmsServerAddress;)Ljava/util/concurrent/CompletableFuture; b
com/mojang/realmsclient/util/task/LongRunningTask eet
	LOGGER c
	NUMBER_OF_RETRIES a
	longRunningMcoTaskScreen b
	abortTask ()V a
	aborted ()Z c
	error (Lnet/minecraft/network/chat/Component;)V a
	init ()V d
	pause (J)V a
	setScreen (Lcom/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen;)V a
	setScreen (Lnet/minecraft/client/gui/screens/Screen;)V a
	setTitle (Lnet/minecraft/network/chat/Component;)V b
	tick ()V b
com/mojang/realmsclient/util/task/OpenServerTask eeu
	LOGGER c
	join f
	mainScreen g
	minecraft h
	returnScreen e
	serverData d
com/mojang/realmsclient/util/task/ResettingGeneratedWorldTask eev
	generationInfo c
	sendResetRequest (Lcom/mojang/realmsclient/client/RealmsClient;J)V a
com/mojang/realmsclient/util/task/ResettingTemplateWorldTask eew
	template c
	sendResetRequest (Lcom/mojang/realmsclient/client/RealmsClient;J)V a
com/mojang/realmsclient/util/task/ResettingWorldTask eex
	LOGGER c
	callback f
	serverId d
	title e
	sendResetRequest (Lcom/mojang/realmsclient/client/RealmsClient;J)V a
com/mojang/realmsclient/util/task/RestoreTask eey
	LOGGER c
	backup d
	lastScreen f
	worldId e
com/mojang/realmsclient/util/task/SwitchMinigameTask eez
	LOGGER c
	lastScreen f
	worldId d
	worldTemplate e
com/mojang/realmsclient/util/task/SwitchSlotTask efa
	LOGGER c
	callback f
	slot e
	worldId d
com/mojang/realmsclient/util/task/WorldCreationTask efb
	LOGGER c
	lastScreen g
	motd e
	name d
	worldId f
net/minecraft/BlockUtil n
	getLargestRectangleAround (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$Axis;ILnet/minecraft/core/Direction$Axis;ILjava/util/function/Predicate;)Lnet/minecraft/BlockUtil$FoundRectangle; a
	getLimit (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/Direction;I)I a
	getMaxRectangleLocation ([I)Lcom/mojang/datafixers/util/Pair; a
	getTopConnectedBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; a
net/minecraft/BlockUtil$FoundRectangle n$a
	axis1Size b
	axis2Size c
	minCorner a
net/minecraft/BlockUtil$IntBounds n$b
	max b
	min a
net/minecraft/CharPredicate o
net/minecraft/ChatFormatting p
	$VALUES G
	AQUA l
	BLACK a
	BLUE j
	BOLD r
	CODEC w
	DARK_AQUA d
	DARK_BLUE b
	DARK_GRAY i
	DARK_GREEN c
	DARK_PURPLE f
	DARK_RED e
	FORMATTING_BY_NAME y
	GOLD g
	GRAY h
	GREEN k
	ITALIC u
	LIGHT_PURPLE n
	OBFUSCATED q
	PREFIX_CODE x
	RED m
	RESET v
	STRIKETHROUGH s
	STRIP_FORMATTING_PATTERN z
	UNDERLINE t
	WHITE p
	YELLOW o
	code B
	color F
	id E
	isFormat C
	name A
	toString D
	$values ()[Lnet/minecraft/ChatFormatting; h
	cleanName (Ljava/lang/String;)Ljava/lang/String; c
	getByCode (C)Lnet/minecraft/ChatFormatting; a
	getById (I)Lnet/minecraft/ChatFormatting; a
	getByName (Ljava/lang/String;)Lnet/minecraft/ChatFormatting; b
	getChar ()C a
	getColor ()Ljava/lang/Integer; f
	getId ()I b
	getName ()Ljava/lang/String; g
	getNames (ZZ)Ljava/util/Collection; a
	getSerializedName ()Ljava/lang/String; c
	isColor ()Z e
	isFormat ()Z d
	stripFormatting (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/CrashReport q
	DATE_TIME_FORMATTER b
	LOGGER a
	details e
	exception d
	saveFile f
	systemReport i
	title c
	trackingStackTrace g
	uncategorizedStackTrace h
	addCategory (Ljava/lang/String;)Lnet/minecraft/CrashReportCategory; a
	addCategory (Ljava/lang/String;I)Lnet/minecraft/CrashReportCategory; a
	forThrowable (Ljava/lang/Throwable;Ljava/lang/String;)Lnet/minecraft/CrashReport; a
	getDetails ()Ljava/lang/String; c
	getDetails (Ljava/lang/StringBuilder;)V a
	getErrorComment ()Ljava/lang/String; i
	getException ()Ljava/lang/Throwable; b
	getExceptionMessage ()Ljava/lang/String; d
	getFriendlyReport ()Ljava/lang/String; e
	getSaveFile ()Ljava/io/File; f
	getSystemReport ()Lnet/minecraft/SystemReport; g
	getTitle ()Ljava/lang/String; a
	preload ()V h
	saveToFile (Ljava/io/File;)Z a
net/minecraft/CrashReportCategory r
	entries b
	stackTrace c
	title a
	fillInStackTrace (I)I a
	formatLocation (Lnet/minecraft/world/level/LevelHeightAccessor;DDD)Ljava/lang/String; a
	formatLocation (Lnet/minecraft/world/level/LevelHeightAccessor;III)Ljava/lang/String; a
	formatLocation (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	getDetails (Ljava/lang/StringBuilder;)V a
	getStacktrace ()[Ljava/lang/StackTraceElement; a
	populateBlockDetails (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setDetail (Ljava/lang/String;Ljava/lang/Object;)Lnet/minecraft/CrashReportCategory; a
	setDetail (Ljava/lang/String;Lnet/minecraft/CrashReportDetail;)Lnet/minecraft/CrashReportCategory; a
	setDetailError (Ljava/lang/String;Ljava/lang/Throwable;)V a
	trimStacktrace (I)V b
	validateStackTrace (Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z a
net/minecraft/CrashReportCategory$Entry r$a
	key a
	value b
	getKey ()Ljava/lang/String; a
	getValue ()Ljava/lang/String; b
net/minecraft/CrashReportDetail s
net/minecraft/DefaultUncaughtExceptionHandler t
	logger a
net/minecraft/DefaultUncaughtExceptionHandlerWithName u
	logger a
net/minecraft/DetectedVersion v
	BUILT_IN a
	LOGGER b
	buildTime j
	dataPackVersion i
	id c
	name d
	protocolVersion g
	releaseTarget k
	resourcePackVersion h
	stable e
	worldVersion f
	getDataVersion ()Lnet/minecraft/world/level/storage/DataVersion; b
	tryDetectVersion ()Lnet/minecraft/WorldVersion; a
net/minecraft/FieldsAreNonnullByDefault w
net/minecraft/FileUtil x
	COPY_COUNTER_PATTERN a
	MAX_FILE_NAME b
	RESERVED_WINDOWS_FILENAMES c
	createPathToResource (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path; b
	findAvailableName (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	getFullResourcePath (Ljava/lang/String;)Ljava/lang/String; a
	isPathNormalized (Ljava/nio/file/Path;)Z a
	isPathPortable (Ljava/nio/file/Path;)Z b
	normalizeResourcePath (Ljava/lang/String;)Ljava/lang/String; b
net/minecraft/MethodsReturnNonnullByDefault y
net/minecraft/ReportedException z
	report a
	getReport ()Lnet/minecraft/CrashReport; a
net/minecraft/ResourceLocationException aa
net/minecraft/SharedConstants ab
	AVERAGE_GAME_TICKS_PER_RANDOM_TICK_PER_BLOCK aW
	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_GAME_DAY aY
	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_MINUTE aX
	CHECK_DATA_FIXER_SCHEMA aK
	CNC_PART_2_ITEMS_AND_BLOCKS m
	COMMAND_STACK_TRACES aE
	CURRENT_VERSION ba
	DATAFIXER_OPTIMIZATION_OPTION aM
	DATA_PACK_FORMAT k
	DATA_VERSION_TAG l
	DEBUG_ALLOW_LOW_SIM_DISTANCE t
	DEBUG_AQUIFERS ak
	DEBUG_BEES T
	DEBUG_BLOCK_BREAK V
	DEBUG_BRAIN S
	DEBUG_BYPASS_REALMS_VERSION_CHECK af
	DEBUG_CARVERS ac
	DEBUG_CHUNKS H
	DEBUG_COLLISION A
	DEBUG_DISABLE_AQUIFERS aq
	DEBUG_DISABLE_BELOW_ZERO_RETROGENERATION ax
	DEBUG_DISABLE_BLENDING aw
	DEBUG_DISABLE_CARVERS as
	DEBUG_DISABLE_FEATURES au
	DEBUG_DISABLE_FLUID_GENERATION ap
	DEBUG_DISABLE_LIQUID_SPREADING aj
	DEBUG_DISABLE_ORE_VEINS av
	DEBUG_DISABLE_STRUCTURES at
	DEBUG_DISABLE_SURFACE ar
	DEBUG_DONT_SAVE_WORLD Z
	DEBUG_DUMP_INTERPOLATED_TEXTURE_FRAMES K
	DEBUG_DUMP_TEXTURE_ATLAS J
	DEBUG_FEATURE_COUNT aI
	DEBUG_GAME_EVENT_LISTENERS I
	DEBUG_GOAL_SELECTOR Q
	DEBUG_HEIGHTMAP z
	DEBUG_HOTKEYS u
	DEBUG_IGNORE_LOCAL_MOB_CAP ah
	DEBUG_JFR_PROFILING_ENABLE_LEVEL_LOADING al
	DEBUG_KEEP_JIGSAW_BLOCKS_DURING_STRUCTURE_GEN Y
	DEBUG_LARGE_DRIPSTONE aa
	DEBUG_LIGHT E
	DEBUG_MONITOR_TICK_TIMES X
	DEBUG_NAMED_RUNNABLES P
	DEBUG_NEIGHBORSUPDATE C
	DEBUG_ONLY_GENERATE_HALF_THE_WORLD ao
	DEBUG_OPEN_INCOMPATIBLE_WORLDS s
	DEBUG_ORE_VEINS ad
	DEBUG_PACKET_SERIALIZATION ab
	DEBUG_PATHFINDING x
	DEBUG_RAIDS U
	DEBUG_RENDER w
	DEBUG_RESOURCE_LOAD_TIMES W
	DEBUG_SAVE_STRUCTURES_AS_SNBT M
	DEBUG_SCULK_CATALYST ae
	DEBUG_SHAPES B
	DEBUG_SHOW_SERVER_DEBUG_VALUES aG
	DEBUG_SMALL_SPAWN ai
	DEBUG_SOCIAL_INTERACTIONS ag
	DEBUG_SOLID_FACE G
	DEBUG_STORE_CHUNK_STACKTRACES aH
	DEBUG_STRUCTURES D
	DEBUG_STRUCTURE_EDIT_MODE L
	DEBUG_SUBTITLES aA
	DEBUG_SYNCHRONOUS_GL_LOGS N
	DEBUG_UI_NARRATION v
	DEBUG_VERBOSE_SERVER_EVENTS O
	DEBUG_VILLAGE_SECTIONS R
	DEBUG_WATER y
	DEBUG_WORLDGENATTEMPT F
	DEBUG_WORLD_RECREATE aF
	DEFAULT_MINECRAFT_PORT ay
	FAKE_MS_JITTER aC
	FAKE_MS_LATENCY aB
	FIX_SAND_DUPE q
	FIX_TNT_DUPE p
	ILLEGAL_FILE_CHARACTERS aS
	INGAME_DEBUG_OUTPUT az
	IS_RUNNING_IN_IDE aL
	MAXIMUM_TICK_TIME_NANOS aJ
	MAX_CHAINED_NEIGHBOR_UPDATES aQ
	MAX_CHAT_LENGTH aO
	MAX_COMMAND_LENGTH aP
	MAX_RENDER_DISTANCE aR
	MULTITHREADED_RENDERING o
	NETTY_LEAK_DETECTION aD
	RELEASE_NETWORK_PROTOCOL_VERSION f
	RELEASE_TARGET e
	RESOURCE_PACK_FORMAT j
	SERIES c
	SNAPSHOT a
	SNAPSHOT_NETWORK_PROTOCOL_VERSION g
	SNAPSHOT_PROTOCOL_BIT aZ
	SNBT_NAG_VERSION h
	THROW_ON_TASK_FAILURE i
	TICKS_PER_GAME_DAY aV
	TICKS_PER_MINUTE aU
	TICKS_PER_SECOND aT
	USE_DEBUG_FEATURES r
	USE_NEW_RENDERSYSTEM n
	VERSION_STRING d
	WORLD_RESOLUTION aN
	WORLD_VERSION b
	debugGenerateSquareTerrainWithoutNoise am
	debugGenerateStripedTerrainWithoutNoise an
	debugVoidTerrain (Lnet/minecraft/world/level/ChunkPos;)Z a
	enableDataFixerOptimizations ()V d
	filterText (Ljava/lang/String;)Ljava/lang/String; a
	filterText (Ljava/lang/String;Z)Ljava/lang/String; a
	getCurrentVersion ()Lnet/minecraft/WorldVersion; b
	getProtocolVersion ()I c
	isAllowedChatCharacter (C)Z a
	setVersion (Lnet/minecraft/WorldVersion;)V a
	tryDetectVersion ()V a
net/minecraft/SystemReport ac
	BYTES_PER_MEBIBYTE a
	JAVA_VERSION e
	JAVA_VM_VERSION f
	LOGGER c
	ONE_GIGA b
	OPERATING_SYSTEM d
	entries g
	appendToCrashReportString (Ljava/lang/StringBuilder;)V a
	ignoreErrors (Ljava/lang/String;Ljava/lang/Runnable;)V a
	putGraphics (Ljava/util/List;)V b
	putHardware (Loshi/SystemInfo;)V a
	putMemory (Loshi/hardware/GlobalMemory;)V a
	putPhysicalMemory (Ljava/util/List;)V a
	putProcessor (Loshi/hardware/CentralProcessor;)V a
	putVirtualMemory (Loshi/hardware/VirtualMemory;)V a
	setDetail (Ljava/lang/String;Ljava/lang/String;)V a
	setDetail (Ljava/lang/String;Ljava/util/function/Supplier;)V a
	toLineSeparatedString ()Ljava/lang/String; a
net/minecraft/Util ad
	BACKGROUND_EXECUTOR j
	BOOTSTRAP_EXECUTOR i
	DEFAULT_MAX_THREADS f
	FILENAME_DATE_TIME_FORMATTER l
	IO_POOL k
	LOGGER e
	MAX_THREADS_SYSTEM_PROPERTY g
	NIL_UUID c
	TICKER b
	WORKER_COUNT h
	ZIP_FILE_SYSTEM_PROVIDER d
	thePauser m
	timeSource a
	backgroundExecutor ()Ljava/util/concurrent/ExecutorService; g
	blockUntilDone (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; b
	blockUntilDone (Ljava/util/function/Function;Ljava/util/function/Predicate;)Ljava/lang/Object; a
	bootstrapExecutor ()Ljava/util/concurrent/ExecutorService; f
	copyBetweenDirs (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V b
	createDeleter (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; a
	createFileCreatedCheck (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; c
	createFileDeletedCheck (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; b
	createIndexLookup (Ljava/util/List;)Ljava/util/function/ToIntFunction; e
	createIndexLookup (Ljava/util/List;Ljava/util/function/IntFunction;)Ljava/util/function/ToIntFunction; a
	createRenamer (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; a
	describeError (Ljava/lang/Throwable;)Ljava/lang/String; d
	doFetchChoiceType (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; b
	doPause (Ljava/lang/String;)V c
	executeInSequence ([Ljava/util/function/BooleanSupplier;)Z a
	failedFuture (Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture; a
	fallibleSequence (Ljava/util/List;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; a
	fetchChoiceType (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; a
	findNextInIterable (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; a
	findPreviousInIterable (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; b
	fixedSize (Ljava/util/List;I)Lcom/mojang/serialization/DataResult; a
	fixedSize (Ljava/util/stream/IntStream;I)Lcom/mojang/serialization/DataResult; a
	getEpochMillis ()J d
	getFilenameFormattedDateTime ()Ljava/lang/String; e
	getMaxThreads ()I n
	getMillis ()J b
	getNanos ()J c
	getPlatform ()Lnet/minecraft/Util$OS; j
	getPropertyName (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Object;)Ljava/lang/String; a
	getRandom (Ljava/util/List;Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; a
	getRandom ([ILnet/minecraft/util/RandomSource;)I a
	getRandom ([Ljava/lang/Object;Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; a
	getRandomSafe (Ljava/util/List;Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; b
	getVmArguments ()Ljava/util/stream/Stream; k
	identityStrategy ()Lit/unimi/dsi/fastutil/Hash$Strategy; l
	ifElse (Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional; a
	ioPool ()Ljava/util/concurrent/ExecutorService; h
	lastOf (Ljava/util/List;)Ljava/lang/Object; a
	logAndPauseIfInIde (Ljava/lang/String;)V a
	logAndPauseIfInIde (Ljava/lang/String;Ljava/lang/Throwable;)V a
	make (Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object; a
	make (Ljava/util/function/Supplier;)Ljava/lang/Object; a
	makeDescriptionId (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; a
	makeExecutor (Ljava/lang/String;)Ljava/util/concurrent/ExecutorService; b
	makeIoExecutor ()Ljava/util/concurrent/ExecutorService; o
	mapNullable (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object; a
	mapNullable (Ljava/lang/Object;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	memoize (Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction; a
	memoize (Ljava/util/function/Function;)Ljava/util/function/Function; a
	name (Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable; a
	name (Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/util/function/Supplier; a
	offsetByCodepoints (Ljava/lang/String;II)I a
	onThreadException (Ljava/lang/Thread;Ljava/lang/Throwable;)V a
	pauseInIde (Ljava/lang/Throwable;)Ljava/lang/Throwable; c
	prefix (Ljava/lang/String;Ljava/util/function/Consumer;)Ljava/util/function/Consumer; a
	runWithRetries (ILjava/lang/String;[Ljava/util/function/BooleanSupplier;)Z a
	safeReplaceFile (Ljava/io/File;Ljava/io/File;Ljava/io/File;)V a
	safeReplaceFile (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V a
	safeReplaceOrMoveFile (Ljava/io/File;Ljava/io/File;Ljava/io/File;Z)V a
	safeReplaceOrMoveFile (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;Z)V a
	sanitizeName (Ljava/lang/String;Lnet/minecraft/CharPredicate;)Ljava/lang/String; a
	sequence (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; b
	sequenceFailFast (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; c
	sequenceFailFastAndCancel (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; d
	setPause (Ljava/util/function/Consumer;)V a
	shuffle (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/util/RandomSource;)V b
	shuffledCopy (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	shuffledCopy ([Ljava/lang/Object;Lnet/minecraft/util/RandomSource;)Ljava/util/List; b
	shutdownExecutor (Ljava/util/concurrent/ExecutorService;)V a
	shutdownExecutors ()V i
	startTimerHackThread ()V m
	throwAsRuntime (Ljava/lang/Throwable;)V b
	toMap ()Ljava/util/stream/Collector; a
	toShuffledList (Ljava/util/stream/IntStream;Lnet/minecraft/util/RandomSource;)Lit/unimi/dsi/fastutil/ints/IntArrayList; a
	toShuffledList (Ljava/util/stream/Stream;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	wrapThreadWithTaskName (Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Runnable; a
	wrapThreadWithTaskName (Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/function/Supplier; a
net/minecraft/Util$IdentityStrategy ad$a
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/Util$IdentityStrategy; a
net/minecraft/Util$OS ad$b
	$VALUES g
	LINUX a
	OSX d
	SOLARIS b
	UNKNOWN e
	WINDOWS c
	telemetryName f
	$values ()[Lnet/minecraft/Util$OS; b
	getOpenUrlArguments (Ljava/net/URL;)[Ljava/lang/String; b
	openFile (Ljava/io/File;)V a
	openUri (Ljava/lang/String;)V a
	openUri (Ljava/net/URI;)V a
	openUrl (Ljava/net/URL;)V a
	telemetryName ()Ljava/lang/String; a
net/minecraft/WorldVersion ae
	getDataVersion ()Lnet/minecraft/world/level/storage/DataVersion; b
net/minecraft/advancements/Advancement af
	chatComponent h
	children g
	criteria e
	display b
	id d
	parent a
	requirements f
	rewards c
	addChild (Lnet/minecraft/advancements/Advancement;)V a
	deconstruct ()Lnet/minecraft/advancements/Advancement$Builder; a
	getChatComponent ()Lnet/minecraft/network/chat/Component; j
	getChildren ()Ljava/lang/Iterable; e
	getCriteria ()Ljava/util/Map; f
	getDisplay ()Lnet/minecraft/advancements/DisplayInfo; c
	getId ()Lnet/minecraft/resources/ResourceLocation; h
	getMaxCriteraRequired ()I g
	getParent ()Lnet/minecraft/advancements/Advancement; b
	getRequirements ()[[Ljava/lang/String; i
	getRewards ()Lnet/minecraft/advancements/AdvancementRewards; d
net/minecraft/advancements/Advancement$Builder af$a
	criteria e
	display c
	parent b
	parentId a
	requirements f
	requirementsStrategy g
	rewards d
	addCriterion (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lnet/minecraft/advancements/Advancement$Builder; a
	addCriterion (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/advancements/Advancement$Builder; a
	advancement ()Lnet/minecraft/advancements/Advancement$Builder; a
	build (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement; b
	canBuild (Ljava/util/function/Function;)Z a
	display (Lnet/minecraft/advancements/DisplayInfo;)Lnet/minecraft/advancements/Advancement$Builder; a
	display (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/advancements/FrameType;ZZZ)Lnet/minecraft/advancements/Advancement$Builder; a
	display (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/advancements/FrameType;ZZZ)Lnet/minecraft/advancements/Advancement$Builder; a
	fromJson (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/Advancement$Builder; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/Advancement$Builder; b
	getCriteria ()Ljava/util/Map; c
	parent (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/advancements/Advancement$Builder; a
	parent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement$Builder; a
	requirements (Lnet/minecraft/advancements/RequirementsStrategy;)Lnet/minecraft/advancements/Advancement$Builder; a
	requirements ([[Ljava/lang/String;)Lnet/minecraft/advancements/Advancement$Builder; a
	rewards (Lnet/minecraft/advancements/AdvancementRewards$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
	rewards (Lnet/minecraft/advancements/AdvancementRewards;)Lnet/minecraft/advancements/Advancement$Builder; a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)Lnet/minecraft/advancements/Advancement; a
	serializeToJson ()Lcom/google/gson/JsonObject; b
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/AdvancementList ag
	LOGGER a
	advancements b
	listener e
	roots c
	tasks d
	add (Ljava/util/Map;)V a
	clear ()V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement; a
	getAllAdvancements ()Ljava/util/Collection; c
	getRoots ()Ljava/lang/Iterable; b
	remove (Ljava/util/Set;)V a
	remove (Lnet/minecraft/advancements/Advancement;)V a
	setListener (Lnet/minecraft/advancements/AdvancementList$Listener;)V a
net/minecraft/advancements/AdvancementList$Listener ag$a
	onAddAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V a
	onAddAdvancementTask (Lnet/minecraft/advancements/Advancement;)V c
	onAdvancementsCleared ()V a
	onRemoveAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V b
	onRemoveAdvancementTask (Lnet/minecraft/advancements/Advancement;)V d
net/minecraft/advancements/AdvancementProgress ah
	criteria a
	requirements b
	compareTo (Lnet/minecraft/advancements/AdvancementProgress;)I a
	countCompletedRequirements ()I h
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/AdvancementProgress; b
	getCompletedCriteria ()Ljava/lang/Iterable; f
	getCriterion (Ljava/lang/String;)Lnet/minecraft/advancements/CriterionProgress; c
	getFirstProgressDate ()Ljava/util/Date; g
	getPercent ()F c
	getProgressText ()Ljava/lang/String; d
	getRemainingCriteria ()Ljava/lang/Iterable; e
	grantProgress (Ljava/lang/String;)Z a
	hasProgress ()Z b
	isDone ()Z a
	revokeProgress (Ljava/lang/String;)Z b
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	update (Ljava/util/Map;[[Ljava/lang/String;)V a
net/minecraft/advancements/AdvancementProgress$Serializer ah$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/advancements/AdvancementProgress; a
	serialize (Lnet/minecraft/advancements/AdvancementProgress;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/advancements/AdvancementRewards ai
	EMPTY a
	experience b
	function e
	loot c
	recipes d
	deserialize (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/AdvancementRewards; a
	getRecipes ()[Lnet/minecraft/resources/ResourceLocation; a
	grant (Lnet/minecraft/server/level/ServerPlayer;)V a
	serializeToJson ()Lcom/google/gson/JsonElement; b
net/minecraft/advancements/AdvancementRewards$Builder ai$a
	experience a
	function d
	loot b
	recipes c
	addExperience (I)Lnet/minecraft/advancements/AdvancementRewards$Builder; b
	addLootTable (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; b
	addRecipe (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; d
	build ()Lnet/minecraft/advancements/AdvancementRewards; a
	experience (I)Lnet/minecraft/advancements/AdvancementRewards$Builder; a
	function (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; e
	loot (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; a
	recipe (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; c
	runs (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; f
net/minecraft/advancements/CriteriaTriggers aj
	ALLAY_DROP_ITEM_ON_BLOCK X
	AVOID_VIBRATION Y
	BAD_OMEN I
	BEE_NEST_DESTROYED K
	BRED_ANIMALS o
	BREWED_POTION k
	CHANGED_DIMENSION v
	CHANNELED_LIGHTNING E
	CONSTRUCT_BEACON l
	CONSUME_ITEM z
	CRITERIA Z
	CURED_ZOMBIE_VILLAGER r
	EFFECTS_CHANGED A
	ENCHANTED_ITEM i
	ENTER_BLOCK d
	ENTITY_HURT_PLAYER h
	ENTITY_KILLED_PLAYER c
	FALL_FROM_HEIGHT U
	FILLED_BUCKET j
	FISHING_ROD_HOOKED D
	GENERATE_LOOT N
	HONEY_BLOCK_SLIDE J
	IMPOSSIBLE a
	INVENTORY_CHANGED e
	ITEM_DURABILITY_CHANGED t
	ITEM_USED_ON_BLOCK M
	KILLED_BY_CROSSBOW G
	KILL_MOB_NEAR_SCULK_CATALYST W
	LEVITATION u
	LIGHTNING_STRIKE S
	LOCATION p
	NETHER_TRAVEL C
	PLACED_BLOCK y
	PLAYER_HURT_ENTITY g
	PLAYER_INTERACTED_WITH_ENTITY Q
	PLAYER_KILLED_ENTITY b
	RAID_WIN H
	RECIPE_UNLOCKED f
	RIDE_ENTITY_IN_LAVA_TRIGGER V
	SHOT_CROSSBOW F
	SLEPT_IN_BED q
	START_RIDING_TRIGGER R
	SUMMONED_ENTITY n
	TAME_ANIMAL x
	TARGET_BLOCK_HIT L
	THROWN_ITEM_PICKED_UP_BY_ENTITY O
	THROWN_ITEM_PICKED_UP_BY_PLAYER P
	TICK w
	TRADE s
	USED_ENDER_EYE m
	USED_TOTEM B
	USING_ITEM T
	all ()Ljava/lang/Iterable; a
	getCriterion (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/CriterionTrigger; a
	register (Lnet/minecraft/advancements/CriterionTrigger;)Lnet/minecraft/advancements/CriterionTrigger; a
net/minecraft/advancements/Criterion ak
	trigger a
	criteriaFromJson (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Ljava/util/Map; b
	criteriaFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Ljava/util/Map; c
	criterionFromJson (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/Criterion; a
	criterionFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/Criterion; b
	getTrigger ()Lnet/minecraft/advancements/CriterionTriggerInstance; a
	serializeToJson ()Lcom/google/gson/JsonElement; b
	serializeToNetwork (Ljava/util/Map;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/CriterionProgress al
	DATE_FORMAT a
	obtained b
	fromJson (Ljava/lang/String;)Lnet/minecraft/advancements/CriterionProgress; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/CriterionProgress; b
	getObtained ()Ljava/util/Date; d
	grant ()V b
	isDone ()Z a
	revoke ()V c
	serializeToJson ()Lcom/google/gson/JsonElement; e
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/CriterionTrigger am
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/CriterionTriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
net/minecraft/advancements/CriterionTrigger$Listener am$a
	advancement b
	criterion c
	trigger a
	getTriggerInstance ()Lnet/minecraft/advancements/CriterionTriggerInstance; a
	run (Lnet/minecraft/server/PlayerAdvancements;)V a
net/minecraft/advancements/CriterionTriggerInstance an
	getCriterion ()Lnet/minecraft/resources/ResourceLocation; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/DisplayInfo ao
	announceChat g
	background d
	description b
	frame e
	hidden h
	icon c
	showToast f
	title a
	x i
	y j
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/DisplayInfo; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/DisplayInfo; b
	getBackground ()Lnet/minecraft/resources/ResourceLocation; d
	getDescription ()Lnet/minecraft/network/chat/Component; b
	getFrame ()Lnet/minecraft/advancements/FrameType; e
	getIcon ()Lnet/minecraft/world/item/ItemStack; c
	getIcon (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/ItemStack; b
	getTitle ()Lnet/minecraft/network/chat/Component; a
	getX ()F f
	getY ()F g
	isHidden ()Z j
	serializeIcon ()Lcom/google/gson/JsonObject; l
	serializeToJson ()Lcom/google/gson/JsonElement; k
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	setLocation (FF)V a
	shouldAnnounceChat ()Z i
	shouldShowToast ()Z h
net/minecraft/advancements/FrameType ap
	$VALUES h
	CHALLENGE b
	GOAL c
	TASK a
	chatColor f
	displayName g
	name d
	texture e
	$values ()[Lnet/minecraft/advancements/FrameType; e
	byName (Ljava/lang/String;)Lnet/minecraft/advancements/FrameType; a
	getChatColor ()Lnet/minecraft/ChatFormatting; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getName ()Ljava/lang/String; a
	getTexture ()I b
net/minecraft/advancements/RequirementsStrategy aq
	AND a
	OR b
net/minecraft/advancements/TreeNodePosition ar
	advancement a
	ancestor f
	change k
	childIndex d
	children e
	mod j
	parent b
	previousSibling c
	shift l
	thread g
	x h
	y i
	addChild (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	apportion (Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	executeShifts ()V b
	finalizePosition ()V e
	firstWalk ()V a
	getAncestor (Lnet/minecraft/advancements/TreeNodePosition;Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	moveSubtree (Lnet/minecraft/advancements/TreeNodePosition;F)V a
	nextOrThread ()Lnet/minecraft/advancements/TreeNodePosition; d
	previousOrThread ()Lnet/minecraft/advancements/TreeNodePosition; c
	run (Lnet/minecraft/advancements/Advancement;)V a
	secondWalk (FIF)F a
	thirdWalk (F)V a
net/minecraft/advancements/critereon/AbstractCriterionTriggerInstance as
	criterion a
	player b
	getCriterion ()Lnet/minecraft/resources/ResourceLocation; a
	getPlayerPredicate ()Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; b
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/BeeNestDestroyedTrigger at
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance at$a
	block a
	item b
	numBees c
	destroyedBeeNest (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/BlockPredicate au
	ANY a
	blocks c
	nbt e
	properties d
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/BlockPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/BlockPredicate$Builder au$a
	blocks a
	nbt d
	properties c
	tag b
	block ()Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/BlockPredicate; b
	hasNbt (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	of (Ljava/lang/Iterable;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	of (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	of ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
net/minecraft/advancements/critereon/BredAnimalsTrigger av
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/AgeableMob;)V a
net/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance av$a
	child c
	parent a
	partner b
	bredAnimals ()Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; c
	bredAnimals (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; a
	bredAnimals (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/BrewedPotionTrigger aw
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/alchemy/Potion;)V a
net/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance aw$a
	potion a
	brewedPotion ()Lnet/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance; c
	matches (Lnet/minecraft/world/item/alchemy/Potion;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ChangeDimensionTrigger ax
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)V a
net/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance ax$a
	from a
	to b
	changedDimension ()Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; c
	changedDimension (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; a
	changedDimensionFrom (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; b
	changedDimensionTo (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; a
	matches (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)Z b
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ChanneledLightningTrigger ay
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance ay$a
	victims a
	channeledLightning ([Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance; a
	matches (Ljava/util/Collection;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ConstructBeaconTrigger az
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;I)V a
net/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance az$a
	level a
	constructedBeacon ()Lnet/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance; c
	constructedBeacon (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance; a
	matches (I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ConsumeItemTrigger ba
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance ba$a
	item a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	usedItem ()Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; c
	usedItem (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; a
	usedItem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/CuredZombieVillagerTrigger bb
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/monster/Zombie;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance bb$a
	villager b
	zombie a
	curedZombieVillager ()Lnet/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance; c
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/DamagePredicate bc
	ANY a
	blocked e
	dealtDamage b
	sourceEntity d
	takenDamage c
	type f
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/DamagePredicate; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/DamagePredicate$Builder bc$a
	blocked d
	dealtDamage a
	sourceEntity c
	takenDamage b
	type e
	blocked (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/DamagePredicate; b
	damageInstance ()Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	dealtDamage (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	sourceEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	takenDamage (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; b
	type (Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	type (Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
net/minecraft/advancements/critereon/DamageSourcePredicate bd
	ANY a
	bypassesArmor d
	bypassesInvulnerability e
	bypassesMagic f
	directEntity j
	isExplosion c
	isFire g
	isLightning i
	isMagic h
	isProjectile b
	sourceEntity k
	addOptionally (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate; a
	getOptionalBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/DamageSourcePredicate$Builder bd$a
	bypassesArmor c
	bypassesInvulnerability d
	bypassesMagic e
	directEntity i
	isExplosion b
	isFire f
	isLightning h
	isMagic g
	isProjectile a
	sourceEntity j
	build ()Lnet/minecraft/advancements/critereon/DamageSourcePredicate; b
	bypassesArmor (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; c
	bypassesInvulnerability (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; d
	bypassesMagic (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; e
	damageType ()Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	direct (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	direct (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	isExplosion (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; b
	isFire (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; f
	isLightning (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; h
	isMagic (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; g
	isProjectile (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	source (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; b
	source (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; b
net/minecraft/advancements/critereon/DeserializationContext be
	LOGGER a
	id b
	predicateGson d
	predicateManager c
	deserializeConditions (Lcom/google/gson/JsonArray;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; a
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/advancements/critereon/DistancePredicate bf
	ANY a
	absolute f
	horizontal e
	x b
	y c
	z d
	absolute (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DistancePredicate; c
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/DistancePredicate; a
	horizontal (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DistancePredicate; a
	matches (DDDDDD)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
	vertical (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DistancePredicate; b
net/minecraft/advancements/critereon/DistanceTrigger bg
	id a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance bg$a
	distance b
	startPosition a
	fallFromHeight (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DistancePredicate;Lnet/minecraft/advancements/critereon/LocationPredicate;)Lnet/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	rideEntityInLava (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	travelledThroughNether (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/EffectsChangedTrigger bh
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance bh$a
	effects a
	source b
	gotEffectsFrom (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance; a
	hasEffects (Lnet/minecraft/advancements/critereon/MobEffectsPredicate;)Lnet/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EnchantedItemTrigger bi
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance bi$a
	item a
	levels b
	enchantedItem ()Lnet/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance; c
	matches (Lnet/minecraft/world/item/ItemStack;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EnchantmentPredicate bj
	ANY a
	NONE b
	enchantment c
	level d
	containedIn (Ljava/util/Map;)Z a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EnchantmentPredicate; a
	fromJsonArray (Lcom/google/gson/JsonElement;)[Lnet/minecraft/advancements/critereon/EnchantmentPredicate; b
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EnterBlockTrigger bk
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance bk$a
	block a
	state b
	entersBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EntityEquipmentPredicate bl
	ANY a
	CAPTAIN b
	chest d
	feet f
	head c
	legs e
	mainhand g
	offhand h
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate; a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder bl$a
	chest b
	feet d
	head a
	legs c
	mainhand e
	offhand f
	build ()Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate; b
	chest (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; b
	equipment ()Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; a
	feet (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; d
	head (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; a
	legs (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; c
	mainhand (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; e
	offhand (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; f
net/minecraft/advancements/critereon/EntityFlagsPredicate bm
	ANY a
	isBaby f
	isCrouching c
	isOnFire b
	isSprinting d
	isSwimming e
	addOptionalBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate; a
	getOptionalBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityFlagsPredicate$Builder bm$a
	isBaby e
	isCrouching b
	isOnFire a
	isSprinting c
	isSwimming d
	build ()Lnet/minecraft/advancements/critereon/EntityFlagsPredicate; b
	flags ()Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; a
	setCrouching (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; b
	setIsBaby (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; e
	setOnFire (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; a
	setSprinting (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; c
	setSwimming (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; d
net/minecraft/advancements/critereon/EntityHurtPlayerTrigger bn
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)V a
net/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance bn$a
	damage a
	entityHurtPlayer ()Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; c
	entityHurtPlayer (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;)Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; a
	entityHurtPlayer (Lnet/minecraft/advancements/critereon/DamagePredicate;)Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EntityPredicate bo
	ANY a
	distanceToPlayer c
	effects f
	entityType b
	equipment i
	flags h
	location d
	nbt g
	passenger l
	steppingOnLocation e
	subPredicate j
	targetedEntity m
	team n
	vehicle k
	createContext (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/storage/loot/LootContext; b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityPredicate$Builder bo$a
	distanceToPlayer b
	effects e
	entityType a
	equipment h
	flags g
	location c
	nbt f
	passenger k
	steppingOnLocation d
	subPredicate i
	targetedEntity l
	team m
	vehicle j
	build ()Lnet/minecraft/advancements/critereon/EntityPredicate; b
	distance (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	effects (Lnet/minecraft/advancements/critereon/MobEffectsPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	entity ()Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	entityType (Lnet/minecraft/advancements/critereon/EntityTypePredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	equipment (Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	flags (Lnet/minecraft/advancements/critereon/EntityFlagsPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	located (Lnet/minecraft/advancements/critereon/LocationPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	nbt (Lnet/minecraft/advancements/critereon/NbtPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	of (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	of (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	passenger (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; b
	steppingOn (Lnet/minecraft/advancements/critereon/LocationPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; b
	subPredicate (Lnet/minecraft/advancements/critereon/EntitySubPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	targetedEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; c
	team (Ljava/lang/String;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	vehicle (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
net/minecraft/advancements/critereon/EntityPredicate$Composite bo$b
	ANY a
	compositePredicates c
	conditions b
	create ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; a
	fromElement (Ljava/lang/String;Lnet/minecraft/advancements/critereon/DeserializationContext;Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; a
	fromJson (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; a
	fromJsonArray (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/advancements/critereon/DeserializationContext;)[Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; b
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	toJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonElement; a
	toJson ([Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonElement; a
	wrap (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; a
net/minecraft/advancements/critereon/EntitySubPredicate bp
	ANY a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntitySubPredicate; a
	matches (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	serialize ()Lcom/google/gson/JsonElement; b
	serializeCustomData ()Lcom/google/gson/JsonObject; a
	type ()Lnet/minecraft/advancements/critereon/EntitySubPredicate$Type; c
	variant (Lnet/minecraft/world/entity/animal/CatVariant;)Lnet/minecraft/advancements/critereon/EntitySubPredicate; a
	variant (Lnet/minecraft/world/entity/animal/FrogVariant;)Lnet/minecraft/advancements/critereon/EntitySubPredicate; a
net/minecraft/advancements/critereon/EntitySubPredicate$Type bp$a
net/minecraft/advancements/critereon/EntitySubPredicate$Types bp$b
	ANY a
	CAT f
	FISHING_HOOK c
	FROG g
	LIGHTNING b
	PLAYER d
	SLIME e
	TYPES h
net/minecraft/advancements/critereon/EntityTypePredicate bq
	ANY a
	COMMA_JOINER b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityTypePredicate; a
	matches (Lnet/minecraft/world/entity/EntityType;)Z a
	of (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/EntityTypePredicate; a
	of (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/advancements/critereon/EntityTypePredicate; b
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityTypePredicate$TagPredicate bq$a
	tag b
	matches (Lnet/minecraft/world/entity/EntityType;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityTypePredicate$TypePredicate bq$b
	type b
	matches (Lnet/minecraft/world/entity/EntityType;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityVariantPredicate br
	VARIANT_KEY a
	getter c
	registry b
	type d
	create (Lnet/minecraft/core/Registry;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/EntityVariantPredicate; a
	createPredicate (Ljava/lang/Object;)Lnet/minecraft/advancements/critereon/EntitySubPredicate; a
	type ()Lnet/minecraft/advancements/critereon/EntitySubPredicate$Type; a
net/minecraft/advancements/critereon/FilledBucketTrigger bs
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance bs$a
	item a
	filledBucket (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/FishingHookPredicate bt
	ANY b
	IN_OPEN_WATER_KEY c
	inOpenWater d
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/critereon/FishingHookPredicate; a
	inOpenWater (Z)Lnet/minecraft/advancements/critereon/FishingHookPredicate; a
	matches (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	serializeCustomData ()Lcom/google/gson/JsonObject; a
	type ()Lnet/minecraft/advancements/critereon/EntitySubPredicate$Type; c
net/minecraft/advancements/critereon/FishingRodHookedTrigger bu
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/FishingHook;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance bu$a
	entity b
	item c
	rod a
	fishedItem (Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/Collection;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/FluidPredicate bv
	ANY a
	fluid c
	properties d
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/FluidPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/FluidPredicate$Builder bv$a
	fluid a
	fluids b
	properties c
	build ()Lnet/minecraft/advancements/critereon/FluidPredicate; b
	fluid ()Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	of (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	of (Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
net/minecraft/advancements/critereon/ImpossibleTrigger bw
	ID a
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/CriterionTriggerInstance; a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance; b
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
net/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance bw$a
	getCriterion ()Lnet/minecraft/resources/ResourceLocation; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/InventoryChangeTrigger bx
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;)V a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;III)V a
net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance bx$a
	predicates d
	slotsEmpty c
	slotsFull b
	slotsOccupied a
	hasItems ([Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	hasItems ([Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;III)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ItemDurabilityTrigger by
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance by$a
	delta c
	durability b
	item a
	changedDurability (Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance; a
	changedDurability (Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ItemInteractWithBlockTrigger bz
	id a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ItemInteractWithBlockTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ItemInteractWithBlockTrigger$TriggerInstance bz$a
	item b
	location a
	allayDropItemOnBlock (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/critereon/ItemInteractWithBlockTrigger$TriggerInstance; b
	itemUsedOnBlock (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/critereon/ItemInteractWithBlockTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ItemPredicate ca
	ANY a
	count d
	durability e
	enchantments f
	items c
	nbt i
	potion h
	storedEnchantments g
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/ItemPredicate; a
	fromJsonArray (Lcom/google/gson/JsonElement;)[Lnet/minecraft/advancements/critereon/ItemPredicate; b
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/ItemPredicate$Builder ca$a
	count e
	durability f
	enchantments a
	items c
	nbt h
	potion g
	storedEnchantments b
	tag d
	build ()Lnet/minecraft/advancements/critereon/ItemPredicate; b
	hasDurability (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; b
	hasEnchantment (Lnet/minecraft/advancements/critereon/EnchantmentPredicate;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	hasNbt (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	hasStoredEnchantment (Lnet/minecraft/advancements/critereon/EnchantmentPredicate;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; b
	isPotion (Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	item ()Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	of (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	of ([Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	withCount (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
net/minecraft/advancements/critereon/KilledByCrossbowTrigger cb
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance cb$a
	uniqueEntityTypes b
	victims a
	crossbowKilled (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance; a
	crossbowKilled ([Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance; a
	matches (Ljava/util/Collection;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/KilledTrigger cc
	id a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;)V a
net/minecraft/advancements/critereon/KilledTrigger$TriggerInstance cc$a
	entityPredicate a
	killingBlow b
	entityKilledPlayer ()Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; e
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	playerKilledEntity ()Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; c
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntityNearSculkCatalyst ()Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; d
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/LevitationTrigger cd
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;I)V a
net/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance cd$a
	distance a
	duration b
	levitated (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/LightPredicate ce
	ANY a
	composite b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/LightPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/LightPredicate$Builder ce$a
	composite a
	build ()Lnet/minecraft/advancements/critereon/LightPredicate; b
	light ()Lnet/minecraft/advancements/critereon/LightPredicate$Builder; a
	setComposite (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/LightPredicate$Builder; a
net/minecraft/advancements/critereon/LighthingBoltPredicate cf
	BLOCKS_SET_ON_FIRE_KEY b
	ENTITY_STRUCK_KEY c
	blocksSetOnFire d
	entityStruck e
	blockSetOnFire (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/LighthingBoltPredicate; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/critereon/LighthingBoltPredicate; a
	matches (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	serializeCustomData ()Lcom/google/gson/JsonObject; a
	type ()Lnet/minecraft/advancements/critereon/EntitySubPredicate$Type; c
net/minecraft/advancements/critereon/LightningStrikeTrigger cg
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/LightningBolt;Ljava/util/List;)V a
net/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance cg$a
	bystander b
	lightning a
	lighthingStrike (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/List;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/LocationPredicate ch
	ANY a
	LOGGER b
	biome f
	block k
	dimension h
	fluid l
	light j
	smokey i
	structure g
	x c
	y d
	z e
	atYLocation (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/LocationPredicate; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/LocationPredicate; a
	inBiome (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate; a
	inDimension (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate; b
	inStructure (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate; c
	matches (Lnet/minecraft/server/level/ServerLevel;DDD)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/LocationPredicate$Builder ch$a
	biome d
	block i
	dimension f
	fluid j
	light h
	smokey g
	structure e
	x a
	y b
	z c
	build ()Lnet/minecraft/advancements/critereon/LocationPredicate; b
	location ()Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setBiome (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setBlock (Lnet/minecraft/advancements/critereon/BlockPredicate;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setDimension (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; c
	setFluid (Lnet/minecraft/advancements/critereon/FluidPredicate;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setLight (Lnet/minecraft/advancements/critereon/LightPredicate;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setSmokey (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setStructure (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; b
	setX (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setY (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; b
	setZ (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; c
net/minecraft/advancements/critereon/LootTableTrigger ci
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/resources/ResourceLocation;)V a
net/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance ci$a
	lootTable a
	lootTableUsed (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance; a
	matches (Lnet/minecraft/resources/ResourceLocation;)Z b
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/MinMaxBounds cj
	ERROR_EMPTY a
	ERROR_SWAPPED b
	max d
	min c
	fromJson (Lcom/google/gson/JsonElement;Lnet/minecraft/advancements/critereon/MinMaxBounds;Ljava/util/function/BiFunction;Lnet/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory;)Lnet/minecraft/advancements/critereon/MinMaxBounds; a
	fromReader (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds; a
	getMax ()Ljava/lang/Number; b
	getMin ()Ljava/lang/Number; a
	isAllowedInputChat (Lcom/mojang/brigadier/StringReader;)Z a
	isAny ()Z c
	optionallyFormat (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object; a
	readNumber (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Number; a
	serializeToJson ()Lcom/google/gson/JsonElement; d
net/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory cj$a
net/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory cj$b
net/minecraft/advancements/critereon/MinMaxBounds$Doubles cj$c
	ANY e
	maxSq g
	minSq f
	atLeast (D)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; b
	atMost (D)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; c
	between (DD)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	create (Lcom/mojang/brigadier/StringReader;Ljava/lang/Double;Ljava/lang/Double;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	exactly (D)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	fromReader (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	fromReader (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	matches (D)Z d
	matchesSqr (D)Z e
	squareOpt (Ljava/lang/Double;)Ljava/lang/Double; a
net/minecraft/advancements/critereon/MinMaxBounds$Ints cj$d
	ANY e
	maxSq g
	minSq f
	atLeast (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; b
	atMost (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; c
	between (II)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	create (Lcom/mojang/brigadier/StringReader;Ljava/lang/Integer;Ljava/lang/Integer;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	exactly (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	fromReader (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	fromReader (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	matches (I)Z d
	matchesSqr (J)Z a
	squareOpt (Ljava/lang/Integer;)Ljava/lang/Long; a
net/minecraft/advancements/critereon/MobEffectsPredicate ck
	ANY a
	effects b
	and (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	and (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	effects ()Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	matches (Ljava/util/Map;)Z a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/world/entity/LivingEntity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; b
net/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate ck$a
	ambient c
	amplifier a
	duration b
	visible d
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate; a
	matches (Lnet/minecraft/world/effect/MobEffectInstance;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/NbtPredicate cl
	ANY a
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/NbtPredicate; a
	getEntityTagToCompare (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/nbt/CompoundTag; b
	matches (Lnet/minecraft/nbt/Tag;)Z a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PickedUpItemTrigger cm
	id a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PickedUpItemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/PickedUpItemTrigger$TriggerInstance cm$a
	entity b
	item a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	thrownItemPickedUpByEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;)Lnet/minecraft/advancements/critereon/PickedUpItemTrigger$TriggerInstance; a
	thrownItemPickedUpByPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;)Lnet/minecraft/advancements/critereon/PickedUpItemTrigger$TriggerInstance; b
net/minecraft/advancements/critereon/PlacedBlockTrigger cn
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance cn$a
	block a
	item d
	location c
	state b
	matches (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;)Z a
	placedBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/PlayerHurtEntityTrigger co
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;FFZ)V a
net/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance co$a
	damage a
	entity b
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	playerHurtEntity ()Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; c
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/PlayerInteractTrigger cp
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance cp$a
	entity b
	item a
	itemUsedOnEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;)Lnet/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance; a
	itemUsedOnEntity (Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;)Lnet/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/PlayerPredicate cq
	LOOKING_AT_RANGE b
	advancements g
	gameType d
	level c
	lookingAt h
	recipes f
	stats e
	advancementPredicateFromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate; b
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/critereon/PlayerPredicate; a
	getStat (Lnet/minecraft/stats/StatType;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/stats/Stat; a
	getStatValueId (Lnet/minecraft/stats/Stat;)Lnet/minecraft/resources/ResourceLocation; a
	matches (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	serializeCustomData ()Lcom/google/gson/JsonObject; a
	type ()Lnet/minecraft/advancements/critereon/EntitySubPredicate$Type; c
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementCriterionsPredicate cq$a
	criterions a
	test (Lnet/minecraft/advancements/AdvancementProgress;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementDonePredicate cq$b
	state a
	test (Lnet/minecraft/advancements/AdvancementProgress;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate cq$c
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$Builder cq$d
	advancements e
	gameType b
	level a
	lookingAt f
	recipes d
	stats c
	addRecipe (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	addStat (Lnet/minecraft/stats/Stat;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/PlayerPredicate; b
	checkAdvancementCriterions (Lnet/minecraft/resources/ResourceLocation;Ljava/util/Map;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	checkAdvancementDone (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; b
	player ()Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	setGameType (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	setLevel (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	setLookingAt (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
net/minecraft/advancements/critereon/PlayerTrigger cr
	id a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance cr$a
	avoidVibration ()Lnet/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance; e
	located (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance; a
	located (Lnet/minecraft/advancements/critereon/LocationPredicate;)Lnet/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance; a
	raidWon ()Lnet/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance; d
	sleptInBed ()Lnet/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance; c
	walkOnBlockWithEquipment (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/RecipeUnlockedTrigger cs
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/Recipe;)V a
	unlocked (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance cs$a
	recipe a
	matches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/SerializationContext ct
	INSTANCE a
	predicateGson b
	serializeConditions ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/ShotCrossbowTrigger cu
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance cu$a
	item a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	shotCrossbow (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance; a
	shotCrossbow (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/SimpleCriterionTrigger cv
	players a
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/CriterionTriggerInstance; a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/function/Predicate;)V a
net/minecraft/advancements/critereon/SlideDownBlockTrigger cw
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance cw$a
	block a
	state b
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	slidesDownBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/SlimePredicate cx
	size b
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/critereon/SlimePredicate; a
	matches (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	serializeCustomData ()Lcom/google/gson/JsonObject; a
	sized (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/SlimePredicate; a
	type ()Lnet/minecraft/advancements/critereon/EntitySubPredicate$Type; c
net/minecraft/advancements/critereon/StartRidingTrigger cy
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance cy$a
	playerStartsRiding (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/StatePropertiesPredicate cz
	ANY a
	properties b
	checkState (Lnet/minecraft/world/level/block/state/StateDefinition;Ljava/util/function/Consumer;)V a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate; a
	fromJson (Ljava/lang/String;Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher; a
	getStringOrNull (Lcom/google/gson/JsonElement;)Ljava/lang/String; b
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	matches (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/StateHolder;)Z a
	matches (Lnet/minecraft/world/level/material/FluidState;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$Builder cz$a
	matchers a
	build ()Lnet/minecraft/advancements/critereon/StatePropertiesPredicate; b
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;I)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Z)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	properties ()Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$ExactPropertyMatcher cz$b
	value a
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher cz$c
	name a
	checkState (Lnet/minecraft/world/level/block/state/StateDefinition;Ljava/util/function/Consumer;)V a
	getName ()Ljava/lang/String; b
	match (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/StateHolder;)Z a
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$RangedPropertyMatcher cz$d
	maxValue b
	minValue a
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/SummonedEntityTrigger da
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance da$a
	entity a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	summonedEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/TameAnimalTrigger db
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/animal/Animal;)V a
net/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance db$a
	entity a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	tamedAnimal ()Lnet/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance; c
	tamedAnimal (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/TargetBlockTrigger dc
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;I)V a
net/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance dc$a
	projectile b
	signalStrength a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/phys/Vec3;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	targetHit (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;)Lnet/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/TradeTrigger dd
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TradeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/npc/AbstractVillager;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance dd$a
	item b
	villager a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	tradedWithVillager ()Lnet/minecraft/advancements/critereon/TradeTrigger$TriggerInstance; c
	tradedWithVillager (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/TradeTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/UsedEnderEyeTrigger de
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance de$a
	level a
	matches (D)Z a
net/minecraft/advancements/critereon/UsedTotemTrigger df
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance df$a
	item a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	usedTotem (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance; a
	usedTotem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/UsingItemTrigger dg
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance dg$a
	item a
	lookingAt (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/WrappedMinMaxBounds dh
	ANY a
	ERROR_INTS_ONLY b
	max d
	min c
	atLeast (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; b
	atMost (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; c
	between (FF)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	exactly (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromReader (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromReader (Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	getMax ()Ljava/lang/Float; b
	getMin ()Ljava/lang/Float; a
	isAllowedNumber (Lcom/mojang/brigadier/StringReader;Z)Z c
	matches (F)Z d
	matchesSqr (D)Z a
	optionallyFormat (Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float; a
	readNumber (Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float; b
	serializeToJson ()Lcom/google/gson/JsonElement; c
net/minecraft/client/AmbientOcclusionStatus efd
	$VALUES g
	BY_ID d
	MAX c
	MIN b
	OFF a
	id e
	key f
	$values ()[Lnet/minecraft/client/AmbientOcclusionStatus; d
	byId (I)Lnet/minecraft/client/AmbientOcclusionStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/AttackIndicatorStatus efe
	$VALUES g
	BY_ID d
	CROSSHAIR b
	HOTBAR c
	OFF a
	id e
	key f
	$values ()[Lnet/minecraft/client/AttackIndicatorStatus; d
	byId (I)Lnet/minecraft/client/AttackIndicatorStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/Camera eff
	FOG_DISTANCE_SCALE a
	blockPosition f
	detached m
	entity d
	eyeHeight n
	eyeHeightOld o
	forwards g
	initialized b
	left i
	level c
	position e
	rotation l
	up h
	xRot j
	yRot k
	getBlockPosition ()Lnet/minecraft/core/BlockPos; c
	getEntity ()Lnet/minecraft/world/entity/Entity; g
	getFluidInCamera ()Lnet/minecraft/world/level/material/FogType; k
	getLeftVector ()Lcom/mojang/math/Vector3f; n
	getLookVector ()Lcom/mojang/math/Vector3f; l
	getMaxZoom (D)D a
	getNearPlane ()Lnet/minecraft/client/Camera$NearPlane; j
	getPosition ()Lnet/minecraft/world/phys/Vec3; b
	getUpVector ()Lcom/mojang/math/Vector3f; m
	getXRot ()F d
	getYRot ()F e
	isDetached ()Z i
	isInitialized ()Z h
	move (DDD)V a
	reset ()V o
	rotation ()Lcom/mojang/math/Quaternion; f
	setPosition (DDD)V b
	setPosition (Lnet/minecraft/world/phys/Vec3;)V a
	setRotation (FF)V a
	setup (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;ZZF)V a
	tick ()V a
net/minecraft/client/Camera$NearPlane eff$a
	forward a
	left b
	up c
	getBottomLeft ()Lnet/minecraft/world/phys/Vec3; c
	getBottomRight ()Lnet/minecraft/world/phys/Vec3; d
	getPointOnPlane (FF)Lnet/minecraft/world/phys/Vec3; a
	getTopLeft ()Lnet/minecraft/world/phys/Vec3; a
	getTopRight ()Lnet/minecraft/world/phys/Vec3; b
net/minecraft/client/CameraType efg
	$VALUES g
	FIRST_PERSON a
	THIRD_PERSON_BACK b
	THIRD_PERSON_FRONT c
	VALUES d
	firstPerson e
	mirrored f
	$values ()[Lnet/minecraft/client/CameraType; d
	cycle ()Lnet/minecraft/client/CameraType; c
	isFirstPerson ()Z a
	isMirrored ()Z b
net/minecraft/client/ClientRecipeBook efh
	LOGGER c
	allCollections e
	collectionsByTab d
	categorizeAndGroupRecipes (Ljava/lang/Iterable;)Ljava/util/Map; b
	getCategory (Lnet/minecraft/world/item/crafting/Recipe;)Lnet/minecraft/client/RecipeBookCategories; g
	getCollection (Lnet/minecraft/client/RecipeBookCategories;)Ljava/util/List; a
	getCollections ()Ljava/util/List; b
	setupCollections (Ljava/lang/Iterable;)V a
net/minecraft/client/ClientTelemetryManager efi
	EXECUTOR b
	THREAD_COUNT a
	minecraft c
	playerInfo f
	serverBrand g
	telemetrySession d
	worldLoadEventSent e
	addOptionalProperty (Ljava/lang/String;Ljava/util/Optional;Lcom/mojang/authlib/minecraft/TelemetryPropertyContainer;)V a
	getServerType ()Ljava/lang/String; b
	onDisconnect ()V a
	onPlayerInfoReceived (Lnet/minecraft/world/level/GameType;Z)V a
	onServerBrandReceived (Ljava/lang/String;)V a
	sendWorldLoadEvent (Lnet/minecraft/client/ClientTelemetryManager$PlayerInfo;)V a
net/minecraft/client/ClientTelemetryManager$PlayerInfo efi$a
	gameType a
	hardcore b
	gameType ()Lnet/minecraft/world/level/GameType; b
	getGameModeId ()I a
	hardcore ()Z c
net/minecraft/client/CloudStatus efj
	$VALUES f
	FANCY c
	FAST b
	OFF a
	id d
	key e
	$values ()[Lnet/minecraft/client/CloudStatus; d
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/ComponentCollector efk
	parts a
	append (Lnet/minecraft/network/chat/FormattedText;)V a
	getResult ()Lnet/minecraft/network/chat/FormattedText; a
	getResultOrEmpty ()Lnet/minecraft/network/chat/FormattedText; b
	reset ()V c
net/minecraft/client/DebugQueryHandler efl
	callback c
	connection a
	transactionId b
	handleResponse (ILnet/minecraft/nbt/CompoundTag;)Z a
	queryBlockEntityTag (Lnet/minecraft/core/BlockPos;Ljava/util/function/Consumer;)V a
	queryEntityTag (ILjava/util/function/Consumer;)V a
	startTransaction (Ljava/util/function/Consumer;)I a
net/minecraft/client/Game efm
	launcher b
	listener c
	minecraft a
	onLeaveGameSession ()V b
	onStartGameSession ()V a
net/minecraft/client/Game$Metrics efm$a
	average c
	max b
	min a
	samples d
net/minecraft/client/GameNarrator efn
	LOGGER b
	NO_TITLE a
	minecraft c
	narrator d
	clear ()V b
	destroy ()V c
	getStatus ()Lnet/minecraft/client/NarratorStatus; d
	isActive ()Z a
	logNarratedMessage (Ljava/lang/String;)V b
	sayChatNow (Ljava/util/function/Supplier;)V a
	sayNow (Ljava/lang/String;)V a
	sayNow (Lnet/minecraft/network/chat/Component;)V a
	updateNarratorStatus (Lnet/minecraft/client/NarratorStatus;)V a
net/minecraft/client/GraphicsStatus efo
	$VALUES g
	BY_ID d
	FABULOUS c
	FANCY b
	FAST a
	id e
	key f
	$values ()[Lnet/minecraft/client/GraphicsStatus; d
	byId (I)Lnet/minecraft/client/GraphicsStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/GuiMessage efp
	addedTime a
	content b
	headerSignature c
	tag d
	addedTime ()I a
	content ()Lnet/minecraft/network/chat/Component; b
	headerSignature ()Lnet/minecraft/network/chat/MessageSignature; c
	tag ()Lnet/minecraft/client/GuiMessageTag; d
net/minecraft/client/GuiMessage$Line efp$a
	addedTime a
	content b
	endOfEntry d
	tag c
	addedTime ()I a
	content ()Lnet/minecraft/util/FormattedCharSequence; b
	endOfEntry ()Z d
	tag ()Lnet/minecraft/client/GuiMessageTag; c
net/minecraft/client/GuiMessageTag efq
	CHAT_FILTERED m
	CHAT_FILTERED_TEXT g
	CHAT_MODIFIED_INDICATOR_COLOR j
	CHAT_MODIFIED_TEXT f
	CHAT_NOT_SECURE l
	CHAT_NOT_SECURE_INDICATOR_COLOR i
	CHAT_NOT_SECURE_TEXT e
	SYSTEM k
	SYSTEM_INDICATOR_COLOR h
	TEXTURE_LOCATION n
	icon b
	indicatorColor a
	logTag d
	text c
	chatFiltered ()Lnet/minecraft/client/GuiMessageTag; c
	chatModified (Ljava/lang/String;)Lnet/minecraft/client/GuiMessageTag; a
	chatNotSecure ()Lnet/minecraft/client/GuiMessageTag; b
	icon ()Lnet/minecraft/client/GuiMessageTag$Icon; e
	indicatorColor ()I d
	logTag ()Ljava/lang/String; g
	system ()Lnet/minecraft/client/GuiMessageTag; a
	text ()Lnet/minecraft/network/chat/Component; f
net/minecraft/client/GuiMessageTag$Icon efq$a
	$VALUES g
	CHAT_MODIFIED b
	CHAT_NOT_SECURE a
	height f
	u c
	v d
	width e
	$values ()[Lnet/minecraft/client/GuiMessageTag$Icon; a
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/HotbarManager efr
	LOGGER b
	NUM_HOTBAR_GROUPS a
	fixerUpper d
	hotbars e
	loaded f
	optionsFile c
	get (I)Lnet/minecraft/client/player/inventory/Hotbar; a
	load ()V b
	save ()V a
net/minecraft/client/KeyMapping efs
	ALL h
	CATEGORIES j
	CATEGORY_CREATIVE g
	CATEGORY_GAMEPLAY d
	CATEGORY_INTERFACE f
	CATEGORY_INVENTORY e
	CATEGORY_MISC b
	CATEGORY_MOVEMENT a
	CATEGORY_MULTIPLAYER c
	CATEGORY_SORT_ORDER k
	MAP i
	category n
	clickCount q
	defaultKey m
	isDown p
	key o
	name l
	click (Lcom/mojang/blaze3d/platform/InputConstants$Key;)V a
	compareTo (Lnet/minecraft/client/KeyMapping;)I a
	consumeClick ()Z f
	createNameSupplier (Ljava/lang/String;)Ljava/util/function/Supplier; a
	getCategory ()Ljava/lang/String; e
	getDefaultKey ()Lcom/mojang/blaze3d/platform/InputConstants$Key; h
	getName ()Ljava/lang/String; g
	getTranslatedKeyMessage ()Lnet/minecraft/network/chat/Component; j
	isDefault ()Z k
	isDown ()Z d
	isUnbound ()Z i
	matches (II)Z a
	matchesMouse (I)Z a
	release ()V m
	releaseAll ()V b
	resetMapping ()V c
	same (Lnet/minecraft/client/KeyMapping;)Z b
	saveString ()Ljava/lang/String; l
	set (Lcom/mojang/blaze3d/platform/InputConstants$Key;Z)V a
	setAll ()V a
	setDown (Z)V a
	setKey (Lcom/mojang/blaze3d/platform/InputConstants$Key;)V b
net/minecraft/client/KeyboardHandler eft
	DEBUG_CRASH_TIME a
	clipboardManager d
	debugCrashKeyReportedCount g
	debugCrashKeyReportedTime f
	debugCrashKeyTime e
	handledDebugKey h
	minecraft b
	sendRepeatsToGui c
	charTyped (JII)V a
	copyCreateBlockCommand (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)V a
	copyCreateEntityCommand (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/nbt/CompoundTag;)V a
	copyRecreateCommand (ZZ)V a
	debugComponent (Lnet/minecraft/ChatFormatting;Lnet/minecraft/network/chat/Component;)V a
	debugFeedback (Ljava/lang/String;[Ljava/lang/Object;)V c
	debugFeedbackComponent (Lnet/minecraft/network/chat/Component;)V a
	debugFeedbackTranslated (Ljava/lang/String;[Ljava/lang/Object;)V a
	debugWarningTranslated (Ljava/lang/String;[Ljava/lang/Object;)V b
	getClipboard ()Ljava/lang/String; a
	handleChunkDebugKeys (I)Z a
	handleDebugKeys (I)Z b
	keyPress (JIIII)V a
	setClipboard (Ljava/lang/String;)V a
	setSendRepeatsToGui (Z)V a
	setup (J)V a
	tick ()V b
net/minecraft/client/Minecraft efu
	ALT_FONT d
	DEFAULT_FONT b
	LOGGER G
	MAX_TICKS_PER_UPDATE H
	ON_OSX a
	REGIONAL_COMPLIANCIES I
	RESOURCE_RELOAD_INITIAL_TASK J
	SOCIAL_INTERACTIONS_NOT_AVAILABLE K
	UNIFORM_FONT c
	UPDATE_DRIVERS_ADVICE e
	allowsChat ag
	allowsMultiplayer af
	authenticationService au
	blockColors al
	blockEntityRenderDispatcher aI
	blockRenderer aA
	cameraEntity u
	chatListener br
	chunkPath C
	chunkVisibility D
	clientPackSource ai
	connectedToRealms aX
	crosshairPickEntity v
	currentFrameProfile bo
	currentServer aN
	debugPath bt
	debugRenderer k
	delayedCrash ba
	demo ae
	deviceSessionId aJ
	entityModels aH
	entityRenderDispatcher T
	fixerUpper O
	font h
	fontFilterFishy i
	fontManager aq
	fps bb
	fpsPieProfiler bi
	fpsPieRenderTicks bh
	fpsPieResults bj
	fpsString A
	frameTimer q
	frames aV
	game aE
	gameDirectory p
	gameMode r
	gameRenderer j
	gameThread aY
	gpuUtilization bn
	gpuWarnlistManager as
	gui l
	hitResult w
	hotbarManager Y
	instance F
	is64bit ad
	isLocalServer aP
	itemColors am
	itemRenderer U
	keyboardHandler o
	languageManager ak
	lastNanoTime aT
	lastTime aU
	launchedVersion Z
	level s
	levelRenderer f
	levelSource ac
	mainRenderTarget an
	metricsRecorder bk
	minecraftSessionService av
	missTime x
	mobEffectTextures aC
	modelManager az
	mouseHandler n
	musicManager ap
	narrator bq
	noRender y
	options m
	overlay aW
	paintingTextures aB
	particleEngine g
	pause aR
	pausePartialTick aS
	pendingConnection aO
	pendingReload be
	player t
	playerSocialManager aG
	profileKeyPairManager aK
	profileProperties M
	profiler bg
	progressListener X
	progressTasks bd
	proxy ab
	realms32BitWarningStatus bp
	realmsDataFetcher aL
	regionalCompliancies at
	reloadStateTracker bl
	renderBuffers S
	reportingContext bs
	resourceManager ah
	resourcePackDirectory L
	resourcePackRepository aj
	rightClickDelay aQ
	running aZ
	savedCpuDuration bm
	screen z
	searchRegistry V
	serviceSignatureValidator aw
	singleplayerServer aM
	skinManager ay
	smartCull E
	socialInteractionsToast bf
	soundManager ao
	splashManager ar
	textureManager N
	timer R
	toast aD
	tutorial aF
	user W
	userApiService ax
	versionType aa
	virtualScreen P
	window Q
	windowActive bc
	wireframe B
	adaptV3 (Ljava/util/function/Supplier;)Ljava/util/function/Supplier; b
	adaptV4 (Ljava/util/function/Supplier;)Ljava/util/function/Supplier; c
	addCustomNbtData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/world/item/ItemStack; a
	allowsMultiplayer ()Z w
	allowsRealms ()Z y
	archiveProfilingReport (Lnet/minecraft/SystemReport;Ljava/util/List;)Ljava/nio/file/Path; a
	checkIs64Bit ()Z aT
	checkModStatus ()Lnet/minecraft/util/ModCheck; d
	clearLevel ()V v
	clearLevel (Lnet/minecraft/client/gui/screens/Screen;)V b
	clearResourcePacksOnError (Ljava/lang/Throwable;Lnet/minecraft/network/chat/Component;)V a
	constructProfiler (ZLnet/minecraft/util/profiling/SingleTickProfiler;)Lnet/minecraft/util/profiling/ProfilerFiller; a
	continueAttack (Z)V g
	countryEqualsISO3 (Ljava/lang/Object;)Z b
	crash (Lnet/minecraft/CrashReport;)V c
	createClientPackAdapter (Ljava/lang/String;Lnet/minecraft/network/chat/Component;ZLjava/util/function/Supplier;Lnet/minecraft/server/packs/metadata/pack/PackMetadataSection;Lnet/minecraft/server/packs/repository/Pack$Position;Lnet/minecraft/server/packs/repository/PackSource;)Lnet/minecraft/server/packs/repository/Pack; a
	createSearchTrees ()V aS
	createTelemetryManager ()Lnet/minecraft/client/ClientTelemetryManager; r
	createTitle ()Ljava/lang/String; aR
	createUserApiService (Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Lnet/minecraft/client/main/GameConfig;)Lcom/mojang/authlib/minecraft/UserApiService; a
	createWorldOpenFlows ()Lnet/minecraft/client/gui/screens/worldselection/WorldOpenFlows; u
	cursorEntered ()V b
	debugClientMetricsCancel ()V aY
	debugClientMetricsStart (Ljava/util/function/Consumer;)Z a
	debugClientMetricsStop ()V aX
	debugFpsMeterKeyPress (I)V a
	delayCrash (Lnet/minecraft/CrashReport;)V a
	delayCrashRaw (Lnet/minecraft/CrashReport;)V b
	delayTextureReload ()Ljava/util/concurrent/CompletableFuture; J
	destroy ()V l
	doWorldLoad (Ljava/lang/String;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/server/WorldStem;)V a
	emergencySave ()V m
	fillReport (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReport; d
	fillReport (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/resources/language/LanguageManager;Ljava/lang/String;Lnet/minecraft/client/Options;Lnet/minecraft/CrashReport;)V a
	fillSystemReport (Lnet/minecraft/SystemReport;Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/resources/language/LanguageManager;Ljava/lang/String;Lnet/minecraft/client/Options;)Lnet/minecraft/SystemReport; a
	finishProfilers (ZLnet/minecraft/util/profiling/SingleTickProfiler;)V b
	forceSetScreen (Lnet/minecraft/client/gui/screens/Screen;)V c
	getBlockColors ()Lnet/minecraft/client/color/block/BlockColors; ao
	getBlockEntityRenderDispatcher ()Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher; ah
	getBlockRenderer ()Lnet/minecraft/client/renderer/block/BlockRenderDispatcher; af
	getCameraEntity ()Lnet/minecraft/world/entity/Entity; ae
	getChatListener ()Lnet/minecraft/client/multiplayer/chat/ChatListener; aO
	getChatStatus ()Lnet/minecraft/client/Minecraft$ChatStatus; B
	getClientPackSource ()Lnet/minecraft/client/resources/ClientPackSource; U
	getConnection ()Lnet/minecraft/client/multiplayer/ClientPacketListener; D
	getCurrentServer ()Lnet/minecraft/client/multiplayer/ServerData; K
	getDeltaFrameTime ()F an
	getEntityModels ()Lnet/minecraft/client/model/geom/EntityModelSet; aI
	getEntityRenderDispatcher ()Lnet/minecraft/client/renderer/entity/EntityRenderDispatcher; ag
	getFixerUpper ()Lcom/mojang/datafixers/DataFixer; al
	getFrameTime ()F am
	getFrameTimer ()Lnet/minecraft/util/FrameTimer; aj
	getFramerateLimit ()I aW
	getGame ()Lnet/minecraft/client/Game; aA
	getGpuUtilization ()D s
	getGpuWarnlistManager ()Lnet/minecraft/client/renderer/GpuWarnlistManager; Z
	getHotbarManager ()Lnet/minecraft/client/HotbarManager; av
	getInstance ()Lnet/minecraft/client/Minecraft; I
	getItemRenderer ()Lnet/minecraft/client/renderer/entity/ItemRenderer; ai
	getLanguageManager ()Lnet/minecraft/client/resources/language/LanguageManager; W
	getLaunchedVersion ()Ljava/lang/String; g
	getLevelSource ()Lnet/minecraft/world/level/storage/LevelStorageSource; k
	getMainRenderTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; f
	getMinecraftSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; ac
	getMobEffectTextures ()Lnet/minecraft/client/resources/MobEffectTextureManager; ay
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; aw
	getMusicManager ()Lnet/minecraft/client/sounds/MusicManager; p
	getNarrator ()Lnet/minecraft/client/GameNarrator; aN
	getOverlay ()Lnet/minecraft/client/gui/screens/Overlay; aD
	getPaintingTextures ()Lnet/minecraft/client/resources/PaintingTextureManager; ax
	getPlayerSocialManager ()Lnet/minecraft/client/gui/screens/social/PlayerSocialManager; aE
	getProfileKeyPairManager ()Lnet/minecraft/client/multiplayer/ProfileKeyPairManager; t
	getProfileProperties ()Lcom/mojang/authlib/properties/PropertyMap; P
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; az
	getProgressListener ()Lnet/minecraft/server/level/progress/StoringChunkProgressListener; aB
	getProxy ()Ljava/net/Proxy; Q
	getRealms32BitWarningStatus ()Lnet/minecraft/client/Realms32BitWarningStatus; aL
	getReportingContext ()Lnet/minecraft/client/multiplayer/chat/report/ReportingContext; aP
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; S
	getResourcePackDirectory ()Ljava/io/File; V
	getResourcePackRepository ()Lnet/minecraft/server/packs/repository/PackRepository; T
	getRunningThread ()Ljava/lang/Thread; au
	getSearchTree (Lnet/minecraft/client/searchtree/SearchRegistry$Key;)Lnet/minecraft/client/searchtree/SearchTree; a
	getServiceSignatureValidator ()Lnet/minecraft/util/SignatureValidator; aM
	getSingleplayerServer ()Lnet/minecraft/client/server/IntegratedServer; N
	getSituationalMusic ()Lnet/minecraft/sounds/Music; ab
	getSkinManager ()Lnet/minecraft/client/resources/SkinManager; ad
	getSoundManager ()Lnet/minecraft/client/sounds/SoundManager; aa
	getSplashManager ()Lnet/minecraft/client/resources/SplashManager; aC
	getTextureAtlas (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/function/Function; a
	getTextureManager ()Lnet/minecraft/client/renderer/texture/TextureManager; R
	getToasts ()Lnet/minecraft/client/gui/components/toasts/ToastComponent; aq
	getTutorial ()Lnet/minecraft/client/tutorial/Tutorial; ar
	getUser ()Lnet/minecraft/client/User; O
	getVersionType ()Ljava/lang/String; h
	getWindow ()Lcom/mojang/blaze3d/platform/Window; aG
	grabHugeScreenshot (Ljava/io/File;IIII)Lnet/minecraft/network/chat/Component; a
	grabPanoramixScreenshot (Ljava/io/File;II)Lnet/minecraft/network/chat/Component; a
	handleKeybinds ()V bc
	hasSingleplayerServer ()Z M
	is64Bit ()Z X
	isBlocked (Ljava/util/UUID;)Z a
	isConnectedToRealms ()Z ak
	isDemo ()Z C
	isEnforceUnicode ()Z i
	isLocalServer ()Z L
	isMultiplayerServer ()Z bb
	isPaused ()Z Y
	isRunning ()Z o
	isTextFilteringEnabled ()Z aJ
	isWindowActive ()Z as
	multiplayerBan ()Lcom/mojang/authlib/minecraft/BanDetails; A
	onFullscreenError (IJ)V a
	openChatScreen (Ljava/lang/String;)V a
	pauseGame (Z)V c
	pickBlock ()V bd
	populateSearchTree (Lnet/minecraft/client/searchtree/SearchRegistry$Key;Ljava/util/List;)V a
	prepareForMultiplayer ()V aK
	realmsDataFetcher ()Lcom/mojang/realmsclient/gui/RealmsDataFetcher; aQ
	reloadResourcePacks ()Ljava/util/concurrent/CompletableFuture; j
	reloadResourcePacks (Z)Ljava/util/concurrent/CompletableFuture; e
	renderBuffers ()Lnet/minecraft/client/renderer/RenderBuffers; aH
	renderFpsMeter (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/util/profiling/ProfileResults;)V a
	renderNames ()Z E
	renderOnThread ()Z aF
	resizeDisplay ()V a
	rollbackResourcePacks (Ljava/lang/Throwable;)V a
	run ()V e
	runTick (Z)V f
	selectMainFont (Z)V b
	selfTest ()V aU
	setCameraEntity (Lnet/minecraft/world/entity/Entity;)V a
	setConnectedToRealms (Z)V d
	setCurrentServer (Lcom/mojang/realmsclient/dto/RealmsServer;Ljava/lang/String;)V a
	setCurrentServer (Lnet/minecraft/client/multiplayer/ServerData;)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	setOverlay (Lnet/minecraft/client/gui/screens/Overlay;)V a
	setScreen (Lnet/minecraft/client/gui/screens/Screen;)V a
	setWindowActive (Z)V a
	shouldEntityAppearGlowing (Lnet/minecraft/world/entity/Entity;)Z b
	shouldRenderFpsPie ()Z aV
	shouldRun (Ljava/lang/Runnable;)Z e
	shouldShowBanNotice ()Z z
	showOnlyReducedInfo ()Z ap
	startAttack ()Z aZ
	startUseItem ()V ba
	stop ()V n
	tick ()V q
	updateLevelInEngines (Lnet/minecraft/client/multiplayer/ClientLevel;)V b
	updateMaxMipLevel (I)V b
	updateReportEnvironment (Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment;)V a
	updateScreenAndTick (Lnet/minecraft/client/gui/screens/Screen;)V d
	updateTitle ()V c
	useAmbientOcclusion ()Z H
	useFancyGraphics ()Z F
	useShaderTransparency ()Z G
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; f
net/minecraft/client/Minecraft$ChatStatus efu$a
	$VALUES h
	DISABLED_BY_LAUNCHER c
	DISABLED_BY_OPTIONS b
	DISABLED_BY_PROFILE d
	ENABLED a
	INFO_DISABLED_BY_PROFILE e
	URL_DISABLED_BY_PROFILE f
	message g
	$values ()[Lnet/minecraft/client/Minecraft$ChatStatus; b
	getMessage ()Lnet/minecraft/network/chat/Component; a
	isChatAllowed (Z)Z a
net/minecraft/client/MouseHandler efv
	accumulatedDX n
	accumulatedDY o
	accumulatedScroll p
	activeButton h
	clickDepth j
	fakeRightMouse g
	ignoreFirstMove i
	isLeftPressed b
	isMiddlePressed c
	isRightPressed d
	lastMouseEventTime q
	minecraft a
	mouseGrabbed r
	mousePressedTime k
	smoothTurnX l
	smoothTurnY m
	xpos e
	ypos f
	cursorEntered ()V k
	grabMouse ()V i
	isLeftPressed ()Z b
	isMiddlePressed ()Z c
	isMouseGrabbed ()Z h
	isRightPressed ()Z d
	onDrop (JLjava/util/List;)V a
	onMove (JDD)V b
	onPress (JIII)V a
	onScroll (JDD)V a
	releaseMouse ()V j
	setIgnoreFirstMove ()V g
	setup (J)V a
	turnPlayer ()V a
	xpos ()D e
	ypos ()D f
net/minecraft/client/NarratorStatus efw
	$VALUES h
	ALL b
	BY_ID e
	CHAT c
	OFF a
	SYSTEM d
	id f
	name g
	$values ()[Lnet/minecraft/client/NarratorStatus; e
	byId (I)Lnet/minecraft/client/NarratorStatus; a
	getId ()I a
	getName ()Lnet/minecraft/network/chat/Component; b
	shouldNarrateChat ()Z c
	shouldNarrateSystem ()Z d
net/minecraft/client/OptionInstance efx
	BOOLEAN_VALUES a
	LOGGER b
	TOOLTIP_WIDTH c
	caption j
	codec g
	initialValue h
	onValueUpdate i
	toString e
	tooltip d
	value k
	values f
	cachedConstantTooltip (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/OptionInstance$TooltipSupplierFactory; a
	codec ()Lcom/mojang/serialization/Codec; d
	createBoolean (Ljava/lang/String;Lnet/minecraft/client/OptionInstance$TooltipSupplierFactory;Z)Lnet/minecraft/client/OptionInstance; a
	createBoolean (Ljava/lang/String;Lnet/minecraft/client/OptionInstance$TooltipSupplierFactory;ZLjava/util/function/Consumer;)Lnet/minecraft/client/OptionInstance; a
	createBoolean (Ljava/lang/String;Z)Lnet/minecraft/client/OptionInstance; a
	createBoolean (Ljava/lang/String;ZLjava/util/function/Consumer;)Lnet/minecraft/client/OptionInstance; a
	createButton (Lnet/minecraft/client/Options;III)Lnet/minecraft/client/gui/components/AbstractWidget; a
	forOptionEnum ()Lnet/minecraft/client/OptionInstance$CaptionBasedToString; b
	get ()Ljava/lang/Object; c
	noTooltip ()Lnet/minecraft/client/OptionInstance$TooltipSupplierFactory; a
	set (Ljava/lang/Object;)V a
	splitTooltip (Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/chat/Component;)Ljava/util/List; a
	values ()Lnet/minecraft/client/OptionInstance$ValueSet; e
net/minecraft/client/OptionInstance$AltEnum efx$a
	altCondition c
	altValues b
	codec e
	valueSetter d
	values a
	altCondition ()Ljava/util/function/BooleanSupplier; d
	altValues ()Ljava/util/List; c
	codec ()Lcom/mojang/serialization/Codec; f
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
	valueListSupplier ()Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	valueSetter ()Lnet/minecraft/client/OptionInstance$CycleableValueSet$ValueSetter; e
	values ()Ljava/util/List; b
net/minecraft/client/OptionInstance$CaptionBasedToString efx$b
net/minecraft/client/OptionInstance$ClampingLazyMaxIntRange efx$c
	maxSupplier b
	minInclusive a
	codec ()Lcom/mojang/serialization/Codec; f
	createCycleButton ()Z c
	maxInclusive ()I b
	maxSupplier ()Ljava/util/function/IntSupplier; g
	minInclusive ()I d
	validateValue (Ljava/lang/Integer;)Ljava/util/Optional; a
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
	valueListSupplier ()Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
net/minecraft/client/OptionInstance$CycleableValueSet efx$d
	createButton (Lnet/minecraft/client/OptionInstance$TooltipSupplier;Lnet/minecraft/client/Options;III)Ljava/util/function/Function; a
	valueListSupplier ()Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	valueSetter ()Lnet/minecraft/client/OptionInstance$CycleableValueSet$ValueSetter; e
net/minecraft/client/OptionInstance$CycleableValueSet$ValueSetter efx$d$a
net/minecraft/client/OptionInstance$Enum efx$e
	codec b
	values a
	codec ()Lcom/mojang/serialization/Codec; f
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
	valueListSupplier ()Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	values ()Ljava/util/List; b
net/minecraft/client/OptionInstance$IntRange efx$f
	maxInclusive b
	minInclusive a
	codec ()Lcom/mojang/serialization/Codec; f
	maxInclusive ()I b
	minInclusive ()I d
	validateValue (Ljava/lang/Integer;)Ljava/util/Optional; a
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
net/minecraft/client/OptionInstance$IntRangeBase efx$g
	fromSliderValue (D)Ljava/lang/Integer; a
	fromSliderValue (D)Ljava/lang/Object; b
	maxInclusive ()I b
	minInclusive ()I d
	toSliderValue (Ljava/lang/Integer;)D b
	toSliderValue (Ljava/lang/Object;)D b
	xmap (Ljava/util/function/IntFunction;Ljava/util/function/ToIntFunction;)Lnet/minecraft/client/OptionInstance$SliderableValueSet; a
net/minecraft/client/OptionInstance$LazyEnum efx$h
	codec c
	validateValue b
	values a
	codec ()Lcom/mojang/serialization/Codec; f
	validateValue ()Ljava/util/function/Function; c
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
	valueListSupplier ()Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	values ()Ljava/util/function/Supplier; b
net/minecraft/client/OptionInstance$OptionInstanceSliderButton efx$i
	instance c
	tooltip e
	values d
	applyValue ()V a
	getTooltip ()Ljava/util/List; c
	updateMessage ()V b
net/minecraft/client/OptionInstance$SliderableOrCyclableValueSet efx$j
	createButton (Lnet/minecraft/client/OptionInstance$TooltipSupplier;Lnet/minecraft/client/Options;III)Ljava/util/function/Function; a
	createCycleButton ()Z c
net/minecraft/client/OptionInstance$SliderableValueSet efx$k
	createButton (Lnet/minecraft/client/OptionInstance$TooltipSupplier;Lnet/minecraft/client/Options;III)Ljava/util/function/Function; a
	fromSliderValue (D)Ljava/lang/Object; b
	toSliderValue (Ljava/lang/Object;)D b
net/minecraft/client/OptionInstance$TooltipSupplier efx$l
net/minecraft/client/OptionInstance$TooltipSupplierFactory efx$m
net/minecraft/client/OptionInstance$UnitDouble efx$n
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/client/OptionInstance$UnitDouble; a
	codec ()Lcom/mojang/serialization/Codec; f
	fromSliderValue (D)Ljava/lang/Double; a
	fromSliderValue (D)Ljava/lang/Object; b
	toSliderValue (Ljava/lang/Double;)D b
	toSliderValue (Ljava/lang/Object;)D b
	validateValue (Ljava/lang/Double;)Ljava/util/Optional; a
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
	xmap (Ljava/util/function/DoubleFunction;Ljava/util/function/ToDoubleFunction;)Lnet/minecraft/client/OptionInstance$SliderableValueSet; a
net/minecraft/client/OptionInstance$ValueSet efx$o
	codec ()Lcom/mojang/serialization/Codec; f
	createButton (Lnet/minecraft/client/OptionInstance$TooltipSupplier;Lnet/minecraft/client/Options;III)Ljava/util/function/Function; a
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
net/minecraft/client/Options efy
	ACCESSIBILITY_TOOLTIP_DARKNESS_EFFECT bO
	ACCESSIBILITY_TOOLTIP_DARK_MOJANG_BACKGROUND an
	ACCESSIBILITY_TOOLTIP_FOV_EFFECT bM
	ACCESSIBILITY_TOOLTIP_HIDE_LIGHTNING_FLASHES ap
	ACCESSIBILITY_TOOLTIP_SCREEN_EFFECT bK
	ALLOW_SERVER_LISTING_TOOLTIP bj
	CHAT_PREVIEW_CONFIRM_TOOLTIP bD
	CHAT_PREVIEW_LIVE_TOOLTIP bC
	CHAT_PREVIEW_OFF_TOOLTIP bB
	CHAT_TOOLTIP_HIDE_MATCHED_NAMES by
	CHAT_TOOLTIP_ONLY_SHOW_SECURE bF
	DEFAULT_SOUND_DEVICE g
	DEFAULT_VOLUME am
	DIRECTIONAL_AUDIO_TOOLTIP_OFF bo
	DIRECTIONAL_AUDIO_TOOLTIP_ON bn
	GRAPHICS_TOOLTIP_FABULOUS az
	GRAPHICS_TOOLTIP_FANCY aA
	GRAPHICS_TOOLTIP_FAST ay
	GSON aj
	LOGGER ai
	MOVEMENT_HOLD bv
	MOVEMENT_TOGGLE bu
	OPTION_SPLITTER al
	PRIORITIZE_CHUNK_TOOLTIP_NEARBY aF
	PRIORITIZE_CHUNK_TOOLTIP_NONE aD
	PRIORITIZE_CHUNK_TOOLTIP_PLAYER_AFFECTED aE
	RENDER_DISTANCE_EXTREME f
	RENDER_DISTANCE_FAR d
	RENDER_DISTANCE_NORMAL c
	RENDER_DISTANCE_REALLY_FAR e
	RENDER_DISTANCE_SHORT b
	RENDER_DISTANCE_TINY a
	RESOURCE_PACK_TYPE ak
	UNLIMITED_FRAMERATE_CUTOFF h
	advancedItemTooltips m
	allowServerListing bk
	ambientOcclusion aC
	attackIndicator aU
	autoJump aY
	autoSuggestions aZ
	backgroundForChatOnly bq
	biomeBlendRadius aV
	bobView bt
	cameraType bI
	chatColors ba
	chatDelay aR
	chatHeightFocused aQ
	chatHeightUnfocused aP
	chatLineSpacing aJ
	chatLinks bb
	chatLinksPrompt bc
	chatOpacity aI
	chatPreview bE
	chatScale aN
	chatVisibility aH
	chatWidth aO
	cloudStatus ax
	darkMojangStudiosBackground ao
	darknessEffectScale bP
	directionalAudio bp
	discreteMouseScroll bh
	enableVsync bd
	entityDistanceScaling av
	entityShadows be
	forceUnicodeFont bf
	fov bJ
	fovEffectScale bN
	framerateLimit aw
	fullscreen bs
	fullscreenVideoModeString k
	gamma bQ
	glDebugVerbosity v
	graphicsMode aB
	guiScale bR
	heldItemTooltips q
	hideBundleTutorial u
	hideGui aa
	hideLightningFlash aq
	hideMatchedNames bz
	hideServerAddress l
	incompatibleResourcePacks j
	invertYMouse bg
	joinedFirstServer t
	keyAdvancements U
	keyAttack J
	keyChat L
	keyCommand N
	keyDown A
	keyDrop H
	keyFullscreen S
	keyHotbarSlots V
	keyInventory F
	keyJump C
	keyLeft z
	keyLoadHotbarActivator X
	keyMappings Y
	keyPickItem K
	keyPlayerList M
	keyRight B
	keySaveHotbarActivator W
	keyScreenshot P
	keyShift D
	keySmoothCamera R
	keySocialInteractions O
	keySpectatorOutlines T
	keySprint E
	keySwapOffhand G
	keyTogglePerspective Q
	keyUp y
	keyUse I
	languageCode ag
	lastMpIp ae
	mainHand aM
	minecraft Z
	mipmapLevels aS
	modelParts aL
	mouseWheelSensitivity aW
	narrator bT
	onlyShowSecureChat bG
	optionsFile bH
	overrideHeight p
	overrideWidth o
	particles bS
	pauseOnLostFocus n
	prioritizeChunkUpdates aG
	rawMouseInput aX
	realmsNotifications bi
	reducedDebugInfo bl
	renderDebug ab
	renderDebugCharts ac
	renderDistance as
	renderFpsChart ad
	resourcePacks i
	screenEffectScale bL
	sensitivity ar
	serverRenderDistance au
	showAutosaveIndicator bA
	showSubtitles bm
	simulationDistance at
	skipMultiplayerWarning w
	skipRealms32bitWarning x
	smoothCamera af
	soundDevice bU
	sourceVolumes aT
	syncWrites ah
	textBackgroundOpacity aK
	toggleCrouch bw
	toggleSprint bx
	touchscreen br
	tutorialStep s
	useNativeTransport r
	allowServerListing ()Lnet/minecraft/client/OptionInstance; L
	ambientOcclusion ()Lnet/minecraft/client/OptionInstance; j
	attackIndicator ()Lnet/minecraft/client/OptionInstance; w
	autoJump ()Lnet/minecraft/client/OptionInstance; A
	autoSuggestions ()Lnet/minecraft/client/OptionInstance; B
	backgroundForChatOnly ()Lnet/minecraft/client/OptionInstance; P
	biomeBlendRadius ()Lnet/minecraft/client/OptionInstance; x
	bobView ()Lnet/minecraft/client/OptionInstance; S
	broadcastOptions ()V ak
	chatColors ()Lnet/minecraft/client/OptionInstance; C
	chatDelay ()Lnet/minecraft/client/OptionInstance; u
	chatHeightFocused ()Lnet/minecraft/client/OptionInstance; t
	chatHeightUnfocused ()Lnet/minecraft/client/OptionInstance; s
	chatLineSpacing ()Lnet/minecraft/client/OptionInstance; n
	chatLinks ()Lnet/minecraft/client/OptionInstance; D
	chatLinksPrompt ()Lnet/minecraft/client/OptionInstance; E
	chatOpacity ()Lnet/minecraft/client/OptionInstance; m
	chatPreview ()Lnet/minecraft/client/OptionInstance; X
	chatScale ()Lnet/minecraft/client/OptionInstance; q
	chatVisibility ()Lnet/minecraft/client/OptionInstance; l
	chatWidth ()Lnet/minecraft/client/OptionInstance; r
	cloudStatus ()Lnet/minecraft/client/OptionInstance; h
	darkMojangStudiosBackground ()Lnet/minecraft/client/OptionInstance; a
	darknessEffectScale ()Lnet/minecraft/client/OptionInstance; ac
	dataFix (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	directionalAudio ()Lnet/minecraft/client/OptionInstance; O
	discreteMouseScroll ()Lnet/minecraft/client/OptionInstance; J
	dumpOptionsForReport ()Ljava/lang/String; ap
	enableVsync ()Lnet/minecraft/client/OptionInstance; F
	entityDistanceScaling ()Lnet/minecraft/client/OptionInstance; f
	entityShadows ()Lnet/minecraft/client/OptionInstance; G
	forceUnicodeFont ()Lnet/minecraft/client/OptionInstance; H
	fov ()Lnet/minecraft/client/OptionInstance; Z
	fovEffectScale ()Lnet/minecraft/client/OptionInstance; ab
	framerateLimit ()Lnet/minecraft/client/OptionInstance; g
	fullscreen ()Lnet/minecraft/client/OptionInstance; R
	gamma ()Lnet/minecraft/client/OptionInstance; ad
	genericValueLabel (Lnet/minecraft/network/chat/Component;I)Lnet/minecraft/network/chat/Component; a
	genericValueLabel (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	getBackgroundColor (F)I b
	getBackgroundColor (I)I a
	getBackgroundOpacity (F)F a
	getCameraType ()Lnet/minecraft/client/CameraType; an
	getCloudsType ()Lnet/minecraft/client/CloudStatus; al
	getEffectiveRenderDistance ()I aq
	getFile ()Ljava/io/File; ao
	getSoundSourceVolume (Lnet/minecraft/sounds/SoundSource;)F a
	graphicsMode ()Lnet/minecraft/client/OptionInstance; i
	guiScale ()Lnet/minecraft/client/OptionInstance; ae
	hideLightningFlash ()Lnet/minecraft/client/OptionInstance; b
	hideMatchedNames ()Lnet/minecraft/client/OptionInstance; V
	invertYMouse ()Lnet/minecraft/client/OptionInstance; I
	isFalse (Ljava/lang/String;)Z b
	isModelPartEnabled (Lnet/minecraft/world/entity/player/PlayerModelPart;)Z a
	isTrue (Ljava/lang/String;)Z a
	load ()V ai
	loadSelectedResourcePacks (Lnet/minecraft/server/packs/repository/PackRepository;)V a
	logMouse (I)D c
	mainHand ()Lnet/minecraft/client/OptionInstance; p
	mipmapLevels ()Lnet/minecraft/client/OptionInstance; v
	mouseWheelSensitivity ()Lnet/minecraft/client/OptionInstance; y
	narrator ()Lnet/minecraft/client/OptionInstance; ag
	onlyShowSecureChat ()Lnet/minecraft/client/OptionInstance; Y
	particles ()Lnet/minecraft/client/OptionInstance; af
	percentValueLabel (Lnet/minecraft/network/chat/Component;D)Lnet/minecraft/network/chat/Component; a
	pixelValueLabel (Lnet/minecraft/network/chat/Component;I)Lnet/minecraft/network/chat/Component; b
	prioritizeChunkUpdates ()Lnet/minecraft/client/OptionInstance; k
	processOptions (Lnet/minecraft/client/Options$FieldAccess;)V a
	rawMouseInput ()Lnet/minecraft/client/OptionInstance; z
	readPackList (Ljava/lang/String;)Ljava/util/List; c
	realmsNotifications ()Lnet/minecraft/client/OptionInstance; K
	reducedDebugInfo ()Lnet/minecraft/client/OptionInstance; M
	renderDistance ()Lnet/minecraft/client/OptionInstance; d
	save ()V aj
	screenEffectScale ()Lnet/minecraft/client/OptionInstance; aa
	sensitivity ()Lnet/minecraft/client/OptionInstance; c
	setCameraType (Lnet/minecraft/client/CameraType;)V a
	setKey (Lnet/minecraft/client/KeyMapping;Lcom/mojang/blaze3d/platform/InputConstants$Key;)V a
	setModelPart (Lnet/minecraft/world/entity/player/PlayerModelPart;Z)V b
	setServerRenderDistance (I)V b
	setSoundCategoryVolume (Lnet/minecraft/sounds/SoundSource;F)V a
	showAutosaveIndicator ()Lnet/minecraft/client/OptionInstance; W
	showSubtitles ()Lnet/minecraft/client/OptionInstance; N
	simulationDistance ()Lnet/minecraft/client/OptionInstance; e
	soundDevice ()Lnet/minecraft/client/OptionInstance; ah
	textBackgroundOpacity ()Lnet/minecraft/client/OptionInstance; o
	toggleCrouch ()Lnet/minecraft/client/OptionInstance; T
	toggleModelPart (Lnet/minecraft/world/entity/player/PlayerModelPart;Z)V a
	toggleSprint ()Lnet/minecraft/client/OptionInstance; U
	touchscreen ()Lnet/minecraft/client/OptionInstance; Q
	unlogMouse (D)I a
	useNativeTransport ()Z am
net/minecraft/client/Options$FieldAccess efy$a
	process (Ljava/lang/String;F)F a
	process (Ljava/lang/String;I)I a
	process (Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/lang/Object; a
	process (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	process (Ljava/lang/String;Lnet/minecraft/client/OptionInstance;)V a
	process (Ljava/lang/String;Z)Z a
net/minecraft/client/ParticleStatus efz
	$VALUES g
	ALL a
	BY_ID d
	DECREASED b
	MINIMAL c
	id e
	key f
	$values ()[Lnet/minecraft/client/ParticleStatus; d
	byId (I)Lnet/minecraft/client/ParticleStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/PeriodicNotificationManager ega
	CODEC a
	LOGGER b
	notificationTask f
	notifications c
	selector d
	timer e
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	calculateInitialDelay (Ljava/util/List;)J a
	calculateOptimalPeriod (Ljava/util/List;J)J a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/util/Map; a
	stopTimer ()V a
net/minecraft/client/PeriodicNotificationManager$Notification ega$a
	delay a
	message d
	period b
	title c
	delay ()J a
	message ()Ljava/lang/String; d
	period ()J b
	title ()Ljava/lang/String; c
net/minecraft/client/PeriodicNotificationManager$NotificationTask ega$b
	elapsed d
	minecraft a
	notifications b
	period c
	reset (Ljava/util/List;J)Lnet/minecraft/client/PeriodicNotificationManager$NotificationTask; a
net/minecraft/client/PrioritizeChunkUpdates egb
	$VALUES g
	BY_ID d
	NEARBY c
	NONE a
	PLAYER_AFFECTED b
	id e
	key f
	$values ()[Lnet/minecraft/client/PrioritizeChunkUpdates; d
	byId (I)Lnet/minecraft/client/PrioritizeChunkUpdates; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/Realms32BitWarningStatus egc
	LOGGER a
	minecraft b
	subscriptionCheck c
	warningScreenShown d
	checkForRealmsSubscription ()Ljava/lang/Boolean; a
	hasRealmsSubscription ()Z b
	showRealms32BitWarningIfNeeded (Lnet/minecraft/client/gui/screens/Screen;)V a
net/minecraft/client/RecipeBookCategories egd
	$VALUES y
	AGGREGATE_CATEGORIES w
	BLAST_FURNACE_BLOCKS k
	BLAST_FURNACE_CATEGORIES t
	BLAST_FURNACE_MISC l
	BLAST_FURNACE_SEARCH j
	CAMPFIRE q
	CRAFTING_BUILDING_BLOCKS b
	CRAFTING_CATEGORIES v
	CRAFTING_EQUIPMENT d
	CRAFTING_MISC e
	CRAFTING_REDSTONE c
	CRAFTING_SEARCH a
	FURNACE_BLOCKS h
	FURNACE_CATEGORIES u
	FURNACE_FOOD g
	FURNACE_MISC i
	FURNACE_SEARCH f
	SMITHING p
	SMOKER_CATEGORIES s
	SMOKER_FOOD n
	SMOKER_SEARCH m
	STONECUTTER o
	UNKNOWN r
	itemIcons x
	$values ()[Lnet/minecraft/client/RecipeBookCategories; b
	getCategories (Lnet/minecraft/world/inventory/RecipeBookType;)Ljava/util/List; a
	getIconItems ()Ljava/util/List; a
net/minecraft/client/ResourceLoadStateTracker ege
	LOGGER a
	reloadCount c
	reloadState b
	fillCrashReport (Lnet/minecraft/CrashReport;)V a
	finishReload ()V a
	startRecovery (Ljava/lang/Throwable;)V a
	startReload (Lnet/minecraft/client/ResourceLoadStateTracker$ReloadReason;Ljava/util/List;)V a
net/minecraft/client/ResourceLoadStateTracker$RecoveryInfo ege$a
	error a
	fillCrashInfo (Lnet/minecraft/CrashReportCategory;)V a
net/minecraft/client/ResourceLoadStateTracker$ReloadReason ege$b
	$VALUES e
	INITIAL a
	MANUAL b
	UNKNOWN c
	name d
	$values ()[Lnet/minecraft/client/ResourceLoadStateTracker$ReloadReason; a
net/minecraft/client/ResourceLoadStateTracker$ReloadState ege$c
	finished d
	packs b
	recoveryReloadInfo c
	reloadReason a
	fillCrashInfo (Lnet/minecraft/CrashReportCategory;)V a
net/minecraft/client/Screenshot egf
	LOGGER a
	bytes d
	file g
	height f
	outputStream c
	rowHeight b
	width e
	_grab (Ljava/io/File;Ljava/lang/String;Lcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V b
	addRegion (Ljava/nio/ByteBuffer;IIII)V a
	close ()Ljava/io/File; b
	getFile (Ljava/io/File;)Ljava/io/File; a
	grab (Ljava/io/File;Lcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V a
	grab (Ljava/io/File;Ljava/lang/String;Lcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V a
	saveRow ()V a
	takeScreenshot (Lcom/mojang/blaze3d/pipeline/RenderTarget;)Lcom/mojang/blaze3d/platform/NativeImage; a
net/minecraft/client/Session egg
	difficulty c
	gameMode d
	id e
	isRemoteServer b
	players a
net/minecraft/client/StringSplitter egh
	widthProvider a
	componentStyleAtWidth (Lnet/minecraft/network/chat/FormattedText;I)Lnet/minecraft/network/chat/Style; a
	componentStyleAtWidth (Lnet/minecraft/util/FormattedCharSequence;I)Lnet/minecraft/network/chat/Style; a
	findLineBreak (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I f
	findSpans (Lnet/minecraft/util/FormattedCharSequence;Ljava/util/function/Predicate;)Ljava/util/List; a
	formattedHeadByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; e
	formattedIndexByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I d
	getWordPosition (Ljava/lang/String;IIZ)I a
	headByWidth (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
	plainHeadByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; b
	plainIndexAtWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I a
	plainTailByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; c
	splitLines (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/util/List; g
	splitLines (Ljava/lang/String;ILnet/minecraft/network/chat/Style;ZLnet/minecraft/client/StringSplitter$LinePosConsumer;)V a
	splitLines (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;)Ljava/util/List; b
	splitLines (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;Ljava/util/function/BiConsumer;)V a
	splitLines (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;Lnet/minecraft/network/chat/FormattedText;)Ljava/util/List; a
	stringWidth (Ljava/lang/String;)F a
	stringWidth (Lnet/minecraft/network/chat/FormattedText;)F a
	stringWidth (Lnet/minecraft/util/FormattedCharSequence;)F a
net/minecraft/client/StringSplitter$FlatComponents egh$a
	flatParts b
	parts a
	charAt (I)C a
	getRemainder ()Lnet/minecraft/network/chat/FormattedText; a
	splitAt (IILnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
net/minecraft/client/StringSplitter$LineBreakFinder egh$b
	hadNonZeroWidthChar e
	lastSpace g
	lastSpaceStyle h
	lineBreak c
	lineBreakStyle d
	maxWidth b
	nextChar i
	offset j
	width f
	addToOffset (I)V a
	finishIteration (ILnet/minecraft/network/chat/Style;)Z a
	getSplitPosition ()I a
	getSplitStyle ()Lnet/minecraft/network/chat/Style; b
	lineBreakFound ()Z c
net/minecraft/client/StringSplitter$LineComponent egh$c
	contents c
	style d
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/client/StringSplitter$LinePosConsumer egh$d
net/minecraft/client/StringSplitter$Span egh$e
	left a
	right b
	left ()F a
	right ()F b
net/minecraft/client/StringSplitter$SpanBuilder egh$f
	buildingSpan f
	cursor c
	predicate b
	spanStart e
	spans d
	build ()Ljava/util/List; a
	endSpan ()V c
	startSpan ()V b
net/minecraft/client/StringSplitter$WidthLimitedCharSink egh$g
	maxWidth b
	position c
	getPosition ()I a
	resetPosition ()V b
net/minecraft/client/StringSplitter$WidthProvider egh$h
net/minecraft/client/Timer egi
	lastMs c
	msPerTick d
	partialTick a
	tickDelta b
	advanceTime (J)I a
net/minecraft/client/ToggleKeyMapping egj
	needsToggle h
	setDown (Z)V a
net/minecraft/client/User egk
	accessToken c
	clientId e
	name a
	type f
	uuid b
	xuid d
	getAccessToken ()Ljava/lang/String; d
	getClientId ()Ljava/util/Optional; e
	getGameProfile ()Lcom/mojang/authlib/GameProfile; h
	getName ()Ljava/lang/String; c
	getProfileId ()Ljava/util/UUID; g
	getSessionId ()Ljava/lang/String; a
	getType ()Lnet/minecraft/client/User$Type; i
	getUuid ()Ljava/lang/String; b
	getXuid ()Ljava/util/Optional; f
net/minecraft/client/User$Type egk$a
	$VALUES f
	BY_NAME d
	LEGACY a
	MOJANG b
	MSA c
	name e
	$values ()[Lnet/minecraft/client/User$Type; b
	byName (Ljava/lang/String;)Lnet/minecraft/client/User$Type; a
	getName ()Ljava/lang/String; a
net/minecraft/client/animation/AnimationChannel egl
	keyframes b
	target a
	keyframes ()[Lnet/minecraft/client/animation/Keyframe; b
	target ()Lnet/minecraft/client/animation/AnimationChannel$Target; a
net/minecraft/client/animation/AnimationChannel$Interpolation egl$a
net/minecraft/client/animation/AnimationChannel$Interpolations egl$b
	CATMULLROM b
	LINEAR a
net/minecraft/client/animation/AnimationChannel$Target egl$c
net/minecraft/client/animation/AnimationChannel$Targets egl$d
	POSITION a
	ROTATION b
	SCALE c
net/minecraft/client/animation/AnimationDefinition egm
	boneAnimations c
	lengthInSeconds a
	looping b
	boneAnimations ()Ljava/util/Map; c
	lengthInSeconds ()F a
	looping ()Z b
net/minecraft/client/animation/AnimationDefinition$Builder egm$a
	animationByBone b
	length a
	looping c
	addAnimation (Ljava/lang/String;Lnet/minecraft/client/animation/AnimationChannel;)Lnet/minecraft/client/animation/AnimationDefinition$Builder; a
	build ()Lnet/minecraft/client/animation/AnimationDefinition; b
	looping ()Lnet/minecraft/client/animation/AnimationDefinition$Builder; a
	withLength (F)Lnet/minecraft/client/animation/AnimationDefinition$Builder; a
net/minecraft/client/animation/Keyframe egn
	interpolation c
	target b
	timestamp a
	interpolation ()Lnet/minecraft/client/animation/AnimationChannel$Interpolation; c
	target ()Lcom/mojang/math/Vector3f; b
	timestamp ()F a
net/minecraft/client/animation/KeyframeAnimations ego
	animate (Lnet/minecraft/client/model/HierarchicalModel;Lnet/minecraft/client/animation/AnimationDefinition;JFLcom/mojang/math/Vector3f;)V a
	degreeVec (FFF)Lcom/mojang/math/Vector3f; b
	getElapsedSeconds (Lnet/minecraft/client/animation/AnimationDefinition;J)F a
	posVec (FFF)Lcom/mojang/math/Vector3f; a
	scaleVec (DDD)Lcom/mojang/math/Vector3f; a
net/minecraft/client/animation/definitions/FrogAnimation egp
	FROG_CROAK a
	FROG_IDLE_WATER f
	FROG_JUMP c
	FROG_SWIM e
	FROG_TONGUE d
	FROG_WALK b
net/minecraft/client/animation/definitions/WardenAnimation egq
	WARDEN_ATTACK e
	WARDEN_DIG b
	WARDEN_EMERGE a
	WARDEN_ROAR c
	WARDEN_SNIFF d
	WARDEN_SONIC_BOOM f
net/minecraft/client/color/block/BlockColor egt
net/minecraft/client/color/block/BlockColors egu
	DEFAULT a
	blockColors b
	coloringStates c
	addColoringState (Lnet/minecraft/world/level/block/state/properties/Property;[Lnet/minecraft/world/level/block/Block;)V a
	addColoringStates (Ljava/util/Set;[Lnet/minecraft/world/level/block/Block;)V a
	createDefault ()Lnet/minecraft/client/color/block/BlockColors; a
	getColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;I)I a
	getColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getColoringProperties (Lnet/minecraft/world/level/block/Block;)Ljava/util/Set; a
	register (Lnet/minecraft/client/color/block/BlockColor;[Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/client/color/block/BlockTintCache egv
	MAX_CACHE_ENTRIES a
	cache c
	latestChunkOnThread b
	lock d
	source e
	findOrCreateChunkCache (II)Lnet/minecraft/client/color/block/BlockTintCache$CacheData; b
	getColor (Lnet/minecraft/core/BlockPos;)I a
	invalidateAll ()V a
	invalidateForChunk (II)V a
net/minecraft/client/color/block/BlockTintCache$CacheData egv$a
	BLOCKS_PER_LAYER c
	cache a
	lock b
	allocateLayer ()[I a
	getLayer (I)[I a
net/minecraft/client/color/block/BlockTintCache$LatestCacheInfo egv$b
	cache c
	x a
	z b
net/minecraft/client/color/item/ItemColor egx
net/minecraft/client/color/item/ItemColors egy
	DEFAULT a
	itemColors b
	createDefault (Lnet/minecraft/client/color/block/BlockColors;)Lnet/minecraft/client/color/item/ItemColors; a
	getColor (Lnet/minecraft/world/item/ItemStack;I)I a
	register (Lnet/minecraft/client/color/item/ItemColor;[Lnet/minecraft/world/level/ItemLike;)V a
net/minecraft/client/gui/Font eha
	ALPHA_CUTOFF a
	EFFECT_DEPTH d
	SHADOW_OFFSET e
	filterFishyGlyphs g
	fonts f
	lineHeight b
	random c
	splitter h
	adjustColor (I)I a
	bidirectionalShaping (Ljava/lang/String;)Ljava/lang/String; a
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/String;FFI)I b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;FFI)I b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/util/FormattedCharSequence;FFI)I b
	drawInBatch (Ljava/lang/String;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)I a
	drawInBatch (Ljava/lang/String;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZIIZ)I a
	drawInBatch (Lnet/minecraft/network/chat/Component;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)I a
	drawInBatch (Lnet/minecraft/util/FormattedCharSequence;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)I a
	drawInBatch8xOutline (Lnet/minecraft/util/FormattedCharSequence;FFIILcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	drawInternal (Ljava/lang/String;FFILcom/mojang/math/Matrix4f;ZZ)I a
	drawInternal (Ljava/lang/String;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZIIZ)I b
	drawInternal (Lnet/minecraft/util/FormattedCharSequence;FFILcom/mojang/math/Matrix4f;Z)I a
	drawInternal (Lnet/minecraft/util/FormattedCharSequence;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)I b
	drawShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/String;FFI)I a
	drawShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/String;FFIZ)I a
	drawShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;FFI)I a
	drawShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/util/FormattedCharSequence;FFI)I a
	drawWordWrap (Lnet/minecraft/network/chat/FormattedText;IIII)V a
	getFontSet (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/gui/font/FontSet; a
	getSplitter ()Lnet/minecraft/client/StringSplitter; b
	isBidirectional ()Z a
	plainSubstrByWidth (Ljava/lang/String;I)Ljava/lang/String; a
	plainSubstrByWidth (Ljava/lang/String;IZ)Ljava/lang/String; a
	renderChar (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph;ZZFFFLcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
	renderText (Ljava/lang/String;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)F b
	renderText (Lnet/minecraft/util/FormattedCharSequence;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)F c
	split (Lnet/minecraft/network/chat/FormattedText;I)Ljava/util/List; c
	substrByWidth (Lnet/minecraft/network/chat/FormattedText;I)Lnet/minecraft/network/chat/FormattedText; a
	width (Ljava/lang/String;)I b
	width (Lnet/minecraft/network/chat/FormattedText;)I a
	width (Lnet/minecraft/util/FormattedCharSequence;)I a
	wordWrapHeight (Ljava/lang/String;I)I b
	wordWrapHeight (Lnet/minecraft/network/chat/FormattedText;I)I b
net/minecraft/client/gui/Font$DisplayMode eha$a
	$VALUES d
	NORMAL a
	POLYGON_OFFSET c
	SEE_THROUGH b
	$values ()[Lnet/minecraft/client/gui/Font$DisplayMode; a
net/minecraft/client/gui/Font$StringRenderOutput eha$b
	a h
	b g
	bufferSource a
	dimFactor d
	dropShadow c
	effects n
	g f
	mode j
	packedLightCoords k
	pose i
	r e
	x l
	y m
	addEffect (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph$Effect;)V a
	finish (IF)F a
net/minecraft/client/gui/Gui ehb
	AUTOSAVE_FADE_SPEED_FACTOR t
	COLOR_WHITE l
	DEMO_EXPIRED_TEXT j
	HEART_SEPARATION s
	HEART_SIZE r
	LINE_HEIGHT o
	MIN_CROSSHAIR_ATTACK_SPEED m
	NUM_HEARTS_PER_ROW n
	PORTAL_OVERLAY_ALPHA_MIN q
	POWDER_SNOW_OUTLINE_LOCATION f
	PUMPKIN_BLUR_LOCATION d
	SAVING_TEXT k
	SPACER p
	SPYGLASS_SCOPE_LOCATION e
	VIGNETTE_LOCATION b
	WIDGETS_LOCATION c
	animateOverlayMessageColor B
	autosaveIndicatorValue W
	bossOverlay J
	chat x
	chatDisabledByPlayerShown C
	debugScreen F
	displayHealth R
	healthBlinkTime T
	itemRenderer w
	lastAutosaveIndicatorValue X
	lastHealth Q
	lastHealthTime S
	lastToolHighlight E
	minecraft v
	overlayMessageString z
	overlayMessageTime A
	random u
	scopeScale Y
	screenHeight V
	screenWidth U
	spectatorGui H
	subtitle M
	subtitleOverlay G
	tabList I
	tickCount y
	title L
	titleFadeInTime N
	titleFadeOutTime P
	titleStayTime O
	titleTime K
	toolHighlightTimer D
	vignetteBrightness a
	canRenderCrosshairForSpectator (Lnet/minecraft/world/phys/HitResult;)Z a
	clear ()V c
	clearCache ()V k
	displayScoreboardSidebar (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/scores/Objective;)V a
	drawBackdrop (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;III)V a
	getBossOverlay ()Lnet/minecraft/client/gui/components/BossHealthOverlay; j
	getCameraPlayer ()Lnet/minecraft/world/entity/player/Player; n
	getChat ()Lnet/minecraft/client/gui/components/ChatComponent; d
	getFont ()Lnet/minecraft/client/gui/Font; f
	getGuiTicks ()I e
	getPlayerVehicleWithHealth ()Lnet/minecraft/world/entity/LivingEntity; o
	getSpectatorGui ()Lnet/minecraft/client/gui/components/spectator/SpectatorGui; g
	getTabList ()Lnet/minecraft/client/gui/components/PlayerTabOverlay; h
	getVehicleMaxHearts (Lnet/minecraft/world/entity/LivingEntity;)I a
	getVisibleVehicleHeartRows (I)I a
	isShowingChatDisabledByPlayer ()Z b
	onDisconnected ()V i
	render (Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	renderCrosshair (Lcom/mojang/blaze3d/vertex/PoseStack;)V d
	renderDemoOverlay (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	renderEffects (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderExperienceBar (Lcom/mojang/blaze3d/vertex/PoseStack;I)V b
	renderHeart (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Gui$HeartType;IIIZZ)V a
	renderHearts (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/entity/player/Player;IIIIFIIIZ)V a
	renderHotbar (FLcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderJumpMeter (Lcom/mojang/blaze3d/vertex/PoseStack;I)V a
	renderPlayerHealth (Lcom/mojang/blaze3d/vertex/PoseStack;)V e
	renderPortalOverlay (F)V b
	renderSavingIndicator (Lcom/mojang/blaze3d/vertex/PoseStack;)V g
	renderSelectedItemName (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	renderSlot (IIFLnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;I)V a
	renderSpyglassOverlay (F)V a
	renderTextureOverlay (Lnet/minecraft/resources/ResourceLocation;F)V a
	renderVehicleHealth (Lcom/mojang/blaze3d/vertex/PoseStack;)V f
	renderVignette (Lnet/minecraft/world/entity/Entity;)V b
	resetTitleTimes ()V a
	setChatDisabledByPlayerShown (Z)V b
	setNowPlaying (Lnet/minecraft/network/chat/Component;)V a
	setOverlayMessage (Lnet/minecraft/network/chat/Component;Z)V a
	setSubtitle (Lnet/minecraft/network/chat/Component;)V b
	setTimes (III)V a
	setTitle (Lnet/minecraft/network/chat/Component;)V c
	tick ()V p
	tick (Z)V a
	tickAutosaveIndicator ()V q
	updateVignetteBrightness (Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/client/gui/Gui$HeartType ehb$a
	$VALUES i
	ABSORBING e
	CONTAINER a
	FROZEN f
	NORMAL b
	POISIONED c
	WITHERED d
	canBlink h
	index g
	$values ()[Lnet/minecraft/client/gui/Gui$HeartType; a
	forPlayer (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/client/gui/Gui$HeartType; a
	getX (ZZ)I a
net/minecraft/client/gui/GuiComponent ehc
	BACKGROUND_LOCATION g
	GUI_ICONS_LOCATION i
	STATS_ICON_LOCATION h
	blitOffset a
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIFFIIII)V a
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIFFIIII)V a
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIFFIIII)V a
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIII)V b
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIILnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	blitOutlineBlack (IILjava/util/function/BiConsumer;)V a
	disableScissor ()V l
	drawCenteredString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Ljava/lang/String;III)V a
	drawCenteredString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;III)V a
	drawCenteredString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Lnet/minecraft/util/FormattedCharSequence;III)V a
	drawString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Ljava/lang/String;III)V b
	drawString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;III)V b
	drawString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Lnet/minecraft/util/FormattedCharSequence;III)V b
	enableScissor (IIII)V a
	fill (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V a
	fillGradient (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIII)V a
	fillGradient (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIII)V a
	fillGradient (Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/BufferBuilder;IIIIIII)V a
	getBlitOffset ()I m
	hLine (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V a
	innerBlit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIFFII)V a
	innerBlit (Lcom/mojang/math/Matrix4f;IIIIIFFFF)V a
	innerFill (Lcom/mojang/math/Matrix4f;IIIII)V a
	setBlitOffset (I)V d
	vLine (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V b
net/minecraft/client/gui/MapRenderer ehd
	HEIGHT d
	MAP_ICONS b
	MAP_ICONS_LOCATION a
	WIDTH c
	maps f
	textureManager e
	getOrCreateMapInstance (ILnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)Lnet/minecraft/client/gui/MapRenderer$MapInstance; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/level/saveddata/maps/MapItemSavedData;ZI)V a
	resetData ()V a
	update (ILnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
net/minecraft/client/gui/MapRenderer$MapInstance ehd$a
	data b
	renderType d
	requiresUpload e
	texture c
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ZI)V a
	forceUpload ()V a
	replaceMapData (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	updateTexture ()V b
net/minecraft/client/gui/chat/ChatPreviewAnimator ehe
	FADE_DURATION a
	fadeTime c
	lastTime d
	residualPreview b
	alpha (J)F c
	get (JLnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/chat/ChatPreviewAnimator$State; a
	getDisabled (J)Lnet/minecraft/client/gui/chat/ChatPreviewAnimator$State; b
	getEnabled (JLnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/chat/ChatPreviewAnimator$State; b
	reset (J)V a
net/minecraft/client/gui/chat/ChatPreviewAnimator$State ehe$a
	DISABLED a
	alpha c
	preview b
	alpha ()F b
	preview ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/gui/chat/ChatPreviewRequests ehf
	MAX_REQUEST_INTERVAL_MS b
	MIN_REQUEST_INTERVAL_MS a
	lastRequestTime f
	minecraft c
	pending e
	queryIdGenerator d
	clear ()V a
	handleResponse (I)Ljava/lang/String; a
	isPending ()Z b
	isRequestReady (J)Z a
	trySendRequest (Ljava/lang/String;J)Z a
net/minecraft/client/gui/chat/ChatPreviewRequests$PendingPreview ehf$a
	id a
	query b
	id ()I a
	matches (I)Z a
	matches (Ljava/lang/String;)Z a
	query ()Ljava/lang/String; b
net/minecraft/client/gui/chat/ChatPreviewRequests$QueryIdGenerator ehf$b
	MAX_STEP a
	lastId c
	random b
	next ()I a
net/minecraft/client/gui/chat/ClientChatPreview ehg
	PREVIEW_VALID_AFTER_MS a
	lastQuery b
	preview e
	requests d
	scheduledRequest c
	clear ()V e
	disable ()V b
	handleResponse (ILnet/minecraft/network/chat/Component;)V a
	hasScheduledRequest ()Z c
	normalizeQuery (Ljava/lang/String;)Ljava/lang/String; e
	peek ()Lnet/minecraft/client/gui/chat/ClientChatPreview$Preview; d
	pull (Ljava/lang/String;)Lnet/minecraft/client/gui/chat/ClientChatPreview$Preview; c
	queryEquals (Ljava/lang/String;)Z b
	sendOrScheduleRequest (Ljava/lang/String;)V d
	tick ()V a
	update (Ljava/lang/String;)V a
net/minecraft/client/gui/chat/ClientChatPreview$Preview ehg$a
	query b
	receivedTimeStamp a
	response c
	canPull (Ljava/lang/String;)Z b
	isPreviewValid ()Z d
	query ()Ljava/lang/String; b
	queryEquals (Ljava/lang/String;)Z a
	receivedTimeStamp ()J a
	response ()Lnet/minecraft/network/chat/Component; c
net/minecraft/client/gui/components/AbstractButton ehi
	keyPressed (III)Z a
	onClick (DD)V a
	onPress ()V d
net/minecraft/client/gui/components/AbstractOptionSliderButton ehj
	options a
net/minecraft/client/gui/components/AbstractScrollWidget ehk
	BACKGROUND_COLOR c
	BORDER_COLOR b
	BORDER_COLOR_FOCUSED a
	INNER_PADDING d
	scrollAmount e
	scrolling f
	getContentHeight ()I q
	getInnerHeight ()I e
	getMaxScrollAmount ()I d
	getScrollBarHeight ()I p
	innerPadding ()I a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z b
	mouseScrolled (DDD)Z a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderContents (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V c
	renderDecorations (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderScrollBar ()V r
	scrollAmount ()D c
	scrollRate ()D g
	scrollbarVisible ()Z f
	setScrollAmount (D)V a
	totalInnerPadding ()I b
	withinContentAreaPoint (DD)Z c
	withinContentAreaTopBottom (II)Z a
net/minecraft/client/gui/components/AbstractSelectionList ehl
	centerListVertically m
	children a
	headerHeight n
	height e
	hovered v
	itemHeight c
	minecraft b
	renderBackground t
	renderHeader q
	renderSelection p
	renderTopAndBottom u
	scrollAmount o
	scrolling r
	selected s
	width d
	x0 l
	x1 k
	y0 f
	y1 j
	addEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)I b
	addEntryToTop (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V c
	bindEntryToSelf (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V h
	centerScrollOn (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V e
	children ()Ljava/util/List; i
	clearEntries ()V j
	clickedHeader (II)V a
	ensureVisible (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V f
	getEntry (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; e
	getEntryAtPosition (DD)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	getFocused ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; h
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; v
	getHovered ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; u
	getItemCount ()I k
	getMaxPosition ()I b
	getMaxScroll ()I o
	getRowBottom (I)I b
	getRowLeft ()I r
	getRowRight ()I s
	getRowTop (I)I h
	getRowWidth ()I c
	getScrollAmount ()D n
	getScrollBottom ()I p
	getScrollbarPosition ()I d
	getSelected ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; g
	isFocused ()Z a
	isMouseOver (DD)Z a_
	isSelectedItem (I)Z f
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z b
	mouseScrolled (DDD)Z a
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;)V a
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;Ljava/util/function/Predicate;)Z a
	narrateListElementPosition (Lnet/minecraft/client/gui/narration/NarrationElementOutput;Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; t
	refreshSelection ()V q
	remove (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; i
	removeEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)Z g
	removeEntryFromTop (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)Z d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderDecorations (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	renderHeader (Lcom/mojang/blaze3d/vertex/PoseStack;IILcom/mojang/blaze3d/vertex/Tesselator;)V a
	renderItem (Lcom/mojang/blaze3d/vertex/PoseStack;IIFIIIII)V a
	renderList (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderSelection (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V b
	replaceEntries (Ljava/util/Collection;)V a
	scroll (I)V a
	setLeftPos (I)V g
	setRenderBackground (Z)V c_
	setRenderHeader (ZI)V a
	setRenderSelection (Z)V a
	setRenderTopAndBottom (Z)V c
	setScrollAmount (D)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	updateScrollingState (DDI)V c
	updateSize (IIII)V b
net/minecraft/client/gui/components/AbstractSelectionList$Entry ehl$a
	list a
	isMouseOver (DD)Z a_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection ehl$b
	$VALUES c
	DOWN b
	UP a
	$values ()[Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection; a
net/minecraft/client/gui/components/AbstractSelectionList$TrackedList ehl$c
	delegate b
	add (ILnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V b
	get (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	remove (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; b
	set (ILnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
net/minecraft/client/gui/components/AbstractSliderButton ehm
	value b
	applyValue ()V a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; ai_
	getYImage (Z)I a
	keyPressed (III)Z a
	onClick (DD)V a
	onDrag (DDDD)V a
	onRelease (DD)V b
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Minecraft;II)V a
	setValue (D)V b
	setValueFromMouse (D)V a
	updateMessage ()V b
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/AbstractWidget ehn
	WIDGETS_LOCATION j
	active p
	alpha r
	focused b
	height l
	isHovered o
	message a
	visible q
	width k
	x m
	y n
	changeFocus (Z)Z b
	clicked (DD)Z d
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; ai_
	defaultButtonNarrationText (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
	getHeight ()I h
	getMessage ()Lnet/minecraft/network/chat/Component; k
	getWidth ()I j
	getYImage (Z)I a
	isActive ()Z aj_
	isFocused ()Z n
	isHoveredOrFocused ()Z i
	isMouseOver (DD)Z a_
	isValidClickButton (I)Z h_
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z b
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; t
	onClick (DD)V a
	onDrag (DDDD)V a
	onFocusedChanged (Z)V c
	onRelease (DD)V b
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Minecraft;II)V a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	setAlpha (F)V a
	setFocused (Z)V d
	setMessage (Lnet/minecraft/network/chat/Component;)V b
	setWidth (I)V b
	wrapDefaultNarrationMessage (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/client/gui/components/BossHealthOverlay eho
	BAR_HEIGHT c
	BAR_WIDTH b
	GUI_BARS_LOCATION a
	OVERLAY_OFFSET d
	events f
	minecraft e
	drawBar (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/BossEvent;)V a
	drawBar (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/BossEvent;II)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	reset ()V a
	shouldCreateWorldFog ()Z d
	shouldDarkenScreen ()Z c
	shouldPlayMusic ()Z b
	update (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
net/minecraft/client/gui/components/Button ehp
	DEFAULT_HEIGHT v
	DEFAULT_WIDTH u
	NO_TOOLTIP s
	SMALL_WIDTH t
	onPress w
	onTooltip x
	onPress ()V d
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/Button$OnPress ehp$a
net/minecraft/client/gui/components/Button$OnTooltip ehp$b
	narrateTooltip (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/components/ChatComponent ehq
	LOGGER a
	MAX_CHAT_HISTORY b
	MESSAGE_INDENT d
	MESSAGE_NOT_FOUND c
	MESSAGE_TAG_MARGIN_LEFT e
	allMessages k
	chatScrollbarPos m
	minecraft f
	newMessageSinceScroll n
	recentChat j
	trimmedMessages l
	addMessage (Lnet/minecraft/network/chat/Component;)V a
	addMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/MessageSignature;ILnet/minecraft/client/GuiMessageTag;Z)V a
	addMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/MessageSignature;Lnet/minecraft/client/GuiMessageTag;)V a
	addRecentChat (Ljava/lang/String;)V a
	clearMessages (Z)V a
	defaultUnfocusedPct ()D h
	deleteMessage (Lnet/minecraft/network/chat/MessageSignature;)V a
	drawTagIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/client/GuiMessageTag$Icon;)V a
	getClickedComponentStyleAt (DD)Lnet/minecraft/network/chat/Style; b
	getFocusedChat ()Lnet/minecraft/client/gui/screens/ChatScreen; d
	getHeight ()I f
	getHeight (D)I b
	getLineHeight ()I o
	getLinesPerPage ()I i
	getMessageIndexAt (D)I e
	getMessageTagAt (DD)Lnet/minecraft/client/GuiMessageTag; c
	getRecentChat ()Ljava/util/List; b
	getScale ()D g
	getTagIconLeft (Lnet/minecraft/client/GuiMessage$Line;)I a
	getTimeFactor (I)D b
	getWidth ()I e
	getWidth (D)I a
	handleChatQueueClicked (DD)Z a
	hasSelectedMessageTag (DLnet/minecraft/client/GuiMessage$Line;Lnet/minecraft/client/GuiMessageTag;)Z a
	isChatFocused ()Z n
	isChatHidden ()Z j
	logChatMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/client/GuiMessageTag;)V a
	refreshTrimmedMessage ()V k
	render (Lcom/mojang/blaze3d/vertex/PoseStack;I)V a
	rescaleChat ()V a
	resetChatScroll ()V c
	screenToChatX (D)D c
	screenToChatY (D)D d
	scrollChat (I)V a
net/minecraft/client/gui/components/Checkbox ehr
	TEXTURE a
	TEXT_COLOR b
	selected c
	showLabel d
	onPress ()V d
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	selected ()Z a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/CommandSuggestions ehs
	ARGUMENT_STYLES d
	LITERAL_STYLE c
	UNPARSED_STYLE b
	WHITESPACE_PATTERN a
	allowSuggestions u
	anchorToBottom m
	commandUsage o
	commandUsagePosition p
	commandUsageWidth q
	commandsOnly i
	currentParse r
	fillColor n
	font h
	input g
	keepSuggestions v
	lineStartOffset k
	minecraft e
	onlyShowIfCursorPastError j
	pendingSuggestions s
	screen f
	suggestionLineLimit l
	suggestions t
	calculateSuggestionSuffix (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	fillNodeUsage (Lnet/minecraft/ChatFormatting;)V a
	formatChat (Ljava/lang/String;I)Lnet/minecraft/util/FormattedCharSequence; a
	formatText (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;I)Lnet/minecraft/util/FormattedCharSequence; a
	getCurrentContext ()Lcom/mojang/brigadier/ParseResults; d
	getExceptionMessage (Lcom/mojang/brigadier/exceptions/CommandSyntaxException;)Lnet/minecraft/util/FormattedCharSequence; a
	getLastWordIndex (Ljava/lang/String;)I a
	getNarrationMessage ()Ljava/lang/String; c
	getNodeAt (I)Lcom/mojang/brigadier/tree/CommandNode; a
	getNodeAt (ILcom/mojang/brigadier/context/CommandContextBuilder;)Lcom/mojang/brigadier/tree/CommandNode; a
	hide ()V a
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (D)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	renderSuggestions (Lcom/mojang/blaze3d/vertex/PoseStack;II)Z b
	renderUsage (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	setAllowSuggestions (Z)V a
	showSuggestions (Z)V b
	sortSuggestions (Lcom/mojang/brigadier/suggestion/Suggestions;)Ljava/util/List; a
	updateCommandInfo ()V b
	updateUsageInfo ()V e
net/minecraft/client/gui/components/CommandSuggestions$SuggestionsList ehs$a
	current f
	lastMouse g
	lastNarratedEntry i
	offset e
	originalContents c
	rect b
	suggestionList d
	tabCycles h
	cycle (I)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; b
	keyPressed (III)Z b
	mouseClicked (III)Z a
	mouseScrolled (D)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	select (I)V b
	useSuggestion ()V a
net/minecraft/client/gui/components/ComponentRenderUtils eht
	INDENT a
	stripColor (Ljava/lang/String;)Ljava/lang/String; a
	wrapComponents (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/client/gui/Font;)Ljava/util/List; a
net/minecraft/client/gui/components/ContainerObjectSelectionList ehu
	hasFocus a
	changeFocus (Z)Z b
	isSelectedItem (I)Z f
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; t
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/ContainerObjectSelectionList$Entry ehu$a
	dragging c
	focused a
	lastNarratable b
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; v
	isDragging ()Z ah_
	narratables ()Ljava/util/List; b
	setDragging (Z)V b_
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/CycleButton ehv
	BOOLEAN_OPTIONS b
	DEFAULT_ALT_LIST_SELECTOR a
	displayOnlyValue w
	index d
	name c
	narrationProvider t
	onValueChange u
	tooltipSupplier v
	value e
	valueStringifier s
	values f
	booleanBuilder (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	builder (Ljava/util/function/Function;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	createDefaultNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; b
	createFullName (Ljava/lang/Object;)Lnet/minecraft/network/chat/MutableComponent; d
	createLabelForValue (Ljava/lang/Object;)Lnet/minecraft/network/chat/Component; c
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; ai_
	cycleValue (I)V c
	getCycledValue (I)Ljava/lang/Object; e
	getTooltip ()Ljava/util/List; c
	getValue ()Ljava/lang/Object; a
	mouseScrolled (DDD)Z a
	onOffBuilder ()Lnet/minecraft/client/gui/components/CycleButton$Builder; e
	onOffBuilder (Z)Lnet/minecraft/client/gui/components/CycleButton$Builder; e
	onPress ()V d
	setValue (Ljava/lang/Object;)V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
	updateValue (Ljava/lang/Object;)V b
net/minecraft/client/gui/components/CycleButton$Builder ehv$a
	displayOnlyValue g
	initialIndex a
	initialValue b
	narrationProvider e
	tooltipSupplier d
	valueStringifier c
	values f
	create (IIIILnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/CycleButton; a
	create (IIIILnet/minecraft/network/chat/Component;Lnet/minecraft/client/gui/components/CycleButton$OnValueChange;)Lnet/minecraft/client/gui/components/CycleButton; a
	displayOnlyValue ()Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withCustomNarration (Ljava/util/function/Function;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withInitialValue (Ljava/lang/Object;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withTooltip (Lnet/minecraft/client/OptionInstance$TooltipSupplier;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues (Ljava/util/Collection;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues (Ljava/util/List;Ljava/util/List;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues (Ljava/util/function/BooleanSupplier;Ljava/util/List;Ljava/util/List;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues (Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues ([Ljava/lang/Object;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
net/minecraft/client/gui/components/CycleButton$OnValueChange ehv$b
net/minecraft/client/gui/components/CycleButton$ValueListSupplier ehv$c
	create (Ljava/util/Collection;)Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	create (Ljava/util/function/BooleanSupplier;Ljava/util/List;Ljava/util/List;)Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	getDefaultList ()Ljava/util/List; b
	getSelectedList ()Ljava/util/List; a
net/minecraft/client/gui/components/DebugScreenOverlay ehw
	COLOR_GREY a
	GREEN s
	HEIGHTMAP_NAMES e
	MARGIN_LEFT c
	MARGIN_RIGHT b
	MARGIN_TOP d
	RED q
	YELLOW r
	allocationRateCalculator j
	block l
	clientChunk o
	font k
	lastPos n
	liquid m
	minecraft f
	serverChunk p
	bytesToMegabytes (J)J a
	clearChunkCache ()V a
	colorLerp (IIF)I a
	drawChart (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/util/FrameTimer;IIZ)V a
	drawGameInformation (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	drawSystemInformation (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	getClientChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; h
	getGameInformation ()Ljava/util/List; b
	getLevel ()Lnet/minecraft/world/level/Level; f
	getPropertyValueString (Ljava/util/Map$Entry;)Ljava/lang/String; a
	getSampleColor (IIII)I b
	getServerChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; g
	getServerChunkStats ()Ljava/lang/String; e
	getServerLevel ()Lnet/minecraft/server/level/ServerLevel; d
	getSystemInformation ()Ljava/util/List; c
	printBiome (Lnet/minecraft/core/Holder;)Ljava/lang/String; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/components/DebugScreenOverlay$AllocationRateCalculator ehw$a
	GC_MBEANS b
	UPDATE_INTERVAL_MS a
	lastGcCounts e
	lastHeapUsage d
	lastRate f
	lastTime c
	bytesAllocatedPerSecond (J)J a
	gcCounts ()J a
net/minecraft/client/gui/components/EditBox ehx
	BACKGROUND_COLOR u
	BACKWARDS a
	BORDER_COLOR t
	BORDER_COLOR_FOCUSED s
	CURSOR_APPEND_CHARACTER f
	CURSOR_INSERT_COLOR e
	CURSOR_INSERT_WIDTH d
	DEFAULT_TEXT_COLOR c
	FORWARDS b
	bordered z
	canLoseFocus A
	cursorPos E
	displayPos D
	filter K
	font v
	formatter L
	frame y
	highlightPos F
	isEditable B
	maxLength x
	responder J
	shiftPressed C
	suggestion I
	textColor G
	textColorUneditable H
	value w
	canConsumeInput ()Z g
	changeFocus (Z)Z b
	charTyped (CI)Z a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; ai_
	deleteChars (I)V e
	deleteText (I)V p
	deleteWords (I)V c
	getCursorPos (I)I q
	getCursorPosition ()I p
	getHighlighted ()Ljava/lang/String; c
	getInnerWidth ()I q
	getMaxLength ()I s
	getScreenX (I)I n
	getValue ()Ljava/lang/String; b
	getWordPosition (I)I f
	getWordPosition (II)I a
	getWordPosition (IIZ)I a
	insertText (Ljava/lang/String;)V b
	isBordered ()Z u
	isEditable ()Z v
	isMouseOver (DD)Z a_
	isVisible ()Z r
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	moveCursor (I)V g
	moveCursorTo (I)V h
	moveCursorToEnd ()V f
	moveCursorToStart ()V e
	onFocusedChanged (Z)V c
	onValueChange (Ljava/lang/String;)V d
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderHighlight (IIII)V b
	setBordered (Z)V f
	setCanLoseFocus (Z)V h
	setCursorPosition (I)V i
	setEditable (Z)V g
	setFilter (Ljava/util/function/Predicate;)V a
	setFocus (Z)V e
	setFormatter (Ljava/util/function/BiFunction;)V a
	setHighlightPos (I)V m
	setMaxLength (I)V j
	setResponder (Ljava/util/function/Consumer;)V a
	setSuggestion (Ljava/lang/String;)V c
	setTextColor (I)V k
	setTextColorUneditable (I)V l
	setValue (Ljava/lang/String;)V a
	setVisible (Z)V i
	setX (I)V o
	tick ()V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/ImageButton ehy
	resourceLocation a
	textureHeight f
	textureWidth e
	xTexStart b
	yDiffTex d
	yTexStart c
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setPosition (II)V a
net/minecraft/client/gui/components/LerpingBossEvent ehz
	LERP_MILLISECONDS j
	setTime i
	targetPercent h
	getProgress ()F k
	setProgress (F)V a
net/minecraft/client/gui/components/LockIconButton eia
	locked a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; ai_
	isLocked ()Z a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setLocked (Z)V e
net/minecraft/client/gui/components/LockIconButton$Icon eia$a
	$VALUES i
	LOCKED a
	LOCKED_DISABLED c
	LOCKED_HOVER b
	UNLOCKED d
	UNLOCKED_DISABLED f
	UNLOCKED_HOVER e
	x g
	y h
	$values ()[Lnet/minecraft/client/gui/components/LockIconButton$Icon; c
	getX ()I a
	getY ()I b
net/minecraft/client/gui/components/MultiLineEditBox eib
	CURSOR_APPEND_CHARACTER c
	CURSOR_INSERT_COLOR b
	CURSOR_INSERT_WIDTH a
	PLACEHOLDER_TEXT_COLOR e
	TEXT_COLOR d
	font f
	frame u
	placeholder s
	textField t
	charTyped (CI)Z a
	getDisplayableLineCount ()D s
	getInnerHeight ()I e
	getValue ()Ljava/lang/String; p
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	renderContents (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V c
	renderDecorations (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderHighlight (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	scrollRate ()D g
	scrollToCursor ()V r
	scrollbarVisible ()Z f
	seekCursorScreen (DD)V f
	setCharacterLimit (I)V c
	setValue (Ljava/lang/String;)V a
	setValueListener (Ljava/util/function/Consumer;)V a
	tick ()V q
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/MultiLineLabel eic
	EMPTY a
	create (Lnet/minecraft/client/gui/Font;Ljava/util/List;)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	create (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/FormattedText;I)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	create (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/FormattedText;II)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	create (Lnet/minecraft/client/gui/Font;[Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	createFixed (Lnet/minecraft/client/gui/Font;Ljava/util/List;)Lnet/minecraft/client/gui/components/MultiLineLabel; b
	getLineCount ()I a
	getWidth ()I b
	renderBackgroundCentered (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V a
	renderCentered (Lcom/mojang/blaze3d/vertex/PoseStack;II)I a
	renderCentered (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)I a
	renderLeftAligned (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)I b
	renderLeftAlignedNoShadow (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)I c
net/minecraft/client/gui/components/MultiLineLabel$TextWithWidth eic$a
	text a
	width b
net/minecraft/client/gui/components/MultilineTextField eid
	LINE_SEEK_PIXEL_BIAS b
	NO_CHARACTER_LIMIT a
	characterLimit i
	cursor f
	cursorListener l
	displayLines d
	font c
	selectCursor g
	selecting h
	value e
	valueListener k
	width j
	characterLimit ()I a
	cursor ()I d
	deleteText (I)V b
	getCursorLineView ()Lnet/minecraft/client/gui/components/MultilineTextField$StringView; m
	getCursorLineView (I)Lnet/minecraft/client/gui/components/MultilineTextField$StringView; f
	getLineAtCursor ()I g
	getLineCount ()I f
	getLineView (I)Lnet/minecraft/client/gui/components/MultilineTextField$StringView; c
	getNextWord ()Lnet/minecraft/client/gui/components/MultilineTextField$StringView; l
	getPreviousWord ()Lnet/minecraft/client/gui/components/MultilineTextField$StringView; k
	getSelected ()Lnet/minecraft/client/gui/components/MultilineTextField$StringView; e
	getSelectedText ()Ljava/lang/String; j
	getWordEndPosition (I)I g
	hasCharacterLimit ()Z b
	hasSelection ()Z i
	insertText (Ljava/lang/String;)V b
	iterateLines ()Ljava/lang/Iterable; h
	keyPressed (I)Z e
	onValueChange ()V n
	reflowDisplayLines ()V o
	seekCursor (Lnet/minecraft/client/gui/components/Whence;I)V a
	seekCursorLine (I)V d
	seekCursorToPoint (DD)V a
	setCharacterLimit (I)V a
	setCursorListener (Ljava/lang/Runnable;)V a
	setSelecting (Z)V a
	setValue (Ljava/lang/String;)V a
	setValueListener (Ljava/util/function/Consumer;)V a
	truncateFullText (Ljava/lang/String;)Ljava/lang/String; c
	truncateInsertionText (Ljava/lang/String;)Ljava/lang/String; d
	value ()Ljava/lang/String; c
net/minecraft/client/gui/components/MultilineTextField$StringView eid$a
	EMPTY c
	beginIndex a
	endIndex b
	beginIndex ()I a
	endIndex ()I b
net/minecraft/client/gui/components/ObjectSelectionList eie
	USAGE_NARRATION a
	inFocus o
	changeFocus (Z)Z b
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/ObjectSelectionList$Entry eie$a
	changeFocus (Z)Z b
	getNarration ()Lnet/minecraft/network/chat/Component; b
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/OptionsList eif
	addBig (Lnet/minecraft/client/OptionInstance;)I a
	addSmall (Lnet/minecraft/client/OptionInstance;Lnet/minecraft/client/OptionInstance;)V a
	addSmall ([Lnet/minecraft/client/OptionInstance;)V a
	findOption (Lnet/minecraft/client/OptionInstance;)Lnet/minecraft/client/gui/components/AbstractWidget; b
	getMouseOver (DD)Ljava/util/Optional; c
	getRowWidth ()I c
	getScrollbarPosition ()I d
net/minecraft/client/gui/components/OptionsList$Entry eif$a
	children b
	options a
	big (Lnet/minecraft/client/Options;ILnet/minecraft/client/OptionInstance;)Lnet/minecraft/client/gui/components/OptionsList$Entry; a
	children ()Ljava/util/List; i
	narratables ()Ljava/util/List; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	small (Lnet/minecraft/client/Options;ILnet/minecraft/client/OptionInstance;Lnet/minecraft/client/OptionInstance;)Lnet/minecraft/client/gui/components/OptionsList$Entry; a
net/minecraft/client/gui/components/PlainTextButton eig
	font a
	message b
	underlinedMessage c
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
net/minecraft/client/gui/components/PlayerFaceRenderer eih
	SKIN_HAT_HEIGHT h
	SKIN_HAT_U e
	SKIN_HAT_V f
	SKIN_HAT_WIDTH g
	SKIN_HEAD_HEIGHT d
	SKIN_HEAD_U a
	SKIN_HEAD_V b
	SKIN_HEAD_WIDTH c
	SKIN_TEX_HEIGHT j
	SKIN_TEX_WIDTH i
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;III)V a
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;IIIZZ)V a
	drawHat (Lcom/mojang/blaze3d/vertex/PoseStack;IIIZ)V a
net/minecraft/client/gui/components/PlayerTabOverlay eii
	HEART_EMPTY_CONTAINER b
	HEART_EMPTY_CONTAINER_BLINKING c
	HEART_FULL d
	HEART_GHOST_FULL k
	HEART_GHOST_HALF_FULL l
	HEART_GOLDEN_FULL f
	HEART_GOLDEN_HALF_FULL j
	HEART_HALF_FULL e
	MAX_ROWS_PER_COL a
	PLAYER_ORDERING m
	footer p
	gui o
	header q
	minecraft n
	visibilityId r
	visible s
	decorateName (Lnet/minecraft/client/multiplayer/PlayerInfo;Lnet/minecraft/network/chat/MutableComponent;)Lnet/minecraft/network/chat/Component; a
	getNameForDisplay (Lnet/minecraft/client/multiplayer/PlayerInfo;)Lnet/minecraft/network/chat/Component; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;ILnet/minecraft/world/scores/Scoreboard;Lnet/minecraft/world/scores/Objective;)V a
	renderPingIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IIILnet/minecraft/client/multiplayer/PlayerInfo;)V a
	renderTablistScore (Lnet/minecraft/world/scores/Objective;ILjava/lang/String;IILnet/minecraft/client/multiplayer/PlayerInfo;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	reset ()V a
	setFooter (Lnet/minecraft/network/chat/Component;)V a
	setHeader (Lnet/minecraft/network/chat/Component;)V b
	setVisible (Z)V a
net/minecraft/client/gui/components/PlayerTabOverlay$PlayerInfoComparator eii$a
	compare (Lnet/minecraft/client/multiplayer/PlayerInfo;Lnet/minecraft/client/multiplayer/PlayerInfo;)I a
net/minecraft/client/gui/components/StateSwitchingButton eij
	isStateTriggered b
	resourceLocation a
	xDiffTex e
	xTexStart c
	yDiffTex f
	yTexStart d
	initTextureValues (IIIILnet/minecraft/resources/ResourceLocation;)V a
	isStateTriggered ()Z a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setPosition (II)V a
	setStateTriggered (Z)V e
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/SubtitleOverlay eik
	DISPLAY_TIME a
	isListening d
	minecraft b
	subtitles c
	onPlaySound (Lnet/minecraft/client/resources/sounds/SoundInstance;Lnet/minecraft/client/sounds/WeighedSoundEvents;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/components/SubtitleOverlay$Subtitle eik$a
	location c
	text a
	time b
	getLocation ()Lnet/minecraft/world/phys/Vec3; c
	getText ()Lnet/minecraft/network/chat/Component; a
	getTime ()J b
	refresh (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/client/gui/components/TooltipAccessor eil
	getTooltip ()Ljava/util/List; c
net/minecraft/client/gui/components/VolumeSlider eim
	source c
	applyValue ()V a
	updateMessage ()V b
net/minecraft/client/gui/components/Whence ein
	$VALUES d
	ABSOLUTE a
	END c
	RELATIVE b
	$values ()[Lnet/minecraft/client/gui/components/Whence; a
net/minecraft/client/gui/components/Widget eio
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/components/events/AbstractContainerEventHandler eip
	focused a
	isDragging b
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; v
	isDragging ()Z ah_
	setDragging (Z)V b_
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
net/minecraft/client/gui/components/events/ContainerEventHandler eiq
	changeFocus (Z)Z b
	charTyped (CI)Z a
	children ()Ljava/util/List; i
	getChildAt (DD)Ljava/util/Optional; d
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; v
	isDragging ()Z ah_
	keyPressed (III)Z a
	keyReleased (III)Z b
	magicalSpecialHackyFocus (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V c
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z b
	mouseScrolled (DDD)Z a
	setDragging (Z)V b_
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
	setInitialFocus (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V b
net/minecraft/client/gui/components/events/GuiEventListener eir
	DOUBLE_CLICK_THRESHOLD_MS w_
	changeFocus (Z)Z b
	charTyped (CI)Z a
	isMouseOver (DD)Z a_
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseMoved (DD)V e
	mouseReleased (DDI)Z b
	mouseScrolled (DDD)Z a
net/minecraft/client/gui/components/spectator/SpectatorGui eiu
	FADE_OUT_DELAY c
	FADE_OUT_TIME d
	SPECTATOR_LOCATION a
	WIDGETS_LOCATION b
	lastSelectionTime f
	menu j
	minecraft e
	getHotbarAlpha ()F c
	isMenuActive ()Z a
	onHotbarSelected (I)V a
	onMouseMiddleClick ()V b
	onMouseScrolled (I)V b
	onSpectatorMenuClosed (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
	renderHotbar (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderPage (Lcom/mojang/blaze3d/vertex/PoseStack;FIILnet/minecraft/client/gui/spectator/categories/SpectatorPage;)V a
	renderSlot (Lcom/mojang/blaze3d/vertex/PoseStack;IIFFLnet/minecraft/client/gui/spectator/SpectatorMenuItem;)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
net/minecraft/client/gui/components/toasts/AdvancementToast eiw
	advancement d
	playedSound e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
net/minecraft/client/gui/components/toasts/RecipeToast eix
	DESCRIPTION_TEXT f
	DISPLAY_TIME d
	TITLE_TEXT e
	changed i
	lastChanged h
	recipes g
	addItem (Lnet/minecraft/world/item/crafting/Recipe;)V a
	addOrUpdate (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/world/item/crafting/Recipe;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
net/minecraft/client/gui/components/toasts/SystemToast eiy
	LINE_SPACING e
	MARGIN f
	MAX_LINE_SIZE d
	changed k
	id g
	lastChanged j
	messageLines i
	title h
	width l
	add (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
	addOrUpdate (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V b
	getToken ()Ljava/lang/Object; d
	getToken ()Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds; c
	height ()I b
	multiline (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/toasts/SystemToast; a
	nullToEmpty (Lnet/minecraft/network/chat/Component;)Lcom/google/common/collect/ImmutableList; a
	onPackCopyFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V c
	onWorldAccessFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V a
	onWorldDeleteFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	renderBackgroundRow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;IIII)V a
	reset (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
	width ()I a
net/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds eiy$a
	$VALUES l
	CHAT_PREVIEW_WARNING i
	NARRATOR_TOGGLE b
	PACK_COPY_FAILURE g
	PACK_LOAD_FAILURE e
	PERIODIC_NOTIFICATION h
	TUTORIAL_HINT a
	UNSECURE_SERVER_WARNING j
	WORLD_ACCESS_FAILURE f
	WORLD_BACKUP c
	WORLD_GEN_SETTINGS_TRANSFER d
	displayTime k
	$values ()[Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds; a
net/minecraft/client/gui/components/toasts/Toast eiz
	NO_TOKEN b
	SLOT_HEIGHT c
	TEXTURE a
	getToken ()Ljava/lang/Object; d
	height ()I b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	slotCount ()I e
	width ()I a
net/minecraft/client/gui/components/toasts/Toast$Visibility eiz$a
	$VALUES d
	HIDE b
	SHOW a
	soundEvent c
	$values ()[Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	playSound (Lnet/minecraft/client/sounds/SoundManager;)V a
net/minecraft/client/gui/components/toasts/ToastComponent eja
	NO_SPACE b
	SLOT_COUNT a
	minecraft c
	occupiedSlots e
	queued f
	visible d
	addToast (Lnet/minecraft/client/gui/components/toasts/Toast;)V a
	clear ()V a
	findFreeIndex (I)I a
	freeSlots ()I c
	getMinecraft ()Lnet/minecraft/client/Minecraft; b
	getToast (Ljava/lang/Class;Ljava/lang/Object;)Lnet/minecraft/client/gui/components/toasts/Toast; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/components/toasts/ToastComponent$ToastInstance eja$a
	ANIMATION_TIME b
	animationTime f
	index d
	slotCount e
	toast c
	visibility h
	visibleTime g
	getToast ()Lnet/minecraft/client/gui/components/toasts/Toast; a
	getVisibility (J)F a
	render (ILcom/mojang/blaze3d/vertex/PoseStack;)Z a
net/minecraft/client/gui/components/toasts/TutorialToast ejb
	PROGRESS_BAR_HEIGHT e
	PROGRESS_BAR_WIDTH d
	PROGRESS_BAR_X f
	PROGRESS_BAR_Y g
	icon h
	lastProgress m
	lastProgressTime l
	message j
	progress n
	progressable o
	title i
	visibility k
	hide ()V c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	updateProgress (F)V a
net/minecraft/client/gui/components/toasts/TutorialToast$Icons ejb$a
	$VALUES j
	MOUSE b
	MOVEMENT_KEYS a
	RECIPE_BOOK d
	RIGHT_CLICK g
	SOCIAL_INTERACTIONS f
	TREE c
	WOODEN_PLANKS e
	x h
	y i
	$values ()[Lnet/minecraft/client/gui/components/toasts/TutorialToast$Icons; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/GuiComponent;II)V a
net/minecraft/client/gui/font/AllMissingGlyphProvider ejd
	getGlyph (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/client/gui/font/FontManager eje
	FONTS_PATH c
	LOGGER b
	MISSING_FONT a
	fontSets e
	missingFontSet d
	reloadListener h
	renames g
	textureManager f
	createFont ()Lnet/minecraft/client/gui/Font; a
	createFontFilterFishy ()Lnet/minecraft/client/gui/Font; b
	getReloadListener ()Lnet/minecraft/server/packs/resources/PreparableReloadListener; c
	setRenames (Ljava/util/Map;)V a
net/minecraft/client/gui/font/FontSet ejf
	LARGE_FORWARD_ADVANCE b
	RANDOM a
	glyphInfos i
	glyphs h
	glyphsByWidth j
	missingGlyph e
	name d
	providers g
	textureManager c
	textures k
	whiteGlyph f
	closeProviders ()V b
	closeTextures ()V c
	computeBakedGlyph (I)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; c
	computeGlyphInfo (I)Lnet/minecraft/client/gui/font/FontSet$GlyphInfoFilter; b
	getGlyph (I)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	getGlyphInfo (IZ)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getRandomGlyph (Lcom/mojang/blaze3d/font/GlyphInfo;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	hasFishyAdvance (Lcom/mojang/blaze3d/font/GlyphInfo;)Z b
	reload (Ljava/util/List;)V a
	stitch (Lcom/mojang/blaze3d/font/SheetGlyphInfo;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	whiteGlyph ()Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
net/minecraft/client/gui/font/FontSet$GlyphInfoFilter ejf$a
	MISSING c
	glyphInfo a
	glyphInfoNotFishy b
	glyphInfo ()Lcom/mojang/blaze3d/font/GlyphInfo; a
	glyphInfoNotFishy ()Lcom/mojang/blaze3d/font/GlyphInfo; b
	select (Z)Lcom/mojang/blaze3d/font/GlyphInfo; a
net/minecraft/client/gui/font/FontTexture ejg
	SIZE e
	colored j
	name f
	normalType g
	polygonOffsetType i
	root k
	seeThroughType h
	add (Lcom/mojang/blaze3d/font/SheetGlyphInfo;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	getName ()Lnet/minecraft/resources/ResourceLocation; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/gui/font/FontTexture$Node ejg$a
	height d
	left e
	occupied g
	right f
	width c
	x a
	y b
	insert (Lcom/mojang/blaze3d/font/SheetGlyphInfo;)Lnet/minecraft/client/gui/font/FontTexture$Node; a
net/minecraft/client/gui/font/TextFieldHelper ejh
	cursorPos f
	getClipboardFn c
	getMessageFn a
	selectionPos g
	setClipboardFn d
	setMessageFn b
	stringValidator e
	charTyped (C)Z a
	clampToMsgLength (I)I h
	copy ()V c
	createClipboardGetter (Lnet/minecraft/client/Minecraft;)Ljava/util/function/Supplier; a
	createClipboardSetter (Lnet/minecraft/client/Minecraft;)Ljava/util/function/Consumer; c
	cut ()V a
	deleteSelection (Ljava/lang/String;)Ljava/lang/String; c
	getClipboardContents (Lnet/minecraft/client/Minecraft;)Ljava/lang/String; b
	getCursorPos ()I g
	getSelected (Ljava/lang/String;)Ljava/lang/String; b
	getSelectionPos ()I h
	insertText (Ljava/lang/String;)V a
	insertText (Ljava/lang/String;Ljava/lang/String;)V a
	isSelecting ()Z i
	keyPressed (I)Z a
	moveBy (IZLnet/minecraft/client/gui/font/TextFieldHelper$CursorStep;)V a
	moveByChars (I)V b
	moveByChars (IZ)V a
	moveByWords (I)V c
	moveByWords (IZ)V b
	paste ()V b
	removeCharsFromCursor (I)V e
	removeFromCursor (ILnet/minecraft/client/gui/font/TextFieldHelper$CursorStep;)V a
	removeWordsFromCursor (I)V d
	resetSelectionIfNeeded (Z)V c
	selectAll ()V d
	setClipboardContents (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V a
	setCursorPos (I)V f
	setCursorPos (IZ)V c
	setCursorToEnd ()V f
	setCursorToEnd (Z)V b
	setCursorToStart ()V e
	setCursorToStart (Z)V a
	setSelectionPos (I)V g
	setSelectionRange (II)V a
net/minecraft/client/gui/font/TextFieldHelper$CursorStep ejh$a
	$VALUES c
	CHARACTER a
	WORD b
	$values ()[Lnet/minecraft/client/gui/font/TextFieldHelper$CursorStep; a
net/minecraft/client/gui/font/glyphs/BakedGlyph eji
	down k
	left h
	normalType a
	polygonOffsetType c
	right i
	seeThroughType b
	u0 d
	u1 e
	up j
	v0 f
	v1 g
	render (ZFFLcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
	renderEffect (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph$Effect;Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;I)V a
	renderType (Lnet/minecraft/client/gui/Font$DisplayMode;)Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/gui/font/glyphs/BakedGlyph$Effect eji$a
	a i
	b h
	depth e
	r f
	x0 a
	x1 c
	y0 b
	y1 d
net/minecraft/client/gui/font/glyphs/EmptyGlyph ejj
	INSTANCE a
	render (ZFFLcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
net/minecraft/client/gui/font/glyphs/SpecialGlyphs ejk
	$VALUES d
	MISSING b
	WHITE a
	image c
	$values ()[Lnet/minecraft/client/gui/font/glyphs/SpecialGlyphs; e
	generate (IILnet/minecraft/client/gui/font/glyphs/SpecialGlyphs$PixelProvider;)Lcom/mojang/blaze3d/platform/NativeImage; a
net/minecraft/client/gui/font/glyphs/SpecialGlyphs$PixelProvider ejk$a
net/minecraft/client/gui/font/providers/BitmapProvider ejn
	LOGGER a
	glyphs c
	image b
	getGlyph (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/client/gui/font/providers/BitmapProvider$Builder ejn$a
	ascent d
	chars b
	height c
	texture a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/BitmapProvider$Builder; a
	getActualGlyphWidth (Lcom/mojang/blaze3d/platform/NativeImage;IIII)I a
net/minecraft/client/gui/font/providers/BitmapProvider$Glyph ejn$b
	advance g
	ascent h
	height f
	image b
	offsetX c
	offsetY d
	scale a
	width e
	advance ()I i
	ascent ()I j
	height ()I h
	image ()Lcom/mojang/blaze3d/platform/NativeImage; d
	offsetX ()I e
	offsetY ()I f
	scale ()F c
	width ()I g
net/minecraft/client/gui/font/providers/GlyphProviderBuilder ejo
net/minecraft/client/gui/font/providers/GlyphProviderBuilderType ejp
	$VALUES h
	BITMAP a
	BY_NAME e
	LEGACY_UNICODE d
	SPACE c
	TTF b
	factory g
	name f
	$values ()[Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilderType; a
	byName (Ljava/lang/String;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilderType; a
	create (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilder; a
net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider ejq
	CODEPOINTS_PER_SHEET c
	LOGGER a
	NO_GLYPH e
	TEXTURE_SIZE d
	UNICODE_SHEETS b
	resourceManager f
	sizes g
	texturePattern h
	textures i
	getGlyph (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getLeft (B)I a
	getRight (B)I b
	getSheetLocation (I)Lnet/minecraft/resources/ResourceLocation; b
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
	loadTexture (Lnet/minecraft/resources/ResourceLocation;)Lcom/mojang/blaze3d/platform/NativeImage; a
net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Builder ejq$a
	metadata a
	texturePattern b
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilder; a
	getTemplate (Lcom/google/gson/JsonObject;)Ljava/lang/String; b
net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Glyph ejq$b
	height d
	source e
	sourceX a
	sourceY b
	width c
	getBoldOffset ()F a
	getShadowOffset ()F b
	height ()I f
	source ()Lcom/mojang/blaze3d/platform/NativeImage; g
	sourceX ()I c
	sourceY ()I d
	width ()I e
net/minecraft/client/gui/font/providers/TrueTypeGlyphProviderBuilder ejr
	LOGGER a
	location b
	oversample d
	shiftX e
	shiftY f
	size c
	skip g
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilder; a
net/minecraft/client/gui/narration/NarratableEntry ejt
	isActive ()Z aj_
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; t
net/minecraft/client/gui/narration/NarratableEntry$NarrationPriority ejt$a
	$VALUES d
	FOCUSED c
	HOVERED b
	NONE a
	$values ()[Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; b
	isTerminal ()Z a
net/minecraft/client/gui/narration/NarratedElementType eju
	$VALUES e
	HINT c
	POSITION b
	TITLE a
	USAGE d
	$values ()[Lnet/minecraft/client/gui/narration/NarratedElementType; a
net/minecraft/client/gui/narration/NarrationElementOutput ejv
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;Ljava/lang/String;)V a
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;Lnet/minecraft/client/gui/narration/NarrationThunk;)V a
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;Lnet/minecraft/network/chat/Component;)V a
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;[Lnet/minecraft/network/chat/Component;)V a
	nest ()Lnet/minecraft/client/gui/narration/NarrationElementOutput; a
net/minecraft/client/gui/narration/NarrationSupplier ejw
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/narration/NarrationThunk ejx
	EMPTY a
	contents b
	converter c
	from (Ljava/lang/String;)Lnet/minecraft/client/gui/narration/NarrationThunk; a
	from (Ljava/util/List;)Lnet/minecraft/client/gui/narration/NarrationThunk; a
	from (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/narration/NarrationThunk; a
	getText (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/narration/ScreenNarrationCollector ejy
	entries b
	generation a
	collectNarrationText (Z)Ljava/lang/String; a
	update (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/narration/ScreenNarrationCollector$EntryKey ejy$a
	depth b
	type a
net/minecraft/client/gui/narration/ScreenNarrationCollector$NarrationEntry ejy$b
	alreadyNarrated c
	contents a
	generation b
	update (ILnet/minecraft/client/gui/narration/NarrationThunk;)Lnet/minecraft/client/gui/narration/ScreenNarrationCollector$NarrationEntry; a
net/minecraft/client/gui/narration/ScreenNarrationCollector$Output ejy$c
	depth b
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;Lnet/minecraft/client/gui/narration/NarrationThunk;)V a
	nest ()Lnet/minecraft/client/gui/narration/NarrationElementOutput; a
net/minecraft/client/gui/screens/AccessibilityOptionsScreen ekb
	GUIDE_LINK n
	createFooter ()V f
	options (Lnet/minecraft/client/Options;)[Lnet/minecraft/client/OptionInstance; a
net/minecraft/client/gui/screens/AlertScreen ekc
	LABEL_Y a
	callback n
	message c
	messageText b
	okButton o
	shouldCloseOnEsc p
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
net/minecraft/client/gui/screens/BackupConfirmScreen ekd
	description n
	eraseCache q
	id b
	lastScreen c
	listener a
	message p
	promptForCacheErase o
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
net/minecraft/client/gui/screens/BackupConfirmScreen$Listener ekd$a
net/minecraft/client/gui/screens/BanNoticeScreen eke
	PERMANENT_BAN_TITLE c
	TEMPORARY_BAN_TITLE b
	URL_MODERATION a
	create (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/client/gui/screens/ConfirmLinkScreen; a
	getBanDurationText (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/Component; e
	getBanReasonText (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/Component; c
	getBanStatusText (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/Component; d
	getBannedScreenText (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/Component; b
	getBannedTitle (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/Component; a
	isTemporaryBan (Lcom/mojang/authlib/minecraft/BanDetails;)Z f
net/minecraft/client/gui/screens/ChatOptionsScreen ekf
net/minecraft/client/gui/screens/ChatScreen ekg
	CHAT_SIGNING_PENDING_INDICATOR_COLOR c
	CHAT_SIGNING_READY_INDICATOR_COLOR n
	MOUSE_SCROLL_SPEED a
	PREVIEW_HIGHLIGHT_COLOR o
	PREVIEW_INPUT_HINT v
	PREVIEW_MARGIN_BOTTOM s
	PREVIEW_MARGIN_SIDES q
	PREVIEW_PADDING r
	PREVIEW_WARNING_TITLE t
	PREVIEW_WARNING_TOAST u
	TOOLTIP_MAX_WIDTH w
	USAGE_TEXT p
	chatPreview B
	chatPreviewAnimator E
	chatPreviewStatus C
	commandSuggestions A
	historyBuffer x
	historyPos y
	initial z
	input b
	previewNotRequired D
	chatPreviewBottom ()I B
	chatPreviewHeight (Ljava/util/List;)I b
	chatPreviewLeft ()I C
	chatPreviewRight ()I D
	chatPreviewTop (I)I b
	chatPreviewWidth ()I A
	getChatPreview ()Lnet/minecraft/client/gui/chat/ClientChatPreview; j
	getChatPreviewStyleAt (DD)Lnet/minecraft/network/chat/Style; c
	getComponentStyleAt (DD)Lnet/minecraft/network/chat/Style; a
	getDisplayedPreviewText ()Lnet/minecraft/network/chat/Component; g
	handleChatInput (Ljava/lang/String;Z)Z b
	init ()V b
	insertText (Ljava/lang/String;Z)V a
	isPauseScreen ()Z h
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (DDD)Z a
	moveInHistory (I)V a
	normalizeChatMessage (Ljava/lang/String;)Ljava/lang/String; a
	onEdited (Ljava/lang/String;)V b
	peekPreview ()Lnet/minecraft/network/chat/Component; z
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderChatPreview (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;FZ)V a
	renderChatPreviewHighlights (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/util/FormattedCharSequence;II)V a
	requestChatMessagePreview (Ljava/lang/String;)V e
	requestCommandArgumentPreview (Ljava/lang/String;)V f
	requestPreview (Ljava/lang/String;)V d
	resize (Lnet/minecraft/client/Minecraft;II)V a
	sendsChatPreviewRequests ()Z k
	setChatLine (Ljava/lang/String;)V g
	splitChatPreview (Lnet/minecraft/network/chat/Component;)Ljava/util/List; a
	tick ()V d
	updateChatPreview (Ljava/lang/String;)V c
	updateNarrationState (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/ConfirmLinkScreen ekh
	COPY_BUTTON_TEXT n
	WARNING_TEXT o
	showWarning q
	url p
	addButtons (I)V a
	confirmMessage (Z)Lnet/minecraft/network/chat/MutableComponent; c
	confirmMessage (ZLjava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; a
	copyToClipboard ()V g
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/ConfirmScreen eki
	MARGIN n
	callback c
	delayTicker q
	exitButtons r
	message o
	multilineMessage p
	noButton b
	yesButton a
	addButtons (I)V a
	addExitButton (Lnet/minecraft/client/gui/components/Button;)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	keyPressed (III)Z a
	messageHeight ()I k
	messageTop ()I j
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setDelay (I)V b
	shouldCloseOnEsc ()Z af_
	tick ()V d
	titleTop ()I g
net/minecraft/client/gui/screens/ConnectScreen ekj
	LOGGER c
	NARRATION_DELAY_MS n
	UNIQUE_THREAD_ID b
	UNKNOWN_HOST_MESSAGE a
	aborted p
	connection o
	lastNarration s
	parent q
	status r
	connect (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/multiplayer/resolver/ServerAddress;)V a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
	startConnecting (Lnet/minecraft/client/gui/screens/Screen;Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/multiplayer/resolver/ServerAddress;Lnet/minecraft/client/multiplayer/ServerData;)V a
	tick ()V d
	updateStatus (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/client/gui/screens/CreateBuffetWorldScreen ekk
	BIOME_SELECT_INFO a
	applySettings c
	biome p
	biomes n
	doneButton q
	list o
	parent b
	init ()V b
	onClose ()V ag_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	updateButtonValidity ()V g
net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList ekk$a
	isFocused ()Z a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry;)V a
net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry ekk$a$a
	biome b
	name c
	getNarration ()Lnet/minecraft/network/chat/Component; b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/CreateFlatWorldScreen ekl
	SLOT_BG_SIZE c
	SLOT_BG_X o
	SLOT_BG_Y p
	SLOT_FG_X q
	SLOT_FG_Y r
	SLOT_STAT_HEIGHT n
	SLOT_TEX_SIZE b
	applySettings s
	columnHeight v
	columnType u
	deleteLayerButton x
	generator t
	list w
	parent a
	hasValidSelection ()Z k
	init ()V b
	onClose ()V ag_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setConfig (Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)V a
	settings ()Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; g
	updateButtonValidity ()V j
net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList ekl$a
	getScrollbarPosition ()I d
	isFocused ()Z a
	resetRows ()V e
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry;)V a
net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry ekl$a$a
	blitSlot (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/ItemStack;)V a
	blitSlotBg (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	getDisplayItem (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getNarration ()Lnet/minecraft/network/chat/Component; b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/DatapackLoadFailureScreen ekm
	callback b
	message a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
net/minecraft/client/gui/screens/DeathScreen ekn
	causeOfDeath b
	deathScore n
	delayTicker a
	exitButtons o
	hardcore c
	confirmResult (Z)V c
	exitToTitleScreen ()V g
	getClickedComponentStyleAt (I)Lnet/minecraft/network/chat/Style; a
	init ()V b
	isPauseScreen ()Z h
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
	tick ()V d
net/minecraft/client/gui/screens/DemoIntroScreen eko
	DEMO_BACKGROUND_LOCATION a
	durationMessage c
	movementMessage b
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/screens/DirectJoinServerScreen ekp
	ENTER_IP_LABEL a
	callback o
	ipEdit n
	lastScreen p
	selectButton b
	serverData c
	init ()V b
	keyPressed (III)Z a
	onClose ()V ag_
	onSelect ()V g
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
	updateSelectButtonStatus ()V j
net/minecraft/client/gui/screens/DisconnectedScreen ekq
	message b
	parent c
	reason a
	textHeight n
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
net/minecraft/client/gui/screens/EditServerScreen ekr
	IP_LABEL b
	NAME_LABEL a
	addButton c
	callback n
	ipEdit p
	lastScreen r
	nameEdit q
	serverData o
	init ()V b
	onAdd ()V g
	onClose ()V ag_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
	updateAddButtonStatus ()V j
net/minecraft/client/gui/screens/ErrorScreen eks
	message a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
net/minecraft/client/gui/screens/GenericDirtMessageScreen ekt
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
net/minecraft/client/gui/screens/GenericWaitingScreen eku
	MESSAGE_MAX_WIDTH c
	MESSAGE_Y b
	TITLE_Y a
	button r
	buttonCallback p
	buttonLabel o
	disableButtonTicks s
	message q
	messageText n
	createCompleted (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Ljava/lang/Runnable;)Lnet/minecraft/client/gui/screens/GenericWaitingScreen; a
	createWaiting (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Ljava/lang/Runnable;)Lnet/minecraft/client/gui/screens/GenericWaitingScreen; a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	onClose ()V ag_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
	tick ()V d
net/minecraft/client/gui/screens/InBedChatScreen ekv
	leaveBedButton c
	init ()V b
	keyPressed (III)Z a
	onClose ()V ag_
	onPlayerWokeUp ()V k
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	sendWakeUp ()V z
net/minecraft/client/gui/screens/LanguageSelectScreen ekw
	WARNING_LABEL c
	languageManager o
	packSelectionList n
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList ekw$a
	getRowWidth ()I c
	getScrollbarPosition ()I d
	isFocused ()Z a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList$Entry ekw$a$a
	language b
	getNarration ()Lnet/minecraft/network/chat/Component; b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	select ()V a
net/minecraft/client/gui/screens/LevelLoadingScreen ekx
	COLORS o
	NARRATION_DELAY_MS a
	done n
	lastNarration c
	progressListener b
	getFormattedProgress ()Ljava/lang/String; g
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderChunks (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/server/level/progress/StoringChunkProgressListener;IIII)V a
	shouldCloseOnEsc ()Z af_
	updateNarratedWidget (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
net/minecraft/client/gui/screens/LoadingDotsText eky
	FRAMES a
	INTERVAL_MS b
	get (J)Ljava/lang/String; a
net/minecraft/client/gui/screens/LoadingOverlay ekz
	BRAND_BACKGROUND f
	FADE_IN_TIME b
	FADE_OUT_TIME a
	LOGO_BACKGROUND_COLOR d
	LOGO_BACKGROUND_COLOR_DARK e
	LOGO_HALF m
	LOGO_OVERLAP n
	LOGO_QUARTER l
	LOGO_QUARTER_FLOAT k
	LOGO_SCALE j
	MOJANG_STUDIOS_LOGO_LOCATION c
	SMOOTHING o
	currentProgress t
	fadeIn s
	fadeInStart v
	fadeOutStart u
	minecraft p
	onFinish r
	reload q
	drawProgressBar (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIF)V a
	isPauseScreen ()Z a
	registerTextures (Lnet/minecraft/client/Minecraft;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	replaceAlpha (II)I a
net/minecraft/client/gui/screens/LoadingOverlay$LogoTexture ekz$a
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
net/minecraft/client/gui/screens/MenuScreens ela
	LOGGER a
	SCREENS b
	create (Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/Minecraft;ILnet/minecraft/network/chat/Component;)V a
	getConstructor (Lnet/minecraft/world/inventory/MenuType;)Lnet/minecraft/client/gui/screens/MenuScreens$ScreenConstructor; a
	register (Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/gui/screens/MenuScreens$ScreenConstructor;)V a
	selfTest ()Z a
net/minecraft/client/gui/screens/MenuScreens$ScreenConstructor ela$a
	fromPacket (Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/Minecraft;I)V a
net/minecraft/client/gui/screens/MouseSettingsScreen elb
	list c
	init ()V b
	options (Lnet/minecraft/client/Options;)[Lnet/minecraft/client/OptionInstance; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/OnlineOptionsScreen elc
	createFooter ()V f
net/minecraft/client/gui/screens/OptionsScreen eld
	difficultyButton c
	lastScreen a
	lockButton n
	options b
	createDifficultyButton (IIILjava/lang/String;Lnet/minecraft/client/Minecraft;)Lnet/minecraft/client/gui/components/CycleButton; a
	init ()V b
	lockCallback (Z)V c
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	updatePackList (Lnet/minecraft/server/packs/repository/PackRepository;)V a
net/minecraft/client/gui/screens/OptionsSubScreen ele
	lastScreen a
	options b
	onClose ()V ag_
	removed ()V e
	tooltipAt (Lnet/minecraft/client/gui/components/OptionsList;II)Ljava/util/List; a
net/minecraft/client/gui/screens/OutOfMemoryScreen elf
	message a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
net/minecraft/client/gui/screens/Overlay elg
	isPauseScreen ()Z a
net/minecraft/client/gui/screens/PauseScreen elh
	URL_BUGS c
	URL_FEEDBACK_RELEASE b
	URL_FEEDBACK_SNAPSHOT a
	showPauseMenu n
	createPauseMenu ()V g
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
net/minecraft/client/gui/screens/PopupScreen eli
	BUTTON_HEIGHT c
	BUTTON_MARGIN b
	BUTTON_PADDING a
	buttonOptions p
	buttonWidth s
	contentTop r
	message o
	messageLines q
	narrationMessage n
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
net/minecraft/client/gui/screens/PopupScreen$ButtonOption eli$a
	message a
	onPress b
net/minecraft/client/gui/screens/PresetFlatWorldScreen elj
	DEFAULT_BIOME t
	LOGGER b
	SLOT_BG_SIZE n
	SLOT_BG_X p
	SLOT_BG_Y q
	SLOT_FG_X r
	SLOT_FG_Y s
	SLOT_STAT_HEIGHT o
	SLOT_TEX_SIZE c
	UNKNOWN_PRESET a
	export z
	list x
	listText w
	parent u
	selectButton y
	settings A
	shareText v
	fromString (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;Ljava/lang/String;Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
	getLayerInfoFromString (Ljava/lang/String;I)Lnet/minecraft/world/level/levelgen/flat/FlatLayerInfo; a
	getLayersInfoFromString (Ljava/lang/String;)Ljava/util/List; a
	init ()V b
	mouseScrolled (DDD)Z a
	onClose ()V ag_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	save (Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Ljava/lang/String; a
	tick ()V d
	updateButtonValidity (Z)V c
net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList elj$a
	isFocused ()Z a
	keyPressed (III)Z a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry;)V a
net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry elj$a$a
	name c
	preset b
	blitSlot (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/Item;)V a
	blitSlotBg (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	getNarration ()Lnet/minecraft/network/chat/Component; b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	select ()V a
net/minecraft/client/gui/screens/ProgressScreen elk
	clearScreenAfterStop o
	header a
	progress c
	stage b
	stop n
	progressStage (Lnet/minecraft/network/chat/Component;)V c
	progressStagePercentage (I)V a
	progressStart (Lnet/minecraft/network/chat/Component;)V b
	progressStartNoAbort (Lnet/minecraft/network/chat/Component;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
	stop ()V a
net/minecraft/client/gui/screens/ReceivingLevelScreen ell
	CHUNK_LOADING_START_WAIT_LIMIT_MS b
	DOWNLOADING_TERRAIN_TEXT a
	createdAt o
	loadingPacketsReceived c
	oneTickSkipped n
	isPauseScreen ()Z h
	loadingPacketsReceived ()V g
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
	tick ()V d
net/minecraft/client/gui/screens/Screen elm
	ALLOWED_PROTOCOLS b
	EXTRA_SPACE_AFTER_FIRST_TOOLTIP_LINE c
	LOGGER a
	NARRATE_DELAY_KEYBOARD_ACTION w
	NARRATE_DELAY_MOUSE_ACTION v
	NARRATE_DELAY_MOUSE_MOVE u
	NARRATE_DELAY_NARRATOR_ENABLED t
	NARRATE_SUPPRESS_AFTER_INIT_TIME s
	USAGE_NARRATION n
	children o
	clickedLink r
	font m
	height k
	itemRenderer f
	lastNarratable A
	minecraft e
	narratables p
	narrationState x
	narrationSuppressTime y
	nextNarrationTime z
	passEvents l
	renderables q
	title d
	width j
	addRenderableOnly (Lnet/minecraft/client/gui/components/Widget;)Lnet/minecraft/client/gui/components/Widget; a
	addRenderableWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; d
	addWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; e
	afterKeyboardAction ()V w
	afterMouseAction ()V u
	afterMouseMove ()V t
	children ()Ljava/util/List; i
	clearWidgets ()V o
	confirmLink (Z)V c
	findNarratableWidget (Ljava/util/List;Lnet/minecraft/client/gui/narration/NarratableEntry;)Lnet/minecraft/client/gui/screens/Screen$NarratableSearchResult; a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	getTitle ()Lnet/minecraft/network/chat/Component; n
	getTooltipFromItem (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	handleComponentClicked (Lnet/minecraft/network/chat/Style;)Z a
	handleDelayedNarration ()V x
	hasAltDown ()Z s
	hasControlDown ()Z q
	hasShiftDown ()Z r
	hideWidgets ([Lnet/minecraft/client/gui/components/AbstractWidget;)V a
	init ()V b
	init (Lnet/minecraft/client/Minecraft;II)V b
	insertText (Ljava/lang/String;Z)V a
	isCopy (I)Z h
	isCut (I)Z f
	isMouseOver (DD)Z a_
	isPaste (I)Z g
	isPauseScreen ()Z h
	isSelectAll (I)Z i
	isValidCharacterForName (Ljava/lang/String;CI)Z a
	keyPressed (III)Z a
	narrationEnabled ()V y
	onClose ()V ag_
	onFilesDrop (Ljava/util/List;)V a
	openLink (Ljava/net/URI;)V a
	rebuildWidgets ()V p
	removeWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V f
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;I)V a
	renderComponentHoverEffect (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Style;II)V a
	renderComponentTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;II)V b
	renderDirtBackground (I)V e
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;II)V c
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;Ljava/util/Optional;II)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V b
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/ItemStack;II)V a
	renderTooltipInternal (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;II)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	runNarration (Z)V e
	scheduleNarration (JZ)V a
	shouldCloseOnEsc ()Z af_
	shouldRunNarration ()Z g
	suppressNarration (J)V a
	tick ()V d
	triggerImmediateNarration (Z)V d
	updateNarratedWidget (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
	updateNarrationState (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
	wrapScreenError (Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/String;)V a
net/minecraft/client/gui/screens/Screen$NarratableSearchResult elm$a
	entry a
	index b
	priority c
net/minecraft/client/gui/screens/ShareToLanScreen eln
	ALLOW_COMMANDS_LABEL a
	GAME_MODE_LABEL b
	INFO_TEXT c
	commands p
	gameMode o
	lastScreen n
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/SimpleOptionsSubScreen elo
	list o
	narratorButton n
	smallOptions c
	createFooter ()V f
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	updateNarratorButton ()V g
net/minecraft/client/gui/screens/SkinCustomizationScreen elp
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/SoundOptionsScreen elq
	directionalAudioButton c
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/TitleScreen elr
	ACCESSIBILITY_TEXTURE p
	COPYRIGHT_TEXT a
	CUBE_MAP b
	DEMO_LEVEL_ID n
	LOGGER c
	MINECRAFT_EDITION u
	MINECRAFT_LOGO t
	PANORAMA_OVERLAY o
	fadeInStart y
	fading x
	minceraftEasterEgg q
	panorama w
	realmsNotificationsScreen v
	resetDemoButton s
	splash r
	warningLabel z
	checkDemoWorldPresence ()Z k
	confirmDemo (Z)V c
	createDemoMenuOptions (II)V b
	createNormalMenuOptions (II)V a
	getMultiplayerDisabledReason ()Lnet/minecraft/network/chat/Component; j
	init ()V b
	isPauseScreen ()Z h
	mouseClicked (DDI)Z a
	preloadResources (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	realmsButtonClicked ()V z
	realmsNotificationsEnabled ()Z g
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
	tick ()V d
net/minecraft/client/gui/screens/TitleScreen$WarningLabel elr$a
	font a
	label b
	x c
	y d
	font ()Lnet/minecraft/client/gui/Font; a
	label ()Lnet/minecraft/client/gui/components/MultiLineLabel; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;I)V a
	x ()I c
	y ()I d
net/minecraft/client/gui/screens/VideoSettingsScreen els
	BUTTON_ACCEPT p
	BUTTON_CANCEL q
	FABULOUS c
	WARNING_MESSAGE n
	WARNING_TITLE o
	gpuWarnlistManager s
	list r
	oldMipmaps t
	init ()V b
	mouseClicked (DDI)Z a
	mouseReleased (DDI)Z b
	options (Lnet/minecraft/client/Options;)[Lnet/minecraft/client/OptionInstance; a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/WinScreen elt
	EDITION_LOCATION c
	LOGGER a
	LOGO_LOCATION b
	LOGO_WIDTH r
	NAME_PREFIX p
	OBFUSCATE_TOKEN q
	SECTION_HEADING o
	SPEEDUP_FACTOR s
	SPEEDUP_FACTOR_FAST t
	VIGNETTE_LOCATION n
	centeredLines y
	lines x
	onFinished v
	poem u
	scroll w
	scrollSpeed C
	speedupActive A
	speedupModifiers B
	totalScrollLength z
	unmodifiedScrollSpeed D
	addCreditsFile (Ljava/io/Reader;)V b
	addCreditsLine (Lnet/minecraft/network/chat/Component;Z)V a
	addEmptyLine ()V k
	addPoemFile (Ljava/io/Reader;)V a
	addPoemLines (Ljava/lang/String;)V a
	calculateScrollSpeed ()F g
	init ()V b
	keyPressed (III)Z a
	keyReleased (III)Z b
	onClose ()V ag_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg ()V z
	respawn ()V j
	tick ()V d
	wrapCreditsIO (Ljava/lang/String;Lnet/minecraft/client/gui/screens/WinScreen$CreditsReader;)V a
net/minecraft/client/gui/screens/WinScreen$CreditsReader elt$a
net/minecraft/client/gui/screens/achievement/StatsScreen elu
	PENDING_TEXT c
	SLOT_BG_SIZE u
	SLOT_BG_X w
	SLOT_BG_Y x
	SLOT_FG_X y
	SLOT_FG_Y z
	SLOT_LEFT_INSERT A
	SLOT_STAT_HEIGHT v
	SLOT_TEXT_OFFSET B
	SLOT_TEX_SIZE t
	SORT_DOWN D
	SORT_NONE C
	SORT_UP E
	activeList r
	isLoading s
	itemStatsList o
	lastScreen a
	mobsStatsList p
	stats q
	statsList n
	blitSlot (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/Item;)V a
	blitSlotIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	getActiveList ()Lnet/minecraft/client/gui/components/ObjectSelectionList; z
	getColumnX (I)I a
	getTranslationKey (Lnet/minecraft/stats/Stat;)Ljava/lang/String; a
	init ()V b
	initButtons ()V j
	initLists ()V g
	isPauseScreen ()Z h
	onStatsUpdated ()V k
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setActiveList (Lnet/minecraft/client/gui/components/ObjectSelectionList;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList elu$a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList$Entry elu$a$a
	stat b
	statDisplay c
	getNarration ()Lnet/minecraft/network/chat/Component; b
	getValueText ()Ljava/lang/String; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList elu$b
	blockColumns a
	headerPressed p
	iconOffsets u
	itemColumns o
	itemStatSorter q
	sortColumn r
	sortOrder s
	clickedHeader (II)V a
	getColumn (I)Lnet/minecraft/stats/StatType; a
	getColumnIndex (Lnet/minecraft/stats/StatType;)I b
	getRowWidth ()I c
	getScrollbarPosition ()I d
	getString (Lnet/minecraft/world/item/Item;)Lnet/minecraft/network/chat/Component; a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderDecorations (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	renderHeader (Lcom/mojang/blaze3d/vertex/PoseStack;IILcom/mojang/blaze3d/vertex/Tesselator;)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	sortByColumn (Lnet/minecraft/stats/StatType;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow elu$b$a
	item b
	getItem ()Lnet/minecraft/world/item/Item; a
	getNarration ()Lnet/minecraft/network/chat/Component; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderStat (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/stats/Stat;IIZ)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRowComparator elu$b$b
	compare (Lnet/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow;Lnet/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow;)I a
net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList elu$c
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList$MobRow elu$c$a
	hasKills d
	killedBy e
	kills c
	mobName b
	wasKilledBy f
	getNarration ()Lnet/minecraft/network/chat/Component; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/achievement/StatsUpdateListener elv
	LOADING_SYMBOLS b
	onStatsUpdated ()V k
net/minecraft/client/gui/screens/advancements/AdvancementTab elx
	advancement e
	centered u
	display f
	fade t
	icon j
	index d
	maxX r
	maxY s
	minX p
	minY q
	minecraft a
	root l
	screen b
	scrollX n
	scrollY o
	title k
	type c
	widgets m
	addAdvancement (Lnet/minecraft/advancements/Advancement;)V a
	addWidget (Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget;Lnet/minecraft/advancements/Advancement;)V a
	create (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/advancements/AdvancementsScreen;ILnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementTab; a
	drawContents (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	drawIcon (IILnet/minecraft/client/renderer/entity/ItemRenderer;)V a
	drawTab (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	drawTooltips (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	getAdvancement ()Lnet/minecraft/advancements/Advancement; c
	getDisplay ()Lnet/minecraft/advancements/DisplayInfo; e
	getIndex ()I b
	getScreen ()Lnet/minecraft/client/gui/screens/advancements/AdvancementsScreen; f
	getTitle ()Lnet/minecraft/network/chat/Component; d
	getType ()Lnet/minecraft/client/gui/screens/advancements/AdvancementTabType; a
	getWidget (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; b
	isMouseOver (IIDD)Z a
	scroll (DD)V a
net/minecraft/client/gui/screens/advancements/AdvancementTabType ely
	$VALUES j
	ABOVE a
	BELOW b
	LEFT c
	RIGHT d
	height h
	max i
	textureX e
	textureY f
	width g
	$values ()[Lnet/minecraft/client/gui/screens/advancements/AdvancementTabType; b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/GuiComponent;IIZI)V a
	drawIcon (IIILnet/minecraft/client/renderer/entity/ItemRenderer;Lnet/minecraft/world/item/ItemStack;)V a
	getMax ()I a
	getX (I)I a
	getY (I)I b
	isMouseOver (IIIDD)Z a
net/minecraft/client/gui/screens/advancements/AdvancementWidget elz
	BOX_WIDTH d
	BOX_X c
	FRAME_WIDTH e
	HEIGHT b
	ICON_WIDTH k
	ICON_X f
	ICON_Y j
	TEST_SPLIT_OFFSETS q
	TITLE_MAX_WIDTH p
	TITLE_PADDING_LEFT l
	TITLE_PADDING_RIGHT m
	TITLE_X n
	TITLE_Y o
	WIDGETS_LOCATION a
	advancement s
	children z
	description w
	display t
	minecraft x
	parent y
	progress A
	tab r
	title u
	width v
	x B
	y C
	addChild (Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget;)V a
	attachToParent ()V b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	drawConnectivity (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	drawHover (Lcom/mojang/blaze3d/vertex/PoseStack;IIFII)V a
	findOptimalLines (Lnet/minecraft/network/chat/Component;I)Ljava/util/List; a
	getFirstVisibleParent (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; a
	getMaxWidth (Lnet/minecraft/client/StringSplitter;Ljava/util/List;)F a
	getWidth ()I a
	getX ()I d
	getY ()I c
	isMouseOver (IIII)Z b
	render9Sprite (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIII)V a
	renderRepeating (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIII)V a
	setProgress (Lnet/minecraft/advancements/AdvancementProgress;)V a
net/minecraft/client/gui/screens/advancements/AdvancementWidgetType ema
	$VALUES d
	OBTAINED a
	UNOBTAINED b
	y c
	$values ()[Lnet/minecraft/client/gui/screens/advancements/AdvancementWidgetType; b
	getIndex ()I a
net/minecraft/client/gui/screens/advancements/AdvancementsScreen emb
	BACKGROUND_TILE_COUNT_X q
	BACKGROUND_TILE_COUNT_Y r
	BACKGROUND_TILE_HEIGHT p
	BACKGROUND_TILE_WIDTH o
	NO_ADVANCEMENTS_LABEL z
	TABS_LOCATION t
	TITLE A
	VERY_SAD_LABEL y
	WINDOW_HEIGHT b
	WINDOW_INSIDE_HEIGHT n
	WINDOW_INSIDE_WIDTH c
	WINDOW_INSIDE_X u
	WINDOW_INSIDE_Y v
	WINDOW_LOCATION s
	WINDOW_TITLE_X w
	WINDOW_TITLE_Y x
	WINDOW_WIDTH a
	advancements B
	isScrolling E
	selectedTab D
	tabs C
	getAdvancementWidget (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; f
	getTab (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementTab; g
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	onAddAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V a
	onAddAdvancementTask (Lnet/minecraft/advancements/Advancement;)V c
	onAdvancementsCleared ()V a
	onRemoveAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V b
	onRemoveAdvancementTask (Lnet/minecraft/advancements/Advancement;)V d
	onSelectedTabChanged (Lnet/minecraft/advancements/Advancement;)V e
	onUpdateAdvancementProgress (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderInside (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	renderTooltips (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	renderWindow (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/controls/ControlsScreen emd
	ROW_SPACING c
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/controls/KeyBindsList eme
	keyBindsScreen a
	maxNameWidth o
	getRowWidth ()I c
	getScrollbarPosition ()I d
net/minecraft/client/gui/screens/controls/KeyBindsList$CategoryEntry eme$a
	name b
	width c
	changeFocus (Z)Z b
	children ()Ljava/util/List; i
	narratables ()Ljava/util/List; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/controls/KeyBindsList$Entry eme$b
net/minecraft/client/gui/screens/controls/KeyBindsList$KeyEntry eme$c
	changeButton d
	key b
	name c
	resetButton e
	children ()Ljava/util/List; i
	mouseClicked (DDI)Z a
	mouseReleased (DDI)Z b
	narratables ()Ljava/util/List; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/controls/KeyBindsScreen emf
	keyBindsList o
	lastKeySelection n
	resetButton p
	selectedKey c
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen emh
	ALL_SLOTS_WIDTH r
	GAMEMODE_SWITCHER_LOCATION a
	HELP_TIPS_OFFSET_Y q
	SELECT_KEY s
	SLOT_AREA n
	SLOT_AREA_PADDED p
	SLOT_PADDING o
	SPRITE_SHEET_HEIGHT c
	SPRITE_SHEET_WIDTH b
	currentlyHovered u
	firstMouseX v
	firstMouseY w
	previousHovered t
	setFirstMousePos x
	slots y
	checkToClose ()Z k
	getDefaultSelected ()Lnet/minecraft/world/level/GameType; g
	init ()V b
	isPauseScreen ()Z h
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	switchToHoveredGameMode ()V j
	switchToHoveredGameMode (Lnet/minecraft/client/Minecraft;Ljava/util/Optional;)V a
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon emh$a
	$VALUES k
	ADVENTURE c
	CREATIVE a
	ICON_AREA j
	ICON_TOP_LEFT f
	SPECTATOR d
	SURVIVAL b
	VALUES e
	command h
	name g
	renderStack i
	$values ()[Lnet/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon; d
	drawIcon (Lnet/minecraft/client/renderer/entity/ItemRenderer;II)V a
	getCommand ()Ljava/lang/String; b
	getFromGameType (Lnet/minecraft/world/level/GameType;)Ljava/util/Optional; a
	getName ()Lnet/minecraft/network/chat/Component; a
	getNext ()Ljava/util/Optional; c
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeSlot emh$b
	icon b
	isSelected c
	drawSelection (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/texture/TextureManager;)V b
	drawSlot (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/texture/TextureManager;)V a
	isHoveredOrFocused ()Z i
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setSelected (Z)V e
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen emj
	COMMAND_LABEL q
	PREVIOUS_OUTPUT_LABEL r
	SET_COMMAND_LABEL p
	cancelButton n
	commandEdit a
	commandSuggestions s
	doneButton c
	outputButton o
	previousEdit b
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; g
	getPreviousY ()I j
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (DDD)Z a
	onDone ()V k
	onEdited (Ljava/lang/String;)V a
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
	updatePreviousOutput (Z)V c
net/minecraft/client/gui/screens/inventory/AbstractContainerScreen emk
	HOVER_ITEM_BLIT_OFFSET B
	INVENTORY_LOCATION a
	QUICKDROP_DELAY A
	SLOT_ITEM_BLIT_OFFSET b
	SNAPBACK_SPEED z
	clickedSlot C
	doubleclick T
	draggingItem H
	hoveredSlot u
	imageHeight n
	imageWidth c
	inventoryLabelX q
	inventoryLabelY r
	isQuickCrafting y
	isSplittingStack G
	lastClickButton S
	lastClickSlot F
	lastClickTime R
	lastQuickMoved U
	leftPos v
	menu s
	playerInventoryTitle t
	quickCraftSlots x
	quickCraftingButton O
	quickCraftingRemainder Q
	quickCraftingType N
	quickdropSlot E
	quickdropTime M
	skipNextRelease P
	snapbackEnd D
	snapbackItem L
	snapbackStartX I
	snapbackStartY J
	snapbackTime K
	titleLabelX o
	titleLabelY p
	topPos w
	checkHotbarKeyPressed (II)Z a
	checkHotbarMouseClicked (I)V a
	clearDraggingState ()V g
	containerTick ()V j
	findSlot (DD)Lnet/minecraft/world/inventory/Slot; a
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; k
	hasClickedOutside (DDIII)Z a
	init ()V b
	isHovering (IIIIDD)Z a
	isHovering (Lnet/minecraft/world/inventory/Slot;DD)Z a
	isPauseScreen ()Z h
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z b
	onClose ()V ag_
	recalculateQuickCraftRemaining ()V B
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderFloatingItem (Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	renderSlot (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/inventory/Slot;)V a
	renderSlotHighlight (Lcom/mojang/blaze3d/vertex/PoseStack;III)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/AbstractFurnaceScreen eml
	RECIPE_BUTTON_LOCATION A
	recipeBookComponent z
	texture C
	widthTooNarrow B
	charTyped (CI)Z a
	containerTick ()V j
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; A
	hasClickedOutside (DDIII)Z a
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	recipesUpdated ()V z
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
net/minecraft/client/gui/screens/inventory/AnvilScreen emm
	ANVIL_LOCATION z
	TOO_EXPENSIVE_TEXT A
	name B
	player C
	containerTick ()V j
	keyPressed (III)Z a
	onNameChanged (Ljava/lang/String;)V a
	removed ()V e
	renderFg (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	resize (Lnet/minecraft/client/Minecraft;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
	subInit ()V z
net/minecraft/client/gui/screens/inventory/BeaconScreen emn
	BEACON_LOCATION z
	PRIMARY_EFFECT_LABEL A
	SECONDARY_EFFECT_LABEL B
	beaconButtons C
	primary D
	secondary E
	addBeaconButton (Lnet/minecraft/client/gui/components/AbstractWidget;)V a
	containerTick ()V j
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	updateButtons ()V z
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconButton emn$a
	isShowingTooltip ()Z a
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconCancelButton emn$b
	onPress ()V d
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconConfirmButton emn$c
	onPress ()V d
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconPowerButton emn$d
	effect d
	isPrimary c
	sprite e
	tier a
	tooltip f
	createEffectDescription (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/network/chat/MutableComponent; b
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; ai_
	onPress ()V d
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	setEffect (Lnet/minecraft/world/effect/MobEffect;)V a
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconScreenButton emn$e
	selected a
	isSelected ()Z b
	isShowingTooltip ()Z a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	setSelected (Z)V e
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconSpriteScreenButton emn$f
	iconX a
	iconY c
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconUpgradePowerButton emn$g
	createEffectDescription (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/network/chat/MutableComponent; b
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BlastFurnaceScreen emo
	TEXTURE A
net/minecraft/client/gui/screens/inventory/BookEditScreen emp
	BLACK_CURSOR q
	EDIT_TITLE_LABEL o
	FINALIZE_WARNING_LABEL p
	GRAY_CURSOR r
	IMAGE_HEIGHT n
	IMAGE_WIDTH c
	TEXT_HEIGHT b
	TEXT_WIDTH a
	backButton F
	book t
	cancelButton J
	currentPage x
	displayCache L
	doneButton G
	finalizeButton I
	forwardButton E
	frameTick w
	hand K
	isModified u
	isSigning v
	lastClickTime C
	lastIndex D
	owner s
	ownerText N
	pageEdit A
	pageMsg M
	pages y
	signButton H
	title z
	titleEdit B
	appendPageToBook ()V C
	bookKeyPressed (III)Z c
	changeLine (I)V a
	charTyped (CI)Z a
	clearDisplayCache ()V J
	clearDisplayCacheAfterPageChange ()V K
	convertLocalToScreen (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i; b
	convertScreenToLocal (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i; a
	createPartialLineSelection (Ljava/lang/String;Lnet/minecraft/client/StringSplitter;IIII)Lnet/minecraft/client/renderer/Rect2i; a
	createSelection (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/renderer/Rect2i; a
	eraseEmptyTrailingPages ()V B
	findLineFromPos ([II)I a
	getClipboard ()Ljava/lang/String; g
	getCurrentPageText ()Ljava/lang/String; H
	getDisplayCache ()Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache; I
	getNumPages ()I j
	init ()V b
	keyDown ()V E
	keyEnd ()V G
	keyHome ()V F
	keyPressed (III)Z a
	keyUp ()V D
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	pageBack ()V k
	pageForward ()V z
	rebuildDisplayCache ()Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache; L
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderCursor (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;Z)V a
	renderHighlight ([Lnet/minecraft/client/renderer/Rect2i;)V a
	saveChanges (Z)V c
	selectWord (I)V b
	setClipboard (Ljava/lang/String;)V a
	setCurrentPageText (Ljava/lang/String;)V b
	tick ()V d
	titleKeyPressed (III)Z d
	updateButtonVisibility ()V A
	updateLocalCopy (Z)V e
net/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache emp$a
	EMPTY a
	cursor c
	cursorAtEnd d
	fullText b
	lineStarts e
	lines f
	selection g
	changeLine (II)I a
	findLineEnd (I)I b
	findLineStart (I)I a
	getIndexAtPosition (Lnet/minecraft/client/gui/Font;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)I a
net/minecraft/client/gui/screens/inventory/BookEditScreen$LineInfo emp$b
	asComponent c
	contents b
	style a
	x d
	y e
net/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i emp$c
	x a
	y b
net/minecraft/client/gui/screens/inventory/BookViewScreen emq
	BOOK_LOCATION o
	EMPTY_ACCESS n
	IMAGE_HEIGHT s
	IMAGE_WIDTH r
	PAGE_INDICATOR_TEXT_Y_OFFSET a
	PAGE_TEXT_X_OFFSET b
	PAGE_TEXT_Y_OFFSET c
	TEXT_HEIGHT q
	TEXT_WIDTH p
	backButton z
	bookAccess t
	cachedPage w
	cachedPageComponents v
	currentPage u
	forwardButton y
	pageMsg x
	playTurnSound A
	closeScreen ()V B
	createMenuControls ()V g
	createPageControlButtons ()V j
	forcePage (I)Z b
	getClickedComponentStyleAt (DD)Lnet/minecraft/network/chat/Style; a
	getNumPages ()I k
	handleComponentClicked (Lnet/minecraft/network/chat/Style;)Z a
	init ()V b
	keyPressed (III)Z a
	loadPages (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; a
	loadPages (Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Consumer;)V a
	mouseClicked (DDI)Z a
	pageBack ()V z
	pageForward ()V A
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setBookAccess (Lnet/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess;)V a
	setPage (I)Z a
	updateButtonVisibility ()V C
net/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess emq$a
	fromItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess; a
	getPage (I)Lnet/minecraft/network/chat/FormattedText; b
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
net/minecraft/client/gui/screens/inventory/BookViewScreen$WritableBookAccess emq$b
	pages a
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
	readPages (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
net/minecraft/client/gui/screens/inventory/BookViewScreen$WrittenBookAccess emq$c
	pages a
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
	readPages (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
net/minecraft/client/gui/screens/inventory/BrewingStandScreen emr
	BREWING_STAND_LOCATION z
	BUBBLELENGTHS A
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/CartographyTableScreen ems
	BG_LOCATION z
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderMap (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/Integer;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;IIF)V a
	renderResultingMap (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/Integer;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;ZZZZ)V a
net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen emt
	autoCommandBlock p
	autoexec v
	autoexecButton s
	conditional u
	conditionalButton r
	mode t
	modeButton q
	enableControls (Z)V e
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; g
	getPreviousY ()I j
	init ()V b
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	updateGui ()V z
net/minecraft/client/gui/screens/inventory/ContainerScreen emu
	CONTAINER_BACKGROUND z
	containerRows A
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/CraftingScreen emv
	CRAFTING_TABLE_LOCATION z
	RECIPE_BUTTON_LOCATION A
	recipeBookComponent B
	widthTooNarrow C
	containerTick ()V j
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; A
	hasClickedOutside (DDIII)Z a
	init ()V b
	isHovering (IIIIDD)Z a
	mouseClicked (DDI)Z a
	recipesUpdated ()V z
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
net/minecraft/client/gui/screens/inventory/CreativeInventoryListener emw
	minecraft a
	dataChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen emx
	CONTAINER I
	CREATIVE_TABS_LOCATION z
	CUSTOM_SLOT_LOCK B
	GUI_CREATIVE_TAB_PREFIX A
	NUM_COLS D
	NUM_ROWS C
	SCROLLER_HEIGHT H
	SCROLLER_WIDTH G
	TAB_HEIGHT F
	TAB_WIDTH E
	TEXT_COLOR K
	TRASH_SLOT_TOOLTIP J
	destroyItemSlot Q
	hasClickedOutside T
	ignoreTextInput S
	listener R
	originalSlots P
	scrollOffs M
	scrolling N
	searchBox O
	selectedTab L
	visibleTags U
	canScroll ()Z C
	charTyped (CI)Z a
	checkTabClicked (Lnet/minecraft/world/item/CreativeModeTab;DD)Z a
	checkTabHovering (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/CreativeModeTab;II)Z a
	containerTick ()V j
	getSelectedTab ()I z
	handleHotbarLoadOrSave (Lnet/minecraft/client/Minecraft;IZZ)V a
	hasClickedOutside (DDIII)Z a
	init ()V b
	insideScrollbar (DD)Z a
	isCreativeSlot (Lnet/minecraft/world/inventory/Slot;)Z a
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z b
	mouseScrolled (DDD)Z a
	refreshSearchResults ()V A
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	renderTabButton (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/CreativeModeTab;)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/ItemStack;II)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	selectTab (Lnet/minecraft/world/item/CreativeModeTab;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	updateVisibleTags (Ljava/lang/String;)V a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$CustomCreativeSlot emx$a
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$ItemPickerMenu emx$b
	inventoryMenu l
	items k
	canDragTo (Lnet/minecraft/world/inventory/Slot;)Z b
	canScroll ()Z l
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	getCarried ()Lnet/minecraft/world/item/ItemStack; g
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	scrollTo (F)V a
	setCarried (Lnet/minecraft/world/item/ItemStack;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$SlotWrapper emx$c
	target a
	getItem ()Lnet/minecraft/world/item/ItemStack; e
	getMaxStackSize ()I a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I a_
	getNoItemIcon ()Lcom/mojang/datafixers/util/Pair; c
	hasItem ()Z f
	isActive ()Z b
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
	set (Lnet/minecraft/world/item/ItemStack;)V d
	setChanged ()V d
net/minecraft/client/gui/screens/inventory/DispenserScreen emy
	CONTAINER_LOCATION z
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/EffectRenderingInventoryScreen emz
	canSeeEffects ()Z B
	getEffectName (Lnet/minecraft/world/effect/MobEffectInstance;)Lnet/minecraft/network/chat/Component; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackgrounds (Lcom/mojang/blaze3d/vertex/PoseStack;IILjava/lang/Iterable;Z)V a
	renderEffects (Lcom/mojang/blaze3d/vertex/PoseStack;II)V c
	renderIcons (Lcom/mojang/blaze3d/vertex/PoseStack;IILjava/lang/Iterable;Z)V b
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;IILjava/lang/Iterable;)V a
net/minecraft/client/gui/screens/inventory/EnchantmentNames ena
	ALT_FONT a
	INSTANCE c
	ROOT_STYLE b
	random d
	words e
	getInstance ()Lnet/minecraft/client/gui/screens/inventory/EnchantmentNames; a
	getRandomName (Lnet/minecraft/client/gui/Font;I)Lnet/minecraft/network/chat/FormattedText; a
	initSeed (J)V a
net/minecraft/client/gui/screens/inventory/EnchantmentScreen enb
	ENCHANTING_BOOK_LOCATION H
	ENCHANTING_TABLE_LOCATION G
	bookModel J
	flip A
	flipA D
	flipT C
	last K
	oFlip B
	oOpen F
	open E
	random I
	time z
	containerTick ()V j
	init ()V b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	tickBook ()V z
net/minecraft/client/gui/screens/inventory/FurnaceScreen enc
	TEXTURE A
net/minecraft/client/gui/screens/inventory/GrindstoneScreen end
	GRINDSTONE_LOCATION z
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/HopperScreen ene
	HOPPER_LOCATION z
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/HorseInventoryScreen enf
	HORSE_INVENTORY_LOCATION z
	horse A
	xMouse B
	yMouse C
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/InventoryScreen eng
	RECIPE_BUTTON_LOCATION z
	buttonClicked F
	recipeBookComponent C
	recipeBookComponentInitialized D
	widthTooNarrow E
	xMouse A
	yMouse B
	containerTick ()V j
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; A
	hasClickedOutside (DDIII)Z a
	init ()V b
	isHovering (IIIIDD)Z a
	mouseClicked (DDI)Z a
	mouseReleased (DDI)Z b
	recipesUpdated ()V z
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderEntityInInventory (IIIFFLnet/minecraft/world/entity/LivingEntity;)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
net/minecraft/client/gui/screens/inventory/ItemCombinerScreen enh
	menuResource z
	dataChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	init ()V b
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderFg (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
	subInit ()V z
net/minecraft/client/gui/screens/inventory/JigsawBlockEditScreen eni
	FINAL_STATE_LABEL p
	JOINT_LABEL b
	MAX_LEVELS a
	NAME_LABEL n
	POOL_LABEL c
	TARGET_LABEL o
	doneButton y
	finalStateEdit u
	generateButton z
	jigsawEntity q
	joint A
	jointButton x
	keepJigsaws w
	levels v
	nameEdit r
	poolEdit t
	targetEdit s
	init ()V b
	keyPressed (III)Z a
	onCancel ()V j
	onClose ()V ag_
	onDone ()V g
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	sendGenerate ()V z
	sendToServer ()V k
	tick ()V d
	updateValidity ()V A
net/minecraft/client/gui/screens/inventory/LecternScreen enj
	listener u
	menu t
	bookChanged ()V D
	closeScreen ()V B
	createMenuControls ()V g
	forcePage (I)Z b
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; k
	getMenu ()Lnet/minecraft/world/inventory/LecternMenu; C
	init ()V b
	isPauseScreen ()Z h
	onClose ()V ag_
	pageBack ()V z
	pageChanged ()V E
	pageForward ()V A
	removed ()V e
	sendButtonClick (I)V c
net/minecraft/client/gui/screens/inventory/LoomScreen enk
	BG_LOCATION z
	PATTERNS_X G
	PATTERNS_Y H
	PATTERN_COLUMNS A
	PATTERN_IMAGE_SIZE E
	PATTERN_ROWS B
	SCROLLER_FULL_HEIGHT F
	SCROLLER_HEIGHT D
	SCROLLER_WIDTH C
	bannerStack K
	displayPatterns N
	dyeStack L
	flag I
	hasMaxPatterns O
	patternStack M
	resultBannerPatterns J
	scrollOffs P
	scrolling Q
	startRow R
	containerChanged ()V A
	hasClickedOutside (DDIII)Z a
	init ()V b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDD)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderPattern (Lnet/minecraft/core/Holder;II)V a
	totalRowCount ()I z
net/minecraft/client/gui/screens/inventory/MenuAccess enl
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; k
net/minecraft/client/gui/screens/inventory/MerchantScreen enm
	BUY_ITEM_X H
	DEPRECATED_TOOLTIP U
	LABEL_Y I
	LEVEL_SEPARATOR T
	MERCHANT_MENU_PART_X C
	NUMBER_OF_OFFER_BUTTONS J
	PROGRESS_BAR_X D
	PROGRESS_BAR_Y E
	SCROLLER_HEIGHT N
	SCROLLER_WIDTH O
	SCROLL_BAR_HEIGHT P
	SCROLL_BAR_START_X R
	SCROLL_BAR_TOP_POS_Y Q
	SELL_ITEM_1_X F
	SELL_ITEM_2_X G
	TEXTURE_HEIGHT B
	TEXTURE_WIDTH A
	TRADES_LABEL S
	TRADE_BUTTON_HEIGHT L
	TRADE_BUTTON_WIDTH M
	TRADE_BUTTON_X K
	VILLAGER_LOCATION z
	isDragging Y
	scrollOff X
	shopItem V
	tradeOfferButtons W
	canScroll (I)Z a
	init ()V b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDD)Z a
	postButtonClick ()V z
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderAndDecorateCostA (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;II)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderButtonArrows (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/trading/MerchantOffer;II)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	renderProgressBar (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/trading/MerchantOffer;)V a
	renderScroller (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/trading/MerchantOffers;)V a
net/minecraft/client/gui/screens/inventory/MerchantScreen$TradeOfferButton enm$a
	index a
	getIndex ()I a
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/inventory/MinecartCommandBlockEditScreen enn
	commandBlock p
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; g
	getPreviousY ()I j
	init ()V b
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
net/minecraft/client/gui/screens/inventory/PageButton eno
	isForward a
	playTurnSound b
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
net/minecraft/client/gui/screens/inventory/ShulkerBoxScreen enp
	CONTAINER_TEXTURE z
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/SignEditScreen enq
	frame b
	line c
	messages q
	sign a
	signField n
	signModel p
	woodType o
	charTyped (CI)Z a
	init ()V b
	keyPressed (III)Z a
	onClose ()V ag_
	onDone ()V g
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/SmithingScreen enr
	SMITHING_LOCATION z
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
net/minecraft/client/gui/screens/inventory/SmokerScreen ens
	TEXTURE A
net/minecraft/client/gui/screens/inventory/StonecutterScreen ent
	BG_LOCATION z
	RECIPES_COLUMNS C
	RECIPES_IMAGE_SIZE_HEIGHT F
	RECIPES_IMAGE_SIZE_WIDTH E
	RECIPES_ROWS D
	RECIPES_X H
	RECIPES_Y I
	SCROLLER_FULL_HEIGHT G
	SCROLLER_HEIGHT B
	SCROLLER_WIDTH A
	displayRecipes M
	scrollOffs J
	scrolling K
	startIndex L
	containerChanged ()V B
	getOffscreenRows ()I z
	isScrollBarActive ()Z A
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDD)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderButtons (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V b
	renderRecipes (III)V c
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen enu
	ALL_MODES t
	CUSTOM_DATA_LABEL o
	DEFAULT_MODES u
	DETECT_SIZE_LABEL q
	INCLUDE_ENTITIES_LABEL p
	INTEGRITY_LABEL n
	NAME_LABEL a
	POSITION_LABEL b
	SHOW_AIR_LABEL r
	SHOW_BOUNDING_BOX_LABEL s
	SIZE_LABEL c
	dataEdit L
	decimalFormat X
	detectButton S
	includeEntitiesButton T
	initialEntityIgnoring z
	initialMirror w
	initialMode y
	initialRotation x
	initialShowAir A
	initialShowBoundingBox B
	integrityEdit J
	loadButton N
	mirrorButton U
	nameEdit C
	posXEdit D
	posYEdit E
	posZEdit F
	rot0Button O
	rot180Button Q
	rot270Button R
	rot90Button P
	saveButton M
	seedEdit K
	sizeXEdit G
	sizeYEdit H
	sizeZEdit I
	structure v
	toggleAirButton V
	toggleBoundingBox W
	init ()V b
	isPauseScreen ()Z h
	keyPressed (III)Z a
	onCancel ()V j
	onClose ()V ag_
	onDone ()V g
	parseCoordinate (Ljava/lang/String;)I c
	parseIntegrity (Ljava/lang/String;)F b
	parseSeed (Ljava/lang/String;)J a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	sendToServer (Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType;)Z a
	tick ()V d
	updateDirectionButtons ()V k
	updateMode (Lnet/minecraft/world/level/block/state/properties/StructureMode;)V a
net/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip enw
	BORDER_WIDTH c
	MARGIN_Y b
	SLOT_SIZE_X e
	SLOT_SIZE_Y f
	TEXTURE_LOCATION a
	TEX_SIZE d
	items g
	weight h
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIILnet/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip$Texture;)V a
	drawBorder (IIIILcom/mojang/blaze3d/vertex/PoseStack;I)V a
	getHeight ()I a
	getWidth (Lnet/minecraft/client/gui/Font;)I a
	gridSizeX ()I b
	gridSizeY ()I c
	renderImage (Lnet/minecraft/client/gui/Font;IILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/entity/ItemRenderer;I)V a
	renderSlot (IIIZLnet/minecraft/client/gui/Font;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/entity/ItemRenderer;I)V a
net/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip$Texture enw$a
	$VALUES l
	BLOCKED_SLOT b
	BORDER_CORNER_BOTTOM g
	BORDER_CORNER_TOP f
	BORDER_HORIZONTAL_BOTTOM e
	BORDER_HORIZONTAL_TOP d
	BORDER_VERTICAL c
	SLOT a
	h k
	w j
	x h
	y i
	$values ()[Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip$Texture; a
net/minecraft/client/gui/screens/inventory/tooltip/ClientTextTooltip enx
	text a
	getHeight ()I a
	getWidth (Lnet/minecraft/client/gui/Font;)I a
	renderText (Lnet/minecraft/client/gui/Font;IILcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;)V a
net/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipComponent eny
	create (Lnet/minecraft/util/FormattedCharSequence;)Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipComponent; a
	create (Lnet/minecraft/world/inventory/tooltip/TooltipComponent;)Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipComponent; a
	getHeight ()I a
	getWidth (Lnet/minecraft/client/gui/Font;)I a
	renderImage (Lnet/minecraft/client/gui/Font;IILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/entity/ItemRenderer;I)V a
	renderText (Lnet/minecraft/client/gui/Font;IILcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;)V a
net/minecraft/client/gui/screens/multiplayer/ChatPreviewWarningScreen eoa
	CHECK c
	TITLE b
	lastScreen o
	serverData n
	content ()Lnet/minecraft/network/chat/Component; j
	getLineHeight ()I g
	initButtons (I)V a
	onClose ()V ag_
	shouldCloseOnEsc ()Z af_
	updateOptions ()V k
net/minecraft/client/gui/screens/multiplayer/JoinMultiplayerScreen eob
	LOGGER b
	deleteButton r
	editButton p
	editingServer t
	initedOnce w
	lanServerDetector v
	lanServerList u
	lastScreen n
	pinger c
	selectButton q
	serverSelectionList a
	servers o
	toolTip s
	addServerCallback (Z)V f
	deleteCallback (Z)V c
	directJoinCallback (Z)V g
	editServerCallback (Z)V e
	getPinger ()Lnet/minecraft/client/multiplayer/ServerStatusPinger; k
	getServers ()Lnet/minecraft/client/multiplayer/ServerList; z
	init ()V b
	join (Lnet/minecraft/client/multiplayer/ServerData;)V a
	joinSelectedServer ()V g
	keyPressed (III)Z a
	onSelectedChange ()V j
	refreshServerList ()V A
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setSelected (Lnet/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry;)V a
	setToolTip (Ljava/util/List;)V b
	tick ()V d
net/minecraft/client/gui/screens/multiplayer/Realms32bitWarningScreen eoc
	CHECK n
	CONTENT c
	NARRATION o
	TITLE b
	previous p
	initButtons (I)V a
net/minecraft/client/gui/screens/multiplayer/SafetyScreen eod
	CHECK n
	CONTENT c
	NARRATION o
	TITLE b
	previous p
	initButtons (I)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList eoe
	CANT_CONNECT_TEXT t
	CANT_RESOLVE_TEXT s
	ICON_MISSING p
	ICON_OVERLAY_LOCATION q
	INCOMPATIBLE_TOOLTIP u
	LOGGER a
	NO_CONNECTION_TOOLTIP v
	PINGING_TOOLTIP w
	SCANNING_LABEL r
	THREAD_POOL o
	lanHeader z
	networkServers A
	onlineServers y
	screen x
	getRowWidth ()I c
	getScrollbarPosition ()I d
	isFocused ()Z a
	keyPressed (III)Z a
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;)V a
	refreshEntries ()V e
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry;)V a
	updateNetworkServers (Ljava/util/List;)V a
	updateOnlineServers (Lnet/minecraft/client/multiplayer/ServerList;)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry eoe$a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$LANHeader eoe$b
	minecraft a
	getNarration ()Lnet/minecraft/network/chat/Component; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$NetworkServerEntry eoe$c
	HIDDEN_ADDRESS_TEXT e
	ICON_WIDTH c
	LAN_SERVER_HEADER d
	lastClickTime h
	minecraft a
	screen f
	serverData b
	getNarration ()Lnet/minecraft/network/chat/Component; b
	getServerData ()Lnet/minecraft/client/server/LanServer; a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$OnlineServerEntry eoe$d
	ICON_HEIGHT c
	ICON_OVERLAY_X_MOVE_DOWN f
	ICON_OVERLAY_X_MOVE_LEFT e
	ICON_OVERLAY_X_MOVE_RIGHT d
	ICON_OVERLAY_X_MOVE_UP h
	ICON_OVERLAY_Y_SELECTED j
	ICON_OVERLAY_Y_UNSELECTED i
	ICON_WIDTH b
	icon p
	iconLocation n
	lastClickTime q
	lastIconB64 o
	minecraft l
	screen k
	serverData m
	canJoin ()Z d
	drawIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/resources/ResourceLocation;)V a
	getNarration ()Lnet/minecraft/network/chat/Component; b
	getServerData ()Lnet/minecraft/client/multiplayer/ServerData; c
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	swap (II)V a
	updateServerList ()V a
	uploadServerIcon (Ljava/lang/String;)Z a
net/minecraft/client/gui/screens/multiplayer/WarningScreen eof
	check c
	content b
	message o
	narration n
	stopShowing a
	getLineHeight ()I g
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	initButtons (I)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderTitle (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
net/minecraft/client/gui/screens/packs/PackSelectionModel eoi
	iconGetter d
	onListChanged e
	output f
	repository a
	selected b
	unselected c
	commit ()V c
	findNewPacks ()V d
	getSelected ()Ljava/util/stream/Stream; b
	getUnselected ()Ljava/util/stream/Stream; a
net/minecraft/client/gui/screens/packs/PackSelectionModel$Entry eoi$a
	canMoveDown ()Z q
	canMoveUp ()Z p
	canSelect ()Z n
	canUnselect ()Z o
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; b
	getDescription ()Lnet/minecraft/network/chat/Component; d
	getExtendedDescription ()Lnet/minecraft/network/chat/Component; f
	getIconTexture ()Lnet/minecraft/resources/ResourceLocation; a
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; e
	getTitle ()Lnet/minecraft/network/chat/Component; c
	isFixedPosition ()Z g
	isRequired ()Z h
	isSelected ()Z m
	moveDown ()V l
	moveUp ()V k
	select ()V i
	unselect ()V j
net/minecraft/client/gui/screens/packs/PackSelectionModel$EntryBase eoi$b
	pack b
	canMoveDown ()Z q
	canMoveUp ()Z p
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; b
	getDescription ()Lnet/minecraft/network/chat/Component; d
	getIconTexture ()Lnet/minecraft/resources/ResourceLocation; a
	getOtherList ()Ljava/util/List; s
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; e
	getSelfList ()Ljava/util/List; r
	getTitle ()Lnet/minecraft/network/chat/Component; c
	isFixedPosition ()Z g
	isRequired ()Z h
	move (I)V a
	moveDown ()V l
	moveUp ()V k
	toggleSelection ()V t
net/minecraft/client/gui/screens/packs/PackSelectionModel$SelectedPackEntry eoi$c
	getOtherList ()Ljava/util/List; s
	getSelfList ()Ljava/util/List; r
	isSelected ()Z m
	select ()V i
	unselect ()V j
net/minecraft/client/gui/screens/packs/PackSelectionModel$UnselectedPackEntry eoi$d
	getOtherList ()Ljava/util/List; s
	getSelfList ()Ljava/util/List; r
	isSelected ()Z m
	select ()V i
	unselect ()V j
net/minecraft/client/gui/screens/packs/PackSelectionScreen eoj
	DEFAULT_ICON p
	DIRECTORY_BUTTON_TOOLTIP n
	DRAG_AND_DROP c
	LIST_WIDTH b
	LOGGER a
	RELOAD_COOLDOWN o
	availablePackList u
	doneButton x
	lastScreen r
	model q
	packDir w
	packIcons y
	selectedPackList v
	ticksToReload t
	watcher s
	closeWatcher ()V g
	copyPacks (Lnet/minecraft/client/Minecraft;Ljava/util/List;Ljava/nio/file/Path;)V a
	getPackIcon (Lnet/minecraft/server/packs/repository/Pack;)Lnet/minecraft/resources/ResourceLocation; a
	init ()V b
	loadPackIcon (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/server/packs/repository/Pack;)Lnet/minecraft/resources/ResourceLocation; a
	onClose ()V ag_
	onFilesDrop (Ljava/util/List;)V a
	populateLists ()V j
	reload ()V k
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
	updateList (Lnet/minecraft/client/gui/screens/packs/TransferableSelectionList;Ljava/util/stream/Stream;)V a
net/minecraft/client/gui/screens/packs/PackSelectionScreen$Watcher eoj$a
	packPath b
	watcher a
	create (Ljava/io/File;)Lnet/minecraft/client/gui/screens/packs/PackSelectionScreen$Watcher; a
	pollForChanges ()Z a
	watchDir (Ljava/nio/file/Path;)V a
net/minecraft/client/gui/screens/packs/TransferableSelectionList eok
	ICON_OVERLAY_LOCATION a
	INCOMPATIBLE_CONFIRM_TITLE p
	INCOMPATIBLE_TITLE o
	title q
	getRowWidth ()I c
	getScrollbarPosition ()I d
	renderHeader (Lcom/mojang/blaze3d/vertex/PoseStack;IILcom/mojang/blaze3d/vertex/Tesselator;)V a
net/minecraft/client/gui/screens/packs/TransferableSelectionList$PackEntry eok$a
	ICON_OVERLAY_X_MOVE_DOWN e
	ICON_OVERLAY_X_MOVE_LEFT d
	ICON_OVERLAY_X_MOVE_RIGHT c
	ICON_OVERLAY_X_MOVE_UP f
	ICON_OVERLAY_Y_SELECTED i
	ICON_OVERLAY_Y_UNSELECTED h
	MAX_DESCRIPTION_WIDTH_PIXELS j
	MAX_NAME_WIDTH_PIXELS k
	TOO_LONG_NAME_SUFFIX l
	descriptionDisplayCache p
	incompatibleDescriptionDisplayCache r
	incompatibleNameDisplayCache q
	minecraft a
	nameDisplayCache o
	pack n
	parent m
	screen b
	cacheDescription (Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/MultiLineLabel; b
	cacheName (Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/util/FormattedCharSequence; a
	getNarration ()Lnet/minecraft/network/chat/Component; b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	showHoverOverlay ()Z a
net/minecraft/client/gui/screens/recipebook/AbstractFurnaceRecipeBookComponent eom
	fuels k
	getFuelItems ()Ljava/util/Set; b
	initFilterButtonTextures ()V a
	setupGhostRecipe (Lnet/minecraft/world/item/crafting/Recipe;Ljava/util/List;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;)V a
net/minecraft/client/gui/screens/recipebook/BlastingRecipeBookComponent eon
	FILTER_NAME k
	getFuelItems ()Ljava/util/Set; b
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; c
net/minecraft/client/gui/screens/recipebook/GhostRecipe eoo
	ingredients b
	recipe a
	time c
	addIngredient (Lnet/minecraft/world/item/crafting/Ingredient;II)V a
	clear ()V a
	get (I)Lnet/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient; a
	getRecipe ()Lnet/minecraft/world/item/crafting/Recipe; c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Minecraft;IIZF)V a
	setRecipe (Lnet/minecraft/world/item/crafting/Recipe;)V a
	size ()I b
net/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient eoo$a
	ingredient b
	x c
	y d
	getItem ()Lnet/minecraft/world/item/ItemStack; c
	getX ()I a
	getY ()I b
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent eop
	ITEM_RENDER_SCALE d
	MAX_ROW b
	MAX_ROW_LARGE c
	RECIPE_BOOK_LOCATION a
	collection m
	isFurnaceMenu p
	isVisible f
	lastRecipeClicked n
	minecraft l
	recipeButtons e
	time o
	x j
	y k
	changeFocus (Z)Z b
	getLastRecipeClicked ()Lnet/minecraft/world/item/crafting/Recipe; b
	getRecipeCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; a
	init (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection;IIIIF)V a
	isMouseOver (DD)Z a_
	isVisible ()Z c
	mouseClicked (DDI)Z a
	nineInchSprite (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIII)V c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setVisible (Z)V a
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton eop$a
	ingredientPos a
	isCraftable d
	recipe c
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	calculateIngredientsPositions (Lnet/minecraft/world/item/crafting/Recipe;)V a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton$Pos eop$a$a
	ingredients a
	x b
	y c
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlaySmeltingRecipeButton eop$b
	calculateIngredientsPositions (Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/client/gui/screens/recipebook/RecipeBookComponent eoq
	ALL_RECIPES_TOOLTIP n
	IMAGE_HEIGHT c
	IMAGE_WIDTH b
	OFFSET_X_POSITION l
	ONLY_CRAFTABLES_TOOLTIP m
	RECIPE_BOOK_LOCATION a
	SEARCH_HINT k
	book v
	filterButton e
	ghostRecipe d
	height q
	ignoreTextInput z
	lastSearch u
	menu f
	minecraft j
	recipeBookPage w
	searchBox t
	selectedTab s
	stackedContents x
	tabButtons r
	timesInventoryChanged y
	visible A
	width p
	widthTooNarrow B
	xOffset o
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	changeFocus (Z)Z b
	charTyped (CI)Z a
	checkSearchStringUpdate ()V r
	getFilterButtonTooltip ()Lnet/minecraft/network/chat/Component; p
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; c
	hasClickedOutside (DDIIIII)Z a
	init (IILnet/minecraft/client/Minecraft;ZLnet/minecraft/world/inventory/RecipeBookMenu;)V a
	initFilterButtonTextures ()V a
	initVisuals ()V d
	isMouseOver (DD)Z a_
	isOffsetNextToMainGUI ()Z s
	isVisible ()Z g
	isVisibleAccordingToBookData ()Z b
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; t
	pirateSpeechForThePeople (Ljava/lang/String;)V a
	recipesShown (Ljava/util/List;)V a
	recipesUpdated ()V i
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderGhostRecipe (Lcom/mojang/blaze3d/vertex/PoseStack;IIZF)V a
	renderGhostRecipeTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	sendUpdateSettings ()V j
	setVisible (Z)V a
	setupGhostRecipe (Lnet/minecraft/world/item/crafting/Recipe;Ljava/util/List;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;)V a
	tick ()V h
	toggleFiltering ()Z q
	toggleVisibility ()V f
	updateCollections (Z)V c
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
	updateScreenPosition (II)I a
	updateStackedContents ()V n
	updateTabs ()V k
net/minecraft/client/gui/screens/recipebook/RecipeBookPage eor
	ITEMS_PER_PAGE a
	backButton i
	buttons b
	currentPage k
	forwardButton h
	hoveredButton c
	lastClickedRecipe m
	lastClickedRecipeCollection n
	minecraft e
	overlay d
	recipeBook l
	recipeCollections g
	showListeners f
	totalPages j
	addListener (Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent;)V a
	getLastClickedRecipe ()Lnet/minecraft/world/item/crafting/Recipe; a
	getLastClickedRecipeCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; b
	getMinecraft ()Lnet/minecraft/client/Minecraft; d
	getRecipeBook ()Lnet/minecraft/stats/RecipeBook; e
	init (Lnet/minecraft/client/Minecraft;II)V a
	listButtons (Ljava/util/function/Consumer;)V a
	mouseClicked (DDIIIII)Z a
	recipesShown (Ljava/util/List;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIF)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	setInvisible ()V c
	updateArrowButtons ()V g
	updateButtonsForPage ()V f
	updateCollections (Ljava/util/List;Z)V a
net/minecraft/client/gui/screens/recipebook/RecipeBookTabButton eos
	ANIMATION_TIME t
	animationTime u
	category s
	getCategory ()Lnet/minecraft/client/RecipeBookCategories; b
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderIcon (Lnet/minecraft/client/renderer/entity/ItemRenderer;)V a
	startAnimation (Lnet/minecraft/client/Minecraft;)V a
	updateVisibility (Lnet/minecraft/client/ClientRecipeBook;)Z a
net/minecraft/client/gui/screens/recipebook/RecipeButton eot
	ANIMATION_TIME c
	BACKGROUND_SIZE d
	MORE_RECIPES_TOOLTIP e
	RECIPE_BOOK_LOCATION b
	TICKS_TO_SWAP a
	animationTime v
	book s
	collection t
	currentIndex w
	menu f
	time u
	getCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; a
	getOrderedRecipes ()Ljava/util/List; e
	getRecipe ()Lnet/minecraft/world/item/crafting/Recipe; c
	getTooltipText (Lnet/minecraft/client/gui/screens/Screen;)Ljava/util/List; a
	getWidth ()I j
	init (Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection;Lnet/minecraft/client/gui/screens/recipebook/RecipeBookPage;)V a
	isOnlyOption ()Z b
	isValidClickButton (I)Z h_
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setPosition (II)V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/recipebook/RecipeCollection eou
	craftable c
	fitsDimensions d
	known e
	recipes a
	singleResultItem b
	allRecipesHaveSameResult (Ljava/util/List;)Z a
	canCraft (Lnet/minecraft/world/entity/player/StackedContents;IILnet/minecraft/stats/RecipeBook;)V a
	getDisplayRecipes (Z)Ljava/util/List; b
	getRecipes ()Ljava/util/List; d
	getRecipes (Z)Ljava/util/List; a
	hasCraftable ()Z b
	hasFitting ()Z c
	hasKnownRecipes ()Z a
	hasSingleResultItem ()Z e
	isCraftable (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	updateKnownRecipes (Lnet/minecraft/stats/RecipeBook;)V a
net/minecraft/client/gui/screens/recipebook/RecipeShownListener eov
	recipesShown (Ljava/util/List;)V a
net/minecraft/client/gui/screens/recipebook/RecipeUpdateListener eow
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; A
	recipesUpdated ()V z
net/minecraft/client/gui/screens/recipebook/SmeltingRecipeBookComponent eox
	FILTER_NAME k
	getFuelItems ()Ljava/util/Set; b
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; c
net/minecraft/client/gui/screens/recipebook/SmokingRecipeBookComponent eoy
	FILTER_NAME k
	getFuelItems ()Ljava/util/Set; b
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; c
net/minecraft/client/gui/screens/reporting/ChatLogSegmenter epa
	messages b
	segmentType c
	typeFunction a
	accept (Lnet/minecraft/client/multiplayer/chat/ChatLog$Entry;)Z a
	build ()Lnet/minecraft/client/gui/screens/reporting/ChatLogSegmenter$Results; a
net/minecraft/client/gui/screens/reporting/ChatLogSegmenter$MessageType epa$a
	$VALUES c
	CONTEXT b
	REPORTABLE a
	$values ()[Lnet/minecraft/client/gui/screens/reporting/ChatLogSegmenter$MessageType; b
	foldable ()Z a
net/minecraft/client/gui/screens/reporting/ChatLogSegmenter$Results epa$b
	messages a
	type b
	messages ()Ljava/util/List; a
	type ()Lnet/minecraft/client/gui/screens/reporting/ChatLogSegmenter$MessageType; b
net/minecraft/client/gui/screens/reporting/ChatReportScreen epb
	BUTTON_HEIGHT b
	BUTTON_MARGIN c
	BUTTON_MARGIN_HALF n
	BUTTON_WIDTH a
	DESCRIBE_PLACEHOLDER u
	LABEL_HEIGHT o
	LOGGER B
	MORE_COMMENTS_LABEL t
	OBSERVED_WHAT_LABEL r
	REPORT_ERROR_TITLE z
	REPORT_SENDING_TITLE x
	REPORT_SEND_GENERIC_ERROR A
	REPORT_SENT_MESSAGE v
	REPORT_SENT_TITLE y
	SCREEN_HEIGHT q
	SCREEN_WIDTH p
	SELECT_CHAT_MESSAGE w
	SELECT_REASON s
	cannotBuildReason I
	commentBox F
	lastScreen C
	reasonDescriptionLabel E
	report H
	reportingContext D
	sendButton G
	commentBoxBottom ()I G
	commentBoxTop ()I F
	completeButtonTop ()I H
	contentBottom ()I C
	contentLeft ()I z
	contentRight ()I A
	contentTop ()I B
	displayReportSendError (Lnet/minecraft/network/chat/Component;)V a
	init ()V b
	mouseReleased (DDI)Z b
	onClose ()V ag_
	onReportChanged ()V g
	onReportSendError (Ljava/lang/Throwable;)V a
	onReportSendSuccess ()V k
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	selectChatTop ()I D
	selectInfoTop ()I E
	sendReport ()V j
	tick ()V d
net/minecraft/client/gui/screens/reporting/ChatReportScreen$DiscardReportWarningScreen epb$a
	DISCARD p
	MESSAGE n
	RETURN o
	TITLE c
	initButtons (I)V a
	onClose ()V ag_
	renderTitle (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	shouldCloseOnEsc ()Z af_
net/minecraft/client/gui/screens/reporting/ChatReportScreen$SubmitButtonTooltip epb$b
net/minecraft/client/gui/screens/reporting/ChatSelectionLogFiller epc
	CONTEXT_FOLDED_SIZE b
	canReport d
	log c
	nextMessageId e
	tClass a
	addFoldedMessagesTo (Ljava/util/List;Lnet/minecraft/client/gui/screens/reporting/ChatSelectionLogFiller$Output;)I a
	fillNextPage (ILnet/minecraft/client/gui/screens/reporting/ChatSelectionLogFiller$Output;)V a
	getMessageType (Lnet/minecraft/client/multiplayer/chat/LoggedChatMessage;)Lnet/minecraft/client/gui/screens/reporting/ChatLogSegmenter$MessageType; a
	nextSegment ()Lnet/minecraft/client/gui/screens/reporting/ChatLogSegmenter$Results; a
net/minecraft/client/gui/screens/reporting/ChatSelectionLogFiller$Output epc$a
	acceptDivider (Lnet/minecraft/network/chat/Component;)V a
	acceptMessage (ILnet/minecraft/client/multiplayer/chat/LoggedChatMessage;)V a
	acceptMessages (Ljava/lang/Iterable;)V a
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen epd
	CONTEXT_INFO b
	TITLE a
	chatLogFiller t
	chatSelectionList q
	confirmSelectedButton o
	contextInfoLabel p
	lastScreen c
	onSelected s
	report r
	reportingContext n
	tooltip u
	canReport (Lnet/minecraft/client/multiplayer/chat/LoggedChatMessage;)Z a
	extendLog ()V g
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	onClose ()V ag_
	onReachedScrollTop ()V j
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setTooltip (Ljava/util/List;)V b
	updateConfirmSelectedButton ()V k
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList epd$a
	previousHeading o
	acceptDivider (Lnet/minecraft/network/chat/Component;)V a
	acceptMessage (ILnet/minecraft/client/multiplayer/chat/LoggedChatMessage$Player;)V a
	acceptMessage (ILnet/minecraft/client/multiplayer/chat/LoggedChatMessage;)V a
	getFooterTop ()I f
	getMaxVisibleEntries ()I e
	getRowWidth ()I c
	getScrollbarPosition ()I d
	isFocused ()Z a
	keyPressed (III)Z a
	moveSelectableSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;)Z b
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;)V a
	renderItem (Lcom/mojang/blaze3d/vertex/PoseStack;IIFIIIII)V a
	setScrollAmount (D)V a
	shouldHighlightEntry (Lnet/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Entry;)Z a
	updateHeading (Lnet/minecraft/client/multiplayer/chat/LoggedChatMessage$Player;Z)V a
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$DividerEntry epd$a$a
	COLOR c
	text d
	getNarration ()Lnet/minecraft/network/chat/Component; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Entry epd$a$b
	canReport ()Z d
	canSelect ()Z c
	getNarration ()Lnet/minecraft/network/chat/Component; b
	isSelected ()Z a
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Heading epd$a$c
	entry b
	sender a
	canCombine (Lnet/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Heading;)Z a
	entry ()Lnet/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Entry; b
	sender ()Ljava/util/UUID; a
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$MessageEntry epd$a$d
	CHECKMARK_HEIGHT e
	CHECKMARK_TEXTURE c
	CHECKMARK_WIDTH d
	INDENT_AMOUNT f
	TAG_MARGIN_LEFT h
	canReport o
	chatId i
	hoverText l
	narration k
	playerMessage p
	tagHoverText n
	tagIcon m
	text j
	canReport ()Z d
	canSelect ()Z c
	getMaximumTextWidth ()I e
	getNarration ()Lnet/minecraft/network/chat/Component; b
	getTextIndent ()I f
	isSelected ()Z a
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderSelectedCheckmark (Lcom/mojang/blaze3d/vertex/PoseStack;III)V a
	renderTag (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V a
	toggleReport ()Z g
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$MessageHeadingEntry epd$a$e
	FACE_SIZE c
	canReport f
	heading d
	skin e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderFace (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/resources/ResourceLocation;)V a
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$PaddingEntry epd$a$f
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen epe
	ADDITIONAL_INFO_LINK a
	BUTTON_HEIGHT q
	BUTTON_WIDTH p
	CONTENT_WIDTH r
	FOOTER_HEIGHT o
	PADDING s
	READ_INFO_LABEL n
	REASON_DESCRIPTION c
	REASON_TITLE b
	currentlySelectedReason v
	lastScreen t
	onSelectedReason w
	reasonSelectionList u
	buttonTop ()I g
	contentLeft ()I j
	contentRight ()I k
	descriptionBottom ()I A
	descriptionTop ()I z
	init ()V b
	onClose ()V ag_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen$ReasonSelectionList epe$a
	findEntry (Lnet/minecraft/client/multiplayer/chat/report/ReportReason;)Lnet/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen$ReasonSelectionList$Entry; a
	getRowWidth ()I c
	getScrollbarPosition ()I d
	isFocused ()Z a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen$ReasonSelectionList$Entry;)V a
net/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen$ReasonSelectionList$Entry epe$a$a
	reason b
	getNarration ()Lnet/minecraft/network/chat/Component; b
	getReason ()Lnet/minecraft/client/multiplayer/chat/report/ReportReason; a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/social/PlayerEntry epg
	BG_FILL b
	BG_FILL_REMOVED c
	BLOCKED A
	BLOCKED_OFFLINE D
	CHAT_TOGGLE_ICON_SIZE L
	CHAT_TOGGLE_ICON_X M
	CHAT_TOGGLE_ICON_Y N
	HIDDEN z
	HIDDEN_OFFLINE C
	HIDE_TEXT_TOOLTIP G
	NOT_REPORTABLE_TOOLTIP F
	OFFLINE B
	PADDING K
	PLAYERNAME_COLOR d
	PLAYER_STATUS_COLOR e
	REPORT_BUTTON_LOCATION f
	REPORT_DISABLED_TOOLTIP E
	REPORT_PLAYER_TOOLTIP I
	SHOW_TEXT_TOOLTIP H
	SKIN_SHADE a
	SKIN_SIZE J
	TOOLTIP_DELAY h
	TOOLTIP_MAX_WIDTH i
	children k
	hasRecentMessages p
	hideButton s
	hideTooltip v
	id l
	isRemoved o
	minecraft j
	playerName m
	playerReportable r
	reportButton u
	reportTooltip x
	reportingEnabled q
	showButton t
	showTooltip w
	skinGetter n
	tooltipHoverTime y
	children ()Ljava/util/List; i
	getEntryNarationMessage (Lnet/minecraft/network/chat/MutableComponent;)Lnet/minecraft/network/chat/MutableComponent; a
	getPlayerId ()Ljava/util/UUID; d
	getPlayerName ()Ljava/lang/String; c
	getReportButtonText (Z)Lnet/minecraft/network/chat/Component; e
	getStatusComponent ()Lnet/minecraft/network/chat/Component; g
	hasRecentMessages ()Z f
	isRemoved ()Z e
	narratables ()Ljava/util/List; b
	onHiddenOrShown (ZLnet/minecraft/network/chat/Component;)V a
	postRenderTooltip (Lnet/minecraft/client/gui/screens/social/SocialInteractionsScreen;Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;II)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	setHasRecentMessages (Z)V d
	setRemoved (Z)V c
net/minecraft/client/gui/screens/social/PlayerSocialManager eph
	discoveredNamesToUUID d
	hiddenPlayers b
	minecraft a
	onlineMode e
	pendingBlockListRefresh f
	service c
	addPlayer (Lnet/minecraft/client/multiplayer/PlayerInfo;)V a
	getDiscoveredUUID (Ljava/lang/String;)Ljava/util/UUID; a
	getHiddenPlayers ()Ljava/util/Set; c
	hidePlayer (Ljava/util/UUID;)V a
	isBlocked (Ljava/util/UUID;)Z e
	isHidden (Ljava/util/UUID;)Z d
	removePlayer (Ljava/util/UUID;)V f
	shouldHideMessageFrom (Ljava/util/UUID;)Z c
	showPlayer (Ljava/util/UUID;)V b
	startOnlineMode ()V a
	stopOnlineMode ()V b
net/minecraft/client/gui/screens/social/SocialInteractionsPlayerList epi
	filter p
	players o
	socialInteractionsScreen a
	addOnlinePlayers (Ljava/util/Collection;Ljava/util/Map;)V a
	addPlayer (Lnet/minecraft/client/multiplayer/PlayerInfo;Lnet/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page;)V a
	isEmpty ()Z e
	removePlayer (Ljava/util/UUID;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setFilter (Ljava/lang/String;)V a
	sortPlayerEntries ()V f
	updateFilteredPlayers ()V w
	updateFiltersAndScroll (Ljava/util/Collection;D)V a
	updatePlayerList (Ljava/util/Collection;DZ)V a
	updatePlayersFromChatLog (Ljava/util/Map;Z)V a
net/minecraft/client/gui/screens/social/SocialInteractionsScreen epj
	BG_BORDER_SIZE z
	BG_UNITS A
	BG_WIDTH B
	BLOCKING_HINT x
	BLOCK_LINK y
	BUTTON_HEIGHT F
	EMPTY_BLOCKED w
	EMPTY_HIDDEN v
	EMPTY_SEARCH u
	IMAGE_WIDTH E
	ITEM_HEIGHT G
	LIST_START b
	MARGIN_Y D
	SEARCH_HEIGHT C
	SEARCH_HINT t
	SEARCH_START c
	SOCIAL_INTERACTIONS_LOCATION a
	TAB_ALL n
	TAB_ALL_SELECTED q
	TAB_BLOCKED p
	TAB_BLOCKED_SELECTED s
	TAB_HIDDEN o
	TAB_HIDDEN_SELECTED r
	allButton L
	blockedButton N
	blockingHintButton O
	hiddenButton M
	initialized R
	lastSearch J
	page K
	playerCount Q
	postRenderRunnable S
	searchBox I
	serverLabel P
	socialInteractionsPlayerList H
	backgroundUnits ()I j
	checkSearchStringUpdate (Ljava/lang/String;)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	isPauseScreen ()Z h
	keyPressed (III)Z a
	listEnd ()I k
	marginX ()I z
	mouseClicked (DDI)Z a
	onAddPlayer (Lnet/minecraft/client/multiplayer/PlayerInfo;)V a
	onRemovePlayer (Ljava/util/UUID;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	setPostRenderRunnable (Ljava/lang/Runnable;)V a
	showPage (Lnet/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page;)V a
	tick ()V d
	updateServerLabel (Lnet/minecraft/client/Minecraft;)V a
	windowHeight ()I g
net/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page epj$a
	$VALUES d
	ALL a
	BLOCKED c
	HIDDEN b
	$values ()[Lnet/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page; a
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen epl
	COMMANDS_INFO u
	GAME_MODEL_LABEL p
	LOGGER n
	NAME_LABEL s
	OUTPUT_DIR_INFO t
	PREPARING_WORLD_DATA v
	SEED_INFO r
	SEED_LABEL q
	TEMP_WORLD_PREFIX o
	commands C
	commandsButton N
	commandsChanged D
	createButton H
	dataPacks b
	dataPacksButton M
	difficulty B
	difficultyButton J
	gameMode z
	gameModeHelp1 O
	gameModeHelp2 P
	gameRules R
	gameRulesButton L
	hardCore a
	initName Q
	lastScreen w
	modeButton I
	moreOptionsButton K
	nameEdit x
	oldGameMode A
	resultFolder y
	tempDataPackDir E
	tempDataPackRepository F
	worldGenSettingsComponent c
	worldGenSettingsVisible G
	addRenderableWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; d
	addWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; e
	copyBetweenDirs (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V a
	createDefaultLoadConfig (Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/world/level/DataPackConfig;)Lnet/minecraft/server/WorldLoader$InitConfig; a
	createFromExisting (Lnet/minecraft/client/gui/screens/Screen;Lnet/minecraft/server/WorldStem;Ljava/nio/file/Path;)Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen; a
	createLevelSettings (Z)Lnet/minecraft/world/level/LevelSettings; c
	createNewWorld ()V C
	createNewWorldDirectory ()Ljava/util/Optional; H
	createTempDataPackDirFromExistingWorld (Ljava/nio/file/Path;Lnet/minecraft/client/Minecraft;)Ljava/nio/file/Path; a
	getDataPackSelectionSettings ()Lcom/mojang/datafixers/util/Pair; I
	getEffectiveDifficulty ()Lnet/minecraft/world/Difficulty; k
	getTempDataPackDir ()Ljava/nio/file/Path; E
	init ()V b
	keyPressed (III)Z a
	onClose ()V ag_
	onCreate ()V B
	openDataPackSelectionScreen ()V F
	openFresh (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/Screen;)V a
	popScreen ()V j
	queueLoadScreen (Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/chat/Component;)V a
	refreshWorldGenSettingsVisibility ()V g
	removeTempDataPackDir ()V G
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setGameMode (Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen$SelectedGameMode;)V a
	setWorldGenSettingsVisible (Z)V e
	tick ()V d
	toggleWorldGenSettingsVisibility ()V D
	tryApplyNewDataPacks (Lnet/minecraft/server/packs/repository/PackRepository;)V a
	updateGameModeHelp ()V z
	updateResultFolder ()V A
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$SelectedGameMode epl$a
	$VALUES h
	CREATIVE c
	DEBUG d
	HARDCORE b
	SURVIVAL a
	displayName g
	gameType f
	name e
	$values ()[Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen$SelectedGameMode; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen epm
	doneButton n
	exitCallback a
	gameRules p
	invalidEntries c
	rules b
	tooltip o
	clearInvalid (Lnet/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry;)V b
	init ()V b
	markInvalid (Lnet/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry;)V a
	onClose ()V ag_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setTooltip (Ljava/util/List;)V b
	updateDoneButton ()V g
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$BooleanRuleEntry epm$a
	checkbox d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$CategoryRuleEntry epm$b
	label b
	children ()Ljava/util/List; i
	narratables ()Ljava/util/List; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$EntryFactory epm$c
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$GameRuleEntry epm$d
	children b
	label a
	children ()Ljava/util/List; i
	narratables ()Ljava/util/List; b
	renderLabel (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$IntegerRuleEntry epm$e
	input d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry epm$f
	tooltip a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleList epm$g
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/worldselection/EditWorldScreen epn
	LOGGER a
	NAME_LABEL c
	WORLD_GEN_SETTINGS_GSON b
	callback o
	levelAccess q
	nameEdit p
	renameButton n
	init ()V b
	makeBackupAndShowToast (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Z a
	makeBackupAndShowToast (Lnet/minecraft/world/level/storage/LevelStorageSource;Ljava/lang/String;)V a
	onClose ()V ag_
	onRename ()V g
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
net/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen epo
	DIMENSION_COLORS b
	LOGGER a
	callback c
	upgrader n
	create (Lnet/minecraft/client/Minecraft;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Z)Lnet/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen; a
	init ()V b
	onClose ()V ag_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
net/minecraft/client/gui/screens/worldselection/PresetEditor epp
	EDITORS a
	fixedBiomeConfigurator (Lnet/minecraft/core/Holder;)Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext$Updater; a
	flatWorldConfigurator (Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext$Updater; a
net/minecraft/client/gui/screens/worldselection/SelectWorldScreen epq
	LOGGER c
	copyButton r
	deleteButton o
	lastScreen a
	list s
	renameButton q
	searchBox b
	selectButton p
	toolTip n
	charTyped (CI)Z a
	init ()V b
	keyPressed (III)Z a
	mouseScrolled (DDD)Z a
	onClose ()V ag_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setToolTip (Ljava/util/List;)V b
	tick ()V d
	updateButtonStatus (Z)V c
net/minecraft/client/gui/screens/worldselection/WorldCreationContext epr
	dataPackResources d
	registryAccess c
	worldGenSettings a
	worldSettingsStability b
	dataPackResources ()Lnet/minecraft/server/ReloadableServerResources; d
	registryAccess ()Lnet/minecraft/core/RegistryAccess$Frozen; c
	withSettings (Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext$SimpleUpdater;)Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext; a
	withSettings (Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext$Updater;)Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext; a
	withSettings (Lnet/minecraft/world/level/levelgen/WorldGenSettings;)Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext; a
	worldGenSettings ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	worldSettingsStability ()Lcom/mojang/serialization/Lifecycle; b
net/minecraft/client/gui/screens/worldselection/WorldCreationContext$SimpleUpdater epr$a
net/minecraft/client/gui/screens/worldselection/WorldCreationContext$Updater epr$b
net/minecraft/client/gui/screens/worldselection/WorldGenSettingsComponent eps
	AMPLIFIED_HELP_TEXT c
	CUSTOM_WORLD_DESCRIPTION b
	LOGGER a
	MAP_FEATURES_INFO d
	SELECT_FILE_PROMPT e
	amplifiedWorldInfo f
	bonusItemsButton k
	customWorldDummyButton m
	customizeTypeButton n
	featuresButton j
	font g
	importSettingsButton o
	preset q
	seed r
	seedEdit i
	settings p
	typeButton l
	width h
	createFinalSettings (Z)Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext; a
	describePreset (Lnet/minecraft/core/Holder;)Lnet/minecraft/network/chat/Component; b
	findPreset (Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext;Ljava/util/Optional;)Ljava/util/Optional; a
	getNonEmptyList (Lnet/minecraft/core/Registry;Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; a
	importSettings (Lnet/minecraft/world/level/levelgen/WorldGenSettings;)V a
	init (Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen;Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/Font;)V a
	isAmplified (Lnet/minecraft/core/Holder;)Z a
	isDebug ()Z b
	registryHolder ()Lnet/minecraft/core/RegistryAccess; d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	selectWorldTypeButton (Z)V c
	setVisibility (Z)V b
	settings ()Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext; c
	switchOutOfHardcode ()V f
	switchToHardcore ()V e
	tick ()V a
	toString (Ljava/util/OptionalLong;)Ljava/lang/String; a
	updateSettings (Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext$SimpleUpdater;)V a
	updateSettings (Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext$Updater;)V a
	updateSettings (Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext;)V a
net/minecraft/client/gui/screens/worldselection/WorldOpenFlows ept
	LOGGER a
	levelSource c
	minecraft b
	askForBackup (Lnet/minecraft/client/gui/screens/Screen;Ljava/lang/String;ZLjava/lang/Runnable;)V a
	confirmWorldCreation (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen;Lcom/mojang/serialization/Lifecycle;Ljava/lang/Runnable;)V a
	createFreshLevel (Ljava/lang/String;Lnet/minecraft/world/level/LevelSettings;Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/levelgen/WorldGenSettings;)V a
	createLevelFromExistingSettings (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/server/ReloadableServerResources;Lnet/minecraft/core/RegistryAccess$Frozen;Lnet/minecraft/world/level/storage/WorldData;)V a
	createPackRepository (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Lnet/minecraft/server/packs/repository/PackRepository; a
	createWorldAccess (Ljava/lang/String;)Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess; a
	doLoadLevel (Lnet/minecraft/client/gui/screens/Screen;Ljava/lang/String;ZZ)V a
	loadLevel (Lnet/minecraft/client/gui/screens/Screen;Ljava/lang/String;)V a
	loadWorldStem (Lnet/minecraft/server/WorldLoader$PackConfig;Lnet/minecraft/server/WorldLoader$WorldDataSupplier;)Lnet/minecraft/server/WorldStem; a
	loadWorldStem (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Z)Lnet/minecraft/server/WorldStem; a
	loadWorldStem (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;ZLnet/minecraft/server/packs/repository/PackRepository;)Lnet/minecraft/server/WorldStem; a
	promptBundledPackLoadFailure ()Ljava/util/concurrent/CompletableFuture; a
	safeCloseAccess (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Ljava/lang/String;)V a
net/minecraft/client/gui/screens/worldselection/WorldSelectionList epu
	DATE_FORMAT o
	FROM_NEWER_TOOLTIP_1 r
	FROM_NEWER_TOOLTIP_2 s
	ICON_MISSING p
	ICON_OVERLAY_LOCATION q
	LOGGER a
	SNAPSHOT_TOOLTIP_1 t
	SNAPSHOT_TOOLTIP_2 u
	WORLD_LOCKED_TOOLTIP v
	WORLD_REQUIRES_CONVERSION w
	currentlyDisplayedLevels z
	filter A
	loadingHeader B
	pendingLevels y
	screen x
	fillLevels (Ljava/lang/String;Ljava/util/List;)V a
	fillLoadingLevels ()V z
	filterAccepts (Ljava/lang/String;Lnet/minecraft/world/level/storage/LevelSummary;)Z a
	getRowWidth ()I c
	getScreen ()Lnet/minecraft/client/gui/screens/worldselection/SelectWorldScreen; f
	getScrollbarPosition ()I d
	getSelectedOpt ()Ljava/util/Optional; e
	handleLevelLoadFailure (Lnet/minecraft/network/chat/Component;)V a
	handleNewLevels (Ljava/util/List;)V a
	isFocused ()Z a
	loadLevels ()Ljava/util/concurrent/CompletableFuture; y
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;)V a
	notifyListUpdated ()V A
	pollLevelsIgnoreErrors ()Ljava/util/List; w
	reloadWorldList ()V x
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/worldselection/WorldSelectionList$Entry;)V a
	updateFilter (Ljava/lang/String;)V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/worldselection/WorldSelectionList$Entry epu$a
	isSelectable ()Z a
net/minecraft/client/gui/screens/worldselection/WorldSelectionList$LoadingHeader epu$b
	LOADING_LABEL a
	minecraft b
	getNarration ()Lnet/minecraft/network/chat/Component; b
	isSelectable ()Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/WorldSelectionList$WorldListEntry epu$c
	ICON_HEIGHT c
	ICON_OVERLAY_X_ERROR h
	ICON_OVERLAY_X_JOIN d
	ICON_OVERLAY_X_JOIN_WITH_NOTIFY e
	ICON_OVERLAY_X_WARNING f
	ICON_OVERLAY_Y_SELECTED j
	ICON_OVERLAY_Y_UNSELECTED i
	ICON_WIDTH b
	icon p
	iconFile o
	iconLocation n
	lastClickTime q
	minecraft k
	screen l
	summary m
	deleteWorld ()V d
	doDeleteWorld ()V e
	editWorld ()V f
	getLevelName ()Ljava/lang/String; h
	getNarration ()Lnet/minecraft/network/chat/Component; b
	isSelectable ()Z a
	joinWorld ()V c
	loadServerIcon ()Lnet/minecraft/client/renderer/texture/DynamicTexture; k
	loadWorld ()V i
	mouseClicked (DDI)Z a
	queueLoadScreen ()V j
	recreateWorld ()V g
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/spectator/PlayerMenuItem epw
	location b
	name c
	profile a
	getName ()Lnet/minecraft/network/chat/Component; ak_
	isEnabled ()Z al_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/RootSpectatorMenuCategory epx
	PROMPT_TEXT a
	items b
	getItems ()Ljava/util/List; a
	getPrompt ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/gui/spectator/SpectatorMenu epy
	CLOSE_ITEM b
	CLOSE_MENU_TEXT g
	EMPTY_SLOT a
	MAX_PER_PAGE f
	NEXT_PAGE_TEXT i
	PREVIOUS_PAGE_TEXT h
	SCROLL_LEFT c
	SCROLL_RIGHT_DISABLED e
	SCROLL_RIGHT_ENABLED d
	category k
	listener j
	page m
	selectedSlot l
	exit ()V d
	getCurrentPage ()Lnet/minecraft/client/gui/spectator/categories/SpectatorPage; f
	getItem (I)Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; a
	getItems ()Ljava/util/List; a
	getSelectedCategory ()Lnet/minecraft/client/gui/spectator/SpectatorMenuCategory; c
	getSelectedItem ()Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; b
	getSelectedSlot ()I e
	selectCategory (Lnet/minecraft/client/gui/spectator/SpectatorMenuCategory;)V a
	selectSlot (I)V b
net/minecraft/client/gui/spectator/SpectatorMenu$CloseSpectatorItem epy$a
	getName ()Lnet/minecraft/network/chat/Component; ak_
	isEnabled ()Z al_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenu$ScrollMenuItem epy$b
	direction a
	enabled b
	getName ()Lnet/minecraft/network/chat/Component; ak_
	isEnabled ()Z al_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenuCategory epz
	getItems ()Ljava/util/List; a
	getPrompt ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/gui/spectator/SpectatorMenuItem eqa
	getName ()Lnet/minecraft/network/chat/Component; ak_
	isEnabled ()Z al_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenuListener eqb
	onSpectatorMenuClosed (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/SpectatorPage eqc
	NO_SELECTION a
	items b
	selection c
	getItem (I)Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; a
	getSelectedSlot ()I a
net/minecraft/client/gui/spectator/categories/TeleportToPlayerMenuCategory eqd
	PROFILE_ORDER a
	TELEPORT_PROMPT c
	TELEPORT_TEXT b
	items d
	getItems ()Ljava/util/List; a
	getName ()Lnet/minecraft/network/chat/Component; ak_
	getPrompt ()Lnet/minecraft/network/chat/Component; b
	isEnabled ()Z al_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory eqe
	TELEPORT_PROMPT b
	TELEPORT_TEXT a
	items c
	getItems ()Ljava/util/List; a
	getName ()Lnet/minecraft/network/chat/Component; ak_
	getPrompt ()Lnet/minecraft/network/chat/Component; b
	isEnabled ()Z al_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory$TeamSelectionItem eqe$a
	location b
	players c
	team a
	getName ()Lnet/minecraft/network/chat/Component; ak_
	isEnabled ()Z al_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/main/GameConfig eqh
	display b
	game d
	location c
	server e
	user a
net/minecraft/client/main/GameConfig$FolderData eqh$a
	assetDirectory c
	assetIndex d
	gameDirectory a
	resourcePackDirectory b
	getAssetIndex ()Lnet/minecraft/client/resources/AssetIndex; a
net/minecraft/client/main/GameConfig$GameData eqh$b
	demo a
	disableChat e
	disableMultiplayer d
	launchVersion b
	versionType c
net/minecraft/client/main/GameConfig$ServerData eqh$c
	hostname a
	port b
net/minecraft/client/main/GameConfig$UserData eqh$d
	profileProperties c
	proxy d
	user a
	userProperties b
net/minecraft/client/main/SilentInitException eqi
net/minecraft/client/model/AbstractZombieModel eqk
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Monster;FFFFF)V a
net/minecraft/client/model/AgeableListModel eql
	babyBodyScale h
	babyHeadScale g
	babyYHeadOffset b
	babyZHeadOffset f
	bodyYOffset i
	scaleHead a
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/AllayModel eqm
	FLYING_ANIMATION_X_ROT k
	MAX_HAND_HOLDING_ITEM_X_ROT_RAD l
	MIN_HAND_HOLDING_ITEM_X_ROT_RAD m
	body f
	head b
	left_arm h
	left_wing j
	right_arm g
	right_wing i
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/allay/Allay;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/AnimationUtils eqn
	animateCrossbowCharge (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/world/entity/LivingEntity;Z)V a
	animateCrossbowHold (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Z)V a
	animateZombieArms (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;ZFF)V a
	bobArms (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;F)V a
	bobModelPart (Lnet/minecraft/client/model/geom/ModelPart;FF)V a
	swingWeaponDown (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/world/entity/Mob;FF)V a
net/minecraft/client/model/ArmedModel eqo
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/ArmorStandArmorModel eqp
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/decoration/ArmorStand;FFFFF)V a
net/minecraft/client/model/ArmorStandModel eqq
	BASE_PLATE w
	LEFT_BODY_STICK b
	RIGHT_BODY_STICK a
	SHOULDER_STICK v
	basePlate A
	leftBodyStick y
	rightBodyStick x
	shoulderStick z
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/decoration/ArmorStand;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/decoration/ArmorStand;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/AxolotlModel eqr
	SWIMMING_LEG_XROT a
	body j
	head k
	leftFrontLeg h
	leftGills m
	leftHindLeg f
	rightFrontLeg i
	rightGills n
	rightHindLeg g
	tail b
	topGills l
	applyMirrorLegRotations ()V d
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	getRotationVector (Lnet/minecraft/client/model/geom/ModelPart;)Lcom/mojang/math/Vector3f; a
	headParts ()Ljava/lang/Iterable; a
	lerpPart (Lnet/minecraft/client/model/geom/ModelPart;FFF)V a
	lerpTo (FF)F a
	lerpTo (FFF)F a
	saveAnimationValues (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)V a
	setRotationFromVector (Lnet/minecraft/client/model/geom/ModelPart;Lcom/mojang/math/Vector3f;)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;FFFFF)V a
	setupGroundCrawlingAnimation (FF)V c
	setupInitialAnimationValues (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;FF)V a
	setupLayStillOnGroundAnimation (FF)V b
	setupPlayDeadAnimation (F)V b
	setupSwimmingAnimation (FF)V d
	setupWaterHoveringAnimation (F)V a
net/minecraft/client/model/BatModel eqs
	body f
	head b
	leftWing h
	leftWingTip j
	rightWing g
	rightWingTip i
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/ambient/Bat;FFFFF)V a
net/minecraft/client/model/BeeModel eqt
	BACK_LEGS k
	BEE_Y_BASE a
	BONE b
	FRONT_LEGS i
	LEFT_ANTENNA g
	MIDDLE_LEGS j
	RIGHT_ANTENNA h
	STINGER f
	backLeg q
	bone l
	frontLeg o
	leftAntenna s
	leftWing n
	midLeg p
	rightAntenna t
	rightWing m
	rollAmount v
	stinger r
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Bee;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Bee;FFFFF)V a
net/minecraft/client/model/BlazeModel equ
	head f
	root a
	upperBodyParts b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getPartName (I)Ljava/lang/String; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/BoatModel eqv
	BACK h
	BOTTOM g
	CHEST_BOTTOM l
	CHEST_LID m
	CHEST_LOCK n
	FRONT i
	LEFT k
	LEFT_PADDLE a
	RIGHT j
	RIGHT_PADDLE b
	WATER_PATCH f
	leftPaddle o
	parts r
	rightPaddle p
	waterPatch q
	animatePaddle (Lnet/minecraft/world/entity/vehicle/Boat;ILnet/minecraft/client/model/geom/ModelPart;F)V a
	createBodyModel (Z)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	parts ()Lcom/google/common/collect/ImmutableList; a
	parts ()Ljava/lang/Iterable; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/vehicle/Boat;FFFFF)V a
	waterPatch ()Lnet/minecraft/client/model/geom/ModelPart; b
net/minecraft/client/model/BookModel eqw
	FLIP_PAGE_1 c
	FLIP_PAGE_2 d
	LEFT_PAGES a
	RIGHT_PAGES b
	flipPage1 j
	flipPage2 k
	leftLid f
	leftPages h
	rightLid g
	rightPages i
	root e
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFFF)V a
net/minecraft/client/model/CatModel eqx
	lieDownAmount q
	lieDownAmountTail r
	relaxStateOneAmount s
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Cat;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Cat;FFFFF)V a
net/minecraft/client/model/ChestedHorseModel eqy
	leftChest g
	rightChest h
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFFFF)V a
net/minecraft/client/model/ChickenModel eqz
	RED_THING a
	beak k
	body f
	head b
	leftLeg h
	leftWing j
	redThing l
	rightLeg g
	rightWing i
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/CodModel era
	root a
	tailFin b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ColorableAgeableListModel erb
	b f
	g b
	r a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setColor (FFF)V a
net/minecraft/client/model/ColorableHierarchicalModel erc
	b f
	g b
	r a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setColor (FFF)V a
net/minecraft/client/model/CowModel erd
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
net/minecraft/client/model/CreeperModel ere
	Y_OFFSET j
	head b
	leftFrontLeg i
	leftHindLeg g
	rightFrontLeg h
	rightHindLeg f
	root a
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/DolphinModel erf
	body b
	root a
	tail f
	tailFin g
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/DrownedModel erg
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Zombie;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Monster;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Zombie;FFFFF)V a
net/minecraft/client/model/ElytraModel erh
	leftWing b
	rightWing a
	bodyParts ()Ljava/lang/Iterable; b
	createLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
net/minecraft/client/model/EndermanModel eri
	carrying a
	creepy b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
net/minecraft/client/model/EndermiteModel erj
	BODY_COUNT a
	BODY_SIZES b
	BODY_TEXS f
	bodyParts h
	root g
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createSegmentName (I)Ljava/lang/String; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/EntityModel erk
	attackTime c
	riding d
	young e
	copyPropertiesTo (Lnet/minecraft/client/model/EntityModel;)V a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/EvokerFangsModel erl
	BASE a
	LOWER_JAW f
	UPPER_JAW b
	base h
	lowerJaw j
	root g
	upperJaw i
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/FoxModel erm
	HEAD_HEIGHT l
	LEG_POS m
	LEG_SIZE k
	body b
	head a
	leftFrontLeg i
	leftHindLeg g
	legMotionPos n
	rightFrontLeg h
	rightHindLeg f
	tail j
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Fox;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Fox;FFFFF)V a
net/minecraft/client/model/FrogModel ern
	MAX_WALK_ANIMATION_SPEED a
	WALK_ANIMATION_SPEED_FACTOR b
	body g
	croakingBody o
	eyes i
	head h
	leftArm k
	leftLeg m
	rightArm l
	rightLeg n
	root f
	tongue j
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/frog/Frog;FFFFF)V a
net/minecraft/client/model/GhastModel ero
	root a
	tentacles b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createTentacleName (I)Ljava/lang/String; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/GiantZombieModel erp
	isAggressive (Lnet/minecraft/world/entity/monster/Giant;)Z a
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
net/minecraft/client/model/GoatModel erq
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/goat/Goat;FFFFF)V a
net/minecraft/client/model/GuardianModel err
	EYE j
	SPIKE_X g
	SPIKE_X_ROT a
	SPIKE_Y h
	SPIKE_Y_ROT b
	SPIKE_Z i
	SPIKE_Z_ROT f
	TAIL_0 k
	TAIL_1 l
	TAIL_2 m
	eye p
	head o
	root n
	spikeParts q
	tailParts r
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createSpikeName (I)Ljava/lang/String; a
	getSpikeOffset (IFF)F a
	getSpikeX (IFF)F b
	getSpikeY (IFF)F c
	getSpikeZ (IFF)F d
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Guardian;FFFFF)V a
	setupSpikes (FF)V a
net/minecraft/client/model/HeadedModel ers
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
net/minecraft/client/model/HierarchicalModel ert
	ANIMATION_VECTOR_CACHE a
	animate (Lnet/minecraft/world/entity/AnimationState;Lnet/minecraft/client/animation/AnimationDefinition;F)V a
	animate (Lnet/minecraft/world/entity/AnimationState;Lnet/minecraft/client/animation/AnimationDefinition;FF)V a
	getAnyDescendantWithName (Ljava/lang/String;)Ljava/util/Optional; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
net/minecraft/client/model/HoglinModel eru
	ATTACK_HEAD_X_ROT_END b
	DEFAULT_HEAD_X_ROT a
	body i
	head f
	leftEar h
	leftFrontLeg k
	leftHindLeg m
	mane n
	rightEar g
	rightFrontLeg j
	rightHindLeg l
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
net/minecraft/client/model/HorseModel erv
	DEG_125 g
	DEG_15 k
	DEG_30 j
	DEG_45 i
	DEG_60 h
	HEAD_PARTS a
	HEAD_SADDLE v
	LEFT_FRONT_BABY_LEG n
	LEFT_HIND_BABY_LEG l
	LEFT_SADDLE_LINE r
	LEFT_SADDLE_MOUTH q
	MOUTH_SADDLE_WRAP w
	RIGHT_FRONT_BABY_LEG o
	RIGHT_HIND_BABY_LEG m
	RIGHT_SADDLE_LINE t
	RIGHT_SADDLE_MOUTH s
	SADDLE p
	body b
	headParts f
	leftFrontBabyLeg E
	leftFrontLeg A
	leftHindBabyLeg C
	leftHindLeg y
	ridingParts H
	rightFrontBabyLeg D
	rightFrontLeg z
	rightHindBabyLeg B
	rightHindLeg x
	saddleParts G
	tail F
	bodyParts ()Ljava/lang/Iterable; b
	createBodyMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFFFF)V a
net/minecraft/client/model/HumanoidModel erw
	HAT_OVERLAY_SCALE g
	OVERLAY_SCALE f
	SPYGLASS_ARM_CROUCH_ROT_X v
	SPYGLASS_ARM_ROT_X b
	SPYGLASS_ARM_ROT_Y a
	TOOT_HORN_XROT_BASE h
	TOOT_HORN_YROT_BASE i
	body l
	crouching s
	hat k
	head j
	leftArm n
	leftArmPose q
	leftLeg p
	rightArm m
	rightArmPose r
	rightLeg o
	swimAmount t
	bodyParts ()Ljava/lang/Iterable; b
	copyPropertiesTo (Lnet/minecraft/client/model/HumanoidModel;)V a
	createMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;F)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	getArm (Lnet/minecraft/world/entity/HumanoidArm;)Lnet/minecraft/client/model/geom/ModelPart; a
	getAttackArm (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/HumanoidArm; c
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
	headParts ()Ljava/lang/Iterable; a
	poseLeftArm (Lnet/minecraft/world/entity/LivingEntity;)V b
	poseRightArm (Lnet/minecraft/world/entity/LivingEntity;)V a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	quadraticArmUpdate (F)F a
	rotlerpRad (FFF)F a
	setAllVisible (Z)V d_
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/LivingEntity;F)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/HumanoidModel$ArmPose erw$a
	$VALUES k
	BLOCK c
	BOW_AND_ARROW d
	CROSSBOW_CHARGE f
	CROSSBOW_HOLD g
	EMPTY a
	ITEM b
	SPYGLASS h
	THROW_SPEAR e
	TOOT_HORN i
	twoHanded j
	$values ()[Lnet/minecraft/client/model/HumanoidModel$ArmPose; b
	isTwoHanded ()Z a
net/minecraft/client/model/IllagerModel erx
	arms g
	hat f
	head b
	leftArm k
	leftLeg h
	rightArm j
	rightLeg i
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getArm (Lnet/minecraft/world/entity/HumanoidArm;)Lnet/minecraft/client/model/geom/ModelPart; a
	getHat ()Lnet/minecraft/client/model/geom/ModelPart; c
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/AbstractIllager;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/IronGolemModel ery
	head b
	leftArm g
	leftLeg i
	rightArm f
	rightLeg h
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getFlowerHoldingArm ()Lnet/minecraft/client/model/geom/ModelPart; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/IronGolem;FFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/IronGolem;FFFFF)V a
net/minecraft/client/model/LavaSlimeModel erz
	SEGMENT_COUNT a
	bodyCubes f
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getSegmentName (I)Ljava/lang/String; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Slime;FFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Slime;FFFFF)V a
net/minecraft/client/model/LeashKnotModel esa
	KNOT a
	knot f
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ListModel esb
	parts ()Ljava/lang/Iterable; c
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/LlamaModel esc
	body b
	head a
	leftChest k
	leftFrontLeg i
	leftHindLeg g
	rightChest j
	rightFrontLeg h
	rightHindLeg f
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;FFFFF)V a
net/minecraft/client/model/LlamaSpitModel esd
	MAIN a
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/MinecartModel ese
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/Model esf
	renderType u
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	renderType (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/model/ModelUtils esg
	rotlerpRad (FFF)F a
net/minecraft/client/model/OcelotModel esh
	BACK_LEG_Y b
	BACK_LEG_Z f
	BODY_WALK_Y z
	BODY_WALK_Z A
	CROUCH_STATE q
	FRONT_LEG_Y g
	FRONT_LEG_Z F
	HEAD_WALK_Y x
	HEAD_WALK_Z y
	SITTING_STATE a
	SPRINT_STATE s
	TAIL_1 G
	TAIL_1_WALK_Y B
	TAIL_1_WALK_Z C
	TAIL_2 H
	TAIL_2_WALK_Y D
	TAIL_2_WALK_Z E
	WALK_STATE r
	XO t
	YO v
	ZO w
	body o
	head n
	leftFrontLeg j
	leftHindLeg h
	rightFrontLeg k
	rightHindLeg i
	state p
	tail1 l
	tail2 m
	bodyParts ()Ljava/lang/Iterable; b
	createBodyMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PandaModel esi
	lieOnBackAmount k
	rollAmount l
	sitAmount j
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Panda;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Panda;FFFFF)V a
net/minecraft/client/model/ParrotModel esj
	FEATHER a
	body f
	feather k
	head j
	leftLeg l
	leftWing h
	rightLeg m
	rightWing i
	root b
	tail g
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getState (Lnet/minecraft/world/entity/animal/Parrot;)Lnet/minecraft/client/model/ParrotModel$State; a
	prepare (Lnet/minecraft/client/model/ParrotModel$State;)V a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Parrot;FFF)V a
	renderOnShoulder (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFFI)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/client/model/ParrotModel$State;IFFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Parrot;FFFFF)V a
net/minecraft/client/model/ParrotModel$State esj$a
	$VALUES f
	FLYING a
	ON_SHOULDER e
	PARTY d
	SITTING c
	STANDING b
	$values ()[Lnet/minecraft/client/model/ParrotModel$State; a
net/minecraft/client/model/PhantomModel esk
	TAIL_BASE a
	TAIL_TIP b
	leftWingBase g
	leftWingTip h
	rightWingBase i
	rightWingTip j
	root f
	tailBase k
	tailTip l
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Phantom;FFFFF)V a
net/minecraft/client/model/PigModel esl
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
net/minecraft/client/model/PiglinModel esm
	bodyDefault A
	headDefault B
	leftArmDefault C
	leftEar z
	rightArmDefault D
	rightEar a
	createMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	holdWeaponHigh (Lnet/minecraft/world/entity/Mob;)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/LivingEntity;F)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/Mob;F)V a
net/minecraft/client/model/PlayerModel esn
	CLOAK z
	EAR a
	LEFT_PANTS C
	LEFT_SLEEVE A
	RIGHT_PANTS D
	RIGHT_SLEEVE B
	cloak F
	ear G
	jacket y
	leftPants w
	leftSleeve b
	parts E
	rightPants x
	rightSleeve v
	slim H
	bodyParts ()Ljava/lang/Iterable; b
	createMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;Z)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	getRandomModelPart (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/client/model/geom/ModelPart; a
	renderCloak (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V b
	renderEars (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V a
	setAllVisible (Z)V d_
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/PolarBearModel eso
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/PolarBear;FFFFF)V a
net/minecraft/client/model/PufferfishBigModel esp
	leftBlueFin b
	rightBlueFin f
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PufferfishMidModel esq
	leftBlueFin b
	rightBlueFin f
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PufferfishSmallModel esr
	leftFin b
	rightFin f
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/QuadrupedModel ess
	body b
	head a
	leftFrontLeg i
	leftHindLeg g
	rightFrontLeg h
	rightHindLeg f
	bodyParts ()Ljava/lang/Iterable; b
	createBodyMesh (ILnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/RabbitModel est
	FRONT_JUMP_ANGLE b
	LEFT_HAUNCH f
	NEW_SCALE v
	REAR_JUMP_ANGLE a
	RIGHT_HAUNCH g
	body l
	head o
	jumpRotation t
	leftEar q
	leftFrontLeg m
	leftHaunch j
	leftRearFoot h
	nose s
	rightEar p
	rightFrontLeg n
	rightHaunch k
	rightRearFoot i
	tail r
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Rabbit;FFF)V a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Rabbit;FFFFF)V a
net/minecraft/client/model/RavagerModel esu
	head b
	leftFrontLeg j
	leftHindLeg h
	mouth f
	neck k
	rightFrontLeg i
	rightHindLeg g
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Ravager;FFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Ravager;FFFFF)V a
net/minecraft/client/model/SalmonModel esv
	BODY_BACK b
	BODY_FRONT a
	bodyBack g
	root f
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SheepFurModel esw
	headXRot j
	createFurLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Sheep;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Sheep;FFFFF)V a
net/minecraft/client/model/SheepModel esx
	headXRot j
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Sheep;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Sheep;FFFFF)V a
net/minecraft/client/model/ShieldModel esy
	HANDLE b
	PLATE a
	SHIELD_HEIGHT d
	SHIELD_WIDTH c
	handle g
	plate f
	root e
	createLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	handle ()Lnet/minecraft/client/model/geom/ModelPart; c
	plate ()Lnet/minecraft/client/model/geom/ModelPart; b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/ShulkerBulletModel esz
	MAIN a
	main f
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ShulkerModel eta
	BASE b
	LID a
	base f
	head h
	lid g
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
	getLid ()Lnet/minecraft/client/model/geom/ModelPart; b
	parts ()Ljava/lang/Iterable; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Shulker;FFFFF)V a
net/minecraft/client/model/SilverfishModel etb
	BODY_COUNT a
	BODY_SIZES h
	BODY_TEXS i
	bodyLayers g
	bodyParts f
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getLayerName (I)Ljava/lang/String; a
	getSegmentName (I)Ljava/lang/String; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SkeletonModel etc
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/Mob;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/SkullModel etd
	head a
	root b
	createHeadModel ()Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	createHumanoidHeadLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createMobHeadLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFF)V a
net/minecraft/client/model/SkullModelBase ete
	setupAnim (FFF)V a
net/minecraft/client/model/SlimeModel etf
	root a
	createInnerBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	createOuterBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SnowGolemModel etg
	UPPER_BODY a
	head g
	leftArm h
	rightArm i
	root b
	upperBody f
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; c
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SpiderModel eth
	BODY_0 a
	BODY_1 b
	LEFT_MIDDLE_FRONT_LEG g
	LEFT_MIDDLE_HIND_LEG i
	RIGHT_MIDDLE_FRONT_LEG f
	RIGHT_MIDDLE_HIND_LEG h
	head k
	leftFrontLeg s
	leftHindLeg m
	leftMiddleFrontLeg q
	leftMiddleHindLeg o
	rightFrontLeg r
	rightHindLeg l
	rightMiddleFrontLeg p
	rightMiddleHindLeg n
	root j
	createSpiderBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SquidModel eti
	root b
	tentacles a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createTentacleName (I)Ljava/lang/String; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/StriderModel etj
	LEFT_BOTTOM_BRISTLE i
	LEFT_MIDDLE_BRISTLE h
	LEFT_TOP_BRISTLE g
	RIGHT_BOTTOM_BRISTLE a
	RIGHT_MIDDLE_BRISTLE b
	RIGHT_TOP_BRISTLE f
	body m
	leftBottomBristle s
	leftLeg l
	leftMiddleBristle r
	leftTopBristle q
	rightBottomBristle n
	rightLeg k
	rightMiddleBristle o
	rightTopBristle p
	root j
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Strider;FFFFF)V a
net/minecraft/client/model/TadpoleModel etk
	root a
	tail b
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/frog/Tadpole;FFFFF)V a
net/minecraft/client/model/TridentModel etl
	TEXTURE a
	root b
	createLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/TropicalFishModelA etm
	root a
	tail b
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/TropicalFishModelB etn
	root a
	tail b
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/TurtleModel eto
	EGG_BELLY j
	eggBelly k
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Turtle;FFFFF)V a
net/minecraft/client/model/VexModel etp
	leftWing a
	rightWing b
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Vex;FFFFF)V a
net/minecraft/client/model/VillagerHeadModel etq
	hatVisible (Z)V a
net/minecraft/client/model/VillagerModel etr
	hat g
	hatRim h
	head f
	leftLeg j
	nose a
	rightLeg i
	root b
	createBodyModel ()Lnet/minecraft/client/model/geom/builders/MeshDefinition; b
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
	hatVisible (Z)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/WardenModel ets
	DEFAULT_ARM_X_Y o
	DEFAULT_ARM_Z p
	bioluminescentLayerModelParts t
	body b
	bone a
	head f
	heartLayerModelParts s
	leftArm j
	leftLeg i
	leftRibcage k
	leftTendril h
	pulsatingSpotsLayerModelParts v
	rightArm l
	rightLeg m
	rightRibcage n
	rightTendril g
	root q
	tendrilsLayerModelParts r
	animateHeadLookTarget (FF)V a
	animateIdlePose (F)V a
	animateTendrils (Lnet/minecraft/world/entity/monster/warden/Warden;FF)V a
	animateWalk (FF)V b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getBioluminescentLayerModelParts ()Ljava/util/List; e
	getHeartLayerModelParts ()Ljava/util/List; d
	getPulsatingSpotsLayerModelParts ()Ljava/util/List; f
	getTendrilsLayerModelParts ()Ljava/util/List; c
	resetArmPoses ()V g
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/warden/Warden;FFFFF)V a
net/minecraft/client/model/WitchModel ett
	holdingItem b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	getNose ()Lnet/minecraft/client/model/geom/ModelPart; e
	setHoldingItem (Z)V b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/WitherBossModel etu
	CENTER_HEAD b
	LEFT_HEAD g
	RIBCAGE a
	RIBCAGE_X_ROT_OFFSET h
	RIGHT_HEAD f
	TAIL_X_ROT_OFFSET i
	centerHead k
	leftHead m
	ribcage n
	rightHead l
	root j
	tail o
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/boss/wither/WitherBoss;FFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/boss/wither/WitherBoss;FFFFF)V a
	setupHeadRotation (Lnet/minecraft/world/entity/boss/wither/WitherBoss;Lnet/minecraft/client/model/geom/ModelPart;I)V a
net/minecraft/client/model/WolfModel etv
	LEG_SIZE q
	REAL_HEAD a
	REAL_TAIL f
	UPPER_BODY b
	body i
	head g
	leftFrontLeg m
	leftHindLeg k
	realHead h
	realTail o
	rightFrontLeg l
	rightHindLeg j
	tail n
	upperBody p
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Wolf;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Wolf;FFFFF)V a
net/minecraft/client/model/ZombieModel etw
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
	isAggressive (Lnet/minecraft/world/entity/monster/Zombie;)Z a
net/minecraft/client/model/ZombieVillagerModel etx
	hatRim a
	createArmorLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	hatVisible (Z)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Zombie;FFFFF)V a
net/minecraft/client/model/dragon/DragonHeadModel ety
	head a
	jaw b
	createHeadLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFF)V a
net/minecraft/client/model/geom/EntityModelSet eua
	roots a
	bakeLayer (Lnet/minecraft/client/model/geom/ModelLayerLocation;)Lnet/minecraft/client/model/geom/ModelPart; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/model/geom/LayerDefinitions eub
	FISH_PATTERN_DEFORMATION a
	INNER_ARMOR_DEFORMATION c
	OUTER_ARMOR_DEFORMATION b
	createRoots ()Ljava/util/Map; a
net/minecraft/client/model/geom/ModelLayerLocation euc
	layer b
	model a
	getLayer ()Ljava/lang/String; b
	getModel ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/model/geom/ModelLayers eud
	ALLAY a
	ALL_MODELS ce
	ARMOR_STAND b
	ARMOR_STAND_INNER_ARMOR c
	ARMOR_STAND_OUTER_ARMOR d
	AXOLOTL e
	BANNER f
	BAT g
	BED_FOOT h
	BED_HEAD i
	BEE j
	BELL k
	BLAZE l
	BOOK m
	CAT n
	CAT_COLLAR o
	CAVE_SPIDER p
	CHEST q
	CHEST_MINECART r
	CHICKEN s
	COD t
	COMMAND_BLOCK_MINECART u
	CONDUIT_CAGE v
	CONDUIT_EYE w
	CONDUIT_SHELL x
	CONDUIT_WIND y
	COW z
	CREEPER A
	CREEPER_ARMOR B
	CREEPER_HEAD C
	DEFAULT_LAYER cd
	DOLPHIN D
	DONKEY E
	DOUBLE_CHEST_LEFT F
	DOUBLE_CHEST_RIGHT G
	DRAGON_SKULL H
	DROWNED I
	DROWNED_INNER_ARMOR J
	DROWNED_OUTER_ARMOR K
	DROWNED_OUTER_LAYER L
	ELDER_GUARDIAN M
	ELYTRA N
	ENDERMAN O
	ENDERMITE P
	ENDER_DRAGON Q
	END_CRYSTAL R
	EVOKER S
	EVOKER_FANGS T
	FOX U
	FROG V
	FURNACE_MINECART W
	GHAST X
	GIANT Y
	GIANT_INNER_ARMOR Z
	GIANT_OUTER_ARMOR aa
	GLOW_SQUID ab
	GOAT ac
	GUARDIAN ad
	HOGLIN ae
	HOPPER_MINECART af
	HORSE ag
	HORSE_ARMOR ah
	HUSK ai
	HUSK_INNER_ARMOR aj
	HUSK_OUTER_ARMOR ak
	ILLUSIONER al
	IRON_GOLEM am
	LEASH_KNOT an
	LLAMA ao
	LLAMA_DECOR ap
	LLAMA_SPIT aq
	MAGMA_CUBE ar
	MINECART as
	MOOSHROOM at
	MULE au
	OCELOT av
	PANDA aw
	PARROT ax
	PHANTOM ay
	PIG az
	PIGLIN aA
	PIGLIN_BRUTE aB
	PIGLIN_BRUTE_INNER_ARMOR aC
	PIGLIN_BRUTE_OUTER_ARMOR aD
	PIGLIN_INNER_ARMOR aE
	PIGLIN_OUTER_ARMOR aF
	PIG_SADDLE aG
	PILLAGER aH
	PLAYER aI
	PLAYER_HEAD aJ
	PLAYER_INNER_ARMOR aK
	PLAYER_OUTER_ARMOR aL
	PLAYER_SLIM aM
	PLAYER_SLIM_INNER_ARMOR aN
	PLAYER_SLIM_OUTER_ARMOR aO
	PLAYER_SPIN_ATTACK aP
	POLAR_BEAR aQ
	PUFFERFISH_BIG aR
	PUFFERFISH_MEDIUM aS
	PUFFERFISH_SMALL aT
	RABBIT aU
	RAVAGER aV
	SALMON aW
	SHEEP aX
	SHEEP_FUR aY
	SHIELD aZ
	SHULKER ba
	SHULKER_BULLET bb
	SILVERFISH bc
	SKELETON bd
	SKELETON_HORSE be
	SKELETON_INNER_ARMOR bf
	SKELETON_OUTER_ARMOR bg
	SKELETON_SKULL bh
	SLIME bi
	SLIME_OUTER bj
	SNOW_GOLEM bk
	SPAWNER_MINECART bl
	SPIDER bm
	SQUID bn
	STRAY bo
	STRAY_INNER_ARMOR bp
	STRAY_OUTER_ARMOR bq
	STRAY_OUTER_LAYER br
	STRIDER bs
	STRIDER_SADDLE bt
	TADPOLE bu
	TNT_MINECART bv
	TRADER_LLAMA bw
	TRIDENT bx
	TROPICAL_FISH_LARGE by
	TROPICAL_FISH_LARGE_PATTERN bz
	TROPICAL_FISH_SMALL bA
	TROPICAL_FISH_SMALL_PATTERN bB
	TURTLE bC
	VEX bD
	VILLAGER bE
	VINDICATOR bF
	WANDERING_TRADER bH
	WARDEN bG
	WITCH bI
	WITHER bJ
	WITHER_ARMOR bK
	WITHER_SKELETON bL
	WITHER_SKELETON_INNER_ARMOR bM
	WITHER_SKELETON_OUTER_ARMOR bN
	WITHER_SKELETON_SKULL bO
	WITHER_SKULL bP
	WOLF bQ
	ZOGLIN bR
	ZOMBIE bS
	ZOMBIE_HEAD bT
	ZOMBIE_HORSE bU
	ZOMBIE_INNER_ARMOR bV
	ZOMBIE_OUTER_ARMOR bW
	ZOMBIE_VILLAGER bX
	ZOMBIE_VILLAGER_INNER_ARMOR bY
	ZOMBIE_VILLAGER_OUTER_ARMOR bZ
	ZOMBIFIED_PIGLIN ca
	ZOMBIFIED_PIGLIN_INNER_ARMOR cb
	ZOMBIFIED_PIGLIN_OUTER_ARMOR cc
	createBoatModelName (Lnet/minecraft/world/entity/vehicle/Boat$Type;)Lnet/minecraft/client/model/geom/ModelLayerLocation; a
	createChestBoatModelName (Lnet/minecraft/world/entity/vehicle/Boat$Type;)Lnet/minecraft/client/model/geom/ModelLayerLocation; b
	createLocation (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; b
	createSignModelName (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/model/geom/ModelLayerLocation; a
	getKnownLocations ()Ljava/util/stream/Stream; a
	register (Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; a
	register (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; a
	registerInnerArmor (Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; b
	registerOuterArmor (Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; c
net/minecraft/client/model/geom/ModelPart eue
	DEFAULT_SCALE a
	children n
	cubes m
	initialPose o
	skipDraw l
	visible k
	x b
	xRot e
	xScale h
	y c
	yRot f
	yScale i
	z d
	zRot g
	zScale j
	compile (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	copyFrom (Lnet/minecraft/client/model/geom/ModelPart;)V a
	getAllParts ()Ljava/util/stream/Stream; e
	getChild (Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelPart; b
	getInitialPose ()Lnet/minecraft/client/model/geom/PartPose; b
	getRandomCube (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/client/model/geom/ModelPart$Cube; a
	hasChild (Ljava/lang/String;)Z a
	isEmpty ()Z d
	loadPose (Lnet/minecraft/client/model/geom/PartPose;)V b
	offsetPos (Lcom/mojang/math/Vector3f;)V a
	offsetRotation (Lcom/mojang/math/Vector3f;)V b
	offsetScale (Lcom/mojang/math/Vector3f;)V c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	resetPose ()V c
	setInitialPose (Lnet/minecraft/client/model/geom/PartPose;)V a
	setPos (FFF)V a
	setRotation (FFF)V b
	storePose ()Lnet/minecraft/client/model/geom/PartPose; a
	translateAndRotate (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	visit (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/model/geom/ModelPart$Visitor;)V a
	visit (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/model/geom/ModelPart$Visitor;Ljava/lang/String;)V a
net/minecraft/client/model/geom/ModelPart$Cube eue$a
	maxX d
	maxY e
	maxZ f
	minX a
	minY b
	minZ c
	polygons g
	compile (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/geom/ModelPart$Polygon eue$b
	normal b
	vertices a
net/minecraft/client/model/geom/ModelPart$Vertex eue$c
	pos a
	u b
	v c
	remap (FF)Lnet/minecraft/client/model/geom/ModelPart$Vertex; a
net/minecraft/client/model/geom/ModelPart$Visitor eue$d
net/minecraft/client/model/geom/PartNames euf
	ARMS P
	BACK_FIN T
	BEAK S
	BODY Z
	BONE as
	BOTTOM_FIN d
	CROAKING_BODY ag
	CUBE R
	EYES an
	HAT Y
	HAT_RIM aa
	HEAD X
	JACKET ab
	JAW N
	LEFT_ARM h
	LEFT_BLUE_FIN f
	LEFT_CHEST H
	LEFT_EAR p
	LEFT_EYE L
	LEFT_FIN a
	LEFT_FOOT al
	LEFT_FRONT_FOOT z
	LEFT_FRONT_LEG v
	LEFT_FRONT_LEG_TIP D
	LEFT_GILLS ad
	LEFT_HAND aj
	LEFT_HIND_FOOT x
	LEFT_HIND_LEG t
	LEFT_HIND_LEG_TIP B
	LEFT_HORN J
	LEFT_LEG r
	LEFT_LID F
	LEFT_RIBCAGE ar
	LEFT_TENDRIL ap
	LEFT_WING j
	LEFT_WING_BASE l
	LEFT_WING_TIP n
	MANE U
	MOUTH W
	NECK V
	NOSE O
	RIGHT_ARM i
	RIGHT_BLUE_FIN g
	RIGHT_CHEST I
	RIGHT_EAR q
	RIGHT_EYE M
	RIGHT_FIN b
	RIGHT_FOOT am
	RIGHT_FRONT_FOOT A
	RIGHT_FRONT_LEG w
	RIGHT_FRONT_LEG_TIP E
	RIGHT_GILLS ae
	RIGHT_HAND ak
	RIGHT_HIND_FOOT y
	RIGHT_HIND_LEG u
	RIGHT_HIND_LEG_TIP C
	RIGHT_HORN K
	RIGHT_LEG s
	RIGHT_LID G
	RIGHT_RIBCAGE aq
	RIGHT_TENDRIL ao
	RIGHT_WING k
	RIGHT_WING_BASE m
	RIGHT_WING_TIP o
	ROOT af
	TAIL Q
	TAIL_FIN e
	TONGUE ah
	TONGUE_R1 ai
	TOP_FIN c
	TOP_GILLS ac
net/minecraft/client/model/geom/PartPose eug
	ZERO a
	x b
	xRot e
	y c
	yRot f
	z d
	zRot g
	offset (FFF)Lnet/minecraft/client/model/geom/PartPose; a
	offsetAndRotation (FFFFFF)Lnet/minecraft/client/model/geom/PartPose; a
	rotation (FFF)Lnet/minecraft/client/model/geom/PartPose; b
net/minecraft/client/model/geom/builders/CubeDefinition euh
	comment a
	dimensions c
	grow d
	mirror e
	origin b
	texCoord f
	texScale g
	bake (II)Lnet/minecraft/client/model/geom/ModelPart$Cube; a
net/minecraft/client/model/geom/builders/CubeDeformation eui
	NONE a
	growX b
	growY c
	growZ d
	extend (F)Lnet/minecraft/client/model/geom/builders/CubeDeformation; a
	extend (FFF)Lnet/minecraft/client/model/geom/builders/CubeDeformation; a
net/minecraft/client/model/geom/builders/CubeListBuilder euj
	cubes a
	mirror d
	xTexOffs b
	yTexOffs c
	addBox (FFFFFF)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (FFFFFFLnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (FFFFFFLnet/minecraft/client/model/geom/builders/CubeDeformation;FF)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (FFFFFFZ)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (Ljava/lang/String;FFFFFF)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (Ljava/lang/String;FFFFFFLnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (Ljava/lang/String;FFFIIIII)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (Ljava/lang/String;FFFIIILnet/minecraft/client/model/geom/builders/CubeDeformation;II)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	create ()Lnet/minecraft/client/model/geom/builders/CubeListBuilder; c
	getCubes ()Ljava/util/List; b
	mirror ()Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	mirror (Z)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	texOffs (II)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
net/minecraft/client/model/geom/builders/LayerDefinition euk
	material b
	mesh a
	bakeRoot ()Lnet/minecraft/client/model/geom/ModelPart; a
	create (Lnet/minecraft/client/model/geom/builders/MeshDefinition;II)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
net/minecraft/client/model/geom/builders/MaterialDefinition eul
	xTexSize a
	yTexSize b
net/minecraft/client/model/geom/builders/MeshDefinition eum
	root a
	getRoot ()Lnet/minecraft/client/model/geom/builders/PartDefinition; a
net/minecraft/client/model/geom/builders/PartDefinition eun
	children c
	cubes a
	partPose b
	addOrReplaceChild (Ljava/lang/String;Lnet/minecraft/client/model/geom/builders/CubeListBuilder;Lnet/minecraft/client/model/geom/PartPose;)Lnet/minecraft/client/model/geom/builders/PartDefinition; a
	bake (II)Lnet/minecraft/client/model/geom/ModelPart; a
	getChild (Ljava/lang/String;)Lnet/minecraft/client/model/geom/builders/PartDefinition; a
net/minecraft/client/model/geom/builders/UVPair euo
	u a
	v b
	u ()F a
	v ()F b
net/minecraft/client/multiplayer/ClientAdvancements eus
	LOGGER a
	advancements c
	listener e
	minecraft b
	progress d
	selectedTab f
	getAdvancements ()Lnet/minecraft/advancements/AdvancementList; a
	setListener (Lnet/minecraft/client/multiplayer/ClientAdvancements$Listener;)V a
	setSelectedTab (Lnet/minecraft/advancements/Advancement;Z)V a
	update (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
net/minecraft/client/multiplayer/ClientAdvancements$Listener eus$a
	onSelectedTabChanged (Lnet/minecraft/advancements/Advancement;)V e
	onUpdateAdvancementProgress (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V a
net/minecraft/client/multiplayer/ClientChunkCache eut
	LOGGER a
	emptyChunk b
	level e
	lightEngine c
	storage d
	calculateStorageRange (I)I b
	drop (II)V d
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/LevelChunk; b
	getLevel ()Lnet/minecraft/world/level/BlockGetter; p
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; o
	getLoadedChunksCount ()I i
	isValidChunk (Lnet/minecraft/world/level/chunk/LevelChunk;II)Z a
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
	replaceWithPacketData (IILnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Consumer;)Lnet/minecraft/world/level/chunk/LevelChunk; a
	tick (Ljava/util/function/BooleanSupplier;Z)V a
	updateViewCenter (II)V e
	updateViewRadius (I)V a
net/minecraft/client/multiplayer/ClientChunkCache$Storage eut$a
	chunkCount g
	chunkRadius c
	chunks b
	viewCenterX e
	viewCenterZ f
	viewRange d
	dumpChunks (Ljava/lang/String;)V a
	getChunk (I)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getIndex (II)I a
	inRange (II)Z b
	replace (ILnet/minecraft/world/level/chunk/LevelChunk;)V a
	replace (ILnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/world/level/chunk/LevelChunk; a
net/minecraft/client/multiplayer/ClientHandshakePacketListenerImpl euu
	LOGGER a
	connection e
	localGameProfile f
	minecraft b
	parent c
	updateStatus d
	authenticateServer (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	getConnection ()Lnet/minecraft/network/Connection; a
	getMinecraftSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; c
	handleCompression (Lnet/minecraft/network/protocol/login/ClientboundLoginCompressionPacket;)V a
	handleCustomQuery (Lnet/minecraft/network/protocol/login/ClientboundCustomQueryPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket;)V a
	handleGameProfile (Lnet/minecraft/network/protocol/login/ClientboundGameProfilePacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ClientboundHelloPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/client/multiplayer/ClientLevel euv
	CLOUD_COLOR K
	FLUID_PARTICLE_SPAWN_OFFSET b
	LIGHT_UPDATE_QUEUE_SIZE_THRESHOLD z
	LOGGER a
	MARKER_PARTICLE_ITEMS R
	NORMAL_LIGHT_UPDATES_PER_FRAME c
	blockStatePredictionHandler Q
	chunkSource N
	clientLevelData E
	connection C
	effects F
	entityStorage B
	levelRenderer D
	lightUpdateQueue O
	mapData J
	minecraft G
	players H
	scoreboard I
	serverSimulationDistance P
	skyFlashTime L
	tickingEntities A
	tintCaches M
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V b
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V b
	addDestroyBlockEffect (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	addEntity (ILnet/minecraft/world/entity/Entity;)V b
	addMapData (Ljava/util/Map;)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	addPlayer (ILnet/minecraft/client/player/AbstractClientPlayer;)V a
	animateTick (III)V b
	calculateBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I b
	clearTintCaches ()V g
	createFireworks (DDDDDDLnet/minecraft/nbt/CompoundTag;)V a
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	disconnect ()V T
	doAnimateTick (IIIILnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos$MutableBlockPos;)V a
	effects ()Lnet/minecraft/client/renderer/DimensionSpecialEffects; d
	entitiesForRendering ()Ljava/lang/Iterable; e
	fillReportDetails (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReportCategory; a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)V a
	gatherChunkSourceStats ()Ljava/lang/String; G
	getAllMapData ()Ljava/util/Map; l
	getBlockStatePredictionHandler ()Lnet/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler; a
	getBlockTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; K
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getChunkSource ()Lnet/minecraft/client/multiplayer/ClientChunkCache; i
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; I
	getCloudColor (F)Lnet/minecraft/world/phys/Vec3; h
	getEntities ()Lnet/minecraft/world/level/entity/LevelEntityGetter; F
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getEntityCount ()I h
	getFluidTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; J
	getFreeMapId ()I u
	getLevelData ()Lnet/minecraft/client/multiplayer/ClientLevel$ClientLevelData; k
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; n_
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getMarkerParticleTarget ()Lnet/minecraft/world/level/block/Block; p
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; q
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; H
	getServerSimulationDistance ()I m
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getSkyColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	getSkyDarken (F)F g
	getSkyFlashTime ()I j
	getStarBrightness (F)F i
	getUncachedNoiseBiome (III)Lnet/minecraft/core/Holder; a
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	handleBlockChangedAck (I)V b
	hasChunk (II)Z b
	isLightUpdateQueueEmpty ()Z c
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	onChunkLoaded (Lnet/minecraft/world/level/ChunkPos;)V a
	playLocalSound (DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playLocalSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playSeededSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFJ)V a
	playSeededSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFJ)V a
	playSound (DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZJ)V a
	players ()Ljava/util/List; w
	pollLightUpdates ()V b
	putNonPlayerEntity (ILnet/minecraft/world/entity/Entity;)V a
	queueLightUpdate (Ljava/lang/Runnable;)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; s
	removeEntity (ILnet/minecraft/world/entity/Entity$RemovalReason;)V a
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendPacketToServer (Lnet/minecraft/network/protocol/Packet;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	setBlocksDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V b
	setDayTime (J)V c
	setDefaultSpawnPos (Lnet/minecraft/core/BlockPos;F)V a
	setGameTime (J)V b
	setLightReady (II)V g
	setMapData (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setScoreboard (Lnet/minecraft/world/scores/Scoreboard;)V a
	setSectionDirtyWithNeighbors (III)V c
	setServerSimulationDistance (I)V h
	setServerVerifiedBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)V b
	setSkyFlashTime (I)V c
	shouldTickDeath (Lnet/minecraft/world/entity/Entity;)Z h
	spawnFluidParticle (DDDDDLnet/minecraft/core/particles/ParticleOptions;)V a
	spawnParticle (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/world/phys/shapes/VoxelShape;D)V a
	syncBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tickEntities ()V f
	tickNonPassenger (Lnet/minecraft/world/entity/Entity;)V a
	tickPassenger (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)V a
	tickTime ()V o
	trySpawnDripParticles (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/particles/ParticleOptions;Z)V a
	unload (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
net/minecraft/client/multiplayer/ClientLevel$ClientLevelData euv$a
	dayTime i
	difficulty k
	difficultyLocked l
	gameRules b
	gameTime h
	hardcore a
	isFlat c
	raining j
	spawnAngle g
	xSpawn d
	ySpawn e
	zSpawn f
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getClearColorScale ()F g
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getHorizonHeight (Lnet/minecraft/world/level/LevelHeightAccessor;)D a
	getSpawnAngle ()F d
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isRaining ()Z k
	isThundering ()Z i
	setDayTime (J)V b
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V a
	setGameTime (J)V a
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/client/multiplayer/ClientLevel$EntityCallbacks euv$b
	onCreated (Ljava/lang/Object;)V g
	onCreated (Lnet/minecraft/world/entity/Entity;)V a
	onDestroyed (Ljava/lang/Object;)V f
	onDestroyed (Lnet/minecraft/world/entity/Entity;)V b
	onSectionChange (Ljava/lang/Object;)V a
	onSectionChange (Lnet/minecraft/world/entity/Entity;)V g
	onTickingEnd (Ljava/lang/Object;)V d
	onTickingEnd (Lnet/minecraft/world/entity/Entity;)V d
	onTickingStart (Ljava/lang/Object;)V e
	onTickingStart (Lnet/minecraft/world/entity/Entity;)V c
	onTrackingEnd (Ljava/lang/Object;)V b
	onTrackingEnd (Lnet/minecraft/world/entity/Entity;)V f
	onTrackingStart (Ljava/lang/Object;)V c
	onTrackingStart (Lnet/minecraft/world/entity/Entity;)V e
net/minecraft/client/multiplayer/ClientPacketListener euw
	GENERIC_DISCONNECT_MESSAGE b
	LOGGER a
	UNACKNOWLEDGED_MESSAGES_THRESHOLD e
	UNSECURE_SERVER_TOAST_TITLE c
	UNSERURE_SERVER_TOAST d
	advancements m
	callbackScreen h
	commands s
	connection f
	debugQueryHandler o
	id u
	lastSeenMessagesTracker z
	lastUnacknowledgedReceivedMessage A
	level j
	levelData k
	levels v
	localGameProfile g
	minecraft i
	playerInfoMap l
	random r
	recipeManager t
	registryAccess w
	serverChunkRadius p
	serverSimulationDistance q
	signedMessageEncoder y
	suggestionsProvider n
	telemetryManager x
	unacknowledgedReceivedMessageCount B
	applyLightData (IILnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData;)V b
	cleanup ()V d
	downloadCallback (Ljava/util/concurrent/CompletableFuture;)V a
	enableChunkLight (Lnet/minecraft/world/level/chunk/LevelChunk;II)V a
	findTotem (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; a
	generateMessageAcknowledgements ()Lnet/minecraft/network/chat/LastSeenMessages$Update; q
	getAdvancements ()Lnet/minecraft/client/multiplayer/ClientAdvancements; i
	getCommands ()Lcom/mojang/brigadier/CommandDispatcher; j
	getConnection ()Lnet/minecraft/network/Connection; a
	getDebugQueryHandler ()Lnet/minecraft/client/DebugQueryHandler; l
	getId ()Ljava/util/UUID; m
	getLevel ()Lnet/minecraft/client/multiplayer/ClientLevel; k
	getLocalGameProfile ()Lcom/mojang/authlib/GameProfile; h
	getOnlinePlayerIds ()Ljava/util/Collection; g
	getOnlinePlayers ()Ljava/util/Collection; f
	getPlayerInfo (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/PlayerInfo; a
	getPlayerInfo (Ljava/util/UUID;)Lnet/minecraft/client/multiplayer/PlayerInfo; a
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; e
	getSuggestionsProvider ()Lnet/minecraft/client/multiplayer/ClientSuggestionProvider; c
	handleAddEntity (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	handleAddExperienceOrb (Lnet/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket;)V a
	handleAddObjective (Lnet/minecraft/network/protocol/game/ClientboundSetObjectivePacket;)V a
	handleAddOrRemoveRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket;)V a
	handleAddPlayer (Lnet/minecraft/network/protocol/game/ClientboundAddPlayerPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ClientboundAnimatePacket;)V a
	handleAwardStats (Lnet/minecraft/network/protocol/game/ClientboundAwardStatsPacket;)V a
	handleBlockChangedAck (Lnet/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket;)V a
	handleBlockDestruction (Lnet/minecraft/network/protocol/game/ClientboundBlockDestructionPacket;)V a
	handleBlockEntityData (Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket;)V a
	handleBlockEvent (Lnet/minecraft/network/protocol/game/ClientboundBlockEventPacket;)V a
	handleBlockUpdate (Lnet/minecraft/network/protocol/game/ClientboundBlockUpdatePacket;)V a
	handleBossUpdate (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket;)V a
	handleChatPreview (Lnet/minecraft/network/protocol/game/ClientboundChatPreviewPacket;)V a
	handleChunkBlocksUpdate (Lnet/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket;)V a
	handleCommandSuggestions (Lnet/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket;)V a
	handleCommands (Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ClientboundContainerClosePacket;)V a
	handleContainerContent (Lnet/minecraft/network/protocol/game/ClientboundContainerSetContentPacket;)V a
	handleContainerSetData (Lnet/minecraft/network/protocol/game/ClientboundContainerSetDataPacket;)V a
	handleContainerSetSlot (Lnet/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket;)V a
	handleCustomChatCompletions (Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ClientboundCustomPayloadPacket;)V a
	handleCustomSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundCustomSoundPacket;)V a
	handleDeleteChat (Lnet/minecraft/network/protocol/game/ClientboundDeleteChatPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/game/ClientboundDisconnectPacket;)V a
	handleEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundEntityEventPacket;)V a
	handleEntityLinkPacket (Lnet/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket;)V a
	handleExplosion (Lnet/minecraft/network/protocol/game/ClientboundExplodePacket;)V a
	handleForgetLevelChunk (Lnet/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket;)V a
	handleGameEvent (Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket;)V a
	handleHorseScreenOpen (Lnet/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket;)V a
	handleInitializeBorder (Lnet/minecraft/network/protocol/game/ClientboundInitializeBorderPacket;)V a
	handleItemCooldown (Lnet/minecraft/network/protocol/game/ClientboundCooldownPacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ClientboundKeepAlivePacket;)V a
	handleLevelChunkWithLight (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket;)V a
	handleLevelEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelEventPacket;)V a
	handleLightUpdatePacket (Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacket;)V a
	handleLogin (Lnet/minecraft/network/protocol/game/ClientboundLoginPacket;)V a
	handleLookAt (Lnet/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket;)V a
	handleMapItemData (Lnet/minecraft/network/protocol/game/ClientboundMapItemDataPacket;)V a
	handleMerchantOffers (Lnet/minecraft/network/protocol/game/ClientboundMerchantOffersPacket;)V a
	handleMoveEntity (Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ClientboundPlayerPositionPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ClientboundMoveVehiclePacket;)V a
	handleOpenBook (Lnet/minecraft/network/protocol/game/ClientboundOpenBookPacket;)V a
	handleOpenScreen (Lnet/minecraft/network/protocol/game/ClientboundOpenScreenPacket;)V a
	handleOpenSignEditor (Lnet/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket;)V a
	handleParticleEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelParticlesPacket;)V a
	handlePing (Lnet/minecraft/network/protocol/game/ClientboundPingPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket;)V a
	handlePlayerChat (Lnet/minecraft/network/protocol/game/ClientboundPlayerChatPacket;)V a
	handlePlayerChatHeader (Lnet/minecraft/network/protocol/game/ClientboundPlayerChatHeaderPacket;)V a
	handlePlayerCombatEnd (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket;)V a
	handlePlayerCombatEnter (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket;)V a
	handlePlayerCombatKill (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket;)V a
	handlePlayerInfo (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket;)V a
	handleRemoveEntities (Lnet/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket;)V a
	handleRemoveMobEffect (Lnet/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket;)V a
	handleResourcePack (Lnet/minecraft/network/protocol/game/ClientboundResourcePackPacket;)V a
	handleRespawn (Lnet/minecraft/network/protocol/game/ClientboundRespawnPacket;)V a
	handleRotateMob (Lnet/minecraft/network/protocol/game/ClientboundRotateHeadPacket;)V a
	handleSelectAdvancementsTab (Lnet/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket;)V a
	handleServerData (Lnet/minecraft/network/protocol/game/ClientboundServerDataPacket;)V a
	handleSetBorderCenter (Lnet/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket;)V a
	handleSetBorderLerpSize (Lnet/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket;)V a
	handleSetBorderSize (Lnet/minecraft/network/protocol/game/ClientboundSetBorderSizePacket;)V a
	handleSetBorderWarningDelay (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket;)V a
	handleSetBorderWarningDistance (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket;)V a
	handleSetCamera (Lnet/minecraft/network/protocol/game/ClientboundSetCameraPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket;)V a
	handleSetChunkCacheCenter (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket;)V a
	handleSetChunkCacheRadius (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket;)V a
	handleSetDisplayChatPreview (Lnet/minecraft/network/protocol/game/ClientboundSetDisplayChatPreviewPacket;)V a
	handleSetDisplayObjective (Lnet/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket;)V a
	handleSetEntityData (Lnet/minecraft/network/protocol/game/ClientboundSetEntityDataPacket;)V a
	handleSetEntityMotion (Lnet/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket;)V a
	handleSetEntityPassengersPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPassengersPacket;)V a
	handleSetEquipment (Lnet/minecraft/network/protocol/game/ClientboundSetEquipmentPacket;)V a
	handleSetExperience (Lnet/minecraft/network/protocol/game/ClientboundSetExperiencePacket;)V a
	handleSetHealth (Lnet/minecraft/network/protocol/game/ClientboundSetHealthPacket;)V a
	handleSetPlayerTeamPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket;)V a
	handleSetScore (Lnet/minecraft/network/protocol/game/ClientboundSetScorePacket;)V a
	handleSetSimulationDistance (Lnet/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket;)V a
	handleSetSpawn (Lnet/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket;)V a
	handleSetTime (Lnet/minecraft/network/protocol/game/ClientboundSetTimePacket;)V a
	handleSoundEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundEntityPacket;)V a
	handleSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundPacket;)V a
	handleStopSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundStopSoundPacket;)V a
	handleSystemChat (Lnet/minecraft/network/protocol/game/ClientboundSystemChatPacket;)V a
	handleTabListCustomisation (Lnet/minecraft/network/protocol/game/ClientboundTabListPacket;)V a
	handleTagQueryPacket (Lnet/minecraft/network/protocol/game/ClientboundTagQueryPacket;)V a
	handleTakeItemEntity (Lnet/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket;)V a
	handleTeleportEntity (Lnet/minecraft/network/protocol/game/ClientboundTeleportEntityPacket;)V a
	handleTitlesClear (Lnet/minecraft/network/protocol/game/ClientboundClearTitlesPacket;)V a
	handleUpdateAdvancementsPacket (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
	handleUpdateAttributes (Lnet/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket;)V a
	handleUpdateMobEffect (Lnet/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket;)V a
	handleUpdateRecipes (Lnet/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket;)V a
	handleUpdateTags (Lnet/minecraft/network/protocol/game/ClientboundUpdateTagsPacket;)V a
	levels ()Ljava/util/Set; n
	markMessageAsProcessed (Lnet/minecraft/network/chat/PlayerChatMessage;Z)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	parseResourcePackUrl (Ljava/lang/String;)Ljava/net/URL; b
	postAddEntitySoundInstance (Lnet/minecraft/world/entity/Entity;)V a
	preparePackPrompt (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	queueLightUpdate (IILnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData;)V a
	queueLightUpdate (Lnet/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket;)V b
	readSectionList (IILnet/minecraft/world/level/lighting/LevelLightEngine;Lnet/minecraft/world/level/LightLayer;Ljava/util/BitSet;Ljava/util/BitSet;Ljava/util/Iterator;Z)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; o
	send (Lnet/minecraft/network/protocol/Packet;)V a
	send (Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action;)V a
	setActionBarText (Lnet/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket;)V a
	setSubtitleText (Lnet/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket;)V a
	setTitleText (Lnet/minecraft/network/protocol/game/ClientboundSetTitleTextPacket;)V a
	setTitlesAnimation (Lnet/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket;)V a
	signedMessageEncoder ()Lnet/minecraft/network/chat/SignedMessageChain$Encoder; p
	updateLevelChunk (IILnet/minecraft/network/protocol/game/ClientboundLevelChunkPacketData;)V a
	updateTagsForRegistry (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/tags/TagNetworkSerialization$NetworkPayload;)V a
net/minecraft/client/multiplayer/ClientSuggestionProvider eux
	connection a
	customCompletionSuggestions e
	minecraft b
	pendingSuggestionsFuture d
	pendingSuggestionsId c
	completeCustomSuggestions (ILcom/mojang/brigadier/suggestion/Suggestions;)V a
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; a
	getAbsoluteCoordinates ()Ljava/util/Collection; z
	getAllTeams ()Ljava/util/Collection; r
	getAvailableSoundEvents ()Ljava/util/Collection; s
	getCustomTabSugggestions ()Ljava/util/Collection; w
	getOnlinePlayerNames ()Ljava/util/Collection; q
	getRecipeNames ()Ljava/util/stream/Stream; t
	getRelevantCoordinates ()Ljava/util/Collection; y
	getSelectedEntities ()Ljava/util/Collection; x
	hasPermission (I)Z c
	levels ()Ljava/util/Set; u
	modifyCustomCompletions (Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action;Ljava/util/List;)V a
	prettyPrint (D)Ljava/lang/String; a
	prettyPrint (I)Ljava/lang/String; a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; v
	suggestRegistryElements (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/multiplayer/MultiPlayerGameMode euy
	LOGGER a
	carriedIndex l
	connection c
	destroyBlockPos d
	destroyDelay h
	destroyProgress f
	destroyTicks g
	destroyingItem e
	isDestroying i
	localPlayerMode j
	minecraft b
	previousLocalPlayerMode k
	adjustPlayer (Lnet/minecraft/world/entity/player/Player;)V a
	attack (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;)V a
	canHurtPlayer ()Z a
	continueDestroyBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	createPlayer (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/stats/StatsCounter;Lnet/minecraft/client/ClientRecipeBook;)Lnet/minecraft/client/player/LocalPlayer; a
	createPlayer (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/stats/StatsCounter;Lnet/minecraft/client/ClientRecipeBook;ZZ)Lnet/minecraft/client/player/LocalPlayer; a
	destroyBlock (Lnet/minecraft/core/BlockPos;)Z a
	ensureHasSentCarriedItem ()V n
	getPickRange ()F c
	getPlayerMode ()Lnet/minecraft/world/level/GameType; l
	getPreviousPlayerMode ()Lnet/minecraft/world/level/GameType; k
	handleCreativeModeItemAdd (Lnet/minecraft/world/item/ItemStack;I)V a
	handleCreativeModeItemDrop (Lnet/minecraft/world/item/ItemStack;)V a
	handleInventoryButtonClick (II)V a
	handleInventoryMouseClick (IIILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)V a
	handlePickItem (I)V a
	handlePlaceRecipe (ILnet/minecraft/world/item/crafting/Recipe;Z)V a
	hasExperience ()Z e
	hasFarPickRange ()Z h
	hasInfiniteItems ()Z g
	hasMissTime ()Z f
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/EntityHitResult;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAlwaysFlying ()Z j
	isDestroying ()Z m
	isServerControlledInventory ()Z i
	performUseItemOn (Lnet/minecraft/client/player/LocalPlayer;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; b
	releaseUsingItem (Lnet/minecraft/world/entity/player/Player;)V b
	sameDestroyTarget (Lnet/minecraft/core/BlockPos;)Z b
	setLocalMode (Lnet/minecraft/world/level/GameType;)V a
	setLocalMode (Lnet/minecraft/world/level/GameType;Lnet/minecraft/world/level/GameType;)V a
	startDestroyBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	startPrediction (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/client/multiplayer/prediction/PredictiveAction;)V a
	stopDestroyBlock ()V b
	tick ()V d
	useItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/client/player/LocalPlayer;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/client/multiplayer/PlayerInfo euz
	LOGGER a
	displayHealth j
	gameMode d
	healthBlinkTime l
	lastHealth i
	lastHealthTime k
	latency e
	messageValidator o
	pendingTextures f
	profile b
	profilePublicKey n
	renderVisibilityId m
	skinModel g
	tabListDisplayName h
	textureLocations c
	getCapeLocation ()Lnet/minecraft/resources/ResourceLocation; j
	getDisplayHealth ()I p
	getElytraLocation ()Lnet/minecraft/resources/ResourceLocation; k
	getGameMode ()Lnet/minecraft/world/level/GameType; d
	getHealthBlinkTime ()J r
	getLastHealth ()I o
	getLastHealthTime ()J q
	getLatency ()I e
	getMessageValidator ()Lnet/minecraft/network/chat/SignedMessageValidator; c
	getModelName ()Ljava/lang/String; h
	getProfile ()Lcom/mojang/authlib/GameProfile; a
	getProfilePublicKey ()Lnet/minecraft/world/entity/player/ProfilePublicKey; b
	getRenderVisibilityId ()J s
	getSkinLocation ()Lnet/minecraft/resources/ResourceLocation; i
	getTabListDisplayName ()Lnet/minecraft/network/chat/Component; n
	getTeam ()Lnet/minecraft/world/scores/PlayerTeam; l
	isCapeLoaded ()Z f
	isSkinLoaded ()Z g
	registerTextures ()V m
	setDisplayHealth (I)V c
	setGameMode (Lnet/minecraft/world/level/GameType;)V a
	setHealthBlinkTime (J)V b
	setLastHealth (I)V b
	setLastHealthTime (J)V a
	setLatency (I)V a
	setRenderVisibilityId (J)V c
	setTabListDisplayName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/client/multiplayer/ProfileKeyPairManager eva
	LOGGER a
	PROFILE_KEY_PAIR_DIR b
	keyPair e
	profileKeyPairPath d
	userApiService c
	fetchProfileKeyPair (Lcom/mojang/authlib/minecraft/UserApiService;)Lnet/minecraft/world/entity/player/ProfileKeyPair; a
	parsePublicKey (Lcom/mojang/authlib/yggdrasil/response/KeyPairResponse;)Lnet/minecraft/world/entity/player/ProfilePublicKey$Data; a
	preparePublicKey ()Ljava/util/concurrent/CompletableFuture; a
	profilePublicKey ()Ljava/util/Optional; c
	readOrFetchProfileKeyPair (Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture; a
	readProfileKeyPair ()Ljava/util/Optional; d
	signer ()Lnet/minecraft/util/Signer; b
	writeProfileKeyPair (Lnet/minecraft/world/entity/player/ProfileKeyPair;)V a
net/minecraft/client/multiplayer/ProfileKeyPairManager$Result eva$a
	keyPair a
	signer b
	keyPair ()Lnet/minecraft/world/entity/player/ProfileKeyPair; a
	signer ()Lnet/minecraft/util/Signer; b
net/minecraft/client/multiplayer/ServerData evb
	LOGGER j
	chatPreview n
	chatPreviewEnabled o
	enforcesSecureChat p
	iconB64 l
	ip b
	lan m
	motd d
	name a
	packStatus k
	ping e
	pinged h
	playerList i
	protocol f
	status c
	version g
	copyFrom (Lnet/minecraft/client/multiplayer/ServerData;)V b
	copyNameIconFrom (Lnet/minecraft/client/multiplayer/ServerData;)V a
	enforcesSecureChat ()Z g
	getChatPreview ()Lnet/minecraft/client/multiplayer/ServerData$ChatPreview; e
	getIconB64 ()Ljava/lang/String; c
	getResourcePackStatus ()Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus; b
	isLan ()Z d
	parseFavicon (Ljava/lang/String;)Ljava/lang/String; a
	previewsChat ()Z f
	read (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/client/multiplayer/ServerData; a
	setChatPreviewEnabled (Z)V b
	setEnforcesSecureChat (Z)V c
	setIconB64 (Ljava/lang/String;)V b
	setPreviewsChat (Z)V a
	setResourcePackStatus (Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus;)V a
	write ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/client/multiplayer/ServerData$ChatPreview evb$a
	CODEC a
	acknowledged b
	toastShown c
	acknowledge ()V a
	copy ()Lnet/minecraft/client/multiplayer/ServerData$ChatPreview; d
	isAcknowledged ()Z c
	showToast ()Z b
net/minecraft/client/multiplayer/ServerData$ServerPackStatus evb$b
	$VALUES e
	DISABLED b
	ENABLED a
	PROMPT c
	name d
	$values ()[Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus; b
	getName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/multiplayer/ServerList evc
	IO_MAILBOX b
	LOGGER a
	MAX_HIDDEN_SERVERS c
	hiddenServerList f
	minecraft d
	serverList e
	add (Lnet/minecraft/client/multiplayer/ServerData;Z)V a
	get (I)Lnet/minecraft/client/multiplayer/ServerData; a
	get (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/ServerData; a
	load ()V a
	remove (Lnet/minecraft/client/multiplayer/ServerData;)V a
	replace (ILnet/minecraft/client/multiplayer/ServerData;)V a
	save ()V b
	saveSingleServer (Lnet/minecraft/client/multiplayer/ServerData;)V b
	set (Lnet/minecraft/client/multiplayer/ServerData;Ljava/util/List;)Z a
	size ()I c
	swap (II)V a
	unhide (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/ServerData; b
net/minecraft/client/multiplayer/ServerStatusPinger evd
	CANT_CONNECT_MESSAGE c
	LOGGER b
	SPLITTER a
	connections d
	formatPlayerCount (II)Lnet/minecraft/network/chat/Component; a
	onPingFailed (Lnet/minecraft/network/chat/Component;Lnet/minecraft/client/multiplayer/ServerData;)V a
	pingLegacyServer (Ljava/net/InetSocketAddress;Lnet/minecraft/client/multiplayer/ServerData;)V a
	pingServer (Lnet/minecraft/client/multiplayer/ServerData;Ljava/lang/Runnable;)V a
	removeAll ()V b
	tick ()V a
net/minecraft/client/multiplayer/chat/ChatListener eve
	CHAT_VALIDATION_FAILED_ERROR a
	delayedMessageQueue c
	messageDelay d
	minecraft b
	previousMessageTime e
	acceptNextDelayedMessage ()V b
	clearQueue ()V d
	evaluateTrustLevel (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/Component;Lnet/minecraft/client/multiplayer/PlayerInfo;Ljava/time/Instant;)Lnet/minecraft/client/multiplayer/chat/ChatTrustLevel; a
	guessChatUUID (Lnet/minecraft/network/chat/Component;)Ljava/util/UUID; a
	handleChatHeader (Lnet/minecraft/network/chat/SignedMessageHeader;Lnet/minecraft/network/chat/MessageSignature;[B)V a
	handleChatMessage (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/ChatType$Bound;)V a
	handleMessage (Lnet/minecraft/client/multiplayer/chat/ChatListener$Message;)V a
	handleSystemMessage (Lnet/minecraft/network/chat/Component;Z)V a
	isSenderLocalPlayer (Ljava/util/UUID;)Z b
	logPlayerHeader (Lnet/minecraft/network/chat/SignedMessageHeader;Lnet/minecraft/network/chat/MessageSignature;[B)V c
	logPlayerMessage (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/ChatType$Bound;Lnet/minecraft/client/multiplayer/PlayerInfo;Lnet/minecraft/client/multiplayer/chat/ChatTrustLevel;)V a
	logSystemMessage (Lnet/minecraft/network/chat/Component;Ljava/time/Instant;)V a
	narrateChatMessage (Lnet/minecraft/network/chat/ChatType$Bound;Lnet/minecraft/network/chat/Component;)V a
	onChatChainBroken ()V f
	processNonPlayerChatMessage (Lnet/minecraft/network/chat/ChatType$Bound;Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/Component;)Z a
	processPlayerChatHeader (Lnet/minecraft/network/chat/SignedMessageHeader;Lnet/minecraft/network/chat/MessageSignature;[B)Z b
	processPlayerChatMessage (Lnet/minecraft/network/chat/ChatType$Bound;Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/Component;Lnet/minecraft/client/multiplayer/PlayerInfo;ZLjava/time/Instant;)Z a
	queueSize ()J c
	removeFromDelayedMessageQueue (Lnet/minecraft/network/chat/MessageSignature;)Z a
	resolveSenderPlayer (Ljava/util/UUID;)Lnet/minecraft/client/multiplayer/PlayerInfo; a
	setMessageDelay (D)V a
	showMessageToPlayer (Lnet/minecraft/network/chat/ChatType$Bound;Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/Component;Lnet/minecraft/client/multiplayer/PlayerInfo;ZLjava/time/Instant;)Z b
	tick ()V a
	willDelayMessages ()Z e
net/minecraft/client/multiplayer/chat/ChatListener$Message eve$a
	isVisible ()Z b
	remove ()V a
	removeIfSignatureMatches (Lnet/minecraft/network/chat/MessageSignature;)Z a
net/minecraft/client/multiplayer/chat/ChatLog evf
	NO_MESSAGE a
	after (I)I e
	before (I)I d
	contains (I)Z c
	lookup (I)Lnet/minecraft/client/multiplayer/chat/LoggedChatEvent; a
	lookupEntry (I)Lnet/minecraft/client/multiplayer/chat/ChatLog$Entry; b
	newest ()I a
	offset (II)I a
	oldest ()I b
	push (Lnet/minecraft/client/multiplayer/chat/LoggedChatEvent;)V a
	selectAfter (I)Lnet/minecraft/client/multiplayer/chat/ChatLog$Selection; f
	selectAll ()Lnet/minecraft/client/multiplayer/chat/ChatLog$Selection; c
	selectAllDescending ()Lnet/minecraft/client/multiplayer/chat/ChatLog$Selection; d
	selectBefore (I)Lnet/minecraft/client/multiplayer/chat/ChatLog$Selection; g
	selectBetween (II)Lnet/minecraft/client/multiplayer/chat/ChatLog$Selection; b
	selectNone ()Lnet/minecraft/client/multiplayer/chat/ChatLog$Selection; e
	selectSequence (ILjava/util/function/IntUnaryOperator;)Lnet/minecraft/client/multiplayer/chat/ChatLog$Selection; a
net/minecraft/client/multiplayer/chat/ChatLog$Entry evf$a
	event b
	id a
	event ()Lnet/minecraft/client/multiplayer/chat/LoggedChatEvent; b
	id ()I a
	tryCast (Ljava/lang/Class;)Lnet/minecraft/client/multiplayer/chat/ChatLog$Entry; a
net/minecraft/client/multiplayer/chat/ChatLog$Selection evf$b
	CHARACTERISTICS a
	ids c
	log b
	entries ()Ljava/util/stream/Stream; d
	events ()Ljava/util/stream/Stream; b
	ids ()Ljava/util/stream/IntStream; a
	reportableGameProfiles ()Ljava/util/Collection; c
net/minecraft/client/multiplayer/chat/ChatPreviewStatus evg
	$VALUES g
	BY_ID d
	CONFIRM c
	LIVE b
	OFF a
	id e
	key f
	$values ()[Lnet/minecraft/client/multiplayer/chat/ChatPreviewStatus; d
	byId (I)Lnet/minecraft/client/multiplayer/chat/ChatPreviewStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/multiplayer/chat/ChatTrustLevel evh
	$VALUES f
	BROKEN_CHAIN e
	FILTERED c
	MODIFIED b
	NOT_SECURE d
	SECURE a
	$values ()[Lnet/minecraft/client/multiplayer/chat/ChatTrustLevel; b
	createTag (Lnet/minecraft/network/chat/PlayerChatMessage;)Lnet/minecraft/client/GuiMessageTag; a
	evaluate (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/Component;Lnet/minecraft/client/multiplayer/PlayerInfo;Ljava/time/Instant;)Lnet/minecraft/client/multiplayer/chat/ChatTrustLevel; a
	isNotSecure ()Z a
net/minecraft/client/multiplayer/chat/LoggedChatEvent evi
net/minecraft/client/multiplayer/chat/LoggedChatMessage evj
	canReport (Ljava/util/UUID;)Z a
	player (Lcom/mojang/authlib/GameProfile;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/client/multiplayer/chat/ChatTrustLevel;)Lnet/minecraft/client/multiplayer/chat/LoggedChatMessage$Player; a
	system (Lnet/minecraft/network/chat/Component;Ljava/time/Instant;)Lnet/minecraft/client/multiplayer/chat/LoggedChatMessage$System; a
	toContentComponent ()Lnet/minecraft/network/chat/Component; a
	toNarrationComponent ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/multiplayer/chat/LoggedChatMessage$Player evj$a
	TIME_FORMATTER e
	displayName b
	message c
	profile a
	trustLevel d
	bodyDigest ()[B e
	canReport (Ljava/util/UUID;)Z a
	displayName ()Lnet/minecraft/network/chat/Component; i
	getTimeComponent ()Lnet/minecraft/network/chat/Component; l
	header ()Lnet/minecraft/network/chat/SignedMessageHeader; d
	headerSignature ()Lnet/minecraft/network/chat/MessageSignature; f
	message ()Lnet/minecraft/network/chat/PlayerChatMessage; j
	profile ()Lcom/mojang/authlib/GameProfile; h
	profileId ()Ljava/util/UUID; g
	toContentComponent ()Lnet/minecraft/network/chat/Component; a
	toHeadingComponent ()Lnet/minecraft/network/chat/Component; c
	toNarrationComponent ()Lnet/minecraft/network/chat/Component; b
	trustLevel ()Lnet/minecraft/client/multiplayer/chat/ChatTrustLevel; k
net/minecraft/client/multiplayer/chat/LoggedChatMessage$System evj$b
	message a
	timeStamp b
	canReport (Ljava/util/UUID;)Z a
	message ()Lnet/minecraft/network/chat/Component; c
	timeStamp ()Ljava/time/Instant; d
	toContentComponent ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/multiplayer/chat/LoggedChatMessageLink evk
	bodyDigest ()[B e
	header ()Lnet/minecraft/network/chat/SignedMessageHeader; d
	header (Lnet/minecraft/network/chat/SignedMessageHeader;Lnet/minecraft/network/chat/MessageSignature;[B)Lnet/minecraft/client/multiplayer/chat/LoggedChatMessageLink$Header; a
	headerSignature ()Lnet/minecraft/network/chat/MessageSignature; f
net/minecraft/client/multiplayer/chat/LoggedChatMessageLink$Header evk$a
	bodyDigest c
	header a
	headerSignature b
	bodyDigest ()[B e
	header ()Lnet/minecraft/network/chat/SignedMessageHeader; d
	headerSignature ()Lnet/minecraft/network/chat/MessageSignature; f
net/minecraft/client/multiplayer/chat/RollingMemoryChatLog evl
	buffer b
	newestId c
	oldestId d
	contains (I)Z c
	index (I)I h
	lookup (I)Lnet/minecraft/client/multiplayer/chat/LoggedChatEvent; a
	newest ()I a
	nextId ()I e
	offset (II)I a
	oldest ()I b
	push (Lnet/minecraft/client/multiplayer/chat/LoggedChatEvent;)V a
net/minecraft/client/multiplayer/chat/report/AbuseReportSender evn
	create (Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment;Lcom/mojang/authlib/minecraft/UserApiService;)Lnet/minecraft/client/multiplayer/chat/report/AbuseReportSender; a
	isEnabled ()Z a
	reportLimits ()Lcom/mojang/authlib/minecraft/report/AbuseReportLimits; b
	send (Ljava/util/UUID;Lcom/mojang/authlib/minecraft/report/AbuseReport;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/multiplayer/chat/report/AbuseReportSender$SendException evn$a
net/minecraft/client/multiplayer/chat/report/AbuseReportSender$Services evn$b
	HTTP_ERROR_TEXT d
	JSON_ERROR_TEXT e
	SERVICE_UNAVAILABLE_TEXT c
	environment a
	userApiService b
	environment ()Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment; c
	getErrorDescription (Lcom/mojang/authlib/exceptions/MinecraftClientException;)Lnet/minecraft/network/chat/Component; a
	getHttpErrorDescription (Lcom/mojang/authlib/exceptions/MinecraftClientHttpException;)Lnet/minecraft/network/chat/Component; a
	isEnabled ()Z a
	reportLimits ()Lcom/mojang/authlib/minecraft/report/AbuseReportLimits; b
	send (Ljava/util/UUID;Lcom/mojang/authlib/minecraft/report/AbuseReport;)Ljava/util/concurrent/CompletableFuture; a
	userApiService ()Lcom/mojang/authlib/minecraft/UserApiService; d
net/minecraft/client/multiplayer/chat/report/ChatReportBuilder evo
	comments f
	createdAt b
	limits d
	reason g
	reportId a
	reportedMessages e
	reportedProfileId c
	build (Lnet/minecraft/client/multiplayer/chat/report/ReportingContext;)Lcom/mojang/datafixers/util/Either; a
	buildEvidence (Lnet/minecraft/client/multiplayer/chat/ChatLog;)Lcom/mojang/authlib/minecraft/report/ReportEvidence; a
	buildReportedChatHeader (Lnet/minecraft/client/multiplayer/chat/LoggedChatMessageLink;)Lcom/mojang/authlib/minecraft/report/ReportChatMessage; a
	buildReportedChatMessage (ILnet/minecraft/client/multiplayer/chat/LoggedChatMessage$Player;)Lcom/mojang/authlib/minecraft/report/ReportChatMessage; a
	chainForPlayer (Lnet/minecraft/client/multiplayer/chat/ChatLog;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Ljava/util/UUID;)Ljava/util/stream/Stream; a
	checkBuildable ()Lnet/minecraft/client/multiplayer/chat/report/ChatReportBuilder$CannotBuildReason; e
	collectReferencedContext (Lnet/minecraft/client/multiplayer/chat/ChatLog;ILcom/mojang/authlib/minecraft/report/AbuseReportLimits;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; a
	comments ()Ljava/lang/String; c
	copy ()Lnet/minecraft/client/multiplayer/chat/report/ChatReportBuilder; f
	encodeComponent (Lnet/minecraft/network/chat/Component;)Ljava/lang/String; a
	isReported (I)Z b
	messageReferences (Lnet/minecraft/client/multiplayer/chat/ChatLog;ILnet/minecraft/network/chat/PlayerChatMessage;)Lit/unimi/dsi/fastutil/ints/IntCollection; a
	reason ()Lnet/minecraft/client/multiplayer/chat/report/ReportReason; d
	reportedMessages ()Lit/unimi/dsi/fastutil/ints/IntSet; b
	reportedProfileId ()Ljava/util/UUID; a
	setComments (Ljava/lang/String;)V a
	setReason (Lnet/minecraft/client/multiplayer/chat/report/ReportReason;)V a
	toggleReported (I)V a
	trailingContext (Lnet/minecraft/client/multiplayer/chat/ChatLog;II)Ljava/util/stream/Stream; a
	walkMessageReferenceGraph (Lnet/minecraft/client/multiplayer/chat/ChatLog;ILnet/minecraft/client/multiplayer/chat/report/ChatReportBuilder$ReferencedMessageVisitor;)V a
net/minecraft/client/multiplayer/chat/report/ChatReportBuilder$CannotBuildReason evo$a
	COMMENTS_TOO_LONG d
	NO_REASON a
	NO_REPORTED_MESSAGES b
	TOO_MANY_MESSAGES c
	message e
	message ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/multiplayer/chat/report/ChatReportBuilder$ReferencedMessageVisitor evo$b
net/minecraft/client/multiplayer/chat/report/ChatReportBuilder$Result evo$c
	id a
	report b
	id ()Ljava/util/UUID; a
	report ()Lcom/mojang/authlib/minecraft/report/AbuseReport; b
net/minecraft/client/multiplayer/chat/report/ReportEnvironment evp
	clientVersion a
	server b
	clientInfo ()Lcom/mojang/authlib/yggdrasil/request/AbuseReportRequest$ClientInfo; b
	clientVersion ()Ljava/lang/String; e
	create (Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server;)Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment; a
	getClientVersion ()Ljava/lang/String; g
	local ()Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment; a
	realm (Lcom/mojang/realmsclient/dto/RealmsServer;)Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment; a
	realmInfo ()Lcom/mojang/authlib/yggdrasil/request/AbuseReportRequest$RealmInfo; d
	server ()Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server; f
	thirdParty (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment; a
	thirdPartyServerInfo ()Lcom/mojang/authlib/yggdrasil/request/AbuseReportRequest$ThirdPartyServerInfo; c
net/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server evp$a
net/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server$Realm evp$a$a
	realmId a
	slotId b
	realmId ()J a
	slotId ()I b
net/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server$ThirdParty evp$a$b
	ip a
	ip ()Ljava/lang/String; a
net/minecraft/client/multiplayer/chat/report/ReportReason evq
	$VALUES p
	ALCOHOL_TOBACCO_DRUGS j
	CHILD_SEXUAL_EXPLOITATION_OR_ABUSE d
	DEFAMATION_IMPERSONATION_FALSE_INFORMATION h
	FALSE_REPORTING a
	HARASSMENT_OR_BULLYING g
	HATE_SPEECH b
	IMMINENT_HARM e
	NON_CONSENSUAL_INTIMATE_IMAGERY f
	SELF_HARM_OR_SUICIDE i
	TERRORISM_OR_VIOLENT_EXTREMISM c
	backendName l
	description o
	id k
	reportable m
	title n
	$values ()[Lnet/minecraft/client/multiplayer/chat/report/ReportReason; e
	backendName ()Ljava/lang/String; a
	description ()Lnet/minecraft/network/chat/Component; c
	getTranslationById (I)Lnet/minecraft/network/chat/Component; a
	reportable ()Z d
	title ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/multiplayer/chat/report/ReportingContext evr
	LOG_CAPACITY d
	chatLog c
	environment b
	sender a
	chatLog ()Lnet/minecraft/client/multiplayer/chat/ChatLog; c
	create (Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment;Lcom/mojang/authlib/minecraft/UserApiService;)Lnet/minecraft/client/multiplayer/chat/report/ReportingContext; a
	environment ()Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment; b
	matches (Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment;)Z a
	sender ()Lnet/minecraft/client/multiplayer/chat/report/AbuseReportSender; a
net/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler evu
	currentSequenceNr b
	isPredicting c
	serverVerifiedStates a
	currentSequence ()I b
	endPredictionsUpTo (ILnet/minecraft/client/multiplayer/ClientLevel;)V a
	isPredicting ()Z c
	retainKnownServerState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/player/LocalPlayer;)V a
	startPredicting ()Lnet/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler; a
	updateKnownServerState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler$ServerVerifiedState evu$a
	blockState c
	playerPos a
	sequence b
	setBlockState (Lnet/minecraft/world/level/block/state/BlockState;)V a
	setSequence (I)Lnet/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler$ServerVerifiedState; a
net/minecraft/client/multiplayer/prediction/PredictiveAction evv
net/minecraft/client/multiplayer/resolver/AddressCheck evx
	createFromService ()Lnet/minecraft/client/multiplayer/resolver/AddressCheck; a
	isAllowed (Lnet/minecraft/client/multiplayer/resolver/ResolvedServerAddress;)Z a
	isAllowed (Lnet/minecraft/client/multiplayer/resolver/ServerAddress;)Z a
net/minecraft/client/multiplayer/resolver/ResolvedServerAddress evy
	asInetSocketAddress ()Ljava/net/InetSocketAddress; d
	from (Ljava/net/InetSocketAddress;)Lnet/minecraft/client/multiplayer/resolver/ResolvedServerAddress; a
	getHostIp ()Ljava/lang/String; b
	getHostName ()Ljava/lang/String; a
	getPort ()I c
net/minecraft/client/multiplayer/resolver/ServerAddress evz
	INVALID c
	LOGGER a
	hostAndPort b
	getHost ()Ljava/lang/String; a
	getPort ()I b
	isValidAddress (Ljava/lang/String;)Z b
	parsePort (Ljava/lang/String;)I c
	parseString (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/resolver/ServerAddress; a
net/minecraft/client/multiplayer/resolver/ServerAddressResolver ewa
	LOGGER a
	SYSTEM b
net/minecraft/client/multiplayer/resolver/ServerNameResolver ewb
	DEFAULT a
	addressCheck d
	redirectHandler c
	resolver b
	resolveAddress (Lnet/minecraft/client/multiplayer/resolver/ServerAddress;)Ljava/util/Optional; a
net/minecraft/client/multiplayer/resolver/ServerRedirectHandler ewc
	EMPTY b
	LOGGER a
net/minecraft/client/particle/AshParticle ewf
net/minecraft/client/particle/AshParticle$Provider ewf$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/AttackSweepParticle ewg
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/AttackSweepParticle$Provider ewg$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BaseAshSmokeParticle ewh
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BlockMarker ewi
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/BlockMarker$Provider ewi$a
	createParticle (Lnet/minecraft/core/particles/BlockParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BreakingItemParticle ewj
	uo a
	vo b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
net/minecraft/client/particle/BreakingItemParticle$Provider ewj$a
	createParticle (Lnet/minecraft/core/particles/ItemParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BreakingItemParticle$SlimeProvider ewj$b
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BreakingItemParticle$SnowballProvider ewj$c
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubbleColumnUpParticle ewk
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubbleColumnUpParticle$Provider ewk$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubbleParticle ewl
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubbleParticle$Provider ewl$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubblePopParticle ewm
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubblePopParticle$Provider ewm$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CampfireSmokeParticle ewn
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/CampfireSmokeParticle$CosyProvider ewn$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CampfireSmokeParticle$SignalProvider ewn$b
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CritParticle ewo
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/CritParticle$DamageIndicatorProvider ewo$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CritParticle$MagicProvider ewo$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CritParticle$Provider ewo$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DragonBreathParticle ewp
	COLOR_MAX b
	COLOR_MAX_BLUE K
	COLOR_MAX_GREEN J
	COLOR_MAX_RED I
	COLOR_MIN a
	COLOR_MIN_BLUE H
	COLOR_MIN_GREEN G
	COLOR_MIN_RED F
	hasHitGround L
	sprites M
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/DragonBreathParticle$Provider ewp$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle ewq
	isGlowing a
	type b
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getType ()Lnet/minecraft/world/level/material/Fluid; g
	postMoveUpdate ()V i
	preMoveUpdate ()V h
	tick ()V a
net/minecraft/client/particle/DripParticle$CoolingDripHangParticle ewq$a
	preMoveUpdate ()V h
net/minecraft/client/particle/DripParticle$DripHangParticle ewq$b
	fallingParticle b
	postMoveUpdate ()V i
	preMoveUpdate ()V h
net/minecraft/client/particle/DripParticle$DripLandParticle ewq$c
net/minecraft/client/particle/DripParticle$DripstoneFallAndLandParticle ewq$d
	postMoveUpdate ()V i
net/minecraft/client/particle/DripParticle$DripstoneLavaFallProvider ewq$e
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$DripstoneLavaHangProvider ewq$f
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$DripstoneWaterFallProvider ewq$g
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$DripstoneWaterHangProvider ewq$h
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$FallAndLandParticle ewq$i
	landParticle b
	postMoveUpdate ()V i
net/minecraft/client/particle/DripParticle$FallingParticle ewq$j
	postMoveUpdate ()V i
net/minecraft/client/particle/DripParticle$HoneyFallAndLandParticle ewq$k
	postMoveUpdate ()V i
net/minecraft/client/particle/DripParticle$HoneyFallProvider ewq$l
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$HoneyHangProvider ewq$m
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$HoneyLandProvider ewq$n
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$LavaFallProvider ewq$o
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$LavaHangProvider ewq$p
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$LavaLandProvider ewq$q
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$NectarFallProvider ewq$r
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$ObsidianTearFallProvider ewq$s
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$ObsidianTearHangProvider ewq$t
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$ObsidianTearLandProvider ewq$u
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$SporeBlossomFallProvider ewq$v
	random b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$WaterFallProvider ewq$w
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$WaterHangProvider ewq$x
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DustColorTransitionParticle ewr
	fromColor a
	toColor b
	lerpColors (F)V f
	randomizeColor (Lcom/mojang/math/Vector3f;F)Lcom/mojang/math/Vector3f; a
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/DustColorTransitionParticle$Provider ewr$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/DustColorTransitionOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DustParticle ews
net/minecraft/client/particle/DustParticle$Provider ews$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/DustParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DustParticleBase ewt
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	randomizeColor (FF)F a
	tick ()V a
net/minecraft/client/particle/EnchantmentTableParticle ewu
	xStart a
	yStart b
	zStart F
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/EnchantmentTableParticle$NautilusProvider ewu$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/EnchantmentTableParticle$Provider ewu$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/EndRodParticle ewv
	move (DDD)V a
net/minecraft/client/particle/EndRodParticle$Provider ewv$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ExplodeParticle eww
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/ExplodeParticle$Provider eww$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FallingDustParticle ewx
	rotSpeed a
	sprites b
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/FallingDustParticle$Provider ewx$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/BlockParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles ewy
net/minecraft/client/particle/FireworkParticles$FlashProvider ewy$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles$OverlayParticle ewy$b
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/FireworkParticles$SparkParticle ewy$c
	engine G
	fadeB J
	fadeG I
	fadeR H
	flicker F
	hasFade K
	trail b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	setFlicker (Z)V b
	setTrail (Z)V a
	tick ()V a
net/minecraft/client/particle/FireworkParticles$SparkProvider ewy$d
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles$Starter ewy$e
	engine b
	explosions D
	life a
	twinkleDelay E
	createParticle (DDDDDD[I[IZZ)V a
	createParticleBall (DI[I[IZZ)V a
	createParticleBurst ([I[IZZ)V a
	createParticleShape (D[[D[I[IZZZ)V a
	isFarAwayFromCamera ()Z c
	tick ()V a
net/minecraft/client/particle/FlameParticle ewz
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
net/minecraft/client/particle/FlameParticle$Provider ewz$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FlameParticle$SmallFlameProvider ewz$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle exa
	RANDOM a
	sprites b
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/GlowParticle$ElectricSparkProvider exa$a
	SPEED_FACTOR a
	sprite b
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle$GlowSquidProvider exa$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle$ScrapeProvider exa$c
	SPEED_FACTOR a
	sprite b
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle$WaxOffProvider exa$d
	SPEED_FACTOR a
	sprite b
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle$WaxOnProvider exa$e
	SPEED_FACTOR a
	sprite b
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HeartParticle exb
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/HeartParticle$AngryVillagerProvider exb$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HeartParticle$Provider exb$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HugeExplosionParticle exc
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/HugeExplosionParticle$Provider exc$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HugeExplosionSeedParticle exd
	life a
	lifeTime b
	tick ()V a
net/minecraft/client/particle/HugeExplosionSeedParticle$Provider exd$a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ItemPickupParticle exe
	LIFE_TIME a
	entityRenderDispatcher G
	itemEntity D
	life F
	renderBuffers b
	target E
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getSafeCopy (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/Entity; a
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	tick ()V a
net/minecraft/client/particle/LargeSmokeParticle exf
net/minecraft/client/particle/LargeSmokeParticle$Provider exf$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/LavaParticle exg
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/LavaParticle$Provider exg$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/MobAppearanceParticle exh
	model a
	renderType b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/MobAppearanceParticle$Provider exh$a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/NoRenderParticle exi
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/NoteParticle exj
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/NoteParticle$Provider exj$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/Particle exk
	INITIAL_AABB a
	MAXIMUM_COLLISION_VELOCITY_SQUARED b
	age s
	alpha y
	bCol x
	bb D
	bbHeight q
	bbWidth p
	friction B
	gCol w
	gravity u
	hasPhysics n
	level c
	lifetime t
	oRoll A
	onGround m
	rCol v
	random r
	removed o
	roll z
	speedUpWhenYMotionIsBlocked C
	stoppedByCollision E
	x g
	xd j
	xo d
	y h
	yd k
	yo e
	z i
	zd l
	zo f
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; n
	getLifetime ()I j
	getLightColor (F)I a
	getParticleGroup ()Ljava/util/Optional; o
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	isAlive ()Z m
	move (DDD)V a
	remove ()V k
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	scale (F)Lnet/minecraft/client/particle/Particle; d
	setAlpha (F)V e
	setBoundingBox (Lnet/minecraft/world/phys/AABB;)V a
	setColor (FFF)V a
	setLifetime (I)V a
	setLocationFromBoundingbox ()V l
	setParticleSpeed (DDD)V b
	setPos (DDD)V c
	setPower (F)Lnet/minecraft/client/particle/Particle; c
	setSize (FF)V b
	tick ()V a
net/minecraft/client/particle/ParticleDescription exl
	textures a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/particle/ParticleDescription; a
	getTextures ()Ljava/util/List; a
net/minecraft/client/particle/ParticleEngine exm
	MAX_PARTICLES_PER_LAYER b
	RENDER_ORDER c
	level a
	particles d
	particlesToAdd i
	providers h
	random g
	spriteSets j
	textureAtlas k
	textureManager f
	trackedParticleCounts l
	trackingEmitters e
	add (Lnet/minecraft/client/particle/Particle;)V a
	close ()V a
	countParticles ()Ljava/lang/String; d
	crack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createTrackingEmitter (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/particles/ParticleOptions;)V a
	createTrackingEmitter (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/particles/ParticleOptions;I)V a
	destroy (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	hasSpaceInParticleLimit (Lnet/minecraft/core/particles/ParticleGroup;)Z a
	loadParticleDescription (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;Ljava/util/Map;)V a
	makeParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)Lnet/minecraft/client/particle/Particle; b
	register (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration;)V a
	register (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleProvider;)V a
	registerProviders ()V e
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;Lnet/minecraft/client/renderer/LightTexture;Lnet/minecraft/client/Camera;F)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	tick ()V b
	tickParticle (Lnet/minecraft/client/particle/Particle;)V b
	tickParticleList (Ljava/util/Collection;)V a
	updateCount (Lnet/minecraft/core/particles/ParticleGroup;I)V a
net/minecraft/client/particle/ParticleEngine$MutableSpriteSet exm$a
	sprites a
	get (II)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	get (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	rebind (Ljava/util/List;)V a
net/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration exm$b
net/minecraft/client/particle/ParticleProvider exn
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ParticleRenderType exo
	CUSTOM e
	NO_RENDER f
	PARTICLE_SHEET_LIT d
	PARTICLE_SHEET_OPAQUE b
	PARTICLE_SHEET_TRANSLUCENT c
	TERRAIN_SHEET a
	begin (Lcom/mojang/blaze3d/vertex/BufferBuilder;Lnet/minecraft/client/renderer/texture/TextureManager;)V a
	end (Lcom/mojang/blaze3d/vertex/Tesselator;)V a
net/minecraft/client/particle/PlayerCloudParticle exp
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/PlayerCloudParticle$Provider exp$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/PlayerCloudParticle$SneezeProvider exp$b
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/PortalParticle exq
	xStart a
	yStart b
	zStart F
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/PortalParticle$Provider exq$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ReversePortalParticle exr
	getQuadSize (F)F b
	tick ()V a
net/minecraft/client/particle/ReversePortalParticle$ReversePortalProvider exr$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/RisingParticle exs
net/minecraft/client/particle/SculkChargeParticle ext
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SculkChargeParticle$Provider ext$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SculkChargeParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	sprite ()Lnet/minecraft/client/particle/SpriteSet; a
net/minecraft/client/particle/SculkChargePopParticle exu
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SculkChargePopParticle$Provider exu$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	sprite ()Lnet/minecraft/client/particle/SpriteSet; a
net/minecraft/client/particle/ShriekParticle exv
	MAGICAL_X_ROT F
	ROTATION_VECTOR a
	TRANSFORM_VECTOR b
	delay G
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	makeCornerVertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Vector3f;FFI)V a
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	renderRotatedParticle (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;FLjava/util/function/Consumer;)V a
	tick ()V a
net/minecraft/client/particle/ShriekParticle$Provider exv$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ShriekParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SimpleAnimatedParticle exw
	fadeB G
	fadeG F
	fadeR b
	hasFade H
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	setColor (I)V b
	setFadeColor (I)V c
	tick ()V a
net/minecraft/client/particle/SingleQuadParticle exx
	quadSize D
	getQuadSize (F)F b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	scale (F)Lnet/minecraft/client/particle/Particle; d
net/minecraft/client/particle/SmokeParticle exy
net/minecraft/client/particle/SmokeParticle$Provider exy$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SnowflakeParticle exz
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SnowflakeParticle$Provider exz$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SonicBoomParticle eya
net/minecraft/client/particle/SonicBoomParticle$Provider eya$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SoulParticle eyb
	isGlowing a
	sprites b
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SoulParticle$EmissiveProvider eyb$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SoulParticle$Provider eyb$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle eyc
	RANDOM a
	sprites b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	isCloseToScopingPlayer ()Z g
	tick ()V a
net/minecraft/client/particle/SpellParticle$AmbientMobProvider eyc$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$InstantProvider eyc$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$MobProvider eyc$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$Provider eyc$d
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$WitchProvider eyc$e
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpitParticle eyd
net/minecraft/client/particle/SpitParticle$Provider eyd$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SplashParticle eye
net/minecraft/client/particle/SplashParticle$Provider eye$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpriteSet eyf
	get (II)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	get (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
net/minecraft/client/particle/SquidInkParticle eyg
	tick ()V a
net/minecraft/client/particle/SquidInkParticle$GlowInkProvider eyg$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SquidInkParticle$Provider eyg$b
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle eyh
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/SuspendedParticle$CrimsonSporeProvider eyh$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle$SporeBlossomAirProvider eyh$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle$UnderwaterProvider eyh$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle$WarpedSporeProvider eyh$d
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle eyi
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/SuspendedTownParticle$ComposterFillProvider eyi$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$DolphinSpeedProvider eyi$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$HappyVillagerProvider eyi$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$Provider eyi$d
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TerrainParticle eyj
	pos a
	uo b
	vo F
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
net/minecraft/client/particle/TerrainParticle$Provider eyj$a
	createParticle (Lnet/minecraft/core/particles/BlockParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TextureSheetParticle eyk
	sprite E
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
	pickSprite (Lnet/minecraft/client/particle/SpriteSet;)V a
	setSprite (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	setSpriteFromAge (Lnet/minecraft/client/particle/SpriteSet;)V b
net/minecraft/client/particle/TotemParticle eyl
net/minecraft/client/particle/TotemParticle$Provider eyl$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TrackingEmitter eym
	entity a
	life b
	lifeTime D
	particleType E
	tick ()V a
net/minecraft/client/particle/VibrationSignalParticle eyn
	target a
	yRot b
	yRotO F
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	renderSignal (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;FLjava/util/function/Consumer;)V a
	tick ()V a
net/minecraft/client/particle/VibrationSignalParticle$Provider eyn$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/VibrationParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WakeParticle eyo
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WakeParticle$Provider eyo$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WaterCurrentDownParticle eyp
	angle a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WaterCurrentDownParticle$Provider eyp$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WaterDropParticle eyq
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WaterDropParticle$Provider eyq$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WhiteAshParticle eyr
	COLOR_RGB24 a
net/minecraft/client/particle/WhiteAshParticle$Provider eyr$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/player/AbstractClientPlayer eyt
	SKIN_URL_TEMPLATE f
	clientLevel e
	elytraRotX b
	elytraRotY c
	elytraRotZ d
	playerInfo co
	getCloakTextureLocation ()Lnet/minecraft/resources/ResourceLocation; e
	getElytraTextureLocation ()Lnet/minecraft/resources/ResourceLocation; l
	getFieldOfViewModifier ()F o
	getModelName ()Ljava/lang/String; n
	getPlayerInfo ()Lnet/minecraft/client/multiplayer/PlayerInfo; b
	getSkinLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; c
	getSkinTextureLocation ()Lnet/minecraft/resources/ResourceLocation; d
	isCapeLoaded ()Z a
	isCreative ()Z f
	isElytraLoaded ()Z g
	isSkinLoaded ()Z c
	isSpectator ()Z B_
	registerSkinTexture (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)V a
net/minecraft/client/player/Input eyu
	down d
	forwardImpulse b
	jumping g
	left e
	leftImpulse a
	right f
	shiftKeyDown h
	up c
	getMoveVector ()Lnet/minecraft/world/phys/Vec2; a
	hasForwardImpulse ()Z b
	tick (ZF)V a
net/minecraft/client/player/KeyboardInput eyv
	options i
	calculateImpulse (ZZ)F a
	tick (ZF)V a
net/minecraft/client/player/LocalPlayer eyw
	DEFAULT_SNEAKING_MOVEMENT_FACTOR cF
	LOGGER f
	MINOR_COLLISION_ANGLE_THRESHOLD_RADIAN cE
	POSITION_REMINDER_INTERVAL cz
	SUFFOCATING_COLLISION_CHECK_SCALE cD
	WATER_VISION_MAX_TIME cA
	WATER_VISION_QUICK_PERCENT cC
	WATER_VISION_QUICK_TIME cB
	ambientSoundHandlers cI
	autoJumpEnabled db
	autoJumpTime dc
	connection co
	crouching cQ
	flashOnSetHealth cU
	handsBusy da
	input cp
	jumpRidingScale cX
	jumpRidingTicks cW
	lastOnGround cP
	minecraft cq
	oPortalTime cy
	permissionLevel cJ
	portalTime cx
	positionReminder cT
	recipeBook cH
	serverBrand cV
	showDeathScreen df
	sprintTime cs
	sprintTriggerTime cr
	startedUsingItem cY
	stats cG
	usingItemHand cZ
	wasFallFlying dd
	wasShiftKeyDown cR
	wasSprinting cS
	waterVisionTime de
	xBob cu
	xBobO cw
	xLast cK
	xRotLast cO
	yBob ct
	yBobO cv
	yLast1 cL
	yRotLast cN
	zLast cM
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V f
	aiStep ()V w_
	buildSignedContent (Ljava/lang/String;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/ChatMessageContent; e
	canAutoJump ()Z P
	canSpawnSoulSpeedParticle ()Z dC
	canSpawnSprintParticle ()Z bd
	chatSigned (Ljava/lang/String;Lnet/minecraft/network/chat/Component;)V a
	clientSideCloseContainer ()V s
	closeContainer ()V q
	commandHasSignableArguments (Ljava/lang/String;)Z d
	commandSigned (Ljava/lang/String;Lnet/minecraft/network/chat/Component;)V b
	commandUnsigned (Ljava/lang/String;)Z e
	createMessageSigner ()Lnet/minecraft/network/chat/MessageSigner; N
	crit (Lnet/minecraft/world/entity/Entity;)V a
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	drop (Z)Z a
	getCurrentMood ()F r
	getJumpRidingScale ()F D
	getPermissionLevel ()I B
	getRecipeBook ()Lnet/minecraft/client/ClientRecipeBook; z
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; n
	getServerBrand ()Ljava/lang/String; x
	getStats ()Lnet/minecraft/stats/StatsCounter; y
	getUsedItemHand ()Lnet/minecraft/world/InteractionHand; eU
	getViewXRot (F)F f
	getViewYRot (F)F g
	getVisualRotationYInDegrees ()F dr
	getWaterVision ()F L
	handleEntityEvent (B)V a
	handleNetherPortalClient ()V O
	hasEnoughImpulseToStartSprinting ()Z R
	heal (F)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtTo (F)V w
	isAutoJumpEnabled ()Z K
	isControlledCamera ()Z G
	isCrouching ()Z bQ
	isEffectiveAi ()Z eP
	isHandsBusy ()Z J
	isHorizontalCollisionMinor (Lnet/minecraft/world/phys/Vec3;)Z b
	isLocalPlayer ()Z fx
	isMoving ()Z Q
	isMovingSlowly ()Z E
	isRidingJumpable ()Z C
	isShiftKeyDown ()Z bL
	isSuppressingSlidingDownLadder ()Z fb
	isUnderWater ()Z aV
	isUsingItem ()Z eT
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	moveTowardsClosestSpace (DD)V b
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onUpdateAbilities ()V w
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openJigsawBlock (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity;)V a
	openMinecartCommandBlock (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	openStructureBlock (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	removeEffectNoUpdate (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; c
	removeRecipeHighlight (Lnet/minecraft/world/item/crafting/Recipe;)V a
	removeVehicle ()V bw
	resetPos ()V I
	respawn ()V fw
	rideTick ()V br
	sendChat (Ljava/lang/String;Lnet/minecraft/network/chat/Component;)V c
	sendCommand (Ljava/lang/String;Lnet/minecraft/network/chat/Component;)V d
	sendOpenInventory ()V u
	sendPosition ()V M
	sendRidingJump ()V t
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	serverAiStep ()V eM
	setExperienceValues (FII)V a
	setPermissionLevel (I)V a
	setServerBrand (Ljava/lang/String;)V f
	setShowDeathScreen (Z)V b
	setSprinting (Z)V g
	shouldShowDeathScreen ()Z A
	signCommandArguments (Lnet/minecraft/network/chat/MessageSigner;Lcom/mojang/brigadier/ParseResults;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/LastSeenMessages;)Lnet/minecraft/commands/arguments/ArgumentSignatures; a
	signMessage (Lnet/minecraft/network/chat/MessageSigner;Lnet/minecraft/network/chat/ChatMessageContent;Lnet/minecraft/network/chat/LastSeenMessages;)Lnet/minecraft/network/chat/MessageSignature; a
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startUsingItem (Lnet/minecraft/world/InteractionHand;)V c
	stopUsingItem ()V eZ
	suffocatesAt (Lnet/minecraft/core/BlockPos;)Z g
	swing (Lnet/minecraft/world/InteractionHand;)V a
	tick ()V k
	tickDeath ()V dL
	updateAutoJump (FF)V f
	updateIsUnderwater ()Z fr
	updateTutorialInventoryAction (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V a
net/minecraft/client/player/RemotePlayer eyx
	aiStep ()V w_
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	shouldRenderAtSqrDistance (D)Z a
	tick ()V k
	updatePlayerPose ()V fs
net/minecraft/client/player/inventory/Hotbar eyy
	items a
	createTag ()Lnet/minecraft/nbt/ListTag; a
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
net/minecraft/client/profiling/ClientMetricsSamplersProvider ezb
	levelRenderer a
	samplerFactory c
	samplers b
	registerStaticSamplers ()V a
	samplers (Ljava/util/function/Supplier;)Ljava/util/Set; a
net/minecraft/client/renderer/BiomeColors ezd
	FOLIAGE_COLOR_RESOLVER b
	GRASS_COLOR_RESOLVER a
	WATER_COLOR_RESOLVER c
	getAverageColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getAverageFoliageColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I b
	getAverageGrassColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getAverageWaterColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I c
net/minecraft/client/renderer/BlockEntityWithoutLevelRenderer eze
	DEFAULT_SHULKER_BOX b
	SHULKER_BOXES a
	banner f
	bed g
	blockEntityRenderDispatcher l
	chest c
	conduit h
	enderChest e
	entityModelSet m
	shieldModel i
	skullModels k
	trappedChest d
	tridentModel j
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	renderByItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/ChunkBufferBuilderPack ezf
	builders a
	builder (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/BufferBuilder; a
	clearAll ()V a
	discardAll ()V b
net/minecraft/client/renderer/CubeMap ezg
	SIDES a
	images b
	preload (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	render (Lnet/minecraft/client/Minecraft;FFF)V a
net/minecraft/client/renderer/DimensionSpecialEffects ezh
	EFFECTS a
	cloudLevel c
	constantAmbientLight g
	forceBrightLightmap f
	hasGround d
	skyType e
	sunriseCol b
	constantAmbientLight ()Z e
	forType (Lnet/minecraft/world/level/dimension/DimensionType;)Lnet/minecraft/client/renderer/DimensionSpecialEffects; a
	forceBrightLightmap ()Z d
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	getCloudHeight ()F a
	getSunriseColor (FF)[F a
	hasGround ()Z b
	isFoggyAt (II)Z a
	skyType ()Lnet/minecraft/client/renderer/DimensionSpecialEffects$SkyType; c
net/minecraft/client/renderer/DimensionSpecialEffects$EndEffects ezh$a
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	getSunriseColor (FF)[F a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$NetherEffects ezh$b
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$OverworldEffects ezh$c
	CLOUD_LEVEL a
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$SkyType ezh$d
	$VALUES d
	END c
	NONE a
	NORMAL b
	$values ()[Lnet/minecraft/client/renderer/DimensionSpecialEffects$SkyType; a
net/minecraft/client/renderer/EffectInstance ezi
	ALWAYS_REAPPLY d
	DUMMY_UNIFORM c
	EFFECT_SHADER_PATH a
	LOGGER b
	attributeNames r
	attributes q
	blend p
	dirty o
	fragmentProgram t
	lastAppliedEffect e
	lastProgramId f
	name n
	programId m
	samplerLocations i
	samplerMap g
	samplerNames h
	uniformLocations k
	uniformMap l
	uniforms j
	vertexProgram s
	apply ()V g
	attachToProgram ()V e
	clear ()V f
	getFragmentProgram ()Lcom/mojang/blaze3d/shaders/Program; d
	getId ()I a
	getName ()Ljava/lang/String; h
	getOrCreate (Lnet/minecraft/server/packs/resources/ResourceManager;Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/EffectProgram; a
	getUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/Uniform; a
	getVertexProgram ()Lcom/mojang/blaze3d/shaders/Program; c
	markDirty ()V b
	parseBlendNode (Lcom/google/gson/JsonObject;)Lcom/mojang/blaze3d/shaders/BlendMode; a
	parseSamplerNode (Lcom/google/gson/JsonElement;)V a
	parseUniformNode (Lcom/google/gson/JsonElement;)V b
	safeGetUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/AbstractUniform; b
	setSampler (Ljava/lang/String;Ljava/util/function/IntSupplier;)V a
	updateLocations ()V i
net/minecraft/client/renderer/FaceInfo ezj
	$VALUES i
	BY_FACING g
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	infos h
	$values ()[Lnet/minecraft/client/renderer/FaceInfo; a
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/FaceInfo; a
	getVertexInfo (I)Lnet/minecraft/client/renderer/FaceInfo$VertexInfo; a
net/minecraft/client/renderer/FaceInfo$Constants ezj$a
	MAX_X c
	MAX_Y b
	MAX_Z a
	MIN_X f
	MIN_Y e
	MIN_Z d
net/minecraft/client/renderer/FaceInfo$VertexInfo ezj$b
	xFace a
	yFace b
	zFace c
net/minecraft/client/renderer/FogRenderer ezk
	BIOME_FOG_TRANSITION_TIME a
	MOB_EFFECT_FOG c
	WATER_FOG_DISTANCE b
	biomeChangedTime i
	fogBlue f
	fogGreen e
	fogRed d
	previousBiomeFog h
	targetBiomeFog g
	getPriorityFogFunction (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/client/renderer/FogRenderer$MobEffectFogFunction; a
	levelFogColor ()V b
	setupColor (Lnet/minecraft/client/Camera;FLnet/minecraft/client/multiplayer/ClientLevel;IF)V a
	setupFog (Lnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/FogRenderer$FogMode;FZF)V a
	setupNoFog ()V a
net/minecraft/client/renderer/FogRenderer$BlindnessFogFunction ezk$a
	getMobEffect ()Lnet/minecraft/world/effect/MobEffect; a
	setupFog (Lnet/minecraft/client/renderer/FogRenderer$FogData;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/effect/MobEffectInstance;FF)V a
net/minecraft/client/renderer/FogRenderer$DarknessFogFunction ezk$b
	getMobEffect ()Lnet/minecraft/world/effect/MobEffect; a
	getModifiedVoidDarkness (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/effect/MobEffectInstance;FF)F a
	setupFog (Lnet/minecraft/client/renderer/FogRenderer$FogData;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/effect/MobEffectInstance;FF)V a
net/minecraft/client/renderer/FogRenderer$FogData ezk$c
	end c
	mode a
	shape d
	start b
net/minecraft/client/renderer/FogRenderer$FogMode ezk$d
	$VALUES c
	FOG_SKY a
	FOG_TERRAIN b
	$values ()[Lnet/minecraft/client/renderer/FogRenderer$FogMode; a
net/minecraft/client/renderer/FogRenderer$MobEffectFogFunction ezk$e
	getMobEffect ()Lnet/minecraft/world/effect/MobEffect; a
	getModifiedVoidDarkness (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/effect/MobEffectInstance;FF)F a
	isEnabled (Lnet/minecraft/world/entity/LivingEntity;F)Z a
	setupFog (Lnet/minecraft/client/renderer/FogRenderer$FogData;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/effect/MobEffectInstance;FF)V a
net/minecraft/client/renderer/GameRenderer ezl
	DEPTH_BUFFER_DEBUG h
	EFFECTS J
	EFFECT_NONE d
	ITEM_ACTIVATION_ANIMATION_LENGTH c
	LOGGER g
	NAUSEA_LOCATION f
	PROJECTION_Z_NEAR a
	blitShader e
	blockShader T
	darkenWorldAmount r
	darkenWorldAmountO s
	effectActive L
	effectIndex K
	fov p
	hasWorldScreenshot w
	itemActivationItem E
	itemActivationOffX G
	itemActivationOffY H
	itemActivationTicks F
	itemInHandRenderer b
	lastActiveTime x
	lastScreenshotAttempt v
	lightTexture y
	mainCamera M
	mapRenderer m
	minecraft i
	newEntityShader U
	oldFov q
	overlayTexture z
	panoramicMode A
	particleShader V
	positionColorLightmapShader W
	positionColorShader P
	positionColorTexLightmapShader X
	positionColorTexShader Q
	positionShader O
	positionTexColorNormalShader Y
	positionTexColorShader S
	positionTexLightmapColorShader Z
	positionTexShader R
	postEffect I
	random k
	renderBlockOutline u
	renderBuffers n
	renderDistance l
	renderHand t
	rendertypeArmorCutoutNoCullShader ag
	rendertypeArmorEntityGlintShader aB
	rendertypeArmorGlintShader aA
	rendertypeBeaconBeamShader aq
	rendertypeCrumblingShader aQ
	rendertypeCutoutMippedShader ab
	rendertypeCutoutShader ac
	rendertypeEndGatewayShader aO
	rendertypeEndPortalShader aN
	rendertypeEnergySwirlShader aw
	rendertypeEntityAlphaShader au
	rendertypeEntityCutoutNoCullShader aj
	rendertypeEntityCutoutNoCullZOffsetShader ak
	rendertypeEntityCutoutShader ai
	rendertypeEntityDecalShader ar
	rendertypeEntityGlintDirectShader aG
	rendertypeEntityGlintShader aF
	rendertypeEntityNoOutlineShader as
	rendertypeEntityShadowShader at
	rendertypeEntitySmoothCutoutShader ap
	rendertypeEntitySolidShader ah
	rendertypeEntityTranslucentCullShader am
	rendertypeEntityTranslucentEmissiveShader ao
	rendertypeEntityTranslucentShader an
	rendertypeEyesShader av
	rendertypeGlintDirectShader aE
	rendertypeGlintShader aD
	rendertypeGlintTranslucentShader aC
	rendertypeItemEntityTranslucentCullShader al
	rendertypeLeashShader ax
	rendertypeLightningShader aL
	rendertypeLinesShader aP
	rendertypeOutlineShader az
	rendertypeSolidShader aa
	rendertypeTextIntensitySeeThroughShader aK
	rendertypeTextIntensityShader aI
	rendertypeTextSeeThroughShader aJ
	rendertypeTextShader aH
	rendertypeTranslucentMovingBlockShader ae
	rendertypeTranslucentNoCrumblingShader af
	rendertypeTranslucentShader ad
	rendertypeTripwireShader aM
	rendertypeWaterMaskShader ay
	resourceManager j
	shaders N
	tick o
	zoom B
	zoomX C
	zoomY D
	bobHurt (Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	bobView (Lcom/mojang/blaze3d/vertex/PoseStack;F)V b
	checkEntityPostEffect (Lnet/minecraft/world/entity/Entity;)V a
	currentEffect ()Lnet/minecraft/client/renderer/PostChain; g
	cycleEffect ()V e
	displayItemActivation (Lnet/minecraft/world/item/ItemStack;)V a
	getBlockShader ()Lnet/minecraft/client/renderer/ShaderInstance; u
	getDarkenWorldAmount (F)F b
	getDepthFar ()F h
	getFov (Lnet/minecraft/client/Camera;FZ)D a
	getMainCamera ()Lnet/minecraft/client/Camera; m
	getMapRenderer ()Lnet/minecraft/client/gui/MapRenderer; j
	getMinecraft ()Lnet/minecraft/client/Minecraft; k
	getNewEntityShader ()Lnet/minecraft/client/renderer/ShaderInstance; v
	getNightVisionScale (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getParticleShader ()Lnet/minecraft/client/renderer/ShaderInstance; w
	getPositionColorLightmapShader ()Lnet/minecraft/client/renderer/ShaderInstance; x
	getPositionColorShader ()Lnet/minecraft/client/renderer/ShaderInstance; q
	getPositionColorTexLightmapShader ()Lnet/minecraft/client/renderer/ShaderInstance; y
	getPositionColorTexShader ()Lnet/minecraft/client/renderer/ShaderInstance; r
	getPositionShader ()Lnet/minecraft/client/renderer/ShaderInstance; p
	getPositionTexColorNormalShader ()Lnet/minecraft/client/renderer/ShaderInstance; z
	getPositionTexColorShader ()Lnet/minecraft/client/renderer/ShaderInstance; t
	getPositionTexLightmapColorShader ()Lnet/minecraft/client/renderer/ShaderInstance; A
	getPositionTexShader ()Lnet/minecraft/client/renderer/ShaderInstance; s
	getProjectionMatrix (D)Lcom/mojang/math/Matrix4f; a
	getRenderDistance ()F l
	getRendertypeArmorCutoutNoCullShader ()Lnet/minecraft/client/renderer/ShaderInstance; H
	getRendertypeArmorEntityGlintShader ()Lnet/minecraft/client/renderer/ShaderInstance; ac
	getRendertypeArmorGlintShader ()Lnet/minecraft/client/renderer/ShaderInstance; ab
	getRendertypeBeaconBeamShader ()Lnet/minecraft/client/renderer/ShaderInstance; R
	getRendertypeCrumblingShader ()Lnet/minecraft/client/renderer/ShaderInstance; ar
	getRendertypeCutoutMippedShader ()Lnet/minecraft/client/renderer/ShaderInstance; C
	getRendertypeCutoutShader ()Lnet/minecraft/client/renderer/ShaderInstance; D
	getRendertypeEndGatewayShader ()Lnet/minecraft/client/renderer/ShaderInstance; ap
	getRendertypeEndPortalShader ()Lnet/minecraft/client/renderer/ShaderInstance; ao
	getRendertypeEnergySwirlShader ()Lnet/minecraft/client/renderer/ShaderInstance; X
	getRendertypeEntityAlphaShader ()Lnet/minecraft/client/renderer/ShaderInstance; V
	getRendertypeEntityCutoutNoCullShader ()Lnet/minecraft/client/renderer/ShaderInstance; K
	getRendertypeEntityCutoutNoCullZOffsetShader ()Lnet/minecraft/client/renderer/ShaderInstance; L
	getRendertypeEntityCutoutShader ()Lnet/minecraft/client/renderer/ShaderInstance; J
	getRendertypeEntityDecalShader ()Lnet/minecraft/client/renderer/ShaderInstance; S
	getRendertypeEntityGlintDirectShader ()Lnet/minecraft/client/renderer/ShaderInstance; ah
	getRendertypeEntityGlintShader ()Lnet/minecraft/client/renderer/ShaderInstance; ag
	getRendertypeEntityNoOutlineShader ()Lnet/minecraft/client/renderer/ShaderInstance; T
	getRendertypeEntityShadowShader ()Lnet/minecraft/client/renderer/ShaderInstance; U
	getRendertypeEntitySmoothCutoutShader ()Lnet/minecraft/client/renderer/ShaderInstance; Q
	getRendertypeEntitySolidShader ()Lnet/minecraft/client/renderer/ShaderInstance; I
	getRendertypeEntityTranslucentCullShader ()Lnet/minecraft/client/renderer/ShaderInstance; N
	getRendertypeEntityTranslucentEmissiveShader ()Lnet/minecraft/client/renderer/ShaderInstance; P
	getRendertypeEntityTranslucentShader ()Lnet/minecraft/client/renderer/ShaderInstance; O
	getRendertypeEyesShader ()Lnet/minecraft/client/renderer/ShaderInstance; W
	getRendertypeGlintDirectShader ()Lnet/minecraft/client/renderer/ShaderInstance; af
	getRendertypeGlintShader ()Lnet/minecraft/client/renderer/ShaderInstance; ae
	getRendertypeGlintTranslucentShader ()Lnet/minecraft/client/renderer/ShaderInstance; ad
	getRendertypeItemEntityTranslucentCullShader ()Lnet/minecraft/client/renderer/ShaderInstance; M
	getRendertypeLeashShader ()Lnet/minecraft/client/renderer/ShaderInstance; Y
	getRendertypeLightningShader ()Lnet/minecraft/client/renderer/ShaderInstance; am
	getRendertypeLinesShader ()Lnet/minecraft/client/renderer/ShaderInstance; aq
	getRendertypeOutlineShader ()Lnet/minecraft/client/renderer/ShaderInstance; aa
	getRendertypeSolidShader ()Lnet/minecraft/client/renderer/ShaderInstance; B
	getRendertypeTextIntensitySeeThroughShader ()Lnet/minecraft/client/renderer/ShaderInstance; al
	getRendertypeTextIntensityShader ()Lnet/minecraft/client/renderer/ShaderInstance; aj
	getRendertypeTextSeeThroughShader ()Lnet/minecraft/client/renderer/ShaderInstance; ak
	getRendertypeTextShader ()Lnet/minecraft/client/renderer/ShaderInstance; ai
	getRendertypeTranslucentMovingBlockShader ()Lnet/minecraft/client/renderer/ShaderInstance; F
	getRendertypeTranslucentNoCrumblingShader ()Lnet/minecraft/client/renderer/ShaderInstance; G
	getRendertypeTranslucentShader ()Lnet/minecraft/client/renderer/ShaderInstance; E
	getRendertypeTripwireShader ()Lnet/minecraft/client/renderer/ShaderInstance; an
	getRendertypeWaterMaskShader ()Lnet/minecraft/client/renderer/ShaderInstance; Z
	getShader (Ljava/lang/String;)Lnet/minecraft/client/renderer/ShaderInstance; a
	isPanoramicMode ()Z a
	lightTexture ()Lnet/minecraft/client/renderer/LightTexture; n
	loadEffect (Lnet/minecraft/resources/ResourceLocation;)V a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	overlayTexture ()Lnet/minecraft/client/renderer/texture/OverlayTexture; o
	pick (F)V a
	preloadShader (Lnet/minecraft/server/packs/resources/ResourceProvider;Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;)Lnet/minecraft/client/renderer/ShaderInstance; a
	preloadUiShader (Lnet/minecraft/server/packs/resources/ResourceProvider;)V a
	reloadShaders (Lnet/minecraft/server/packs/resources/ResourceManager;)V b
	render (FJZ)V a
	renderConfusionOverlay (F)V c
	renderItemActivationAnimation (IIF)V a
	renderItemInHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Camera;F)V a
	renderLevel (FJLcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderZoomed (FFF)V a
	resetData ()V i
	resetProjectionMatrix (Lcom/mojang/math/Matrix4f;)V a
	resize (II)V a
	setPanoramicMode (Z)V c
	setRenderBlockOutline (Z)V b
	setRenderHand (Z)V a
	shouldRenderBlockOutline ()Z av
	shutdownEffect ()V b
	shutdownShaders ()V as
	takeAutoScreenshot (Ljava/nio/file/Path;)V a
	tick ()V f
	tickFov ()V at
	togglePostEffect ()V d
	tryTakeScreenshotIfNeeded ()V au
net/minecraft/client/renderer/GpuWarnlistManager ezm
	GPU_WARNLIST_LOCATION b
	LOGGER a
	showWarning d
	skipFabulous f
	warningDismissed e
	warnings c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/renderer/GpuWarnlistManager$Preparations;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	compilePatterns (Lcom/google/gson/JsonArray;Ljava/util/List;)V a
	dismissWarning ()V e
	dismissWarningAndSkipFabulous ()V f
	getAllWarnings ()Ljava/lang/String; m
	getRendererWarnings ()Ljava/lang/String; j
	getVendorWarnings ()Ljava/lang/String; l
	getVersionWarnings ()Ljava/lang/String; k
	hasWarnings ()Z a
	isShowingWarning ()Z g
	isSkippingFabulous ()Z h
	parseJson (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lcom/google/gson/JsonObject; c
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/renderer/GpuWarnlistManager$Preparations; a
	resetWarnings ()V i
	showWarning ()V d
	willShowWarning ()Z b
net/minecraft/client/renderer/GpuWarnlistManager$Preparations ezm$a
	rendererPatterns a
	vendorPatterns c
	versionPatterns b
	apply ()Lcom/google/common/collect/ImmutableMap; a
	matchAny (Ljava/util/List;Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/client/renderer/ItemBlockRenderTypes ezn
	TYPE_BY_BLOCK a
	TYPE_BY_FLUID b
	renderCutout c
	getChunkRenderType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/RenderType; a
	getMovingBlockRenderType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/RenderType; b
	getRenderLayer (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/client/renderer/RenderType; a
	setFancy (Z)V a
net/minecraft/client/renderer/ItemInHandRenderer ezo
	ARM_HEIGHT_SCALE B
	ARM_POSTROTATION_X_OFFSET K
	ARM_POS_SCALE C
	ARM_POS_X D
	ARM_POS_Y E
	ARM_POS_Z F
	ARM_PREROTATION_X_OFFSET H
	ARM_PREROTATION_Y_OFFSET I
	ARM_PREROTATION_Z_OFFSET J
	ARM_PRESWING_ROT_Y G
	ARM_ROT_X L
	ARM_ROT_Y M
	ARM_ROT_Z N
	ARM_SWING_X_POS_SCALE w
	ARM_SWING_Y_POS_SCALE x
	ARM_SWING_Y_ROT_AMOUNT z
	ARM_SWING_Z_POS_SCALE y
	ARM_SWING_Z_ROT_AMOUNT A
	BOW_CHARGE_SHAKE_X_SCALE ap
	BOW_CHARGE_SHAKE_Y_SCALE aq
	BOW_CHARGE_SHAKE_Z_SCALE ar
	BOW_CHARGE_X_POS_SCALE am
	BOW_CHARGE_Y_POS_SCALE an
	BOW_CHARGE_Z_POS_SCALE ao
	BOW_CHARGE_Z_SCALE as
	BOW_MIN_SHAKE_CHARGE at
	EAT_EXTRA_JIGGLE_CUTOFF u
	EAT_EXTRA_JIGGLE_SCALE v
	EAT_JIGGLE_EXPONENT t
	EAT_JIGGLE_X_POS_SCALE q
	EAT_JIGGLE_X_ROT_AMOUNT n
	EAT_JIGGLE_Y_POS_SCALE r
	EAT_JIGGLE_Y_ROT_AMOUNT o
	EAT_JIGGLE_Z_POS_SCALE s
	EAT_JIGGLE_Z_ROT_AMOUNT p
	ITEM_HEIGHT_SCALE f
	ITEM_POS_X g
	ITEM_POS_Y h
	ITEM_POS_Z i
	ITEM_PRESWING_ROT_Y j
	ITEM_SWING_X_POS_SCALE c
	ITEM_SWING_X_ROT_AMOUNT k
	ITEM_SWING_Y_POS_SCALE d
	ITEM_SWING_Y_ROT_AMOUNT l
	ITEM_SWING_Z_POS_SCALE e
	ITEM_SWING_Z_ROT_AMOUNT m
	MAPHAND_X_ROT_AMOUNT X
	MAPHAND_Y_ROT_AMOUNT Y
	MAPHAND_Z_ROT_AMOUNT Z
	MAP_BACKGROUND a
	MAP_BACKGROUND_CHECKERBOARD b
	MAP_BORDER aj
	MAP_FINAL_SCALE ai
	MAP_GLOBAL_X_POS af
	MAP_GLOBAL_Y_POS ag
	MAP_GLOBAL_Z_POS ah
	MAP_HANDS_HEIGHT_SCALE T
	MAP_HANDS_POS_X Q
	MAP_HANDS_POS_Y R
	MAP_HANDS_POS_Z S
	MAP_HANDS_TILT_SCALE U
	MAP_HANDS_Z_ROT_AMOUNT W
	MAP_HAND_X_POS aa
	MAP_HAND_Y_POS ab
	MAP_HAND_Z_POS ac
	MAP_HEIGHT ak
	MAP_PLAYER_PITCH_SCALE V
	MAP_PRE_ROT_SCALE ae
	MAP_SWING_X_POS_SCALE O
	MAP_SWING_X_ROT_AMOUNT ad
	MAP_SWING_Z_POS_SCALE P
	MAP_WIDTH al
	entityRenderDispatcher aB
	itemRenderer aC
	mainHandHeight ax
	mainHandItem av
	minecraft au
	oMainHandHeight ay
	oOffHandHeight aA
	offHandHeight az
	offHandItem aw
	applyEatTransform (Lcom/mojang/blaze3d/vertex/PoseStack;FLnet/minecraft/world/entity/HumanoidArm;Lnet/minecraft/world/item/ItemStack;)V a
	applyItemArmAttackTransform (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/entity/HumanoidArm;F)V a
	applyItemArmTransform (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/entity/HumanoidArm;F)V b
	calculateMapTilt (F)F a
	evaluateWhichHandsToRender (Lnet/minecraft/client/player/LocalPlayer;)Lnet/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection; a
	isChargedCrossbow (Lnet/minecraft/world/item/ItemStack;)Z a
	itemUsed (Lnet/minecraft/world/InteractionHand;)V a
	renderArmWithItem (Lnet/minecraft/client/player/AbstractClientPlayer;FFLnet/minecraft/world/InteractionHand;FLnet/minecraft/world/item/ItemStack;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderHandsWithItems (FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;Lnet/minecraft/client/player/LocalPlayer;I)V a
	renderItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/item/ItemStack;)V a
	renderMapHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/HumanoidArm;)V a
	renderOneHandedMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFLnet/minecraft/world/entity/HumanoidArm;FLnet/minecraft/world/item/ItemStack;)V a
	renderPlayerArm (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFFLnet/minecraft/world/entity/HumanoidArm;)V a
	renderTwoHandedMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFFF)V a
	selectionUsingItemWhileHoldingBowLike (Lnet/minecraft/client/player/LocalPlayer;)Lnet/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection; b
	tick ()V a
net/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection ezo$a
	$VALUES f
	RENDER_BOTH_HANDS a
	RENDER_MAIN_HAND_ONLY b
	RENDER_OFF_HAND_ONLY c
	renderMainHand d
	renderOffHand e
	$values ()[Lnet/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection; a
	onlyForHand (Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection; a
net/minecraft/client/renderer/ItemModelShaper ezp
	modelManager c
	shapes a
	shapesCache b
	getIndex (Lnet/minecraft/world/item/Item;)I b
	getItemModel (Lnet/minecraft/world/item/Item;)Lnet/minecraft/client/resources/model/BakedModel; a
	getItemModel (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/resources/model/BakedModel; a
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; a
	rebuildCache ()V b
	register (Lnet/minecraft/world/item/Item;Lnet/minecraft/client/resources/model/ModelResourceLocation;)V a
net/minecraft/client/renderer/LevelRenderer ezq
	CEILED_SECTION_DIAGONAL g
	CHUNK_SIZE a
	CLOUDS_LOCATION o
	DIRECTIONS b
	END_SKY_LOCATION p
	FORCEFIELD_LOCATION q
	HALF_A_SECOND_IN_MILLIS l
	HALF_CHUNK_SIZE d
	LOGGER c
	MINIMUM_ADVANCED_CULLING_DISTANCE f
	MIN_FOG_DISTANCE h
	MOON_LOCATION m
	RAIN_DIAMETER j
	RAIN_LOCATION r
	RAIN_RADIUS i
	SKY_DISC_RADIUS e
	SNOW_LOCATION s
	SUN_LOCATION n
	TRANSPARENT_SORT_COUNT k
	blockEntityRenderDispatcher v
	captureFrustum ar
	capturedFrustum as
	chunkRenderDispatcher am
	cloudBuffer I
	cloudsTarget U
	culledEntities ap
	cullingFrustum aq
	darkBuffer G
	destroyingBlocks L
	destructionProgress M
	entityEffect P
	entityRenderDispatcher u
	entityTarget O
	frameTimes J
	frustumPoints at
	frustumPos au
	generateClouds H
	globalBlockEntities B
	itemEntityTarget R
	lastCameraChunkX Z
	lastCameraChunkY aa
	lastCameraChunkZ ab
	lastCameraX W
	lastCameraY X
	lastCameraZ Y
	lastFullRenderChunkUpdate C
	lastViewDistance an
	level x
	minecraft t
	needsFrustumUpdate aA
	needsFullRenderChunkUpdate ay
	nextFullUpdateMillis az
	particlesTarget S
	playingRecords N
	prevCamRotX af
	prevCamRotY ag
	prevCamX ac
	prevCamY ad
	prevCamZ ae
	prevCloudColor ak
	prevCloudX ah
	prevCloudY ai
	prevCloudZ aj
	prevCloudsType al
	rainSizeX aC
	rainSizeZ aD
	rainSoundTime aB
	recentlyCompiledChunks y
	renderBuffers w
	renderChunkStorage z
	renderChunksInFrustum A
	renderedEntities ao
	skyBuffer F
	starBuffer E
	ticks K
	translucentTarget Q
	transparencyChain V
	viewArea D
	weatherTarget T
	xTransparentOld av
	yTransparentOld aw
	zTransparentOld ax
	addChainedFilledBoxVertices (Lcom/mojang/blaze3d/vertex/BufferBuilder;DDDDDDFFFF)V a
	addFrustumQuad (Lcom/mojang/blaze3d/vertex/VertexConsumer;IIIIIII)V a
	addFrustumVertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;I)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZZDDDDDD)V a
	addParticleInternal (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)Lnet/minecraft/client/particle/Particle; b
	addParticleInternal (Lnet/minecraft/core/particles/ParticleOptions;ZZDDDDDD)Lnet/minecraft/client/particle/Particle; b
	addRecentlyCompiledChunk (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;)V a
	allChanged ()V f
	applyFrustum (Lnet/minecraft/client/renderer/culling/Frustum;)V a
	blockChanged (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	buildClouds (Lcom/mojang/blaze3d/vertex/BufferBuilder;DDDLnet/minecraft/world/phys/Vec3;)Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer; a
	buildSkyDisc (Lcom/mojang/blaze3d/vertex/BufferBuilder;F)Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer; a
	calculateParticleLevel (Z)Lnet/minecraft/client/ParticleStatus; a
	captureFrustum ()V m
	captureFrustum (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix4f;DDDLnet/minecraft/client/renderer/culling/Frustum;)V a
	checkPoseStack (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	clear ()V p
	closeToBorder (Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;)Z a
	compileChunks (Lnet/minecraft/client/Camera;)V d
	countRenderedChunks ()I k
	createDarkSky ()V A
	createLightSky ()V B
	createStars ()V C
	deinitTransparency ()V z
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V c
	doEntityOutline ()V b
	doesMobEffectBlockSky (Lnet/minecraft/client/Camera;)Z c
	drawStars (Lcom/mojang/blaze3d/vertex/BufferBuilder;)Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer; a
	entityTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; s
	getChunkRenderDispatcher ()Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher; h
	getChunkStatistics ()Ljava/lang/String; g
	getCloudsTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; x
	getEntityStatistics ()Ljava/lang/String; l
	getItemEntityTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; u
	getLastViewDistance ()D j
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)I a
	getParticlesTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; v
	getRelativeFrom (Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk; a
	getTotalChunks ()D i
	getTranslucentTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; t
	getWeatherTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; w
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V a
	graphicsChanged ()V e
	hasRenderedAllChunks ()Z q
	initOutline ()V a
	initTransparency ()V y
	initializeQueueForFullUpdate (Lnet/minecraft/client/Camera;Ljava/util/Queue;)V a
	isChunkCompiled (Lnet/minecraft/core/BlockPos;)Z a
	killFrustum ()V n
	levelEvent (ILnet/minecraft/core/BlockPos;I)V b
	needsUpdate ()V r
	notifyNearbyEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	playStreamingMusic (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/core/BlockPos;)V a
	prepareCullFrustum (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/phys/Vec3;Lcom/mojang/math/Matrix4f;)V a
	removeProgress (Lnet/minecraft/server/level/BlockDestructionProgress;)V a
	renderChunkLayer (Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack;DDDLcom/mojang/math/Matrix4f;)V a
	renderClouds (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/math/Matrix4f;FDDD)V a
	renderDebug (Lnet/minecraft/client/Camera;)V b
	renderEndSky (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	renderEntity (Lnet/minecraft/world/entity/Entity;DDDFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	renderHitOutline (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/Entity;DDDLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	renderLevel (Lcom/mojang/blaze3d/vertex/PoseStack;FJZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lcom/mojang/math/Matrix4f;)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFFFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/AABB;FFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFF)V a
	renderShape (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/shapes/VoxelShape;DDDFFFF)V b
	renderSky (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/math/Matrix4f;FLnet/minecraft/client/Camera;ZLjava/lang/Runnable;)V a
	renderSnowAndRain (Lnet/minecraft/client/renderer/LightTexture;FDDD)V a
	renderVoxelShape (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/shapes/VoxelShape;DDDFFFF)V a
	renderWorldBorder (Lnet/minecraft/client/Camera;)V e
	resize (II)V a
	setBlockDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setBlockDirty (Lnet/minecraft/core/BlockPos;Z)V a
	setBlocksDirty (IIIIII)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	setSectionDirty (III)V b
	setSectionDirty (IIIZ)V a
	setSectionDirtyWithNeighbors (III)V a
	setupRender (Lnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/culling/Frustum;ZZ)V a
	shouldShowEntityOutlines ()Z d
	tick ()V o
	tickRain (Lnet/minecraft/client/Camera;)V a
	updateGlobalBlockEntities (Ljava/util/Collection;Ljava/util/Collection;)V a
	updateRenderChunks (Ljava/util/LinkedHashSet;Lnet/minecraft/client/renderer/LevelRenderer$RenderInfoMap;Lnet/minecraft/world/phys/Vec3;Ljava/util/Queue;Z)V a
net/minecraft/client/renderer/LevelRenderer$RenderChunkInfo ezq$a
	chunk a
	directions c
	sourceDirections b
	step d
	addSourceDirection (Lnet/minecraft/core/Direction;)V b
	hasDirection (Lnet/minecraft/core/Direction;)Z a
	hasSourceDirection (I)Z a
	hasSourceDirections ()Z a
	setDirections (BLnet/minecraft/core/Direction;)V a
net/minecraft/client/renderer/LevelRenderer$RenderChunkStorage ezq$b
	renderChunks b
	renderInfoMap a
net/minecraft/client/renderer/LevelRenderer$RenderInfoMap ezq$c
	infos a
	get (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;)Lnet/minecraft/client/renderer/LevelRenderer$RenderChunkInfo; a
	put (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;Lnet/minecraft/client/renderer/LevelRenderer$RenderChunkInfo;)V a
net/minecraft/client/renderer/LevelRenderer$TransparencyShaderException ezq$d
net/minecraft/client/renderer/LightTexture ezr
	FULL_BLOCK c
	FULL_BRIGHT a
	FULL_SKY b
	blockLightRedFlicker h
	lightPixels e
	lightTexture d
	lightTextureLocation f
	minecraft j
	renderer i
	updateLightTexture g
	block (I)I a
	calculateDarknessScale (Lnet/minecraft/world/entity/LivingEntity;FF)F a
	getBrightness (Lnet/minecraft/world/level/dimension/DimensionType;I)F a
	getDarknessGamma (F)F b
	notGamma (F)F c
	pack (II)I a
	sky (I)I b
	tick ()V a
	turnOffLightLayer ()V b
	turnOnLightLayer ()V c
	updateLightTexture (F)V a
net/minecraft/client/renderer/MultiBufferSource ezs
	immediate (Lcom/mojang/blaze3d/vertex/BufferBuilder;)Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; a
	immediateWithBuffers (Ljava/util/Map;Lcom/mojang/blaze3d/vertex/BufferBuilder;)Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; a
net/minecraft/client/renderer/MultiBufferSource$BufferSource ezs$a
	builder a
	fixedBuffers b
	lastState c
	startedBuffers d
	endBatch ()V b
	endBatch (Lnet/minecraft/client/renderer/RenderType;)V a
	endLastBatch ()V a
	getBuilderRaw (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/BufferBuilder; b
net/minecraft/client/renderer/OutlineBufferSource ezt
	bufferSource a
	outlineBufferSource b
	teamA f
	teamB e
	teamG d
	teamR c
	endOutlineBatch ()V a
	setColor (IIII)V a
net/minecraft/client/renderer/OutlineBufferSource$EntityOutlineGenerator ezt$a
	delegate f
	u j
	v k
	x g
	y h
	z i
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V e
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V k
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
net/minecraft/client/renderer/PanoramaRenderer ezu
	cubeMap b
	minecraft a
	time c
	render (FF)V a
net/minecraft/client/renderer/PostChain ezv
	MAIN_RENDER_TARGET a
	customRenderTargets f
	fullSizedTargets g
	lastStamp l
	name d
	passes e
	resourceManager c
	screenHeight j
	screenTarget b
	screenWidth i
	shaderOrthoMatrix h
	time k
	addPass (Ljava/lang/String;Lcom/mojang/blaze3d/pipeline/RenderTarget;Lcom/mojang/blaze3d/pipeline/RenderTarget;)Lnet/minecraft/client/renderer/PostPass; a
	addTempTarget (Ljava/lang/String;II)V a
	getName ()Ljava/lang/String; a
	getRenderTarget (Ljava/lang/String;)Lcom/mojang/blaze3d/pipeline/RenderTarget; b
	getTempTarget (Ljava/lang/String;)Lcom/mojang/blaze3d/pipeline/RenderTarget; a
	load (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/resources/ResourceLocation;)V a
	parsePassNode (Lnet/minecraft/client/renderer/texture/TextureManager;Lcom/google/gson/JsonElement;)V a
	parseTargetNode (Lcom/google/gson/JsonElement;)V a
	parseUniformNode (Lcom/google/gson/JsonElement;)V b
	process (F)V a
	resize (II)V a
	updateOrthoMatrix ()V b
net/minecraft/client/renderer/PostPass ezw
	auxAssets d
	auxHeights g
	auxNames e
	auxWidths f
	effect c
	inTarget a
	outTarget b
	shaderOrthoMatrix h
	addAuxAsset (Ljava/lang/String;Ljava/util/function/IntSupplier;II)V a
	getEffect ()Lnet/minecraft/client/renderer/EffectInstance; b
	getName ()Ljava/lang/String; a
	process (F)V a
	setOrthoMatrix (Lcom/mojang/math/Matrix4f;)V a
net/minecraft/client/renderer/Rect2i ezx
	height d
	width c
	xPos a
	yPos b
	contains (II)Z b
	getHeight ()I d
	getWidth ()I c
	getX ()I a
	getY ()I b
	intersect (Lnet/minecraft/client/renderer/Rect2i;)Lnet/minecraft/client/renderer/Rect2i; a
	setHeight (I)V d
	setPosition (II)V a
	setWidth (I)V c
	setX (I)V a
	setY (I)V b
net/minecraft/client/renderer/RenderBuffers ezy
	bufferSource c
	crumblingBufferSource d
	fixedBufferPack a
	fixedBuffers b
	outlineBufferSource e
	bufferSource ()Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; b
	crumblingBufferSource ()Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; c
	fixedBufferPack ()Lnet/minecraft/client/renderer/ChunkBufferBuilderPack; a
	outlineBufferSource ()Lnet/minecraft/client/renderer/OutlineBufferSource; d
	put (Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;Lnet/minecraft/client/renderer/RenderType;)V a
net/minecraft/client/renderer/RenderStateShard ezz
	ADDITIVE_TRANSPARENCY c
	BLOCK_SHADER i
	BLOCK_SHEET ai
	BLOCK_SHEET_MIPPED ah
	CLOUDS_TARGET aH
	COLOR_DEPTH_WRITE aw
	COLOR_WRITE ax
	CRUMBLING_TRANSPARENCY f
	CULL ar
	DEFAULT_LINE aJ
	DEFAULT_TEXTURING ak
	DEPTH_WRITE ay
	ENTITY_GLINT_TEXTURING am
	EQUAL_DEPTH_TEST au
	GLINT_TEXTURING al
	GLINT_TRANSPARENCY e
	ITEM_ENTITY_TARGET aI
	LEQUAL_DEPTH_TEST av
	LIGHTMAP an
	LIGHTNING_TRANSPARENCY d
	MAIN_TARGET aC
	NEW_ENTITY_SHADER j
	NO_CULL as
	NO_DEPTH_TEST at
	NO_LAYERING az
	NO_LIGHTMAP ao
	NO_OVERLAY aq
	NO_SHADER h
	NO_TEXTURE aj
	NO_TRANSPARENCY b
	OUTLINE_TARGET aD
	OVERLAY ap
	PARTICLES_TARGET aF
	POLYGON_OFFSET_LAYERING aA
	POSITION_COLOR_LIGHTMAP_SHADER k
	POSITION_COLOR_SHADER p
	POSITION_COLOR_TEX_LIGHTMAP_SHADER o
	POSITION_COLOR_TEX_SHADER m
	POSITION_SHADER l
	POSITION_TEX_SHADER n
	RENDERTYPE_ARMOR_CUTOUT_NO_CULL_SHADER w
	RENDERTYPE_ARMOR_ENTITY_GLINT_SHADER R
	RENDERTYPE_ARMOR_GLINT_SHADER Q
	RENDERTYPE_BEACON_BEAM_SHADER G
	RENDERTYPE_CRUMBLING_SHADER X
	RENDERTYPE_CUTOUT_MIPPED_SHADER r
	RENDERTYPE_CUTOUT_SHADER s
	RENDERTYPE_END_GATEWAY_SHADER af
	RENDERTYPE_END_PORTAL_SHADER ae
	RENDERTYPE_ENERGY_SWIRL_SHADER M
	RENDERTYPE_ENTITY_ALPHA_SHADER K
	RENDERTYPE_ENTITY_CUTOUT_NO_CULL_SHADER z
	RENDERTYPE_ENTITY_CUTOUT_NO_CULL_Z_OFFSET_SHADER A
	RENDERTYPE_ENTITY_CUTOUT_SHADER y
	RENDERTYPE_ENTITY_DECAL_SHADER H
	RENDERTYPE_ENTITY_GLINT_DIRECT_SHADER W
	RENDERTYPE_ENTITY_GLINT_SHADER V
	RENDERTYPE_ENTITY_NO_OUTLINE_SHADER I
	RENDERTYPE_ENTITY_SHADOW_SHADER J
	RENDERTYPE_ENTITY_SMOOTH_CUTOUT_SHADER F
	RENDERTYPE_ENTITY_SOLID_SHADER x
	RENDERTYPE_ENTITY_TRANSLUCENT_CULL_SHADER C
	RENDERTYPE_ENTITY_TRANSLUCENT_EMISSIVE_SHADER E
	RENDERTYPE_ENTITY_TRANSLUCENT_SHADER D
	RENDERTYPE_EYES_SHADER L
	RENDERTYPE_GLINT_DIRECT_SHADER U
	RENDERTYPE_GLINT_SHADER T
	RENDERTYPE_GLINT_TRANSLUCENT_SHADER S
	RENDERTYPE_ITEM_ENTITY_TRANSLUCENT_CULL_SHADER B
	RENDERTYPE_LEASH_SHADER N
	RENDERTYPE_LIGHTNING_SHADER ac
	RENDERTYPE_LINES_SHADER ag
	RENDERTYPE_OUTLINE_SHADER P
	RENDERTYPE_SOLID_SHADER q
	RENDERTYPE_TEXT_INTENSITY_SEE_THROUGH_SHADER ab
	RENDERTYPE_TEXT_INTENSITY_SHADER Z
	RENDERTYPE_TEXT_SEE_THROUGH_SHADER aa
	RENDERTYPE_TEXT_SHADER Y
	RENDERTYPE_TRANSLUCENT_MOVING_BLOCK_SHADER u
	RENDERTYPE_TRANSLUCENT_NO_CRUMBLING_SHADER v
	RENDERTYPE_TRANSLUCENT_SHADER t
	RENDERTYPE_TRIPWIRE_SHADER ad
	RENDERTYPE_WATER_MASK_SHADER O
	TRANSLUCENT_TARGET aE
	TRANSLUCENT_TRANSPARENCY g
	VIEW_OFFSET_Z_LAYERING aB
	VIEW_SCALE_Z_EPSILON aK
	WEATHER_TARGET aG
	clearState aM
	name a
	setupState aL
	clearRenderState ()V b
	setupGlintTexturing (F)V a
	setupRenderState ()V a
net/minecraft/client/renderer/RenderStateShard$BooleanStateShard ezz$a
	enabled aK
net/minecraft/client/renderer/RenderStateShard$CullStateShard ezz$b
net/minecraft/client/renderer/RenderStateShard$DepthTestStateShard ezz$c
	functionName aK
net/minecraft/client/renderer/RenderStateShard$EmptyTextureStateShard ezz$d
	cutoutTexture ()Ljava/util/Optional; c
net/minecraft/client/renderer/RenderStateShard$LayeringStateShard ezz$e
net/minecraft/client/renderer/RenderStateShard$LightmapStateShard ezz$f
net/minecraft/client/renderer/RenderStateShard$LineStateShard ezz$g
	width aK
net/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard ezz$h
	cutoutTexture aK
	builder ()Lnet/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard$Builder; d
	cutoutTexture ()Ljava/util/Optional; c
net/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard$Builder ezz$h$a
	builder a
	add (Lnet/minecraft/resources/ResourceLocation;ZZ)Lnet/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard$Builder; a
	build ()Lnet/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard; a
net/minecraft/client/renderer/RenderStateShard$OffsetTexturingStateShard ezz$i
net/minecraft/client/renderer/RenderStateShard$OutputStateShard ezz$j
net/minecraft/client/renderer/RenderStateShard$OverlayStateShard ezz$k
net/minecraft/client/renderer/RenderStateShard$ShaderStateShard ezz$l
	shader aK
net/minecraft/client/renderer/RenderStateShard$TextureStateShard ezz$m
	blur aL
	mipmap aM
	texture aK
	cutoutTexture ()Ljava/util/Optional; c
net/minecraft/client/renderer/RenderStateShard$TexturingStateShard ezz$n
net/minecraft/client/renderer/RenderStateShard$TransparencyStateShard ezz$o
net/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard ezz$p
	writeColor aK
	writeDepth aL
net/minecraft/client/renderer/RenderType faa
	ARMOR_CUTOUT_NO_CULL aY
	ARMOR_ENTITY_GLINT br
	ARMOR_GLINT bq
	BEACON_BEAM bi
	BIG_BUFFER_SIZE aK
	BYTES_IN_INT aQ
	CHUNK_BUFFER_LAYERS bI
	CRUMBLING bx
	CUTOUT aU
	CUTOUT_MIPPED aT
	DRAGON_EXPLOSION_ALPHA bm
	END_GATEWAY bH
	END_PORTAL bG
	ENTITY_CUTOUT ba
	ENTITY_CUTOUT_NO_CULL bb
	ENTITY_CUTOUT_NO_CULL_Z_OFFSET bc
	ENTITY_DECAL bj
	ENTITY_GLINT bv
	ENTITY_GLINT_DIRECT bw
	ENTITY_NO_OUTLINE bk
	ENTITY_SHADOW bl
	ENTITY_SMOOTH_CUTOUT bh
	ENTITY_SOLID aZ
	ENTITY_TRANSLUCENT bf
	ENTITY_TRANSLUCENT_CULL be
	ENTITY_TRANSLUCENT_EMISSIVE bg
	EYES bn
	GLINT bt
	GLINT_DIRECT bu
	GLINT_TRANSLUCENT bs
	ITEM_ENTITY_TRANSLUCENT_CULL bd
	LEASH bo
	LIGHTNING bE
	LINES aO
	LINE_STRIP aP
	MEDIUM_BUFFER_SIZE aL
	MEGABYTE aR
	SMALL_BUFFER_SIZE aM
	SOLID aS
	TEXT by
	TEXT_INTENSITY bz
	TEXT_INTENSITY_POLYGON_OFFSET bB
	TEXT_INTENSITY_SEE_THROUGH bD
	TEXT_POLYGON_OFFSET bA
	TEXT_SEE_THROUGH bC
	TRANSIENT_BUFFER_SIZE aN
	TRANSLUCENT aV
	TRANSLUCENT_MOVING_BLOCK aW
	TRANSLUCENT_NO_CRUMBLING aX
	TRIPWIRE bF
	WATER_MASK bp
	affectsCrumbling bM
	asOptional bO
	bufferSize bL
	format bJ
	mode bK
	sortOnUpload bN
	affectsCrumbling ()Z D
	armorCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; a
	armorEntityGlint ()Lnet/minecraft/client/renderer/RenderType; l
	armorGlint ()Lnet/minecraft/client/renderer/RenderType; k
	asOptional ()Ljava/util/Optional; F
	beaconBeam (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; e
	bufferSize ()I y
	canConsolidateConsecutiveGeometry ()Z E
	chunkBufferLayers ()Ljava/util/List; x
	create (Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;ILnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; a
	create (Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;IZZLnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; a
	crumbling (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; q
	cutout ()Lnet/minecraft/client/renderer/RenderType; e
	cutoutMipped ()Lnet/minecraft/client/renderer/RenderType; d
	dragonExplosionAlpha (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; n
	end (Lcom/mojang/blaze3d/vertex/BufferBuilder;III)V a
	endGateway ()Lnet/minecraft/client/renderer/RenderType; u
	endPortal ()Lnet/minecraft/client/renderer/RenderType; t
	energySwirl (Lnet/minecraft/resources/ResourceLocation;FF)Lnet/minecraft/client/renderer/RenderType; a
	entityCutout (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; c
	entityCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; d
	entityCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; a
	entityCutoutNoCullZOffset (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; e
	entityCutoutNoCullZOffset (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; b
	entityDecal (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; k
	entityGlint ()Lnet/minecraft/client/renderer/RenderType; p
	entityGlintDirect ()Lnet/minecraft/client/renderer/RenderType; q
	entityNoOutline (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; l
	entityShadow (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; m
	entitySmoothCutout (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; j
	entitySolid (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; b
	entityTranslucent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; h
	entityTranslucent (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; c
	entityTranslucentCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; g
	entityTranslucentEmissive (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; i
	entityTranslucentEmissive (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; d
	eyes (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; o
	format ()Lcom/mojang/blaze3d/vertex/VertexFormat; z
	glint ()Lnet/minecraft/client/renderer/RenderType; n
	glintDirect ()Lnet/minecraft/client/renderer/RenderType; o
	glintTranslucent ()Lnet/minecraft/client/renderer/RenderType; m
	isOutline ()Z C
	itemEntityTranslucentCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; f
	leash ()Lnet/minecraft/client/renderer/RenderType; i
	lightning ()Lnet/minecraft/client/renderer/RenderType; r
	lineStrip ()Lnet/minecraft/client/renderer/RenderType; w
	lines ()Lnet/minecraft/client/renderer/RenderType; v
	mode ()Lcom/mojang/blaze3d/vertex/VertexFormat$Mode; A
	outline ()Ljava/util/Optional; B
	outline (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; p
	solid ()Lnet/minecraft/client/renderer/RenderType; c
	text (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; r
	textIntensity (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; s
	textIntensityPolygonOffset (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; u
	textIntensitySeeThrough (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; w
	textPolygonOffset (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; t
	textSeeThrough (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; v
	translucent ()Lnet/minecraft/client/renderer/RenderType; f
	translucentMovingBlock ()Lnet/minecraft/client/renderer/RenderType; g
	translucentMovingBlockState ()Lnet/minecraft/client/renderer/RenderType$CompositeState; G
	translucentNoCrumbling ()Lnet/minecraft/client/renderer/RenderType; h
	translucentState (Lnet/minecraft/client/renderer/RenderStateShard$ShaderStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState; a
	tripwire ()Lnet/minecraft/client/renderer/RenderType; s
	tripwireState ()Lnet/minecraft/client/renderer/RenderType$CompositeState; H
	waterMask ()Lnet/minecraft/client/renderer/RenderType; j
net/minecraft/client/renderer/RenderType$CompositeRenderType faa$a
	OUTLINE aQ
	isOutline aT
	outline aS
	state aR
	isOutline ()Z C
	outline ()Ljava/util/Optional; B
	state ()Lnet/minecraft/client/renderer/RenderType$CompositeState; G
net/minecraft/client/renderer/RenderType$CompositeState faa$b
	cullState e
	depthTestState d
	layeringState h
	lightmapState f
	lineState l
	outlineProperty m
	outputState i
	overlayState g
	shaderState b
	states n
	textureState a
	texturingState j
	transparencyState c
	writeMaskState k
	builder ()Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
net/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder faa$b$a
	cullState e
	depthTestState d
	layeringState h
	lightmapState f
	lineState l
	outputState i
	overlayState g
	shaderState b
	textureState a
	texturingState j
	transparencyState c
	writeMaskState k
	createCompositeState (Lnet/minecraft/client/renderer/RenderType$OutlineProperty;)Lnet/minecraft/client/renderer/RenderType$CompositeState; a
	createCompositeState (Z)Lnet/minecraft/client/renderer/RenderType$CompositeState; a
	setCullState (Lnet/minecraft/client/renderer/RenderStateShard$CullStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setDepthTestState (Lnet/minecraft/client/renderer/RenderStateShard$DepthTestStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLayeringState (Lnet/minecraft/client/renderer/RenderStateShard$LayeringStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLightmapState (Lnet/minecraft/client/renderer/RenderStateShard$LightmapStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLineState (Lnet/minecraft/client/renderer/RenderStateShard$LineStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setOutputState (Lnet/minecraft/client/renderer/RenderStateShard$OutputStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setOverlayState (Lnet/minecraft/client/renderer/RenderStateShard$OverlayStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setShaderState (Lnet/minecraft/client/renderer/RenderStateShard$ShaderStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTextureState (Lnet/minecraft/client/renderer/RenderStateShard$EmptyTextureStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTexturingState (Lnet/minecraft/client/renderer/RenderStateShard$TexturingStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTransparencyState (Lnet/minecraft/client/renderer/RenderStateShard$TransparencyStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setWriteMaskState (Lnet/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
net/minecraft/client/renderer/RenderType$OutlineProperty faa$c
	$VALUES e
	AFFECTS_OUTLINE c
	IS_OUTLINE b
	NONE a
	name d
	$values ()[Lnet/minecraft/client/renderer/RenderType$OutlineProperty; a
net/minecraft/client/renderer/RunningTrimmedMean fab
	count b
	cursor c
	values a
	registerValueAndGetMean (J)J a
net/minecraft/client/renderer/ScreenEffectRenderer fac
	UNDERWATER_LOCATION a
	getViewBlockingState (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/block/state/BlockState; a
	renderFire (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	renderScreenEffect (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderTex (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderWater (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V b
net/minecraft/client/renderer/ShaderInstance fad
	ALWAYS_REAPPLY t
	CHUNK_OFFSET o
	COLOR_MODULATOR f
	DUMMY_UNIFORM s
	FOG_COLOR k
	FOG_END j
	FOG_SHAPE l
	FOG_START i
	GAME_TIME n
	INVERSE_VIEW_ROTATION_MATRIX c
	LIGHT0_DIRECTION g
	LIGHT1_DIRECTION h
	LINE_WIDTH m
	LOGGER r
	MODEL_VIEW_MATRIX a
	PROJECTION_MATRIX b
	SCREEN_SIZE e
	SHADER_INCLUDE_PATH q
	SHADER_PATH p
	TEXTURE_MATRIX d
	attributeNames H
	attributes G
	blend F
	dirty E
	fragmentProgram J
	lastAppliedShader u
	lastProgramId v
	name D
	programId C
	samplerLocations y
	samplerMap w
	samplerNames x
	uniformLocations A
	uniformMap B
	uniforms z
	vertexFormat K
	vertexProgram I
	apply ()V g
	attachToProgram ()V e
	clear ()V f
	getFragmentProgram ()Lcom/mojang/blaze3d/shaders/Program; d
	getId ()I a
	getName ()Ljava/lang/String; i
	getOrCreate (Lnet/minecraft/server/packs/resources/ResourceProvider;Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/Program; a
	getUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/Uniform; a
	getVertexFormat ()Lcom/mojang/blaze3d/vertex/VertexFormat; h
	getVertexProgram ()Lcom/mojang/blaze3d/shaders/Program; c
	markDirty ()V b
	parseBlendNode (Lcom/google/gson/JsonObject;)Lcom/mojang/blaze3d/shaders/BlendMode; a
	parseSamplerNode (Lcom/google/gson/JsonElement;)V a
	parseUniformNode (Lcom/google/gson/JsonElement;)V b
	safeGetUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/AbstractUniform; b
	setSampler (Ljava/lang/String;Ljava/lang/Object;)V a
	updateLocations ()V j
net/minecraft/client/renderer/Sheets fae
	BANNER_MATERIALS j
	BANNER_SHEET c
	BANNER_SHEET_TYPE y
	BED_SHEET b
	BED_SHEET_TYPE x
	BED_TEXTURES l
	CHEST_LOCATION s
	CHEST_LOCATION_LEFT t
	CHEST_LOCATION_RIGHT u
	CHEST_SHEET f
	CHEST_SHEET_TYPE B
	CHEST_TRAP_LOCATION m
	CHEST_TRAP_LOCATION_LEFT n
	CHEST_TRAP_LOCATION_RIGHT o
	CHEST_XMAS_LOCATION p
	CHEST_XMAS_LOCATION_LEFT q
	CHEST_XMAS_LOCATION_RIGHT r
	CUTOUT_BLOCK_SHEET D
	DEFAULT_SHULKER_TEXTURE_LOCATION g
	ENDER_CHEST_LOCATION v
	SHIELD_MATERIALS k
	SHIELD_SHEET d
	SHIELD_SHEET_TYPE z
	SHULKER_BOX_SHEET_TYPE w
	SHULKER_SHEET a
	SHULKER_TEXTURE_LOCATION h
	SIGN_MATERIALS i
	SIGN_SHEET e
	SIGN_SHEET_TYPE A
	SOLID_BLOCK_SHEET C
	TRANSLUCENT_CULL_BLOCK_SHEET F
	TRANSLUCENT_ITEM_CULL_BLOCK_SHEET E
	bannerSheet ()Lnet/minecraft/client/renderer/RenderType; a
	bedSheet ()Lnet/minecraft/client/renderer/RenderType; c
	chestMaterial (Ljava/lang/String;)Lnet/minecraft/client/resources/model/Material; a
	chestSheet ()Lnet/minecraft/client/renderer/RenderType; f
	chooseMaterial (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/level/block/state/properties/ChestType;Z)Lnet/minecraft/client/resources/model/Material; a
	chooseMaterial (Lnet/minecraft/world/level/block/state/properties/ChestType;Lnet/minecraft/client/resources/model/Material;Lnet/minecraft/client/resources/model/Material;Lnet/minecraft/client/resources/model/Material;)Lnet/minecraft/client/resources/model/Material; a
	createBannerMaterial (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/client/resources/model/Material; c
	createShieldMaterial (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/client/resources/model/Material; d
	createSignMaterial (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/resources/model/Material; b
	cutoutBlockSheet ()Lnet/minecraft/client/renderer/RenderType; h
	getAllMaterials (Ljava/util/function/Consumer;)V a
	getBannerMaterial (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/client/resources/model/Material; a
	getShieldMaterial (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/client/resources/model/Material; b
	getSignMaterial (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/resources/model/Material; a
	shieldSheet ()Lnet/minecraft/client/renderer/RenderType; b
	shulkerBoxSheet ()Lnet/minecraft/client/renderer/RenderType; d
	signSheet ()Lnet/minecraft/client/renderer/RenderType; e
	solidBlockSheet ()Lnet/minecraft/client/renderer/RenderType; g
	translucentCullBlockSheet ()Lnet/minecraft/client/renderer/RenderType; j
	translucentItemSheet ()Lnet/minecraft/client/renderer/RenderType; i
net/minecraft/client/renderer/SpriteCoordinateExpander faf
	delegate a
	sprite b
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V e
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V k
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
net/minecraft/client/renderer/ViewArea fag
	chunkGridSizeX d
	chunkGridSizeY c
	chunkGridSizeZ e
	chunks f
	level b
	levelRenderer a
	createChunks (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher;)V a
	getChunkIndex (III)I a
	getRenderChunkAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk; a
	releaseAllBuffers ()V a
	repositionCamera (DD)V a
	setDirty (IIIZ)V a
	setViewDistance (I)V a
net/minecraft/client/renderer/VirtualScreen fah
	minecraft a
	screenManager b
	newWindow (Lcom/mojang/blaze3d/platform/DisplayData;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/blaze3d/platform/Window; a
net/minecraft/client/renderer/block/BlockModelShaper fai
	modelByStateCache a
	modelManager b
	getBlockModel (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/BakedModel; b
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; a
	getParticleIcon (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/String; a
	rebuildCache ()V b
	statePropertiesToString (Ljava/util/Map;)Ljava/lang/String; a
	stateToModelLocation (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/ModelResourceLocation; a
	stateToModelLocation (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/ModelResourceLocation; c
net/minecraft/client/renderer/block/BlockRenderDispatcher faj
	blockColors f
	blockEntityRenderer c
	blockModelShaper a
	liquidBlockRenderer d
	modelRenderer b
	random e
	getBlockModel (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/BakedModel; a
	getBlockModelShaper ()Lnet/minecraft/client/renderer/block/BlockModelShaper; a
	getModelRenderer ()Lnet/minecraft/client/renderer/block/ModelBlockRenderer; b
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	renderBatched (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLnet/minecraft/util/RandomSource;)V a
	renderBreakingTexture (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderLiquid (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)V a
	renderSingleBlock (Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/block/LiquidBlockRenderer fak
	MAX_FLUID_HEIGHT a
	lavaIcons b
	waterIcons c
	waterOverlay d
	addWeightedHeight ([FF)V a
	calculateAverageHeight (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/material/Fluid;FFFLnet/minecraft/core/BlockPos;)F a
	getHeight (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;)F a
	getHeight (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)F a
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	isFaceOccludedByNeighbor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;FLnet/minecraft/world/level/block/state/BlockState;)Z a
	isFaceOccludedBySelf (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	isFaceOccludedByState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/Direction;FLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isNeighborSameFluid (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)Z a
	setupSprites ()V a
	shouldRenderFace (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)Z a
	tesselate (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDFFFFFI)V a
net/minecraft/client/renderer/block/ModelBlockRenderer fal
	CACHE f
	CACHE_SIZE e
	DIRECTIONS c
	FACE_CUBIC a
	FACE_PARTIAL b
	blockColors d
	calculateShape (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;[ILnet/minecraft/core/Direction;[FLjava/util/BitSet;)V a
	clearCache ()V b
	enableCaching ()V a
	putQuadData (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;FFFFIIIII)V a
	renderModel (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/resources/model/BakedModel;FFFII)V a
	renderModelFaceAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;[FLjava/util/BitSet;Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace;I)V a
	renderModelFaceFlat (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;IIZLcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;Ljava/util/BitSet;)V a
	renderQuadList (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFLjava/util/List;II)V a
	tesselateBlock (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLnet/minecraft/util/RandomSource;JI)V a
	tesselateWithAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLnet/minecraft/util/RandomSource;JI)V b
	tesselateWithoutAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLnet/minecraft/util/RandomSource;JI)V c
net/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo fal$a
	$VALUES n
	BY_FACING m
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	corners g
	doNonCubicWeight h
	vert0Weights i
	vert1Weights j
	vert2Weights k
	vert3Weights l
	$values ()[Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo; a
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo; a
net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace fal$b
	brightness a
	lightmap b
	blend (IIII)I a
	blend (IIIIFFFF)I a
	calculate (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;[FLjava/util/BitSet;Z)V a
net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap fal$c
	$VALUES l
	BY_FACING k
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	vert0 g
	vert1 h
	vert2 i
	vert3 j
	$values ()[Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap; a
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap; a
net/minecraft/client/renderer/block/ModelBlockRenderer$Cache fal$d
	brightnessCache c
	colorCache b
	enabled a
	disable ()V b
	enable ()V a
	getLightColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)F b
net/minecraft/client/renderer/block/ModelBlockRenderer$SizeInfo fal$e
	$VALUES n
	DOWN a
	EAST f
	FLIP_DOWN g
	FLIP_EAST l
	FLIP_NORTH i
	FLIP_SOUTH j
	FLIP_UP h
	FLIP_WEST k
	NORTH c
	SOUTH d
	UP b
	WEST e
	shape m
	$values ()[Lnet/minecraft/client/renderer/block/ModelBlockRenderer$SizeInfo; a
net/minecraft/client/renderer/block/model/BakedQuad fam
	direction c
	shade e
	sprite d
	tintIndex b
	vertices a
	getDirection ()Lnet/minecraft/core/Direction; e
	getSprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getTintIndex ()I d
	getVertices ()[I b
	isShade ()Z f
	isTinted ()Z c
net/minecraft/client/renderer/block/model/BlockElement fan
	DEFAULT_RESCALE f
	MAX_EXTENT h
	MIN_EXTENT g
	faces c
	from a
	rotation d
	shade e
	to b
	fillUvs ()V a
	uvsByFace (Lnet/minecraft/core/Direction;)[F a
net/minecraft/client/renderer/block/model/BlockElement$Deserializer fan$a
	DEFAULT_SHADE a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockElement; a
	filterNullFromFaces (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; b
	getAngle (Lcom/google/gson/JsonObject;)F b
	getAxis (Lcom/google/gson/JsonObject;)Lnet/minecraft/core/Direction$Axis; c
	getFaces (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; a
	getFacing (Ljava/lang/String;)Lnet/minecraft/core/Direction; a
	getFrom (Lcom/google/gson/JsonObject;)Lcom/mojang/math/Vector3f; e
	getRotation (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/BlockElementRotation; a
	getTo (Lcom/google/gson/JsonObject;)Lcom/mojang/math/Vector3f; d
	getVector3f (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/mojang/math/Vector3f; a
net/minecraft/client/renderer/block/model/BlockElementFace fao
	NO_TINT a
	cullForDirection b
	texture d
	tintIndex c
	uv e
net/minecraft/client/renderer/block/model/BlockElementFace$Deserializer fao$a
	DEFAULT_TINT_INDEX a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockElementFace; a
	getCullFacing (Lcom/google/gson/JsonObject;)Lnet/minecraft/core/Direction; c
	getTexture (Lcom/google/gson/JsonObject;)Ljava/lang/String; b
	getTintIndex (Lcom/google/gson/JsonObject;)I a
net/minecraft/client/renderer/block/model/BlockElementRotation fap
	angle c
	axis b
	origin a
	rescale d
net/minecraft/client/renderer/block/model/BlockFaceUV faq
	rotation b
	uvs a
	getReverseIndex (I)I c
	getShiftedIndex (I)I d
	getU (I)F a
	getV (I)F b
	setMissingUv ([F)V a
net/minecraft/client/renderer/block/model/BlockFaceUV$Deserializer faq$a
	DEFAULT_ROTATION a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockFaceUV; a
	getRotation (Lcom/google/gson/JsonObject;)I a
	getUVs (Lcom/google/gson/JsonObject;)[F b
net/minecraft/client/renderer/block/model/BlockModel far
	FACE_BAKERY h
	GSON a
	LOGGER g
	PARTICLE_TEXTURE_REFERENCE b
	REFERENCE_CHAR i
	elements j
	guiLight k
	hasAmbientOcclusion l
	name c
	overrides n
	parent e
	parentLocation f
	textureMap d
	transforms m
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Lnet/minecraft/client/renderer/block/model/BlockModel;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/resources/model/BakedModel; a
	bakeFace (Lnet/minecraft/client/renderer/block/model/BlockElement;Lnet/minecraft/client/renderer/block/model/BlockElementFace;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BakedQuad; a
	findTextureEntry (Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; d
	fromStream (Ljava/io/Reader;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	fromString (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getDependencies ()Ljava/util/Collection; f
	getElements ()Ljava/util/List; a
	getGuiLight ()Lnet/minecraft/client/renderer/block/model/BlockModel$GuiLight; c
	getItemOverrides (Lnet/minecraft/client/resources/model/ModelBakery;Lnet/minecraft/client/renderer/block/model/BlockModel;)Lnet/minecraft/client/renderer/block/model/ItemOverrides; a
	getMaterial (Ljava/lang/String;)Lnet/minecraft/client/resources/model/Material; c
	getMaterials (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; a
	getOverrides ()Ljava/util/List; e
	getRootModel ()Lnet/minecraft/client/renderer/block/model/BlockModel; g
	getTransform (Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; h
	hasAmbientOcclusion ()Z b
	hasTexture (Ljava/lang/String;)Z b
	isResolved ()Z d
	isTextureReference (Ljava/lang/String;)Z e
net/minecraft/client/renderer/block/model/BlockModel$Deserializer far$a
	DEFAULT_AMBIENT_OCCLUSION a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getAmbientOcclusion (Lcom/google/gson/JsonObject;)Z a
	getElements (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; b
	getOverrides (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; a
	getParentName (Lcom/google/gson/JsonObject;)Ljava/lang/String; c
	getTextureMap (Lcom/google/gson/JsonObject;)Ljava/util/Map; b
	parseTextureLocationOrReference (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; a
net/minecraft/client/renderer/block/model/BlockModel$GuiLight far$b
	$VALUES d
	FRONT a
	SIDE b
	name c
	$values ()[Lnet/minecraft/client/renderer/block/model/BlockModel$GuiLight; b
	getByName (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/BlockModel$GuiLight; a
	lightLikeBlock ()Z a
net/minecraft/client/renderer/block/model/BlockModel$LoopException far$c
net/minecraft/client/renderer/block/model/BlockModelDefinition fas
	multiPart b
	variants a
	fromStream (Lnet/minecraft/client/renderer/block/model/BlockModelDefinition$Context;Ljava/io/Reader;)Lnet/minecraft/client/renderer/block/model/BlockModelDefinition; a
	getMultiPart ()Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; d
	getMultiVariants ()Ljava/util/Set; b
	getVariant (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/MultiVariant; b
	getVariants ()Ljava/util/Map; a
	hasVariant (Ljava/lang/String;)Z a
	isMultiPart ()Z c
net/minecraft/client/renderer/block/model/BlockModelDefinition$Context fas$a
	definition b
	gson a
	getDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; a
	setDefinition (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/client/renderer/block/model/BlockModelDefinition$Deserializer fas$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockModelDefinition; a
	getMultiPart (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; b
	getVariants (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; a
net/minecraft/client/renderer/block/model/BlockModelDefinition$MissingVariantException fas$c
net/minecraft/client/renderer/block/model/FaceBakery fat
	COLOR_INDEX f
	RESCALE_22_5 d
	RESCALE_45 e
	UV_INDEX c
	VERTEX_COUNT b
	VERTEX_INT_SIZE a
	applyElementRotation (Lcom/mojang/math/Vector3f;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;)V a
	applyModelRotation (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Transformation;)V a
	bakeQuad (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;Lnet/minecraft/client/renderer/block/model/BlockElementFace;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;ZLnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BakedQuad; a
	bakeVertex ([IILnet/minecraft/core/Direction;Lnet/minecraft/client/renderer/block/model/BlockFaceUV;[FLnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lcom/mojang/math/Transformation;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;Z)V a
	calculateFacing ([I)Lnet/minecraft/core/Direction; a
	fillVertex ([IILcom/mojang/math/Vector3f;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/client/renderer/block/model/BlockFaceUV;)V a
	makeVertices (Lnet/minecraft/client/renderer/block/model/BlockFaceUV;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;[FLcom/mojang/math/Transformation;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;Z)[I a
	recalculateWinding ([ILnet/minecraft/core/Direction;)V a
	recomputeUVs (Lnet/minecraft/client/renderer/block/model/BlockFaceUV;Lnet/minecraft/core/Direction;Lcom/mojang/math/Transformation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BlockFaceUV; a
	rotateVertexBy (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Vector3f;)V a
	setupShape (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;)[F a
net/minecraft/client/renderer/block/model/ItemModelGenerator fau
	LAYERS a
	MAX_Z c
	MIN_Z b
	checkTransition (Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing;Ljava/util/List;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;IIIIIZ)V a
	createOrExpandSpan (Ljava/util/List;Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing;II)V a
	createSideElements (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Ljava/lang/String;I)Ljava/util/List; a
	generateBlockModel (Ljava/util/function/Function;Lnet/minecraft/client/renderer/block/model/BlockModel;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getSpans (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)Ljava/util/List; a
	isTransparent (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;IIIII)Z a
	processFrames (ILjava/lang/String;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)Ljava/util/List; a
net/minecraft/client/renderer/block/model/ItemModelGenerator$Span fau$a
	anchor d
	facing a
	max c
	min b
	expand (I)V a
	getAnchor ()I d
	getFacing ()Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing; a
	getMax ()I c
	getMin ()I b
net/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing fau$b
	$VALUES h
	DOWN b
	LEFT c
	RIGHT d
	UP a
	direction e
	xOffset f
	yOffset g
	$values ()[Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing; e
	getDirection ()Lnet/minecraft/core/Direction; a
	getXOffset ()I b
	getYOffset ()I c
	isHorizontal ()Z d
net/minecraft/client/renderer/block/model/ItemOverride fav
	model a
	predicates b
	getModel ()Lnet/minecraft/resources/ResourceLocation; a
	getPredicates ()Ljava/util/stream/Stream; b
net/minecraft/client/renderer/block/model/ItemOverride$Deserializer fav$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemOverride; a
	getPredicates (Lcom/google/gson/JsonObject;)Ljava/util/List; a
net/minecraft/client/renderer/block/model/ItemOverride$Predicate fav$b
	property a
	value b
	getProperty ()Lnet/minecraft/resources/ResourceLocation; a
	getValue ()F b
net/minecraft/client/renderer/block/model/ItemOverrides faw
	EMPTY a
	overrides b
	properties c
	bakeModel (Lnet/minecraft/client/resources/model/ModelBakery;Lnet/minecraft/client/renderer/block/model/BlockModel;Ljava/util/function/Function;Lnet/minecraft/client/renderer/block/model/ItemOverride;)Lnet/minecraft/client/resources/model/BakedModel; a
	resolve (Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/entity/LivingEntity;I)Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/renderer/block/model/ItemOverrides$BakedOverride faw$a
	matchers a
	model b
	test ([F)Z a
net/minecraft/client/renderer/block/model/ItemOverrides$PropertyMatcher faw$b
	index a
	value b
net/minecraft/client/renderer/block/model/ItemTransform fax
	NO_TRANSFORM a
	rotation b
	scale d
	translation c
	apply (ZLcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/renderer/block/model/ItemTransform$Deserializer fax$a
	DEFAULT_ROTATION c
	DEFAULT_SCALE e
	DEFAULT_TRANSLATION d
	MAX_SCALE b
	MAX_TRANSLATION a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	getVector3f (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/mojang/math/Vector3f;)Lcom/mojang/math/Vector3f; a
net/minecraft/client/renderer/block/model/ItemTransforms fay
	NO_TRANSFORMS a
	firstPersonLeftHand d
	firstPersonRightHand e
	fixed i
	ground h
	gui g
	head f
	thirdPersonLeftHand b
	thirdPersonRightHand c
	getTransform (Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	hasTransform (Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;)Z b
net/minecraft/client/renderer/block/model/ItemTransforms$Deserializer fay$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemTransforms; a
	getTransform (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
net/minecraft/client/renderer/block/model/ItemTransforms$TransformType fay$b
	$VALUES j
	FIRST_PERSON_LEFT_HAND d
	FIRST_PERSON_RIGHT_HAND e
	FIXED i
	GROUND h
	GUI g
	HEAD f
	NONE a
	THIRD_PERSON_LEFT_HAND b
	THIRD_PERSON_RIGHT_HAND c
	$values ()[Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType; b
	firstPerson ()Z a
net/minecraft/client/renderer/block/model/MultiVariant faz
	variants a
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	getMaterials (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; a
	getVariants ()Ljava/util/List; a
net/minecraft/client/renderer/block/model/MultiVariant$Deserializer faz$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/MultiVariant; a
net/minecraft/client/renderer/block/model/Variant fba
	modelLocation a
	rotation b
	uvLock c
	weight d
	getModelLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getRotation ()Lcom/mojang/math/Transformation; b
	getWeight ()I d
	isUvLocked ()Z c
net/minecraft/client/renderer/block/model/Variant$Deserializer fba$a
	DEFAULT_UVLOCK a
	DEFAULT_WEIGHT b
	DEFAULT_X_ROTATION c
	DEFAULT_Y_ROTATION d
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/Variant; a
	getBlockRotation (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/model/BlockModelRotation; a
	getModel (Lcom/google/gson/JsonObject;)Lnet/minecraft/resources/ResourceLocation; b
	getUvLock (Lcom/google/gson/JsonObject;)Z d
	getWeight (Lcom/google/gson/JsonObject;)I c
net/minecraft/client/renderer/block/model/multipart/AndCondition fbb
	TOKEN a
	conditions d
net/minecraft/client/renderer/block/model/multipart/Condition fbc
	FALSE c
	TRUE b
net/minecraft/client/renderer/block/model/multipart/KeyValueCondition fbd
	PIPE_SPLITTER a
	key d
	value e
	getBlockStatePredicate (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Ljava/util/function/Predicate; a
net/minecraft/client/renderer/block/model/multipart/MultiPart fbe
	definition a
	selectors b
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	getMaterials (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; a
	getMultiVariants ()Ljava/util/Set; b
	getSelectors ()Ljava/util/List; a
net/minecraft/client/renderer/block/model/multipart/MultiPart$Deserializer fbe$a
	context a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; a
	getSelectors (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonArray;)Ljava/util/List; a
net/minecraft/client/renderer/block/model/multipart/OrCondition fbf
	TOKEN a
	conditions d
net/minecraft/client/renderer/block/model/multipart/Selector fbg
	condition a
	variant b
	getPredicate (Lnet/minecraft/world/level/block/state/StateDefinition;)Ljava/util/function/Predicate; a
	getVariant ()Lnet/minecraft/client/renderer/block/model/MultiVariant; a
net/minecraft/client/renderer/block/model/multipart/Selector$Deserializer fbg$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/multipart/Selector; a
	getCondition (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; a
	getKeyValueCondition (Ljava/util/Map$Entry;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; a
	getSelector (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; b
net/minecraft/client/renderer/blockentity/BannerRenderer fbk
	BANNER_HEIGHT c
	BANNER_WIDTH b
	BAR f
	FLAG a
	MAX_PATTERNS d
	POLE e
	bar i
	flag g
	pole h
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	render (Lnet/minecraft/world/level/block/entity/BannerBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderPatterns (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/resources/model/Material;ZLjava/util/List;)V a
	renderPatterns (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/resources/model/Material;ZLjava/util/List;Z)V a
net/minecraft/client/renderer/blockentity/BeaconRenderer fbl
	BEAM_LOCATION a
	MAX_RENDER_Y b
	addVertex (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIFFFF)V a
	getViewDistance ()I am_
	render (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderBeaconBeam (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;FJII[F)V a
	renderBeaconBeam (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/resources/ResourceLocation;FFJII[FFF)V a
	renderPart (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIIFFFFFFFFFFFF)V a
	renderQuad (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIIFFFFFFFF)V a
	shouldRender (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;Lnet/minecraft/world/phys/Vec3;)Z a
	shouldRender (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/phys/Vec3;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
net/minecraft/client/renderer/blockentity/BedRenderer fbm
	footRoot b
	headRoot a
	createFootLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	createHeadLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	render (Lnet/minecraft/world/level/block/entity/BedBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderPiece (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/Material;IIZ)V a
net/minecraft/client/renderer/blockentity/BellRenderer fbn
	BELL_BODY b
	BELL_RESOURCE_LOCATION a
	bellBody c
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	render (Lnet/minecraft/world/level/block/entity/BellBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher fbo
	blockRenderDispatcher g
	camera b
	cameraHitResult c
	entityModelSet f
	entityRenderer i
	font e
	itemRenderer h
	level a
	renderers d
	getRenderer (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderer; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	prepare (Lnet/minecraft/world/level/Level;Lnet/minecraft/client/Camera;Lnet/minecraft/world/phys/HitResult;)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	renderItem (Lnet/minecraft/world/level/block/entity/BlockEntity;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)Z a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setupAndRender (Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderer;Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	tryRender (Lnet/minecraft/world/level/block/entity/BlockEntity;Ljava/lang/Runnable;)V a
net/minecraft/client/renderer/blockentity/BlockEntityRenderer fbp
	getViewDistance ()I am_
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	shouldRender (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/phys/Vec3;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
net/minecraft/client/renderer/blockentity/BlockEntityRendererProvider fbq
net/minecraft/client/renderer/blockentity/BlockEntityRendererProvider$Context fbq$a
	blockEntityRenderDispatcher a
	blockRenderDispatcher b
	entityRenderer d
	font f
	itemRenderer c
	modelSet e
	bakeLayer (Lnet/minecraft/client/model/geom/ModelLayerLocation;)Lnet/minecraft/client/model/geom/ModelPart; a
	getBlockEntityRenderDispatcher ()Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher; a
	getBlockRenderDispatcher ()Lnet/minecraft/client/renderer/block/BlockRenderDispatcher; b
	getEntityRenderer ()Lnet/minecraft/client/renderer/entity/EntityRenderDispatcher; c
	getFont ()Lnet/minecraft/client/gui/Font; f
	getItemRenderer ()Lnet/minecraft/client/renderer/entity/ItemRenderer; d
	getModelSet ()Lnet/minecraft/client/model/geom/EntityModelSet; e
net/minecraft/client/renderer/blockentity/BlockEntityRenderers fbr
	PROVIDERS a
	createEntityRenderers (Lnet/minecraft/client/renderer/blockentity/BlockEntityRendererProvider$Context;)Ljava/util/Map; a
	register (Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/client/renderer/blockentity/BlockEntityRendererProvider;)V a
net/minecraft/client/renderer/blockentity/BrightnessCombiner fbs
	acceptDouble (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; a
	acceptDouble (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
	acceptNone ()Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
	acceptNone ()Ljava/lang/Object; b
	acceptSingle (Ljava/lang/Object;)Ljava/lang/Object; a
	acceptSingle (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
net/minecraft/client/renderer/blockentity/CampfireRenderer fbt
	SIZE a
	itemRenderer b
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/ChestRenderer fbu
	BOTTOM a
	LID b
	LOCK c
	bottom e
	doubleLeftBottom h
	doubleLeftLid g
	doubleLeftLock i
	doubleRightBottom k
	doubleRightLid j
	doubleRightLock l
	lid d
	lock f
	xmasTextures m
	createDoubleBodyLeftLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; d
	createDoubleBodyRightLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	createSingleBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;FII)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/ConduitRenderer fbv
	ACTIVE_SHELL_TEXTURE b
	CLOSED_EYE_TEXTURE f
	OPEN_EYE_TEXTURE e
	SHELL_TEXTURE a
	VERTICAL_WIND_TEXTURE d
	WIND_TEXTURE c
	cage j
	eye g
	renderer k
	shell i
	wind h
	createCageLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; e
	createEyeLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createShellLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; d
	createWindLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/EnchantTableRenderer fbw
	BOOK_LOCATION a
	bookModel b
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/EnchantmentTableBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/LecternRenderer fbx
	bookModel a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/LecternBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/PistonHeadRenderer fby
	blockRenderer a
	getViewDistance ()I am_
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/Level;ZI)V a
net/minecraft/client/renderer/blockentity/ShulkerBoxRenderer fbz
	model a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/SignRenderer fca
	BLACK_TEXT_OUTLINE_COLOR d
	LINE_HEIGHT b
	MAX_LINE_WIDTH a
	OUTLINE_RENDER_DISTANCE e
	STICK c
	font g
	signModels f
	createSignLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createSignModel (Lnet/minecraft/client/model/geom/EntityModelSet;Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/renderer/blockentity/SignRenderer$SignModel; a
	getDarkColor (Lnet/minecraft/world/level/block/entity/SignBlockEntity;)I a
	getWoodType (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/properties/WoodType; a
	isOutlineVisible (Lnet/minecraft/world/level/block/entity/SignBlockEntity;I)Z a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SignBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/SignRenderer$SignModel fca$a
	root a
	stick b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/renderer/blockentity/SkullBlockRenderer fcb
	SKIN_BY_TYPE b
	modelByType a
	createSkullRenderers (Lnet/minecraft/client/model/geom/EntityModelSet;)Ljava/util/Map; a
	getRenderType (Lnet/minecraft/world/level/block/SkullBlock$Type;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/client/renderer/RenderType; a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SkullBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderSkull (Lnet/minecraft/core/Direction;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/model/SkullModelBase;Lnet/minecraft/client/renderer/RenderType;)V a
net/minecraft/client/renderer/blockentity/SpawnerRenderer fcc
	entityRenderer a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SpawnerBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/StructureBlockRenderer fcd
	getViewDistance ()I am_
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderInvisibleBlocks (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Z a
net/minecraft/client/renderer/blockentity/TheEndGatewayRenderer fce
	BEAM_LOCATION c
	getOffsetDown ()F c
	getOffsetUp ()F b
	getViewDistance ()I am_
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderType ()Lnet/minecraft/client/renderer/RenderType; d
net/minecraft/client/renderer/blockentity/TheEndPortalRenderer fcf
	END_PORTAL_LOCATION b
	END_SKY_LOCATION a
	getOffsetDown ()F c
	getOffsetUp ()F b
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderCube (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderFace (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFFFFLnet/minecraft/core/Direction;)V a
	renderType ()Lnet/minecraft/client/renderer/RenderType; d
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher fch
	LOGGER a
	MAX_HIGH_PRIORITY_QUOTA d
	MAX_WORKERS_32_BIT b
	VERTEX_FORMAT c
	camera q
	executor n
	fixedBuffers l
	freeBufferCount k
	freeBuffers h
	highPriorityQuota g
	level o
	mailbox m
	renderer p
	toBatchCount j
	toBatchHighPriority e
	toBatchLowPriority f
	toUpload i
	blockUntilClear ()V g
	clearBatchQueue ()V l
	dispose ()V i
	getCameraPosition ()Lnet/minecraft/world/phys/Vec3; e
	getFreeBufferCount ()I d
	getStats ()Ljava/lang/String; a
	getToBatchCount ()I b
	getToUpload ()I c
	isQueueEmpty ()Z h
	pollTask ()Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask; k
	rebuildChunkSync (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;Lnet/minecraft/client/renderer/chunk/RenderRegionCache;)V a
	runTask ()V j
	schedule (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask;)V a
	setCamera (Lnet/minecraft/world/phys/Vec3;)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	uploadAllPendingUploads ()V f
	uploadChunkLayer (Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer;Lcom/mojang/blaze3d/vertex/VertexBuffer;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$ChunkTaskResult fch$a
	$VALUES c
	CANCELLED b
	SUCCESSFUL a
	$values ()[Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$ChunkTaskResult; a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk fch$b
	UNCOMPILED a
	hasBlocks b
	renderableBlockEntities c
	transparencyState e
	visibilitySet d
	facesCanSeeEachother (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Z a
	getRenderableBlockEntities ()Ljava/util/List; b
	hasNoRenderableLayers ()Z a
	isEmpty (Lnet/minecraft/client/renderer/RenderType;)Z a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk fch$c
	SIZE a
	bb j
	buffers i
	compiled c
	dirty k
	globalBlockEntities h
	index b
	initialCompilationCancelCount e
	lastRebuildTask f
	lastResortTransparencyTask g
	origin l
	playerChanged n
	relativeOrigins m
	beginLayer (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V a
	cancelTasks ()Z j
	compileSync (Lnet/minecraft/client/renderer/chunk/RenderRegionCache;)V b
	createCompileTask (Lnet/minecraft/client/renderer/chunk/RenderRegionCache;)Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask; a
	doesChunkExistAt (Lnet/minecraft/core/BlockPos;)Z a
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; b
	getBuffer (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/VertexBuffer; a
	getCompiledChunk ()Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk; d
	getDistToPlayerSqr ()D c
	getOrigin ()Lnet/minecraft/core/BlockPos; f
	getRelativeOrigin (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos; a
	hasAllNeighbors ()Z a
	isDirty ()Z h
	isDirtyFromPlayer ()Z i
	rebuildChunkAsync (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher;Lnet/minecraft/client/renderer/chunk/RenderRegionCache;)V a
	releaseBuffers ()V e
	reset ()V k
	resortTransparency (Lnet/minecraft/client/renderer/RenderType;Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher;)Z a
	setDirty (Z)V a
	setNotDirty ()V g
	setOrigin (III)V a
	updateGlobalBlockEntities (Ljava/util/Collection;)V a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask fch$c$a
	distAtCreation a
	isCancelled b
	isHighPriority c
	cancel ()V a
	compareTo (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask;)I a
	doTask (Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
	name ()Ljava/lang/String; b
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$RebuildTask fch$c$b
	region e
	cancel ()V a
	compile (FFFLnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$RebuildTask$CompileResults; a
	doTask (Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
	handleBlockEntity (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$RebuildTask$CompileResults;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	name ()Ljava/lang/String; b
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$RebuildTask$CompileResults fch$c$b$a
	blockEntities b
	globalBlockEntities a
	renderedLayers c
	transparencyState e
	visibilitySet d
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ResortTransparencyTask fch$c$c
	compiledChunk f
	cancel ()V a
	doTask (Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
	name ()Ljava/lang/String; b
net/minecraft/client/renderer/chunk/RenderChunk fci
	blockEntities a
	debug c
	sections b
	wrapped d
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
net/minecraft/client/renderer/chunk/RenderChunkRegion fcj
	centerX c
	centerZ d
	chunks a
	level b
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getHeight ()I v_
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; l_
	getMinBuildHeight ()I u_
	getShade (Lnet/minecraft/core/Direction;Z)F a
net/minecraft/client/renderer/chunk/RenderRegionCache fck
	chunkInfoCache a
	createRegion (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/client/renderer/chunk/RenderChunkRegion; a
	isAllEmpty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II[[Lnet/minecraft/client/renderer/chunk/RenderRegionCache$ChunkInfo;)Z a
net/minecraft/client/renderer/chunk/RenderRegionCache$ChunkInfo fck$a
	chunk a
	renderChunk b
	chunk ()Lnet/minecraft/world/level/chunk/LevelChunk; a
	renderChunk ()Lnet/minecraft/client/renderer/chunk/RenderChunk; b
net/minecraft/client/renderer/chunk/VisGraph fcl
	DIRECTIONS l
	DX h
	DY j
	DZ i
	INDEX_OF_EDGES n
	INVALID_INDEX k
	LEN b
	MASK c
	SIZE d
	SIZE_IN_BITS a
	X_SHIFT e
	Y_SHIFT g
	Z_SHIFT f
	bitSet m
	empty o
	addEdges (ILjava/util/Set;)V a
	floodFill (I)Ljava/util/Set; a
	getIndex (III)I a
	getIndex (Lnet/minecraft/core/BlockPos;)I b
	getNeighborIndexAtFace (ILnet/minecraft/core/Direction;)I a
	resolve ()Lnet/minecraft/client/renderer/chunk/VisibilitySet; a
	setOpaque (Lnet/minecraft/core/BlockPos;)V a
net/minecraft/client/renderer/chunk/VisibilitySet fcm
	FACINGS a
	data b
	add (Ljava/util/Set;)V a
	set (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Z)V a
	setAll (Z)V a
	visibilityBetween (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Z a
net/minecraft/client/renderer/culling/Frustum fco
	OFFSET_STEP a
	camX d
	camY e
	camZ f
	frustumData b
	viewVector c
	calculateFrustum (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix4f;)V a
	cubeCompletelyInFrustum (FFFFFF)Z b
	cubeInFrustum (DDDDDD)Z a
	cubeInFrustum (FFFFFF)Z a
	getPlane (Lcom/mojang/math/Matrix4f;IIII)V a
	isVisible (Lnet/minecraft/world/phys/AABB;)Z a
	offsetToFullyIncludeCameraCube (I)Lnet/minecraft/client/renderer/culling/Frustum; a
	prepare (DDD)V a
net/minecraft/client/renderer/debug/BeeDebugRenderer fcq
	GRAY x
	GREEN w
	HIVE_TIMEOUT r
	MAX_RENDER_DIST_FOR_BEE_OVERLAY p
	MAX_RENDER_DIST_FOR_HIVE_OVERLAY o
	MAX_TARGETING_DIST q
	ORANGE v
	PINK y
	RED z
	SHOW_BLACKLISTS n
	SHOW_FLOWER_POS_FOR_ALL_BEES d
	SHOW_FLOWER_POS_FOR_SELECTED_BEE j
	SHOW_GOAL_FOR_ALL_BEES a
	SHOW_GOAL_FOR_SELECTED_BEE g
	SHOW_HIVE_FOR_ALL_BEES c
	SHOW_HIVE_FOR_SELECTED_BEE i
	SHOW_HIVE_MEMBERS m
	SHOW_NAME_FOR_ALL_BEES b
	SHOW_NAME_FOR_SELECTED_BEE h
	SHOW_PATH_FOR_ALL_BEES f
	SHOW_PATH_FOR_SELECTED_BEE l
	SHOW_TRAVEL_TICKS_FOR_ALL_BEES e
	SHOW_TRAVEL_TICKS_FOR_SELECTED_BEE k
	TEXT_SCALE s
	WHITE t
	YELLOW u
	beeInfosPerEntity C
	hives B
	lastLookedAtUuid D
	minecraft A
	addOrUpdateBeeInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)V a
	addOrUpdateHiveInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;)V a
	clear ()V a
	clearRemovedBees ()V b
	clearRemovedHives ()V c
	createHiveBlacklistMap ()Ljava/util/Map; e
	doRender ()V d
	getBeeUuidsAsString (Ljava/util/Collection;)Ljava/lang/String; a
	getCamera ()Lnet/minecraft/client/Camera; g
	getGhostHives ()Ljava/util/Map; h
	getHiveMemberNames (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;)Ljava/util/Set; b
	getHiveMembers (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; b
	getPosDescription (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	highlightHive (Lnet/minecraft/core/BlockPos;)V a
	isBeeSelected (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)Z d
	isPlayerCloseEnoughToMob (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)Z e
	removeBeeInfo (I)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderBeeInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)V c
	renderFlowerInfos ()V f
	renderGhostHive (Lnet/minecraft/core/BlockPos;Ljava/util/List;)V a
	renderHiveInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;Ljava/util/Collection;)V a
	renderPath (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)V b
	renderTextOverHive (Ljava/lang/String;Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;II)V a
	renderTextOverMob (Lnet/minecraft/core/Position;ILjava/lang/String;IF)V a
	renderTextOverPos (Ljava/lang/String;Lnet/minecraft/core/BlockPos;II)V a
	renderTransparentFilledBox (Lnet/minecraft/core/BlockPos;FFFFF)V a
	updateLastLookedAtUuid ()V i
net/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo fcq$a
	blacklistedHives i
	flowerPos f
	goals h
	hivePos e
	id b
	path d
	pos c
	travelTicks g
	uuid a
	getName ()Ljava/lang/String; b
	getUuid ()Ljava/util/UUID; a
	hasFlower ()Z c
	hasHive (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo fcq$b
	hiveType b
	honeyLevel d
	lastSeen f
	occupantCount c
	pos a
	sedated e
net/minecraft/client/renderer/debug/BrainDebugRenderer fcr
	CYAN D
	GRAY F
	GREEN E
	LOGGER a
	MAX_RENDER_DIST_FOR_BRAIN_INFO x
	MAX_RENDER_DIST_FOR_POI_INFO y
	MAX_TARGETING_DIST z
	ORANGE I
	PINK G
	RED H
	SHOW_ACTIVITIES_FOR_ALL e
	SHOW_ACTIVITIES_FOR_SELECTED o
	SHOW_ANGER_LEVEL_FOR_ALL k
	SHOW_ANGER_LEVEL_FOR_SELECTED v
	SHOW_BEHAVIORS_FOR_ALL d
	SHOW_BEHAVIORS_FOR_SELECTED n
	SHOW_GOSSIPS_FOR_ALL g
	SHOW_GOSSIPS_FOR_SELECTED r
	SHOW_HEALTH_FOR_ALL i
	SHOW_HEALTH_FOR_SELECTED t
	SHOW_INVENTORY_FOR_ALL f
	SHOW_INVENTORY_FOR_SELECTED q
	SHOW_MEMORIES_FOR_SELECTED p
	SHOW_NAME_FOR_ALL b
	SHOW_NAME_FOR_SELECTED l
	SHOW_PATH_FOR_ALL h
	SHOW_PATH_FOR_SELECTED s
	SHOW_POI_INFO w
	SHOW_PROFESSION_FOR_ALL c
	SHOW_PROFESSION_FOR_SELECTED m
	SHOW_WANTS_GOLEM_FOR_ALL j
	SHOW_WANTS_GOLEM_FOR_SELECTED u
	TEXT_SCALE A
	WHITE B
	YELLOW C
	brainDumpsPerEntity L
	lastLookedAtUuid M
	minecraft J
	pois K
	addOrUpdateBrainDump (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)V a
	addPoi (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)V a
	clear ()V a
	clearRemovedEntities ()V b
	doRender (DDD)V a
	getGhostPois ()Ljava/util/Map; c
	getPotentialTicketHolderNames (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)Ljava/util/Set; d
	getPotentialTicketHolders (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; d
	getTicketHolderNames (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)Ljava/util/Set; c
	getTicketHolders (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; c
	highlightPoi (Lnet/minecraft/core/BlockPos;)V b
	isMobSelected (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)Z b
	isPlayerCloseEnoughToMob (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)Z c
	removeBrainDump (I)V a
	removePoi (Lnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderBrainInfo (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;DDD)V b
	renderGhostPoi (Lnet/minecraft/core/BlockPos;Ljava/util/List;)V a
	renderPath (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;DDD)V a
	renderPoiInfo (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)V b
	renderTextOverMob (Lnet/minecraft/core/Position;ILjava/lang/String;IF)V a
	renderTextOverPoi (Ljava/lang/String;Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;II)V a
	renderTextOverPos (Ljava/lang/String;Lnet/minecraft/core/BlockPos;II)V a
	setFreeTicketCount (Lnet/minecraft/core/BlockPos;I)V a
	updateLastLookedAtUuid ()V d
net/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump fcr$a
	activities m
	angerLevel l
	behaviors n
	gossips p
	health f
	id b
	inventory i
	maxHealth g
	memories o
	name c
	path j
	pois q
	pos h
	potentialPois r
	profession d
	uuid a
	wantsGolem k
	xp e
	getUuid ()Ljava/util/UUID; a
	hasPoi (Lnet/minecraft/core/BlockPos;)Z a
	hasPotentialPoi (Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo fcr$b
	freeTicketCount c
	pos a
	type b
net/minecraft/client/renderer/debug/ChunkBorderRenderer fcs
	CELL_BORDER b
	YELLOW c
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/ChunkDebugRenderer fct
	data d
	lastUpdateTime b
	minecraft a
	radius c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/ChunkDebugRenderer$ChunkData fct$a
	clientData b
	serverData c
net/minecraft/client/renderer/debug/CollisionBoxRenderer fcu
	lastUpdateTime b
	minecraft a
	shapes c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/DebugRenderer fcv
	beeDebugRenderer n
	brainDebugRenderer l
	chunkBorderRenderer c
	chunkRenderer k
	collisionBoxRenderer e
	gameEventListenerRenderer r
	gameTestDebugRenderer q
	goalSelectorRenderer p
	heightMapRenderer d
	lightDebugRenderer h
	neighborsUpdateRenderer f
	pathfindingRenderer a
	raidDebugRenderer o
	renderChunkborder s
	solidFaceRenderer j
	structureRenderer g
	villageSectionsDebugRenderer m
	waterDebugRenderer b
	worldGenAttemptRenderer i
	clear ()V a
	getTargetedEntity (Lnet/minecraft/world/entity/Entity;I)Ljava/util/Optional; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;DDD)V a
	renderFilledBox (DDDDDDFFFF)V a
	renderFilledBox (Lnet/minecraft/core/BlockPos;FFFFF)V a
	renderFilledBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;FFFF)V a
	renderFilledBox (Lnet/minecraft/world/phys/AABB;FFFF)V a
	renderFloatingText (Ljava/lang/String;DDDI)V a
	renderFloatingText (Ljava/lang/String;DDDIF)V a
	renderFloatingText (Ljava/lang/String;DDDIFZFZ)V a
	renderFloatingText (Ljava/lang/String;IIII)V a
	switchRenderChunkborder ()Z b
net/minecraft/client/renderer/debug/DebugRenderer$SimpleDebugRenderer fcv$a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/GameEventListenerRenderer fcw
	BOX_HEIGHT c
	LISTENER_RENDER_DIST b
	minecraft a
	trackedGameEvents d
	trackedListeners e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderTransparentFilledBox (Lnet/minecraft/world/phys/AABB;FFFF)V a
	trackGameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;)V a
	trackListener (Lnet/minecraft/world/level/gameevent/PositionSource;I)V a
net/minecraft/client/renderer/debug/GameEventListenerRenderer$TrackedGameEvent fcw$a
	gameEvent b
	position c
	timeStamp a
	gameEvent ()Lnet/minecraft/world/level/gameevent/GameEvent; c
	isExpired ()Z a
	position ()Lnet/minecraft/world/phys/Vec3; d
	timeStamp ()J b
net/minecraft/client/renderer/debug/GameEventListenerRenderer$TrackedListener fcw$b
	listenerRange b
	listenerSource a
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	getPosition (Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	handleGameEvent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEvent$Message;)Z a
	isExpired (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;)Z a
net/minecraft/client/renderer/debug/GameTestDebugRenderer fcx
	PADDING a
	markers b
	addMarker (Lnet/minecraft/core/BlockPos;ILjava/lang/String;I)V a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderMarker (Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker;)V a
net/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker fcx$a
	color a
	removeAtTime c
	text b
	getA ()F d
	getB ()F c
	getG ()F b
	getR ()F a
net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer fcy
	MAX_RENDER_DIST a
	goalSelectors c
	minecraft b
	addGoalSelector (ILjava/util/List;)V a
	clear ()V a
	removeGoalSelector (I)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer$DebugGoal fcy$a
	isRunning d
	name c
	pos a
	priority b
net/minecraft/client/renderer/debug/HeightMapRenderer fcz
	BOX_HEIGHT c
	CHUNK_DIST b
	minecraft a
	getColor (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lcom/mojang/math/Vector3f; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/LightDebugRenderer fda
	MAX_RENDER_DIST b
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/NeighborsUpdateRenderer fdb
	lastUpdate b
	minecraft a
	addUpdate (JLnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/PathfindingRenderer fdc
	MAX_RENDER_DIST e
	SHOW_GROUND_LABELS j
	SHOW_OPEN_CLOSED f
	SHOW_OPEN_CLOSED_COST_MALUS g
	SHOW_OPEN_CLOSED_NODE_TYPE_WITH_BOX i
	SHOW_OPEN_CLOSED_NODE_TYPE_WITH_TEXT h
	TEXT_SCALE k
	TIMEOUT d
	creationMap c
	pathMap a
	pathMaxDist b
	addPath (ILnet/minecraft/world/level/pathfinder/Path;F)V a
	distanceToCamera (Lnet/minecraft/core/BlockPos;DDD)F a
	doRenderPath (Lnet/minecraft/world/level/pathfinder/Path;FZZDDD)V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderPath (Lnet/minecraft/world/level/pathfinder/Path;FZZDDD)V a
	renderPathLine (Lnet/minecraft/world/level/pathfinder/Path;DDD)V a
net/minecraft/client/renderer/debug/RaidDebugRenderer fdd
	MAX_RENDER_DIST a
	TEXT_SCALE b
	minecraft c
	raidCenters d
	getCamera ()Lnet/minecraft/client/Camera; b
	highlightRaidCenter (Lnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderTextOverBlock (Ljava/lang/String;Lnet/minecraft/core/BlockPos;I)V a
	setRaidCenters (Ljava/util/Collection;)V a
net/minecraft/client/renderer/debug/SolidFaceRenderer fde
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/StructureRenderer fdf
	MAX_RENDER_DIST e
	minecraft a
	postMainBoxes b
	postPiecesBoxes c
	startPiecesMap d
	addBoundingBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/List;Ljava/util/List;Lnet/minecraft/world/level/dimension/DimensionType;)V a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/VillageSectionsDebugRenderer fdg
	MAX_RENDER_DIST_FOR_VILLAGE_SECTIONS a
	villageSections b
	clear ()V a
	doRender (DDD)V a
	highlightVillageSection (Lnet/minecraft/core/SectionPos;)V c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	setNotVillageSection (Lnet/minecraft/core/SectionPos;)V b
	setVillageSection (Lnet/minecraft/core/SectionPos;)V a
net/minecraft/client/renderer/debug/WaterDebugRenderer fdh
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/WorldGenAttemptRenderer fdi
	alphas c
	blues f
	greens e
	reds d
	scales b
	toRender a
	addPos (Lnet/minecraft/core/BlockPos;FFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/entity/AbstractHorseRenderer fdk
	scale a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/AbstractZombieRenderer fdl
	ZOMBIE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/Zombie;)Z b
net/minecraft/client/renderer/entity/AllayRenderer fdm
	ALLAY_TEXTURE a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/animal/allay/Allay;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/allay/Allay;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ArmorStandRenderer fdn
	DEFAULT_SKIN_LOCATION a
	getRenderType (Lnet/minecraft/world/entity/LivingEntity;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/entity/decoration/ArmorStand;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/ArmorStand;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/decoration/ArmorStand;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/decoration/ArmorStand;)Z b
net/minecraft/client/renderer/entity/ArrowRenderer fdo
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/AbstractArrow;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIIFFIIII)V a
net/minecraft/client/renderer/entity/AxolotlRenderer fdp
	TEXTURE_BY_TYPE a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/BatRenderer fdq
	BAT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/ambient/Bat;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/ambient/Bat;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/ambient/Bat;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/BeeRenderer fdr
	ANGRY_BEE_TEXTURE a
	ANGRY_NECTAR_BEE_TEXTURE i
	BEE_TEXTURE j
	NECTAR_BEE_TEXTURE k
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/BlazeRenderer fds
	BLAZE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/Blaze;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Blaze;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/BoatRenderer fdt
	boatResources a
	createBoatModel (Lnet/minecraft/client/renderer/entity/EntityRendererProvider$Context;Lnet/minecraft/world/entity/vehicle/Boat$Type;Z)Lnet/minecraft/client/model/BoatModel; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/vehicle/Boat$Type;Z)Ljava/lang/String; a
	getTextureLocation (Lnet/minecraft/world/entity/vehicle/Boat;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/vehicle/Boat;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/CatRenderer fdu
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cat;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/Cat;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Cat;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/CaveSpiderRenderer fdv
	CAVE_SPIDER_LOCATION a
	SCALE i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/CaveSpider;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Spider;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/CaveSpider;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/ChestedHorseRenderer fdw
	MAP a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ChickenRenderer fdx
	CHICKEN_LOCATION a
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Chicken;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Chicken;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/CodRenderer fdy
	COD_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cod;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Cod;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/CowRenderer fdz
	COW_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/CreeperRenderer fea
	CREEPER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Creeper;)Lnet/minecraft/resources/ResourceLocation; a
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/LivingEntity;F)F b
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/monster/Creeper;F)F a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Creeper;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/DolphinRenderer feb
	DOLPHIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Dolphin;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/DragonFireballRenderer fec
	RENDER_TYPE f
	TEXTURE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/DragonFireball;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/DragonFireball;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/DragonFireball;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;IFIII)V a
net/minecraft/client/renderer/entity/DrownedRenderer fed
	DROWNED_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Drowned;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ElderGuardianRenderer fee
	GUARDIAN_ELDER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Guardian;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Guardian;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/EndCrystalRenderer fef
	BASE i
	END_CRYSTAL_LOCATION a
	GLASS h
	RENDER_TYPE f
	SIN_45 g
	base l
	cube j
	glass k
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;)Lnet/minecraft/resources/ResourceLocation; a
	getY (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;F)F a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
net/minecraft/client/renderer/entity/EnderDragonRenderer feg
	BEAM l
	CRYSTAL_BEAM_LOCATION a
	DECAL j
	DRAGON_EXPLODING_LOCATION f
	DRAGON_EYES_LOCATION h
	DRAGON_LOCATION g
	EYES k
	HALF_SQRT_3 m
	RENDER_TYPE i
	model n
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderCrystalBeams (FFFFILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex01 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;I)V a
	vertex2 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;FF)V a
	vertex3 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;FF)V b
	vertex4 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;FF)V c
net/minecraft/client/renderer/entity/EnderDragonRenderer$DragonModel feg$a
	a z
	body g
	entity y
	head a
	jaw f
	leftFrontFoot l
	leftFrontLeg j
	leftFrontLegTip k
	leftRearFoot o
	leftRearLeg m
	leftRearLegTip n
	leftWing h
	leftWingTip i
	neck b
	rightFrontFoot t
	rightFrontLeg r
	rightFrontLegTip s
	rightRearFoot x
	rightRearLeg v
	rightRearLegTip w
	rightWing p
	rightWingTip q
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFF)V a
	renderSide (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFLnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;F)V a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFFFF)V a
net/minecraft/client/renderer/entity/EndermanRenderer feh
	ENDERMAN_LOCATION a
	random i
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/monster/EnderMan;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/EnderMan;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/EnderMan;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/EndermiteRenderer fei
	ENDERMITE_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Endermite;)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Endermite;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/renderer/entity/EntityRenderDispatcher fej
	SHADOW_RENDER_TYPE e
	blockRenderDispatcher k
	camera b
	cameraOrientation i
	crosshairPickEntity c
	entityModels n
	font m
	itemInHandRenderer l
	itemRenderer j
	level h
	options d
	playerRenderers g
	renderHitBoxes p
	renderers f
	shouldRenderShadow o
	textureManager a
	cameraOrientation ()Lcom/mojang/math/Quaternion; b
	distanceToSqr (DDD)D a
	distanceToSqr (Lnet/minecraft/world/entity/Entity;)D b
	fireVertex (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFF)V a
	getItemInHandRenderer ()Lnet/minecraft/client/renderer/ItemInHandRenderer; d
	getPackedLightCoords (Lnet/minecraft/world/entity/Entity;F)I a
	getRenderer (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/client/renderer/entity/EntityRenderer; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	overrideCameraOrientation (Lcom/mojang/math/Quaternion;)V a
	prepare (Lnet/minecraft/world/level/Level;Lnet/minecraft/client/Camera;Lnet/minecraft/world/entity/Entity;)V a
	render (Lnet/minecraft/world/entity/Entity;DDDFFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderBlockShadow (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;DDDFF)V a
	renderFlame (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;)V a
	renderHitbox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/Entity;F)V a
	renderShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;FFLnet/minecraft/world/level/LevelReader;F)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setRenderHitBoxes (Z)V b
	setRenderShadow (Z)V a
	shadowVertex (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFF)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRenderHitBoxes ()Z a
net/minecraft/client/renderer/entity/EntityRenderer fek
	NAMETAG_SCALE b
	entityRenderDispatcher c
	font a
	shadowRadius d
	shadowStrength e
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getFont ()Lnet/minecraft/client/gui/Font; b
	getPackedLightCoords (Lnet/minecraft/world/entity/Entity;F)I b
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getSkyLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I b
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
net/minecraft/client/renderer/entity/EntityRendererProvider fel
net/minecraft/client/renderer/entity/EntityRendererProvider$Context fel$a
	blockRenderDispatcher c
	entityRenderDispatcher a
	font g
	itemInHandRenderer d
	itemRenderer b
	modelSet f
	resourceManager e
	bakeLayer (Lnet/minecraft/client/model/geom/ModelLayerLocation;)Lnet/minecraft/client/model/geom/ModelPart; a
	getBlockRenderDispatcher ()Lnet/minecraft/client/renderer/block/BlockRenderDispatcher; c
	getEntityRenderDispatcher ()Lnet/minecraft/client/renderer/entity/EntityRenderDispatcher; a
	getFont ()Lnet/minecraft/client/gui/Font; g
	getItemInHandRenderer ()Lnet/minecraft/client/renderer/ItemInHandRenderer; d
	getItemRenderer ()Lnet/minecraft/client/renderer/entity/ItemRenderer; b
	getModelSet ()Lnet/minecraft/client/model/geom/EntityModelSet; f
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; e
net/minecraft/client/renderer/entity/EntityRenderers fem
	DEFAULT_PLAYER_MODEL a
	LOGGER b
	PLAYER_PROVIDERS d
	PROVIDERS c
	createEntityRenderers (Lnet/minecraft/client/renderer/entity/EntityRendererProvider$Context;)Ljava/util/Map; a
	createPlayerRenderers (Lnet/minecraft/client/renderer/entity/EntityRendererProvider$Context;)Ljava/util/Map; b
	register (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/client/renderer/entity/EntityRendererProvider;)V a
	validateRegistrations ()Z a
net/minecraft/client/renderer/entity/EvokerFangsRenderer fen
	TEXTURE_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/EvokerFangs;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/EvokerFangs;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/EvokerRenderer feo
	EVOKER_ILLAGER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/SpellcasterIllager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ExperienceOrbRenderer fep
	EXPERIENCE_ORB_LOCATION a
	RENDER_TYPE f
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/ExperienceOrb;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/ExperienceOrb;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/ExperienceOrb;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;FFIIIFFI)V a
net/minecraft/client/renderer/entity/FallingBlockRenderer feq
	dispatcher a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/FallingBlockEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/FallingBlockEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/FireworkEntityRenderer fer
	itemRenderer a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/FishingHookRenderer fes
	RENDER_TYPE f
	TEXTURE_LOCATION a
	VIEW_BOBBING_SCALE g
	fraction (II)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/FishingHook;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/FishingHook;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	stringVertex (FFFLcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;FF)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;IFIII)V a
net/minecraft/client/renderer/entity/FoxRenderer fet
	RED_FOX_SLEEP_TEXTURE i
	RED_FOX_TEXTURE a
	SNOW_FOX_SLEEP_TEXTURE k
	SNOW_FOX_TEXTURE j
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Fox;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Fox;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/FrogRenderer feu
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/frog/Frog;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/GhastRenderer fev
	GHAST_LOCATION a
	GHAST_SHOOTING_LOCATION i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Ghast;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Ghast;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/GiantMobRenderer few
	ZOMBIE_LOCATION a
	scale i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Giant;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Giant;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/GlowSquidRenderer fex
	GLOW_SQUID_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/GlowSquid;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/GlowSquid;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Squid;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/GoatRenderer fey
	GOAT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/goat/Goat;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/GuardianRenderer fez
	BEAM_RENDER_TYPE j
	GUARDIAN_BEAM_LOCATION i
	GUARDIAN_LOCATION a
	getPosition (Lnet/minecraft/world/entity/LivingEntity;DF)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Guardian;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Guardian;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/monster/Guardian;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;FFFIIIFF)V a
net/minecraft/client/renderer/entity/HoglinRenderer ffa
	HOGLIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z b
net/minecraft/client/renderer/entity/HorseRenderer ffb
	LOCATION_BY_VARIANT a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/Horse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/HumanoidMobRenderer ffc
	DEFAULT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/HuskRenderer ffd
	HUSK_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Zombie;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/IllagerRenderer ffe
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/AbstractIllager;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/IllusionerRenderer fff
	ILLUSIONER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Illusioner;)Lnet/minecraft/resources/ResourceLocation; a
	isBodyVisible (Lnet/minecraft/world/entity/LivingEntity;)Z d
	isBodyVisible (Lnet/minecraft/world/entity/monster/Illusioner;)Z b
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Illusioner;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/IronGolemRenderer ffg
	GOLEM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/IronGolem;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/IronGolem;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ItemEntityRenderer ffh
	FLAT_ITEM_BUNDLE_OFFSET_X j
	FLAT_ITEM_BUNDLE_OFFSET_Y k
	FLAT_ITEM_BUNDLE_OFFSET_Z l
	ITEM_BUNDLE_OFFSET_SCALE a
	ITEM_COUNT_FOR_2_BUNDLE i
	ITEM_COUNT_FOR_3_BUNDLE h
	ITEM_COUNT_FOR_4_BUNDLE g
	ITEM_COUNT_FOR_5_BUNDLE f
	itemRenderer m
	random n
	getRenderAmount (Lnet/minecraft/world/item/ItemStack;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/ItemEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/ItemEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ItemFrameRenderer ffi
	BRIGHT_MAP_LIGHT_ADJUSTMENT f
	FRAME_LOCATION g
	GLOW_FRAME_BRIGHTNESS a
	GLOW_FRAME_LOCATION i
	GLOW_MAP_FRAME_LOCATION j
	MAP_FRAME_LOCATION h
	blockRenderer l
	itemRenderer k
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/decoration/ItemFrame;Lnet/minecraft/core/BlockPos;)I a
	getFrameModelResourceLoc (Lnet/minecraft/world/entity/decoration/ItemFrame;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/resources/model/ModelResourceLocation; a
	getLightVal (Lnet/minecraft/world/entity/decoration/ItemFrame;II)I a
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/decoration/ItemFrame;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/ItemFrame;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/ItemFrame;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/decoration/ItemFrame;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/decoration/ItemFrame;)Z b
net/minecraft/client/renderer/entity/ItemRenderer ffj
	COMPASS_FOIL_FIRST_PERSON_SCALE d
	COMPASS_FOIL_UI_SCALE c
	ENCHANT_GLINT_LOCATION a
	GUI_SLOT_CENTER_X g
	GUI_SLOT_CENTER_Y h
	IGNORED f
	ITEM_COUNT_BLIT_OFFSET b
	blitOffset e
	blockEntityRenderer l
	itemColors k
	itemModelShaper i
	textureManager j
	fillRect (Lcom/mojang/blaze3d/vertex/BufferBuilder;IIIIIIII)V a
	getArmorFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	getCompassFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	getCompassFoilBufferDirect (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	getFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	getFoilBufferDirect (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; c
	getItemModelShaper ()Lnet/minecraft/client/renderer/ItemModelShaper; a
	getModel (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)Lnet/minecraft/client/resources/model/BakedModel; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	render (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/resources/model/BakedModel;)V a
	renderAndDecorateFakeItem (Lnet/minecraft/world/item/ItemStack;II)V c
	renderAndDecorateItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;III)V a
	renderAndDecorateItem (Lnet/minecraft/world/item/ItemStack;II)V b
	renderAndDecorateItem (Lnet/minecraft/world/item/ItemStack;III)V a
	renderAndDecorateItem (Lnet/minecraft/world/item/ItemStack;IIII)V a
	renderGuiItem (Lnet/minecraft/world/item/ItemStack;II)V a
	renderGuiItem (Lnet/minecraft/world/item/ItemStack;IILnet/minecraft/client/resources/model/BakedModel;)V a
	renderGuiItemDecorations (Lnet/minecraft/client/gui/Font;Lnet/minecraft/world/item/ItemStack;II)V a
	renderGuiItemDecorations (Lnet/minecraft/client/gui/Font;Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;)V a
	renderModelLists (Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/item/ItemStack;IILcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderQuadList (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;Lnet/minecraft/world/item/ItemStack;II)V a
	renderStatic (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/Level;III)V a
	renderStatic (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;IILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	tryRenderGuiItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;III)V b
	tryRenderGuiItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;IIII)V a
net/minecraft/client/renderer/entity/LeashKnotRenderer ffk
	KNOT_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/LightningBoltRenderer ffl
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/LightningBolt;)Lnet/minecraft/resources/ResourceLocation; a
	quad (Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFIFFFFFFFZZZZ)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LightningBolt;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/LivingEntityRenderer ffm
	EYE_BED_OFFSET h
	LOGGER a
	layers g
	model f
	addLayer (Lnet/minecraft/client/renderer/entity/layers/RenderLayer;)Z a
	getAttackAnim (Lnet/minecraft/world/entity/LivingEntity;F)F d
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getModel ()Lnet/minecraft/client/model/EntityModel; a
	getOverlayCoords (Lnet/minecraft/world/entity/LivingEntity;F)I c
	getRenderType (Lnet/minecraft/world/entity/LivingEntity;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/LivingEntity;F)F b
	isBodyVisible (Lnet/minecraft/world/entity/LivingEntity;)Z d
	isEntityUpsideDown (Lnet/minecraft/world/entity/LivingEntity;)Z e
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	sleepDirectionToRotation (Lnet/minecraft/core/Direction;)F a
net/minecraft/client/renderer/entity/LlamaRenderer ffn
	LLAMA_LOCATIONS a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/Llama;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/LlamaSpitRenderer ffo
	LLAMA_SPIT_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/LlamaSpit;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/LlamaSpit;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/MagmaCubeRenderer ffp
	MAGMACUBE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/MagmaCube;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/MagmaCube;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/MagmaCube;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/MinecartRenderer ffq
	MINECART_LOCATION f
	blockRenderer g
	model a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/MobRenderer ffr
	LEASH_RENDER_STEPS h
	addVertexPair (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;FFFIIIIFFFFIZ)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderLeash (Lnet/minecraft/world/entity/Mob;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/Mob;)Z b
net/minecraft/client/renderer/entity/MushroomCowRenderer ffs
	TEXTURES a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/MushroomCow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/NoopRenderer fft
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/OcelotRenderer ffu
	CAT_OCELOT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Ocelot;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PaintingRenderer ffv
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/Painting;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/Painting;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderPainting (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/decoration/Painting;IILnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	vertex (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFIIII)V a
net/minecraft/client/renderer/entity/PandaRenderer ffw
	TEXTURES a
	getAngle (FFIFF)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Panda;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Panda;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ParrotRenderer ffx
	PARROT_LOCATIONS a
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Parrot;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Parrot;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PhantomRenderer ffy
	PHANTOM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Phantom;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Phantom;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Phantom;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/PigRenderer ffz
	PIG_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Pig;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PiglinRenderer fga
	PIGLIN_CUSTOM_HEAD_SCALE i
	TEXTURES a
	createModel (Lnet/minecraft/client/model/geom/EntityModelSet;Lnet/minecraft/client/model/geom/ModelLayerLocation;Z)Lnet/minecraft/client/model/PiglinModel; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/Mob;)Z c
net/minecraft/client/renderer/entity/PillagerRenderer fgb
	PILLAGER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Pillager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PolarBearRenderer fgc
	BEAR_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/PolarBear;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/PolarBear;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/PufferfishRenderer fgd
	PUFFER_LOCATION a
	big l
	mid k
	puffStateO i
	small j
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Pufferfish;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Pufferfish;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Pufferfish;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/RabbitRenderer fge
	RABBIT_BLACK_LOCATION j
	RABBIT_BROWN_LOCATION a
	RABBIT_EVIL_LOCATION o
	RABBIT_GOLD_LOCATION k
	RABBIT_SALT_LOCATION l
	RABBIT_TOAST_LOCATION n
	RABBIT_WHITE_LOCATION i
	RABBIT_WHITE_SPLOTCHED_LOCATION m
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Rabbit;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/RavagerRenderer fgf
	TEXTURE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Ravager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/RenderLayerParent fgg
	getModel ()Lnet/minecraft/client/model/EntityModel; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SalmonRenderer fgh
	SALMON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Salmon;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Salmon;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/SheepRenderer fgi
	SHEEP_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Sheep;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ShulkerBulletRenderer fgj
	RENDER_TYPE f
	TEXTURE_LOCATION a
	model g
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/ShulkerBullet;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/ShulkerBullet;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/ShulkerBullet;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ShulkerRenderer fgk
	DEFAULT_TEXTURE_LOCATION a
	TEXTURE_LOCATION i
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/monster/Shulker;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Shulker;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Shulker;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/monster/Shulker;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
net/minecraft/client/renderer/entity/SilverfishRenderer fgl
	SILVERFISH_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Silverfish;)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Silverfish;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/renderer/entity/SkeletonRenderer fgm
	SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Z b
net/minecraft/client/renderer/entity/SlimeRenderer fgn
	SLIME_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Slime;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Slime;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Slime;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/SnowGolemRenderer fgo
	SNOW_GOLEM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/SnowGolem;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SpectralArrowRenderer fgp
	SPECTRAL_ARROW_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/SpectralArrow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SpiderRenderer fgq
	SPIDER_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Spider;)F b
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Spider;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SquidRenderer fgr
	SQUID_LOCATION a
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Squid;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Squid;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Squid;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/StrayRenderer fgs
	STRAY_SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/StriderRenderer fgt
	COLD_LOCATION i
	STRIDER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Strider;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/Strider;)Z b
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Strider;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/TadpoleRenderer fgu
	TADPOLE_TEXTURE a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/frog/Tadpole;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ThrownItemRenderer fgv
	MIN_CAMERA_DISTANCE_SQUARED a
	fullBright h
	itemRenderer f
	scale g
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ThrownTridentRenderer fgw
	TRIDENT_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/ThrownTrident;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/ThrownTrident;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/TippableArrowRenderer fgx
	NORMAL_ARROW_LOCATION a
	TIPPED_ARROW_LOCATION f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/Arrow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/TntMinecartRenderer fgy
	blockRenderer f
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/MinecartTNT;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderWhiteSolidBlock (Lnet/minecraft/client/renderer/block/BlockRenderDispatcher;Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IZ)V a
net/minecraft/client/renderer/entity/TntRenderer fgz
	blockRenderer a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/PrimedTnt;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/PrimedTnt;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/TropicalFishRenderer fha
	modelA a
	modelB i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/TropicalFish;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/TropicalFish;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/TropicalFish;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/TurtleRenderer fhb
	TURTLE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Turtle;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Turtle;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/UndeadHorseRenderer fhc
	MAP a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/VexRenderer fhd
	VEX_CHARGING_LOCATION i
	VEX_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/Vex;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Vex;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Vex;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/VillagerRenderer fhe
	VILLAGER_BASE_SKIN a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/npc/Villager;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/VindicatorRenderer fhf
	VINDICATOR a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Vindicator;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/WanderingTraderRenderer fhg
	VILLAGER_BASE_SKIN a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/npc/WanderingTrader;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/npc/WanderingTrader;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WardenRenderer fhh
	BIOLUMINESCENT_LAYER_TEXTURE i
	HEART_TEXTURE j
	PULSATING_SPOTS_TEXTURE_1 k
	PULSATING_SPOTS_TEXTURE_2 l
	TEXTURE a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/warden/Warden;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/WitchRenderer fhi
	WITCH_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Witch;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Witch;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Witch;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherBossRenderer fhj
	WITHER_INVULNERABLE_LOCATION a
	WITHER_LOCATION i
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/boss/wither/WitherBoss;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/wither/WitherBoss;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/boss/wither/WitherBoss;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherSkeletonRenderer fhk
	WITHER_SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/AbstractSkeleton;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherSkullRenderer fhl
	WITHER_INVULNERABLE_LOCATION a
	WITHER_LOCATION f
	model g
	createSkullLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/WitherSkull;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/WitherSkull;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/WitherSkull;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/WolfRenderer fhm
	WOLF_ANGRY_LOCATION j
	WOLF_LOCATION a
	WOLF_TAME_LOCATION i
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Wolf;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Wolf;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Wolf;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ZoglinRenderer fhn
	ZOGLIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zoglin;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ZombieRenderer fho
net/minecraft/client/renderer/entity/ZombieVillagerRenderer fhp
	ZOMBIE_VILLAGER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/ZombieVillager;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/ZombieVillager;)Z b
net/minecraft/client/renderer/entity/layers/ArrowLayer fhq
	dispatcher a
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
net/minecraft/client/renderer/entity/layers/BeeStingerLayer fhr
	BEE_STINGER_LOCATION a
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;FIFFI)V a
net/minecraft/client/renderer/entity/layers/CapeLayer fhs
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CarriedBlockLayer fht
	blockRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/EnderMan;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CatCollarLayer fhu
	CAT_COLLAR_LOCATION a
	catModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Cat;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CreeperPowerLayer fhv
	POWER_LOCATION a
	model b
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/CrossedArmsItemLayer fhw
	itemInHandRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CustomHeadLayer fhx
	itemInHandRenderer e
	scaleX a
	scaleY b
	scaleZ c
	skullModels d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	translateToHead (Lcom/mojang/blaze3d/vertex/PoseStack;Z)V a
net/minecraft/client/renderer/entity/layers/Deadmau5EarsLayer fhy
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/DolphinCarryingItemLayer fhz
	itemInHandRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Dolphin;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/DrownedOuterLayer fia
	DROWNED_OUTER_LAYER_LOCATION a
	model b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/Drowned;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ElytraLayer fib
	WINGS_LOCATION a
	elytraModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/EnderEyesLayer fic
	ENDERMAN_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/EnergySwirlLayer fid
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/EyesLayer fie
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/FoxHeldItemLayer fif
	itemInHandRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Fox;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HorseArmorLayer fig
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Horse;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HorseMarkingLayer fih
	LOCATION_BY_MARKINGS a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Horse;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer fii
	ARMOR_LOCATION_CACHE a
	innerModel b
	outerModel c
	getArmorLocation (Lnet/minecraft/world/item/ArmorItem;ZLjava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getArmorModel (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/client/model/HumanoidModel; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderArmorPiece (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;ILnet/minecraft/client/model/HumanoidModel;)V a
	renderModel (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/item/ArmorItem;ZLnet/minecraft/client/model/HumanoidModel;ZFFFLjava/lang/String;)V a
	setPartVisibility (Lnet/minecraft/client/model/HumanoidModel;Lnet/minecraft/world/entity/EquipmentSlot;)V a
	usesInnerModel (Lnet/minecraft/world/entity/EquipmentSlot;)Z b
net/minecraft/client/renderer/entity/layers/IronGolemCrackinessLayer fij
	resourceLocations a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/IronGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/IronGolemFlowerLayer fik
	blockRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/IronGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ItemInHandLayer fil
	itemInHandRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderArmWithItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/layers/LlamaDecorLayer fim
	TEXTURE_LOCATION a
	TRADER_LLAMA b
	model c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Llama;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/MushroomCowMushroomLayer fin
	blockRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/MushroomCow;FFFFFF)V a
	renderMushroomBlock (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IZLnet/minecraft/world/level/block/state/BlockState;ILnet/minecraft/client/resources/model/BakedModel;)V a
net/minecraft/client/renderer/entity/layers/PandaHoldsItemLayer fio
	itemInHandRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Panda;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ParrotOnShoulderLayer fip
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/player/Player;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/player/Player;FFFFZ)V a
net/minecraft/client/renderer/entity/layers/PhantomEyesLayer fiq
	PHANTOM_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/PlayerItemInHandLayer fir
	X_ROT_MAX c
	X_ROT_MIN b
	itemInHandRenderer a
	renderArmWithItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderArmWithSpyglass (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/layers/RenderLayer fis
	renderer a
	coloredCutoutModelCopyLayerRender (Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFFFFF)V a
	getParentModel ()Lnet/minecraft/client/model/EntityModel; c
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	renderColoredCutoutModel (Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFF)V a
net/minecraft/client/renderer/entity/layers/SaddleLayer fit
	model b
	textureLocation a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SheepFurLayer fiu
	SHEEP_FUR_LOCATION a
	model b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Sheep;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ShulkerHeadLayer fiv
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/Shulker;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SlimeOuterLayer fiw
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SnowGolemHeadLayer fix
	blockRenderer a
	itemRenderer b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/SnowGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SpiderEyesLayer fiy
	SPIDER_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/SpinAttackEffectLayer fiz
	BOX b
	TEXTURE a
	box c
	createLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/StrayClothingLayer fja
	STRAY_CLOTHES_LOCATION a
	layerModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Mob;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/StuckInBodyLayer fjb
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
net/minecraft/client/renderer/entity/layers/TropicalFishPatternLayer fjc
	modelA a
	modelB b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/TropicalFish;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/VillagerProfessionLayer fjd
	LEVEL_LOCATIONS a
	path e
	professionHatCache c
	resourceManager d
	typeHatCache b
	getHatData (Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;Ljava/lang/String;Lnet/minecraft/core/DefaultedRegistry;Ljava/lang/Object;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
	getResourceLocation (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/WardenEmissiveLayer fje
	alphaFunction b
	drawSelector c
	texture a
	onlyDrawSelectedParts ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/warden/Warden;FFFFFF)V a
	resetDrawForAllParts ()V b
net/minecraft/client/renderer/entity/layers/WardenEmissiveLayer$AlphaFunction fje$a
net/minecraft/client/renderer/entity/layers/WardenEmissiveLayer$DrawSelector fje$b
net/minecraft/client/renderer/entity/layers/WitchItemLayer fjf
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/WitherArmorLayer fjg
	WITHER_ARMOR_LOCATION a
	model b
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/WolfCollarLayer fjh
	WOLF_COLLAR_LOCATION a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Wolf;FFFFFF)V a
net/minecraft/client/renderer/entity/player/PlayerRenderer fjk
	getArmPose (Lnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/client/model/HumanoidModel$ArmPose; a
	getRenderOffset (Lnet/minecraft/client/player/AbstractClientPlayer;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/client/player/AbstractClientPlayer;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/client/player/AbstractClientPlayer;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;)V a
	renderLeftHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;)V b
	renderNameTag (Lnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderRightHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;)V a
	scale (Lnet/minecraft/client/player/AbstractClientPlayer;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setModelProperties (Lnet/minecraft/client/player/AbstractClientPlayer;)V b
	setupRotations (Lnet/minecraft/client/player/AbstractClientPlayer;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/item/ClampedItemPropertyFunction fjm
net/minecraft/client/renderer/item/CompassItemPropertyFunction fjn
	DEFAULT_ROTATION a
	compassTarget b
	wobble c
	wobbleRandom d
	getAngleFromEntityToPos (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)D a
	getCompassRotation (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/multiplayer/ClientLevel;ILnet/minecraft/world/entity/Entity;)F a
	getRandomlySpinningRotation (IJ)F a
	getRotationTowardsCompassTarget (Lnet/minecraft/world/entity/Entity;JLnet/minecraft/core/BlockPos;)F a
	getWrappedVisualRotationY (Lnet/minecraft/world/entity/Entity;)D a
	hash (I)I a
	isValidCompassTargetPos (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/GlobalPos;)Z a
	tryFetchLevelIfMissing (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/multiplayer/ClientLevel;)Lnet/minecraft/client/multiplayer/ClientLevel; a
net/minecraft/client/renderer/item/CompassItemPropertyFunction$CompassTarget fjn$a
net/minecraft/client/renderer/item/CompassItemPropertyFunction$CompassWobble fjn$b
	deltaRotation b
	lastUpdateTick c
	rotation a
	shouldUpdate (J)Z a
	update (JD)V a
net/minecraft/client/renderer/item/ItemProperties fjo
	DAMAGE d
	DAMAGED c
	GENERIC_PROPERTIES a
	PROPERTIES g
	PROPERTY_DAMAGE f
	PROPERTY_DAMAGED e
	TAG_CUSTOM_MODEL_DATA b
	getProperty (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/item/ItemPropertyFunction; a
	register (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/item/ClampedItemPropertyFunction;)V a
	registerCustomModelData (Lnet/minecraft/client/renderer/item/ItemPropertyFunction;)V a
	registerGeneric (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/item/ClampedItemPropertyFunction;)Lnet/minecraft/client/renderer/item/ClampedItemPropertyFunction; a
net/minecraft/client/renderer/item/ItemPropertyFunction fjp
net/minecraft/client/renderer/texture/AbstractTexture fjs
	NOT_ASSIGNED a
	blur c
	id b
	mipmap d
	bind ()V d
	getId ()I b
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	releaseId ()V c
	reset (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)V a
	setFilter (ZZ)V a
net/minecraft/client/renderer/texture/AtlasSet fjt
	atlases a
	getAtlas (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlas; a
	getSprite (Lnet/minecraft/client/resources/model/Material;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
net/minecraft/client/renderer/texture/DynamicTexture fju
	LOGGER e
	pixels f
	getPixels ()Lcom/mojang/blaze3d/platform/NativeImage; e
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	setPixels (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	upload ()V a
net/minecraft/client/renderer/texture/HttpTexture fjv
	LEGACY_SKIN_HEIGHT i
	LOGGER f
	SKIN_HEIGHT h
	SKIN_WIDTH g
	file j
	future n
	onDownloaded m
	processLegacySkin l
	uploaded o
	urlString k
	doNotchTransparencyHack (Lcom/mojang/blaze3d/platform/NativeImage;IIII)V a
	load (Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	loadCallback (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	processLegacySkin (Lcom/mojang/blaze3d/platform/NativeImage;)Lcom/mojang/blaze3d/platform/NativeImage; c
	setNoAlpha (Lcom/mojang/blaze3d/platform/NativeImage;IIII)V b
	upload (Lcom/mojang/blaze3d/platform/NativeImage;)V b
net/minecraft/client/renderer/texture/MipmapGenerator fjw
	ALPHA_CUTOUT_CUTOFF a
	POW22 b
	alphaBlend (IIIIZ)I a
	gammaBlend (IIIII)I a
	generateMipLevels (Lcom/mojang/blaze3d/platform/NativeImage;I)[Lcom/mojang/blaze3d/platform/NativeImage; a
	getPow22 (I)F a
net/minecraft/client/renderer/texture/MissingTextureAtlasSprite fjx
	INFO h
	MISSING_IMAGE_DATA g
	MISSING_IMAGE_HEIGHT c
	MISSING_IMAGE_WIDTH b
	MISSING_TEXTURE_LOCATION e
	MISSING_TEXTURE_NAME d
	missingTexture f
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getTexture ()Lnet/minecraft/client/renderer/texture/DynamicTexture; c
	info ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$Info; b
	newInstance (Lnet/minecraft/client/renderer/texture/TextureAtlas;IIIII)Lnet/minecraft/client/renderer/texture/MissingTextureAtlasSprite; a
net/minecraft/client/renderer/texture/OverlayTexture fjy
	NO_OVERLAY d
	NO_WHITE_U a
	RED_OVERLAY_V b
	SIZE e
	WHITE_OVERLAY_V c
	texture f
	pack (FZ)I a
	pack (II)I a
	setupOverlayColor ()V a
	teardownOverlayColor ()V b
	u (F)I a
	v (Z)I a
net/minecraft/client/renderer/texture/PreloadedTexture fjz
	future f
	executor (Ljava/util/concurrent/Executor;)Ljava/util/concurrent/Executor; a
	getFuture ()Ljava/util/concurrent/CompletableFuture; a
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
	reset (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)V a
net/minecraft/client/renderer/texture/SimpleTexture fka
	LOGGER f
	location e
	doLoad (Lcom/mojang/blaze3d/platform/NativeImage;ZZ)V a
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/renderer/texture/SimpleTexture$TextureImage fka$a
	exception c
	image b
	metadata a
	getImage ()Lcom/mojang/blaze3d/platform/NativeImage; b
	getTextureMetadata ()Lnet/minecraft/client/resources/metadata/texture/TextureMetadataSection; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; a
	throwIfError ()V c
net/minecraft/client/renderer/texture/Stitcher fkb
	HOLDER_COMPARATOR a
	maxHeight h
	maxWidth g
	mipLevel b
	storage d
	storageX e
	storageY f
	texturesToBeStitched c
	addToStorage (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z a
	expand (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z b
	gatherSprites (Lnet/minecraft/client/renderer/texture/Stitcher$SpriteLoader;)V a
	getHeight ()I b
	getWidth ()I a
	registerSprite (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$Info;)V a
	smallestFittingMinTexel (II)I a
	stitch ()V c
net/minecraft/client/renderer/texture/Stitcher$Holder fkb$a
	height c
	spriteInfo a
	width b
net/minecraft/client/renderer/texture/Stitcher$Region fkb$b
	height d
	holder f
	originX a
	originY b
	subSlots e
	width c
	add (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z a
	getHolder ()Lnet/minecraft/client/renderer/texture/Stitcher$Holder; a
	getX ()I b
	getY ()I c
	walk (Ljava/util/function/Consumer;)V a
net/minecraft/client/renderer/texture/Stitcher$SpriteLoader fkb$c
net/minecraft/client/renderer/texture/StitcherException fkc
	allSprites a
	getAllSprites ()Ljava/util/Collection; a
net/minecraft/client/renderer/texture/TextureAtlas fkd
	FILE_EXTENSION h
	LOCATION_BLOCKS e
	LOCATION_PARTICLES f
	LOGGER g
	animatedTextures i
	location l
	maxSupportedTextureSize m
	sprites j
	texturesByName k
	clearTextureData ()V f
	cycleAnimationFrames ()V a
	getBasicSpriteInfos (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/Set;)Ljava/util/Collection; a
	getLoadedSprites (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/Stitcher;I)Ljava/util/List; a
	getResourceLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; b
	getSprite (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$Info;IIIII)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	location ()Lnet/minecraft/resources/ResourceLocation; g
	prepareToStitch (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/stream/Stream;Lnet/minecraft/util/profiling/ProfilerFiller;I)Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations; a
	reload (Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations;)V a
	tick ()V e
	updateFilter (Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations;)V b
net/minecraft/client/renderer/texture/TextureAtlas$Preparations fkd$a
	height c
	mipLevel d
	regions e
	sprites a
	width b
net/minecraft/client/renderer/texture/TextureAtlasSprite fke
	LOGGER b
	animatedTexture g
	atlas c
	height f
	mainImage a
	name d
	u0 j
	u1 k
	v0 l
	v1 m
	width e
	x h
	y i
	atlas ()Lnet/minecraft/client/renderer/texture/TextureAtlas; m
	atlasSize ()F b
	createTicker (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$Info;III)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$AnimatedTexture; a
	getAnimationTicker ()Lnet/minecraft/client/renderer/texture/Tickable; q
	getFrameCount ()I a
	getHeight ()I g
	getName ()Lnet/minecraft/resources/ResourceLocation; l
	getU (D)F a
	getU0 ()F h
	getU1 ()F i
	getUOffset (F)F a
	getUniqueFrames ()Ljava/util/stream/IntStream; n
	getV (D)F b
	getV0 ()F j
	getV1 ()F k
	getVOffset (F)F b
	getWidth ()I f
	getX ()I d
	getY ()I e
	isTransparent (III)Z a
	upload (II[Lcom/mojang/blaze3d/platform/NativeImage;)V a
	uploadFirstFrame ()V o
	uvShrinkRatio ()F p
	wrap (Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
net/minecraft/client/renderer/texture/TextureAtlasSprite$AnimatedTexture fke$a
	frame b
	frameRowSize e
	frames d
	interpolationData f
	subFrame c
	getFrameX (I)I a
	getFrameY (I)I b
	getUniqueFrames ()Ljava/util/stream/IntStream; b
	tick ()V e
	uploadFirstFrame ()V a
	uploadFrame (I)V c
net/minecraft/client/renderer/texture/TextureAtlasSprite$FrameInfo fke$b
	index a
	time b
net/minecraft/client/renderer/texture/TextureAtlasSprite$Info fke$c
	height c
	metadata d
	name a
	width b
	height ()I c
	name ()Lnet/minecraft/resources/ResourceLocation; a
	width ()I b
net/minecraft/client/renderer/texture/TextureAtlasSprite$InterpolationData fke$d
	activeFrame b
	getPixel (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$AnimatedTexture;IIII)I a
	mix (DII)I a
	uploadInterpolatedFrame (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$AnimatedTexture;)V a
net/minecraft/client/renderer/texture/TextureManager fkf
	INTENTIONAL_MISSING_TEXTURE a
	LOGGER b
	byPath c
	prefixRegister e
	resourceManager f
	tickableTextures d
	_bind (Lnet/minecraft/resources/ResourceLocation;)V d
	bindForSetup (Lnet/minecraft/resources/ResourceLocation;)V a
	execute (Ljava/lang/Runnable;)V a
	getTexture (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/AbstractTexture; b
	getTexture (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)Lnet/minecraft/client/renderer/texture/AbstractTexture; b
	loadTexture (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)Lnet/minecraft/client/renderer/texture/AbstractTexture; d
	preload (Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	register (Ljava/lang/String;Lnet/minecraft/client/renderer/texture/DynamicTexture;)Lnet/minecraft/resources/ResourceLocation; a
	register (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)V a
	release (Lnet/minecraft/resources/ResourceLocation;)V c
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	safeClose (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)V c
	tick ()V e
net/minecraft/client/renderer/texture/Tickable fkg
	tick ()V e
net/minecraft/client/resources/AssetIndex fki
	LOGGER a
	namespacedFiles c
	rootFiles b
	getFile (Lnet/minecraft/resources/ResourceLocation;)Ljava/io/File; a
	getFiles (Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	getRootFile (Ljava/lang/String;)Ljava/io/File; a
net/minecraft/client/resources/ClientPackSource fkj
	APPLYING_PACK_TEXT j
	BUILT_IN a
	LOGGER b
	MAX_KEPT_PACKS e
	MAX_PACK_SIZE_BYTES d
	PROGRAMMER_ART_ID h
	PROGRAMMER_ART_NAME i
	SERVER_ID g
	SHA1 c
	VANILLA_ID f
	assetIndex n
	currentDownload o
	downloadLock m
	serverPack p
	serverPackDir l
	vanillaPack k
	checkHash (Ljava/lang/String;Ljava/io/File;)Z a
	clearOldDownloads ()V d
	clearServerPack ()Ljava/util/concurrent/CompletableFuture; b
	createProgrammerArtDirPack (Ljava/io/File;)Lnet/minecraft/server/packs/FolderPackResources; b
	createProgrammerArtPack (Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)Lnet/minecraft/server/packs/repository/Pack; a
	createProgrammerArtPack (Lnet/minecraft/server/packs/repository/Pack$PackConstructor;Ljava/util/function/Supplier;)Lnet/minecraft/server/packs/repository/Pack; a
	createProgrammerArtZipPack (Ljava/io/File;)Lnet/minecraft/server/packs/PackResources; c
	deleteQuietly (Ljava/io/File;)V a
	downloadAndSelectResourcePack (Ljava/net/URL;Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture; a
	getDownloadHeaders ()Ljava/util/Map; c
	getVanillaPack ()Lnet/minecraft/server/packs/VanillaPackResources; a
	loadBundledResourcePack (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Ljava/util/concurrent/CompletableFuture; a
	loadPacks (Ljava/util/function/Consumer;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)V a
	setServerPack (Ljava/io/File;Lnet/minecraft/server/packs/repository/PackSource;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/resources/DefaultClientPackResources fkk
	assetIndex g
	getResourceAsStream (Ljava/lang/String;)Ljava/io/InputStream; a
	getResourceAsStream (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; c
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
net/minecraft/client/resources/DefaultPlayerSkin fkl
	ALEX_MODEL d
	ALEX_SKIN_LOCATION b
	STEVE_MODEL c
	STEVE_SKIN_LOCATION a
	getDefaultSkin ()Lnet/minecraft/resources/ResourceLocation; a
	getDefaultSkin (Ljava/util/UUID;)Lnet/minecraft/resources/ResourceLocation; a
	getSkinModelName (Ljava/util/UUID;)Ljava/lang/String; b
	isAlexDefault (Ljava/util/UUID;)Z c
net/minecraft/client/resources/DirectAssetIndex fkm
	LOGGER a
	assetsDirectory b
	getFile (Lnet/minecraft/resources/ResourceLocation;)Ljava/io/File; a
	getFiles (Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	getRootFile (Ljava/lang/String;)Ljava/io/File; a
net/minecraft/client/resources/FoliageColorReloadListener fkn
	LOCATION a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply ([ILnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)[I a
net/minecraft/client/resources/GrassColorReloadListener fko
	LOCATION a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply ([ILnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)[I a
net/minecraft/client/resources/LegacyPackResourcesAdapter fkp
	V3 a
	patches e
	source b
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
	map (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; b
	toMetaLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/resources/LegacyStuffWrapper fkq
	getPixels (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)[I a
net/minecraft/client/resources/MobEffectTextureManager fkr
	get (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getResourcesToLoad ()Ljava/util/stream/Stream; a
net/minecraft/client/resources/PackResourcesAdapterV4 fks
	BANNERS m
	BANNER_BASE b
	CHESTS j
	DEFAULT_BANNER_SIZE g
	DEFAULT_CHEST_SIZE e
	DEFAULT_SHIELD_SIZE f
	NEW_IRON_GOLEM_PATH i
	OLD_IRON_GOLEM_LOCATION h
	PATTERNS k
	SHIELDS l
	SHIELD_BASE a
	pack n
	copyRect (Lcom/mojang/blaze3d/platform/NativeImage;Lcom/mojang/blaze3d/platform/NativeImage;IIIIIIIZZ)V a
	fixConduitEyeTexture (Ljava/io/InputStream;)Ljava/io/InputStream; a
	fixLeftChest (Ljava/io/InputStream;)Ljava/io/InputStream; b
	fixPattern (Ljava/io/InputStream;Ljava/io/InputStream;IIIII)Ljava/io/InputStream; a
	fixRightChest (Ljava/io/InputStream;)Ljava/io/InputStream; c
	fixSingleChest (Ljava/io/InputStream;)Ljava/io/InputStream; d
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
net/minecraft/client/resources/PaintingTextureManager fkt
	BACK_SPRITE_LOCATION a
	get (Lnet/minecraft/world/entity/decoration/PaintingVariant;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getBackSprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; b
	getResourcesToLoad ()Ljava/util/stream/Stream; a
net/minecraft/client/resources/SkinManager fku
	PROPERTY_TEXTURES a
	insecureSkinCache e
	sessionService d
	skinsDirectory c
	textureManager b
	getInsecureSkinInformation (Lcom/mojang/authlib/GameProfile;)Ljava/util/Map; a
	getInsecureSkinLocation (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/resources/ResourceLocation; b
	getTextureLocation (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	registerSkins (Lcom/mojang/authlib/GameProfile;Lnet/minecraft/client/resources/SkinManager$SkinTextureCallback;Z)V a
	registerTexture (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;)Lnet/minecraft/resources/ResourceLocation; a
	registerTexture (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lnet/minecraft/client/resources/SkinManager$SkinTextureCallback;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/resources/SkinManager$SkinTextureCallback fku$a
net/minecraft/client/resources/SplashManager fkv
	RANDOM b
	SPLASHES_LOCATION a
	splashes c
	user d
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/List;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getSplash ()Ljava/lang/String; a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/util/List; a
net/minecraft/client/resources/TextureAtlasHolder fkw
	prefix b
	textureAtlas a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getResourcesToLoad ()Ljava/util/stream/Stream; a
	getSprite (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations; a
	resolveLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/resources/language/ClientLanguage fkx
	LOGGER b
	defaultRightToLeft d
	storage c
	appendFrom (Ljava/lang/String;Ljava/util/List;Ljava/util/Map;)V a
	getOrDefault (Ljava/lang/String;)Ljava/lang/String; a
	getVisualOrder (Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/util/FormattedCharSequence; a
	has (Ljava/lang/String;)Z b
	isDefaultRightToLeft ()Z b
	loadFrom (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/List;)Lnet/minecraft/client/resources/language/ClientLanguage; a
net/minecraft/client/resources/language/FormattedBidiReorder fky
	reorder (Lnet/minecraft/network/chat/FormattedText;Z)Lnet/minecraft/util/FormattedCharSequence; a
	shape (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/client/resources/language/I18n fkz
	language a
	exists (Ljava/lang/String;)Z a
	get (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; a
	setLanguage (Lnet/minecraft/locale/Language;)V a
net/minecraft/client/resources/language/LanguageInfo fla
	bidirectional d
	code a
	name c
	region b
	compareTo (Lnet/minecraft/client/resources/language/LanguageInfo;)I a
	isBidirectional ()Z a
net/minecraft/client/resources/language/LanguageManager flb
	DEFAULT_LANGUAGE c
	DEFAULT_LANGUAGE_CODE a
	LOGGER b
	currentCode e
	currentLanguage f
	languages d
	extractLanguages (Ljava/util/stream/Stream;)Ljava/util/Map; a
	getLanguage (Ljava/lang/String;)Lnet/minecraft/client/resources/language/LanguageInfo; a
	getLanguages ()Ljava/util/SortedSet; b
	getSelected ()Lnet/minecraft/client/resources/language/LanguageInfo; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	setSelected (Lnet/minecraft/client/resources/language/LanguageInfo;)V a
net/minecraft/client/resources/metadata/animation/AnimationFrame fld
	UNKNOWN_FRAME_TIME a
	index b
	time c
	getIndex ()I a
	getTime (I)I a
net/minecraft/client/resources/metadata/animation/AnimationMetadataSection fle
	DEFAULT_FRAME_TIME c
	EMPTY e
	SECTION_NAME b
	SERIALIZER a
	UNKNOWN_SIZE d
	defaultFrameTime i
	frameHeight h
	frameWidth g
	frames f
	interpolatedFrames j
	calculateFrameSize (II)Lcom/mojang/datafixers/util/Pair; c
	forEachFrame (Lnet/minecraft/client/resources/metadata/animation/AnimationMetadataSection$FrameOutput;)V a
	getDefaultFrameTime ()I a
	getFrameHeight (I)I a
	getFrameSize (II)Lcom/mojang/datafixers/util/Pair; a
	getFrameWidth (I)I b
	isDivisionInteger (II)Z b
	isInterpolatedFrames ()Z b
net/minecraft/client/resources/metadata/animation/AnimationMetadataSection$FrameOutput fle$a
net/minecraft/client/resources/metadata/animation/AnimationMetadataSectionSerializer flf
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/animation/AnimationMetadataSection; b
	getFrame (ILcom/google/gson/JsonElement;)Lnet/minecraft/client/resources/metadata/animation/AnimationFrame; a
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection flg
	SECTION_NAME b
	SERIALIZER a
	hat c
	getHat ()Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat flg$a
	$VALUES f
	BY_NAME d
	FULL c
	NONE a
	PARTIAL b
	name e
	$values ()[Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; b
	getByName (Ljava/lang/String;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
	getName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/animation/VillagerMetadataSectionSerializer flh
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/language/LanguageMetadataSection flj
	DEFAULT_BIDIRECTIONAL b
	SERIALIZER a
	languages c
	getLanguages ()Ljava/util/Collection; a
net/minecraft/client/resources/metadata/language/LanguageMetadataSectionSerializer flk
	MAX_LANGUAGE_LENGTH a
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/language/LanguageMetadataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/texture/TextureMetadataSection fln
	DEFAULT_BLUR b
	DEFAULT_CLAMP c
	SERIALIZER a
	blur d
	clamp e
	isBlur ()Z a
	isClamp ()Z b
net/minecraft/client/resources/metadata/texture/TextureMetadataSectionSerializer flo
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/texture/TextureMetadataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/model/BakedModel flq
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/BlockModelRotation flr
	$VALUES v
	BY_INDEX r
	DEGREES q
	X0_Y0 a
	X0_Y180 c
	X0_Y270 d
	X0_Y90 b
	X180_Y0 i
	X180_Y180 k
	X180_Y270 l
	X180_Y90 j
	X270_Y0 m
	X270_Y180 o
	X270_Y270 p
	X270_Y90 n
	X90_Y0 e
	X90_Y180 g
	X90_Y270 h
	X90_Y90 f
	actualRotation t
	index u
	transformation s
	$values ()[Lnet/minecraft/client/resources/model/BlockModelRotation; d
	actualRotation ()Lcom/mojang/math/OctahedralGroup; a
	by (II)Lnet/minecraft/client/resources/model/BlockModelRotation; a
	getIndex (II)I b
	getRotation ()Lcom/mojang/math/Transformation; b
net/minecraft/client/resources/model/BuiltInModel fls
	itemTransforms a
	overrides b
	particleTexture c
	usesBlockLight d
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/Material flt
	atlasLocation a
	renderType c
	texture b
	atlasLocation ()Lnet/minecraft/resources/ResourceLocation; a
	buffer (Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/util/function/Function;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	buffer (Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/util/function/Function;Z)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	renderType (Ljava/util/function/Function;)Lnet/minecraft/client/renderer/RenderType; a
	sprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; c
	texture ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/resources/model/ModelBakery flu
	BANNER_BASE f
	BLOCK_ENTITY_MARKER q
	BREAKING_LOCATIONS k
	BUILTIN_BLOCK_ENTITY w
	BUILTIN_MODELS z
	BUILTIN_SLASH u
	BUILTIN_SLASH_GENERATED v
	COMMA_SPLITTER A
	DESTROY_STAGES j
	DESTROY_STAGE_COUNT i
	DESTROY_TYPES l
	EQUAL_SPLITTER B
	FIRE_0 a
	FIRE_1 b
	GENERATION_MARKER p
	INVISIBLE_MODEL_GROUP s
	ITEM_FRAME_FAKE_DEFINITION C
	ITEM_MODEL_GENERATOR D
	LAVA_FLOW c
	LOGGER t
	MISSING_MODEL_LOCATION n
	MISSING_MODEL_LOCATION_STRING y
	MISSING_MODEL_MESH o
	MISSING_MODEL_NAME x
	NO_PATTERN_SHIELD h
	SHIELD_BASE g
	SINGLETON_MODEL_GROUP m
	STATIC_DEFINITIONS E
	UNREFERENCED_TEXTURES r
	WATER_FLOW d
	WATER_OVERLAY e
	atlasPreparations O
	atlasSet G
	bakedCache L
	bakedTopLevelModels N
	blockColors H
	context J
	loadingStack I
	modelGroups Q
	nextModelGroup P
	resourceManager F
	topLevelModels M
	unbakedCache K
	bake (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/model/ModelState;)Lnet/minecraft/client/resources/model/BakedModel; a
	cacheAndQueueDependencies (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/model/UnbakedModel;)V a
	getBakedTopLevelModels ()Ljava/util/Map; a
	getModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/UnbakedModel; a
	getModelGroups ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; b
	getValueHelper (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Ljava/lang/Comparable; a
	loadBlockModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BlockModel; c
	loadModel (Lnet/minecraft/resources/ResourceLocation;)V b
	loadTopLevel (Lnet/minecraft/client/resources/model/ModelResourceLocation;)V a
	predicate (Lnet/minecraft/world/level/block/state/StateDefinition;Ljava/lang/String;)Ljava/util/function/Predicate; a
	registerModelGroup (Ljava/lang/Iterable;)V a
	uploadTextures (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/renderer/texture/AtlasSet; a
net/minecraft/client/resources/model/ModelBakery$BlockStateDefinitionException flu$a
net/minecraft/client/resources/model/ModelBakery$ModelGroupKey flu$b
	coloringValues b
	models a
	create (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/renderer/block/model/multipart/MultiPart;Ljava/util/Collection;)Lnet/minecraft/client/resources/model/ModelBakery$ModelGroupKey; a
	create (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/resources/model/UnbakedModel;Ljava/util/Collection;)Lnet/minecraft/client/resources/model/ModelBakery$ModelGroupKey; a
	getColoringValues (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Collection;)Ljava/util/List; a
net/minecraft/client/resources/model/ModelManager flv
	atlases b
	bakedRegistry a
	blockColors e
	blockModelShaper c
	maxMipmapLevels f
	missingModel g
	modelGroups h
	textureManager d
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/resources/model/ModelBakery;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getAtlas (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlas; a
	getBlockModelShaper ()Lnet/minecraft/client/renderer/block/BlockModelShaper; b
	getMissingModel ()Lnet/minecraft/client/resources/model/BakedModel; a
	getModel (Lnet/minecraft/client/resources/model/ModelResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/resources/model/ModelBakery; a
	requiresRender (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	updateMaxMipLevel (I)V a
net/minecraft/client/resources/model/ModelResourceLocation flw
	VARIANT_SEPARATOR g
	variant h
	decompose (Ljava/lang/String;)[Ljava/lang/String; e
	getVariant ()Ljava/lang/String; f
net/minecraft/client/resources/model/ModelState flx
	getRotation ()Lcom/mojang/math/Transformation; b
	isUvLocked ()Z c
net/minecraft/client/resources/model/MultiPartBakedModel fly
	hasAmbientOcclusion a
	isGui3d b
	overrides f
	particleIcon d
	selectorCache h
	selectors g
	transforms e
	usesBlockLight c
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/MultiPartBakedModel$Builder fly$a
	selectors a
	add (Ljava/util/function/Predicate;Lnet/minecraft/client/resources/model/BakedModel;)V a
	build ()Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/resources/model/SimpleBakedModel flz
	culledFaces b
	hasAmbientOcclusion c
	isGui3d d
	overrides h
	particleIcon f
	transforms g
	unculledFaces a
	usesBlockLight e
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/SimpleBakedModel$Builder flz$a
	culledFaces b
	hasAmbientOcclusion d
	isGui3d g
	overrides c
	particleIcon e
	transforms h
	unculledFaces a
	usesBlockLight f
	addCulledFace (Lnet/minecraft/core/Direction;Lnet/minecraft/client/renderer/block/model/BakedQuad;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	addUnculledFace (Lnet/minecraft/client/renderer/block/model/BakedQuad;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	build ()Lnet/minecraft/client/resources/model/BakedModel; b
	item ()Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	particle (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
net/minecraft/client/resources/model/UnbakedModel fma
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	getMaterials (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; a
net/minecraft/client/resources/model/WeightedBakedModel fmb
	list b
	totalWeight a
	wrapped c
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/WeightedBakedModel$Builder fmb$a
	list a
	add (Lnet/minecraft/client/resources/model/BakedModel;I)Lnet/minecraft/client/resources/model/WeightedBakedModel$Builder; a
	build ()Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/resources/sounds/AbstractSoundInstance fme
	attenuation k
	delay j
	location c
	looping i
	pitch e
	random m
	relative l
	sound a
	source b
	volume d
	x f
	y g
	z h
	getAttenuation ()Lnet/minecraft/client/resources/sounds/SoundInstance$Attenuation; k
	getDelay ()I e
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPitch ()F g
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F f
	getX ()D h
	getY ()D i
	getZ ()D j
	isLooping ()Z d
	isRelative ()Z l
	resolve (Lnet/minecraft/client/sounds/SoundManager;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
net/minecraft/client/resources/sounds/AbstractTickableSoundInstance fmf
	stopped n
	isStopped ()Z m
	stop ()V n
net/minecraft/client/resources/sounds/AmbientSoundHandler fmg
	tick ()V a
net/minecraft/client/resources/sounds/BeeAggressiveSoundInstance fmh
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; o
	shouldSwitchSounds ()Z p
net/minecraft/client/resources/sounds/BeeFlyingSoundInstance fmi
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; o
	shouldSwitchSounds ()Z p
net/minecraft/client/resources/sounds/BeeSoundInstance fmj
	PITCH_MIN q
	VOLUME_MAX p
	VOLUME_MIN o
	bee n
	hasSwitched r
	canPlaySound ()Z s
	canStartSilent ()Z r
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; o
	getMaxPitch ()F v
	getMinPitch ()F u
	shouldSwitchSounds ()Z p
	tick ()V q
net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler fmk
	LOOP_SOUND_CROSS_FADE_TIME a
	SKY_MOOD_RECOVERY_RATE b
	additionsSettings i
	biomeManager e
	loopSounds g
	moodSettings h
	moodiness j
	player c
	previousBiome k
	random f
	soundManager d
	getMoodiness ()F b
	tick ()V a
net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler$LoopSoundInstance fmk$a
	fade o
	fadeDirection n
	fadeIn ()V p
	fadeOut ()V o
	tick ()V q
net/minecraft/client/resources/sounds/BubbleColumnAmbientSoundHandler fml
	firstTick c
	player a
	wasInBubbleColumn b
	tick ()V a
net/minecraft/client/resources/sounds/ElytraOnPlayerSoundInstance fmm
	DELAY n
	player o
	time p
	tick ()V q
net/minecraft/client/resources/sounds/EntityBoundSoundInstance fmn
	entity n
	canPlaySound ()Z s
	tick ()V q
net/minecraft/client/resources/sounds/GuardianAttackSoundInstance fmo
	PITCH_MIN p
	PITCH_SCALE q
	VOLUME_MIN n
	VOLUME_SCALE o
	guardian r
	canPlaySound ()Z s
	tick ()V q
net/minecraft/client/resources/sounds/MinecartSoundInstance fmp
	PITCH_DELTA r
	PITCH_MAX q
	PITCH_MIN p
	VOLUME_MAX o
	VOLUME_MIN n
	minecart s
	pitch t
	canPlaySound ()Z s
	canStartSilent ()Z r
	tick ()V q
net/minecraft/client/resources/sounds/RidingMinecartSoundInstance fmq
	VOLUME_MAX o
	VOLUME_MIN n
	minecart q
	player p
	underwaterSound r
	canPlaySound ()Z s
	canStartSilent ()Z r
	tick ()V q
net/minecraft/client/resources/sounds/SimpleSoundInstance fmr
	forAmbientAddition (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; b
	forAmbientMood (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/util/RandomSource;DDD)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forLocalAmbience (Lnet/minecraft/sounds/SoundEvent;FF)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; b
	forMusic (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forRecord (Lnet/minecraft/sounds/SoundEvent;DDD)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forUI (Lnet/minecraft/sounds/SoundEvent;F)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forUI (Lnet/minecraft/sounds/SoundEvent;FF)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
net/minecraft/client/resources/sounds/Sound fms
	attenuationDistance h
	location a
	pitch c
	preload g
	stream f
	type e
	volume b
	weight d
	getAttenuationDistance ()I i
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPath ()Lnet/minecraft/resources/ResourceLocation; b
	getPitch ()Lnet/minecraft/util/valueproviders/SampledFloat; d
	getSound (Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; b
	getSound (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/client/resources/sounds/Sound; a
	getType ()Lnet/minecraft/client/resources/sounds/Sound$Type; f
	getVolume ()Lnet/minecraft/util/valueproviders/SampledFloat; c
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
	shouldPreload ()Z h
	shouldStream ()Z g
net/minecraft/client/resources/sounds/Sound$Type fms$a
	$VALUES d
	FILE a
	SOUND_EVENT b
	name c
	$values ()[Lnet/minecraft/client/resources/sounds/Sound$Type; a
	getByName (Ljava/lang/String;)Lnet/minecraft/client/resources/sounds/Sound$Type; a
net/minecraft/client/resources/sounds/SoundEventRegistration fmt
	replace b
	sounds a
	subtitle c
	getSounds ()Ljava/util/List; a
	getSubtitle ()Ljava/lang/String; c
	isReplace ()Z b
net/minecraft/client/resources/sounds/SoundEventRegistrationSerializer fmu
	DEFAULT_FLOAT a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/resources/sounds/SoundEventRegistration; a
	getSound (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/sounds/Sound; b
	getSounds (Lcom/google/gson/JsonObject;)Ljava/util/List; a
	getType (Lcom/google/gson/JsonObject;Lnet/minecraft/client/resources/sounds/Sound$Type;)Lnet/minecraft/client/resources/sounds/Sound$Type; a
net/minecraft/client/resources/sounds/SoundInstance fmv
	canPlaySound ()Z s
	canStartSilent ()Z r
	createUnseededRandom ()Lnet/minecraft/util/RandomSource; t
	getAttenuation ()Lnet/minecraft/client/resources/sounds/SoundInstance$Attenuation; k
	getDelay ()I e
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPitch ()F g
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F f
	getX ()D h
	getY ()D i
	getZ ()D j
	isLooping ()Z d
	isRelative ()Z l
	resolve (Lnet/minecraft/client/sounds/SoundManager;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
net/minecraft/client/resources/sounds/SoundInstance$Attenuation fmv$a
	$VALUES c
	LINEAR b
	NONE a
	$values ()[Lnet/minecraft/client/resources/sounds/SoundInstance$Attenuation; a
net/minecraft/client/resources/sounds/TickableSoundInstance fmw
	isStopped ()Z m
	tick ()V q
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundHandler fmx
	CHANCE_PER_TICK a
	MINIMUM_TICK_DELAY d
	RARE_CHANCE_PER_TICK b
	ULTRA_RARE_CHANCE_PER_TICK c
	player e
	soundManager f
	tickDelay g
	tick ()V a
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances fmy
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$SubSound fmy$a
	player n
	tick ()V q
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance fmy$b
	FADE_DURATION n
	fade p
	player o
	tick ()V q
net/minecraft/client/searchtree/FullTextSearchTree fna
	contents c
	filler d
	plainTextSearchTree e
	refresh ()V a
	searchPlainText (Ljava/lang/String;)Ljava/util/List; a
	searchResourceLocation (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/searchtree/IdSearchTree fnb
	additionOrder a
	resourceLocationSearchTree b
	searchPlainText (Ljava/lang/String;)Ljava/util/List; a
	searchResourceLocation (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/searchtree/IntersectionIterator fnc
	comparator c
	firstIterator a
	secondIterator b
net/minecraft/client/searchtree/MergingUniqueIterator fnd
	comparator c
	firstIterator a
	secondIterator b
net/minecraft/client/searchtree/PlainTextSearchTree fne
	create (Ljava/util/List;Ljava/util/function/Function;)Lnet/minecraft/client/searchtree/PlainTextSearchTree; a
	empty ()Lnet/minecraft/client/searchtree/PlainTextSearchTree; a
net/minecraft/client/searchtree/RefreshableSearchTree fnf
	empty ()Lnet/minecraft/client/searchtree/RefreshableSearchTree; b
	refresh ()V a
net/minecraft/client/searchtree/ResourceLocationSearchTree fng
	create (Ljava/util/List;Ljava/util/function/Function;)Lnet/minecraft/client/searchtree/ResourceLocationSearchTree; a
	empty ()Lnet/minecraft/client/searchtree/ResourceLocationSearchTree; a
	searchNamespace (Ljava/lang/String;)Ljava/util/List; a
	searchPath (Ljava/lang/String;)Ljava/util/List; b
net/minecraft/client/searchtree/SearchRegistry fnh
	CREATIVE_NAMES a
	CREATIVE_TAGS b
	RECIPE_COLLECTIONS c
	searchTrees d
	getSupplier (Lnet/minecraft/client/searchtree/SearchRegistry$Key;)Lnet/minecraft/client/searchtree/SearchRegistry$TreeEntry; b
	getTree (Lnet/minecraft/client/searchtree/SearchRegistry$Key;)Lnet/minecraft/client/searchtree/SearchTree; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	populate (Lnet/minecraft/client/searchtree/SearchRegistry$Key;Ljava/util/List;)V a
	register (Lnet/minecraft/client/searchtree/SearchRegistry$Key;Lnet/minecraft/client/searchtree/SearchRegistry$TreeBuilderSupplier;)V a
net/minecraft/client/searchtree/SearchRegistry$Key fnh$a
net/minecraft/client/searchtree/SearchRegistry$TreeBuilderSupplier fnh$b
net/minecraft/client/searchtree/SearchRegistry$TreeEntry fnh$c
	factory a
	tree b
	populate (Ljava/util/List;)V a
	refresh ()V a
net/minecraft/client/searchtree/SearchTree fni
net/minecraft/client/searchtree/SuffixArray fnj
	DEBUG_ARRAY c
	DEBUG_COMPARISONS b
	END_OF_DATA f
	END_OF_TEXT_MARKER e
	LOGGER d
	chars g
	list a
	maxStringLength k
	offsets j
	suffixToT i
	wordStarts h
	add (Ljava/lang/Object;Ljava/lang/String;)V a
	compare (Ljava/lang/String;I)I a
	generate ()V a
	getString (I)Ljava/lang/String; a
	print ()V b
	search (Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/server/IntegratedPlayerList fnl
	playerData a
	canPlayerLogin (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/Component; a
	getServer ()Lnet/minecraft/client/server/IntegratedServer; b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getSingleplayerData ()Lnet/minecraft/nbt/CompoundTag; r
	save (Lnet/minecraft/server/level/ServerPlayer;)V b
net/minecraft/client/server/IntegratedServer fnm
	LOGGER n
	MIN_SIM_DISTANCE o
	lanPinger t
	minecraft p
	paused q
	previousSimulationDistance v
	publishedGameType s
	publishedPort r
	uuid u
	fillServerSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; a
	forceSynchronousWrites ()Z aU
	getForcedGameType ()Lnet/minecraft/world/level/GameType; aY
	getFunctionCompilationLevel ()I i
	getModdedStatus ()Lnet/minecraft/util/ModCheck; J
	getOperatorUserPermissionLevel ()I h
	getPort ()I L
	getRateLimitPacketsPerSecond ()I l
	getScaledTrackingDistance (I)I b
	getServerDirectory ()Ljava/io/File; z
	halt (Z)V a
	initServer ()Z e
	isCommandBlockEnabled ()Z n
	isDedicatedServer ()Z k
	isEpollEnabled ()Z m
	isPublished ()Z o
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	publishServer (Lnet/minecraft/world/level/GameType;ZI)Z a
	setDefaultGameType (Lnet/minecraft/world/level/GameType;)V a
	setUUID (Ljava/util/UUID;)V a
	shouldInformAdmins ()Z G_
	shouldRconBroadcast ()Z j
	stopServer ()V s
	tickPaused ()V a
	tickServer (Ljava/util/function/BooleanSupplier;)V a
net/minecraft/client/server/LanServer fnn
	address b
	motd a
	pingTime c
	getAddress ()Ljava/lang/String; b
	getMotd ()Ljava/lang/String; a
	updatePingTime ()V c
net/minecraft/client/server/LanServerDetection fno
	LOGGER b
	UNIQUE_THREAD_ID a
net/minecraft/client/server/LanServerDetection$LanServerDetector fno$a
	pingGroup b
	serverList a
	socket c
net/minecraft/client/server/LanServerDetection$LanServerList fno$b
	isDirty b
	servers a
	addServer (Ljava/lang/String;Ljava/net/InetAddress;)V a
	getServers ()Ljava/util/List; c
	isDirty ()Z a
	markClean ()V b
net/minecraft/client/server/LanServerPinger fnp
	LOGGER d
	MULTICAST_GROUP a
	PING_INTERVAL e
	PING_PORT b
	UNIQUE_THREAD_ID c
	isRunning h
	motd f
	serverAddress i
	socket g
	createPingString (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	parseAddress (Ljava/lang/String;)Ljava/lang/String; b
	parseMotd (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/client/sounds/AudioStream fnr
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
net/minecraft/client/sounds/ChannelAccess fns
	channels a
	executor c
	library b
	clear ()V b
	createHandle (Lcom/mojang/blaze3d/audio/Library$Pool;)Ljava/util/concurrent/CompletableFuture; a
	executeOnChannels (Ljava/util/function/Consumer;)V a
	scheduleTick ()V a
net/minecraft/client/sounds/ChannelAccess$ChannelHandle fns$a
	channel b
	stopped c
	execute (Ljava/util/function/Consumer;)V a
	isStopped ()Z a
	release ()V b
net/minecraft/client/sounds/LoopingAudioStream fnt
	bufferedInputStream c
	provider a
	stream b
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
net/minecraft/client/sounds/LoopingAudioStream$AudioStreamProvider fnt$a
net/minecraft/client/sounds/LoopingAudioStream$NoCloseBuffer fnt$b
net/minecraft/client/sounds/MusicManager fnu
	STARTING_DELAY a
	currentMusic d
	minecraft c
	nextSongDelay e
	random b
	isPlayingMusic (Lnet/minecraft/sounds/Music;)Z b
	startPlaying (Lnet/minecraft/sounds/Music;)V a
	stopPlaying ()V b
	tick ()V a
net/minecraft/client/sounds/SoundBufferLibrary fnv
	cache b
	resourceManager a
	clear ()V a
	getCompleteBuffer (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/concurrent/CompletableFuture; a
	getStream (Lnet/minecraft/resources/ResourceLocation;Z)Ljava/util/concurrent/CompletableFuture; a
	preload (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/sounds/SoundEngine fnw
	DEFAULT_DEVICE_CHECK_INTERVAL_MS l
	LOGGER e
	MARKER d
	MIN_SOURCE_LIFETIME j
	MISSING_SOUND a
	ONLY_WARN_ONCE k
	OPEN_AL_SOFT_PREFIX b
	OPEN_AL_SOFT_PREFIX_LENGTH c
	PITCH_MAX g
	PITCH_MIN f
	VOLUME_MAX i
	VOLUME_MIN h
	channelAccess t
	devicePoolState w
	executor s
	instanceBySource y
	instanceToChannel x
	lastDeviceCheckTime v
	library p
	listener q
	listeners C
	loaded o
	options n
	preloadQueue E
	queuedSounds A
	queuedTickableSounds D
	soundBuffers r
	soundDeleteTime B
	soundManager m
	tickCount u
	tickingSounds z
	addEventListener (Lnet/minecraft/client/sounds/SoundEventListener;)V a
	calculatePitch (Lnet/minecraft/client/resources/sounds/SoundInstance;)F g
	calculateVolume (FLnet/minecraft/sounds/SoundSource;)F a
	calculateVolume (Lnet/minecraft/client/resources/sounds/SoundInstance;)F h
	destroy ()V b
	getAvailableSoundDevices ()Ljava/util/List; g
	getDebugString ()Ljava/lang/String; f
	getVolume (Lnet/minecraft/sounds/SoundSource;)F a
	isActive (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z b
	loadLibrary ()V h
	pause ()V d
	play (Lnet/minecraft/client/resources/sounds/SoundInstance;)V c
	playDelayed (Lnet/minecraft/client/resources/sounds/SoundInstance;I)V a
	queueTickingSound (Lnet/minecraft/client/resources/sounds/TickableSoundInstance;)V a
	reload ()V a
	removeEventListener (Lnet/minecraft/client/sounds/SoundEventListener;)V b
	requestPreload (Lnet/minecraft/client/resources/sounds/Sound;)V a
	requiresManualLooping (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z d
	resume ()V e
	shouldChangeDevice ()Z i
	shouldLoopAutomatically (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z f
	shouldLoopManually (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z e
	stop (Lnet/minecraft/client/resources/sounds/SoundInstance;)V a
	stop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;)V a
	stopAll ()V c
	tick (Z)V a
	tickNonPaused ()V j
	updateCategoryVolume (Lnet/minecraft/sounds/SoundSource;F)V a
	updateSource (Lnet/minecraft/client/Camera;)V a
net/minecraft/client/sounds/SoundEngine$DeviceCheckState fnw$a
	$VALUES d
	CHANGE_DETECTED b
	NO_CHANGE c
	ONGOING a
	$values ()[Lnet/minecraft/client/sounds/SoundEngine$DeviceCheckState; a
net/minecraft/client/sounds/SoundEngineExecutor fnx
	shutdown b
	thread a
	createThread ()Ljava/lang/Thread; b
	flush ()V a
	getRunningThread ()Ljava/lang/Thread; au
	run ()V c
	shouldRun (Ljava/lang/Runnable;)Z e
	waitForTasks ()V br
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; f
net/minecraft/client/sounds/SoundEventListener fny
	onPlaySound (Lnet/minecraft/client/resources/sounds/SoundInstance;Lnet/minecraft/client/sounds/WeighedSoundEvents;)V a
net/minecraft/client/sounds/SoundManager fnz
	EMPTY_SOUND a
	GSON d
	LOGGER b
	SOUNDS_PATH c
	SOUND_EVENT_REGISTRATION_TYPE e
	registry f
	soundEngine g
	addListener (Lnet/minecraft/client/sounds/SoundEventListener;)V a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/sounds/SoundManager$Preparations;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	destroy ()V f
	getAvailableSoundDevices ()Ljava/util/List; a
	getAvailableSounds ()Ljava/util/Collection; b
	getDebugString ()Ljava/lang/String; h
	getSoundEvent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
	isActive (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z c
	pause ()V d
	play (Lnet/minecraft/client/resources/sounds/SoundInstance;)V a
	playDelayed (Lnet/minecraft/client/resources/sounds/SoundInstance;I)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/sounds/SoundManager$Preparations; a
	queueTickingSound (Lnet/minecraft/client/resources/sounds/TickableSoundInstance;)V a
	reload ()V i
	removeListener (Lnet/minecraft/client/sounds/SoundEventListener;)V b
	resume ()V g
	stop ()V e
	stop (Lnet/minecraft/client/resources/sounds/SoundInstance;)V b
	stop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;)V a
	tick (Z)V a
	updateSource (Lnet/minecraft/client/Camera;)V a
	updateSourceVolume (Lnet/minecraft/sounds/SoundSource;F)V a
	validateSoundResource (Lnet/minecraft/client/resources/sounds/Sound;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/resources/ResourceManager;)Z a
net/minecraft/client/sounds/SoundManager$Preparations fnz$a
	registry a
	apply (Ljava/util/Map;Lnet/minecraft/client/sounds/SoundEngine;)V a
	handleRegistration (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/sounds/SoundEventRegistration;Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/sounds/WeighedSoundEvents foa
	list a
	location c
	random b
	subtitle d
	addSound (Lnet/minecraft/client/sounds/Weighted;)V a
	getResourceLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getSound (Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; b
	getSound (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/client/resources/sounds/Sound; a
	getSubtitle ()Lnet/minecraft/network/chat/Component; b
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
net/minecraft/client/sounds/Weighted fob
	getSound (Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; b
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
net/minecraft/client/tutorial/BundleTutorial fod
	options b
	toast c
	tutorial a
	clearToast ()V b
	onInventoryAction (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V a
	showToast ()V a
net/minecraft/client/tutorial/CompletedTutorialStepInstance foe
net/minecraft/client/tutorial/CraftPlanksTutorialStep fof
	CRAFT_DESCRIPTION c
	CRAFT_TITLE b
	HINT_DELAY a
	timeWaiting f
	toast e
	tutorial d
	clear ()V b
	hasCraftedPlanksPreviously (Lnet/minecraft/client/player/LocalPlayer;Lnet/minecraft/tags/TagKey;)Z a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	tick ()V a
net/minecraft/client/tutorial/FindTreeTutorialStepInstance fog
	DESCRIPTION c
	HINT_DELAY a
	TITLE b
	timeWaiting f
	toast e
	tutorial d
	clear ()V b
	hasCollectedTreeItems (Lnet/minecraft/client/player/LocalPlayer;)Z b
	hasPunchedTreesPreviously (Lnet/minecraft/client/player/LocalPlayer;)Z a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	tick ()V a
net/minecraft/client/tutorial/MovementTutorialStepInstance foh
	INCOMPLETE e
	LOOK_DESCRIPTION i
	LOOK_HINT_DELAY d
	LOOK_TITLE h
	MINIMUM_TIME_LOOKED b
	MINIMUM_TIME_MOVED a
	MOVE_DESCRIPTION g
	MOVE_HINT_DELAY c
	MOVE_TITLE f
	lookCompleted s
	lookToast l
	moveCompleted r
	moveToast k
	moved p
	timeLooked o
	timeMoved n
	timeWaiting m
	turned q
	tutorial j
	clear ()V b
	onInput (Lnet/minecraft/client/player/Input;)V a
	onMouse (DD)V a
	tick ()V a
net/minecraft/client/tutorial/OpenInventoryTutorialStep foi
	DESCRIPTION c
	HINT_DELAY a
	TITLE b
	timeWaiting f
	toast e
	tutorial d
	clear ()V b
	onOpenInventory ()V c
	tick ()V a
net/minecraft/client/tutorial/PunchTreeTutorialStepInstance foj
	DESCRIPTION c
	HINT_DELAY a
	TITLE b
	resetCount g
	timeWaiting f
	toast e
	tutorial d
	clear ()V b
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	tick ()V a
net/minecraft/client/tutorial/Tutorial fok
	bundleTutorial d
	instance b
	minecraft a
	timedToasts c
	addTimedToast (Lnet/minecraft/client/gui/components/toasts/TutorialToast;I)V a
	getMinecraft ()Lnet/minecraft/client/Minecraft; e
	isSurvival ()Z f
	key (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onInput (Lnet/minecraft/client/player/Input;)V a
	onInventoryAction (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	onMouse (DD)V a
	onOpenInventory ()V a
	removeTimedToast (Lnet/minecraft/client/gui/components/toasts/TutorialToast;)V a
	setStep (Lnet/minecraft/client/tutorial/TutorialSteps;)V a
	start ()V c
	stop ()V b
	tick ()V d
net/minecraft/client/tutorial/Tutorial$TimedToast fok$a
	durationTicks b
	progress c
	toast a
	updateProgress ()Z a
net/minecraft/client/tutorial/TutorialStepInstance fol
	clear ()V b
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onInput (Lnet/minecraft/client/player/Input;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	onMouse (DD)V a
	onOpenInventory ()V c
	tick ()V a
net/minecraft/client/tutorial/TutorialSteps fom
	$VALUES i
	CRAFT_PLANKS e
	FIND_TREE b
	MOVEMENT a
	NONE f
	OPEN_INVENTORY d
	PUNCH_TREE c
	constructor h
	name g
	$values ()[Lnet/minecraft/client/tutorial/TutorialSteps; b
	create (Lnet/minecraft/client/tutorial/Tutorial;)Lnet/minecraft/client/tutorial/TutorialStepInstance; a
	getByName (Ljava/lang/String;)Lnet/minecraft/client/tutorial/TutorialSteps; a
	getName ()Ljava/lang/String; a
net/minecraft/commands/BrigadierExceptions dk
	DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR z
	DISPATCHER_PARSE_EXCEPTION A
	DISPATCHER_UNKNOWN_ARGUMENT y
	DISPATCHER_UNKNOWN_COMMAND x
	DOUBLE_TOO_BIG b
	DOUBLE_TOO_SMALL a
	FLOAT_TOO_BIG d
	FLOAT_TOO_SMALL c
	INTEGER_TOO_BIG f
	INTEGER_TOO_SMALL e
	LITERAL_INCORRECT i
	LONG_TOO_BIG h
	LONG_TOO_SMALL g
	READER_EXPECTED_BOOL v
	READER_EXPECTED_DOUBLE s
	READER_EXPECTED_END_OF_QUOTE k
	READER_EXPECTED_FLOAT u
	READER_EXPECTED_INT o
	READER_EXPECTED_LONG q
	READER_EXPECTED_START_OF_QUOTE j
	READER_EXPECTED_SYMBOL w
	READER_INVALID_BOOL m
	READER_INVALID_DOUBLE r
	READER_INVALID_ESCAPE l
	READER_INVALID_FLOAT t
	READER_INVALID_INT n
	READER_INVALID_LONG p
net/minecraft/commands/CommandBuildContext dl
	missingTagAccessPolicy b
	registryAccess a
	holderLookup (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/HolderLookup; a
	missingTagAccessPolicy (Lnet/minecraft/commands/CommandBuildContext$MissingTagAccessPolicy;)V a
net/minecraft/commands/CommandBuildContext$MissingTagAccessPolicy dl$a
	$VALUES d
	CREATE_NEW a
	FAIL c
	RETURN_EMPTY b
	$values ()[Lnet/minecraft/commands/CommandBuildContext$MissingTagAccessPolicy; a
net/minecraft/commands/CommandFunction dm
	entries a
	id b
	fromLines (Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;)Lnet/minecraft/commands/CommandFunction; a
	getEntries ()[Lnet/minecraft/commands/CommandFunction$Entry; b
	getId ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/CommandFunction$CacheableFunction dm$a
	NONE a
	function d
	id b
	resolved c
	get (Lnet/minecraft/server/ServerFunctionManager;)Ljava/util/Optional; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/CommandFunction$CommandEntry dm$b
	parse a
	execute (Lnet/minecraft/server/ServerFunctionManager;Lnet/minecraft/commands/CommandSourceStack;)I a
net/minecraft/commands/CommandFunction$Entry dm$c
net/minecraft/commands/CommandFunction$FunctionEntry dm$d
	function a
net/minecraft/commands/CommandRuntimeException dn
	message a
	getComponent ()Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/CommandSigningContext dp
	ANONYMOUS a
	getArgument (Ljava/lang/String;)Lnet/minecraft/network/chat/PlayerChatMessage; a
net/minecraft/commands/CommandSigningContext$SignedArguments dp$a
	arguments b
	arguments ()Ljava/util/Map; a
	getArgument (Ljava/lang/String;)Lnet/minecraft/network/chat/PlayerChatMessage; a
net/minecraft/commands/CommandSource dq
	NULL a
	acceptsFailure ()Z j_
	acceptsSuccess ()Z i_
	alwaysAccepts ()Z d_
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	shouldInformAdmins ()Z G_
net/minecraft/commands/CommandSourceStack dr
	ERROR_NOT_ENTITY b
	ERROR_NOT_PLAYER a
	anchor m
	chatMessageChainer p
	consumer l
	displayName h
	entity k
	level e
	permissionLevel f
	rotation n
	server i
	signingContext o
	silent j
	source c
	textName g
	worldPosition d
	asChatSender ()Lnet/minecraft/network/chat/ChatSender; d
	broadcastToAdmins (Lnet/minecraft/network/chat/Component;)V c
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; a
	facing (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)Lnet/minecraft/commands/CommandSourceStack; a
	facing (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/commands/CommandSourceStack; b
	getAllTeams ()Ljava/util/Collection; r
	getAnchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; n
	getAvailableSoundEvents ()Ljava/util/Collection; s
	getChatMessageChainer ()Lnet/minecraft/util/TaskChainer; p
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
	getEntity ()Lnet/minecraft/world/entity/Entity; g
	getEntityOrException ()Lnet/minecraft/world/entity/Entity; h
	getLevel ()Lnet/minecraft/server/level/ServerLevel; f
	getOnlinePlayerNames ()Ljava/util/Collection; q
	getPlayer ()Lnet/minecraft/server/level/ServerPlayer; j
	getPlayerOrException ()Lnet/minecraft/server/level/ServerPlayer; i
	getPosition ()Lnet/minecraft/world/phys/Vec3; e
	getRecipeNames ()Ljava/util/stream/Stream; t
	getRotation ()Lnet/minecraft/world/phys/Vec2; l
	getServer ()Lnet/minecraft/server/MinecraftServer; m
	getSigningContext ()Lnet/minecraft/commands/CommandSigningContext; o
	getTextName ()Ljava/lang/String; c
	hasPermission (I)Z c
	isPlayer ()Z k
	levels ()Ljava/util/Set; u
	onCommandComplete (Lcom/mojang/brigadier/context/CommandContext;ZI)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; v
	sendChatMessage (Lnet/minecraft/network/chat/OutgoingPlayerChatMessage;ZLnet/minecraft/network/chat/ChatType$Bound;)V a
	sendFailure (Lnet/minecraft/network/chat/Component;)V b
	sendSuccess (Lnet/minecraft/network/chat/Component;Z)V a
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	shouldFilterMessageTo (Lnet/minecraft/server/level/ServerPlayer;)Z a
	suggestRegistryElements (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; a
	withAnchor (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)Lnet/minecraft/commands/CommandSourceStack; a
	withCallback (Lcom/mojang/brigadier/ResultConsumer;)Lnet/minecraft/commands/CommandSourceStack; a
	withCallback (Lcom/mojang/brigadier/ResultConsumer;Ljava/util/function/BinaryOperator;)Lnet/minecraft/commands/CommandSourceStack; a
	withChatMessageChainer (Lnet/minecraft/util/TaskChainer;)Lnet/minecraft/commands/CommandSourceStack; a
	withEntity (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/commands/CommandSourceStack; a
	withLevel (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/commands/CommandSourceStack; a
	withMaximumPermission (I)Lnet/minecraft/commands/CommandSourceStack; b
	withPermission (I)Lnet/minecraft/commands/CommandSourceStack; a
	withPosition (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/commands/CommandSourceStack; a
	withRotation (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/commands/CommandSourceStack; a
	withSigningContext (Lnet/minecraft/commands/CommandSigningContext;)Lnet/minecraft/commands/CommandSourceStack; a
	withSource (Lnet/minecraft/commands/CommandSource;)Lnet/minecraft/commands/CommandSourceStack; a
	withSuppressedOutput ()Lnet/minecraft/commands/CommandSourceStack; a
net/minecraft/commands/Commands ds
	LEVEL_ADMINS d
	LEVEL_ALL a
	LEVEL_GAMEMASTERS c
	LEVEL_MODERATORS b
	LEVEL_OWNERS e
	LOGGER f
	dispatcher g
	argument (Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; a
	createValidator (Lnet/minecraft/commands/Commands$ParseFunction;)Ljava/util/function/Predicate; a
	fillUsableCommands (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Map;)V a
	getDispatcher ()Lcom/mojang/brigadier/CommandDispatcher; a
	getParseException (Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; a
	literal (Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
	mapSource (Lcom/mojang/brigadier/ParseResults;Ljava/util/function/UnaryOperator;)Lcom/mojang/brigadier/ParseResults; a
	performCommand (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;)I a
	performPrefixedCommand (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	sendCommands (Lnet/minecraft/server/level/ServerPlayer;)V a
	validate ()V b
net/minecraft/commands/Commands$CommandSelection ds$a
	$VALUES f
	ALL a
	DEDICATED b
	INTEGRATED c
	includeDedicated e
	includeIntegrated d
	$values ()[Lnet/minecraft/commands/Commands$CommandSelection; a
net/minecraft/commands/Commands$ParseFunction ds$b
net/minecraft/commands/SharedSuggestionProvider dt
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; a
	filterResources (Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V a
	filterResources (Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V a
	getAbsoluteCoordinates ()Ljava/util/Collection; z
	getAllTeams ()Ljava/util/Collection; r
	getAvailableSoundEvents ()Ljava/util/Collection; s
	getCustomTabSugggestions ()Ljava/util/Collection; w
	getOnlinePlayerNames ()Ljava/util/Collection; q
	getRecipeNames ()Ljava/util/stream/Stream; t
	getRelevantCoordinates ()Ljava/util/Collection; y
	getSelectedEntities ()Ljava/util/Collection; x
	hasPermission (I)Z c
	levels ()Ljava/util/Set; u
	matchesSubStr (Ljava/lang/String;Ljava/lang/String;)Z a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; v
	suggest (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; b
	suggest (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; b
	suggest (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; b
	suggest ([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggest2DCoordinates (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; b
	suggestCoordinates (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; a
	suggestRegistryElements (Lnet/minecraft/core/Registry;Lnet/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V a
	suggestRegistryElements (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType dt$a
	$VALUES d
	ALL c
	ELEMENTS b
	TAGS a
	$values ()[Lnet/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType; c
	shouldSuggestElements ()Z b
	shouldSuggestTags ()Z a
net/minecraft/commands/SharedSuggestionProvider$TextCoordinates dt$b
	DEFAULT_GLOBAL b
	DEFAULT_LOCAL a
	x c
	y d
	z e
net/minecraft/commands/arguments/AngleArgument du
	ERROR_INVALID_ANGLE b
	ERROR_NOT_COMPLETE a
	EXAMPLES c
	angle ()Lnet/minecraft/commands/arguments/AngleArgument; a
	getAngle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)F a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/AngleArgument$SingleAngle; a
net/minecraft/commands/arguments/AngleArgument$SingleAngle du$a
	angle a
	isRelative b
	getAngle (Lnet/minecraft/commands/CommandSourceStack;)F a
net/minecraft/commands/arguments/ArgumentSignatures dv
	EMPTY a
	MAX_ARGUMENT_COUNT c
	MAX_ARGUMENT_NAME_LENGTH d
	entries b
	collectPlainSignableArguments (Lnet/minecraft/network/chat/PreviewableCommand;)Ljava/util/List; b
	entries ()Ljava/util/List; a
	get (Ljava/lang/String;)Lnet/minecraft/network/chat/MessageSignature; a
	getSignableText (Lnet/minecraft/commands/arguments/SignedArgument;Lcom/mojang/brigadier/context/ParsedArgument;)Ljava/lang/String; a
	hasSignableArguments (Lnet/minecraft/network/chat/PreviewableCommand;)Z a
	signCommand (Lnet/minecraft/network/chat/PreviewableCommand;Lnet/minecraft/commands/arguments/ArgumentSignatures$Signer;)Lnet/minecraft/commands/arguments/ArgumentSignatures; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/arguments/ArgumentSignatures$Entry dv$a
	name a
	signature b
	name ()Ljava/lang/String; a
	signature ()Lnet/minecraft/network/chat/MessageSignature; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/arguments/ArgumentSignatures$Signer dv$b
net/minecraft/commands/arguments/ColorArgument dw
	ERROR_INVALID_VALUE a
	EXAMPLES b
	color ()Lnet/minecraft/commands/arguments/ColorArgument; a
	getColor (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/ChatFormatting; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/ChatFormatting; a
net/minecraft/commands/arguments/ComponentArgument dx
	ERROR_INVALID_JSON a
	EXAMPLES b
	getComponent (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/network/chat/Component; a
	textComponent ()Lnet/minecraft/commands/arguments/ComponentArgument; a
net/minecraft/commands/arguments/CompoundTagArgument dy
	EXAMPLES a
	compoundTag ()Lnet/minecraft/commands/arguments/CompoundTagArgument; a
	getCompoundTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/commands/arguments/DimensionArgument dz
	ERROR_INVALID_VALUE b
	EXAMPLES a
	dimension ()Lnet/minecraft/commands/arguments/DimensionArgument; a
	getDimension (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ServerLevel; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/arguments/EntityAnchorArgument ea
	ERROR_INVALID b
	EXAMPLES a
	anchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument; a
	getAnchor (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
net/minecraft/commands/arguments/EntityAnchorArgument$Anchor ea$a
	$VALUES f
	BY_NAME c
	EYES b
	FEET a
	name d
	transform e
	$values ()[Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
	apply (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	apply (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3; a
	getByName (Ljava/lang/String;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
net/minecraft/commands/arguments/EntityArgument eb
	ERROR_NOT_SINGLE_ENTITY a
	ERROR_NOT_SINGLE_PLAYER b
	ERROR_ONLY_PLAYERS_ALLOWED c
	ERROR_SELECTORS_NOT_ALLOWED f
	EXAMPLES g
	NO_ENTITIES_FOUND d
	NO_PLAYERS_FOUND e
	playersOnly i
	single h
	entities ()Lnet/minecraft/commands/arguments/EntityArgument; b
	entity ()Lnet/minecraft/commands/arguments/EntityArgument; a
	getEntities (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; b
	getEntity (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/entity/Entity; a
	getOptionalEntities (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; c
	getOptionalPlayers (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; d
	getPlayer (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ServerPlayer; e
	getPlayers (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; f
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	player ()Lnet/minecraft/commands/arguments/EntityArgument; c
	players ()Lnet/minecraft/commands/arguments/EntityArgument; d
net/minecraft/commands/arguments/EntityArgument$Info eb$a
	FLAG_PLAYERS_ONLY b
	FLAG_SINGLE a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/EntityArgument$Info$Template; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/arguments/EntityArgument$Info$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/EntityArgument$Info$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lnet/minecraft/commands/arguments/EntityArgument;)Lnet/minecraft/commands/arguments/EntityArgument$Info$Template; a
net/minecraft/commands/arguments/EntityArgument$Info$Template eb$a$a
	playersOnly c
	single b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/EntityArgument; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/arguments/EntitySummonArgument ec
	ERROR_UNKNOWN_ENTITY a
	EXAMPLES b
	getSummonableEntity (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	id ()Lnet/minecraft/commands/arguments/EntitySummonArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
	verifyCanSummon (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/arguments/GameProfileArgument ed
	ERROR_UNKNOWN_PLAYER a
	EXAMPLES b
	gameProfile ()Lnet/minecraft/commands/arguments/GameProfileArgument; a
	getGameProfiles (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/GameProfileArgument$Result; a
net/minecraft/commands/arguments/GameProfileArgument$Result ed$a
net/minecraft/commands/arguments/GameProfileArgument$SelectorResult ed$b
	selector a
net/minecraft/commands/arguments/ItemEnchantmentArgument ee
	ERROR_UNKNOWN_ENCHANTMENT a
	EXAMPLES b
	enchantment ()Lnet/minecraft/commands/arguments/ItemEnchantmentArgument; a
	getEnchantment (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/item/enchantment/Enchantment; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/item/enchantment/Enchantment; a
net/minecraft/commands/arguments/MessageArgument ef
	EXAMPLES a
	LOGGER b
	getChatMessage (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/MessageArgument$ChatMessage; b
	getMessage (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	getSignableText (Ljava/lang/Object;)Ljava/lang/String; a
	getSignableText (Lnet/minecraft/commands/arguments/MessageArgument$Message;)Ljava/lang/String; a
	getValueType ()Ljava/lang/Class; b
	logResolutionFailure (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/concurrent/CompletableFuture;)V a
	message ()Lnet/minecraft/commands/arguments/MessageArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/MessageArgument$Message; a
	resolvePreview (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; a
	resolvePreview (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/MessageArgument$Message;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/commands/arguments/MessageArgument$ChatMessage ef$a
	signedArgument a
	consume (Lnet/minecraft/commands/CommandSourceStack;)V a
	filterPlainText (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
	resolve (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/function/Consumer;)V a
	signedArgument ()Lnet/minecraft/network/chat/PlayerChatMessage; a
net/minecraft/commands/arguments/MessageArgument$Message ef$b
	parts b
	text a
	getParts ()[Lnet/minecraft/commands/arguments/MessageArgument$Part; b
	getText ()Ljava/lang/String; a
	parseText (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/MessageArgument$Message; a
	resolveComponent (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/network/chat/Component; b
	resolveDecoratedComponent (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/concurrent/CompletableFuture; a
	toComponent (Lnet/minecraft/commands/CommandSourceStack;Z)Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/arguments/MessageArgument$Part ef$c
	end b
	selector c
	start a
	getEnd ()I b
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; c
	getStart ()I a
	toComponent (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/arguments/MobEffectArgument eg
	ERROR_UNKNOWN_EFFECT a
	EXAMPLES b
	effect ()Lnet/minecraft/commands/arguments/MobEffectArgument; a
	getEffect (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/effect/MobEffect; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/effect/MobEffect; a
net/minecraft/commands/arguments/NbtPathArgument eh
	ERROR_INVALID_NODE a
	ERROR_NOTHING_FOUND b
	EXAMPLES c
	INDEX_MATCH_END e
	INDEX_MATCH_START d
	KEY_MATCH_END g
	KEY_MATCH_START f
	QUOTED_KEY_START h
	createTagPredicate (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/function/Predicate; a
	getPath (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	isAllowedInUnquotedName (C)Z a
	nbtPath ()Lnet/minecraft/commands/arguments/NbtPathArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	parseNode (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/NbtPathArgument$Node; a
	readObjectNode (Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$Node; a
	readUnquotedName (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; b
net/minecraft/commands/arguments/NbtPathArgument$AllElementsNode eh$a
	INSTANCE a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode eh$b
	name a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$IndexedElementNode eh$c
	index a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$MatchElementNode eh$d
	pattern a
	predicate b
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$MatchObjectNode eh$e
	name a
	pattern b
	predicate c
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$MatchRootObjectNode eh$f
	predicate a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$NbtPath eh$g
	nodeToOriginalPosition b
	nodes c
	original a
	apply (Ljava/util/List;Ljava/util/function/Function;)I a
	countMatching (Lnet/minecraft/nbt/Tag;)I b
	createNotFoundException (Lnet/minecraft/commands/arguments/NbtPathArgument$Node;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; a
	get (Lnet/minecraft/nbt/Tag;)Ljava/util/List; a
	getOrCreate (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)Ljava/util/List; a
	getOrCreateParents (Lnet/minecraft/nbt/Tag;)Ljava/util/List; d
	remove (Lnet/minecraft/nbt/Tag;)I c
	set (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I b
	set (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)I a
net/minecraft/commands/arguments/NbtPathArgument$Node eh$h
	collect (Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List; a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	get (Ljava/util/List;)Ljava/util/List; a
	getOrCreate (Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtTagArgument ei
	EXAMPLES a
	getNbtTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	nbtTag ()Lnet/minecraft/commands/arguments/NbtTagArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/nbt/Tag; a
net/minecraft/commands/arguments/ObjectiveArgument ej
	ERROR_OBJECTIVE_NOT_FOUND b
	ERROR_OBJECTIVE_READ_ONLY c
	EXAMPLES a
	getObjective (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; a
	getWritableObjective (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; b
	objective ()Lnet/minecraft/commands/arguments/ObjectiveArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
net/minecraft/commands/arguments/ObjectiveCriteriaArgument ek
	ERROR_INVALID_VALUE a
	EXAMPLES b
	criteria ()Lnet/minecraft/commands/arguments/ObjectiveCriteriaArgument; a
	getCriteria (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; a
	getName (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)Ljava/lang/String; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; a
net/minecraft/commands/arguments/OperationArgument el
	ERROR_DIVIDE_BY_ZERO c
	ERROR_INVALID_OPERATION b
	EXAMPLES a
	getOperation (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
	getOperation (Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
	getSimpleOperation (Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$SimpleOperation; b
	operation ()Lnet/minecraft/commands/arguments/OperationArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
net/minecraft/commands/arguments/OperationArgument$Operation el$a
net/minecraft/commands/arguments/OperationArgument$SimpleOperation el$b
net/minecraft/commands/arguments/ParticleArgument em
	ERROR_UNKNOWN_PARTICLE a
	EXAMPLES b
	getParticle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/particles/ParticleOptions; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleOptions; a
	particle ()Lnet/minecraft/commands/arguments/ParticleArgument; a
	readParticle (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleOptions; b
	readParticle (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/core/particles/ParticleType;)Lnet/minecraft/core/particles/ParticleOptions; a
net/minecraft/commands/arguments/PreviewedArgument en
	getValueType ()Ljava/lang/Class; b
	resolvePreview (Lnet/minecraft/commands/CommandSourceStack;Lcom/mojang/brigadier/context/ParsedArgument;)Ljava/util/concurrent/CompletableFuture; a
	resolvePreview (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/commands/arguments/RangeArgument eo
	floatRange ()Lnet/minecraft/commands/arguments/RangeArgument$Floats; b
	intRange ()Lnet/minecraft/commands/arguments/RangeArgument$Ints; a
net/minecraft/commands/arguments/RangeArgument$Floats eo$a
	EXAMPLES a
	getRange (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
net/minecraft/commands/arguments/RangeArgument$Ints eo$b
	EXAMPLES a
	getRange (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
net/minecraft/commands/arguments/ResourceKeyArgument ep
	ERROR_INVALID_FEATURE c
	ERROR_INVALID_STRUCTURE d
	ERROR_INVALID_TEMPLATE_POOL e
	ERROR_UNKNOWN_ATTRIBUTE b
	EXAMPLES a
	registryKey f
	getAttribute (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/entity/ai/attributes/Attribute; a
	getConfiguredFeature (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder; b
	getRegistry (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Registry; a
	getRegistryKeyType (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lnet/minecraft/core/Holder; b
	getRegistryType (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lnet/minecraft/resources/ResourceKey; a
	getStructure (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder; c
	getStructureTemplatePool (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder; d
	key (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/commands/arguments/ResourceKeyArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/commands/arguments/ResourceKeyArgument$Info ep$a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/ResourceKeyArgument$Info$Template; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/arguments/ResourceKeyArgument$Info$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/ResourceKeyArgument$Info$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lnet/minecraft/commands/arguments/ResourceKeyArgument;)Lnet/minecraft/commands/arguments/ResourceKeyArgument$Info$Template; a
net/minecraft/commands/arguments/ResourceKeyArgument$Info$Template ep$a$a
	registryKey b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ResourceKeyArgument; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/arguments/ResourceLocationArgument eq
	ERROR_UNKNOWN_ADVANCEMENT b
	ERROR_UNKNOWN_ITEM_MODIFIER e
	ERROR_UNKNOWN_PREDICATE d
	ERROR_UNKNOWN_RECIPE c
	EXAMPLES a
	getAdvancement (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/Advancement; a
	getId (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; e
	getItemModifier (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; d
	getPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; c
	getRecipe (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/item/crafting/Recipe; b
	id ()Lnet/minecraft/commands/arguments/ResourceLocationArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/arguments/ResourceOrTagLocationArgument er
	EXAMPLES a
	registryKey b
	getRegistryType (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lnet/minecraft/commands/arguments/ResourceOrTagLocationArgument$Result; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/ResourceOrTagLocationArgument$Result; a
	resourceOrTag (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/commands/arguments/ResourceOrTagLocationArgument; a
net/minecraft/commands/arguments/ResourceOrTagLocationArgument$Info er$a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/ResourceOrTagLocationArgument$Info$Template; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/arguments/ResourceOrTagLocationArgument$Info$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/ResourceOrTagLocationArgument$Info$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lnet/minecraft/commands/arguments/ResourceOrTagLocationArgument;)Lnet/minecraft/commands/arguments/ResourceOrTagLocationArgument$Info$Template; a
net/minecraft/commands/arguments/ResourceOrTagLocationArgument$Info$Template er$a$a
	registryKey b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ResourceOrTagLocationArgument; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/arguments/ResourceOrTagLocationArgument$ResourceResult er$b
	key a
	asPrintable ()Ljava/lang/String; b
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	key ()Lnet/minecraft/resources/ResourceKey; c
	test (Lnet/minecraft/core/Holder;)Z a
	unwrap ()Lcom/mojang/datafixers/util/Either; a
net/minecraft/commands/arguments/ResourceOrTagLocationArgument$Result er$c
	asPrintable ()Ljava/lang/String; b
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	unwrap ()Lcom/mojang/datafixers/util/Either; a
net/minecraft/commands/arguments/ResourceOrTagLocationArgument$TagResult er$d
	key a
	asPrintable ()Ljava/lang/String; b
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	key ()Lnet/minecraft/tags/TagKey; c
	test (Lnet/minecraft/core/Holder;)Z a
	unwrap ()Lcom/mojang/datafixers/util/Either; a
net/minecraft/commands/arguments/ScoreHolderArgument es
	ERROR_NO_RESULTS c
	EXAMPLES b
	SUGGEST_SCORE_HOLDERS a
	multiple d
	getName (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; a
	getNames (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; b
	getNames (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection; a
	getNamesWithDefaultWildcard (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; c
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/ScoreHolderArgument$Result; a
	scoreHolder ()Lnet/minecraft/commands/arguments/ScoreHolderArgument; a
	scoreHolders ()Lnet/minecraft/commands/arguments/ScoreHolderArgument; b
net/minecraft/commands/arguments/ScoreHolderArgument$Info es$a
	FLAG_MULTIPLE a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/ScoreHolderArgument$Info$Template; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/arguments/ScoreHolderArgument$Info$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/ScoreHolderArgument$Info$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lnet/minecraft/commands/arguments/ScoreHolderArgument;)Lnet/minecraft/commands/arguments/ScoreHolderArgument$Info$Template; a
net/minecraft/commands/arguments/ScoreHolderArgument$Info$Template es$a$a
	multiple b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ScoreHolderArgument; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/arguments/ScoreHolderArgument$Result es$b
net/minecraft/commands/arguments/ScoreHolderArgument$SelectorResult es$c
	selector a
net/minecraft/commands/arguments/ScoreboardSlotArgument et
	ERROR_INVALID_VALUE a
	EXAMPLES b
	displaySlot ()Lnet/minecraft/commands/arguments/ScoreboardSlotArgument; a
	getDisplaySlot (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; a
net/minecraft/commands/arguments/SignedArgument eu
	getSignableText (Ljava/lang/Object;)Ljava/lang/String; a
net/minecraft/commands/arguments/SlotArgument ev
	ERROR_UNKNOWN_SLOT b
	EXAMPLES a
	SLOTS c
	getSlot (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; a
	slot ()Lnet/minecraft/commands/arguments/SlotArgument; a
net/minecraft/commands/arguments/StringRepresentableArgument ew
	ERROR_INVALID_VALUE a
	codec b
	values c
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Enum; a
net/minecraft/commands/arguments/TeamArgument ex
	ERROR_TEAM_NOT_FOUND b
	EXAMPLES a
	getTeam (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
	team ()Lnet/minecraft/commands/arguments/TeamArgument; a
net/minecraft/commands/arguments/TemplateMirrorArgument ey
	getMirror (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/block/Mirror; a
	templateMirror ()Lnet/minecraft/commands/arguments/StringRepresentableArgument; a
net/minecraft/commands/arguments/TemplateRotationArgument ez
	getRotation (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/block/Rotation; a
	templateRotation ()Lnet/minecraft/commands/arguments/TemplateRotationArgument; a
net/minecraft/commands/arguments/TimeArgument fa
	ERROR_INVALID_TICK_COUNT c
	ERROR_INVALID_UNIT b
	EXAMPLES a
	UNITS d
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; a
	time ()Lnet/minecraft/commands/arguments/TimeArgument; a
net/minecraft/commands/arguments/UuidArgument fb
	ALLOWED_CHARACTERS c
	ERROR_INVALID_UUID a
	EXAMPLES b
	getUuid (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/UUID; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/util/UUID; a
	uuid ()Lnet/minecraft/commands/arguments/UuidArgument; a
net/minecraft/commands/arguments/blocks/BlockInput fc
	properties b
	state a
	tag c
	getDefinedProperties ()Ljava/util/Set; b
	getState ()Lnet/minecraft/world/level/block/state/BlockState; a
	place (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;I)Z a
	test (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument fd
	EXAMPLES a
	blocks b
	blockPredicate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/blocks/BlockPredicateArgument; a
	getBlockPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result; a
	parse (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result; a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$BlockPredicate fd$a
	nbt c
	properties b
	state a
	requiresNbt ()Z a
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result fd$b
	requiresNbt ()Z a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$TagPredicate fd$c
	nbt b
	tag a
	vagueProperties c
	requiresNbt ()Z a
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockStateArgument fe
	EXAMPLES a
	blocks b
	block (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/blocks/BlockStateArgument; a
	getBlock (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/blocks/BlockInput; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/blocks/BlockInput; a
net/minecraft/commands/arguments/blocks/BlockStateParser ff
	ERROR_DUPLICATE_PROPERTY d
	ERROR_EXPECTED_END_OF_PROPERTIES g
	ERROR_EXPECTED_VALUE f
	ERROR_INVALID_VALUE e
	ERROR_NO_TAGS_ALLOWED a
	ERROR_UNKNOWN_BLOCK b
	ERROR_UNKNOWN_PROPERTY c
	ERROR_UNKNOWN_TAG h
	SUGGEST_NOTHING o
	SYNTAX_END_PROPERTIES k
	SYNTAX_EQUALS l
	SYNTAX_PROPERTY_SEPARATOR m
	SYNTAX_START_NBT j
	SYNTAX_START_PROPERTIES i
	SYNTAX_TAG n
	allowNbt s
	blocks p
	definition w
	forTesting r
	id v
	nbt y
	properties t
	reader q
	state x
	suggestions A
	tag z
	vagueProperties u
	addSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/world/level/block/state/properties/Property;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder; a
	appendProperty (Ljava/lang/StringBuilder;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)V a
	fillSuggestions (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;ZZ)Ljava/util/concurrent/CompletableFuture; a
	hasBlockEntity ()Z b
	parse ()V a
	parseForBlock (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/blocks/BlockStateParser$BlockResult; a
	parseForBlock (Lnet/minecraft/core/Registry;Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/blocks/BlockStateParser$BlockResult; a
	parseForBlock (Lnet/minecraft/core/Registry;Ljava/lang/String;Z)Lnet/minecraft/commands/arguments/blocks/BlockStateParser$BlockResult; a
	parseForTesting (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;Z)Lcom/mojang/datafixers/util/Either; b
	parseForTesting (Lnet/minecraft/core/Registry;Lcom/mojang/brigadier/StringReader;Z)Lcom/mojang/datafixers/util/Either; b
	parseForTesting (Lnet/minecraft/core/Registry;Ljava/lang/String;Z)Lcom/mojang/datafixers/util/Either; b
	readBlock ()V c
	readNbt ()V g
	readProperties ()V e
	readTag ()V d
	readVagueProperties ()V f
	serialize (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/String; a
	setValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;I)V a
	suggestBlockIdOrTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; l
	suggestEquals (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; f
	suggestItem (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; k
	suggestNextPropertyOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; g
	suggestOpenNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; e
	suggestOpenPropertiesOrNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; i
	suggestOpenVaguePropertiesOrNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; h
	suggestPropertyName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; c
	suggestPropertyNameOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggestTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; j
	suggestVaguePropertyName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; d
	suggestVaguePropertyNameOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; b
	suggestVaguePropertyValue (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/commands/arguments/blocks/BlockStateParser$BlockResult ff$a
	blockState a
	nbt c
	properties b
	blockState ()Lnet/minecraft/world/level/block/state/BlockState; a
	nbt ()Lnet/minecraft/nbt/CompoundTag; c
	properties ()Ljava/util/Map; b
net/minecraft/commands/arguments/blocks/BlockStateParser$TagResult ff$b
	nbt c
	tag a
	vagueProperties b
	nbt ()Lnet/minecraft/nbt/CompoundTag; c
	tag ()Lnet/minecraft/core/HolderSet; a
	vagueProperties ()Ljava/util/Map; b
net/minecraft/commands/arguments/coordinates/BlockPosArgument fh
	ERROR_NOT_LOADED a
	ERROR_OUT_OF_BOUNDS c
	ERROR_OUT_OF_WORLD b
	EXAMPLES d
	blockPos ()Lnet/minecraft/commands/arguments/coordinates/BlockPosArgument; a
	getLoadedBlockPos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPos; a
	getSpawnablePos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPos; b
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
net/minecraft/commands/arguments/coordinates/ColumnPosArgument fi
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	columnPos ()Lnet/minecraft/commands/arguments/coordinates/ColumnPosArgument; a
	getColumnPos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ColumnPos; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
net/minecraft/commands/arguments/coordinates/Coordinates fj
	getBlockPos (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/core/BlockPos; c
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
net/minecraft/commands/arguments/coordinates/LocalCoordinates fk
	PREFIX_LOCAL_COORDINATE a
	forwards d
	left b
	up c
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/LocalCoordinates; a
	readDouble (Lcom/mojang/brigadier/StringReader;I)D a
net/minecraft/commands/arguments/coordinates/RotationArgument fl
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	getRotation (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	rotation ()Lnet/minecraft/commands/arguments/coordinates/RotationArgument; a
net/minecraft/commands/arguments/coordinates/SwizzleArgument fm
	ERROR_INVALID b
	EXAMPLES a
	getSwizzle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet; a
	swizzle ()Lnet/minecraft/commands/arguments/coordinates/SwizzleArgument; a
net/minecraft/commands/arguments/coordinates/Vec2Argument fn
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	centerCorrect c
	getVec2 (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/phys/Vec2; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	vec2 ()Lnet/minecraft/commands/arguments/coordinates/Vec2Argument; a
	vec2 (Z)Lnet/minecraft/commands/arguments/coordinates/Vec2Argument; a
net/minecraft/commands/arguments/coordinates/Vec3Argument fo
	ERROR_MIXED_TYPE b
	ERROR_NOT_COMPLETE a
	EXAMPLES c
	centerCorrect d
	getCoordinates (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; b
	getVec3 (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/phys/Vec3; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	vec3 ()Lnet/minecraft/commands/arguments/coordinates/Vec3Argument; a
	vec3 (Z)Lnet/minecraft/commands/arguments/coordinates/Vec3Argument; a
net/minecraft/commands/arguments/coordinates/WorldCoordinate fp
	ERROR_EXPECTED_DOUBLE a
	ERROR_EXPECTED_INT b
	PREFIX_RELATIVE c
	relative d
	value e
	get (D)D a
	isRelative ()Z a
	isRelative (Lcom/mojang/brigadier/StringReader;)Z b
	parseDouble (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinate; a
	parseInt (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinate; a
net/minecraft/commands/arguments/coordinates/WorldCoordinates fq
	x a
	y b
	z c
	absolute (DDD)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	absolute (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	current ()Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; d
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
	parseDouble (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	parseInt (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
net/minecraft/commands/arguments/item/FunctionArgument fs
	ERROR_UNKNOWN_FUNCTION c
	ERROR_UNKNOWN_TAG b
	EXAMPLES a
	functions ()Lnet/minecraft/commands/arguments/item/FunctionArgument; a
	getFunction (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/commands/CommandFunction; a
	getFunctionOrTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; b
	getFunctionTag (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Collection; b
	getFunctions (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/FunctionArgument$Result; a
net/minecraft/commands/arguments/item/FunctionArgument$Result fs$a
	create (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; a
	unwrap (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair; b
net/minecraft/commands/arguments/item/ItemArgument ft
	EXAMPLES a
	items b
	getItem (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/item/ItemInput; a
	item (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/item/ItemArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/ItemInput; a
net/minecraft/commands/arguments/item/ItemInput fu
	ERROR_STACK_TOO_BIG a
	item b
	tag c
	createItemStack (IZ)Lnet/minecraft/world/item/ItemStack; a
	getItem ()Lnet/minecraft/world/item/Item; a
	getItemName ()Ljava/lang/String; c
	serialize ()Ljava/lang/String; b
	test (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/commands/arguments/item/ItemParser fv
	ERROR_NO_TAGS_ALLOWED a
	ERROR_UNKNOWN_ITEM b
	ERROR_UNKNOWN_TAG c
	SUGGEST_NOTHING f
	SYNTAX_START_NBT d
	SYNTAX_TAG e
	allowTags i
	items g
	nbt k
	reader h
	result j
	suggestions l
	fillSuggestions (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Z)Ljava/util/concurrent/CompletableFuture; a
	parse ()V d
	parseForItem (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/ItemParser$ItemResult; a
	parseForTesting (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;)Lcom/mojang/datafixers/util/Either; b
	readItem ()V a
	readNbt ()V c
	readTag ()V b
	suggestItem (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; c
	suggestItemIdOrTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; d
	suggestOpenNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggestTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; b
net/minecraft/commands/arguments/item/ItemParser$ItemResult fv$a
	item a
	nbt b
	item ()Lnet/minecraft/core/Holder; a
	nbt ()Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/commands/arguments/item/ItemParser$TagResult fv$b
	nbt b
	tag a
	nbt ()Lnet/minecraft/nbt/CompoundTag; b
	tag ()Lnet/minecraft/core/HolderSet; a
net/minecraft/commands/arguments/item/ItemPredicateArgument fw
	EXAMPLES a
	items b
	createResult (Ljava/util/function/Predicate;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/commands/arguments/item/ItemPredicateArgument$Result; a
	getItemPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; a
	itemPredicate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/item/ItemPredicateArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/ItemPredicateArgument$Result; a
net/minecraft/commands/arguments/item/ItemPredicateArgument$Result fw$a
net/minecraft/commands/arguments/selector/EntitySelector fz
	ANY_TYPE b
	INFINITE a
	aabb i
	currentEntity k
	entityUUID m
	includesEntities d
	maxResults c
	order j
	playerName l
	position h
	predicate f
	range g
	type n
	usesSelector o
	worldLimited e
	addEntities (Ljava/util/List;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Ljava/util/function/Predicate;)V a
	checkPermissions (Lnet/minecraft/commands/CommandSourceStack;)V e
	findEntities (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/List; b
	findPlayers (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/List; d
	findSingleEntity (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/entity/Entity; a
	findSinglePlayer (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/server/level/ServerPlayer; c
	getMaxResults ()I a
	getPredicate (Lnet/minecraft/world/phys/Vec3;)Ljava/util/function/Predicate; a
	includesEntities ()Z b
	isSelfSelector ()Z c
	isWorldLimited ()Z d
	joinNames (Ljava/util/List;)Lnet/minecraft/network/chat/Component; a
	sortAndLimit (Lnet/minecraft/world/phys/Vec3;Ljava/util/List;)Ljava/util/List; a
	usesSelector ()Z e
net/minecraft/commands/arguments/selector/EntitySelectorParser ga
	ERROR_EXPECTED_END_OF_OPTIONS i
	ERROR_EXPECTED_OPTION_VALUE j
	ERROR_INVALID_NAME_OR_UUID e
	ERROR_MISSING_SELECTOR_TYPE h
	ERROR_SELECTORS_NOT_ALLOWED g
	ERROR_UNKNOWN_SELECTOR_TYPE f
	ORDER_ARBITRARY k
	ORDER_FURTHEST m
	ORDER_NEAREST l
	ORDER_RANDOM n
	SELECTOR_ALL_ENTITIES w
	SELECTOR_ALL_PLAYERS t
	SELECTOR_CURRENT_ENTITY v
	SELECTOR_NEAREST_PLAYER s
	SELECTOR_RANDOM_PLAYERS u
	SUGGEST_NOTHING o
	SYNTAX_NOT c
	SYNTAX_OPTIONS_END q
	SYNTAX_OPTIONS_KEY_VALUE_SEPARATOR b
	SYNTAX_OPTIONS_SEPARATOR r
	SYNTAX_OPTIONS_START p
	SYNTAX_SELECTOR_START a
	SYNTAX_TAG d
	allowSelectors y
	currentEntity O
	deltaX H
	deltaY I
	deltaZ J
	distance C
	entityUUID R
	hasAdvancements ae
	hasGamemodeEquals X
	hasGamemodeNotEquals Y
	hasNameEquals T
	hasNameNotEquals U
	hasScores ad
	hasTeamEquals Z
	hasTeamNotEquals aa
	includesEntities A
	isLimited V
	isSorted W
	level D
	maxResults z
	order N
	playerName P
	predicate M
	reader x
	rotX K
	rotY L
	startPosition Q
	suggestions S
	type ab
	typeInverse ac
	usesSelectors af
	worldLimited B
	x E
	y F
	z G
	addPredicate (Ljava/util/function/Predicate;)V a
	createAabb (DDD)Lnet/minecraft/world/phys/AABB; a
	createRotationPredicate (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate; a
	fillSelectorSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V a
	fillSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; a
	finalizePredicates ()V I
	getDeltaX ()Ljava/lang/Double; p
	getDeltaY ()Ljava/lang/Double; q
	getDeltaZ ()Ljava/lang/Double; r
	getDistance ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; i
	getLevel ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; j
	getOrder ()Ljava/util/function/BiConsumer; s
	getReader ()Lcom/mojang/brigadier/StringReader; g
	getRotX ()Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; k
	getRotY ()Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; l
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	getX ()Ljava/lang/Double; m
	getY ()Ljava/lang/Double; n
	getZ ()Ljava/lang/Double; o
	hasAdvancements ()Z H
	hasGamemodeEquals ()Z z
	hasGamemodeNotEquals ()Z A
	hasNameEquals ()Z v
	hasNameNotEquals ()Z w
	hasScores ()Z G
	hasTeamEquals ()Z B
	hasTeamNotEquals ()Z C
	isCurrentEntity ()Z u
	isLimited ()Z x
	isSorted ()Z y
	isTag ()Z f
	isTypeLimited ()Z E
	isTypeLimitedInversely ()Z F
	limitToType (Lnet/minecraft/world/entity/EntityType;)V a
	parse ()Lnet/minecraft/commands/arguments/selector/EntitySelector; t
	parseNameOrUUID ()V c
	parseOptions ()V d
	parseSelector ()V b
	setDeltaX (D)V d
	setDeltaY (D)V e
	setDeltaZ (D)V f
	setDistance (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)V a
	setHasAdvancements (Z)V k
	setHasGamemodeEquals (Z)V f
	setHasGamemodeNotEquals (Z)V g
	setHasNameEquals (Z)V b
	setHasNameNotEquals (Z)V c
	setHasScores (Z)V j
	setHasTeamEquals (Z)V h
	setHasTeamNotEquals (Z)V i
	setIncludesEntities (Z)V a
	setLevel (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)V a
	setLimited (Z)V d
	setMaxResults (I)V a
	setOrder (Ljava/util/function/BiConsumer;)V a
	setRotX (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;)V a
	setRotY (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;)V b
	setSorted (Z)V e
	setSuggestions (Ljava/util/function/BiFunction;)V a
	setTypeLimitedInversely ()V D
	setWorldLimited ()V h
	setX (D)V a
	setY (D)V b
	setZ (D)V c
	shouldInvertValue ()Z e
	suggestEquals (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; i
	suggestName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; c
	suggestNameOrSelector (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; b
	suggestOpenOptions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; e
	suggestOptionsKey (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; g
	suggestOptionsKeyOrClose (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; f
	suggestOptionsNextOrClose (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; h
	suggestSelector (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; d
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions gb
	ERROR_ENTITY_TYPE_INVALID h
	ERROR_GAME_MODE_INVALID g
	ERROR_INAPPLICABLE_OPTION b
	ERROR_LEVEL_NEGATIVE d
	ERROR_LIMIT_TOO_SMALL e
	ERROR_RANGE_NEGATIVE c
	ERROR_SORT_UNKNOWN f
	ERROR_UNKNOWN_OPTION a
	OPTIONS i
	bootStrap ()V a
	get (Lnet/minecraft/commands/arguments/selector/EntitySelectorParser;Ljava/lang/String;I)Lnet/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier; a
	register (Ljava/lang/String;Lnet/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier;Ljava/util/function/Predicate;Lnet/minecraft/network/chat/Component;)V a
	suggestNames (Lnet/minecraft/commands/arguments/selector/EntitySelectorParser;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V a
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier gb$a
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Option gb$b
	description c
	modifier a
	predicate b
net/minecraft/commands/synchronization/ArgumentTypeInfo gf
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
net/minecraft/commands/synchronization/ArgumentTypeInfo$Template gf$a
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/synchronization/ArgumentTypeInfos gg
	BY_CLASS a
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
	byClass (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
	fixClassType (Ljava/lang/Class;)Ljava/lang/Class; b
	isClassRecognized (Ljava/lang/Class;)Z a
	register (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/Class;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
net/minecraft/commands/synchronization/ArgumentUtils gh
	LOGGER a
	NUMBER_FLAG_MAX c
	NUMBER_FLAG_MIN b
	createNumberFlags (ZZ)I a
	findUsedArgumentTypes (Lcom/mojang/brigadier/tree/CommandNode;)Ljava/util/Set; a
	findUsedArgumentTypes (Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Set;Ljava/util/Set;)V a
	numberHasMax (B)Z b
	numberHasMin (B)Z a
	serializeArgumentToJson (Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V a
	serializeCap (Lcom/google/gson/JsonObject;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;)V a
	serializeCap (Lcom/google/gson/JsonObject;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;)V a
	serializeNodeToJson (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject; a
net/minecraft/commands/synchronization/SingletonArgumentInfo gi
	template a
	contextAware (Ljava/util/function/Function;)Lnet/minecraft/commands/synchronization/SingletonArgumentInfo; a
	contextFree (Ljava/util/function/Supplier;)Lnet/minecraft/commands/synchronization/SingletonArgumentInfo; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/SingletonArgumentInfo$Template; a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/SingletonArgumentInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/SingletonArgumentInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/SingletonArgumentInfo$Template; b
net/minecraft/commands/synchronization/SingletonArgumentInfo$Template gi$a
	constructor b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/synchronization/SuggestionProviders gj
	ALL_RECIPES b
	ASK_SERVER a
	AVAILABLE_SOUNDS c
	DEFAULT_NAME f
	PROVIDERS_BY_NAME e
	SUMMONABLE_ENTITIES d
	getName (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lnet/minecraft/resources/ResourceLocation; a
	getProvider (Lnet/minecraft/resources/ResourceLocation;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; a
	register (Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; a
	safelySwap (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; b
net/minecraft/commands/synchronization/SuggestionProviders$Wrapper gj$a
	delegate a
	name b
net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo gk
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template; a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lcom/mojang/brigadier/arguments/DoubleArgumentType;)Lnet/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template; a
net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template gk$a
	max c
	min b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/DoubleArgumentType; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo gl
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template; a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lcom/mojang/brigadier/arguments/FloatArgumentType;)Lnet/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template; a
net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template gl$a
	max c
	min b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/FloatArgumentType; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo gm
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template; a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lcom/mojang/brigadier/arguments/IntegerArgumentType;)Lnet/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template; a
net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template gm$a
	max c
	min b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/IntegerArgumentType; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/synchronization/brigadier/LongArgumentInfo gn
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template; a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lcom/mojang/brigadier/arguments/LongArgumentType;)Lnet/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template; a
net/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template gn$a
	max c
	min b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/LongArgumentType; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer go
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template; a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lcom/mojang/brigadier/arguments/StringArgumentType;)Lnet/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template; a
net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template go$a
	type b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/StringArgumentType; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/core/AxisCycle gr
	$VALUES f
	AXIS_VALUES d
	BACKWARD c
	FORWARD b
	NONE a
	VALUES e
	$values ()[Lnet/minecraft/core/AxisCycle; b
	between (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/AxisCycle; a
	cycle (DDDLnet/minecraft/core/Direction$Axis;)D a
	cycle (IIILnet/minecraft/core/Direction$Axis;)I a
	cycle (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction$Axis; a
	inverse ()Lnet/minecraft/core/AxisCycle; a
net/minecraft/core/BlockMath gs
	LOGGER c
	VANILLA_UV_TRANSFORM_GLOBAL_TO_LOCAL b
	VANILLA_UV_TRANSFORM_LOCAL_TO_GLOBAL a
	blockCenterToCorner (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; a
	blockCornerToCenter (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; b
	getUVLockTransform (Lcom/mojang/math/Transformation;Lnet/minecraft/core/Direction;Ljava/util/function/Supplier;)Lcom/mojang/math/Transformation; a
net/minecraft/core/BlockPos gt
	CODEC a
	LOGGER d
	PACKED_X_LENGTH e
	PACKED_X_MASK i
	PACKED_Y_LENGTH c
	PACKED_Y_MASK j
	PACKED_Z_LENGTH h
	PACKED_Z_MASK k
	X_OFFSET n
	Y_OFFSET l
	ZERO b
	Z_OFFSET m
	above ()Lnet/minecraft/core/BlockPos; b
	above ()Lnet/minecraft/core/Vec3i; o
	above (I)Lnet/minecraft/core/BlockPos; b
	above (I)Lnet/minecraft/core/Vec3i; n
	asLong ()J a
	asLong (III)J a
	atY (I)Lnet/minecraft/core/BlockPos; h
	below ()Lnet/minecraft/core/BlockPos; c
	below ()Lnet/minecraft/core/Vec3i; n
	below (I)Lnet/minecraft/core/BlockPos; c
	below (I)Lnet/minecraft/core/Vec3i; m
	betweenClosed (IIIIII)Ljava/lang/Iterable; b
	betweenClosed (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/lang/Iterable; a
	betweenClosedStream (IIIIII)Ljava/util/stream/Stream; a
	betweenClosedStream (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; b
	betweenClosedStream (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Ljava/util/stream/Stream; a
	betweenClosedStream (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; a
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; c
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	east ()Lnet/minecraft/core/BlockPos; g
	east ()Lnet/minecraft/core/Vec3i; j
	east (I)Lnet/minecraft/core/BlockPos; g
	east (I)Lnet/minecraft/core/Vec3i; i
	findClosestMatch (Lnet/minecraft/core/BlockPos;IILjava/util/function/Predicate;)Ljava/util/Optional; a
	getFlatIndex (J)J e
	getX (J)I a
	getY (J)I b
	getZ (J)I c
	immutable ()Lnet/minecraft/core/BlockPos; h
	multiply (I)Lnet/minecraft/core/BlockPos; a
	multiply (I)Lnet/minecraft/core/Vec3i; o
	mutable ()Lnet/minecraft/core/BlockPos$MutableBlockPos; i
	north ()Lnet/minecraft/core/BlockPos; d
	north ()Lnet/minecraft/core/Vec3i; m
	north (I)Lnet/minecraft/core/BlockPos; d
	north (I)Lnet/minecraft/core/Vec3i; l
	of (J)Lnet/minecraft/core/BlockPos; d
	offset (DDD)Lnet/minecraft/core/BlockPos; a
	offset (DDD)Lnet/minecraft/core/Vec3i; b
	offset (III)Lnet/minecraft/core/BlockPos; b
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (JIII)J a
	offset (JLnet/minecraft/core/Direction;)J a
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; a
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	randomBetweenClosed (Lnet/minecraft/util/RandomSource;IIIIIII)Ljava/lang/Iterable; a
	randomInCube (Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;I)Ljava/lang/Iterable; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	south ()Lnet/minecraft/core/BlockPos; e
	south ()Lnet/minecraft/core/Vec3i; l
	south (I)Lnet/minecraft/core/BlockPos; e
	south (I)Lnet/minecraft/core/Vec3i; k
	spiralAround (Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Ljava/lang/Iterable; a
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; b
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	west ()Lnet/minecraft/core/BlockPos; f
	west ()Lnet/minecraft/core/Vec3i; k
	west (I)Lnet/minecraft/core/BlockPos; f
	west (I)Lnet/minecraft/core/Vec3i; j
	withinManhattan (Lnet/minecraft/core/BlockPos;III)Ljava/lang/Iterable; a
	withinManhattanStream (Lnet/minecraft/core/BlockPos;III)Ljava/util/stream/Stream; b
net/minecraft/core/BlockPos$MutableBlockPos gt$a
	above ()Lnet/minecraft/core/Vec3i; o
	above (I)Lnet/minecraft/core/Vec3i; n
	below ()Lnet/minecraft/core/Vec3i; n
	below (I)Lnet/minecraft/core/Vec3i; m
	clamp (Lnet/minecraft/core/Direction$Axis;II)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	east ()Lnet/minecraft/core/Vec3i; j
	east (I)Lnet/minecraft/core/Vec3i; i
	immutable ()Lnet/minecraft/core/BlockPos; h
	move (III)Lnet/minecraft/core/BlockPos$MutableBlockPos; e
	move (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	move (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	move (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; h
	multiply (I)Lnet/minecraft/core/BlockPos; a
	multiply (I)Lnet/minecraft/core/Vec3i; o
	north ()Lnet/minecraft/core/Vec3i; m
	north (I)Lnet/minecraft/core/Vec3i; l
	offset (DDD)Lnet/minecraft/core/BlockPos; a
	offset (DDD)Lnet/minecraft/core/Vec3i; b
	offset (III)Lnet/minecraft/core/BlockPos; b
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	set (DDD)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	set (III)Lnet/minecraft/core/BlockPos$MutableBlockPos; d
	set (J)Lnet/minecraft/core/BlockPos$MutableBlockPos; f
	set (Lnet/minecraft/core/AxisCycle;III)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	set (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; g
	setWithOffset (Lnet/minecraft/core/Vec3i;III)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setWithOffset (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setWithOffset (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setX (I)Lnet/minecraft/core/BlockPos$MutableBlockPos; p
	setX (I)Lnet/minecraft/core/Vec3i; u
	setY (I)Lnet/minecraft/core/BlockPos$MutableBlockPos; q
	setY (I)Lnet/minecraft/core/Vec3i; t
	setZ (I)Lnet/minecraft/core/BlockPos$MutableBlockPos; r
	setZ (I)Lnet/minecraft/core/Vec3i; s
	south ()Lnet/minecraft/core/Vec3i; l
	south (I)Lnet/minecraft/core/Vec3i; k
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	west ()Lnet/minecraft/core/Vec3i; k
	west (I)Lnet/minecraft/core/Vec3i; j
net/minecraft/core/BlockSource gu
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; f
	getLevel ()Lnet/minecraft/server/level/ServerLevel; g
	getPos ()Lnet/minecraft/core/BlockPos; d
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/BlockSourceImpl gv
	level a
	pos b
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; f
	getLevel ()Lnet/minecraft/server/level/ServerLevel; g
	getPos ()Lnet/minecraft/core/BlockPos; d
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/Cursor3D gw
	TYPE_CORNER d
	TYPE_EDGE c
	TYPE_FACE b
	TYPE_INSIDE a
	depth j
	end k
	height i
	index l
	originX e
	originY f
	originZ g
	width h
	x m
	y n
	z o
	advance ()Z a
	getNextType ()I e
	nextX ()I b
	nextY ()I c
	nextZ ()I d
net/minecraft/core/DefaultedRegistry gx
	defaultKey bR
	defaultValue bS
	byId (I)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getDefaultKey ()Lnet/minecraft/resources/ResourceLocation; a
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getOptional (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; b
	getRandom (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder; a
net/minecraft/core/Direction gy
	$VALUES t
	BY_2D_DATA r
	BY_3D_DATA q
	BY_NORMAL s
	CODEC g
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	VALUES p
	VERTICAL_CODEC h
	WEST e
	axis m
	axisDirection n
	data2d k
	data3d i
	name l
	normal o
	oppositeIndex j
	$values ()[Lnet/minecraft/core/Direction; v
	allShuffled (Lnet/minecraft/util/RandomSource;)Ljava/util/Collection; a
	byName (Ljava/lang/String;)Lnet/minecraft/core/Direction; a
	from2DDataValue (I)Lnet/minecraft/core/Direction; b
	from3DDataValue (I)Lnet/minecraft/core/Direction; a
	fromAxisAndDirection (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/core/Direction$AxisDirection;)Lnet/minecraft/core/Direction; a
	fromNormal (III)Lnet/minecraft/core/Direction; a
	fromNormal (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction; a
	fromYRot (D)Lnet/minecraft/core/Direction; a
	get (Lnet/minecraft/core/Direction$AxisDirection;Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; a
	get2DDataValue ()I e
	get3DDataValue ()I d
	getAxis ()Lnet/minecraft/core/Direction$Axis; o
	getAxisDirection ()Lnet/minecraft/core/Direction$AxisDirection; f
	getClockWise ()Lnet/minecraft/core/Direction; h
	getClockWise (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; a
	getClockWiseX ()Lnet/minecraft/core/Direction; r
	getClockWiseZ ()Lnet/minecraft/core/Direction; t
	getCounterClockWise ()Lnet/minecraft/core/Direction; i
	getCounterClockWise (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; b
	getCounterClockWiseX ()Lnet/minecraft/core/Direction; s
	getCounterClockWiseZ ()Lnet/minecraft/core/Direction; u
	getFacingAxis (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; a
	getName ()Ljava/lang/String; n
	getNearest (DDD)Lnet/minecraft/core/Direction; a
	getNearest (FFF)Lnet/minecraft/core/Direction; a
	getNormal ()Lnet/minecraft/core/Vec3i; q
	getOpposite ()Lnet/minecraft/core/Direction; g
	getRandom (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/Direction; b
	getRotation ()Lcom/mojang/math/Quaternion; b
	getSerializedName ()Ljava/lang/String; c
	getStepX ()I j
	getStepY ()I k
	getStepZ ()I l
	isFacingAngle (F)Z a
	makeDirectionArray (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)[Lnet/minecraft/core/Direction; a
	orderedByNearest (Lnet/minecraft/world/entity/Entity;)[Lnet/minecraft/core/Direction; a
	rotate (Lcom/mojang/math/Matrix4f;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	step ()Lcom/mojang/math/Vector3f; m
	stream ()Ljava/util/stream/Stream; a
	toYRot ()F p
	verifyVertical (Lnet/minecraft/core/Direction;)Lcom/mojang/serialization/DataResult; a
net/minecraft/core/Direction$Axis gy$a
	$VALUES g
	CODEC e
	VALUES d
	X a
	Y b
	Z c
	name f
	$values ()[Lnet/minecraft/core/Direction$Axis; f
	byName (Ljava/lang/String;)Lnet/minecraft/core/Direction$Axis; a
	choose (DDD)D a
	choose (III)I a
	getName ()Ljava/lang/String; a
	getPlane ()Lnet/minecraft/core/Direction$Plane; e
	getRandom (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/Direction$Axis; a
	getSerializedName ()Ljava/lang/String; c
	isHorizontal ()Z d
	isVertical ()Z b
	test (Lnet/minecraft/core/Direction;)Z a
net/minecraft/core/Direction$AxisDirection gy$b
	$VALUES e
	NEGATIVE b
	POSITIVE a
	name d
	step c
	$values ()[Lnet/minecraft/core/Direction$AxisDirection; d
	getName ()Ljava/lang/String; b
	getStep ()I a
	opposite ()Lnet/minecraft/core/Direction$AxisDirection; c
net/minecraft/core/Direction$Plane gy$c
	$VALUES e
	HORIZONTAL a
	VERTICAL b
	axis d
	faces c
	$values ()[Lnet/minecraft/core/Direction$Plane; b
	getRandomAxis (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/Direction$Axis; b
	getRandomDirection (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/Direction; a
	shuffledCopy (Lnet/minecraft/util/RandomSource;)Ljava/util/List; c
	stream ()Ljava/util/stream/Stream; a
	test (Lnet/minecraft/core/Direction;)Z a
net/minecraft/core/Direction8 gz
	$VALUES k
	EAST c
	NORTH a
	NORTH_EAST b
	NORTH_WEST h
	SOUTH e
	SOUTH_EAST d
	SOUTH_WEST f
	WEST g
	directions i
	step j
	$values ()[Lnet/minecraft/core/Direction8; d
	getDirections ()Ljava/util/Set; a
	getStepX ()I b
	getStepZ ()I c
net/minecraft/core/FrontAndTop ha
	$VALUES q
	DOWN_EAST a
	DOWN_NORTH b
	DOWN_SOUTH c
	DOWN_WEST d
	EAST_UP j
	LOOKUP_TOP_FRONT m
	NORTH_UP k
	SOUTH_UP l
	UP_EAST e
	UP_NORTH f
	UP_SOUTH g
	UP_WEST h
	WEST_UP i
	front p
	name n
	top o
	$values ()[Lnet/minecraft/core/FrontAndTop; d
	fromFrontAndTop (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/FrontAndTop; a
	front ()Lnet/minecraft/core/Direction; a
	getSerializedName ()Ljava/lang/String; c
	lookupKey (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)I b
	top ()Lnet/minecraft/core/Direction; b
net/minecraft/core/GlobalPos hb
	CODEC a
	dimension b
	pos c
	dimension ()Lnet/minecraft/resources/ResourceKey; a
	of (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/GlobalPos; a
	pos ()Lnet/minecraft/core/BlockPos; b
net/minecraft/core/Holder hc
	direct (Ljava/lang/Object;)Lnet/minecraft/core/Holder; a
	hackyErase (Lnet/minecraft/core/Holder;)Lnet/minecraft/core/Holder; a
	is (Ljava/util/function/Predicate;)Z a
	is (Lnet/minecraft/resources/ResourceKey;)Z a
	is (Lnet/minecraft/resources/ResourceLocation;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	isBound ()Z b
	isValidInRegistry (Lnet/minecraft/core/Registry;)Z a
	kind ()Lnet/minecraft/core/Holder$Kind; f
	tags ()Ljava/util/stream/Stream; c
	unwrap ()Lcom/mojang/datafixers/util/Either; d
	unwrapKey ()Ljava/util/Optional; e
	value ()Ljava/lang/Object; a
net/minecraft/core/Holder$Direct hc$a
	value a
	is (Ljava/util/function/Predicate;)Z a
	is (Lnet/minecraft/resources/ResourceKey;)Z a
	is (Lnet/minecraft/resources/ResourceLocation;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	isBound ()Z b
	isValidInRegistry (Lnet/minecraft/core/Registry;)Z a
	kind ()Lnet/minecraft/core/Holder$Kind; f
	tags ()Ljava/util/stream/Stream; c
	unwrap ()Lcom/mojang/datafixers/util/Either; d
	unwrapKey ()Ljava/util/Optional; e
	value ()Ljava/lang/Object; a
net/minecraft/core/Holder$Kind hc$b
	$VALUES c
	DIRECT b
	REFERENCE a
	$values ()[Lnet/minecraft/core/Holder$Kind; a
net/minecraft/core/Holder$Reference hc$c
	key d
	registry a
	tags b
	type c
	value e
	bind (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)V a
	bindTags (Ljava/util/Collection;)V a
	createIntrusive (Lnet/minecraft/core/Registry;Ljava/lang/Object;)Lnet/minecraft/core/Holder$Reference; a
	createStandAlone (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Holder$Reference; a
	is (Ljava/util/function/Predicate;)Z a
	is (Lnet/minecraft/resources/ResourceKey;)Z a
	is (Lnet/minecraft/resources/ResourceLocation;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	isBound ()Z b
	isValidInRegistry (Lnet/minecraft/core/Registry;)Z a
	key ()Lnet/minecraft/resources/ResourceKey; g
	kind ()Lnet/minecraft/core/Holder$Kind; f
	tags ()Ljava/util/stream/Stream; c
	unwrap ()Lcom/mojang/datafixers/util/Either; d
	unwrapKey ()Ljava/util/Optional; e
	value ()Ljava/lang/Object; a
net/minecraft/core/Holder$Reference$Type hc$c$a
	$VALUES c
	INTRUSIVE b
	STAND_ALONE a
	$values ()[Lnet/minecraft/core/Holder$Reference$Type; a
net/minecraft/core/HolderLookup hd
	forRegistry (Lnet/minecraft/core/Registry;)Lnet/minecraft/core/HolderLookup; a
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	get (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; a
	listElements ()Ljava/util/stream/Stream; a
	listTags ()Ljava/util/stream/Stream; b
net/minecraft/core/HolderLookup$RegistryLookup hd$a
	registry b
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	get (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; a
	listElements ()Ljava/util/stream/Stream; a
	listTags ()Ljava/util/stream/Stream; b
net/minecraft/core/HolderSet he
	contains (Lnet/minecraft/core/Holder;)Z a
	direct (Ljava/util/List;)Lnet/minecraft/core/HolderSet$Direct; a
	direct (Ljava/util/function/Function;Ljava/util/List;)Lnet/minecraft/core/HolderSet$Direct; a
	direct (Ljava/util/function/Function;[Ljava/lang/Object;)Lnet/minecraft/core/HolderSet$Direct; a
	direct ([Lnet/minecraft/core/Holder;)Lnet/minecraft/core/HolderSet$Direct; a
	get (I)Lnet/minecraft/core/Holder; a
	getRandomElement (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	isValidInRegistry (Lnet/minecraft/core/Registry;)Z a
	size ()I b
	stream ()Ljava/util/stream/Stream; a
	unwrap ()Lcom/mojang/datafixers/util/Either; c
net/minecraft/core/HolderSet$Direct he$a
	contents a
	contentsSet b
	contains (Lnet/minecraft/core/Holder;)Z a
	contents ()Ljava/util/List; d
	unwrap ()Lcom/mojang/datafixers/util/Either; c
net/minecraft/core/HolderSet$ListBacked he$b
	contents ()Ljava/util/List; d
	get (I)Lnet/minecraft/core/Holder; a
	getRandomElement (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	isValidInRegistry (Lnet/minecraft/core/Registry;)Z a
	size ()I b
	stream ()Ljava/util/stream/Stream; a
net/minecraft/core/HolderSet$Named he$c
	contents c
	key b
	registry a
	bind (Ljava/util/List;)V b
	contains (Lnet/minecraft/core/Holder;)Z a
	contents ()Ljava/util/List; d
	isValidInRegistry (Lnet/minecraft/core/Registry;)Z a
	key ()Lnet/minecraft/tags/TagKey; e
	unwrap ()Lcom/mojang/datafixers/util/Either; c
net/minecraft/core/IdMap hf
	DEFAULT a
	byId (I)Ljava/lang/Object; a
	byIdOrThrow (I)Ljava/lang/Object; b
	getId (Ljava/lang/Object;)I a
	size ()I b
net/minecraft/core/IdMapper hg
	idToT d
	nextId b
	tToId c
	add (Ljava/lang/Object;)V b
	addMapping (Ljava/lang/Object;I)V a
	byId (I)Ljava/lang/Object; a
	contains (I)Z c
	getId (Ljava/lang/Object;)I a
	size ()I b
net/minecraft/core/MappedRegistry hh
	LOGGER bR
	byId bS
	byKey bV
	byLocation bU
	byValue bW
	customHolderProvider cb
	elementsLifecycle bY
	frozen ca
	holdersInOrder cd
	intrusiveHolderCache cc
	lifecycles bX
	nextId ce
	tags bZ
	toId bT
	bindTags (Ljava/util/Map;)V a
	byId (I)Ljava/lang/Object; a
	containsKey (Lnet/minecraft/resources/ResourceKey;)Z e
	containsKey (Lnet/minecraft/resources/ResourceLocation;)Z c
	createIntrusiveHolder (Ljava/lang/Object;)Lnet/minecraft/core/Holder$Reference; e
	createTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; e
	elementsLifecycle ()Lcom/mojang/serialization/Lifecycle; c
	entrySet ()Ljava/util/Set; f
	freeze ()Lnet/minecraft/core/Registry; k
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getHolder (I)Ljava/util/Optional; c
	getHolder (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; b
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getOrCreateHolder (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/DataResult; d
	getOrCreateHolderOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Holder; c
	getOrCreateTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; b
	getRandom (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	getResourceKey (Ljava/lang/Object;)Ljava/util/Optional; c
	getTag (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; c
	getTagNames ()Ljava/util/stream/Stream; i
	getTags ()Ljava/util/stream/Stream; h
	getValueFromNullable (Lnet/minecraft/core/Holder$Reference;)Ljava/lang/Object; a
	holders ()Ljava/util/stream/Stream; g
	holdersInOrder ()Ljava/util/List; a
	isEmpty ()Z j
	isKnownTagName (Lnet/minecraft/tags/TagKey;)Z a
	keySet ()Ljava/util/Set; d
	lifecycle (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; d
	register (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;Z)Lnet/minecraft/core/Holder; a
	registerOrOverride (Ljava/util/OptionalInt;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder; a
	registryKeySet ()Ljava/util/Set; e
	resetTags ()V l
	size ()I b
	validateWrite (Lnet/minecraft/resources/ResourceKey;)V i
net/minecraft/core/NonNullList hi
	defaultValue b
	list a
	create ()Lnet/minecraft/core/NonNullList; a
	createWithCapacity (I)Lnet/minecraft/core/NonNullList; a
	of (Ljava/lang/Object;[Ljava/lang/Object;)Lnet/minecraft/core/NonNullList; a
	withSize (ILjava/lang/Object;)Lnet/minecraft/core/NonNullList; a
net/minecraft/core/Position hj
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/PositionImpl hk
	x a
	y b
	z c
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/QuartPos hl
	BITS a
	MASK c
	SECTION_TO_QUARTS_BITS d
	SIZE b
	fromBlock (I)I a
	fromSection (I)I d
	quartLocal (I)I b
	toBlock (I)I c
	toSection (I)I e
net/minecraft/core/Registry hm
	ACTIVITY au
	ACTIVITY_REGISTRY G
	ATTRIBUTE ak
	ATTRIBUTE_REGISTRY w
	BANNER_PATTERN bO
	BANNER_PATTERN_REGISTRY bN
	BIOME_REGISTRY aR
	BIOME_SOURCE bB
	BIOME_SOURCE_REGISTRY bo
	BLOCK V
	BLOCKSTATE_PROVIDER_TYPES bv
	BLOCK_ENTITY_TYPE ab
	BLOCK_ENTITY_TYPE_REGISTRY n
	BLOCK_PREDICATE_TYPES aI
	BLOCK_PREDICATE_TYPE_REGISTRY aH
	BLOCK_REGISTRY h
	BLOCK_STATE_PROVIDER_TYPE_REGISTRY bi
	CARVER aX
	CARVER_REGISTRY aW
	CAT_VARIANT bK
	CAT_VARIANT_REGISTRY bJ
	CHAT_TYPE_REGISTRY bI
	CHUNK_GENERATOR bC
	CHUNK_GENERATOR_REGISTRY bp
	CHUNK_STATUS ae
	CHUNK_STATUS_REGISTRY q
	COMMAND_ARGUMENT_TYPE am
	COMMAND_ARGUMENT_TYPE_REGISTRY N
	CONDITION bD
	CONDITION_REGISTRY bq
	CONFIGURED_CARVER_REGISTRY aK
	CONFIGURED_FEATURE_REGISTRY aL
	CUSTOM_STAT ad
	CUSTOM_STAT_REGISTRY p
	DENSITY_FUNCTION_REGISTRY aT
	DENSITY_FUNCTION_TYPES bF
	DENSITY_FUNCTION_TYPE_REGISTRY bs
	DIMENSION_REGISTRY P
	DIMENSION_TYPE_REGISTRY O
	ENCHANTMENT W
	ENCHANTMENT_REGISTRY i
	ENTITY_TYPE X
	ENTITY_TYPE_REGISTRY j
	FEATURE aZ
	FEATURE_REGISTRY aY
	FEATURE_SIZE_TYPES bA
	FEATURE_SIZE_TYPE_REGISTRY bn
	FLAT_LEVEL_GENERATOR_PRESET_REGISTRY aV
	FLOAT_PROVIDER_TYPES aC
	FLOAT_PROVIDER_TYPE_REGISTRY aB
	FLUID T
	FLUID_REGISTRY f
	FOLIAGE_PLACER_TYPES bw
	FOLIAGE_PLACER_TYPE_REGISTRY bj
	FROG_VARIANT bM
	FROG_VARIANT_REGISTRY bL
	GAME_EVENT R
	GAME_EVENT_REGISTRY x
	HEIGHT_PROVIDER_TYPES aG
	HEIGHT_PROVIDER_TYPE_REGISTRY aF
	INSTRUMENT bQ
	INSTRUMENT_REGISTRY bP
	INT_PROVIDER_TYPES aE
	INT_PROVIDER_TYPE_REGISTRY aD
	ITEM Y
	ITEM_REGISTRY k
	LEVEL_STEM_REGISTRY Q
	LOADERS bS
	LOGGER bR
	LOOT_CONDITION_TYPE ax
	LOOT_ENTRY_REGISTRY H
	LOOT_FUNCTION_REGISTRY I
	LOOT_FUNCTION_TYPE aw
	LOOT_ITEM_REGISTRY J
	LOOT_NBT_PROVIDER_REGISTRY L
	LOOT_NBT_PROVIDER_TYPE az
	LOOT_NUMBER_PROVIDER_REGISTRY K
	LOOT_NUMBER_PROVIDER_TYPE ay
	LOOT_POOL_ENTRY_TYPE av
	LOOT_SCORE_PROVIDER_REGISTRY M
	LOOT_SCORE_PROVIDER_TYPE aA
	MEMORY_MODULE_TYPE ar
	MEMORY_MODULE_TYPE_REGISTRY D
	MENU ah
	MENU_REGISTRY t
	MOB_EFFECT U
	MOB_EFFECT_REGISTRY g
	NOISE_GENERATOR_SETTINGS_REGISTRY aJ
	NOISE_REGISTRY aS
	PAINTING_VARIANT ac
	PAINTING_VARIANT_REGISTRY o
	PARTICLE_TYPE aa
	PARTICLE_TYPE_REGISTRY m
	PLACED_FEATURE_REGISTRY aM
	PLACEMENT_MODIFIERS bh
	PLACEMENT_MODIFIER_REGISTRY bg
	POINT_OF_INTEREST_TYPE aq
	POINT_OF_INTEREST_TYPE_REGISTRY C
	POSITION_SOURCE_TYPE al
	POSITION_SOURCE_TYPE_REGISTRY y
	POS_RULE_TEST ag
	POS_RULE_TEST_REGISTRY s
	POTION Z
	POTION_REGISTRY l
	PROCESSOR_LIST_REGISTRY aP
	RECIPE_SERIALIZER aj
	RECIPE_SERIALIZER_REGISTRY v
	RECIPE_TYPE ai
	RECIPE_TYPE_REGISTRY u
	REGISTRY d
	ROOT_PLACER_TYPES by
	ROOT_PLACER_TYPE_REGISTRY bm
	ROOT_REGISTRY_NAME b
	RULE bE
	RULE_REGISTRY br
	RULE_TEST af
	RULE_TEST_REGISTRY r
	SCHEDULE at
	SCHEDULE_REGISTRY F
	SENSOR_TYPE as
	SENSOR_TYPE_REGISTRY E
	SOUND_EVENT S
	SOUND_EVENT_REGISTRY e
	STAT_TYPE an
	STAT_TYPE_REGISTRY z
	STRUCTURE_PIECE bd
	STRUCTURE_PIECE_REGISTRY bc
	STRUCTURE_PLACEMENT_TYPE bb
	STRUCTURE_PLACEMENT_TYPE_REGISTRY ba
	STRUCTURE_POOL_ELEMENT bH
	STRUCTURE_POOL_ELEMENT_REGISTRY bu
	STRUCTURE_PROCESSOR bG
	STRUCTURE_PROCESSOR_REGISTRY bt
	STRUCTURE_REGISTRY aN
	STRUCTURE_SET_REGISTRY aO
	STRUCTURE_TYPES bf
	STRUCTURE_TYPE_REGISTRY be
	TEMPLATE_POOL_REGISTRY aQ
	TREE_DECORATOR_TYPES bz
	TREE_DECORATOR_TYPE_REGISTRY bl
	TRUNK_PLACER_TYPES bx
	TRUNK_PLACER_TYPE_REGISTRY bk
	VILLAGER_PROFESSION ap
	VILLAGER_PROFESSION_REGISTRY B
	VILLAGER_TYPE ao
	VILLAGER_TYPE_REGISTRY A
	WORLD_PRESET_REGISTRY aU
	WRITABLE_REGISTRY c
	key bT
	lifecycle bU
	asHolderIdMap ()Lnet/minecraft/core/IdMap; s
	bindTags (Ljava/util/Map;)V a
	byNameCodec ()Lcom/mojang/serialization/Codec; p
	checkRegistry (Lnet/minecraft/core/Registry;)V a
	containsKey (Lnet/minecraft/resources/ResourceKey;)Z e
	containsKey (Lnet/minecraft/resources/ResourceLocation;)Z c
	createIntrusiveHolder (Ljava/lang/Object;)Lnet/minecraft/core/Holder$Reference; e
	createRegistryKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	elementsLifecycle ()Lcom/mojang/serialization/Lifecycle; c
	entrySet ()Ljava/util/Set; f
	freeze ()Lnet/minecraft/core/Registry; k
	freezeBuiltins ()V m
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getHolder (I)Ljava/util/Optional; c
	getHolder (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; b
	getHolderOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Holder; h
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getOptional (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; f
	getOptional (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; b
	getOrCreateHolder (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/DataResult; d
	getOrCreateHolderOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Holder; c
	getOrCreateTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; b
	getOrThrow (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; g
	getRandom (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	getResourceKey (Ljava/lang/Object;)Ljava/util/Optional; c
	getTag (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; c
	getTagNames ()Ljava/util/stream/Stream; i
	getTagOrEmpty (Lnet/minecraft/tags/TagKey;)Ljava/lang/Iterable; d
	getTags ()Ljava/util/stream/Stream; h
	holderByNameCodec ()Lcom/mojang/serialization/Codec; q
	holders ()Ljava/util/stream/Stream; g
	internalRegister (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/WritableRegistry;Lnet/minecraft/core/Registry$RegistryBootstrap;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/WritableRegistry; a
	isKnownTagName (Lnet/minecraft/tags/TagKey;)Z a
	key ()Lnet/minecraft/resources/ResourceKey; n
	keySet ()Ljava/util/Set; d
	lifecycle ()Lcom/mojang/serialization/Lifecycle; o
	lifecycle (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; d
	register (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Ljava/lang/Object; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceLocation;Ljava/lang/Object;)Ljava/lang/Object; a
	registerDefaulted (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Function;Lnet/minecraft/core/Registry$RegistryBootstrap;)Lnet/minecraft/core/DefaultedRegistry; a
	registerDefaulted (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Lnet/minecraft/core/Registry$RegistryBootstrap;)Lnet/minecraft/core/DefaultedRegistry; a
	registerDefaulted (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Ljava/util/function/Function;Lnet/minecraft/core/Registry$RegistryBootstrap;)Lnet/minecraft/core/DefaultedRegistry; a
	registerDefaulted (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lnet/minecraft/core/Registry$RegistryBootstrap;)Lnet/minecraft/core/DefaultedRegistry; a
	registerMapping (Lnet/minecraft/core/Registry;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; a
	registerSimple (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Function;Lnet/minecraft/core/Registry$RegistryBootstrap;)Lnet/minecraft/core/Registry; a
	registerSimple (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lnet/minecraft/core/Registry$RegistryBootstrap;)Lnet/minecraft/core/Registry; a
	registerSimple (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Registry$RegistryBootstrap;)Lnet/minecraft/core/Registry; a
	registryKeySet ()Ljava/util/Set; e
	resetTags ()V l
	stream ()Ljava/util/stream/Stream; r
net/minecraft/core/Registry$RegistryBootstrap hm$a
net/minecraft/core/RegistryAccess hn
	BUILTIN d
	LOGGER a
	NETWORK_CODEC c
	REGISTRIES b
	addBuiltinElements (Lnet/minecraft/resources/RegistryResourceAccess$InMemoryStorage;Lnet/minecraft/core/RegistryAccess$RegistryData;)V a
	allElementsLifecycle ()Lcom/mojang/serialization/Lifecycle; g
	blankWriteable ()Lnet/minecraft/core/RegistryAccess$Writable; l
	builtinCopy ()Lnet/minecraft/core/RegistryAccess$Writable; e
	captureMap (Lcom/mojang/serialization/codecs/UnboundedMapCodec;)Lcom/mojang/serialization/Codec; a
	createFreshRegistries ()Ljava/util/Map; k
	createRegistry (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/WritableRegistry; e
	freeze ()Lnet/minecraft/core/RegistryAccess$Frozen; f
	fromRegistryOfRegistries (Lnet/minecraft/core/Registry;)Lnet/minecraft/core/RegistryAccess$Frozen; a
	getNetworkCodec (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/DataResult; f
	globalRegistries ()Ljava/util/stream/Stream; h
	knownRegistries ()Ljava/lang/Iterable; a
	load (Lnet/minecraft/core/RegistryAccess$Writable;Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/resources/RegistryLoader;)V a
	makeNetworkCodec ()Lcom/mojang/serialization/Codec; i
	networkSafeRegistries ()Ljava/util/stream/Stream; d
	ownedNetworkableRegistries ()Ljava/util/stream/Stream; j
	ownedRegistries ()Ljava/util/stream/Stream; b
	ownedRegistry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	ownedRegistryOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Registry; b
	put (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)V a
	put (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V a
	readFromDisk (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/core/RegistryAccess; a
	readRegistry (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/resources/RegistryLoader$Bound;Lnet/minecraft/core/RegistryAccess$RegistryData;)V a
	registries ()Ljava/util/stream/Stream; c
	registry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; c
	registryOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Registry; d
	retrieveRegistry (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/core/Registry; a
net/minecraft/core/RegistryAccess$Frozen hn$a
	freeze ()Lnet/minecraft/core/RegistryAccess$Frozen; f
net/minecraft/core/RegistryAccess$ImmutableRegistryAccess hn$b
	registries e
	ownedRegistries ()Ljava/util/stream/Stream; b
	ownedRegistry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
net/minecraft/core/RegistryAccess$RegistryData hn$c
	codec b
	key a
	networkCodec c
	codec ()Lcom/mojang/serialization/Codec; c
	key ()Lnet/minecraft/resources/ResourceKey; b
	networkCodec ()Lcom/mojang/serialization/Codec; d
	sendToClient ()Z a
net/minecraft/core/RegistryAccess$RegistryEntry hn$d
	key a
	value b
	freeze ()Lnet/minecraft/core/RegistryAccess$RegistryEntry; c
	fromHolder (Lnet/minecraft/core/Holder$Reference;)Lnet/minecraft/core/RegistryAccess$RegistryEntry; a
	fromMapEntry (Ljava/util/Map$Entry;)Lnet/minecraft/core/RegistryAccess$RegistryEntry; a
	fromUntyped (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Registry;)Lnet/minecraft/core/RegistryAccess$RegistryEntry; a
	key ()Lnet/minecraft/resources/ResourceKey; a
	value ()Lnet/minecraft/core/Registry; b
net/minecraft/core/RegistryAccess$Writable hn$e
	ownedWritableRegistry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; f
	ownedWritableRegistryOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/WritableRegistry; g
net/minecraft/core/RegistryAccess$WritableRegistryAccess hn$f
	registries e
	ownedRegistries ()Ljava/util/stream/Stream; b
	ownedRegistry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	ownedWritableRegistry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; f
net/minecraft/core/RegistryCodecs ho
	dataPackAwareCodec (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
	dataPackAwareDecoder (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Decoder;Lcom/mojang/serialization/Lifecycle;)Lcom/mojang/serialization/Decoder; a
	directCodec (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
	homogeneousList (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; a
	homogeneousList (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	homogeneousList (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec; a
	homogeneousList (Lnet/minecraft/resources/ResourceKey;Z)Lcom/mojang/serialization/Codec; a
	networkCodec (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	withNameAndId (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec; a
net/minecraft/core/RegistryCodecs$RegistryEntry ho$a
	id b
	key a
	value c
	id ()I b
	key ()Lnet/minecraft/resources/ResourceKey; a
	value ()Ljava/lang/Object; c
net/minecraft/core/Rotations hp
	x a
	y b
	z c
	getWrappedX ()F e
	getWrappedY ()F f
	getWrappedZ ()F g
	getX ()F b
	getY ()F c
	getZ ()F d
	save ()Lnet/minecraft/nbt/ListTag; a
net/minecraft/core/SectionPos hq
	PACKED_X_LENGTH h
	PACKED_X_MASK k
	PACKED_Y_LENGTH i
	PACKED_Y_MASK l
	PACKED_Z_LENGTH j
	PACKED_Z_MASK m
	RELATIVE_X_SHIFT q
	RELATIVE_Y_SHIFT r
	RELATIVE_Z_SHIFT s
	SECTION_BITS a
	SECTION_HALF_SIZE d
	SECTION_MASK c
	SECTION_MAX_INDEX e
	SECTION_SIZE b
	X_OFFSET p
	Y_OFFSET n
	Z_OFFSET o
	aroundAndAtBlockPos (IIILit/unimi/dsi/fastutil/longs/LongConsumer;)V a
	aroundAndAtBlockPos (JLit/unimi/dsi/fastutil/longs/LongConsumer;)V a
	aroundAndAtBlockPos (Lnet/minecraft/core/BlockPos;Lit/unimi/dsi/fastutil/longs/LongConsumer;)V a
	aroundChunk (Lnet/minecraft/world/level/ChunkPos;III)Ljava/util/stream/Stream; a
	asLong ()J s
	asLong (III)J b
	asLong (Lnet/minecraft/core/BlockPos;)J c
	betweenClosedStream (IIIIII)Ljava/util/stream/Stream; a
	blockToSection (J)J e
	blockToSectionCoord (D)I b
	blockToSectionCoord (I)I a
	blocksInside ()Ljava/util/stream/Stream; t
	bottomOf (Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/core/SectionPos; a
	center ()Lnet/minecraft/core/BlockPos; q
	chunk ()Lnet/minecraft/world/level/ChunkPos; r
	cube (Lnet/minecraft/core/SectionPos;I)Ljava/util/stream/Stream; a
	getZeroNode (J)J f
	maxBlockX ()I g
	maxBlockY ()I h
	maxBlockZ ()I i
	minBlockX ()I d
	minBlockY ()I e
	minBlockZ ()I f
	of (III)Lnet/minecraft/core/SectionPos; a
	of (J)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/core/Position;)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/world/level/ChunkPos;I)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/world/level/entity/EntityAccess;)Lnet/minecraft/core/SectionPos; a
	offset (III)Lnet/minecraft/core/SectionPos; d
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (JIII)J a
	offset (JLnet/minecraft/core/Direction;)J a
	origin ()Lnet/minecraft/core/BlockPos; p
	posToSectionCoord (D)I a
	relativeToBlockPos (S)Lnet/minecraft/core/BlockPos; g
	relativeToBlockX (S)I d
	relativeToBlockY (S)I e
	relativeToBlockZ (S)I f
	sectionRelative (I)I b
	sectionRelativePos (Lnet/minecraft/core/BlockPos;)S b
	sectionRelativeX (S)I a
	sectionRelativeY (S)I b
	sectionRelativeZ (S)I c
	sectionToBlockCoord (I)I c
	sectionToBlockCoord (II)I a
	x ()I a
	x (J)I b
	y ()I b
	y (J)I c
	z ()I c
	z (J)I d
net/minecraft/core/UUIDUtil hr
	CODEC a
	UUID_BYTES b
	UUID_PREFIX_OFFLINE_PLAYER c
	createOfflinePlayerUUID (Ljava/lang/String;)Ljava/util/UUID; a
	getOrCreatePlayerUUID (Lcom/mojang/authlib/GameProfile;)Ljava/util/UUID; a
	leastMostToIntArray (JJ)[I a
	readUUID (Lcom/mojang/serialization/Dynamic;)Ljava/util/UUID; a
	uuidFromIntArray ([I)Ljava/util/UUID; a
	uuidToByteArray (Ljava/util/UUID;)[B b
	uuidToIntArray (Ljava/util/UUID;)[I a
net/minecraft/core/Vec3i hs
	CODEC f
	ZERO g
	x a
	y b
	z c
	above ()Lnet/minecraft/core/Vec3i; o
	above (I)Lnet/minecraft/core/Vec3i; n
	below ()Lnet/minecraft/core/Vec3i; n
	below (I)Lnet/minecraft/core/Vec3i; m
	checkOffsetAxes (I)Ljava/util/function/Function; a
	closerThan (Lnet/minecraft/core/Vec3i;D)Z a
	closerToCenterThan (Lnet/minecraft/core/Position;D)Z a
	compareTo (Lnet/minecraft/core/Vec3i;)I i
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	distManhattan (Lnet/minecraft/core/Vec3i;)I k
	distSqr (Lnet/minecraft/core/Vec3i;)D j
	distToCenterSqr (DDD)D d
	distToCenterSqr (Lnet/minecraft/core/Position;)D b
	distToLowCornerSqr (DDD)D e
	east ()Lnet/minecraft/core/Vec3i; j
	east (I)Lnet/minecraft/core/Vec3i; i
	get (Lnet/minecraft/core/Direction$Axis;)I a
	getX ()I u
	getY ()I v
	getZ ()I w
	multiply (I)Lnet/minecraft/core/Vec3i; o
	north ()Lnet/minecraft/core/Vec3i; m
	north (I)Lnet/minecraft/core/Vec3i; l
	offset (DDD)Lnet/minecraft/core/Vec3i; b
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	offsetCodec (I)Lcom/mojang/serialization/Codec; v
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	setX (I)Lnet/minecraft/core/Vec3i; u
	setY (I)Lnet/minecraft/core/Vec3i; t
	setZ (I)Lnet/minecraft/core/Vec3i; s
	south ()Lnet/minecraft/core/Vec3i; l
	south (I)Lnet/minecraft/core/Vec3i; k
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	toShortString ()Ljava/lang/String; x
	west ()Lnet/minecraft/core/Vec3i; k
	west (I)Lnet/minecraft/core/Vec3i; j
net/minecraft/core/WritableRegistry ht
	isEmpty ()Z j
	register (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder; a
	registerOrOverride (Ljava/util/OptionalInt;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder; a
net/minecraft/core/cauldron/CauldronInteraction hu
	BANNER i
	DYED_ITEM j
	EMPTY a
	FILL_LAVA f
	FILL_POWDER_SNOW g
	FILL_WATER e
	LAVA c
	POWDER_SNOW d
	SHULKER_BOX h
	WATER b
	addDefaultInteractions (Ljava/util/Map;)V a
	bootStrap ()V b
	emptyBucket (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/InteractionResult; a
	fillBucket (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Predicate;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/InteractionResult; a
	newInteractionMap ()Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap; a
net/minecraft/core/dispenser/AbstractProjectileDispenseBehavior hw
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	getPower ()F b
	getProjectile (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/Position;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/projectile/Projectile; a
	getUncertainty ()F a
	playSound (Lnet/minecraft/core/BlockSource;)V a
net/minecraft/core/dispenser/BoatDispenseItemBehavior hx
	defaultDispenseItemBehavior c
	isChestBoat e
	type d
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	playSound (Lnet/minecraft/core/BlockSource;)V a
net/minecraft/core/dispenser/DefaultDispenseItemBehavior hy
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	playAnimation (Lnet/minecraft/core/BlockSource;Lnet/minecraft/core/Direction;)V a
	playSound (Lnet/minecraft/core/BlockSource;)V a
	spawnItem (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;Lnet/minecraft/core/Position;)V a
net/minecraft/core/dispenser/DispenseItemBehavior hz
	LOGGER a
	NOOP b
	bootStrap ()V c
	setEntityPokingOutOfBlock (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;)V a
net/minecraft/core/dispenser/OptionalDispenseItemBehavior ia
	success c
	isSuccess ()Z a
	playSound (Lnet/minecraft/core/BlockSource;)V a
	setSuccess (Z)V a
net/minecraft/core/dispenser/ShearsDispenseItemBehavior ib
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	tryShearBeehive (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	tryShearLivingEntity (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/core/dispenser/ShulkerBoxDispenseBehavior ic
	LOGGER c
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/core/particles/BlockParticleOption ig
	DESERIALIZER a
	state c
	type b
	codec (Lnet/minecraft/core/particles/ParticleType;)Lcom/mojang/serialization/Codec; a
	getState ()Lnet/minecraft/world/level/block/state/BlockState; c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/DustColorTransitionOptions ih
	CODEC c
	DESERIALIZER d
	SCULK_PARTICLE_COLOR a
	SCULK_TO_REDSTONE b
	toColor i
	getFromColor ()Lcom/mojang/math/Vector3f; c
	getToColor ()Lcom/mojang/math/Vector3f; d
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/DustParticleOptions ii
	CODEC c
	DESERIALIZER d
	REDSTONE b
	REDSTONE_PARTICLE_COLOR a
	getType ()Lnet/minecraft/core/particles/ParticleType; b
net/minecraft/core/particles/DustParticleOptionsBase ij
	MAX_SCALE f
	MIN_SCALE e
	color g
	scale h
	getColor ()Lcom/mojang/math/Vector3f; e
	getScale ()F f
	readVector3f (Lcom/mojang/brigadier/StringReader;)Lcom/mojang/math/Vector3f; a
	readVector3f (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/math/Vector3f; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ItemParticleOption ik
	DESERIALIZER a
	itemStack c
	type b
	codec (Lnet/minecraft/core/particles/ParticleType;)Lcom/mojang/serialization/Codec; a
	getItem ()Lnet/minecraft/world/item/ItemStack; c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ParticleGroup il
	SPORE_BLOSSOM a
	limit b
	getLimit ()I a
net/minecraft/core/particles/ParticleOptions im
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ParticleOptions$Deserializer im$a
	fromCommand (Lnet/minecraft/core/particles/ParticleType;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleOptions; b
	fromNetwork (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/core/particles/ParticleOptions; b
net/minecraft/core/particles/ParticleType in
	deserializer b
	overrideLimiter a
	codec ()Lcom/mojang/serialization/Codec; e
	getDeserializer ()Lnet/minecraft/core/particles/ParticleOptions$Deserializer; d
	getOverrideLimiter ()Z c
net/minecraft/core/particles/ParticleTypes io
	AMBIENT_ENTITY_EFFECT a
	ANGRY_VILLAGER b
	ASH at
	BLOCK c
	BLOCK_MARKER d
	BUBBLE e
	BUBBLE_COLUMN_UP aj
	BUBBLE_POP ah
	CAMPFIRE_COSY_SMOKE am
	CAMPFIRE_SIGNAL_SMOKE an
	CLOUD f
	CODEC aP
	COMPOSTER K
	CRIMSON_SPORE au
	CRIT g
	CURRENT_DOWN ai
	DAMAGE_INDICATOR h
	DOLPHIN al
	DRAGON_BREATH i
	DRIPPING_DRIPSTONE_LAVA aE
	DRIPPING_DRIPSTONE_WATER aG
	DRIPPING_HONEY ao
	DRIPPING_LAVA j
	DRIPPING_OBSIDIAN_TEAR ax
	DRIPPING_WATER m
	DUST o
	DUST_COLOR_TRANSITION p
	EFFECT q
	ELDER_GUARDIAN r
	ELECTRIC_SPARK aM
	ENCHANT t
	ENCHANTED_HIT s
	END_ROD u
	ENTITY_EFFECT v
	EXPLOSION x
	EXPLOSION_EMITTER w
	FALLING_DRIPSTONE_LAVA aF
	FALLING_DRIPSTONE_WATER aH
	FALLING_DUST z
	FALLING_HONEY ap
	FALLING_LAVA k
	FALLING_NECTAR ar
	FALLING_OBSIDIAN_TEAR ay
	FALLING_SPORE_BLOSSOM as
	FALLING_WATER n
	FIREWORK A
	FISHING B
	FLAME C
	FLASH I
	GLOW aJ
	GLOW_SQUID_INK aI
	HAPPY_VILLAGER J
	HEART L
	INSTANT_EFFECT M
	ITEM N
	ITEM_SLIME P
	ITEM_SNOWBALL Q
	LANDING_HONEY aq
	LANDING_LAVA l
	LANDING_OBSIDIAN_TEAR az
	LARGE_SMOKE R
	LAVA S
	MYCELIUM T
	NAUTILUS ak
	NOTE U
	POOF V
	PORTAL W
	RAIN X
	REVERSE_PORTAL aA
	SCRAPE aN
	SCULK_CHARGE E
	SCULK_CHARGE_POP F
	SCULK_SOUL D
	SHRIEK aO
	SMALL_FLAME aC
	SMOKE Y
	SNEEZE Z
	SNOWFLAKE aD
	SONIC_BOOM y
	SOUL H
	SOUL_FIRE_FLAME G
	SPIT aa
	SPLASH af
	SPORE_BLOSSOM_AIR aw
	SQUID_INK ab
	SWEEP_ATTACK ac
	TOTEM_OF_UNDYING ad
	UNDERWATER ae
	VIBRATION O
	WARPED_SPORE av
	WAX_OFF aL
	WAX_ON aK
	WHITE_ASH aB
	WITCH ag
	register (Ljava/lang/String;Z)Lnet/minecraft/core/particles/SimpleParticleType; a
	register (Ljava/lang/String;ZLnet/minecraft/core/particles/ParticleOptions$Deserializer;Ljava/util/function/Function;)Lnet/minecraft/core/particles/ParticleType; a
net/minecraft/core/particles/SculkChargeParticleOptions ip
	CODEC a
	DESERIALIZER b
	roll c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	roll ()F c
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ShriekParticleOption iq
	CODEC a
	DESERIALIZER b
	delay c
	getDelay ()I c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/SimpleParticleType ir
	DESERIALIZER a
	codec b
	codec ()Lcom/mojang/serialization/Codec; e
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	getType ()Lnet/minecraft/core/particles/SimpleParticleType; f
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/VibrationParticleOption is
	CODEC a
	DESERIALIZER b
	arrivalInTicks d
	destination c
	getArrivalInTicks ()I d
	getDestination ()Lnet/minecraft/world/level/gameevent/PositionSource; c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/data/BlockFamilies iu
	ACACIA_PLANKS a
	ANDESITE k
	BIRCH_PLANKS b
	BLACKSTONE m
	BRICKS p
	COBBLED_DEEPSLATE af
	COBBLESTONE I
	COPPER_BLOCK s
	CRIMSON_PLANKS c
	CUT_COPPER t
	CUT_RED_SANDSTONE aa
	CUT_SANDSTONE X
	DARK_OAK_PLANKS f
	DARK_PRISMARINE T
	DEEPSLATE ae
	DEEPSLATE_BRICKS ah
	DEEPSLATE_TILES ai
	DIORITE K
	END_STONE_BRICKS q
	EXPOSED_COPPER w
	EXPOSED_CUT_COPPER x
	GRANITE M
	JUNGLE_PLANKS d
	MANGROVE_PLANKS i
	MAP aj
	MOSSY_COBBLESTONE J
	MOSSY_STONE_BRICKS r
	MUD_BRICKS j
	NETHER_BRICKS O
	OAK_PLANKS e
	OXIDIZED_COPPER E
	OXIDIZED_CUT_COPPER F
	POLISHED_ANDESITE l
	POLISHED_BLACKSTONE n
	POLISHED_BLACKSTONE_BRICKS o
	POLISHED_DEEPSLATE ag
	POLISHED_DIORITE L
	POLISHED_GRANITE N
	PRISMARINE Q
	PRISMARINE_BRICKS S
	PURPUR R
	QUARTZ U
	RECIPE_GROUP_PREFIX_WOODEN ak
	RECIPE_UNLOCKED_BY_HAS_PLANKS al
	RED_NETHER_BRICKS P
	RED_SANDSTONE Z
	SANDSTONE W
	SMOOTH_QUARTZ V
	SMOOTH_RED_SANDSTONE ab
	SMOOTH_SANDSTONE Y
	SPRUCE_PLANKS g
	STONE ac
	STONE_BRICK ad
	WARPED_PLANKS h
	WAXED_COPPER_BLOCK u
	WAXED_CUT_COPPER v
	WAXED_EXPOSED_COPPER y
	WAXED_EXPOSED_CUT_COPPER z
	WAXED_OXIDIZED_COPPER G
	WAXED_OXIDIZED_CUT_COPPER H
	WAXED_WEATHERED_COPPER C
	WAXED_WEATHERED_CUT_COPPER D
	WEATHERED_COPPER A
	WEATHERED_CUT_COPPER B
	familyBuilder (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; a
	getAllFamilies ()Ljava/util/stream/Stream; a
net/minecraft/data/BlockFamily iv
	baseBlock a
	generateModel c
	generateRecipe d
	recipeGroupPrefix e
	recipeUnlockedBy f
	variants b
	get (Lnet/minecraft/data/BlockFamily$Variant;)Lnet/minecraft/world/level/block/Block; a
	getBaseBlock ()Lnet/minecraft/world/level/block/Block; a
	getRecipeGroupPrefix ()Ljava/util/Optional; e
	getRecipeUnlockedBy ()Ljava/util/Optional; f
	getVariants ()Ljava/util/Map; b
	shouldGenerateModel ()Z c
	shouldGenerateRecipe ()Z d
net/minecraft/data/BlockFamily$Builder iv$a
	family a
	button (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; a
	chiseled (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; b
	cracked (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; c
	cut (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; d
	dontGenerateModel ()Lnet/minecraft/data/BlockFamily$Builder; b
	dontGenerateRecipe ()Lnet/minecraft/data/BlockFamily$Builder; c
	door (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; e
	fence (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; f
	fenceGate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; g
	getFamily ()Lnet/minecraft/data/BlockFamily; a
	polished (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; k
	pressurePlate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; j
	recipeGroupPrefix (Ljava/lang/String;)Lnet/minecraft/data/BlockFamily$Builder; a
	recipeUnlockedBy (Ljava/lang/String;)Lnet/minecraft/data/BlockFamily$Builder; b
	sign (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; a
	slab (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; h
	stairs (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; i
	trapdoor (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; l
	wall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; m
net/minecraft/data/BlockFamily$Variant iv$b
	$VALUES q
	BUTTON a
	CHISELED b
	CRACKED c
	CUT d
	DOOR e
	FENCE f
	FENCE_GATE g
	POLISHED l
	PRESSURE_PLATE k
	SIGN h
	SLAB i
	STAIRS j
	TRAPDOOR m
	WALL n
	WALL_SIGN o
	name p
	$values ()[Lnet/minecraft/data/BlockFamily$Variant; b
	getName ()Ljava/lang/String; a
net/minecraft/data/BuiltinRegistries iw
	ACCESS q
	BIOME j
	CHAT_TYPE p
	CONFIGURED_CARVER c
	CONFIGURED_FEATURE d
	DENSITY_FUNCTION l
	DIMENSION_TYPE b
	FLAT_LEVEL_GENERATOR_PRESET o
	LOADERS s
	LOGGER r
	NOISE k
	NOISE_GENERATOR_SETTINGS m
	PLACED_FEATURE e
	PROCESSOR_LIST h
	REGISTRY a
	STRUCTURES f
	STRUCTURE_SETS g
	TEMPLATE_POOL i
	WORLD_PRESET n
	WRITABLE_REGISTRY t
	bootstrap ()V a
	internalRegister (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/WritableRegistry;Lnet/minecraft/data/BuiltinRegistries$RegistryBootstrap;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/WritableRegistry; a
	register (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/Object;)Lnet/minecraft/core/Holder; b
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Lnet/minecraft/core/Holder; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceLocation;Ljava/lang/Object;)Lnet/minecraft/core/Holder; a
	registerExact (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/Object;)Lnet/minecraft/core/Holder; a
	registerSimple (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lnet/minecraft/data/BuiltinRegistries$RegistryBootstrap;)Lnet/minecraft/core/Registry; a
	registerSimple (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/data/BuiltinRegistries$RegistryBootstrap;)Lnet/minecraft/core/Registry; a
net/minecraft/data/BuiltinRegistries$RegistryBootstrap iw$a
net/minecraft/data/CachedOutput ix
	NO_CACHE a
net/minecraft/data/DataGenerator iy
	LOGGER a
	allProviders d
	alwaysGenerate g
	inputFolders b
	outputFolder c
	providersToRun e
	version f
	addProvider (ZLnet/minecraft/data/DataProvider;)V a
	createPathProvider (Lnet/minecraft/data/DataGenerator$Target;Ljava/lang/String;)Lnet/minecraft/data/DataGenerator$PathProvider; a
	getInputFolders ()Ljava/util/Collection; a
	getOutputFolder ()Ljava/nio/file/Path; b
	getOutputFolder (Lnet/minecraft/data/DataGenerator$Target;)Ljava/nio/file/Path; a
	run ()V c
net/minecraft/data/DataGenerator$PathProvider iy$a
	kind b
	root a
	file (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Ljava/nio/file/Path; a
	json (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/DataGenerator$Target iy$b
	$VALUES e
	DATA_PACK a
	REPORTS c
	RESOURCE_PACK b
	directory d
	$values ()[Lnet/minecraft/data/DataGenerator$Target; a
net/minecraft/data/DataProvider iz
	FIXED_ORDER_FIELDS a
	KEY_COMPARATOR b
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)V a
	saveStable (Lnet/minecraft/data/CachedOutput;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)V a
net/minecraft/data/HashCache ja
	HEADER_MARKER b
	LOGGER a
	cacheDir d
	cachePaths h
	cachesToWrite g
	existingCaches f
	initialCount i
	rootDir c
	versionId e
	getProviderCachePath (Lnet/minecraft/data/DataProvider;)Ljava/nio/file/Path; c
	getUpdater (Lnet/minecraft/data/DataProvider;)Lnet/minecraft/data/CachedOutput; b
	purgeStaleAndWrite ()V a
	readCache (Ljava/nio/file/Path;Ljava/nio/file/Path;)Lnet/minecraft/data/HashCache$ProviderCache; a
	shouldRunInThisVersion (Lnet/minecraft/data/DataProvider;)Z a
net/minecraft/data/HashCache$CacheUpdater ja$a
	newCache c
	oldCache b
	writes d
	shouldWrite (Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)Z a
net/minecraft/data/HashCache$ProviderCache ja$b
	data b
	version a
	count ()I a
	data ()Ljava/util/Map; c
	get (Ljava/nio/file/Path;)Lcom/google/common/hash/HashCode; a
	load (Ljava/nio/file/Path;Ljava/nio/file/Path;)Lnet/minecraft/data/HashCache$ProviderCache; a
	put (Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)V a
	save (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/String;)V a
	version ()Ljava/lang/String; b
net/minecraft/data/advancements/AdvancementProvider jb
	LOGGER c
	pathProvider d
	tabs e
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)V a
net/minecraft/data/advancements/AdventureAdvancements jc
	BEDROCK_THICKNESS d
	DISTANCE_FROM_BOTTOM_TO_TOP a
	MOBS_TO_KILL e
	Y_COORDINATE_AT_BOTTOM c
	Y_COORDINATE_AT_TOP b
	accept (Ljava/util/function/Consumer;)V a
	addBiomes (Lnet/minecraft/advancements/Advancement$Builder;Ljava/util/List;)Lnet/minecraft/advancements/Advancement$Builder; a
	addMobsToKill (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
	fireCountAndBystander (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance; a
	lookAtThroughItem (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/item/Item;)Lnet/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance; a
net/minecraft/data/advancements/HusbandryAdvancements jd
	BREEDABLE_ANIMALS a
	EDIBLE_ITEMS e
	FISH c
	FISH_BUCKETS d
	INDIRECTLY_BREEDABLE_ANIMALS b
	WAX_SCRAPING_TOOLS f
	accept (Ljava/util/function/Consumer;)V a
	addBreedable (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; c
	addCatVariants (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; f
	addFish (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; e
	addFishBuckets (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; d
	addFood (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; b
	addLeashedFrogVariants (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
net/minecraft/data/advancements/NetherAdvancements je
	DISTRACT_PIGLIN_PLAYER_ARMOR_PREDICATE b
	EXPLORABLE_BIOMES a
	accept (Ljava/util/function/Consumer;)V a
net/minecraft/data/advancements/StoryAdvancements jf
	accept (Ljava/util/function/Consumer;)V a
net/minecraft/data/advancements/TheEndAdvancements jg
	accept (Ljava/util/function/Consumer;)V a
net/minecraft/data/info/BiomeParametersDumpReport ji
	LOGGER c
	topPath d
	createPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
	dumpValue (Ljava/nio/file/Path;Lnet/minecraft/data/CachedOutput;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)V a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)V a
net/minecraft/data/info/BlockListReport jj
	generator c
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)V a
net/minecraft/data/info/CommandsReport jk
	generator c
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)V a
net/minecraft/data/info/RegistryDumpReport jl
	generator c
	dumpRegistry (Lnet/minecraft/core/Registry;)Lcom/google/gson/JsonElement; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)V a
net/minecraft/data/info/WorldgenRegistryDumpReport jm
	LOGGER c
	generator d
	dumpRegistryCap (Lnet/minecraft/data/CachedOutput;Lnet/minecraft/core/RegistryAccess;Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/core/RegistryAccess$RegistryData;)V a
	dumpValue (Ljava/nio/file/Path;Lnet/minecraft/data/CachedOutput;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)V a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)V a
net/minecraft/data/loot/BlockLoot jo
	EXPLOSION_RESISTANT f
	HAS_NO_SHEARS_OR_SILK_TOUCH e
	HAS_NO_SILK_TOUCH b
	HAS_SHEARS c
	HAS_SHEARS_OR_SILK_TOUCH d
	HAS_SILK_TOUCH a
	JUNGLE_LEAVES_SAPLING_CHANGES h
	NORMAL_LEAVES_SAPLING_CHANCES g
	NORMAL_LEAVES_STICK_CHANCES i
	map j
	accept (Ljava/util/function/BiConsumer;)V a
	add (Lnet/minecraft/world/level/block/Block;Ljava/util/function/Function;)V a
	add (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	addNetherVinesDropTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V c
	applyExplosionCondition (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; a
	applyExplosionDecay (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; a
	createAttachedStemDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createBannerDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; k
	createBeeHiveDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; m
	createBeeNestDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; l
	createCandleCakeDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; s
	createCandleDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; r
	createCaveVinesDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; n
	createCopperOreDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; h
	createCropDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createDoorTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createDoublePlantShearsDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; q
	createDoublePlantWithSeedDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createGrassDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; o
	createLapisOreDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; i
	createLeavesDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;[F)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createMangroveLeavesDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; p
	createMultifaceBlockDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createMushroomBlockDrop (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createNameableBlockEntityTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; f
	createOakLeavesDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;[F)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createOreDrop (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createPotFlowerItemTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createRedstoneOreDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; j
	createSelfDropDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createShearsDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createShearsOnlyDrop (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; d
	createShulkerBoxDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; g
	createSilkTouchDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSilkTouchOnlyTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createSilkTouchOrShearsDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createSingleItemTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSingleItemTable (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSingleItemTableWithSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createSingleItemTableWithSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSinglePropConditionTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSlabItemTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; e
	createStemDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	dropOther (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)V a
	dropPottedContents (Lnet/minecraft/world/level/block/Block;)V b
	dropSelf (Lnet/minecraft/world/level/block/Block;)V d
	dropWhenSilkTouch (Lnet/minecraft/world/level/block/Block;)V c
	noDrop ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	otherWhenSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/data/loot/ChestLoot jp
	accept (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/loot/EntityLoot jq
	ENTITY_ON_FIRE a
	SPECIAL_LOOT_TABLE_TYPES b
	map c
	accept (Ljava/util/function/BiConsumer;)V a
	add (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	add (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	createSheepTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	killedByFrog ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	killedByFrogVariant (Lnet/minecraft/world/entity/animal/FrogVariant;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
net/minecraft/data/loot/FishingLoot jr
	IN_BAMBOO_JUNGLE c
	IN_JUNGLE a
	IN_SPARSE_JUNGLE b
	accept (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/loot/GiftLoot js
	accept (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/loot/LootTableProvider jt
	LOGGER c
	pathProvider d
	subProviders e
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)V a
net/minecraft/data/loot/PiglinBarterLoot ju
	accept (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/models/BlockModelGenerators jw
	MULTIFACE_GENERATOR a
	SHAPE_CONSUMERS h
	blockStateOutput b
	fullBlockModelCustomGenerators f
	modelOutput c
	nonOrientableTrapdoor e
	skippedAutoModelsOutput d
	texturedModels g
	applyRotation (Lnet/minecraft/core/FrontAndTop;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/Variant; a
	blockEntityModels (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	blockEntityModels (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; d
	configureDoorHalf (Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4;Lnet/minecraft/world/level/block/state/properties/DoubleBlockHalf;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	copyModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V h
	createActiveRail (Lnet/minecraft/world/level/block/Block;)V m
	createAirLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V f
	createAirLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)V a
	createAmethystCluster (Lnet/minecraft/world/level/block/Block;)V t
	createAmethystClusters ()V D
	createAnvil (Lnet/minecraft/world/level/block/Block;)V o
	createAxisAlignedPillarBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V a
	createAxisAlignedPillarBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; d
	createAxisAlignedPillarBlockCustomModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V e
	createAzalea (Lnet/minecraft/world/level/block/Block;)V p
	createBamboo ()V k
	createBambooModels (I)Ljava/util/List; a
	createBarrel ()V m
	createBedItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V j
	createBeeNest (Lnet/minecraft/world/level/block/Block;Ljava/util/function/Function;)V a
	createBell ()V n
	createBigDripLeafBlock ()V g
	createBookshelf ()V p
	createBooleanModelDispatch (Lnet/minecraft/world/level/block/state/properties/BooleanProperty;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	createBrewingStand ()V t
	createButton (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; b
	createCakeBlock ()V u
	createCampfires ([Lnet/minecraft/world/level/block/Block;)V a
	createCandleAndCandleCake (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V l
	createCartographyTable ()V v
	createCauldrons ()V y
	createCaveVines ()V ad
	createChorusFlower ()V z
	createChorusPlant ()V B
	createCocoa ()V O
	createColoredBlockWithRandomRotations (Lnet/minecraft/data/models/model/TexturedModel$Provider;[Lnet/minecraft/world/level/block/Block;)V a
	createColoredBlockWithStateRotations (Lnet/minecraft/data/models/model/TexturedModel$Provider;[Lnet/minecraft/world/level/block/Block;)V b
	createColumnWithFacing ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; l
	createCommandBlock (Lnet/minecraft/world/level/block/Block;)V n
	createComparator ()V r
	createComposter ()V C
	createCoral (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
	createCoralFans (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V b
	createCraftingTableLike (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiFunction;)V a
	createCropBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/properties/Property;[I)V a
	createCrossBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V b
	createCrossBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;Lnet/minecraft/data/models/model/TextureMapping;)V b
	createCrossBlockWithDefaultItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V a
	createCrossBlockWithDefaultItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createDaylightDetector ()V F
	createDirtPath ()V P
	createDispenserBlock (Lnet/minecraft/world/level/block/Block;)V s
	createDoor (Lnet/minecraft/world/level/block/Block;)V g
	createDoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createDoubleBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)V f
	createDoublePlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V c
	createEmptyOrFullDispatch (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	createEndPortalFrame ()V A
	createFacingDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; e
	createFarmland ()V H
	createFence (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; c
	createFenceGate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createFire ()V I
	createFloorFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; w
	createFrogspawnBlock ()V U
	createFrostedIce ()V M
	createFullAndCarpetBlocks (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V e
	createFurnace (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V d
	createGlassBlocks (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V f
	createGrassBlocks ()V N
	createGrassLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/blockstates/Variant;)V a
	createGrindstone ()V o
	createGrowingPlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V b
	createHopper ()V Q
	createHorizontalFacingDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	createHorizontalFacingDispatchAlt ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; c
	createHorizontallyRotatedBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V b
	createInfestedDeepslate ()V as
	createInfestedStone ()V ar
	createIronBars ()V R
	createJigsaw ()V au
	createLantern (Lnet/minecraft/world/level/block/Block;)V z
	createLever ()V S
	createLightBlock ()V aw
	createLightningRod ()V G
	createLilyPad ()V T
	createMagmaBlock ()V aq
	createMangrovePropagule ()V L
	createMirroredColumnGenerator (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; c
	createMirroredCubeGenerator (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createMuddyMangroveRoots ()V K
	createMultiface (Lnet/minecraft/world/level/block/Block;)V B
	createMushroomBlock (Lnet/minecraft/world/level/block/Block;)V r
	createNetherPortalBlock ()V V
	createNetherRoots (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V k
	createNetherrack ()V W
	createNonTemplateHorizontalBlock (Lnet/minecraft/world/level/block/Block;)V A
	createNonTemplateModelBlock (Lnet/minecraft/world/level/block/Block;)V k
	createNonTemplateModelBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
	createNormalTorch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V i
	createNorthWestMirroredCubeGenerator (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; b
	createNyliumBlock (Lnet/minecraft/world/level/block/Block;)V u
	createObserver ()V X
	createOrientableTrapdoor (Lnet/minecraft/world/level/block/Block;)V h
	createOrientableTrapdoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; c
	createPassiveRail (Lnet/minecraft/world/level/block/Block;)V l
	createPetrifiedOakSlab ()V av
	createPistonHeads ()V Z
	createPistonVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createPistons ()V Y
	createPlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V a
	createPointedDripstone ()V E
	createPointedDripstoneVariant (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)Lnet/minecraft/data/models/blockstates/Variant; a
	createPottedAzalea (Lnet/minecraft/world/level/block/Block;)V q
	createPressurePlate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; e
	createPumpkinVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createPumpkins ()V x
	createRedstoneLamp ()V ae
	createRedstoneTorch ()V af
	createRedstoneWire ()V q
	createRepeater ()V ag
	createRespawnAnchor ()V at
	createRotatableColumn (Lnet/minecraft/world/level/block/Block;)V v
	createRotatedMirroredVariantBlock (Lnet/minecraft/world/level/block/Block;)V c
	createRotatedPillar ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; f
	createRotatedPillarWithHorizontalVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V a
	createRotatedPillarWithHorizontalVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; d
	createRotatedVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; b
	createRotatedVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	createRotatedVariantBlock (Lnet/minecraft/world/level/block/Block;)V d
	createRotatedVariants (Lnet/minecraft/resources/ResourceLocation;)[Lnet/minecraft/data/models/blockstates/Variant; a
	createScaffolding ()V ac
	createSculkCatalyst ()V ap
	createSculkSensor ()V aa
	createSculkShrieker ()V ab
	createSeaPickle ()V ah
	createShulkerBox (Lnet/minecraft/world/level/block/Block;)V C
	createSideFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; x
	createSimpleBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; c
	createSimpleFlatItemModel (Lnet/minecraft/world/item/Item;)V a
	createSimpleFlatItemModel (Lnet/minecraft/world/level/block/Block;)V b
	createSimpleFlatItemModel (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)V a
	createSlab (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; e
	createSmallDripleaf ()V j
	createSmithingTable ()V w
	createSmoothStoneSlab ()V s
	createSnowBlocks ()V ai
	createSoulFire ()V J
	createStairs (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; b
	createStems (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V c
	createStonecutter ()V aj
	createStructureBlock ()V ak
	createSuffixedVariant (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/ModelTemplate;Ljava/util/function/Function;)Lnet/minecraft/resources/ResourceLocation; a
	createSunflower ()V h
	createSweetBerryBush ()V al
	createTallSeagrass ()V i
	createTopFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; y
	createTorchHorizontalDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; d
	createTrapdoor (Lnet/minecraft/world/level/block/Block;)V i
	createTrapdoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; d
	createTripwire ()V am
	createTripwireHook ()V an
	createTrivialBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	createTrivialBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V c
	createTrivialCube (Lnet/minecraft/world/level/block/Block;)V e
	createTurtleEgg ()V ao
	createTurtleEggModel (ILjava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;)Lnet/minecraft/resources/ResourceLocation; a
	createTurtleEggModel (Ljava/lang/Integer;Ljava/lang/Integer;)Lnet/minecraft/resources/ResourceLocation; a
	createWall (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createWeightedPressurePlate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V g
	delegateItemModel (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;)V a
	delegateItemModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V a
	family (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; f
	run ()V a
	skipAutoItemBlock (Lnet/minecraft/world/level/block/Block;)V a
	woodProvider (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; j
	wrapModels (Ljava/util/List;Ljava/util/function/UnaryOperator;)Ljava/util/List; a
net/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator jw$a
	baseModel b
	create ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	createWithCustomBlockItemModel (Lnet/minecraft/data/models/model/ModelTemplate;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	createWithoutBlockItem ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; b
net/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider jw$b
	family d
	fullBlock e
	mapping b
	models c
	button (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	door (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; j
	fence (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; c
	fenceGate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; d
	fullBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/ModelTemplate;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	fullBlockCopies ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	fullBlockVariant (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; i
	generateFor (Lnet/minecraft/data/BlockFamily;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	getOrCreateModel (Lnet/minecraft/data/models/model/ModelTemplate;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/ResourceLocation; a
	pressurePlate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; e
	sign (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; f
	slab (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; g
	stairs (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; h
	trapdoor (Lnet/minecraft/world/level/block/Block;)V k
	wall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; b
net/minecraft/data/models/BlockModelGenerators$BlockStateGeneratorSupplier jw$c
net/minecraft/data/models/BlockModelGenerators$TintState jw$d
	$VALUES c
	NOT_TINTED b
	TINTED a
	$values ()[Lnet/minecraft/data/models/BlockModelGenerators$TintState; c
	getCross ()Lnet/minecraft/data/models/model/ModelTemplate; a
	getCrossPot ()Lnet/minecraft/data/models/model/ModelTemplate; b
net/minecraft/data/models/BlockModelGenerators$WoodProvider jw$e
	logMapping b
	log (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; b
	logWithHorizontal (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; c
	wood (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; a
net/minecraft/data/models/ItemModelGenerators jx
	output a
	generateClockItem (Lnet/minecraft/world/item/Item;)V b
	generateCompassItem (Lnet/minecraft/world/item/Item;)V a
	generateFlatItem (Lnet/minecraft/world/item/Item;Ljava/lang/String;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	generateFlatItem (Lnet/minecraft/world/item/Item;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	generateFlatItem (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	run ()V a
net/minecraft/data/models/ModelProvider jy
	LOGGER c
	blockStatePathProvider d
	modelPathProvider e
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)V a
	saveCollection (Lnet/minecraft/data/CachedOutput;Ljava/util/Map;Ljava/util/function/Function;)V a
net/minecraft/data/models/blockstates/BlockStateGenerator jz
	getBlock ()Lnet/minecraft/world/level/block/Block; a
net/minecraft/data/models/blockstates/Condition ka
	and ([Lnet/minecraft/data/models/blockstates/Condition;)Lnet/minecraft/data/models/blockstates/Condition; a
	condition ()Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	or ([Lnet/minecraft/data/models/blockstates/Condition;)Lnet/minecraft/data/models/blockstates/Condition; b
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/Condition$CompositeCondition ka$a
	operation a
	subconditions b
	get ()Lcom/google/gson/JsonElement; b
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/Condition$Operation ka$b
	$VALUES d
	AND a
	OR b
	id c
	$values ()[Lnet/minecraft/data/models/blockstates/Condition$Operation; a
net/minecraft/data/models/blockstates/Condition$TerminalCondition ka$c
	terms a
	get ()Lcom/google/gson/JsonElement; b
	getTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljava/lang/String; c
	joinValues (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/stream/Stream;)Ljava/lang/String; a
	negatedTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; b
	negatedTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; b
	putValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)V a
	term (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	term (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiPartGenerator kb
	block a
	parts b
	get ()Lcom/google/gson/JsonElement; b
	getBlock ()Lnet/minecraft/world/level/block/Block; a
	multiPart (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Ljava/util/List;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;[Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
net/minecraft/data/models/blockstates/MultiPartGenerator$ConditionalEntry kb$a
	condition a
	decorate (Lcom/google/gson/JsonObject;)V a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiPartGenerator$Entry kb$b
	variants a
	decorate (Lcom/google/gson/JsonObject;)V a
	get ()Lcom/google/gson/JsonElement; a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiVariantGenerator kc
	baseVariants b
	block a
	declaredPropertySets d
	seenProperties c
	get ()Lcom/google/gson/JsonElement; b
	getBlock ()Lnet/minecraft/world/level/block/Block; a
	mergeVariants (Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	multiVariant (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	multiVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	multiVariant (Lnet/minecraft/world/level/block/Block;[Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	with (Lnet/minecraft/data/models/blockstates/PropertyDispatch;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
net/minecraft/data/models/blockstates/PropertyDispatch kd
	values a
	getDefinedProperties ()Ljava/util/List; b
	getEntries ()Ljava/util/Map; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
	property (Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
	putValue (Lnet/minecraft/data/models/blockstates/Selector;Ljava/util/List;)V a
	verifyComplete ()V c
net/minecraft/data/models/blockstates/PropertyDispatch$C1 kd$a
	property1 a
	generate (Ljava/util/function/Function;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Ljava/util/function/Function;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
	select (Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
net/minecraft/data/models/blockstates/PropertyDispatch$C2 kd$b
	property1 a
	property2 b
	generate (Ljava/util/function/BiFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Ljava/util/function/BiFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
net/minecraft/data/models/blockstates/PropertyDispatch$C3 kd$c
	property1 a
	property2 b
	property3 c
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$TriFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$TriFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
net/minecraft/data/models/blockstates/PropertyDispatch$C4 kd$d
	property1 a
	property2 b
	property3 c
	property4 d
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
net/minecraft/data/models/blockstates/PropertyDispatch$C5 kd$e
	property1 a
	property2 b
	property3 c
	property4 d
	property5 e
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
net/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction kd$f
net/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction kd$g
net/minecraft/data/models/blockstates/PropertyDispatch$TriFunction kd$h
net/minecraft/data/models/blockstates/Selector ke
	COMPARE_BY_NAME b
	EMPTY a
	values c
	empty ()Lnet/minecraft/data/models/blockstates/Selector; a
	extend (Lnet/minecraft/data/models/blockstates/Selector;)Lnet/minecraft/data/models/blockstates/Selector; a
	extend (Lnet/minecraft/world/level/block/state/properties/Property$Value;)Lnet/minecraft/data/models/blockstates/Selector; a
	getKey ()Ljava/lang/String; b
	of ([Lnet/minecraft/world/level/block/state/properties/Property$Value;)Lnet/minecraft/data/models/blockstates/Selector; a
net/minecraft/data/models/blockstates/Variant kf
	values a
	convertList (Ljava/util/List;)Lcom/google/gson/JsonElement; a
	get ()Lcom/google/gson/JsonElement; b
	merge (Lnet/minecraft/data/models/blockstates/Variant;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/Variant; a
	variant ()Lnet/minecraft/data/models/blockstates/Variant; a
	with (Lnet/minecraft/data/models/blockstates/VariantProperty;Ljava/lang/Object;)Lnet/minecraft/data/models/blockstates/Variant; a
net/minecraft/data/models/blockstates/VariantProperties kg
	MODEL c
	UV_LOCK d
	WEIGHT e
	X_ROT a
	Y_ROT b
net/minecraft/data/models/blockstates/VariantProperties$Rotation kg$a
	$VALUES f
	R0 a
	R180 c
	R270 d
	R90 b
	value e
	$values ()[Lnet/minecraft/data/models/blockstates/VariantProperties$Rotation; a
net/minecraft/data/models/blockstates/VariantProperty kh
	key a
	serializer b
	withValue (Ljava/lang/Object;)Lnet/minecraft/data/models/blockstates/VariantProperty$Value; a
net/minecraft/data/models/blockstates/VariantProperty$Value kh$a
	value b
	addToVariant (Lcom/google/gson/JsonObject;)V a
	getKey ()Lnet/minecraft/data/models/blockstates/VariantProperty; a
net/minecraft/data/models/model/DelegatedModel kj
	parent a
	get ()Lcom/google/gson/JsonElement; a
net/minecraft/data/models/model/ModelLocationUtils kk
	decorateBlockModelLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	decorateItemModelLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; b
	getModelLocation (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/item/Item;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/data/models/model/ModelTemplate kl
	model a
	requiredSlots b
	suffix c
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	create (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	createMap (Lnet/minecraft/data/models/model/TextureMapping;)Ljava/util/Map; a
	createWithOverride (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; b
	createWithSuffix (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/data/models/model/ModelTemplates km
	ANVIL at
	ATTACHED_STEM av
	AZALEA aU
	BANNER_INVENTORY bb
	BED_INVENTORY ba
	BUTTON n
	BUTTON_INVENTORY p
	BUTTON_PRESSED o
	CAMPFIRE aD
	CANDLE bd
	CANDLE_CAKE bh
	CARPET ah
	CAULDRON_FULL aT
	CAULDRON_LEVEL1 aR
	CAULDRON_LEVEL2 aS
	CHORUS_FLOWER al
	COMMAND_BLOCK as
	CORAL_FAN ai
	CORAL_WALL_FAN aj
	CROP aw
	CROSS Z
	CUBE a
	CUBE_ALL c
	CUBE_BOTTOM_TOP j
	CUBE_COLUMN f
	CUBE_COLUMN_HORIZONTAL g
	CUBE_COLUMN_MIRRORED h
	CUBE_DIRECTIONAL b
	CUBE_MIRRORED_ALL d
	CUBE_NORTH_WEST_MIRRORED_ALL e
	CUBE_ORIENTABLE k
	CUBE_ORIENTABLE_TOP_BOTTOM l
	CUBE_ORIENTABLE_VERTICAL m
	CUBE_TOP i
	DAYLIGHT_DETECTOR am
	DOOR_BOTTOM_LEFT q
	DOOR_BOTTOM_LEFT_OPEN r
	DOOR_BOTTOM_RIGHT s
	DOOR_BOTTOM_RIGHT_OPEN t
	DOOR_TOP_LEFT u
	DOOR_TOP_LEFT_OPEN v
	DOOR_TOP_RIGHT w
	DOOR_TOP_RIGHT_OPEN x
	FARMLAND ax
	FENCE_GATE_CLOSED F
	FENCE_GATE_OPEN G
	FENCE_GATE_WALL_CLOSED H
	FENCE_GATE_WALL_OPEN I
	FENCE_INVENTORY A
	FENCE_POST y
	FENCE_SIDE z
	FIRE_FLOOR ay
	FIRE_SIDE az
	FIRE_SIDE_ALT aA
	FIRE_UP aB
	FIRE_UP_ALT aC
	FLAT_HANDHELD_ITEM aX
	FLAT_HANDHELD_ROD_ITEM aY
	FLAT_ITEM aW
	FLOWER_POT_CROSS ab
	FOUR_CANDLES bg
	FOUR_TURTLE_EGGS aP
	GLAZED_TERRACOTTA ak
	HANGING_LANTERN aF
	LANTERN aE
	LEAVES O
	ORIENTABLE_TRAPDOOR_BOTTOM W
	ORIENTABLE_TRAPDOOR_OPEN X
	ORIENTABLE_TRAPDOOR_TOP V
	PARTICLE_ONLY L
	PISTON aI
	PISTON_HEAD aJ
	PISTON_HEAD_SHORT aK
	POINTED_DRIPSTONE Y
	POTTED_AZALEA aV
	PRESSURE_PLATE_DOWN K
	PRESSURE_PLATE_UP J
	RAIL_CURVED ae
	RAIL_FLAT ad
	RAIL_RAISED_NE af
	RAIL_RAISED_SW ag
	SCULK_SHRIEKER bi
	SEAGRASS aL
	SHULKER_BOX_INVENTORY aZ
	SINGLE_FACE aQ
	SKULL_INVENTORY bc
	SLAB_BOTTOM M
	SLAB_TOP N
	STAINED_GLASS_PANE_NOSIDE an
	STAINED_GLASS_PANE_NOSIDE_ALT ao
	STAINED_GLASS_PANE_POST ap
	STAINED_GLASS_PANE_SIDE aq
	STAINED_GLASS_PANE_SIDE_ALT ar
	STAIRS_INNER Q
	STAIRS_OUTER R
	STAIRS_STRAIGHT P
	STEMS au
	THREE_CANDLES bf
	THREE_TURTLE_EGGS aO
	TINTED_CROSS aa
	TINTED_FLOWER_POT_CROSS ac
	TORCH aG
	TRAPDOOR_BOTTOM T
	TRAPDOOR_OPEN U
	TRAPDOOR_TOP S
	TURTLE_EGG aM
	TWO_CANDLES be
	TWO_TURTLE_EGGS aN
	WALL_INVENTORY E
	WALL_LOW_SIDE C
	WALL_POST B
	WALL_TALL_SIDE D
	WALL_TORCH aH
	create (Ljava/lang/String;Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	create (Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	create ([Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	createItem (Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; b
net/minecraft/data/models/model/TextureMapping kn
	forcedSlots b
	slots a
	attachedStem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; a
	campfire (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; A
	candleCake (Lnet/minecraft/world/level/block/Block;Z)Lnet/minecraft/data/models/model/TextureMapping; a
	cauldron (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; j
	column (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	column (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; j
	columnWithWall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; o
	commandBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; v
	copyAndUpdate (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; c
	copyForced (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureMapping; b
	copySlot (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureMapping; a
	craftingTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; c
	crop (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; g
	cross (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; c
	cross (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; c
	cube (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	cube (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; a
	cubeBottomTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; m
	cubeBottomTopWithWall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; n
	cubeTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; k
	defaultTexture (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	defaultTexture (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; b
	door (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	door (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; p
	fan (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; i
	fire0 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; r
	fire1 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; s
	fletchingTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; d
	get (Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/resources/ResourceLocation; a
	getBlockTexture (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/ResourceLocation; C
	getBlockTexture (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getForced ()Ljava/util/stream/Stream; a
	getItemTexture (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/ResourceLocation; c
	getItemTexture (Lnet/minecraft/world/item/Item;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	lantern (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; t
	layer0 (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; k
	layer0 (Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/models/model/TextureMapping; b
	layer0 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; B
	logColumn (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; l
	orientableCube (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; w
	orientableCubeOnlyTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; x
	orientableCubeSameEnds (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; y
	pane (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; b
	particle (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; h
	particle (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; q
	particleFromItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/models/model/TextureMapping; a
	pattern (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; h
	plant (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; d
	plant (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; d
	put (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	putForced (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	rail (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; e
	rail (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; e
	sculkShrieker (Z)Lnet/minecraft/data/models/model/TextureMapping; a
	singleSlot (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; d
	stem (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; g
	top (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; z
	torch (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; i
	torch (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; u
	wool (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; f
	wool (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; f
net/minecraft/data/models/model/TextureSlot ko
	ALL a
	BACK h
	BOTTOM e
	CANDLE J
	CONTENT L
	CROP A
	CROSS p
	DIRT B
	DOWN o
	EAST l
	EDGE w
	END d
	FAN x
	FIRE C
	FRONT g
	INNER_TOP M
	INSIDE K
	LANTERN D
	LAYER0 H
	LIT_LOG I
	NORTH j
	PANE v
	PARTICLE c
	PATTERN u
	PLANT q
	PLATFORM E
	RAIL s
	SIDE i
	SOUTH k
	STEM y
	TEXTURE b
	TOP f
	TORCH G
	UNSTICKY F
	UP n
	UPPER_STEM z
	WALL r
	WEST m
	WOOL t
	id N
	parent O
	create (Ljava/lang/String;)Lnet/minecraft/data/models/model/TextureSlot; a
	create (Ljava/lang/String;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureSlot; a
	getId ()Ljava/lang/String; a
	getParent ()Lnet/minecraft/data/models/model/TextureSlot; b
net/minecraft/data/models/model/TexturedModel kp
	ANVIL m
	CARPET i
	COLUMN c
	COLUMN_ALT r
	COLUMN_HORIZONTAL d
	COLUMN_HORIZONTAL_ALT s
	COLUMN_WITH_WALL u
	CORAL_FAN k
	CUBE a
	CUBE_MIRRORED b
	CUBE_TOP f
	CUBE_TOP_BOTTOM e
	GLAZED_TERRACOTTA j
	HANGING_LANTERN p
	LANTERN o
	LEAVES n
	ORIENTABLE h
	ORIENTABLE_ONLY_TOP g
	PARTICLE_ONLY l
	SEAGRASS q
	TOP_BOTTOM_WITH_WALL t
	mapping v
	template w
	create (Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	createAllSame (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TexturedModel; a
	createDefault (Ljava/util/function/Function;Lnet/minecraft/data/models/model/ModelTemplate;)Lnet/minecraft/data/models/model/TexturedModel$Provider; a
	createWithSuffix (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	getMapping ()Lnet/minecraft/data/models/model/TextureMapping; b
	getTemplate ()Lnet/minecraft/data/models/model/ModelTemplate; a
	updateTextures (Ljava/util/function/Consumer;)Lnet/minecraft/data/models/model/TexturedModel; a
net/minecraft/data/models/model/TexturedModel$Provider kp$a
net/minecraft/data/recipes/FinishedRecipe kt
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipe ()Lcom/google/gson/JsonObject; a
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/RecipeBuilder ku
	ROOT_RECIPE_ADVANCEMENT a
	getDefaultRecipeId (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/resources/ResourceLocation; a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	save (Ljava/util/function/Consumer;)V a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/RecipeBuilder; a
net/minecraft/data/recipes/RecipeProvider kv
	COAL_SMELTABLES d
	COPPER_SMELTABLES f
	DIAMOND_SMELTABLES h
	EMERALD_SMELTABLES k
	GOLD_SMELTABLES g
	IRON_SMELTABLES e
	LAPIS_SMELTABLES i
	LOGGER c
	REDSTONE_SMELTABLES j
	advancementPathProvider m
	recipePathProvider l
	shapeBuilders n
	banner (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V p
	bedFromPlanksAndWool (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V n
	bedFromWhiteBedAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V o
	buildCraftingRecipes (Ljava/util/function/Consumer;)V a
	buttonBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; e
	candle (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V a
	carpet (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V l
	chestBoat (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V h
	chiseled (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V e
	chiseledBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; d
	coloredCarpetFromWhiteCarpetAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V m
	coloredTerracottaFromTerracottaAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V t
	coloredWoolFromWhiteWoolAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V k
	concretePowder (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V u
	cookRecipes (Ljava/util/function/Consumer;Ljava/lang/String;Lnet/minecraft/world/item/crafting/SimpleCookingSerializer;I)V a
	cut (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V d
	cutBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; c
	doorBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; f
	fenceBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; g
	fenceGateBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; h
	generateRecipes (Ljava/util/function/Consumer;Lnet/minecraft/data/BlockFamily;)V a
	getBaseBlock (Lnet/minecraft/data/BlockFamily;Lnet/minecraft/data/BlockFamily$Variant;)Lnet/minecraft/world/level/block/Block; a
	getBlastingRecipeName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; f
	getConversionRecipeName (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; a
	getHasName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; b
	getItemName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; c
	getName ()Ljava/lang/String; a
	getSimpleRecipeName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; d
	getSmeltingRecipeName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; e
	has (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	has (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	has (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	insideOf (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance; a
	inventoryTrigger ([Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	netheriteSmithing (Ljava/util/function/Consumer;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;)V a
	nineBlockStorageRecipes (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V x
	nineBlockStorageRecipes (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V a
	nineBlockStorageRecipesRecipesWithCustomUnpacking (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;Ljava/lang/String;)V b
	nineBlockStorageRecipesWithCustomPacking (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;Ljava/lang/String;)V a
	oneToOneConversionRecipe (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;)V a
	oneToOneConversionRecipe (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;I)V a
	oreBlasting (Ljava/util/function/Consumer;Ljava/util/List;Lnet/minecraft/world/level/ItemLike;FILjava/lang/String;)V b
	oreCooking (Ljava/util/function/Consumer;Lnet/minecraft/world/item/crafting/SimpleCookingSerializer;Ljava/util/List;Lnet/minecraft/world/level/ItemLike;FILjava/lang/String;Ljava/lang/String;)V a
	oreSmelting (Ljava/util/function/Consumer;Ljava/util/List;Lnet/minecraft/world/level/ItemLike;FILjava/lang/String;)V a
	planksFromLog (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/tags/TagKey;)V a
	planksFromLogs (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/tags/TagKey;)V b
	polished (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V c
	polishedBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; b
	pressurePlate (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V i
	pressurePlateBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; i
	run (Lnet/minecraft/data/CachedOutput;)V a
	saveAdvancement (Lnet/minecraft/data/CachedOutput;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V b
	saveRecipe (Lnet/minecraft/data/CachedOutput;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V a
	signBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; m
	simpleCookingRecipe (Ljava/util/function/Consumer;Ljava/lang/String;Lnet/minecraft/world/item/crafting/SimpleCookingSerializer;ILnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;F)V a
	slab (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V j
	slabBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; j
	smeltingResultFromBase (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V w
	stainedGlassFromGlassAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V q
	stainedGlassPaneFromGlassPaneAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V s
	stainedGlassPaneFromStainedGlass (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V r
	stairBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; k
	stonecutterResultFromBase (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V v
	stonecutterResultFromBase (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;I)V a
	trapdoorBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; l
	wall (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V b
	wallBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	waxRecipes (Ljava/util/function/Consumer;)V b
	woodFromLogs (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V f
	woodenBoat (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V g
net/minecraft/data/recipes/ShapedRecipeBuilder kw
	advancement f
	count c
	group g
	key e
	result b
	rows d
	define (Ljava/lang/Character;Lnet/minecraft/tags/TagKey;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	define (Ljava/lang/Character;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	define (Ljava/lang/Character;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; c
	pattern (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; b
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	shaped (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; b
	shaped (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; b
net/minecraft/data/recipes/ShapedRecipeBuilder$Result kw$a
	advancement g
	advancementId h
	count c
	group d
	id a
	key f
	pattern e
	result b
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/ShapelessRecipeBuilder kx
	advancement e
	count c
	group f
	ingredients d
	result b
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
	requires (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/item/crafting/Ingredient;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; c
	requires (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	shapeless (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
	shapeless (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
net/minecraft/data/recipes/ShapelessRecipeBuilder$Result kx$a
	advancement f
	advancementId g
	count c
	group d
	id a
	ingredients e
	result b
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/SimpleCookingRecipeBuilder ky
	advancement f
	cookingTime e
	experience d
	group g
	ingredient c
	result b
	serializer h
	blasting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; b
	campfireCooking (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; a
	cooking (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FILnet/minecraft/world/item/crafting/SimpleCookingSerializer;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; a
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; b
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	smelting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; c
	smoking (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; d
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; b
net/minecraft/data/recipes/SimpleCookingRecipeBuilder$Result ky$a
	advancement g
	advancementId h
	cookingTime f
	experience e
	group b
	id a
	ingredient c
	result d
	serializer i
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/SingleItemRecipeBuilder kz
	advancement e
	count d
	group f
	ingredient c
	result b
	type g
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; b
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	stonecutting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; a
	stonecutting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; b
net/minecraft/data/recipes/SingleItemRecipeBuilder$Result kz$a
	advancement f
	advancementId g
	count e
	group b
	id a
	ingredient c
	result d
	type h
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/SpecialRecipeBuilder la
	serializer a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	special (Lnet/minecraft/world/item/crafting/SimpleRecipeSerializer;)Lnet/minecraft/data/recipes/SpecialRecipeBuilder; a
net/minecraft/data/recipes/UpgradeRecipeBuilder lb
	addition b
	advancement d
	base a
	result c
	type e
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	smithing (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/recipes/UpgradeRecipeBuilder; a
	unlocks (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/UpgradeRecipeBuilder; a
net/minecraft/data/recipes/UpgradeRecipeBuilder$Result lb$a
	addition c
	advancement e
	advancementId f
	base b
	id a
	result d
	type g
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/structures/NbtToSnbt ld
	LOGGER c
	generator d
	convertStructure (Lnet/minecraft/data/CachedOutput;Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	getName (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)V a
	writeSnbt (Lnet/minecraft/data/CachedOutput;Ljava/nio/file/Path;Ljava/lang/String;)V a
net/minecraft/data/structures/SnbtToNbt le
	DUMP_SNBT_TO c
	LOGGER d
	filters f
	generator e
	addFilter (Lnet/minecraft/data/structures/SnbtToNbt$Filter;)Lnet/minecraft/data/structures/SnbtToNbt; a
	applyFilters (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	getName ()Ljava/lang/String; a
	getName (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; a
	readStructure (Ljava/nio/file/Path;Ljava/lang/String;)Lnet/minecraft/data/structures/SnbtToNbt$TaskResult; a
	run (Lnet/minecraft/data/CachedOutput;)V a
	storeStructureIfChanged (Lnet/minecraft/data/CachedOutput;Lnet/minecraft/data/structures/SnbtToNbt$TaskResult;Ljava/nio/file/Path;)V a
net/minecraft/data/structures/SnbtToNbt$Filter le$a
net/minecraft/data/structures/SnbtToNbt$StructureConversionException le$b
net/minecraft/data/structures/SnbtToNbt$TaskResult le$c
	hash d
	name a
	payload b
	snbtPayload c
	hash ()Lcom/google/common/hash/HashCode; d
	name ()Ljava/lang/String; a
	payload ()[B b
	snbtPayload ()Ljava/lang/String; c
net/minecraft/data/structures/StructureUpdater lf
	LOGGER a
	patchVersion (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	update (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	updateStructure (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/data/tags/BannerPatternTagsProvider lh
	addTags ()V b
net/minecraft/data/tags/BiomeTagsProvider li
	addTags ()V b
net/minecraft/data/tags/BlockTagsProvider lj
	addTags ()V b
net/minecraft/data/tags/CatVariantTagsProvider lk
	addTags ()V b
net/minecraft/data/tags/EntityTypeTagsProvider ll
	addTags ()V b
net/minecraft/data/tags/FlatLevelGeneratorPresetTagsProvider lm
	addTags ()V b
net/minecraft/data/tags/FluidTagsProvider ln
	addTags ()V b
net/minecraft/data/tags/GameEventTagsProvider lo
	VIBRATIONS_EXCEPT_FLAP c
	addTags ()V b
net/minecraft/data/tags/InstrumentTagsProvider lp
	addTags ()V b
net/minecraft/data/tags/ItemTagsProvider lq
	blockTags c
	addTags ()V b
	copy (Lnet/minecraft/tags/TagKey;Lnet/minecraft/tags/TagKey;)V a
net/minecraft/data/tags/PaintingVariantTagsProvider lr
	addTags ()V b
net/minecraft/data/tags/PoiTypeTagsProvider ls
	addTags ()V b
net/minecraft/data/tags/StructureTagsProvider lt
	addTags ()V b
net/minecraft/data/tags/TagsProvider lu
	LOGGER c
	builders f
	pathProvider d
	registry e
	addTags ()V b
	getName ()Ljava/lang/String; a
	getOrCreateRawBuilder (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/tags/TagBuilder; b
	run (Lnet/minecraft/data/CachedOutput;)V a
	tag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
net/minecraft/data/tags/TagsProvider$TagAppender lu$a
	builder a
	registry b
	add (Ljava/lang/Object;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	add ([Ljava/lang/Object;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	add ([Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	addOptional (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	addOptionalTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; b
	addTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
net/minecraft/data/tags/WorldPresetTagsProvider lv
	addTags ()V b
net/minecraft/data/worldgen/AncientCityStructurePieces lx
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/AncientCityStructurePools ly
	bootstrap ()V a
net/minecraft/data/worldgen/BastionBridgePools lz
	bootstrap ()V a
net/minecraft/data/worldgen/BastionHoglinStablePools ma
	bootstrap ()V a
net/minecraft/data/worldgen/BastionHousingUnitsPools mb
	bootstrap ()V a
net/minecraft/data/worldgen/BastionPieces mc
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/BastionSharedPools md
	bootstrap ()V a
net/minecraft/data/worldgen/BastionTreasureRoomPools me
	bootstrap ()V a
net/minecraft/data/worldgen/BiomeDefaultFeatures mf
	addAncientDebris (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V au
	addBadlandExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ad
	addBadlandGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V M
	addBadlandsTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V G
	addBambooVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V r
	addBirchTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V v
	addBlueIce (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ar
	addColdOceanExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V al
	addCommonBerryBushes (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V p
	addDefaultCarversAndLakes (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V a
	addDefaultCrystalFormations (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V av
	addDefaultExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ac
	addDefaultFlowers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V V
	addDefaultGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V Y
	addDefaultMonsterRoom (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V b
	addDefaultMushrooms (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ab
	addDefaultOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V f
	addDefaultOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;Z)V a
	addDefaultSeagrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V am
	addDefaultSoftDisks (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V j
	addDefaultSprings (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ao
	addDefaultUndergroundVariety (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V c
	addDesertExtraDecoration (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V aj
	addDesertExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ah
	addDesertVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V T
	addDripstone (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V d
	addExtraEmeralds (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V h
	addExtraGold (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V g
	addFerns (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V n
	addForestFlowers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V N
	addForestGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V O
	addFossilDecoration (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ak
	addFrozenSprings (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ap
	addGiantTaigaVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V U
	addGroveTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V t
	addIcebergs (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V aq
	addInfestedStone (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V i
	addJungleGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V I
	addJungleMelons (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ae
	addJungleTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V E
	addJungleVines (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ag
	addLightBambooVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V q
	addLukeWarmKelp (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V an
	addLushCavesSpecialOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V B
	addLushCavesVegetationFeatures (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V A
	addMangroveSwampDisks (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V l
	addMangroveSwampVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V Q
	addMeadowVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V W
	addMossyStoneBlock (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V m
	addMountainForestTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V D
	addMountainTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V C
	addMushroomFieldVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V R
	addNetherDefaultOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V at
	addOtherBirchTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V w
	addPlainGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V aa
	addPlainVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V S
	addRareBerryBushes (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V o
	addSavannaExtraGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V L
	addSavannaGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V J
	addSavannaTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V y
	addSculk (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V e
	addShatteredSavannaGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V K
	addShatteredSavannaTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V z
	addSnowyTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V H
	addSparseJungleMelons (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V af
	addSparseJungleTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V F
	addSurfaceFreezing (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V as
	addSwampClayDisk (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V k
	addSwampExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ai
	addSwampVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V P
	addTaigaGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V Z
	addTaigaTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V s
	addTallBirchTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V x
	addWarmFlowers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V X
	addWaterTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V u
	baseJungleSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V i
	caveSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V b
	commonSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V c
	desertSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V f
	dripstoneCavesSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V g
	endSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V j
	farmAnimals (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V a
	monsters (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;IIIZ)V a
	mooshroomSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V h
	oceanSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;III)V a
	plainsSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V d
	snowySpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V e
	warmOceanSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;II)V a
net/minecraft/data/worldgen/Carvers mg
	CANYON c
	CAVE a
	CAVE_EXTRA_UNDERGROUND b
	NETHER_CAVE d
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver;)Lnet/minecraft/core/Holder; a
net/minecraft/data/worldgen/DesertVillagePools mh
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/DimensionTypes mi
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/core/Holder; a
net/minecraft/data/worldgen/NoiseData mj
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/core/Holder; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;ID[D)Lnet/minecraft/core/Holder; a
	registerBiomeNoises (Lnet/minecraft/core/Registry;ILnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)V a
net/minecraft/data/worldgen/PillagerOutpostPools mk
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/PlainVillagePools ml
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/Pools mm
	BUILTIN_EMPTY b
	EMPTY a
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/core/Holder; a
	forceBootstrap ()V a
	register (Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool;)Lnet/minecraft/core/Holder; a
net/minecraft/data/worldgen/ProcessorLists mn
	ADD_GILDED_BLACKSTONE K
	ANCIENT_CITY_GENERIC_DEGRADATION I
	ANCIENT_CITY_START_DEGRADATION H
	ANCIENT_CITY_WALLS_DEGRADATION J
	BASTION_GENERIC_DEGRADATION x
	BOTTOM_RAMPART s
	BRIDGE A
	EMPTY a
	ENTRANCE_REPLACEMENT z
	FARM_DESERT q
	FARM_PLAINS m
	FARM_SAVANNA n
	FARM_SNOWY o
	FARM_TAIGA p
	FOSSIL_COAL F
	FOSSIL_DIAMONDS G
	FOSSIL_ROT E
	HIGH_RAMPART D
	HIGH_WALL C
	HOUSING u
	MOSSIFY_10_PERCENT g
	MOSSIFY_20_PERCENT h
	MOSSIFY_70_PERCENT i
	OUTPOST_ROT r
	RAMPART_DEGRADATION y
	REMOVE_GILDED_BLACKSTONE L
	ROOF B
	SIDE_WALL_DEGRADATION v
	STABLE_DEGRADATION w
	STREET_PLAINS j
	STREET_SAVANNA k
	STREET_SNOWY_OR_TAIGA l
	TREASURE_ROOMS t
	ZOMBIE_DESERT f
	ZOMBIE_PLAINS b
	ZOMBIE_SAVANNA c
	ZOMBIE_SNOWY d
	ZOMBIE_TAIGA e
	register (Ljava/lang/String;Lcom/google/common/collect/ImmutableList;)Lnet/minecraft/core/Holder; a
net/minecraft/data/worldgen/SavannaVillagePools mo
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/SnowyVillagePools mp
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/StructureSets mq
	ANCIENT_CITIES g
	BURIED_TREASURES j
	DESERT_PYRAMIDS b
	END_CITIES q
	IGLOOS c
	JUNGLE_TEMPLES d
	MINESHAFTS k
	NETHER_COMPLEXES o
	NETHER_FOSSILS p
	OCEAN_MONUMENTS h
	OCEAN_RUINS n
	PILLAGER_OUTPOSTS f
	RUINED_PORTALS l
	SHIPWRECKS m
	STRONGHOLDS r
	SWAMP_HUTS e
	VILLAGES a
	WOODLAND_MANSIONS i
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/core/Holder; a
	register (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacement;)Lnet/minecraft/core/Holder; a
	register (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/levelgen/structure/StructureSet;)Lnet/minecraft/core/Holder; a
net/minecraft/data/worldgen/Structures mr
	ANCIENT_CITY F
	BASTION_REMNANT s
	BURIED_TREASURE r
	DESERT_PYRAMID f
	END_CITY q
	FORTRESS o
	IGLOO g
	JUNGLE_TEMPLE e
	MINESHAFT b
	MINESHAFT_MESA c
	NETHER_FOSSIL p
	OCEAN_MONUMENT l
	OCEAN_RUIN_COLD m
	OCEAN_RUIN_WARM n
	PILLAGER_OUTPOST a
	RUINED_PORTAL_DESERT z
	RUINED_PORTAL_JUNGLE A
	RUINED_PORTAL_MOUNTAIN C
	RUINED_PORTAL_NETHER E
	RUINED_PORTAL_OCEAN D
	RUINED_PORTAL_STANDARD y
	RUINED_PORTAL_SWAMP B
	SHIPWRECK h
	SHIPWRECK_BEACHED i
	STRONGHOLD k
	SWAMP_HUT j
	VILLAGE_DESERT u
	VILLAGE_PLAINS t
	VILLAGE_SAVANNA v
	VILLAGE_SNOWY w
	VILLAGE_TAIGA x
	WOODLAND_MANSION d
	biomes (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet; a
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/core/Holder; a
	register (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/core/Holder; a
	structure (Lnet/minecraft/tags/TagKey;Ljava/util/Map;Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment;)Lnet/minecraft/world/level/levelgen/structure/Structure$StructureSettings; a
	structure (Lnet/minecraft/tags/TagKey;Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment;)Lnet/minecraft/world/level/levelgen/structure/Structure$StructureSettings; a
	structure (Lnet/minecraft/tags/TagKey;Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment;)Lnet/minecraft/world/level/levelgen/structure/Structure$StructureSettings; a
net/minecraft/data/worldgen/SurfaceRuleData ms
	AIR a
	BASALT C
	BEDROCK b
	BLACKSTONE D
	CALCITE o
	COARSE_DIRT l
	CRIMSON_NYLIUM H
	DEEPSLATE i
	DIRT j
	ENDSTONE I
	GRASS_BLOCK n
	GRAVEL p
	ICE w
	LAVA y
	MUD u
	MYCELIUM m
	NETHERRACK z
	NETHER_WART_BLOCK G
	ORANGE_TERRACOTTA d
	PACKED_ICE s
	PODZOL k
	POWDER_SNOW v
	RED_SAND f
	RED_SANDSTONE g
	SAND q
	SANDSTONE r
	SNOW_BLOCK t
	SOUL_SAND A
	SOUL_SOIL B
	STONE h
	TERRACOTTA e
	WARPED_NYLIUM F
	WARPED_WART_BLOCK E
	WATER x
	WHITE_TERRACOTTA c
	air ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; d
	end ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; c
	makeStateRule (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	nether ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; b
	overworld ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	overworldLike (ZZZ)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	surfaceNoiseAbove (D)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
net/minecraft/data/worldgen/TaigaVillagePools mt
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/TerrainProvider mu
	AMPLIFIED_FACTOR g
	AMPLIFIED_JAGGEDNESS h
	AMPLIFIED_OFFSET f
	BEACH_CONTINENTALNESS d
	DEEP_OCEAN_CONTINENTALNESS a
	NO_TRANSFORM e
	OCEAN_CONTINENTALNESS b
	PLAINS_CONTINENTALNESS c
	buildErosionJaggednessSpline (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;FFFFLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	buildErosionOffsetSpline (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;FFFFFFZZLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	buildMountainRidgeSplineWithPoints (Lnet/minecraft/util/ToFloatFunction;FZLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	buildRidgeJaggednessSpline (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;FFLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	buildWeirdnessJaggednessSpline (Lnet/minecraft/util/ToFloatFunction;FLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	calculateMountainRidgeZeroContinentalnessPoint (F)F a
	calculateSlope (FFFF)F a
	getErosionFactor (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;FZLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	mountainContinentalness (FFF)F a
	overworldFactor (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Z)Lnet/minecraft/util/CubicSpline; a
	overworldJaggedness (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Z)Lnet/minecraft/util/CubicSpline; b
	overworldOffset (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Z)Lnet/minecraft/util/CubicSpline; a
	ridgeSpline (Lnet/minecraft/util/ToFloatFunction;FFFFFFLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
net/minecraft/data/worldgen/VillagePools mv
	bootstrap ()V a
net/minecraft/data/worldgen/biome/Biomes mw
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/core/Holder; a
net/minecraft/data/worldgen/biome/EndBiomes mx
	baseEndBiome (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)Lnet/minecraft/world/level/biome/Biome; a
	endBarrens ()Lnet/minecraft/world/level/biome/Biome; a
	endHighlands ()Lnet/minecraft/world/level/biome/Biome; d
	endMidlands ()Lnet/minecraft/world/level/biome/Biome; c
	smallEndIslands ()Lnet/minecraft/world/level/biome/Biome; e
	theEnd ()Lnet/minecraft/world/level/biome/Biome; b
net/minecraft/data/worldgen/biome/NetherBiomes my
	basaltDeltas ()Lnet/minecraft/world/level/biome/Biome; c
	crimsonForest ()Lnet/minecraft/world/level/biome/Biome; d
	netherWastes ()Lnet/minecraft/world/level/biome/Biome; a
	soulSandValley ()Lnet/minecraft/world/level/biome/Biome; b
	warpedForest ()Lnet/minecraft/world/level/biome/Biome; e
net/minecraft/data/worldgen/biome/OverworldBiomes mz
	NORMAL_MUSIC d
	NORMAL_WATER_COLOR a
	NORMAL_WATER_FOG_COLOR b
	OVERWORLD_FOG_COLOR c
	badlands (Z)Lnet/minecraft/world/level/biome/Biome; c
	bambooJungle ()Lnet/minecraft/world/level/biome/Biome; c
	baseJungle (FZZZLnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)Lnet/minecraft/world/level/biome/Biome; a
	baseOcean (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;IILnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)Lnet/minecraft/world/level/biome/Biome; a
	baseOceanGeneration ()Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; t
	beach (ZZ)Lnet/minecraft/world/level/biome/Biome; b
	biome (Lnet/minecraft/world/level/biome/Biome$Precipitation;FFIILnet/minecraft/world/level/biome/MobSpawnSettings$Builder;Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/Biome; a
	biome (Lnet/minecraft/world/level/biome/Biome$Precipitation;FFLnet/minecraft/world/level/biome/MobSpawnSettings$Builder;Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/Biome; a
	calculateSkyColor (F)I a
	coldOcean (Z)Lnet/minecraft/world/level/biome/Biome; d
	darkForest ()Lnet/minecraft/world/level/biome/Biome; g
	deepDark ()Lnet/minecraft/world/level/biome/Biome; s
	desert ()Lnet/minecraft/world/level/biome/Biome; d
	dripstoneCaves ()Lnet/minecraft/world/level/biome/Biome; r
	forest (ZZZ)Lnet/minecraft/world/level/biome/Biome; b
	frozenOcean (Z)Lnet/minecraft/world/level/biome/Biome; g
	frozenPeaks ()Lnet/minecraft/world/level/biome/Biome; l
	globalOverworldGeneration (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V a
	grove ()Lnet/minecraft/world/level/biome/Biome; p
	jaggedPeaks ()Lnet/minecraft/world/level/biome/Biome; m
	jungle ()Lnet/minecraft/world/level/biome/Biome; b
	lukeWarmOcean (Z)Lnet/minecraft/world/level/biome/Biome; f
	lushCaves ()Lnet/minecraft/world/level/biome/Biome; q
	mangroveSwamp ()Lnet/minecraft/world/level/biome/Biome; i
	meadow ()Lnet/minecraft/world/level/biome/Biome; k
	mushroomFields ()Lnet/minecraft/world/level/biome/Biome; e
	ocean (Z)Lnet/minecraft/world/level/biome/Biome; e
	oldGrowthTaiga (Z)Lnet/minecraft/world/level/biome/Biome; a
	plains (ZZZ)Lnet/minecraft/world/level/biome/Biome; a
	river (Z)Lnet/minecraft/world/level/biome/Biome; i
	savanna (ZZ)Lnet/minecraft/world/level/biome/Biome; a
	snowySlopes ()Lnet/minecraft/world/level/biome/Biome; o
	sparseJungle ()Lnet/minecraft/world/level/biome/Biome; a
	stonyPeaks ()Lnet/minecraft/world/level/biome/Biome; n
	swamp ()Lnet/minecraft/world/level/biome/Biome; h
	taiga (Z)Lnet/minecraft/world/level/biome/Biome; h
	theVoid ()Lnet/minecraft/world/level/biome/Biome; j
	warmOcean ()Lnet/minecraft/world/level/biome/Biome; f
	windsweptHills (Z)Lnet/minecraft/world/level/biome/Biome; b
net/minecraft/data/worldgen/features/AquaticFeatures nb
	KELP g
	SEAGRASS_MID c
	SEAGRASS_SHORT a
	SEAGRASS_SIMPLE f
	SEAGRASS_SLIGHTLY_LESS_SHORT b
	SEAGRASS_TALL d
	SEA_PICKLE e
	WARM_OCEAN_VEGETATION h
net/minecraft/data/worldgen/features/CaveFeatures nc
	AMETHYST_GEODE u
	CAVE_VINE j
	CAVE_VINES_BODY_PROVIDER B
	CAVE_VINES_HEAD_PROVIDER C
	CAVE_VINE_IN_MOSS k
	CLAY_POOL_WITH_DRIPLEAVES q
	CLAY_WITH_DRIPLEAVES p
	DRIPLEAF o
	DRIPSTONE_CLUSTER d
	FOSSIL_COAL b
	FOSSIL_COAL_STRUCTURES z
	FOSSIL_DIAMONDS c
	FOSSIL_STRUCTURES y
	GLOW_LICHEN h
	GLOW_LICHEN_BLOCK A
	LARGE_DRIPSTONE e
	LUSH_CAVES_CLAY r
	MONSTER_ROOM a
	MOSS_PATCH m
	MOSS_PATCH_BONEMEAL n
	MOSS_PATCH_CEILING s
	MOSS_VEGETATION l
	POINTED_DRIPSTONE f
	ROOTED_AZALEA_TREE i
	SCULK_PATCH_ANCIENT_CITY w
	SCULK_PATCH_DEEP_DARK v
	SCULK_VEIN x
	SCULK_VEIN_BLOCK D
	SPORE_BLOSSOM t
	UNDERWATER_MAGMA g
	makeDripleaf (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Holder; a
	makeSmallDripleaf ()Lnet/minecraft/core/Holder; a
net/minecraft/data/worldgen/features/EndFeatures nd
	CHORUS_PLANT d
	END_GATEWAY_DELAYED c
	END_GATEWAY_RETURN b
	END_ISLAND e
	END_SPIKE a
net/minecraft/data/worldgen/features/FeatureUtils ne
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/core/Holder; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/Feature;)Lnet/minecraft/core/Holder; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/core/Holder; a
	simplePatchConfiguration (Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; a
	simplePatchConfiguration (Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; a
	simplePatchConfiguration (Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Ljava/util/List;I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; a
	simplePatchPredicate (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	simpleRandomPatchConfiguration (ILnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; a
net/minecraft/data/worldgen/features/MiscOverworldFeatures nf
	BLUE_ICE f
	BONUS_CHEST m
	DESERT_WELL o
	DISK_CLAY h
	DISK_GRASS l
	DISK_GRAVEL i
	DISK_SAND j
	FOREST_ROCK c
	FREEZE_TOP_LAYER k
	ICEBERG_BLUE e
	ICEBERG_PACKED d
	ICE_PATCH b
	ICE_SPIKE a
	LAKE_LAVA g
	SPRING_LAVA_FROZEN q
	SPRING_LAVA_OVERWORLD p
	SPRING_WATER r
	VOID_START_PLATFORM n
net/minecraft/data/worldgen/features/NetherFeatures ng
	BASALT_BLOBS d
	BASALT_PILLAR s
	BLACKSTONE_BLOBS e
	CRIMSON_FOREST_VEGETATION h
	CRIMSON_FOREST_VEGETATION_BONEMEAL i
	CRIMSON_VEGETATION_PROVIDER g
	DELTA a
	GLOWSTONE_EXTRA f
	LARGE_BASALT_COLUMNS c
	NETHER_SPROUTS m
	NETHER_SPROUTS_BONEMEAL n
	PATCH_CRIMSON_ROOTS r
	PATCH_FIRE w
	PATCH_SOUL_FIRE x
	SMALL_BASALT_COLUMNS b
	SPRING_LAVA_NETHER t
	SPRING_NETHER_CLOSED u
	SPRING_NETHER_OPEN v
	TWISTING_VINES o
	TWISTING_VINES_BONEMEAL p
	WARPED_FOREST_VEGETATION_BONEMEAL l
	WARPED_FOREST_VEGETION k
	WARPED_VEGETATION_PROVIDER j
	WEEPING_VINES q
net/minecraft/data/worldgen/features/OreFeatures nh
	DEEPSLATE_ORE_REPLACEABLES c
	NATURAL_STONE a
	NETHERRACK d
	NETHER_ORE_REPLACEABLES e
	ORE_ANCIENT_DEBRIS_LARGE L
	ORE_ANCIENT_DEBRIS_SMALL M
	ORE_ANDESITE v
	ORE_BLACKSTONE q
	ORE_CLAY P
	ORE_COAL x
	ORE_COAL_BURIED y
	ORE_COAL_TARGET_LIST k
	ORE_COPPER_LARGE O
	ORE_COPPER_TARGET_LIST j
	ORE_COPPPER_SMALL N
	ORE_DIAMOND_BURIED G
	ORE_DIAMOND_LARGE F
	ORE_DIAMOND_SMALL E
	ORE_DIAMOND_TARGET_LIST h
	ORE_DIORITE u
	ORE_DIRT r
	ORE_EMERALD K
	ORE_GOLD B
	ORE_GOLD_BURIED C
	ORE_GOLD_TARGET_LIST g
	ORE_GRANITE t
	ORE_GRAVEL s
	ORE_GRAVEL_NETHER p
	ORE_INFESTED J
	ORE_IRON z
	ORE_IRON_SMALL A
	ORE_IRON_TARGET_LIST f
	ORE_LAPIS H
	ORE_LAPIS_BURIED I
	ORE_LAPIS_TARGET_LIST i
	ORE_MAGMA l
	ORE_NETHER_GOLD n
	ORE_QUARTZ o
	ORE_REDSTONE D
	ORE_SOUL_SAND m
	ORE_TUFF w
	STONE_ORE_REPLACEABLES b
net/minecraft/data/worldgen/features/PileFeatures ni
	PILE_HAY a
	PILE_ICE d
	PILE_MELON b
	PILE_PUMPKIN e
	PILE_SNOW c
net/minecraft/data/worldgen/features/TreeFeatures nj
	ACACIA j
	AZALEA_TREE w
	BEEHIVE N
	BEEHIVE_0002 J
	BEEHIVE_001 K
	BEEHIVE_002 L
	BEEHIVE_005 M
	BIRCH i
	BIRCH_BEES_0002 C
	BIRCH_BEES_002 D
	BIRCH_BEES_005 E
	CRIMSON_FUNGUS a
	CRIMSON_FUNGUS_PLANTED b
	DARK_OAK h
	FANCY_OAK n
	FANCY_OAK_BEES I
	FANCY_OAK_BEES_0002 F
	FANCY_OAK_BEES_002 G
	FANCY_OAK_BEES_005 H
	HUGE_BROWN_MUSHROOM e
	HUGE_RED_MUSHROOM f
	JUNGLE_BUSH v
	JUNGLE_TREE m
	JUNGLE_TREE_NO_VINE o
	MANGROVE x
	MEGA_JUNGLE_TREE p
	MEGA_PINE r
	MEGA_SPRUCE q
	OAK g
	OAK_BEES_0002 z
	OAK_BEES_002 A
	OAK_BEES_005 B
	PINE l
	SPRUCE k
	SUPER_BIRCH_BEES t
	SUPER_BIRCH_BEES_0002 s
	SWAMP_OAK u
	TALL_MANGROVE y
	WARPED_FUNGUS c
	WARPED_FUNGUS_PLANTED d
	createBirch ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; b
	createFancyOak ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; e
	createJungleTree ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; d
	createOak ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	createStraightBlobTree (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;IIII)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	createSuperBirch ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; c
net/minecraft/data/worldgen/features/VegetationFeatures nk
	BAMBOO_NO_PODZOL a
	BAMBOO_SOME_PODZOL b
	BAMBOO_VEGETATION O
	BIRCH_TALL F
	DARK_FOREST_VEGETATION z
	FLOWER_DEFAULT t
	FLOWER_FLOWER_FOREST u
	FLOWER_MEADOW x
	FLOWER_PLAIN w
	FLOWER_SWAMP v
	FOREST_FLOWERS y
	MANGROVE_VEGETATION Q
	MEADOW_TREES B
	MUSHROOM_ISLAND_VEGETATION P
	PATCH_BERRY_BUSH h
	PATCH_BROWN_MUSHROOM d
	PATCH_CACTUS r
	PATCH_DEAD_BUSH m
	PATCH_GRASS j
	PATCH_GRASS_JUNGLE k
	PATCH_LARGE_FERN q
	PATCH_MELON n
	PATCH_PUMPKIN g
	PATCH_RED_MUSHROOM e
	PATCH_SUGAR_CANE s
	PATCH_SUNFLOWER f
	PATCH_TAIGA_GRASS i
	PATCH_TALL_GRASS p
	PATCH_WATERLILY o
	SINGLE_PIECE_OF_GRASS l
	TREES_BIRCH_AND_OAK I
	TREES_FLOWER_FOREST A
	TREES_GROVE D
	TREES_JUNGLE N
	TREES_OLD_GROWTH_PINE_TAIGA M
	TREES_OLD_GROWTH_SPRUCE_TAIGA L
	TREES_PLAINS J
	TREES_SAVANNA E
	TREES_SPARSE_JUNGLE K
	TREES_TAIGA C
	TREES_WATER H
	TREES_WINDSWEPT_HILLS G
	VINES c
	grassPatch (Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; a
net/minecraft/data/worldgen/placement/AquaticPlacements nn
	KELP_COLD k
	KELP_WARM l
	SEAGRASS_COLD c
	SEAGRASS_DEEP g
	SEAGRASS_DEEP_COLD h
	SEAGRASS_DEEP_WARM f
	SEAGRASS_NORMAL b
	SEAGRASS_RIVER d
	SEAGRASS_SIMPLE i
	SEAGRASS_SWAMP e
	SEAGRASS_WARM a
	SEA_PICKLE j
	WARM_OCEAN_VEGETATION m
	seagrassPlacement (I)Ljava/util/List; a
net/minecraft/data/worldgen/placement/CavePlacements no
	AMETHYST_GEODE q
	CAVE_VINES k
	CLASSIC_VINES p
	DRIPSTONE_CLUSTER e
	FOSSIL_LOWER d
	FOSSIL_UPPER c
	GLOW_LICHEN i
	LARGE_DRIPSTONE f
	LUSH_CAVES_CEILING_VEGETATION n
	LUSH_CAVES_CLAY m
	LUSH_CAVES_VEGETATION l
	MONSTER_ROOM a
	MONSTER_ROOM_DEEP b
	POINTED_DRIPSTONE g
	ROOTED_AZALEA_TREE j
	SCULK_PATCH_ANCIENT_CITY s
	SCULK_PATCH_DEEP_DARK r
	SCULK_VEIN t
	SPORE_BLOSSOM o
	UNDERWATER_MAGMA h
net/minecraft/data/worldgen/placement/EndPlacements np
	CHORUS_PLANT c
	END_GATEWAY_RETURN b
	END_ISLAND_DECORATED d
	END_SPIKE a
net/minecraft/data/worldgen/placement/MiscOverworldPlacements nq
	BLUE_ICE f
	DESERT_WELL o
	DISK_CLAY i
	DISK_GRASS l
	DISK_GRAVEL j
	DISK_SAND k
	FOREST_ROCK c
	FREEZE_TOP_LAYER m
	ICEBERG_BLUE e
	ICEBERG_PACKED d
	ICE_PATCH b
	ICE_SPIKE a
	LAKE_LAVA_SURFACE h
	LAKE_LAVA_UNDERGROUND g
	SPRING_LAVA p
	SPRING_LAVA_FROZEN q
	SPRING_WATER r
	VOID_START_PLATFORM n
net/minecraft/data/worldgen/placement/NetherPlacements nr
	BASALT_BLOBS d
	BASALT_PILLAR n
	BLACKSTONE_BLOBS e
	CRIMSON_FOREST_VEGETATION h
	DELTA a
	FIRE_PLACEMENT s
	GLOWSTONE g
	GLOWSTONE_EXTRA f
	LARGE_BASALT_COLUMNS c
	NETHER_SPROUTS j
	PATCH_CRIMSON_ROOTS m
	PATCH_FIRE u
	PATCH_SOUL_FIRE t
	SMALL_BASALT_COLUMNS b
	SPRING_CLOSED p
	SPRING_CLOSED_DOUBLE q
	SPRING_DELTA o
	SPRING_OPEN r
	TWISTING_VINES k
	WARPED_FOREST_VEGETATION i
	WEEPING_VINES l
net/minecraft/data/worldgen/placement/OrePlacements ns
	ORE_ANCIENT_DEBRIS_LARGE I
	ORE_ANCIENT_DEBRIS_SMALL J
	ORE_ANDESITE_LOWER p
	ORE_ANDESITE_UPPER o
	ORE_BLACKSTONE h
	ORE_CLAY M
	ORE_COAL_LOWER s
	ORE_COAL_UPPER r
	ORE_COPPER K
	ORE_COPPER_LARGE L
	ORE_DIAMOND B
	ORE_DIAMOND_BURIED D
	ORE_DIAMOND_LARGE C
	ORE_DIORITE_LOWER n
	ORE_DIORITE_UPPER m
	ORE_DIRT i
	ORE_EMERALD H
	ORE_GOLD x
	ORE_GOLD_DELTAS c
	ORE_GOLD_EXTRA w
	ORE_GOLD_LOWER y
	ORE_GOLD_NETHER e
	ORE_GRANITE_LOWER l
	ORE_GRANITE_UPPER k
	ORE_GRAVEL j
	ORE_GRAVEL_NETHER g
	ORE_INFESTED G
	ORE_IRON_MIDDLE u
	ORE_IRON_SMALL v
	ORE_IRON_UPPER t
	ORE_LAPIS E
	ORE_LAPIS_BURIED F
	ORE_MAGMA a
	ORE_QUARTZ_DELTAS d
	ORE_QUARTZ_NETHER f
	ORE_REDSTONE z
	ORE_REDSTONE_LOWER A
	ORE_SOUL_SAND b
	ORE_TUFF q
	commonOrePlacement (ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; a
	orePlacement (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; a
	rareOrePlacement (ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; b
net/minecraft/data/worldgen/placement/PlacementUtils nt
	FULL_RANGE e
	HEIGHTMAP a
	HEIGHTMAP_OCEAN_FLOOR d
	HEIGHTMAP_TOP_SOLID b
	HEIGHTMAP_WORLD_SURFACE c
	RANGE_10_10 f
	RANGE_4_4 h
	RANGE_8_8 g
	RANGE_BOTTOM_TO_MAX_TERRAIN_HEIGHT i
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/core/Holder; a
	countExtra (IFI)Lnet/minecraft/world/level/levelgen/placement/PlacementModifier; a
	filtered (Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/core/Holder; a
	filteredByBlockSurvival (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/placement/BlockPredicateFilter; a
	inlinePlaced (Lnet/minecraft/core/Holder;[Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Lnet/minecraft/core/Holder; a
	inlinePlaced (Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;[Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Lnet/minecraft/core/Holder; a
	isEmpty ()Lnet/minecraft/world/level/levelgen/placement/PlacementFilter; a
	onlyWhenEmpty (Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/core/Holder; a
	register (Ljava/lang/String;Lnet/minecraft/core/Holder;Ljava/util/List;)Lnet/minecraft/core/Holder; a
	register (Ljava/lang/String;Lnet/minecraft/core/Holder;[Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Lnet/minecraft/core/Holder; a
net/minecraft/data/worldgen/placement/TreePlacements nu
	ACACIA_CHECKED f
	BIRCH_BEES_0002_PLACED y
	BIRCH_BEES_002 z
	BIRCH_CHECKED e
	CRIMSON_FUNGI a
	DARK_OAK_CHECKED d
	FANCY_OAK_BEES C
	FANCY_OAK_BEES_0002 A
	FANCY_OAK_BEES_002 B
	FANCY_OAK_CHECKED o
	JUNGLE_BUSH t
	JUNGLE_TREE_CHECKED n
	MANGROVE_CHECKED h
	MEGA_JUNGLE_TREE_CHECKED p
	MEGA_PINE_CHECKED r
	MEGA_SPRUCE_CHECKED q
	OAK_BEES_0002 w
	OAK_BEES_002 x
	OAK_CHECKED c
	PINE_CHECKED m
	PINE_ON_SNOW k
	SNOW_TREE_FILTER_DECORATOR j
	SNOW_TREE_PREDICATE i
	SPRUCE_CHECKED g
	SPRUCE_ON_SNOW l
	SUPER_BIRCH_BEES v
	SUPER_BIRCH_BEES_0002 u
	TALL_MANGROVE_CHECKED s
	WARPED_FUNGI b
net/minecraft/data/worldgen/placement/VegetationPlacements nv
	BAMBOO b
	BAMBOO_LIGHT a
	BAMBOO_VEGETATION at
	BIRCH_TALL aj
	BROWN_MUSHROOM_NETHER F
	BROWN_MUSHROOM_NORMAL H
	BROWN_MUSHROOM_OLD_GROWTH L
	BROWN_MUSHROOM_SWAMP N
	BROWN_MUSHROOM_TAIGA J
	DARK_FOREST_VEGETATION X
	FLOWER_DEFAULT Q
	FLOWER_FLOWER_FOREST R
	FLOWER_FOREST_FLOWERS Y
	FLOWER_MEADOW U
	FLOWER_PLAINS T
	FLOWER_SWAMP S
	FLOWER_WARM P
	FOREST_FLOWERS Z
	GRASS_BONEMEAL n
	MUSHROOM_ISLAND_VEGETATION au
	PATCH_BERRY_COMMON t
	PATCH_BERRY_RARE u
	PATCH_CACTUS_DECORATED A
	PATCH_CACTUS_DESERT z
	PATCH_DEAD_BUSH p
	PATCH_DEAD_BUSH_2 o
	PATCH_DEAD_BUSH_BADLANDS q
	PATCH_GRASS_BADLANDS h
	PATCH_GRASS_FOREST g
	PATCH_GRASS_JUNGLE m
	PATCH_GRASS_NORMAL j
	PATCH_GRASS_PLAIN f
	PATCH_GRASS_SAVANNA i
	PATCH_GRASS_TAIGA l
	PATCH_GRASS_TAIGA_2 k
	PATCH_LARGE_FERN y
	PATCH_MELON r
	PATCH_MELON_SPARSE s
	PATCH_PUMPKIN e
	PATCH_SUGAR_CANE E
	PATCH_SUGAR_CANE_BADLANDS D
	PATCH_SUGAR_CANE_DESERT C
	PATCH_SUGAR_CANE_SWAMP B
	PATCH_SUNFLOWER d
	PATCH_TALL_GRASS x
	PATCH_TALL_GRASS_2 w
	PATCH_WATERLILY v
	RED_MUSHROOM_NETHER G
	RED_MUSHROOM_NORMAL I
	RED_MUSHROOM_OLD_GROWTH M
	RED_MUSHROOM_SWAMP O
	RED_MUSHROOM_TAIGA K
	TREES_BADLANDS ae
	TREES_BIRCH ak
	TREES_BIRCH_AND_OAK ao
	TREES_FLOWER_FOREST aa
	TREES_GROVE ad
	TREES_JUNGLE as
	TREES_MANGROVE av
	TREES_MEADOW ab
	TREES_OLD_GROWTH_PINE_TAIGA ar
	TREES_OLD_GROWTH_SPRUCE_TAIGA aq
	TREES_PLAINS W
	TREES_SAVANNA ai
	TREES_SNOWY af
	TREES_SPARSE_JUNGLE ap
	TREES_SWAMP ag
	TREES_TAIGA ac
	TREES_WATER an
	TREES_WINDSWEPT_FOREST al
	TREES_WINDSWEPT_HILLS am
	TREES_WINDSWEPT_SAVANNA ah
	TREE_THRESHOLD V
	VINES c
	getMushroomPlacement (ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; a
	treePlacement (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; a
	treePlacement (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;Lnet/minecraft/world/level/block/Block;)Ljava/util/List; a
	treePlacementBase (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Lcom/google/common/collect/ImmutableList$Builder; b
	worldSurfaceSquaredWithCount (I)Ljava/util/List; a
net/minecraft/data/worldgen/placement/VillagePlacements nw
	ACACIA_VILLAGE g
	FLOWER_PLAIN_VILLAGE k
	OAK_VILLAGE f
	PATCH_BERRY_BUSH_VILLAGE m
	PATCH_CACTUS_VILLAGE j
	PATCH_TAIGA_GRASS_VILLAGE l
	PILE_HAY_VILLAGE a
	PILE_ICE_VILLAGE d
	PILE_MELON_VILLAGE b
	PILE_PUMPKIN_VILLAGE e
	PILE_SNOW_VILLAGE c
	PINE_VILLAGE i
	SPRUCE_VILLAGE h
net/minecraft/gametest/framework/AfterBatch ny
	batch ()Ljava/lang/String; a
net/minecraft/gametest/framework/BeforeBatch nz
	batch ()Ljava/lang/String; a
net/minecraft/gametest/framework/ExhaustedAttemptsException oa
net/minecraft/gametest/framework/GameTest ob
	attempts ()I g
	batch ()Ljava/lang/String; b
	required ()Z d
	requiredSuccesses ()I h
	rotationSteps ()I c
	setupTicks ()J f
	template ()Ljava/lang/String; e
	timeoutTicks ()I a
net/minecraft/gametest/framework/GameTestAssertException oc
net/minecraft/gametest/framework/GameTestAssertPosException od
	absolutePos a
	relativePos b
	tick c
	getAbsolutePos ()Lnet/minecraft/core/BlockPos; c
	getMessageToShowAtBlock ()Ljava/lang/String; a
	getRelativePos ()Lnet/minecraft/core/BlockPos; b
net/minecraft/gametest/framework/GameTestBatch oe
	DEFAULT_BATCH_NAME a
	afterBatchFunction e
	beforeBatchFunction d
	name b
	testFunctions c
	getName ()Ljava/lang/String; a
	getTestFunctions ()Ljava/util/Collection; b
	runAfterBatchFunction (Lnet/minecraft/server/level/ServerLevel;)V b
	runBeforeBatchFunction (Lnet/minecraft/server/level/ServerLevel;)V a
net/minecraft/gametest/framework/GameTestBatchRunner of
	LOGGER a
	allTestInfos f
	batches g
	firstTestNorthWestCorner b
	level c
	nextTestNorthWestCorner h
	testTicker d
	testsPerRow e
	createStructuresForBatch (Ljava/util/Collection;)Ljava/util/Map; a
	getTestInfos ()Ljava/util/List; a
	runBatch (I)V a
	start ()V b
net/minecraft/gametest/framework/GameTestEvent og
	assertion b
	expectedDelay a
	create (JLjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestEvent; a
	create (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestEvent; a
net/minecraft/gametest/framework/GameTestGenerator oh
net/minecraft/gametest/framework/GameTestHelper oi
	finalCheckAdded b
	testInfo a
	absolutePos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; i
	absoluteVec (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	assertAtTickTimeContainerContains (JLnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/Item;)V a
	assertAtTickTimeContainerEmpty (JLnet/minecraft/core/BlockPos;)V a
	assertBlock (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/lang/String;)V a
	assertBlock (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V a
	assertBlockNotPresent (Lnet/minecraft/world/level/block/Block;III)V b
	assertBlockNotPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V b
	assertBlockPresent (Lnet/minecraft/world/level/block/Block;III)V a
	assertBlockPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	assertBlockProperty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)V a
	assertBlockProperty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;Ljava/lang/String;)V a
	assertBlockState (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V b
	assertContainerContains (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/Item;)V a
	assertContainerEmpty (Lnet/minecraft/core/BlockPos;)V g
	assertEntitiesPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;ID)V a
	assertEntityData (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;Ljava/util/function/Function;Ljava/lang/Object;)V a
	assertEntityInstancePresent (Lnet/minecraft/world/entity/Entity;III)V a
	assertEntityInstancePresent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)V a
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;)V b
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;III)V d
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V d
	assertEntityNotTouching (Lnet/minecraft/world/entity/EntityType;DDD)V b
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;)V a
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;III)V c
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V c
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;D)V a
	assertEntityProperty (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/Object;)V a
	assertEntityProperty (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;Ljava/lang/String;)V a
	assertEntityTouching (Lnet/minecraft/world/entity/EntityType;DDD)V a
	assertItemEntityCountIs (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPos;DI)V a
	assertItemEntityNotPresent (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPos;D)V b
	assertItemEntityPresent (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPos;D)V a
	assertSameBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)V a
	assertSameBlockStates (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/BlockPos;)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;)V f
	ensureSingleFinalCheck ()V h
	fail (Ljava/lang/String;)V a
	fail (Ljava/lang/String;Lnet/minecraft/core/BlockPos;)V a
	fail (Ljava/lang/String;Lnet/minecraft/world/entity/Entity;)V a
	failIf (Ljava/lang/Runnable;)V c
	failIfEver (Ljava/lang/Runnable;)V d
	forEveryBlockInStructure (Ljava/util/function/Consumer;)V a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; b
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getBounds ()Lnet/minecraft/world/phys/AABB; i
	getEntities (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;D)Ljava/util/List; b
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; a
	getRelativeBounds ()Lnet/minecraft/world/phys/AABB; j
	getTick ()J g
	killAllEntities ()V b
	makeAboutToDrown (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	makeMockPlayer ()Lnet/minecraft/world/entity/player/Player; c
	onEachTick (Ljava/lang/Runnable;)V e
	pressButton (III)V a
	pressButton (Lnet/minecraft/core/BlockPos;)V c
	pullLever (III)V b
	pullLever (Lnet/minecraft/core/BlockPos;)V e
	pulseRedstone (Lnet/minecraft/core/BlockPos;J)V a
	randomTick (Lnet/minecraft/core/BlockPos;)V h
	relativePos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; j
	runAfterDelay (JLjava/lang/Runnable;)V b
	runAtTickTime (JLjava/lang/Runnable;)V a
	setBlock (IIILnet/minecraft/world/level/block/Block;)V a
	setBlock (IIILnet/minecraft/world/level/block/state/BlockState;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setDayTime (I)V a
	setNight ()V d
	spawn (Lnet/minecraft/world/entity/EntityType;FFF)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;III)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/Entity; a
	spawnItem (Lnet/minecraft/world/item/Item;FFF)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;FFF)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;III)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/Mob; b
	startSequence ()Lnet/minecraft/gametest/framework/GameTestSequence; f
	succeed ()V e
	succeedIf (Ljava/lang/Runnable;)V a
	succeedOnTickWhen (ILjava/lang/Runnable;)V a
	succeedWhen (Ljava/lang/Runnable;)V b
	succeedWhenBlockPresent (Lnet/minecraft/world/level/block/Block;III)V c
	succeedWhenBlockPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V c
	succeedWhenEntityData (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;Ljava/util/function/Function;Ljava/lang/Object;)V b
	succeedWhenEntityNotPresent (Lnet/minecraft/world/entity/EntityType;III)V f
	succeedWhenEntityNotPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V f
	succeedWhenEntityPresent (Lnet/minecraft/world/entity/EntityType;III)V e
	succeedWhenEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V e
	useBlock (Lnet/minecraft/core/BlockPos;)V d
	walkTo (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;F)Lnet/minecraft/gametest/framework/GameTestSequence; a
net/minecraft/gametest/framework/GameTestInfo oj
	done l
	error n
	level c
	listeners d
	rotation m
	runAtTickTimeMap g
	sequences f
	startTick h
	started j
	structureBlockEntity o
	structureBlockPos b
	testFunction a
	tickCount i
	timeoutTicks e
	timer k
	addListener (Lnet/minecraft/gametest/framework/GameTestListener;)V a
	clearStructure ()V o
	createSequence ()Lnet/minecraft/gametest/framework/GameTestSequence; q
	fail (Ljava/lang/Throwable;)V a
	finish ()V D
	getError ()Ljava/lang/Throwable; n
	getLevel ()Lnet/minecraft/server/level/ServerLevel; g
	getRotation ()Lnet/minecraft/world/level/block/Rotation; u
	getRunTime ()J l
	getStructureBlockEntity ()Lnet/minecraft/world/level/block/entity/StructureBlockEntity; C
	getStructureBlockPos ()Lnet/minecraft/core/BlockPos; d
	getStructureBounds ()Lnet/minecraft/world/phys/AABB; f
	getStructureName ()Ljava/lang/String; t
	getStructureSize ()Lnet/minecraft/core/Vec3i; e
	getTestFunction ()Lnet/minecraft/gametest/framework/TestFunction; v
	getTestName ()Ljava/lang/String; c
	getTick ()J p
	getTimeoutTicks ()I w
	hasFailed ()Z i
	hasStarted ()Z j
	hasSucceeded ()Z h
	isDone ()Z k
	isFlaky ()Z x
	isOptional ()Z s
	isRequired ()Z r
	maxAttempts ()I y
	requiredSuccesses ()I z
	setRunAtTickTime (JLjava/lang/Runnable;)V a
	setStructureBlockPos (Lnet/minecraft/core/BlockPos;)V a
	spawnStructure (Lnet/minecraft/core/BlockPos;I)V a
	startExecution ()V a
	startTest ()V B
	succeed ()V m
	tick ()V b
	tickInternal ()V A
net/minecraft/gametest/framework/GameTestListener ok
	testFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	testPassed (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	testStructureLoaded (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
net/minecraft/gametest/framework/GameTestRegistry ol
	AFTER_BATCH_FUNCTIONS d
	BEFORE_BATCH_FUNCTIONS c
	LAST_FAILED_TESTS e
	TEST_CLASS_NAMES b
	TEST_FUNCTIONS a
	findTestFunction (Ljava/lang/String;)Ljava/util/Optional; e
	forgetFailedTests ()V d
	getAfterBatchFunction (Ljava/lang/String;)Ljava/util/function/Consumer; d
	getAllTestClassNames ()Ljava/util/Collection; b
	getAllTestFunctions ()Ljava/util/Collection; a
	getBeforeBatchFunction (Ljava/lang/String;)Ljava/util/function/Consumer; c
	getLastFailedTests ()Ljava/util/Collection; c
	getTestFunction (Ljava/lang/String;)Lnet/minecraft/gametest/framework/TestFunction; f
	getTestFunctionsForClassName (Ljava/lang/String;)Ljava/util/Collection; a
	isTestClass (Ljava/lang/String;)Z b
	isTestFunctionPartOfClass (Lnet/minecraft/gametest/framework/TestFunction;Ljava/lang/String;)Z a
	register (Ljava/lang/Class;)V a
	register (Ljava/lang/reflect/Method;)V a
	registerBatchFunction (Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/Map;)V a
	rememberFailedTest (Lnet/minecraft/gametest/framework/TestFunction;)V a
	turnMethodIntoConsumer (Ljava/lang/reflect/Method;)Ljava/util/function/Consumer; d
	turnMethodIntoTestFunction (Ljava/lang/reflect/Method;)Lnet/minecraft/gametest/framework/TestFunction; c
	useTestGeneratorMethod (Ljava/lang/reflect/Method;)Ljava/util/Collection; b
net/minecraft/gametest/framework/GameTestRunner om
	DEFAULT_TESTS_PER_ROW d
	MAX_TESTS_PER_BATCH e
	PADDING_AROUND_EACH_STRUCTURE a
	SPACE_BETWEEN_COLUMNS b
	SPACE_BETWEEN_ROWS c
	clearAllTests (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/GameTestTicker;I)V a
	clearMarkers (Lnet/minecraft/server/level/ServerLevel;)V a
	groupTestsIntoBatches (Ljava/util/Collection;)Ljava/util/Collection; a
	runTest (Lnet/minecraft/gametest/framework/GameTestInfo;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/GameTestTicker;)V a
	runTestBatches (Ljava/util/Collection;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/GameTestTicker;I)Ljava/util/Collection; a
	runTests (Ljava/util/Collection;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/GameTestTicker;I)Ljava/util/Collection; b
net/minecraft/gametest/framework/GameTestSequence on
	events b
	lastTick c
	parent a
	executeWithoutFail (Ljava/lang/Runnable;)V c
	thenExecute (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; b
	thenExecuteAfter (ILjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenExecuteFor (ILjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; b
	thenFail (Ljava/util/function/Supplier;)V a
	thenIdle (I)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenSucceed ()V a
	thenTrigger ()Lnet/minecraft/gametest/framework/GameTestSequence$Condition; b
	thenWaitUntil (JLjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenWaitUntil (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	tick (J)V c
	tickAndContinue (J)V a
	tickAndFailIfNotComplete (J)V b
net/minecraft/gametest/framework/GameTestSequence$Condition on$a
	NOT_TRIGGERED b
	triggerTime c
	assertTriggeredThisTick ()V a
	trigger (J)V a
net/minecraft/gametest/framework/GameTestServer oo
	LOGGER n
	NO_SERVICES p
	PROGRESS_REPORT_INTERVAL o
	TEST_GAME_RULES s
	TEST_SETTINGS t
	spawnPos r
	testBatches q
	testTracker u
	create (Ljava/lang/Thread;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/server/packs/repository/PackRepository;Ljava/util/Collection;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/gametest/framework/GameTestServer; a
	fillServerSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; a
	getFunctionCompilationLevel ()I i
	getOperatorUserPermissionLevel ()I h
	getRateLimitPacketsPerSecond ()I l
	haveTestsStarted ()Z bg
	initServer ()Z e
	isCommandBlockEnabled ()Z n
	isDedicatedServer ()Z k
	isEpollEnabled ()Z m
	isHardcore ()Z g
	isPublished ()Z o
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	onServerExit ()V f
	shouldInformAdmins ()Z G_
	shouldRconBroadcast ()Z j
	startTests (Lnet/minecraft/server/level/ServerLevel;)V b
	tickServer (Ljava/util/function/BooleanSupplier;)V a
net/minecraft/gametest/framework/GameTestTicker op
	SINGLETON a
	testInfos b
	add (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	clear ()V a
	tick ()V b
net/minecraft/gametest/framework/GameTestTimeoutException oq
net/minecraft/gametest/framework/GlobalTestReporter or
	DELEGATE a
	finish ()V a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	replaceWith (Lnet/minecraft/gametest/framework/TestReporter;)V a
net/minecraft/gametest/framework/JUnitLikeTestReporter os
	destination d
	document a
	stopwatch c
	testSuite b
	createTestCase (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)Lorg/w3c/dom/Element; a
	finish ()V a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	save (Ljava/io/File;)V a
net/minecraft/gametest/framework/LogTestReporter ot
	LOGGER a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
net/minecraft/gametest/framework/MultipleTestTracker ou
	FAILED_OPTIONAL_TEST_CHAR d
	FAILED_REQUIRED_TEST_CHAR e
	NOT_STARTED_TEST_CHAR a
	ONGOING_TEST_CHAR b
	SUCCESSFUL_TEST_CHAR c
	listeners g
	tests f
	addFailureListener (Ljava/util/function/Consumer;)V a
	addListener (Lnet/minecraft/gametest/framework/GameTestListener;)V a
	addTestToTrack (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	getDoneCount ()I c
	getFailedOptional ()Ljava/util/Collection; g
	getFailedOptionalCount ()I b
	getFailedRequired ()Ljava/util/Collection; f
	getFailedRequiredCount ()I a
	getProgressBar ()Ljava/lang/String; j
	getTotalCount ()I h
	hasFailedOptional ()Z e
	hasFailedRequired ()Z d
	isDone ()Z i
net/minecraft/gametest/framework/ReportGameListener ov
	attempts a
	originalTestInfo c
	structurePos e
	successes b
	testTicker d
	createBook (Ljava/lang/String;ZLjava/lang/String;)Lnet/minecraft/world/item/ItemStack; a
	reportFailure (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/Throwable;)V a
	reportPassed (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)V a
	rerunTest ()V a
	say (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/ChatFormatting;Ljava/lang/String;)V a
	showRedBox (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/lang/String;)V a
	spawnBeacon (Lnet/minecraft/gametest/framework/GameTestInfo;Lnet/minecraft/world/level/block/Block;)V a
	spawnLectern (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)V c
	testFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	testPassed (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	testStructureLoaded (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	visualizeFailedTest (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/Throwable;)V b
	visualizePassedTest (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)V b
net/minecraft/gametest/framework/StructureUtils ow
	DEFAULT_TEST_STRUCTURES_DIR a
	HOW_MANY_CHUNKS_TO_LOAD_IN_EACH_DIRECTION_OF_STRUCTURE d
	LOGGER c
	testStructuresDir b
	addCommandBlockAndButtonToStartTest (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;)V a
	clearBlock (ILnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)V a
	clearSpaceForStructure (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;ILnet/minecraft/server/level/ServerLevel;)V a
	createNewEmptyStructureBlock (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Vec3i;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;)V a
	createStructureBlock (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Z)Lnet/minecraft/world/level/block/entity/StructureBlockEntity; a
	doesStructureContain (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
	findNearestStructureBlock (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/core/BlockPos; b
	findStructureBlockContainingPos (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Ljava/util/Optional; a
	findStructureBlocks (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Ljava/util/Collection; c
	forceLoadChunks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)V a
	getRotationForRotationSteps (I)Lnet/minecraft/world/level/block/Rotation; a
	getRotationStepsForRotation (Lnet/minecraft/world/level/block/Rotation;)I a
	getStructureBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Vec3i;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getStructureBoundingBox (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	getStructureBounds (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Lnet/minecraft/world/phys/AABB; a
	getStructureTemplate (Ljava/lang/String;Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	main ([Ljava/lang/String;)V a
	spawnStructure (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;ILnet/minecraft/server/level/ServerLevel;Z)Lnet/minecraft/world/level/block/entity/StructureBlockEntity; a
	tryLoadStructure (Ljava/nio/file/Path;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/gametest/framework/TeamcityTestReporter ox
	ESCAPER b
	LOGGER a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
net/minecraft/gametest/framework/TestClassNameArgument oy
	EXAMPLES a
	getTestClassName (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
	testClassName ()Lnet/minecraft/gametest/framework/TestClassNameArgument; a
net/minecraft/gametest/framework/TestCommand oz
	DEFAULT_CLEAR_RADIUS a
	DEFAULT_X_SIZE g
	DEFAULT_Y_SIZE h
	DEFAULT_Z_SIZE i
	MAX_CLEAR_RADIUS b
	SHOW_POS_DURATION_MS f
	STRUCTURE_BLOCK_FULL_SEARCH_RADIUS d
	STRUCTURE_BLOCK_NEARBY_SEARCH_RADIUS c
	TEST_POS_Z_OFFSET_FROM_PLAYER e
	clearAllTests (Lnet/minecraft/commands/CommandSourceStack;I)I a
	createNewStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;III)I a
	exportNearestTestStructure (Lnet/minecraft/commands/CommandSourceStack;)I c
	exportTestStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I c
	importTestStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I d
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	runAllNearbyTests (Lnet/minecraft/commands/CommandSourceStack;)I b
	runAllTests (Lnet/minecraft/commands/CommandSourceStack;II)I a
	runAllTestsInClass (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;II)I a
	runLastFailedTests (Lnet/minecraft/commands/CommandSourceStack;ZII)I a
	runNearbyTest (Lnet/minecraft/commands/CommandSourceStack;)I a
	runTest (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/gametest/framework/TestFunction;I)I a
	runTest (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/MultipleTestTracker;)V a
	runTestPreparation (Lnet/minecraft/gametest/framework/TestFunction;Lnet/minecraft/server/level/ServerLevel;)V a
	runTests (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;II)V a
	say (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)V b
	say (Lnet/minecraft/server/level/ServerLevel;Ljava/lang/String;Lnet/minecraft/ChatFormatting;)V a
	showPos (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	showTestSummaryIfAllDone (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/MultipleTestTracker;)V a
net/minecraft/gametest/framework/TestCommand$TestSummaryDisplayer oz$a
	level a
	tracker b
	testFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	testPassed (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	testStructureLoaded (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
net/minecraft/gametest/framework/TestFunction pa
	batchName a
	function g
	maxAttempts e
	maxTicks h
	required d
	requiredSuccesses f
	rotation j
	setupTicks i
	structureName c
	testName b
	getBatchName ()Ljava/lang/String; e
	getMaxAttempts ()I i
	getMaxTicks ()I c
	getRequiredSuccesses ()I j
	getRotation ()Lnet/minecraft/world/level/block/Rotation; g
	getSetupTicks ()J f
	getStructureName ()Ljava/lang/String; b
	getTestName ()Ljava/lang/String; a
	isFlaky ()Z h
	isRequired ()Z d
	run (Lnet/minecraft/gametest/framework/GameTestHelper;)V a
net/minecraft/gametest/framework/TestFunctionArgument pb
	EXAMPLES a
	getTestFunction (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/gametest/framework/TestFunction; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/gametest/framework/TestFunction; a
	testFunctionArgument ()Lnet/minecraft/gametest/framework/TestFunctionArgument; a
net/minecraft/gametest/framework/TestReporter pc
	finish ()V a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
net/minecraft/locale/Language pe
	DEFAULT a
	GSON c
	LOGGER b
	UNSUPPORTED_FORMAT_PATTERN d
	instance e
	getInstance ()Lnet/minecraft/locale/Language; a
	getOrDefault (Ljava/lang/String;)Ljava/lang/String; a
	getVisualOrder (Ljava/util/List;)Ljava/util/List; a
	getVisualOrder (Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/util/FormattedCharSequence; a
	has (Ljava/lang/String;)Z b
	inject (Lnet/minecraft/locale/Language;)V a
	isDefaultRightToLeft ()Z b
	loadDefault ()Lnet/minecraft/locale/Language; c
	loadFromJson (Ljava/io/InputStream;Ljava/util/function/BiConsumer;)V a
net/minecraft/nbt/ByteArrayTag pg
	SELF_SIZE_IN_BITS b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	add (ILnet/minecraft/nbt/ByteTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/Tag; c
	get (I)Lnet/minecraft/nbt/ByteTag; a
	getAsByteArray ()[B d
	getElementType ()B e
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	remove (I)Lnet/minecraft/nbt/ByteTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/ByteTag;)Lnet/minecraft/nbt/ByteTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	toArray (Ljava/util/List;)[B a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ByteTag ph
	ONE c
	SELF_SIZE_IN_BITS w
	TYPE a
	ZERO b
	data x
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/ByteTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (B)Lnet/minecraft/nbt/ByteTag; a
	valueOf (Z)Lnet/minecraft/nbt/ByteTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ByteTag$Cache ph$a
	cache a
net/minecraft/nbt/CollectionTag pi
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	getElementType ()B e
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
net/minecraft/nbt/CompoundTag pj
	CODEC a
	MAP_ENTRY_SIZE_IN_BITS w
	SELF_SIZE_IN_BITS c
	TYPE b
	tags x
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	contains (Ljava/lang/String;)Z e
	contains (Ljava/lang/String;I)Z b
	copy ()Lnet/minecraft/nbt/CompoundTag; g
	copy ()Lnet/minecraft/nbt/Tag; c
	createReport (Ljava/lang/String;Lnet/minecraft/nbt/TagType;Ljava/lang/ClassCastException;)Lnet/minecraft/CrashReport; a
	entries ()Ljava/util/Map; h
	get (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; c
	getAllKeys ()Ljava/util/Set; d
	getBoolean (Ljava/lang/String;)Z q
	getByte (Ljava/lang/String;)B f
	getByteArray (Ljava/lang/String;)[B m
	getCompound (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; p
	getDouble (Ljava/lang/String;)D k
	getFloat (Ljava/lang/String;)F j
	getId ()B a
	getInt (Ljava/lang/String;)I h
	getIntArray (Ljava/lang/String;)[I n
	getList (Ljava/lang/String;I)Lnet/minecraft/nbt/ListTag; c
	getLong (Ljava/lang/String;)J i
	getLongArray (Ljava/lang/String;)[J o
	getShort (Ljava/lang/String;)S g
	getString (Ljava/lang/String;)Ljava/lang/String; l
	getTagType (Ljava/lang/String;)B d
	getType ()Lnet/minecraft/nbt/TagType; b
	getUUID (Ljava/lang/String;)Ljava/util/UUID; a
	hasUUID (Ljava/lang/String;)Z b
	isEmpty ()Z f
	merge (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	put (Ljava/lang/String;Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; a
	putBoolean (Ljava/lang/String;Z)V a
	putByte (Ljava/lang/String;B)V a
	putByteArray (Ljava/lang/String;Ljava/util/List;)V a
	putByteArray (Ljava/lang/String;[B)V a
	putDouble (Ljava/lang/String;D)V a
	putFloat (Ljava/lang/String;F)V a
	putInt (Ljava/lang/String;I)V a
	putIntArray (Ljava/lang/String;Ljava/util/List;)V b
	putIntArray (Ljava/lang/String;[I)V a
	putLong (Ljava/lang/String;J)V a
	putLongArray (Ljava/lang/String;Ljava/util/List;)V c
	putLongArray (Ljava/lang/String;[J)V a
	putShort (Ljava/lang/String;S)V a
	putString (Ljava/lang/String;Ljava/lang/String;)V a
	putUUID (Ljava/lang/String;Ljava/util/UUID;)V a
	readNamedTagData (Lnet/minecraft/nbt/TagType;Ljava/lang/String;Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; a
	readNamedTagName (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)Ljava/lang/String; b
	readNamedTagType (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)B a
	remove (Ljava/lang/String;)V r
	size ()I e
	write (Ljava/io/DataOutput;)V a
	writeNamedTag (Ljava/lang/String;Lnet/minecraft/nbt/Tag;Ljava/io/DataOutput;)V a
net/minecraft/nbt/DoubleTag pk
	SELF_SIZE_IN_BITS c
	TYPE b
	ZERO a
	data w
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/DoubleTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (D)Lnet/minecraft/nbt/DoubleTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/EndTag pl
	INSTANCE b
	SELF_SIZE_IN_BITS c
	TYPE a
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/EndTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/FloatTag pm
	SELF_SIZE_IN_BITS c
	TYPE b
	ZERO a
	data w
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/FloatTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (F)Lnet/minecraft/nbt/FloatTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntArrayTag pn
	SELF_SIZE_IN_BITS b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	add (ILnet/minecraft/nbt/IntTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/IntArrayTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	get (I)Lnet/minecraft/nbt/IntTag; a
	getAsIntArray ()[I f
	getElementType ()B e
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	remove (I)Lnet/minecraft/nbt/IntTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/IntTag;)Lnet/minecraft/nbt/IntTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	toArray (Ljava/util/List;)[I a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntTag po
	SELF_SIZE_IN_BITS b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/IntTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (I)Lnet/minecraft/nbt/IntTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntTag$Cache po$a
	HIGH b
	LOW c
	cache a
net/minecraft/nbt/ListTag pp
	SELF_SIZE_IN_BITS b
	TYPE a
	list c
	type w
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/ListTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	get (I)Lnet/minecraft/nbt/Tag; k
	getCompound (I)Lnet/minecraft/nbt/CompoundTag; a
	getDouble (I)D h
	getElementType ()B e
	getFloat (I)F i
	getId ()B a
	getInt (I)I e
	getIntArray (I)[I f
	getList (I)Lnet/minecraft/nbt/ListTag; b
	getLongArray (I)[J g
	getShort (I)S d
	getString (I)Ljava/lang/String; j
	getType ()Lnet/minecraft/nbt/TagType; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	updateType (Lnet/minecraft/nbt/Tag;)Z a
	updateTypeAfterRemove ()V f
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongArrayTag pq
	SELF_SIZE_IN_BITS b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	add (ILnet/minecraft/nbt/LongTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/LongArrayTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	get (I)Lnet/minecraft/nbt/LongTag; a
	getAsLongArray ()[J f
	getElementType ()B e
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	remove (I)Lnet/minecraft/nbt/LongTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/LongTag;)Lnet/minecraft/nbt/LongTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	toArray (Ljava/util/List;)[J a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongTag pr
	SELF_SIZE_IN_BITS b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/LongTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (J)Lnet/minecraft/nbt/LongTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongTag$Cache pr$a
	HIGH b
	LOW c
	cache a
net/minecraft/nbt/NbtAccounter ps
	UNLIMITED a
	quota b
	usage c
	accountBits (J)V a
net/minecraft/nbt/NbtIo pt
	createDecompressorStream (Ljava/io/InputStream;)Ljava/io/DataInputStream; b
	parse (Ljava/io/DataInput;Lnet/minecraft/nbt/StreamTagVisitor;)V a
	parseCompressed (Ljava/io/File;Lnet/minecraft/nbt/StreamTagVisitor;)V a
	parseCompressed (Ljava/io/InputStream;Lnet/minecraft/nbt/StreamTagVisitor;)V a
	read (Ljava/io/DataInput;)Lnet/minecraft/nbt/CompoundTag; a
	read (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/CompoundTag; a
	read (Ljava/io/File;)Lnet/minecraft/nbt/CompoundTag; b
	readCompressed (Ljava/io/File;)Lnet/minecraft/nbt/CompoundTag; a
	readCompressed (Ljava/io/InputStream;)Lnet/minecraft/nbt/CompoundTag; a
	readUnnamedTag (Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; a
	write (Lnet/minecraft/nbt/CompoundTag;Ljava/io/DataOutput;)V a
	write (Lnet/minecraft/nbt/CompoundTag;Ljava/io/File;)V b
	writeCompressed (Lnet/minecraft/nbt/CompoundTag;Ljava/io/File;)V a
	writeCompressed (Lnet/minecraft/nbt/CompoundTag;Ljava/io/OutputStream;)V a
	writeUnnamedTag (Lnet/minecraft/nbt/Tag;Ljava/io/DataOutput;)V a
net/minecraft/nbt/NbtOps pu
	INSTANCE a
	convertTo (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/nbt/Tag;)Ljava/lang/Object; a
	createBoolean (Z)Lnet/minecraft/nbt/Tag; a
	createByte (B)Lnet/minecraft/nbt/Tag; a
	createByteList (Ljava/nio/ByteBuffer;)Lnet/minecraft/nbt/Tag; a
	createDouble (D)Lnet/minecraft/nbt/Tag; a
	createFloat (F)Lnet/minecraft/nbt/Tag; a
	createGenericList (BB)Lnet/minecraft/nbt/CollectionTag; a
	createInt (I)Lnet/minecraft/nbt/Tag; a
	createIntList (Ljava/util/stream/IntStream;)Lnet/minecraft/nbt/Tag; a
	createList (Ljava/util/stream/Stream;)Lnet/minecraft/nbt/Tag; b
	createLong (J)Lnet/minecraft/nbt/Tag; a
	createLongList (Ljava/util/stream/LongStream;)Lnet/minecraft/nbt/Tag; a
	createMap (Ljava/util/stream/Stream;)Lnet/minecraft/nbt/Tag; a
	createNumeric (Ljava/lang/Number;)Lnet/minecraft/nbt/Tag; a
	createShort (S)Lnet/minecraft/nbt/Tag; a
	createString (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	empty ()Lnet/minecraft/nbt/Tag; a
	fillMany (Lnet/minecraft/nbt/CollectionTag;Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	fillOne (Lnet/minecraft/nbt/CollectionTag;Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)V a
	getByteBuffer (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; h
	getIntStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; i
	getList (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; g
	getLongStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; j
	getMap (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; e
	getMapEntries (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; d
	getMapValues (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; c
	getNumberValue (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	getStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; f
	getStringValue (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; b
	mergeToList (Lnet/minecraft/nbt/Tag;Ljava/util/List;)Lcom/mojang/serialization/DataResult; a
	mergeToList (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	mergeToMap (Lnet/minecraft/nbt/Tag;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; a
	mergeToMap (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	remove (Lnet/minecraft/nbt/Tag;Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	typesMatch (BBB)Z a
net/minecraft/nbt/NbtOps$NbtRecordBuilder pu$a
	append (Ljava/lang/String;Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	build (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	initBuilder ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/nbt/NbtUtils pv
	COLON_SPLITTER i
	COMMA_SPLITTER h
	ELEMENT_SEPARATOR f
	INDENT k
	KEY_VALUE_SEPARATOR g
	LOGGER j
	NOT_FOUND l
	PROPERTIES_END e
	PROPERTIES_START d
	SNBT_DATA_TAG a
	YXZ_LISTTAG_DOUBLE_COMPARATOR c
	YXZ_LISTTAG_INT_COMPARATOR b
	compareNbt (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;Z)Z a
	createUUID (Ljava/util/UUID;)Lnet/minecraft/nbt/IntArrayTag; a
	getName (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/String; a
	indent (ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder; a
	loadUUID (Lnet/minecraft/nbt/Tag;)Ljava/util/UUID; a
	packBlockState (Lnet/minecraft/nbt/CompoundTag;)Ljava/lang/String; g
	packStructureTemplate (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; e
	prettyPrint (Ljava/lang/StringBuilder;Lnet/minecraft/nbt/Tag;IZ)Ljava/lang/StringBuilder; a
	prettyPrint (Lnet/minecraft/nbt/Tag;)Ljava/lang/String; b
	prettyPrint (Lnet/minecraft/nbt/Tag;Z)Ljava/lang/String; a
	readBlockPos (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/core/BlockPos; b
	readBlockState (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/state/BlockState; c
	readGameProfile (Lnet/minecraft/nbt/CompoundTag;)Lcom/mojang/authlib/GameProfile; a
	setValueHelper (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/state/StateHolder; a
	snbtToStructure (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	structureToSnbt (Lnet/minecraft/nbt/CompoundTag;)Ljava/lang/String; d
	toPrettyComponent (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; c
	unpackBlockState (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; b
	unpackStructureTemplate (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; f
	update (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/util/datafix/DataFixTypes;Lnet/minecraft/nbt/CompoundTag;I)Lnet/minecraft/nbt/CompoundTag; a
	update (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/util/datafix/DataFixTypes;Lnet/minecraft/nbt/CompoundTag;II)Lnet/minecraft/nbt/CompoundTag; a
	writeBlockPos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; a
	writeBlockState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/nbt/CompoundTag; a
	writeFluidState (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/nbt/CompoundTag; a
	writeGameProfile (Lnet/minecraft/nbt/CompoundTag;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/nbt/NumericTag pw
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
net/minecraft/nbt/ShortTag px
	SELF_SIZE_IN_BITS b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/ShortTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (S)Lnet/minecraft/nbt/ShortTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ShortTag$Cache px$a
	HIGH b
	LOW c
	cache a
net/minecraft/nbt/SnbtPrinterTagVisitor py
	ELEMENT_SEPARATOR e
	ELEMENT_SPACING i
	KEY_ORDER a
	LIST_CLOSE g
	LIST_OPEN f
	LIST_TYPE_SEPARATOR h
	NAME_VALUE_SEPARATOR d
	NEWLINE l
	NO_INDENTATION b
	SIMPLE_VALUE c
	STRUCT_CLOSE k
	STRUCT_OPEN j
	depth n
	indentation m
	path o
	result p
	getKeys (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; b
	handleEscapePretty (Ljava/lang/String;)Ljava/lang/String; a
	pathString ()Ljava/lang/String; a
	popPath ()V b
	pushPath (Ljava/lang/String;)V b
	visit (Lnet/minecraft/nbt/Tag;)Ljava/lang/String; a
	visitByte (Lnet/minecraft/nbt/ByteTag;)V a
	visitByteArray (Lnet/minecraft/nbt/ByteArrayTag;)V a
	visitCompound (Lnet/minecraft/nbt/CompoundTag;)V a
	visitDouble (Lnet/minecraft/nbt/DoubleTag;)V a
	visitEnd (Lnet/minecraft/nbt/EndTag;)V a
	visitFloat (Lnet/minecraft/nbt/FloatTag;)V a
	visitInt (Lnet/minecraft/nbt/IntTag;)V a
	visitIntArray (Lnet/minecraft/nbt/IntArrayTag;)V a
	visitList (Lnet/minecraft/nbt/ListTag;)V a
	visitLong (Lnet/minecraft/nbt/LongTag;)V a
	visitLongArray (Lnet/minecraft/nbt/LongArrayTag;)V a
	visitShort (Lnet/minecraft/nbt/ShortTag;)V a
	visitString (Lnet/minecraft/nbt/StringTag;)V a
net/minecraft/nbt/StreamTagVisitor pz
	visit (B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (D)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (F)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (S)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitContainerEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
	visitElement (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; b
	visitEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitList (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitRootEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
net/minecraft/nbt/StreamTagVisitor$EntryResult pz$a
	$VALUES e
	BREAK c
	ENTER a
	HALT d
	SKIP b
	$values ()[Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
net/minecraft/nbt/StreamTagVisitor$ValueResult pz$b
	$VALUES d
	BREAK b
	CONTINUE a
	HALT c
	$values ()[Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
net/minecraft/nbt/StringTag qa
	DOUBLE_QUOTE w
	EMPTY c
	ESCAPE y
	NOT_SET z
	SELF_SIZE_IN_BITS b
	SINGLE_QUOTE x
	TYPE a
	data A
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/StringTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsString ()Ljava/lang/String; e_
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	quoteAndEscape (Ljava/lang/String;)Ljava/lang/String; b
	skipString (Ljava/io/DataInput;)V a
	valueOf (Ljava/lang/String;)Lnet/minecraft/nbt/StringTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/StringTagVisitor qb
	SIMPLE_VALUE a
	builder b
	handleEscape (Ljava/lang/String;)Ljava/lang/String; a
	visit (Lnet/minecraft/nbt/Tag;)Ljava/lang/String; a
	visitByte (Lnet/minecraft/nbt/ByteTag;)V a
	visitByteArray (Lnet/minecraft/nbt/ByteArrayTag;)V a
	visitCompound (Lnet/minecraft/nbt/CompoundTag;)V a
	visitDouble (Lnet/minecraft/nbt/DoubleTag;)V a
	visitEnd (Lnet/minecraft/nbt/EndTag;)V a
	visitFloat (Lnet/minecraft/nbt/FloatTag;)V a
	visitInt (Lnet/minecraft/nbt/IntTag;)V a
	visitIntArray (Lnet/minecraft/nbt/IntArrayTag;)V a
	visitList (Lnet/minecraft/nbt/ListTag;)V a
	visitLong (Lnet/minecraft/nbt/LongTag;)V a
	visitLongArray (Lnet/minecraft/nbt/LongArrayTag;)V a
	visitShort (Lnet/minecraft/nbt/ShortTag;)V a
	visitString (Lnet/minecraft/nbt/StringTag;)V a
net/minecraft/nbt/Tag qc
	ARRAY_HEADER e
	MAX_DEPTH v
	OBJECT_HEADER d
	OBJECT_REFERENCE f
	STRING_SIZE g
	TAG_ANY_NUMERIC u
	TAG_BYTE i
	TAG_BYTE_ARRAY o
	TAG_COMPOUND r
	TAG_DOUBLE n
	TAG_END h
	TAG_FLOAT m
	TAG_INT k
	TAG_INT_ARRAY s
	TAG_LIST q
	TAG_LONG l
	TAG_LONG_ARRAY t
	TAG_SHORT j
	TAG_STRING p
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	acceptAsRoot (Lnet/minecraft/nbt/StreamTagVisitor;)V b
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsString ()Ljava/lang/String; e_
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/TagParser qd
	BYTE_PATTERN p
	DOUBLE_PATTERN n
	DOUBLE_PATTERN_NOSUFFIX m
	ELEMENT_SEPARATOR g
	ERROR_EXPECTED_KEY b
	ERROR_EXPECTED_VALUE c
	ERROR_INSERT_MIXED_ARRAY e
	ERROR_INSERT_MIXED_LIST d
	ERROR_INVALID_ARRAY f
	ERROR_TRAILING_DATA a
	FLOAT_PATTERN o
	INT_PATTERN s
	LIST_CLOSE j
	LIST_OPEN i
	LONG_PATTERN q
	NAME_VALUE_SEPARATOR h
	SHORT_PATTERN r
	STRUCT_CLOSE k
	STRUCT_OPEN l
	reader t
	expect (C)V a
	hasElementSeparator ()Z i
	parseTag (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	readArray (Lnet/minecraft/nbt/TagType;Lnet/minecraft/nbt/TagType;)Ljava/util/List; a
	readArrayTag ()Lnet/minecraft/nbt/Tag; h
	readKey ()Ljava/lang/String; b
	readList ()Lnet/minecraft/nbt/Tag; e
	readListTag ()Lnet/minecraft/nbt/Tag; g
	readSingleStruct ()Lnet/minecraft/nbt/CompoundTag; a
	readStruct ()Lnet/minecraft/nbt/CompoundTag; f
	readTypedValue ()Lnet/minecraft/nbt/Tag; c
	readValue ()Lnet/minecraft/nbt/Tag; d
	type (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; b
net/minecraft/nbt/TagType qe
	createInvalid (I)Lnet/minecraft/nbt/TagType; a
	getName ()Ljava/lang/String; a
	getPrettyName ()Ljava/lang/String; b
	isValue ()Z d
	load (Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; b
	parse (Ljava/io/DataInput;Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	parseRoot (Ljava/io/DataInput;Lnet/minecraft/nbt/StreamTagVisitor;)V b
	skip (Ljava/io/DataInput;)V a
	skip (Ljava/io/DataInput;I)V a
net/minecraft/nbt/TagType$StaticSize qe$a
	size ()I c
	skip (Ljava/io/DataInput;)V a
	skip (Ljava/io/DataInput;I)V a
net/minecraft/nbt/TagType$VariableSize qe$b
	skip (Ljava/io/DataInput;I)V a
net/minecraft/nbt/TagTypes qf
	TYPES a
	getType (I)Lnet/minecraft/nbt/TagType; a
net/minecraft/nbt/TagVisitor qg
	visitByte (Lnet/minecraft/nbt/ByteTag;)V a
	visitByteArray (Lnet/minecraft/nbt/ByteArrayTag;)V a
	visitCompound (Lnet/minecraft/nbt/CompoundTag;)V a
	visitDouble (Lnet/minecraft/nbt/DoubleTag;)V a
	visitEnd (Lnet/minecraft/nbt/EndTag;)V a
	visitFloat (Lnet/minecraft/nbt/FloatTag;)V a
	visitInt (Lnet/minecraft/nbt/IntTag;)V a
	visitIntArray (Lnet/minecraft/nbt/IntArrayTag;)V a
	visitList (Lnet/minecraft/nbt/ListTag;)V a
	visitLong (Lnet/minecraft/nbt/LongTag;)V a
	visitLongArray (Lnet/minecraft/nbt/LongArrayTag;)V a
	visitShort (Lnet/minecraft/nbt/ShortTag;)V a
	visitString (Lnet/minecraft/nbt/StringTag;)V a
net/minecraft/nbt/TextComponentTagVisitor qh
	ELEMENT_SEPARATOR j
	ELEMENT_SPACING n
	INLINE_ELEMENT_TYPES c
	INLINE_LIST_THRESHOLD b
	LIST_CLOSE l
	LIST_OPEN k
	LIST_TYPE_SEPARATOR m
	LOGGER a
	NAME_VALUE_SEPARATOR i
	NEWLINE q
	SIMPLE_VALUE h
	STRUCT_CLOSE p
	STRUCT_OPEN o
	SYNTAX_HIGHLIGHTING_KEY d
	SYNTAX_HIGHLIGHTING_NUMBER f
	SYNTAX_HIGHLIGHTING_NUMBER_TYPE g
	SYNTAX_HIGHLIGHTING_STRING e
	depth s
	indentation r
	result t
	handleEscapePretty (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	visit (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	visitByte (Lnet/minecraft/nbt/ByteTag;)V a
	visitByteArray (Lnet/minecraft/nbt/ByteArrayTag;)V a
	visitCompound (Lnet/minecraft/nbt/CompoundTag;)V a
	visitDouble (Lnet/minecraft/nbt/DoubleTag;)V a
	visitEnd (Lnet/minecraft/nbt/EndTag;)V a
	visitFloat (Lnet/minecraft/nbt/FloatTag;)V a
	visitInt (Lnet/minecraft/nbt/IntTag;)V a
	visitIntArray (Lnet/minecraft/nbt/IntArrayTag;)V a
	visitList (Lnet/minecraft/nbt/ListTag;)V a
	visitLong (Lnet/minecraft/nbt/LongTag;)V a
	visitLongArray (Lnet/minecraft/nbt/LongArrayTag;)V a
	visitShort (Lnet/minecraft/nbt/ShortTag;)V a
	visitString (Lnet/minecraft/nbt/StringTag;)V a
net/minecraft/nbt/visitors/CollectFields qj
	fieldsToGetCount a
	stack c
	wantedTypes b
	getMissingFieldCount ()I c
	visitContainerEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
	visitEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitRootEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
net/minecraft/nbt/visitors/CollectToTag qk
	consumerStack c
	lastId a
	rootTag b
	appendEntry (Lnet/minecraft/nbt/Tag;)V a
	depth ()I e
	enterContainerIfNeeded (Lnet/minecraft/nbt/TagType;)V c
	getResult ()Lnet/minecraft/nbt/Tag; d
	visit (B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (D)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (F)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (S)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitContainerEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
	visitElement (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; b
	visitEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitList (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitRootEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
net/minecraft/nbt/visitors/FieldSelector ql
	name c
	path a
	type b
	name ()Ljava/lang/String; c
	path ()Ljava/util/List; a
	type ()Lnet/minecraft/nbt/TagType; b
net/minecraft/nbt/visitors/FieldTree qm
	depth a
	fieldsToRecurse c
	selectedFields b
	addEntry (Lnet/minecraft/nbt/visitors/FieldSelector;)V a
	createRoot ()Lnet/minecraft/nbt/visitors/FieldTree; a
	depth ()I b
	fieldsToRecurse ()Ljava/util/Map; d
	isSelected (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Z a
	selectedFields ()Ljava/util/Map; c
net/minecraft/nbt/visitors/SkipAll qn
	INSTANCE a
	visit (B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (D)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (F)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (S)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitContainerEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
	visitElement (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; b
	visitEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitList (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitRootEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
net/minecraft/nbt/visitors/SkipFields qo
	stack a
	visitContainerEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
	visitEntry (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
net/minecraft/network/CipherBase qq
	cipher a
	heapIn b
	heapOut c
	bufToByte (Lio/netty/buffer/ByteBuf;)[B a
	decipher (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; a
	encipher (Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/CipherDecoder qr
	cipher a
	decode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V a
net/minecraft/network/CipherEncoder qs
	cipher a
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/CompressionDecoder qt
	MAXIMUM_COMPRESSED_LENGTH a
	MAXIMUM_UNCOMPRESSED_LENGTH b
	inflater c
	threshold d
	validateDecompressed e
	setThreshold (IZ)V a
net/minecraft/network/CompressionEncoder qu
	deflater b
	encodeBuf a
	threshold c
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
	getThreshold ()I a
	setThreshold (I)V a
net/minecraft/network/Connection qv
	ATTRIBUTE_PROTOCOL e
	AVERAGE_PACKETS_SMOOTHING i
	LOCAL_WORKER_GROUP h
	LOGGER j
	NETWORK_EPOLL_WORKER_GROUP g
	NETWORK_WORKER_GROUP f
	PACKET_MARKER b
	PACKET_RECEIVED_MARKER c
	PACKET_SENT_MARKER d
	ROOT_MARKER a
	address n
	averageReceivedPackets u
	averageSentPackets v
	channel m
	disconnectedReason p
	disconnectionHandled r
	encrypted q
	handlingFault x
	packetListener o
	queue l
	receivedPackets s
	receiving k
	sentPackets t
	tickCount w
	channelRead0 (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;)V a
	connectToLocalServer (Ljava/net/SocketAddress;)Lnet/minecraft/network/Connection; a
	connectToServer (Ljava/net/InetSocketAddress;Z)Lnet/minecraft/network/Connection; a
	disconnect (Lnet/minecraft/network/chat/Component;)V a
	doSendPacket (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;Lnet/minecraft/network/ConnectionProtocol;Lnet/minecraft/network/ConnectionProtocol;)V a
	flushQueue ()V q
	genericsFtw (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;)V a
	getAverageReceivedPackets ()F n
	getAverageSentPackets ()F o
	getCurrentProtocol ()Lnet/minecraft/network/ConnectionProtocol; p
	getDisconnectedReason ()Lnet/minecraft/network/chat/Component; k
	getPacketListener ()Lnet/minecraft/network/PacketListener; j
	getReceiving ()Lnet/minecraft/network/protocol/PacketFlow; e
	getRemoteAddress ()Ljava/net/SocketAddress; c
	getSending ()Lnet/minecraft/network/protocol/PacketFlow; f
	handleDisconnection ()V m
	isConnected ()Z h
	isConnecting ()Z i
	isEncrypted ()Z g
	isMemoryConnection ()Z d
	send (Lnet/minecraft/network/protocol/Packet;)V a
	send (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;)V a
	sendPacket (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;)V b
	setEncryptionKey (Ljavax/crypto/Cipher;Ljavax/crypto/Cipher;)V a
	setListener (Lnet/minecraft/network/PacketListener;)V a
	setProtocol (Lnet/minecraft/network/ConnectionProtocol;)V a
	setReadOnly ()V l
	setupCompression (IZ)V a
	tick ()V a
	tickSecond ()V b
net/minecraft/network/Connection$PacketHolder qv$a
	listener b
	packet a
net/minecraft/network/ConnectionProtocol qw
	$VALUES k
	HANDSHAKING a
	LOGIN d
	LOOKUP g
	MAX_PROTOCOL_ID f
	MIN_PROTOCOL_ID e
	PLAY b
	PROTOCOL_BY_PACKET h
	STATUS c
	flows j
	id i
	$values ()[Lnet/minecraft/network/ConnectionProtocol; c
	createPacket (Lnet/minecraft/network/protocol/PacketFlow;ILnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/Packet; a
	getById (I)Lnet/minecraft/network/ConnectionProtocol; a
	getId ()I a
	getPacketId (Lnet/minecraft/network/protocol/PacketFlow;Lnet/minecraft/network/protocol/Packet;)Ljava/lang/Integer; a
	getPacketsByIds (Lnet/minecraft/network/protocol/PacketFlow;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; a
	getProtocolForPacket (Lnet/minecraft/network/protocol/Packet;)Lnet/minecraft/network/ConnectionProtocol; a
	protocol ()Lnet/minecraft/network/ConnectionProtocol$ProtocolBuilder; b
net/minecraft/network/ConnectionProtocol$PacketSet qw$a
	LOGGER a
	classToId b
	idToDeserializer c
	addPacket (Ljava/lang/Class;Ljava/util/function/Function;)Lnet/minecraft/network/ConnectionProtocol$PacketSet; a
	createPacket (ILnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/Packet; a
	getAllPackets ()Ljava/lang/Iterable; a
	getId (Ljava/lang/Class;)Ljava/lang/Integer; a
net/minecraft/network/ConnectionProtocol$ProtocolBuilder qw$b
	flows a
	addFlow (Lnet/minecraft/network/protocol/PacketFlow;Lnet/minecraft/network/ConnectionProtocol$PacketSet;)Lnet/minecraft/network/ConnectionProtocol$ProtocolBuilder; a
net/minecraft/network/FriendlyByteBuf qx
	DEFAULT_NBT_QUOTA e
	MAX_COMPONENT_STRING_LENGTH b
	MAX_PUBLIC_KEY_HEADER_SIZE h
	MAX_PUBLIC_KEY_LENGTH i
	MAX_STRING_LENGTH a
	MAX_VARINT_SIZE c
	MAX_VARLONG_SIZE d
	PUBLIC_KEY_SIZE g
	source f
	accessByteBufWithCorrectSize ()[B e
	getMaxEncodedUtfLength (I)I f
	getVarIntSize (I)I a
	getVarLongSize (J)I a
	limitValue (Ljava/util/function/IntFunction;I)Ljava/util/function/IntFunction; a
	readAnySizeNbt ()Lnet/minecraft/nbt/CompoundTag; o
	readBitSet ()Ljava/util/BitSet; w
	readBlockHitResult ()Lnet/minecraft/world/phys/BlockHitResult; v
	readBlockPos ()Lnet/minecraft/core/BlockPos; f
	readById (Lnet/minecraft/core/IdMap;)Ljava/lang/Object; a
	readByteArray ()[B b
	readByteArray (I)[B b
	readChunkPos ()Lnet/minecraft/world/level/ChunkPos; g
	readCollection (Ljava/util/function/IntFunction;Lnet/minecraft/network/FriendlyByteBuf$Reader;)Ljava/util/Collection; a
	readComponent ()Lnet/minecraft/network/chat/Component; j
	readDate ()Ljava/util/Date; s
	readEither (Lnet/minecraft/network/FriendlyByteBuf$Reader;Lnet/minecraft/network/FriendlyByteBuf$Reader;)Lcom/mojang/datafixers/util/Either; b
	readEnum (Ljava/lang/Class;)Ljava/lang/Enum; a
	readGameProfile ()Lcom/mojang/authlib/GameProfile; x
	readGlobalPos ()Lnet/minecraft/core/GlobalPos; i
	readInstant ()Ljava/time/Instant; t
	readIntIdList ()Lit/unimi/dsi/fastutil/ints/IntList; a
	readItem ()Lnet/minecraft/world/item/ItemStack; p
	readList (Lnet/minecraft/network/FriendlyByteBuf$Reader;)Ljava/util/List; a
	readLongArray ()[J d
	readLongArray ([J)[J b
	readLongArray ([JI)[J a
	readMap (Ljava/util/function/IntFunction;Lnet/minecraft/network/FriendlyByteBuf$Reader;Lnet/minecraft/network/FriendlyByteBuf$Reader;)Ljava/util/Map; a
	readMap (Lnet/minecraft/network/FriendlyByteBuf$Reader;Lnet/minecraft/network/FriendlyByteBuf$Reader;)Ljava/util/Map; a
	readNbt ()Lnet/minecraft/nbt/CompoundTag; n
	readNbt (Lnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/CompoundTag; a
	readNullable (Lnet/minecraft/network/FriendlyByteBuf$Reader;)Ljava/lang/Object; c
	readOptional (Lnet/minecraft/network/FriendlyByteBuf$Reader;)Ljava/util/Optional; b
	readProperty ()Lcom/mojang/authlib/properties/Property; y
	readPublicKey ()Ljava/security/PublicKey; u
	readResourceKey (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; a
	readResourceLocation ()Lnet/minecraft/resources/ResourceLocation; r
	readSectionPos ()Lnet/minecraft/core/SectionPos; h
	readUUID ()Ljava/util/UUID; m
	readUtf ()Ljava/lang/String; q
	readUtf (I)Ljava/lang/String; e
	readVarInt ()I k
	readVarIntArray ()[I c
	readVarIntArray (I)[I c
	readVarLong ()J l
	readWithCodec (Lcom/mojang/serialization/Codec;)Ljava/lang/Object; a
	readWithCount (Ljava/util/function/Consumer;)V a
	writeBitSet (Ljava/util/BitSet;)V a
	writeBlockHitResult (Lnet/minecraft/world/phys/BlockHitResult;)V a
	writeBlockPos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeByteArray ([B)Lnet/minecraft/network/FriendlyByteBuf; a
	writeChunkPos (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeCollection (Ljava/util/Collection;Lnet/minecraft/network/FriendlyByteBuf$Writer;)V a
	writeComponent (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeDate (Ljava/util/Date;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeEither (Lcom/mojang/datafixers/util/Either;Lnet/minecraft/network/FriendlyByteBuf$Writer;Lnet/minecraft/network/FriendlyByteBuf$Writer;)V a
	writeEnum (Ljava/lang/Enum;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeGameProfile (Lcom/mojang/authlib/GameProfile;)V a
	writeGlobalPos (Lnet/minecraft/core/GlobalPos;)V a
	writeId (Lnet/minecraft/core/IdMap;Ljava/lang/Object;)V a
	writeInstant (Ljava/time/Instant;)V a
	writeIntIdList (Lit/unimi/dsi/fastutil/ints/IntList;)V a
	writeItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeLongArray ([J)Lnet/minecraft/network/FriendlyByteBuf; a
	writeMap (Ljava/util/Map;Lnet/minecraft/network/FriendlyByteBuf$Writer;Lnet/minecraft/network/FriendlyByteBuf$Writer;)V a
	writeNbt (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeNullable (Ljava/lang/Object;Lnet/minecraft/network/FriendlyByteBuf$Writer;)V a
	writeOptional (Ljava/util/Optional;Lnet/minecraft/network/FriendlyByteBuf$Writer;)V a
	writeProperty (Lcom/mojang/authlib/properties/Property;)V a
	writePublicKey (Ljava/security/PublicKey;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeResourceKey (Lnet/minecraft/resources/ResourceKey;)V b
	writeResourceLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeSectionPos (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeUUID (Ljava/util/UUID;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeUtf (Ljava/lang/String;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeUtf (Ljava/lang/String;I)Lnet/minecraft/network/FriendlyByteBuf; a
	writeVarInt (I)Lnet/minecraft/network/FriendlyByteBuf; d
	writeVarIntArray ([I)Lnet/minecraft/network/FriendlyByteBuf; a
	writeVarLong (J)Lnet/minecraft/network/FriendlyByteBuf; b
	writeWithCodec (Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V a
net/minecraft/network/FriendlyByteBuf$Reader qx$a
net/minecraft/network/FriendlyByteBuf$Writer qx$b
net/minecraft/network/PacketDecoder qy
	LOGGER a
	flow b
net/minecraft/network/PacketEncoder qz
	LOGGER a
	flow b
	encode (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/PacketListener ra
	getConnection ()Lnet/minecraft/network/Connection; a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	shouldPropagateHandlingExceptions ()Z b
net/minecraft/network/PacketSendListener rb
	exceptionallySend (Ljava/util/function/Supplier;)Lnet/minecraft/network/PacketSendListener; a
	onFailure ()Lnet/minecraft/network/protocol/Packet; b
	onSuccess ()V a
	thenRun (Ljava/lang/Runnable;)Lnet/minecraft/network/PacketSendListener; a
net/minecraft/network/RateKickingConnection rc
	EXCEED_REASON j
	LOGGER i
	rateLimitPacketsPerSecond k
	tickSecond ()V b
net/minecraft/network/SkipPacketException rd
net/minecraft/network/TickablePacketListener re
	tick ()V c
net/minecraft/network/Varint21FrameDecoder rf
net/minecraft/network/Varint21LengthFieldPrepender rg
	MAX_BYTES a
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/chat/ChatDecorator rh
	PLAIN a
net/minecraft/network/chat/ChatMessageContent ri
	decorated b
	plain a
	decorated ()Lnet/minecraft/network/chat/Component; c
	isDecorated ()Z a
	plain ()Ljava/lang/String; b
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/chat/ChatMessageContent; a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/chat/ChatMessageContent;)V a
net/minecraft/network/chat/ChatPreviewCache rj
	result a
	pull (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	set (Ljava/lang/String;Lnet/minecraft/network/chat/Component;)V a
net/minecraft/network/chat/ChatPreviewCache$Result rj$a
	preview b
	query a
	matches (Ljava/lang/String;)Z a
	preview ()Lnet/minecraft/network/chat/Component; b
	query ()Ljava/lang/String; a
net/minecraft/network/chat/ChatPreviewThrottler rk
	runningRequest b
	scheduledRequest a
	schedule (Lnet/minecraft/network/chat/ChatPreviewThrottler$Request;)V a
	tick ()V a
	tickIdle ()V b
net/minecraft/network/chat/ChatPreviewThrottler$Request rk$a
net/minecraft/network/chat/ChatSender rl
	SYSTEM a
	profileId b
	profilePublicKey c
	isSystem ()Z a
	profileId ()Ljava/util/UUID; b
	profilePublicKey ()Lnet/minecraft/world/entity/player/ProfilePublicKey; c
net/minecraft/network/chat/ChatType rm
	CHAT c
	CODEC a
	DEFAULT_CHAT_DECORATION b
	EMOTE_COMMAND i
	MSG_COMMAND_INCOMING e
	MSG_COMMAND_OUTGOING f
	SAY_COMMAND d
	TEAM_MSG_COMMAND_INCOMING g
	TEAM_MSG_COMMAND_OUTGOING h
	chat j
	narration k
	bind (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/ChatType$Bound; a
	bind (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/network/chat/ChatType$Bound; a
	bind (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/ChatType$Bound; a
	bind (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/network/chat/ChatType$Bound; a
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/core/Holder; a
	chat ()Lnet/minecraft/network/chat/ChatTypeDecoration; a
	create (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	narration ()Lnet/minecraft/network/chat/ChatTypeDecoration; b
net/minecraft/network/chat/ChatType$Bound rm$a
	chatType a
	name b
	targetName c
	chatType ()Lnet/minecraft/network/chat/ChatType; a
	decorate (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	decorateNarration (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; b
	name ()Lnet/minecraft/network/chat/Component; b
	targetName ()Lnet/minecraft/network/chat/Component; c
	toNetwork (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/network/chat/ChatType$BoundNetwork; a
	withTargetName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/ChatType$Bound; c
net/minecraft/network/chat/ChatType$BoundNetwork rm$b
	chatType a
	name b
	targetName c
	chatType ()I a
	name ()Lnet/minecraft/network/chat/Component; b
	resolve (Lnet/minecraft/core/RegistryAccess;)Ljava/util/Optional; a
	targetName ()Lnet/minecraft/network/chat/Component; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/chat/ChatTypeDecoration rn
	CODEC a
	parameters c
	style d
	translationKey b
	decorate (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType$Bound;)Lnet/minecraft/network/chat/Component; a
	incomingDirectMessage (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatTypeDecoration; b
	outgoingDirectMessage (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatTypeDecoration; c
	parameters ()Ljava/util/List; b
	resolveParameters (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType$Bound;)[Lnet/minecraft/network/chat/Component; b
	style ()Lnet/minecraft/network/chat/Style; c
	teamMessage (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatTypeDecoration; d
	translationKey ()Ljava/lang/String; a
	withSender (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatTypeDecoration; a
net/minecraft/network/chat/ChatTypeDecoration$Parameter rn$a
	$VALUES g
	CODEC d
	CONTENT c
	SENDER a
	TARGET b
	name e
	selector f
	$values ()[Lnet/minecraft/network/chat/ChatTypeDecoration$Parameter; a
	getSerializedName ()Ljava/lang/String; c
	select (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType$Bound;)Lnet/minecraft/network/chat/Component; a
net/minecraft/network/chat/ChatTypeDecoration$Parameter$Selector rn$a$a
net/minecraft/network/chat/ClickEvent ro
	action a
	value b
	getAction ()Lnet/minecraft/network/chat/ClickEvent$Action; a
	getValue ()Ljava/lang/String; b
net/minecraft/network/chat/ClickEvent$Action ro$a
	$VALUES j
	CHANGE_PAGE e
	COPY_TO_CLIPBOARD f
	LOOKUP g
	OPEN_FILE b
	OPEN_URL a
	RUN_COMMAND c
	SUGGEST_COMMAND d
	allowFromServer h
	name i
	$values ()[Lnet/minecraft/network/chat/ClickEvent$Action; c
	getByName (Ljava/lang/String;)Lnet/minecraft/network/chat/ClickEvent$Action; a
	getName ()Ljava/lang/String; b
	isAllowedFromServer ()Z a
net/minecraft/network/chat/CommonComponents rp
	CONNECT_FAILED k
	ELLIPSIS n
	EMPTY a
	GUI_ACKNOWLEDGE j
	GUI_BACK i
	GUI_CANCEL e
	GUI_DONE d
	GUI_NO g
	GUI_PROCEED h
	GUI_YES f
	NARRATION_SEPARATOR m
	NEW_LINE l
	OPTION_OFF c
	OPTION_ON b
	days (J)Lnet/minecraft/network/chat/MutableComponent; a
	hours (J)Lnet/minecraft/network/chat/MutableComponent; b
	joinForNarration (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; b
	joinLines (Ljava/util/Collection;)Lnet/minecraft/network/chat/Component; a
	joinLines ([Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	minutes (J)Lnet/minecraft/network/chat/MutableComponent; c
	optionNameValue (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	optionStatus (Lnet/minecraft/network/chat/Component;Z)Lnet/minecraft/network/chat/MutableComponent; a
	optionStatus (Z)Lnet/minecraft/network/chat/Component; a
net/minecraft/network/chat/Component rq
	contains (Lnet/minecraft/network/chat/Component;)Z a
	copy ()Lnet/minecraft/network/chat/MutableComponent; e
	empty ()Lnet/minecraft/network/chat/MutableComponent; h
	getContents ()Lnet/minecraft/network/chat/ComponentContents; b
	getSiblings ()Ljava/util/List; c
	getString (I)Ljava/lang/String; a
	getStyle ()Lnet/minecraft/network/chat/Style; a
	getVisualOrderText ()Lnet/minecraft/util/FormattedCharSequence; f
	keybind (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; d
	literal (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; b
	nbt (Ljava/lang/String;ZLjava/util/Optional;Lnet/minecraft/network/chat/contents/DataSource;)Lnet/minecraft/network/chat/MutableComponent; a
	nullToEmpty (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; d
	score (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; a
	selector (Ljava/lang/String;Ljava/util/Optional;)Lnet/minecraft/network/chat/MutableComponent; a
	toFlatList ()Ljava/util/List; g
	toFlatList (Lnet/minecraft/network/chat/Style;)Ljava/util/List; a
	translatable (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; c
	translatable (Ljava/lang/String;[Ljava/lang/Object;)Lnet/minecraft/network/chat/MutableComponent; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/Component$Serializer rq$a
	GSON a
	JSON_READER_LINESTART c
	JSON_READER_POS b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJson (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJson (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJsonLenient (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; b
	getPos (Lcom/google/gson/stream/JsonReader;)I a
	parseSeparator (Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Optional; a
	serialize (Lnet/minecraft/network/chat/Component;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
	serializeSeparator (Lcom/google/gson/JsonSerializationContext;Lcom/google/gson/JsonObject;Ljava/util/Optional;)V a
	serializeStyle (Lnet/minecraft/network/chat/Style;Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
	toJson (Lnet/minecraft/network/chat/Component;)Ljava/lang/String; a
	toJsonTree (Lnet/minecraft/network/chat/Component;)Lcom/google/gson/JsonElement; c
	toStableJson (Lnet/minecraft/network/chat/Component;)Ljava/lang/String; b
	unwrapTextArgument (Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/network/chat/ComponentContents rr
	EMPTY a
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/ComponentUtils rs
	DEFAULT_NO_STYLE_SEPARATOR c
	DEFAULT_SEPARATOR b
	DEFAULT_SEPARATOR_TEXT a
	formatAndSortList (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/network/chat/Component; a
	formatList (Ljava/util/Collection;)Lnet/minecraft/network/chat/Component; a
	formatList (Ljava/util/Collection;Ljava/util/Optional;Ljava/util/function/Function;)Lnet/minecraft/network/chat/MutableComponent; a
	formatList (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/network/chat/Component; b
	formatList (Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	formatList (Ljava/util/Collection;Lnet/minecraft/network/chat/Component;Ljava/util/function/Function;)Lnet/minecraft/network/chat/MutableComponent; a
	fromMessage (Lcom/mojang/brigadier/Message;)Lnet/minecraft/network/chat/Component; a
	getDisplayName (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/Component; a
	isTranslationResolvable (Lnet/minecraft/network/chat/Component;)Z b
	mergeStyles (Lnet/minecraft/network/chat/MutableComponent;Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; a
	resolveStyle (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Style;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/Style; a
	updateForEntity (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Optional;Lnet/minecraft/world/entity/Entity;I)Ljava/util/Optional; a
	updateForEntity (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	wrapInSquareBrackets (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/FilterMask rt
	FULLY_FILTERED a
	HASH c
	PASS_THROUGH b
	mask d
	type e
	apply (Ljava/lang/String;)Ljava/lang/String; a
	apply (Lnet/minecraft/network/chat/ChatMessageContent;)Lnet/minecraft/network/chat/Component; a
	isEmpty ()Z a
	isFullyFiltered ()Z b
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/chat/FilterMask; a
	setFiltered (I)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/chat/FilterMask;)V a
net/minecraft/network/chat/FilterMask$Type rt$a
	$VALUES d
	FULLY_FILTERED b
	PARTIALLY_FILTERED c
	PASS_THROUGH a
	$values ()[Lnet/minecraft/network/chat/FilterMask$Type; a
net/minecraft/network/chat/FormattedText ru
	EMPTY b
	STOP_ITERATION a
	composite (Ljava/util/List;)Lnet/minecraft/network/chat/FormattedText; a
	composite ([Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/network/chat/FormattedText; a
	of (Ljava/lang/String;)Lnet/minecraft/network/chat/FormattedText; e
	of (Ljava/lang/String;Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/FormattedText$ContentConsumer ru$a
net/minecraft/network/chat/FormattedText$StyledContentConsumer ru$b
net/minecraft/network/chat/HoverEvent rv
	LOGGER a
	action b
	value c
	deserialize (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/HoverEvent; a
	getAction ()Lnet/minecraft/network/chat/HoverEvent$Action; a
	getValue (Lnet/minecraft/network/chat/HoverEvent$Action;)Ljava/lang/Object; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/network/chat/HoverEvent$Action rv$a
	LOOKUP d
	SHOW_ENTITY c
	SHOW_ITEM b
	SHOW_TEXT a
	allowFromServer f
	argDeserializer g
	argSerializer h
	legacyArgDeserializer i
	name e
	cast (Ljava/lang/Object;)Ljava/lang/Object; b
	deserialize (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/HoverEvent; a
	deserializeFromLegacy (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/HoverEvent; a
	getByName (Ljava/lang/String;)Lnet/minecraft/network/chat/HoverEvent$Action; a
	getName ()Ljava/lang/String; b
	isAllowedFromServer ()Z a
	serializeArg (Ljava/lang/Object;)Lcom/google/gson/JsonElement; a
net/minecraft/network/chat/HoverEvent$EntityTooltipInfo rv$b
	id b
	linesCache d
	name c
	type a
	create (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/HoverEvent$EntityTooltipInfo; a
	create (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/HoverEvent$EntityTooltipInfo; a
	getTooltipLines ()Ljava/util/List; b
	serialize ()Lcom/google/gson/JsonElement; a
net/minecraft/network/chat/HoverEvent$ItemStackInfo rv$c
	count b
	item a
	itemStack d
	tag c
	create (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/HoverEvent$ItemStackInfo; a
	create (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/HoverEvent$ItemStackInfo; a
	getItemStack ()Lnet/minecraft/world/item/ItemStack; a
	serialize ()Lcom/google/gson/JsonElement; b
net/minecraft/network/chat/LastSeenMessages rw
	EMPTY a
	LAST_SEEN_MESSAGES_MAX_LENGTH b
	entries c
	entries ()Ljava/util/List; a
	updateHash (Ljava/io/DataOutput;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/chat/LastSeenMessages$Entry rw$a
	lastSignature b
	profileId a
	lastSignature ()Lnet/minecraft/network/chat/MessageSignature; b
	profileId ()Ljava/util/UUID; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/chat/LastSeenMessages$Update rw$b
	lastReceived b
	lastSeen a
	lastReceived ()Ljava/util/Optional; b
	lastSeen ()Lnet/minecraft/network/chat/LastSeenMessages; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/chat/LastSeenMessagesTracker rx
	result c
	size b
	status a
	get ()Lnet/minecraft/network/chat/LastSeenMessages; a
	push (Lnet/minecraft/network/chat/LastSeenMessages$Entry;)V a
net/minecraft/network/chat/LastSeenMessagesValidator ry
	NOT_FOUND a
	lastSeenMessages b
	pendingEntries c
	addPending (Lnet/minecraft/network/chat/LastSeenMessages$Entry;)V a
	calculateIndices (Ljava/util/List;[ILnet/minecraft/network/chat/LastSeenMessages$Entry;)I a
	hasDuplicateProfiles (Lnet/minecraft/network/chat/LastSeenMessages;)Z a
	pendingMessagesCount ()I a
	validateAndUpdate (Lnet/minecraft/network/chat/LastSeenMessages$Update;)Ljava/util/Set; a
net/minecraft/network/chat/LastSeenMessagesValidator$ErrorCondition ry$a
	$VALUES f
	DUPLICATED_PROFILES b
	OUT_OF_ORDER a
	REMOVED_MESSAGES d
	UNKNOWN_MESSAGES c
	message e
	$values ()[Lnet/minecraft/network/chat/LastSeenMessagesValidator$ErrorCondition; b
	message ()Ljava/lang/String; a
net/minecraft/network/chat/MessageSignature rz
	EMPTY a
	bytes b
	asByteBuffer ()Ljava/nio/ByteBuffer; b
	bytes ()[B c
	isEmpty ()Z a
	verify (Lnet/minecraft/util/SignatureValidator;Lnet/minecraft/network/chat/SignedMessageHeader;Lnet/minecraft/network/chat/SignedMessageBody;)Z a
	verify (Lnet/minecraft/util/SignatureValidator;Lnet/minecraft/network/chat/SignedMessageHeader;[B)Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/chat/MessageSigner sa
	profileId a
	salt c
	timeStamp b
	create (Ljava/util/UUID;)Lnet/minecraft/network/chat/MessageSigner; a
	isSystem ()Z b
	profileId ()Ljava/util/UUID; c
	salt ()J e
	system ()Lnet/minecraft/network/chat/MessageSigner; a
	timeStamp ()Ljava/time/Instant; d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/chat/MutableComponent sb
	contents c
	decomposedWith g
	siblings d
	style e
	visualOrderText f
	append (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; f
	append (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; b
	create (Lnet/minecraft/network/chat/ComponentContents;)Lnet/minecraft/network/chat/MutableComponent; a
	getContents ()Lnet/minecraft/network/chat/ComponentContents; b
	getSiblings ()Ljava/util/List; c
	getStyle ()Lnet/minecraft/network/chat/Style; a
	getVisualOrderText ()Lnet/minecraft/util/FormattedCharSequence; f
	setStyle (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; b
	withStyle (Ljava/util/function/UnaryOperator;)Lnet/minecraft/network/chat/MutableComponent; a
	withStyle (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/MutableComponent; a
	withStyle (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; c
	withStyle ([Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/OutgoingPlayerChatMessage sc
	create (Lnet/minecraft/network/chat/PlayerChatMessage;)Lnet/minecraft/network/chat/OutgoingPlayerChatMessage; a
	sendHeadersToRemainingPlayers (Lnet/minecraft/server/players/PlayerList;)V a
	sendToPlayer (Lnet/minecraft/server/level/ServerPlayer;ZLnet/minecraft/network/chat/ChatType$Bound;)V a
	serverContent ()Lnet/minecraft/network/chat/Component; a
net/minecraft/network/chat/OutgoingPlayerChatMessage$NotTracked sc$a
	message a
	sendHeadersToRemainingPlayers (Lnet/minecraft/server/players/PlayerList;)V a
	sendToPlayer (Lnet/minecraft/server/level/ServerPlayer;ZLnet/minecraft/network/chat/ChatType$Bound;)V a
	serverContent ()Lnet/minecraft/network/chat/Component; a
net/minecraft/network/chat/OutgoingPlayerChatMessage$Tracked sc$b
	message a
	playersWithFullMessage b
	sendHeadersToRemainingPlayers (Lnet/minecraft/server/players/PlayerList;)V a
	sendToPlayer (Lnet/minecraft/server/level/ServerPlayer;ZLnet/minecraft/network/chat/ChatType$Bound;)V a
	serverContent ()Lnet/minecraft/network/chat/Component; a
net/minecraft/network/chat/PlayerChatMessage sd
	MESSAGE_EXPIRES_AFTER_CLIENT b
	MESSAGE_EXPIRES_AFTER_SERVER a
	filterMask g
	headerSignature d
	signedBody e
	signedHeader c
	unsignedContent f
	filter (Lnet/minecraft/network/chat/FilterMask;)Lnet/minecraft/network/chat/PlayerChatMessage; a
	filter (Z)Lnet/minecraft/network/chat/PlayerChatMessage; a
	filterMask ()Lnet/minecraft/network/chat/FilterMask; m
	hasExpiredClient (Ljava/time/Instant;)Z b
	hasExpiredServer (Ljava/time/Instant;)Z a
	hasSignatureFrom (Ljava/util/UUID;)Z a
	headerSignature ()Lnet/minecraft/network/chat/MessageSignature; j
	isFullyFiltered ()Z h
	removeUnsignedContent ()Lnet/minecraft/network/chat/PlayerChatMessage; a
	salt ()J e
	serverContent ()Lnet/minecraft/network/chat/Component; c
	signedBody ()Lnet/minecraft/network/chat/SignedMessageBody; k
	signedContent ()Lnet/minecraft/network/chat/ChatMessageContent; b
	signedHeader ()Lnet/minecraft/network/chat/SignedMessageHeader; i
	signer ()Lnet/minecraft/network/chat/MessageSigner; f
	system (Lnet/minecraft/network/chat/ChatMessageContent;)Lnet/minecraft/network/chat/PlayerChatMessage; a
	timeStamp ()Ljava/time/Instant; d
	toLastSeenEntry ()Lnet/minecraft/network/chat/LastSeenMessages$Entry; g
	unsigned (Lnet/minecraft/network/chat/MessageSigner;Lnet/minecraft/network/chat/ChatMessageContent;)Lnet/minecraft/network/chat/PlayerChatMessage; a
	unsignedContent ()Ljava/util/Optional; l
	verify (Lnet/minecraft/network/chat/ChatSender;)Z a
	verify (Lnet/minecraft/util/SignatureValidator;)Z a
	verify (Lnet/minecraft/world/entity/player/ProfilePublicKey;)Z a
	withUnsignedContent (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/PlayerChatMessage; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/chat/PreviewableCommand se
	arguments a
	arguments ()Ljava/util/List; a
	collectArguments (Lcom/mojang/brigadier/context/CommandContextBuilder;)Ljava/util/List; a
	isPreviewed (Lcom/mojang/brigadier/tree/CommandNode;)Z a
	of (Lcom/mojang/brigadier/ParseResults;)Lnet/minecraft/network/chat/PreviewableCommand; a
net/minecraft/network/chat/PreviewableCommand$Argument se$a
	node a
	parsedValue b
	previewType c
	name ()Ljava/lang/String; a
	node ()Lcom/mojang/brigadier/tree/ArgumentCommandNode; b
	parsedValue ()Lcom/mojang/brigadier/context/ParsedArgument; c
	previewType ()Lnet/minecraft/commands/arguments/PreviewedArgument; d
net/minecraft/network/chat/SignedMessageBody sf
	HASH_SEPARATOR_BYTE a
	content b
	lastSeen e
	salt d
	timeStamp c
	content ()Lnet/minecraft/network/chat/ChatMessageContent; b
	hash ()Lcom/google/common/hash/HashCode; a
	lastSeen ()Lnet/minecraft/network/chat/LastSeenMessages; e
	salt ()J d
	timeStamp ()Ljava/time/Instant; c
	withContent (Lnet/minecraft/network/chat/ChatMessageContent;)Lnet/minecraft/network/chat/SignedMessageBody; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/chat/SignedMessageChain sg
	previousSignature a
	decoder ()Lnet/minecraft/network/chat/SignedMessageChain$Decoder; a
	encoder ()Lnet/minecraft/network/chat/SignedMessageChain$Encoder; b
	pack (Lnet/minecraft/util/Signer;Lnet/minecraft/network/chat/MessageSigner;Lnet/minecraft/network/chat/ChatMessageContent;Lnet/minecraft/network/chat/LastSeenMessages;)Lnet/minecraft/network/chat/SignedMessageChain$Link; a
	pack (Lnet/minecraft/util/Signer;Lnet/minecraft/network/chat/MessageSigner;Lnet/minecraft/network/chat/MessageSignature;Lnet/minecraft/network/chat/ChatMessageContent;Lnet/minecraft/network/chat/LastSeenMessages;)Lnet/minecraft/network/chat/MessageSignature; a
	unpack (Lnet/minecraft/network/chat/SignedMessageChain$Link;Lnet/minecraft/network/chat/MessageSignature;Lnet/minecraft/network/chat/MessageSigner;Lnet/minecraft/network/chat/ChatMessageContent;Lnet/minecraft/network/chat/LastSeenMessages;)Lnet/minecraft/network/chat/PlayerChatMessage; a
	unpack (Lnet/minecraft/network/chat/SignedMessageChain$Link;Lnet/minecraft/network/chat/MessageSigner;Lnet/minecraft/network/chat/ChatMessageContent;Lnet/minecraft/network/chat/LastSeenMessages;)Lnet/minecraft/network/chat/PlayerChatMessage; a
net/minecraft/network/chat/SignedMessageChain$Decoder sg$a
	UNSIGNED a
net/minecraft/network/chat/SignedMessageChain$Encoder sg$b
net/minecraft/network/chat/SignedMessageChain$Link sg$c
	signature a
	signature ()Lnet/minecraft/network/chat/MessageSignature; a
net/minecraft/network/chat/SignedMessageHeader sh
	previousSignature a
	sender b
	previousSignature ()Lnet/minecraft/network/chat/MessageSignature; a
	sender ()Ljava/util/UUID; b
	updateSignature (Lnet/minecraft/util/SignatureUpdater$Output;[B)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/chat/SignedMessageValidator si
	create (Lnet/minecraft/world/entity/player/ProfilePublicKey;Z)Lnet/minecraft/network/chat/SignedMessageValidator; a
	validateHeader (Lnet/minecraft/network/chat/SignedMessageHeader;Lnet/minecraft/network/chat/MessageSignature;[B)Lnet/minecraft/network/chat/SignedMessageValidator$State; a
	validateMessage (Lnet/minecraft/network/chat/PlayerChatMessage;)Lnet/minecraft/network/chat/SignedMessageValidator$State; a
net/minecraft/network/chat/SignedMessageValidator$KeyBased si$a
	isChainConsistent c
	lastSignature b
	validator a
	updateAndValidate (Lnet/minecraft/network/chat/SignedMessageHeader;Lnet/minecraft/network/chat/MessageSignature;[BZ)Lnet/minecraft/network/chat/SignedMessageValidator$State; b
	validateChain (Lnet/minecraft/network/chat/SignedMessageHeader;Lnet/minecraft/network/chat/MessageSignature;Z)Z a
	validateContents (Lnet/minecraft/network/chat/SignedMessageHeader;Lnet/minecraft/network/chat/MessageSignature;[BZ)Z a
	validateHeader (Lnet/minecraft/network/chat/SignedMessageHeader;Lnet/minecraft/network/chat/MessageSignature;[B)Lnet/minecraft/network/chat/SignedMessageValidator$State; a
	validateMessage (Lnet/minecraft/network/chat/PlayerChatMessage;)Lnet/minecraft/network/chat/SignedMessageValidator$State; a
net/minecraft/network/chat/SignedMessageValidator$State si$b
	$VALUES d
	BROKEN_CHAIN c
	NOT_SECURE b
	SECURE a
	$values ()[Lnet/minecraft/network/chat/SignedMessageValidator$State; a
net/minecraft/network/chat/SignedMessageValidator$Unsigned si$c
	enforcesSecureChat a
	validate (Lnet/minecraft/network/chat/MessageSignature;)Lnet/minecraft/network/chat/SignedMessageValidator$State; a
	validateHeader (Lnet/minecraft/network/chat/SignedMessageHeader;Lnet/minecraft/network/chat/MessageSignature;[B)Lnet/minecraft/network/chat/SignedMessageValidator$State; a
	validateMessage (Lnet/minecraft/network/chat/PlayerChatMessage;)Lnet/minecraft/network/chat/SignedMessageValidator$State; a
net/minecraft/network/chat/Style sj
	DEFAULT_FONT c
	EMPTY a
	FORMATTING_CODEC b
	bold e
	clickEvent j
	color d
	font m
	hoverEvent k
	insertion l
	italic f
	obfuscated i
	strikethrough h
	underlined g
	applyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; b
	applyFormats ([Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; a
	applyLegacyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; c
	applyTo (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/Style; a
	create (Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/network/chat/Style; a
	getClickEvent ()Lnet/minecraft/network/chat/ClickEvent; h
	getColor ()Lnet/minecraft/network/chat/TextColor; a
	getFont ()Lnet/minecraft/resources/ResourceLocation; k
	getHoverEvent ()Lnet/minecraft/network/chat/HoverEvent; i
	getInsertion ()Ljava/lang/String; j
	isBold ()Z b
	isEmpty ()Z g
	isItalic ()Z c
	isObfuscated ()Z f
	isStrikethrough ()Z d
	isUnderlined ()Z e
	withBold (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; a
	withClickEvent (Lnet/minecraft/network/chat/ClickEvent;)Lnet/minecraft/network/chat/Style; a
	withColor (I)Lnet/minecraft/network/chat/Style; a
	withColor (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; a
	withColor (Lnet/minecraft/network/chat/TextColor;)Lnet/minecraft/network/chat/Style; a
	withFont (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/network/chat/Style; a
	withHoverEvent (Lnet/minecraft/network/chat/HoverEvent;)Lnet/minecraft/network/chat/Style; a
	withInsertion (Ljava/lang/String;)Lnet/minecraft/network/chat/Style; a
	withItalic (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; b
	withObfuscated (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; e
	withStrikethrough (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; d
	withUnderlined (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; c
net/minecraft/network/chat/Style$Serializer sj$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/chat/Style; a
	getClickEvent (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/ClickEvent; c
	getFont (Lcom/google/gson/JsonObject;)Lnet/minecraft/resources/ResourceLocation; a
	getHoverEvent (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/HoverEvent; b
	getInsertion (Lcom/google/gson/JsonObject;)Ljava/lang/String; d
	getOptionalFlag (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; a
	getTextColor (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/TextColor; e
	serialize (Lnet/minecraft/network/chat/Style;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/chat/SubStringSource sk
	charStyles b
	plainText a
	reverseCharModifier c
	create (Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/network/chat/SubStringSource; a
	create (Lnet/minecraft/network/chat/FormattedText;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Ljava/util/function/UnaryOperator;)Lnet/minecraft/network/chat/SubStringSource; a
	getPlainText ()Ljava/lang/String; a
	substring (IIZ)Ljava/util/List; a
net/minecraft/network/chat/TextColor sl
	CODEC a
	CUSTOM_COLOR_PREFIX b
	LEGACY_FORMAT_TO_COLOR c
	NAMED_COLORS d
	name f
	value e
	formatValue ()Ljava/lang/String; c
	fromLegacyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/TextColor; a
	fromRgb (I)Lnet/minecraft/network/chat/TextColor; a
	getValue ()I a
	parseColor (Ljava/lang/String;)Lnet/minecraft/network/chat/TextColor; a
	serialize ()Ljava/lang/String; b
net/minecraft/network/chat/ThrowingComponent sm
	component a
	getComponent ()Lnet/minecraft/network/chat/Component; a
net/minecraft/network/chat/contents/BlockDataSource sn
	compiledPos b
	posPattern a
	compilePos (Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	compiledPos ()Lnet/minecraft/commands/arguments/coordinates/Coordinates; b
	posPattern ()Ljava/lang/String; a
net/minecraft/network/chat/contents/DataSource so
net/minecraft/network/chat/contents/EntityDataSource sp
	compiledSelector b
	selectorPattern a
	compileSelector (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	compiledSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; b
	selectorPattern ()Ljava/lang/String; a
net/minecraft/network/chat/contents/KeybindContents sq
	name b
	nameResolver c
	getName ()Ljava/lang/String; a
	getNestedComponent ()Lnet/minecraft/network/chat/Component; b
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/contents/KeybindResolver sr
	keyResolver a
	setKeyResolver (Ljava/util/function/Function;)V a
net/minecraft/network/chat/contents/LiteralContents ss
	text b
	text ()Ljava/lang/String; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/contents/NbtContents st
	LOGGER c
	compiledNbtPath b
	dataSource g
	interpreting d
	nbtPathPattern f
	separator e
	compileNbtPath (Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	getDataSource ()Lnet/minecraft/network/chat/contents/DataSource; d
	getNbtPath ()Ljava/lang/String; a
	getSeparator ()Ljava/util/Optional; c
	isInterpreting ()Z b
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/contents/ScoreContents su
	SCORER_PLACEHOLDER b
	name c
	objective e
	selector d
	findTargetName (Lnet/minecraft/commands/CommandSourceStack;)Ljava/lang/String; a
	getName ()Ljava/lang/String; a
	getObjective ()Ljava/lang/String; c
	getScore (Ljava/lang/String;Lnet/minecraft/commands/CommandSourceStack;)Ljava/lang/String; a
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; b
	parseSelector (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/contents/SelectorContents sv
	LOGGER c
	pattern d
	selector e
	separator b
	getPattern ()Ljava/lang/String; a
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; b
	getSeparator ()Ljava/util/Optional; c
	parseSelector (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/contents/StorageDataSource sw
	id a
	id ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/network/chat/contents/TranslatableContents sx
	FORMAT_PATTERN i
	NO_ARGS b
	TEXT_NULL d
	TEXT_PERCENT c
	args f
	decomposedParts h
	decomposedWith g
	key e
	decompose ()V c
	decomposeTemplate (Ljava/lang/String;Ljava/util/function/Consumer;)V a
	getArgs ()[Ljava/lang/Object; b
	getArgument (I)Lnet/minecraft/network/chat/FormattedText; a
	getKey ()Ljava/lang/String; a
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/contents/TranslatableFormatException sy
net/minecraft/network/protocol/Packet tc
	handle (Lnet/minecraft/network/PacketListener;)V a
	isSkippable ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/PacketFlow td
	$VALUES c
	CLIENTBOUND b
	SERVERBOUND a
	$values ()[Lnet/minecraft/network/protocol/PacketFlow; b
	getOpposite ()Lnet/minecraft/network/protocol/PacketFlow; a
net/minecraft/network/protocol/PacketUtils te
	LOGGER a
	ensureRunningOnSameThread (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;Lnet/minecraft/server/level/ServerLevel;)V a
	ensureRunningOnSameThread (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;Lnet/minecraft/util/thread/BlockableEventLoop;)V a
net/minecraft/network/protocol/game/ClientGamePacketListener tf
	handleAddEntity (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	handleAddExperienceOrb (Lnet/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket;)V a
	handleAddObjective (Lnet/minecraft/network/protocol/game/ClientboundSetObjectivePacket;)V a
	handleAddOrRemoveRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket;)V a
	handleAddPlayer (Lnet/minecraft/network/protocol/game/ClientboundAddPlayerPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ClientboundAnimatePacket;)V a
	handleAwardStats (Lnet/minecraft/network/protocol/game/ClientboundAwardStatsPacket;)V a
	handleBlockChangedAck (Lnet/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket;)V a
	handleBlockDestruction (Lnet/minecraft/network/protocol/game/ClientboundBlockDestructionPacket;)V a
	handleBlockEntityData (Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket;)V a
	handleBlockEvent (Lnet/minecraft/network/protocol/game/ClientboundBlockEventPacket;)V a
	handleBlockUpdate (Lnet/minecraft/network/protocol/game/ClientboundBlockUpdatePacket;)V a
	handleBossUpdate (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket;)V a
	handleChatPreview (Lnet/minecraft/network/protocol/game/ClientboundChatPreviewPacket;)V a
	handleChunkBlocksUpdate (Lnet/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket;)V a
	handleCommandSuggestions (Lnet/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket;)V a
	handleCommands (Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ClientboundContainerClosePacket;)V a
	handleContainerContent (Lnet/minecraft/network/protocol/game/ClientboundContainerSetContentPacket;)V a
	handleContainerSetData (Lnet/minecraft/network/protocol/game/ClientboundContainerSetDataPacket;)V a
	handleContainerSetSlot (Lnet/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket;)V a
	handleCustomChatCompletions (Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ClientboundCustomPayloadPacket;)V a
	handleCustomSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundCustomSoundPacket;)V a
	handleDeleteChat (Lnet/minecraft/network/protocol/game/ClientboundDeleteChatPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/game/ClientboundDisconnectPacket;)V a
	handleEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundEntityEventPacket;)V a
	handleEntityLinkPacket (Lnet/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket;)V a
	handleExplosion (Lnet/minecraft/network/protocol/game/ClientboundExplodePacket;)V a
	handleForgetLevelChunk (Lnet/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket;)V a
	handleGameEvent (Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket;)V a
	handleHorseScreenOpen (Lnet/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket;)V a
	handleInitializeBorder (Lnet/minecraft/network/protocol/game/ClientboundInitializeBorderPacket;)V a
	handleItemCooldown (Lnet/minecraft/network/protocol/game/ClientboundCooldownPacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ClientboundKeepAlivePacket;)V a
	handleLevelChunkWithLight (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket;)V a
	handleLevelEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelEventPacket;)V a
	handleLightUpdatePacket (Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacket;)V a
	handleLogin (Lnet/minecraft/network/protocol/game/ClientboundLoginPacket;)V a
	handleLookAt (Lnet/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket;)V a
	handleMapItemData (Lnet/minecraft/network/protocol/game/ClientboundMapItemDataPacket;)V a
	handleMerchantOffers (Lnet/minecraft/network/protocol/game/ClientboundMerchantOffersPacket;)V a
	handleMoveEntity (Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ClientboundPlayerPositionPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ClientboundMoveVehiclePacket;)V a
	handleOpenBook (Lnet/minecraft/network/protocol/game/ClientboundOpenBookPacket;)V a
	handleOpenScreen (Lnet/minecraft/network/protocol/game/ClientboundOpenScreenPacket;)V a
	handleOpenSignEditor (Lnet/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket;)V a
	handleParticleEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelParticlesPacket;)V a
	handlePing (Lnet/minecraft/network/protocol/game/ClientboundPingPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket;)V a
	handlePlayerChat (Lnet/minecraft/network/protocol/game/ClientboundPlayerChatPacket;)V a
	handlePlayerChatHeader (Lnet/minecraft/network/protocol/game/ClientboundPlayerChatHeaderPacket;)V a
	handlePlayerCombatEnd (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket;)V a
	handlePlayerCombatEnter (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket;)V a
	handlePlayerCombatKill (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket;)V a
	handlePlayerInfo (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket;)V a
	handleRemoveEntities (Lnet/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket;)V a
	handleRemoveMobEffect (Lnet/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket;)V a
	handleResourcePack (Lnet/minecraft/network/protocol/game/ClientboundResourcePackPacket;)V a
	handleRespawn (Lnet/minecraft/network/protocol/game/ClientboundRespawnPacket;)V a
	handleRotateMob (Lnet/minecraft/network/protocol/game/ClientboundRotateHeadPacket;)V a
	handleSelectAdvancementsTab (Lnet/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket;)V a
	handleServerData (Lnet/minecraft/network/protocol/game/ClientboundServerDataPacket;)V a
	handleSetBorderCenter (Lnet/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket;)V a
	handleSetBorderLerpSize (Lnet/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket;)V a
	handleSetBorderSize (Lnet/minecraft/network/protocol/game/ClientboundSetBorderSizePacket;)V a
	handleSetBorderWarningDelay (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket;)V a
	handleSetBorderWarningDistance (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket;)V a
	handleSetCamera (Lnet/minecraft/network/protocol/game/ClientboundSetCameraPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket;)V a
	handleSetChunkCacheCenter (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket;)V a
	handleSetChunkCacheRadius (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket;)V a
	handleSetDisplayChatPreview (Lnet/minecraft/network/protocol/game/ClientboundSetDisplayChatPreviewPacket;)V a
	handleSetDisplayObjective (Lnet/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket;)V a
	handleSetEntityData (Lnet/minecraft/network/protocol/game/ClientboundSetEntityDataPacket;)V a
	handleSetEntityMotion (Lnet/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket;)V a
	handleSetEntityPassengersPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPassengersPacket;)V a
	handleSetEquipment (Lnet/minecraft/network/protocol/game/ClientboundSetEquipmentPacket;)V a
	handleSetExperience (Lnet/minecraft/network/protocol/game/ClientboundSetExperiencePacket;)V a
	handleSetHealth (Lnet/minecraft/network/protocol/game/ClientboundSetHealthPacket;)V a
	handleSetPlayerTeamPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket;)V a
	handleSetScore (Lnet/minecraft/network/protocol/game/ClientboundSetScorePacket;)V a
	handleSetSimulationDistance (Lnet/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket;)V a
	handleSetSpawn (Lnet/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket;)V a
	handleSetTime (Lnet/minecraft/network/protocol/game/ClientboundSetTimePacket;)V a
	handleSoundEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundEntityPacket;)V a
	handleSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundPacket;)V a
	handleStopSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundStopSoundPacket;)V a
	handleSystemChat (Lnet/minecraft/network/protocol/game/ClientboundSystemChatPacket;)V a
	handleTabListCustomisation (Lnet/minecraft/network/protocol/game/ClientboundTabListPacket;)V a
	handleTagQueryPacket (Lnet/minecraft/network/protocol/game/ClientboundTagQueryPacket;)V a
	handleTakeItemEntity (Lnet/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket;)V a
	handleTeleportEntity (Lnet/minecraft/network/protocol/game/ClientboundTeleportEntityPacket;)V a
	handleTitlesClear (Lnet/minecraft/network/protocol/game/ClientboundClearTitlesPacket;)V a
	handleUpdateAdvancementsPacket (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
	handleUpdateAttributes (Lnet/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket;)V a
	handleUpdateMobEffect (Lnet/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket;)V a
	handleUpdateRecipes (Lnet/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket;)V a
	handleUpdateTags (Lnet/minecraft/network/protocol/game/ClientboundUpdateTagsPacket;)V a
	setActionBarText (Lnet/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket;)V a
	setSubtitleText (Lnet/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket;)V a
	setTitleText (Lnet/minecraft/network/protocol/game/ClientboundSetTitleTextPacket;)V a
	setTitlesAnimation (Lnet/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket;)V a
net/minecraft/network/protocol/game/ClientboundAddEntityPacket tg
	LIMIT b
	MAGICAL_QUANTIZATION a
	data o
	id c
	type e
	uuid d
	x f
	xRot l
	xa i
	y g
	yHeadRot n
	yRot m
	ya j
	z h
	za k
	getData ()I n
	getId ()I b
	getType ()Lnet/minecraft/world/entity/EntityType; d
	getUUID ()Ljava/util/UUID; c
	getX ()D e
	getXRot ()F k
	getXa ()D h
	getY ()D f
	getYHeadRot ()F m
	getYRot ()F l
	getYa ()D i
	getZ ()D g
	getZa ()D j
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket th
	id a
	value e
	x b
	y c
	z d
	getId ()I b
	getValue ()I f
	getX ()D c
	getY ()D d
	getZ ()D e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAddPlayerPacket ti
	entityId a
	playerId b
	x c
	xRot g
	y d
	yRot f
	z e
	getEntityId ()I b
	getPlayerId ()Ljava/util/UUID; c
	getX ()D d
	getY ()D e
	getZ ()D f
	getxRot ()B h
	getyRot ()B g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAnimatePacket tj
	CRITICAL_HIT e
	HURT b
	MAGIC_CRITICAL_HIT f
	SWING_MAIN_HAND a
	SWING_OFF_HAND d
	WAKE_UP c
	action h
	id g
	getAction ()I c
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAwardStatsPacket tk
	stats a
	getStats ()Ljava/util/Map; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	readStatCap (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/stats/StatType;)Lnet/minecraft/stats/Stat; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeStatCap (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/stats/Stat;)V a
net/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket tl
	sequence a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	sequence ()I b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockDestructionPacket tm
	id a
	pos b
	progress c
	getId ()I b
	getPos ()Lnet/minecraft/core/BlockPos; c
	getProgress ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket tn
	pos a
	tag c
	type b
	create (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	create (Lnet/minecraft/world/level/block/entity/BlockEntity;Ljava/util/function/Function;)Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getPos ()Lnet/minecraft/core/BlockPos; b
	getTag ()Lnet/minecraft/nbt/CompoundTag; d
	getType ()Lnet/minecraft/world/level/block/entity/BlockEntityType; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockEventPacket to
	b0 b
	b1 c
	block d
	pos a
	getB0 ()I c
	getB1 ()I d
	getBlock ()Lnet/minecraft/world/level/block/Block; e
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket tp
	blockState b
	pos a
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getPos ()Lnet/minecraft/core/BlockPos; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket tq
	FLAG_DARKEN a
	FLAG_FOG c
	FLAG_MUSIC b
	REMOVE_OPERATION f
	id d
	operation e
	createAddPacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; a
	createRemovePacket (Ljava/util/UUID;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; a
	createUpdateNamePacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; c
	createUpdateProgressPacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; b
	createUpdatePropertiesPacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; e
	createUpdateStylePacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; d
	dispatch (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	encodeProperties (ZZZ)I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$AddOperation tq$a
	color c
	createWorldFog g
	darkenScreen e
	name a
	overlay d
	playMusic f
	progress b
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler tq$b
	add (Ljava/util/UUID;Lnet/minecraft/network/chat/Component;FLnet/minecraft/world/BossEvent$BossBarColor;Lnet/minecraft/world/BossEvent$BossBarOverlay;ZZZ)V a
	remove (Ljava/util/UUID;)V a
	updateName (Ljava/util/UUID;Lnet/minecraft/network/chat/Component;)V a
	updateProgress (Ljava/util/UUID;F)V a
	updateProperties (Ljava/util/UUID;ZZZ)V a
	updateStyle (Ljava/util/UUID;Lnet/minecraft/world/BossEvent$BossBarColor;Lnet/minecraft/world/BossEvent$BossBarOverlay;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation tq$c
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType tq$d
	$VALUES h
	ADD a
	REMOVE b
	UPDATE_NAME d
	UPDATE_PROGRESS c
	UPDATE_PROPERTIES f
	UPDATE_STYLE e
	reader g
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateNameOperation tq$e
	name a
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateProgressOperation tq$f
	progress a
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdatePropertiesOperation tq$g
	createWorldFog c
	darkenScreen a
	playMusic b
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateStyleOperation tq$h
	color a
	overlay b
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket tr
	difficulty a
	locked b
	getDifficulty ()Lnet/minecraft/world/Difficulty; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isLocked ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundChatPreviewPacket ts
	preview b
	queryId a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z a
	preview ()Lnet/minecraft/network/chat/Component; c
	queryId ()I b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundClearTitlesPacket tt
	resetTimes a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	shouldResetTimes ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket tu
	id a
	suggestions b
	getId ()I b
	getSuggestions ()Lcom/mojang/brigadier/suggestion/Suggestions; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket tv
	FLAG_CUSTOM_SUGGESTIONS d
	FLAG_EXECUTABLE b
	FLAG_REDIRECT c
	MASK_TYPE a
	TYPE_ARGUMENT g
	TYPE_LITERAL f
	TYPE_ROOT e
	entries i
	rootIndex h
	createEntries (Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Ljava/util/List; a
	createEntry (Lcom/mojang/brigadier/tree/CommandNode;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry; a
	enumerateNodes (Lcom/mojang/brigadier/tree/RootCommandNode;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; a
	getRoot (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/tree/RootCommandNode; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;B)Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeStub; a
	readNode (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry; b
	validateEntries (Ljava/util/List;)V a
	validateEntries (Ljava/util/List;Ljava/util/function/BiPredicate;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket$ArgumentNodeStub tv$a
	argumentType b
	id a
	suggestionId c
	build (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	getSuggestionId (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lnet/minecraft/resources/ResourceLocation; a
	serializeCap (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;)V a
	serializeCap (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry tv$b
	children d
	flags b
	redirect c
	stub a
	canBuild (Lit/unimi/dsi/fastutil/ints/IntSet;)Z a
	canResolve (Lit/unimi/dsi/fastutil/ints/IntSet;)Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket$LiteralNodeStub tv$c
	id a
	build (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeResolver tv$d
	context a
	entries b
	nodes c
	resolve (I)Lcom/mojang/brigadier/tree/CommandNode; a
net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeStub tv$e
	build (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundContainerClosePacket tw
	containerId a
	getContainerId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket tx
	carriedItem d
	containerId a
	items c
	stateId b
	getCarriedItem ()Lnet/minecraft/world/item/ItemStack; d
	getContainerId ()I b
	getItems ()Ljava/util/List; c
	getStateId ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundContainerSetDataPacket ty
	containerId a
	id b
	value c
	getContainerId ()I b
	getId ()I c
	getValue ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket tz
	CARRIED_ITEM a
	PLAYER_INVENTORY b
	containerId c
	itemStack f
	slot e
	stateId d
	getContainerId ()I b
	getItem ()Lnet/minecraft/world/item/ItemStack; d
	getSlot ()I c
	getStateId ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCooldownPacket ua
	duration b
	item a
	getDuration ()I c
	getItem ()Lnet/minecraft/world/item/Item; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket ub
	action a
	entries b
	action ()Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action; b
	entries ()Ljava/util/List; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action ub$a
	$VALUES d
	ADD a
	REMOVE b
	SET c
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action; a
net/minecraft/network/protocol/game/ClientboundCustomPayloadPacket uc
	BRAND a
	DEBUG_BEE l
	DEBUG_BRAIN k
	DEBUG_GAME_EVENT q
	DEBUG_GAME_EVENT_LISTENER r
	DEBUG_GAME_TEST_ADD_MARKER n
	DEBUG_GAME_TEST_CLEAR o
	DEBUG_GOAL_SELECTOR j
	DEBUG_HIVE m
	DEBUG_NEIGHBORSUPDATE_PACKET c
	DEBUG_PATHFINDING_PACKET b
	DEBUG_POI_ADDED_PACKET g
	DEBUG_POI_REMOVED_PACKET h
	DEBUG_POI_TICKET_COUNT_PACKET f
	DEBUG_RAIDS p
	DEBUG_STRUCTURES_PACKET d
	DEBUG_VILLAGE_SECTIONS i
	DEBUG_WORLDGENATTEMPT_PACKET e
	MAX_PAYLOAD_SIZE s
	data u
	identifier t
	getData ()Lnet/minecraft/network/FriendlyByteBuf; c
	getIdentifier ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCustomSoundPacket ud
	LOCATION_ACCURACY a
	name b
	pitch h
	seed i
	source c
	volume g
	x d
	y e
	z f
	getName ()Lnet/minecraft/resources/ResourceLocation; b
	getPitch ()F h
	getSeed ()J i
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F g
	getX ()D d
	getY ()D e
	getZ ()D f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundDeleteChatPacket ue
	messageSignature a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	messageSignature ()Lnet/minecraft/network/chat/MessageSignature; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundDisconnectPacket uf
	reason a
	getReason ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundEntityEventPacket ug
	entityId a
	eventId b
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getEventId ()B b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundExplodePacket uh
	knockbackX f
	knockbackY g
	knockbackZ h
	power d
	toBlow e
	x a
	y b
	z c
	getKnockbackX ()F b
	getKnockbackY ()F c
	getKnockbackZ ()F d
	getPower ()F h
	getToBlow ()Ljava/util/List; i
	getX ()D e
	getY ()D f
	getZ ()D g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket ui
	x a
	z b
	getX ()I b
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundGameEventPacket uj
	ARROW_HIT_PLAYER g
	CHANGE_GAME_MODE d
	DEMO_EVENT f
	DEMO_PARAM_HINT_1 n
	DEMO_PARAM_HINT_2 o
	DEMO_PARAM_HINT_3 p
	DEMO_PARAM_HINT_4 q
	DEMO_PARAM_INTRO m
	GUARDIAN_ELDER_EFFECT k
	IMMEDIATE_RESPAWN l
	NO_RESPAWN_BLOCK_AVAILABLE a
	PUFFER_FISH_STING j
	RAIN_LEVEL_CHANGE h
	START_RAINING b
	STOP_RAINING c
	THUNDER_LEVEL_CHANGE i
	WIN_GAME e
	event r
	param s
	getEvent ()Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket$Type; b
	getParam ()F c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundGameEventPacket$Type uj$a
	TYPES a
	id b
net/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket uk
	containerId a
	entityId c
	size b
	getContainerId ()I b
	getEntityId ()I d
	getSize ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundInitializeBorderPacket ul
	lerpTime e
	newAbsoluteMaxSize f
	newCenterX a
	newCenterZ b
	newSize d
	oldSize c
	warningBlocks g
	warningTime h
	getLerpTime ()J f
	getNewAbsoluteMaxSize ()I g
	getNewCenterX ()D b
	getNewCenterZ ()D c
	getNewSize ()D d
	getOldSize ()D e
	getWarningBlocks ()I i
	getWarningTime ()I h
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundKeepAlivePacket um
	id a
	getId ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData un
	TWO_MEGABYTES a
	blockEntitiesData d
	buffer c
	heightmaps b
	calculateChunkSize (Lnet/minecraft/world/level/chunk/LevelChunk;)I a
	extractChunkData (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	getBlockEntitiesTags (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityTagOutput;II)V a
	getBlockEntitiesTagsConsumer (II)Ljava/util/function/Consumer; a
	getHeightmaps ()Lnet/minecraft/nbt/CompoundTag; b
	getReadBuffer ()Lnet/minecraft/network/FriendlyByteBuf; a
	getWriteBuffer ()Lio/netty/buffer/ByteBuf; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityInfo un$a
	packedXZ a
	tag d
	type c
	y b
	create (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityInfo; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityTagOutput un$b
net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket uo
	chunkData c
	lightData d
	x a
	z b
	getChunkData ()Lnet/minecraft/network/protocol/game/ClientboundLevelChunkPacketData; d
	getLightData ()Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData; e
	getX ()I b
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelEventPacket up
	data c
	globalEvent d
	pos b
	type a
	getData ()I d
	getPos ()Lnet/minecraft/core/BlockPos; e
	getType ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isGlobalEvent ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket uq
	count h
	maxSpeed g
	overrideLimiter i
	particle j
	x a
	xDist d
	y b
	yDist e
	z c
	zDist f
	getCount ()I j
	getMaxSpeed ()F i
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; k
	getX ()D c
	getXDist ()F f
	getY ()D d
	getYDist ()F g
	getZ ()D e
	getZDist ()F h
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isOverrideLimiter ()Z b
	readParticle (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/core/particles/ParticleType;)Lnet/minecraft/core/particles/ParticleOptions; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLightUpdatePacket ur
	lightData c
	x a
	z b
	getLightData ()Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData; d
	getX ()I b
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLightUpdatePacketData us
	blockUpdates f
	blockYMask b
	emptyBlockYMask d
	emptySkyYMask c
	skyUpdates e
	skyYMask a
	trustEdges g
	getBlockUpdates ()Ljava/util/List; f
	getBlockYMask ()Ljava/util/BitSet; d
	getEmptyBlockYMask ()Ljava/util/BitSet; e
	getEmptySkyYMask ()Ljava/util/BitSet; b
	getSkyUpdates ()Ljava/util/List; c
	getSkyYMask ()Ljava/util/BitSet; a
	getTrustEdges ()Z g
	prepareSectionData (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/lighting/LevelLightEngine;Lnet/minecraft/world/level/LightLayer;ILjava/util/BitSet;Ljava/util/BitSet;Ljava/util/List;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLoginPacket ut
	chunkRadius k
	dimension h
	dimensionType g
	gameType c
	hardcore b
	isDebug o
	isFlat p
	lastDeathLocation q
	levels e
	maxPlayers j
	playerId a
	previousGameType d
	reducedDebugInfo m
	registryHolder f
	seed i
	showDeathScreen n
	simulationDistance l
	chunkRadius ()I l
	dimension ()Lnet/minecraft/resources/ResourceKey; i
	dimensionType ()Lnet/minecraft/resources/ResourceKey; h
	gameType ()Lnet/minecraft/world/level/GameType; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	hardcore ()Z c
	isDebug ()Z p
	isFlat ()Z q
	lastDeathLocation ()Ljava/util/Optional; r
	levels ()Ljava/util/Set; f
	maxPlayers ()I k
	playerId ()I b
	previousGameType ()Lnet/minecraft/world/level/GameType; e
	reducedDebugInfo ()Z n
	registryHolder ()Lnet/minecraft/core/RegistryAccess$Frozen; g
	seed ()J j
	showDeathScreen ()Z o
	simulationDistance ()I m
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMapItemDataPacket uu
	colorPatch e
	decorations d
	locked c
	mapId a
	scale b
	applyToMap (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	getMapId ()I b
	getScale ()B c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isLocked ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMerchantOffersPacket uv
	canRestock f
	containerId a
	offers b
	showProgress e
	villagerLevel c
	villagerXp d
	canRestock ()Z g
	getContainerId ()I b
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; c
	getVillagerLevel ()I d
	getVillagerXp ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	showProgress ()Z f
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket uw
	entityId a
	hasPos i
	hasRot h
	onGround g
	xRot f
	xa b
	yRot e
	ya c
	za d
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getXa ()S b
	getYa ()S c
	getZa ()S d
	getxRot ()B f
	getyRot ()B e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	hasPosition ()Z h
	hasRotation ()Z g
	isOnGround ()Z i
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos uw$a
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot uw$b
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot uw$c
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMoveVehiclePacket ux
	x a
	xRot e
	y b
	yRot d
	z c
	getX ()D b
	getXRot ()F f
	getY ()D c
	getYRot ()F e
	getZ ()D d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundOpenBookPacket uy
	hand a
	getHand ()Lnet/minecraft/world/InteractionHand; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundOpenScreenPacket uz
	containerId a
	title c
	type b
	getContainerId ()I b
	getTitle ()Lnet/minecraft/network/chat/Component; d
	getType ()Lnet/minecraft/world/inventory/MenuType; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket va
	pos a
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPingPacket vb
	id a
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket vc
	containerId a
	recipe b
	getContainerId ()I c
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket vd
	FLAG_CAN_FLY c
	FLAG_FLYING b
	FLAG_INSTABUILD d
	FLAG_INVULNERABLE a
	canFly g
	flyingSpeed i
	instabuild h
	invulnerable e
	isFlying f
	walkingSpeed j
	canFly ()Z d
	canInstabuild ()Z e
	getFlyingSpeed ()F f
	getWalkingSpeed ()F g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isFlying ()Z c
	isInvulnerable ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerChatHeaderPacket ve
	bodyDigest c
	header a
	headerSignature b
	bodyDigest ()[B d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	header ()Lnet/minecraft/network/chat/SignedMessageHeader; b
	headerSignature ()Lnet/minecraft/network/chat/MessageSignature; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerChatPacket vf
	chatType b
	message a
	chatType ()Lnet/minecraft/network/chat/ChatType$BoundNetwork; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z a
	message ()Lnet/minecraft/network/chat/PlayerChatMessage; b
	resolveChatType (Lnet/minecraft/core/RegistryAccess;)Ljava/util/Optional; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket vg
	duration b
	killerId a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket vh
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket vi
	killerId b
	message c
	playerId a
	getKillerId ()I b
	getMessage ()Lnet/minecraft/network/chat/Component; d
	getPlayerId ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket vj
	action a
	entries b
	createPlayerUpdate (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$PlayerUpdate; a
	getAction ()Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action; c
	getEntries ()Ljava/util/List; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action vj$a
	$VALUES f
	ADD_PLAYER a
	REMOVE_PLAYER e
	UPDATE_DISPLAY_NAME d
	UPDATE_GAME_MODE b
	UPDATE_LATENCY c
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$PlayerUpdate; a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$PlayerUpdate;)V a
net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$PlayerUpdate vj$b
	displayName d
	gameMode b
	latency a
	profile c
	profilePublicKey e
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getGameMode ()Lnet/minecraft/world/level/GameType; c
	getLatency ()I b
	getProfile ()Lcom/mojang/authlib/GameProfile; a
	getProfilePublicKey ()Lnet/minecraft/world/entity/player/ProfilePublicKey$Data; e
net/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket vk
	atEntity g
	entity d
	fromAnchor e
	toAnchor f
	x a
	y b
	z c
	getFromAnchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; b
	getPosition (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/phys/Vec3; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket vl
	dismountVehicle h
	id g
	relativeArguments f
	x a
	xRot e
	y b
	yRot d
	z c
	getId ()I g
	getRelativeArguments ()Ljava/util/Set; i
	getX ()D b
	getXRot ()F f
	getY ()D c
	getYRot ()F e
	getZ ()D d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	requestDismountVehicle ()Z h
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket$RelativeArgument vl$a
	$VALUES g
	X a
	X_ROT e
	Y b
	Y_ROT d
	Z c
	bit f
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundPlayerPositionPacket$RelativeArgument; b
	getMask ()I a
	isSet (I)Z b
	pack (Ljava/util/Set;)I a
	unpack (I)Ljava/util/Set; a
net/minecraft/network/protocol/game/ClientboundRecipePacket vm
	bookSettings d
	recipes b
	state a
	toHighlight c
	getBookSettings ()Lnet/minecraft/stats/RecipeBookSettings; d
	getHighlights ()Ljava/util/List; c
	getRecipes ()Ljava/util/List; b
	getState ()Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State; e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRecipePacket$State vm$a
	$VALUES d
	ADD b
	INIT a
	REMOVE c
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State; a
net/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket vn
	entityIds a
	getEntityIds ()Lit/unimi/dsi/fastutil/ints/IntList; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket vo
	effect b
	entityId a
	getEffect ()Lnet/minecraft/world/effect/MobEffect; b
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundResourcePackPacket vp
	MAX_HASH_LENGTH a
	hash c
	prompt e
	required d
	url b
	getHash ()Ljava/lang/String; c
	getPrompt ()Lnet/minecraft/network/chat/Component; e
	getUrl ()Ljava/lang/String; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isRequired ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRespawnPacket vq
	dimension b
	dimensionType a
	isDebug f
	isFlat g
	keepAllPlayerData h
	lastDeathLocation i
	playerGameType d
	previousPlayerGameType e
	seed c
	getDimension ()Lnet/minecraft/resources/ResourceKey; c
	getDimensionType ()Lnet/minecraft/resources/ResourceKey; b
	getLastDeathLocation ()Ljava/util/Optional; j
	getPlayerGameType ()Lnet/minecraft/world/level/GameType; e
	getPreviousPlayerGameType ()Lnet/minecraft/world/level/GameType; f
	getSeed ()J d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isDebug ()Z g
	isFlat ()Z h
	shouldKeepAllPlayerData ()Z i
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRotateHeadPacket vr
	entityId a
	yHeadRot b
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getYHeadRot ()B b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket vs
	POS_IN_SECTION_BITS a
	positions c
	sectionPos b
	states d
	suppressLightUpdates e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	runUpdates (Ljava/util/function/BiConsumer;)V a
	shouldSuppressLightUpdates ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket vt
	tab a
	getTab ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundServerDataPacket vu
	enforcesSecureChat d
	iconBase64 b
	motd a
	previewsChat c
	enforcesSecureChat ()Z e
	getIconBase64 ()Ljava/util/Optional; c
	getMotd ()Ljava/util/Optional; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	previewsChat ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket vv
	text a
	getText ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket vw
	newCenterX a
	newCenterZ b
	getNewCenterX ()D c
	getNewCenterZ ()D b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket vx
	lerpTime c
	newSize b
	oldSize a
	getLerpTime ()J d
	getNewSize ()D c
	getOldSize ()D b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderSizePacket vy
	size a
	getSize ()D b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket vz
	warningDelay a
	getWarningDelay ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket wa
	warningBlocks a
	getWarningBlocks ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetCameraPacket wb
	cameraId a
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket wc
	slot a
	getSlot ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket wd
	x a
	z b
	getX ()I b
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket we
	radius a
	getRadius ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket wf
	angle b
	pos a
	getAngle ()F c
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetDisplayChatPreviewPacket wg
	enabled a
	enabled ()Z b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket wh
	objectiveName b
	slot a
	getObjectiveName ()Ljava/lang/String; c
	getSlot ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket wi
	id a
	packedItems b
	getId ()I c
	getUnpackedData ()Ljava/util/List; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket wj
	destId b
	sourceId a
	getDestId ()I c
	getSourceId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket wk
	id a
	xa b
	ya c
	za d
	getId ()I b
	getXa ()I c
	getYa ()I d
	getZa ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket wl
	CONTINUE_MASK a
	entity b
	slots c
	getEntity ()I b
	getSlots ()Ljava/util/List; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetExperiencePacket wm
	experienceLevel c
	experienceProgress a
	totalExperience b
	getExperienceLevel ()I d
	getExperienceProgress ()F b
	getTotalExperience ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetHealthPacket wn
	food b
	health a
	saturation c
	getFood ()I c
	getHealth ()F b
	getSaturation ()F d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetObjectivePacket wo
	METHOD_ADD a
	METHOD_CHANGE c
	METHOD_REMOVE b
	displayName e
	method g
	objectiveName d
	renderType f
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getMethod ()I d
	getObjectiveName ()Ljava/lang/String; b
	getRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetPassengersPacket wp
	passengers b
	vehicle a
	getPassengers ()[I b
	getVehicle ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket wq
	MAX_COLLISION_LENGTH g
	MAX_VISIBILITY_LENGTH f
	METHOD_ADD a
	METHOD_CHANGE c
	METHOD_JOIN d
	METHOD_LEAVE e
	METHOD_REMOVE b
	method h
	name i
	parameters k
	players j
	createAddOrModifyPacket (Lnet/minecraft/world/scores/PlayerTeam;Z)Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket; a
	createPlayerPacket (Lnet/minecraft/world/scores/PlayerTeam;Ljava/lang/String;Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action;)Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket; a
	createRemovePacket (Lnet/minecraft/world/scores/PlayerTeam;)Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket; a
	getName ()Ljava/lang/String; d
	getParameters ()Ljava/util/Optional; f
	getPlayerAction ()Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action; b
	getPlayers ()Ljava/util/Collection; e
	getTeamAction ()Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	shouldHaveParameters (I)Z b
	shouldHavePlayerList (I)Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action wq$a
	$VALUES c
	ADD a
	REMOVE b
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action; a
net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Parameters wq$b
	collisionRule e
	color f
	displayName a
	nametagVisibility d
	options g
	playerPrefix b
	playerSuffix c
	getCollisionRule ()Ljava/lang/String; e
	getColor ()Lnet/minecraft/ChatFormatting; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; a
	getNametagVisibility ()Ljava/lang/String; d
	getOptions ()I b
	getPlayerPrefix ()Lnet/minecraft/network/chat/Component; f
	getPlayerSuffix ()Lnet/minecraft/network/chat/Component; g
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetScorePacket wr
	method d
	objectiveName b
	owner a
	score c
	getMethod ()Lnet/minecraft/server/ServerScoreboard$Method; e
	getObjectiveName ()Ljava/lang/String; c
	getOwner ()Ljava/lang/String; b
	getScore ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket ws
	simulationDistance a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	simulationDistance ()I b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket wt
	text a
	getText ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetTimePacket wu
	dayTime b
	gameTime a
	getDayTime ()J c
	getGameTime ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetTitleTextPacket wv
	text a
	getText ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket ww
	fadeIn a
	fadeOut c
	stay b
	getFadeIn ()I b
	getFadeOut ()I d
	getStay ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSoundEntityPacket wx
	id c
	pitch e
	seed f
	sound a
	source b
	volume d
	getId ()I d
	getPitch ()F f
	getSeed ()J g
	getSound ()Lnet/minecraft/sounds/SoundEvent; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSoundPacket wy
	LOCATION_ACCURACY a
	pitch h
	seed i
	sound b
	source c
	volume g
	x d
	y e
	z f
	getPitch ()F h
	getSeed ()J i
	getSound ()Lnet/minecraft/sounds/SoundEvent; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F g
	getX ()D d
	getY ()D e
	getZ ()D f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundStopSoundPacket wz
	HAS_SOUND b
	HAS_SOURCE a
	name c
	source d
	getName ()Lnet/minecraft/resources/ResourceLocation; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSystemChatPacket xa
	content a
	overlay b
	content ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z a
	overlay ()Z c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTabListPacket xb
	footer b
	header a
	getFooter ()Lnet/minecraft/network/chat/Component; c
	getHeader ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTagQueryPacket xc
	tag b
	transactionId a
	getTag ()Lnet/minecraft/nbt/CompoundTag; c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket xd
	amount c
	itemId a
	playerId b
	getAmount ()I d
	getItemId ()I b
	getPlayerId ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket xe
	id a
	onGround g
	x b
	xRot f
	y c
	yRot e
	z d
	getId ()I b
	getX ()D c
	getY ()D d
	getZ ()D e
	getxRot ()B g
	getyRot ()B f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isOnGround ()Z h
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket xf
	added b
	progress d
	removed c
	reset a
	getAdded ()Ljava/util/Map; b
	getProgress ()Ljava/util/Map; d
	getRemoved ()Ljava/util/Set; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	shouldReset ()Z e
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket xg
	attributes b
	entityId a
	getEntityId ()I b
	getValues ()Ljava/util/List; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket$AttributeSnapshot xg$a
	attribute a
	base b
	modifiers c
	getAttribute ()Lnet/minecraft/world/entity/ai/attributes/Attribute; a
	getBase ()D b
	getModifiers ()Ljava/util/Collection; c
net/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket xh
	FLAG_AMBIENT b
	FLAG_SHOW_ICON d
	FLAG_VISIBLE c
	LONG_DURATION_THRESHOLD a
	effect f
	effectAmplifier g
	effectDurationTicks h
	entityId e
	factorData j
	flags i
	effectShowsIcon ()Z i
	getEffect ()Lnet/minecraft/world/effect/MobEffect; d
	getEffectAmplifier ()B e
	getEffectDurationTicks ()I f
	getEntityId ()I c
	getFactorData ()Lnet/minecraft/world/effect/MobEffectInstance$FactorData; j
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isEffectAmbient ()Z h
	isEffectVisible ()Z g
	isSuperLongDuration ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket xi
	recipes a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; b
	getRecipes ()Ljava/util/List; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateTagsPacket xj
	tags a
	getTags ()Ljava/util/Map; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/DebugEntityNameGenerator xk
	NAMES_FIRST_PART a
	NAMES_SECOND_PART b
	getEntityName (Ljava/util/UUID;)Ljava/lang/String; a
	getEntityName (Lnet/minecraft/world/entity/Entity;)Ljava/lang/String; a
	getRandom (Ljava/util/UUID;)Lnet/minecraft/util/RandomSource; b
	getRandomString (Lnet/minecraft/util/RandomSource;[Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/network/protocol/game/DebugPackets xl
	LOGGER a
	getMemoryDescriptions (Lnet/minecraft/world/entity/LivingEntity;J)Ljava/util/List; a
	getShortDescription (Lnet/minecraft/server/level/ServerLevel;Ljava/lang/Object;)Ljava/lang/String; a
	sendBeeInfo (Lnet/minecraft/world/entity/animal/Bee;)V a
	sendEntityBrain (Lnet/minecraft/world/entity/LivingEntity;)V a
	sendGameEventInfo (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;)V a
	sendGameEventListenerInfo (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEventListener;)V a
	sendGameTestAddMarker (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/lang/String;II)V a
	sendGameTestClearPacket (Lnet/minecraft/server/level/ServerLevel;)V a
	sendGoalSelector (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/goal/GoalSelector;)V a
	sendHiveInfo (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity;)V a
	sendNeighborsUpdatePacket (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	sendPacketToAllPlayers (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/resources/ResourceLocation;)V a
	sendPathFindingPacket (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/level/pathfinder/Path;F)V a
	sendPoiAddedPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	sendPoiPacketsForChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/ChunkPos;)V a
	sendPoiRemovedPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V b
	sendPoiTicketCountPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V c
	sendRaids (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Collection;)V a
	sendStructurePacket (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	sendVillageSectionsPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V d
	writeBrain (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerGamePacketListener xm
	handleAcceptTeleportPacket (Lnet/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ServerboundSwingPacket;)V a
	handleBlockEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ServerboundChatPacket;)V a
	handleChatAck (Lnet/minecraft/network/protocol/game/ServerboundChatAckPacket;)V a
	handleChatCommand (Lnet/minecraft/network/protocol/game/ServerboundChatCommandPacket;)V a
	handleChatPreview (Lnet/minecraft/network/protocol/game/ServerboundChatPreviewPacket;)V a
	handleClientCommand (Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket;)V a
	handleClientInformation (Lnet/minecraft/network/protocol/game/ServerboundClientInformationPacket;)V a
	handleContainerButtonClick (Lnet/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket;)V a
	handleContainerClick (Lnet/minecraft/network/protocol/game/ServerboundContainerClickPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ServerboundContainerClosePacket;)V a
	handleCustomCommandSuggestions (Lnet/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ServerboundCustomPayloadPacket;)V a
	handleEditBook (Lnet/minecraft/network/protocol/game/ServerboundEditBookPacket;)V a
	handleEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundEntityTagQuery;)V a
	handleInteract (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket;)V a
	handleJigsawGenerate (Lnet/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ServerboundKeepAlivePacket;)V a
	handleLockDifficulty (Lnet/minecraft/network/protocol/game/ServerboundLockDifficultyPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ServerboundMoveVehiclePacket;)V a
	handlePaddleBoat (Lnet/minecraft/network/protocol/game/ServerboundPaddleBoatPacket;)V a
	handlePickItem (Lnet/minecraft/network/protocol/game/ServerboundPickItemPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ServerboundPlaceRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket;)V a
	handlePlayerAction (Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket;)V a
	handlePlayerCommand (Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket;)V a
	handlePlayerInput (Lnet/minecraft/network/protocol/game/ServerboundPlayerInputPacket;)V a
	handlePong (Lnet/minecraft/network/protocol/game/ServerboundPongPacket;)V a
	handleRecipeBookChangeSettingsPacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket;)V a
	handleRecipeBookSeenRecipePacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket;)V a
	handleRenameItem (Lnet/minecraft/network/protocol/game/ServerboundRenameItemPacket;)V a
	handleResourcePackResponse (Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket;)V a
	handleSeenAdvancements (Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket;)V a
	handleSelectTrade (Lnet/minecraft/network/protocol/game/ServerboundSelectTradePacket;)V a
	handleSetBeaconPacket (Lnet/minecraft/network/protocol/game/ServerboundSetBeaconPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket;)V a
	handleSetCommandBlock (Lnet/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket;)V a
	handleSetCommandMinecart (Lnet/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket;)V a
	handleSetCreativeModeSlot (Lnet/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket;)V a
	handleSetJigsawBlock (Lnet/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket;)V a
	handleSetStructureBlock (Lnet/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket;)V a
	handleSignUpdate (Lnet/minecraft/network/protocol/game/ServerboundSignUpdatePacket;)V a
	handleTeleportToEntityPacket (Lnet/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket;)V a
	handleUseItem (Lnet/minecraft/network/protocol/game/ServerboundUseItemPacket;)V a
	handleUseItemOn (Lnet/minecraft/network/protocol/game/ServerboundUseItemOnPacket;)V a
net/minecraft/network/protocol/game/ServerPacketListener xn
	shouldPropagateHandlingExceptions ()Z b
net/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket xo
	id a
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery xp
	pos b
	transactionId a
	getPos ()Lnet/minecraft/core/BlockPos; c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket xq
	difficulty a
	getDifficulty ()Lnet/minecraft/world/Difficulty; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundChatAckPacket xr
	lastSeenMessages a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	lastSeenMessages ()Lnet/minecraft/network/chat/LastSeenMessages$Update; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundChatCommandPacket xs
	argumentSignatures d
	command a
	lastSeenMessages f
	salt c
	signedPreview e
	timeStamp b
	argumentSignatures ()Lnet/minecraft/commands/arguments/ArgumentSignatures; e
	command ()Ljava/lang/String; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	lastSeenMessages ()Lnet/minecraft/network/chat/LastSeenMessages$Update; g
	salt ()J d
	signedPreview ()Z f
	timeStamp ()Ljava/time/Instant; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundChatPacket xt
	lastSeenMessages f
	message a
	salt c
	signature d
	signedPreview e
	timeStamp b
	getSigner (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/network/chat/MessageSigner; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	lastSeenMessages ()Lnet/minecraft/network/chat/LastSeenMessages$Update; g
	message ()Ljava/lang/String; b
	salt ()J d
	signature ()Lnet/minecraft/network/chat/MessageSignature; e
	signedPreview ()Z f
	timeStamp ()Ljava/time/Instant; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundChatPreviewPacket xu
	query b
	queryId a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	query ()Ljava/lang/String; c
	queryId ()I b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundClientCommandPacket xv
	action a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action xv$a
	$VALUES c
	PERFORM_RESPAWN a
	REQUEST_STATS b
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action; a
net/minecraft/network/protocol/game/ServerboundClientInformationPacket xw
	MAX_LANGUAGE_LENGTH a
	allowsListing i
	chatColors e
	chatVisibility d
	language b
	mainHand g
	modelCustomisation f
	textFilteringEnabled h
	viewDistance c
	allowsListing ()Z i
	chatColors ()Z e
	chatVisibility ()Lnet/minecraft/world/entity/player/ChatVisiblity; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	language ()Ljava/lang/String; b
	mainHand ()Lnet/minecraft/world/entity/HumanoidArm; g
	modelCustomisation ()I f
	textFilteringEnabled ()Z h
	viewDistance ()I c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket xx
	command b
	id a
	getCommand ()Ljava/lang/String; c
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket xy
	buttonId b
	containerId a
	getButtonId ()I c
	getContainerId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundContainerClickPacket xz
	MAX_SLOT_COUNT a
	buttonNum e
	carriedItem g
	changedSlots h
	clickType f
	containerId b
	slotNum d
	stateId c
	getButtonNum ()I d
	getCarriedItem ()Lnet/minecraft/world/item/ItemStack; e
	getChangedSlots ()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; f
	getClickType ()Lnet/minecraft/world/inventory/ClickType; g
	getContainerId ()I b
	getSlotNum ()I c
	getStateId ()I h
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundContainerClosePacket ya
	containerId a
	getContainerId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundCustomPayloadPacket yb
	BRAND a
	MAX_PAYLOAD_SIZE b
	data d
	identifier c
	getData ()Lnet/minecraft/network/FriendlyByteBuf; c
	getIdentifier ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundEditBookPacket yc
	MAX_BYTES_PER_CHAR a
	MAX_PAGES_COUNT d
	PAGE_MAX_CHARS c
	TITLE_MAX_CHARS b
	pages f
	slot e
	title g
	getPages ()Ljava/util/List; b
	getSlot ()I d
	getTitle ()Ljava/util/Optional; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundEntityTagQuery yd
	entityId b
	transactionId a
	getEntityId ()I c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket ye
	ATTACK_ACTION d
	action b
	entityId a
	usingSecondaryAction c
	createAttackPacket (Lnet/minecraft/world/entity/Entity;Z)Lnet/minecraft/network/protocol/game/ServerboundInteractPacket; a
	createInteractionPacket (Lnet/minecraft/world/entity/Entity;ZLnet/minecraft/world/InteractionHand;)Lnet/minecraft/network/protocol/game/ServerboundInteractPacket; a
	createInteractionPacket (Lnet/minecraft/world/entity/Entity;ZLnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/network/protocol/game/ServerboundInteractPacket; a
	dispatch (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Handler;)V a
	getTarget (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isUsingSecondaryAction ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket$Action ye$a
	dispatch (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType ye$b
	$VALUES e
	ATTACK b
	INTERACT a
	INTERACT_AT c
	reader d
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType; a
net/minecraft/network/protocol/game/ServerboundInteractPacket$Handler ye$c
	onAttack ()V a
	onInteraction (Lnet/minecraft/world/InteractionHand;)V a
	onInteraction (Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAction ye$d
	hand a
	dispatch (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAtLocationAction ye$e
	hand a
	location b
	dispatch (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket yf
	keepJigsaws c
	levels b
	pos a
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	keepJigsaws ()Z d
	levels ()I c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundKeepAlivePacket yg
	id a
	getId ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundLockDifficultyPacket yh
	locked a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isLocked ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket yi
	hasPos g
	hasRot h
	onGround f
	x a
	xRot e
	y b
	yRot d
	z c
	getX (D)D a
	getXRot (F)F b
	getY (D)D b
	getYRot (F)F a
	getZ (D)D c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	hasPosition ()Z c
	hasRotation ()Z d
	isOnGround ()Z b
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos yi$a
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot yi$b
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot yi$c
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$StatusOnly yi$d
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket$StatusOnly; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMoveVehiclePacket yj
	x a
	xRot e
	y b
	yRot d
	z c
	getX ()D b
	getXRot ()F f
	getY ()D c
	getYRot ()F e
	getZ ()D d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPaddleBoatPacket yk
	left a
	right b
	getLeft ()Z b
	getRight ()Z c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPickItemPacket yl
	slot a
	getSlot ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlaceRecipePacket ym
	containerId a
	recipe b
	shiftDown c
	getContainerId ()I b
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isShiftDown ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket yn
	FLAG_FLYING a
	isFlying b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isFlying ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlayerActionPacket yo
	action c
	direction b
	pos a
	sequence d
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action; d
	getDirection ()Lnet/minecraft/core/Direction; c
	getPos ()Lnet/minecraft/core/BlockPos; b
	getSequence ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action yo$a
	$VALUES h
	ABORT_DESTROY_BLOCK b
	DROP_ALL_ITEMS d
	DROP_ITEM e
	RELEASE_USE_ITEM f
	START_DESTROY_BLOCK a
	STOP_DESTROY_BLOCK c
	SWAP_ITEM_WITH_OFFHAND g
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action; a
net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket yp
	action b
	data c
	id a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action; c
	getData ()I d
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action yp$a
	$VALUES j
	OPEN_INVENTORY h
	PRESS_SHIFT_KEY a
	RELEASE_SHIFT_KEY b
	START_FALL_FLYING i
	START_RIDING_JUMP f
	START_SPRINTING d
	STOP_RIDING_JUMP g
	STOP_SLEEPING c
	STOP_SPRINTING e
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action; a
net/minecraft/network/protocol/game/ServerboundPlayerInputPacket yq
	FLAG_JUMPING a
	FLAG_SHIFT_KEY_DOWN b
	isJumping e
	isShiftKeyDown f
	xxa c
	zza d
	getXxa ()F b
	getZza ()F c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isJumping ()Z d
	isShiftKeyDown ()Z e
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPongPacket yr
	id a
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket ys
	bookType a
	isFiltering c
	isOpen b
	getBookType ()Lnet/minecraft/world/inventory/RecipeBookType; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isFiltering ()Z d
	isOpen ()Z c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket yt
	recipe a
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundRenameItemPacket yu
	name a
	getName ()Ljava/lang/String; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundResourcePackPacket yv
	action a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action yv$a
	$VALUES e
	ACCEPTED d
	DECLINED b
	FAILED_DOWNLOAD c
	SUCCESSFULLY_LOADED a
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action; a
net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket yw
	action a
	tab b
	closedScreen ()Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket; b
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action; c
	getTab ()Lnet/minecraft/resources/ResourceLocation; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	openedTab (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action yw$a
	$VALUES c
	CLOSED_SCREEN b
	OPENED_TAB a
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action; a
net/minecraft/network/protocol/game/ServerboundSelectTradePacket yx
	item a
	getItem ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetBeaconPacket yy
	primary a
	secondary b
	getPrimary ()Ljava/util/Optional; b
	getSecondary ()Ljava/util/Optional; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket yz
	slot a
	getSlot ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket za
	FLAG_AUTOMATIC c
	FLAG_CONDITIONAL b
	FLAG_TRACK_OUTPUT a
	automatic h
	command e
	conditional g
	mode i
	pos d
	trackOutput f
	getCommand ()Ljava/lang/String; c
	getMode ()Lnet/minecraft/world/level/block/entity/CommandBlockEntity$Mode; g
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isAutomatic ()Z f
	isConditional ()Z e
	isTrackOutput ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket zb
	command b
	entity a
	trackOutput c
	getCommand ()Ljava/lang/String; b
	getCommandBlock (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/BaseCommandBlock; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isTrackOutput ()Z c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket zc
	itemStack b
	slotNum a
	getItem ()Lnet/minecraft/world/item/ItemStack; c
	getSlotNum ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket zd
	finalState e
	joint f
	name b
	pool d
	pos a
	target c
	getFinalState ()Ljava/lang/String; f
	getJoint ()Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType; g
	getName ()Lnet/minecraft/resources/ResourceLocation; c
	getPool ()Lnet/minecraft/resources/ResourceLocation; e
	getPos ()Lnet/minecraft/core/BlockPos; b
	getTarget ()Lnet/minecraft/resources/ResourceLocation; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket ze
	FLAG_IGNORE_ENTITIES a
	FLAG_SHOW_AIR b
	FLAG_SHOW_BOUNDING_BOX c
	data l
	ignoreEntities m
	integrity p
	mirror j
	mode f
	name g
	offset h
	pos d
	rotation k
	seed q
	showAir n
	showBoundingBox o
	size i
	updateType e
	getData ()Ljava/lang/String; j
	getIntegrity ()F n
	getMirror ()Lnet/minecraft/world/level/block/Mirror; h
	getMode ()Lnet/minecraft/world/level/block/state/properties/StructureMode; d
	getName ()Ljava/lang/String; e
	getOffset ()Lnet/minecraft/core/BlockPos; f
	getPos ()Lnet/minecraft/core/BlockPos; b
	getRotation ()Lnet/minecraft/world/level/block/Rotation; i
	getSeed ()J o
	getSize ()Lnet/minecraft/core/Vec3i; g
	getUpdateType ()Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isIgnoreEntities ()Z k
	isShowAir ()Z l
	isShowBoundingBox ()Z m
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSignUpdatePacket zf
	MAX_STRING_LENGTH a
	lines c
	pos b
	getLines ()[Ljava/lang/String; c
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSwingPacket zg
	hand a
	getHand ()Lnet/minecraft/world/InteractionHand; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket zh
	uuid a
	getEntity (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundUseItemOnPacket zi
	blockHit a
	hand b
	sequence c
	getHand ()Lnet/minecraft/world/InteractionHand; b
	getHitResult ()Lnet/minecraft/world/phys/BlockHitResult; c
	getSequence ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundUseItemPacket zj
	hand a
	sequence b
	getHand ()Lnet/minecraft/world/InteractionHand; b
	getSequence ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/VecDeltaCodec zk
	TRUNCATION_STEPS a
	base b
	decode (J)D a
	decode (JJJ)Lnet/minecraft/world/phys/Vec3; a
	delta (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; d
	encode (D)J a
	encodeX (Lnet/minecraft/world/phys/Vec3;)J a
	encodeY (Lnet/minecraft/world/phys/Vec3;)J b
	encodeZ (Lnet/minecraft/world/phys/Vec3;)J c
	setBase (Lnet/minecraft/world/phys/Vec3;)V e
net/minecraft/network/protocol/handshake/ClientIntentionPacket zm
	MAX_HOST_LENGTH a
	hostName c
	intention e
	port d
	protocolVersion b
	getHostName ()Ljava/lang/String; d
	getIntention ()Lnet/minecraft/network/ConnectionProtocol; b
	getPort ()I e
	getProtocolVersion ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/handshake/ServerHandshakePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/handshake/ServerHandshakePacketListener zn
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
net/minecraft/network/protocol/login/ClientLoginPacketListener zp
	handleCompression (Lnet/minecraft/network/protocol/login/ClientboundLoginCompressionPacket;)V a
	handleCustomQuery (Lnet/minecraft/network/protocol/login/ClientboundCustomQueryPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket;)V a
	handleGameProfile (Lnet/minecraft/network/protocol/login/ClientboundGameProfilePacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ClientboundHelloPacket;)V a
net/minecraft/network/protocol/login/ClientboundCustomQueryPacket zq
	MAX_PAYLOAD_SIZE a
	data d
	identifier c
	transactionId b
	getData ()Lnet/minecraft/network/FriendlyByteBuf; d
	getIdentifier ()Lnet/minecraft/resources/ResourceLocation; c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ClientboundGameProfilePacket zr
	gameProfile a
	getGameProfile ()Lcom/mojang/authlib/GameProfile; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ClientboundHelloPacket zs
	nonce c
	publicKey b
	serverId a
	getNonce ()[B d
	getPublicKey ()Ljava/security/PublicKey; c
	getServerId ()Ljava/lang/String; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ClientboundLoginCompressionPacket zt
	compressionThreshold a
	getCompressionThreshold ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket zu
	reason a
	getReason ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ServerLoginPacketListener zv
	handleCustomQueryPacket (Lnet/minecraft/network/protocol/login/ServerboundCustomQueryPacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ServerboundHelloPacket;)V a
	handleKey (Lnet/minecraft/network/protocol/login/ServerboundKeyPacket;)V a
net/minecraft/network/protocol/login/ServerboundCustomQueryPacket zw
	MAX_PAYLOAD_SIZE a
	data c
	transactionId b
	getData ()Lnet/minecraft/network/FriendlyByteBuf; c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ServerboundHelloPacket zx
	name a
	profileId c
	publicKey b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	name ()Ljava/lang/String; b
	profileId ()Ljava/util/Optional; d
	publicKey ()Ljava/util/Optional; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ServerboundKeyPacket zy
	keybytes a
	nonceOrSaltSignature b
	getSecretKey (Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	isChallengeSignatureValid ([BLnet/minecraft/world/entity/player/ProfilePublicKey;)Z a
	isNonceValid ([BLjava/security/PrivateKey;)Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/status/ClientStatusPacketListener aab
	handlePongResponse (Lnet/minecraft/network/protocol/status/ClientboundPongResponsePacket;)V a
	handleStatusResponse (Lnet/minecraft/network/protocol/status/ClientboundStatusResponsePacket;)V a
net/minecraft/network/protocol/status/ClientboundPongResponsePacket aac
	time a
	getTime ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ClientStatusPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/status/ClientboundStatusResponsePacket aad
	GSON a
	status b
	getStatus ()Lnet/minecraft/network/protocol/status/ServerStatus; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ClientStatusPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/status/ServerStatus aae
	FAVICON_HEIGHT b
	FAVICON_WIDTH a
	description c
	enforcesSecureChat h
	favicon f
	players d
	previewsChat g
	version e
	enforcesSecureChat ()Z f
	getDescription ()Lnet/minecraft/network/chat/Component; a
	getFavicon ()Ljava/lang/String; d
	getPlayers ()Lnet/minecraft/network/protocol/status/ServerStatus$Players; b
	getVersion ()Lnet/minecraft/network/protocol/status/ServerStatus$Version; c
	previewsChat ()Z e
	setDescription (Lnet/minecraft/network/chat/Component;)V a
	setEnforcesSecureChat (Z)V b
	setFavicon (Ljava/lang/String;)V a
	setPlayers (Lnet/minecraft/network/protocol/status/ServerStatus$Players;)V a
	setPreviewsChat (Z)V a
	setVersion (Lnet/minecraft/network/protocol/status/ServerStatus$Version;)V a
net/minecraft/network/protocol/status/ServerStatus$Players aae$a
	maxPlayers a
	numPlayers b
	sample c
	getMaxPlayers ()I a
	getNumPlayers ()I b
	getSample ()[Lcom/mojang/authlib/GameProfile; c
	setSample ([Lcom/mojang/authlib/GameProfile;)V a
net/minecraft/network/protocol/status/ServerStatus$Players$Serializer aae$a$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/protocol/status/ServerStatus$Players; a
	serialize (Lnet/minecraft/network/protocol/status/ServerStatus$Players;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/protocol/status/ServerStatus$Serializer aae$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/protocol/status/ServerStatus; a
	serialize (Lnet/minecraft/network/protocol/status/ServerStatus;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/protocol/status/ServerStatus$Version aae$c
	name a
	protocol b
	getName ()Ljava/lang/String; a
	getProtocol ()I b
net/minecraft/network/protocol/status/ServerStatus$Version$Serializer aae$c$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/protocol/status/ServerStatus$Version; a
	serialize (Lnet/minecraft/network/protocol/status/ServerStatus$Version;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/protocol/status/ServerStatusPacketListener aaf
	handlePingRequest (Lnet/minecraft/network/protocol/status/ServerboundPingRequestPacket;)V a
	handleStatusRequest (Lnet/minecraft/network/protocol/status/ServerboundStatusRequestPacket;)V a
net/minecraft/network/protocol/status/ServerboundPingRequestPacket aag
	time a
	getTime ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ServerStatusPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/status/ServerboundStatusRequestPacket aah
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ServerStatusPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/syncher/EntityDataAccessor aaj
	id a
	serializer b
	getId ()I a
	getSerializer ()Lnet/minecraft/network/syncher/EntityDataSerializer; b
net/minecraft/network/syncher/EntityDataSerializer aak
	copy (Ljava/lang/Object;)Ljava/lang/Object; a
	createAccessor (I)Lnet/minecraft/network/syncher/EntityDataAccessor; a
	optional (Lnet/minecraft/network/FriendlyByteBuf$Writer;Lnet/minecraft/network/FriendlyByteBuf$Reader;)Lnet/minecraft/network/syncher/EntityDataSerializer; b
	read (Lnet/minecraft/network/FriendlyByteBuf;)Ljava/lang/Object; a
	simple (Lnet/minecraft/network/FriendlyByteBuf$Writer;Lnet/minecraft/network/FriendlyByteBuf$Reader;)Lnet/minecraft/network/syncher/EntityDataSerializer; a
	simpleEnum (Ljava/lang/Class;)Lnet/minecraft/network/syncher/EntityDataSerializer; a
	simpleId (Lnet/minecraft/core/IdMap;)Lnet/minecraft/network/syncher/EntityDataSerializer; a
	write (Lnet/minecraft/network/FriendlyByteBuf;Ljava/lang/Object;)V a
net/minecraft/network/syncher/EntityDataSerializer$ForValueType aak$a
	copy (Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/network/syncher/EntityDataSerializers aal
	BLOCK_POS l
	BLOCK_STATE h
	BOOLEAN i
	BYTE a
	CAT_VARIANT u
	COMPONENT e
	COMPOUND_TAG q
	DIRECTION n
	FLOAT c
	FROG_VARIANT v
	INT b
	ITEM_STACK g
	OPTIONAL_BLOCK_POS m
	OPTIONAL_COMPONENT f
	OPTIONAL_GLOBAL_POS p
	OPTIONAL_UNSIGNED_INT s
	OPTIONAL_UUID o
	PAINTING_VARIANT w
	PARTICLE j
	POSE t
	ROTATIONS k
	SERIALIZERS x
	STRING d
	VILLAGER_DATA r
	getSerializedId (Lnet/minecraft/network/syncher/EntityDataSerializer;)I b
	getSerializer (I)Lnet/minecraft/network/syncher/EntityDataSerializer; a
	registerSerializer (Lnet/minecraft/network/syncher/EntityDataSerializer;)V a
net/minecraft/network/syncher/SynchedEntityData aam
	ENTITY_ID_POOL b
	EOF_MARKER c
	LOGGER a
	MAX_ID_VALUE d
	entity e
	isDirty i
	isEmpty h
	itemsById f
	lock g
	assignValue (Lnet/minecraft/network/syncher/SynchedEntityData$DataItem;Lnet/minecraft/network/syncher/SynchedEntityData$DataItem;)V a
	assignValues (Ljava/util/List;)V a
	clearDirty ()V e
	createDataItem (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V c
	define (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V a
	defineId (Ljava/lang/Class;Lnet/minecraft/network/syncher/EntityDataSerializer;)Lnet/minecraft/network/syncher/EntityDataAccessor; a
	genericHelper (Lnet/minecraft/network/FriendlyByteBuf;ILnet/minecraft/network/syncher/EntityDataSerializer;)Lnet/minecraft/network/syncher/SynchedEntityData$DataItem; a
	get (Lnet/minecraft/network/syncher/EntityDataAccessor;)Ljava/lang/Object; a
	getAll ()Ljava/util/List; c
	getItem (Lnet/minecraft/network/syncher/EntityDataAccessor;)Lnet/minecraft/network/syncher/SynchedEntityData$DataItem; b
	isDirty ()Z a
	isEmpty ()Z d
	pack (Ljava/util/List;Lnet/minecraft/network/FriendlyByteBuf;)V a
	packDirty ()Ljava/util/List; b
	set (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V b
	unpack (Lnet/minecraft/network/FriendlyByteBuf;)Ljava/util/List; a
	writeDataItem (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/syncher/SynchedEntityData$DataItem;)V a
net/minecraft/network/syncher/SynchedEntityData$DataItem aam$a
	accessor a
	dirty c
	value b
	copy ()Lnet/minecraft/network/syncher/SynchedEntityData$DataItem; d
	getAccessor ()Lnet/minecraft/network/syncher/EntityDataAccessor; a
	getValue ()Ljava/lang/Object; b
	isDirty ()Z c
	setDirty (Z)V a
	setValue (Ljava/lang/Object;)V a
net/minecraft/realms/DisconnectedRealmsScreen foo
	message b
	parent c
	reason a
	textHeight I
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	onClose ()V ag_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/realms/RealmsConnect fop
	LOGGER a
	aborted c
	connection d
	onlineScreen b
	abort ()V a
	connect (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/client/multiplayer/resolver/ServerAddress;)V a
	tick ()V b
net/minecraft/realms/RealmsLabel foq
	color d
	text a
	x b
	y c
	getText ()Lnet/minecraft/network/chat/Component; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/realms/RealmsObjectSelectionList fos
	addEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)I b
	addEntry (Lnet/minecraft/client/gui/components/ObjectSelectionList$Entry;)I a
	clear ()V w
	getItemCount ()I k
	getMaxPosition ()I b
	getRowLeft ()I r
	getRowTop (I)I h
	getRowWidth ()I c
	getScrollbarPosition ()I d
	itemClicked (IIDDI)V a
	replaceEntries (Ljava/util/Collection;)V a
	selectItem (I)V a
	setSelectedItem (I)V j
net/minecraft/realms/RealmsScreen fot
	COLOR_BLACK z
	COLOR_BRIGHT_YELLOW B
	COLOR_BUTTON_YELLOW F
	COLOR_DARK_GRAY t
	COLOR_DARK_GREEN w
	COLOR_GRAY s
	COLOR_GREEN v
	COLOR_INFO E
	COLOR_LINK C
	COLOR_LINK_HOVER D
	COLOR_MEDIUM_GRAY u
	COLOR_RED x
	COLOR_RED_FADE y
	COLOR_WHITE r
	COLOR_YELLOW A
	COMPONENT_HEIGHT o
	EXPIRATION_NOTIFICATION_DAYS p
	SIZE_LIMIT q
	SKIN_FACE_SIZE H
	TITLE_HEIGHT n
	UPDATE_BREAKS_ADVENTURE_URL G
	labels a
	addLabel (Lnet/minecraft/realms/RealmsLabel;)Lnet/minecraft/realms/RealmsLabel; a
	createLabelNarration ()Lnet/minecraft/network/chat/Component; j
	row (I)I j
net/minecraft/realms/RepeatedNarrator fou
	params b
	permitsPerSecond a
	narrate (Lnet/minecraft/client/GameNarrator;Lnet/minecraft/network/chat/Component;)V a
net/minecraft/realms/RepeatedNarrator$Params fou$a
	narration a
	rateLimiter b
net/minecraft/recipebook/PlaceRecipe aaq
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	placeRecipe (IIILnet/minecraft/world/item/crafting/Recipe;Ljava/util/Iterator;I)V a
net/minecraft/recipebook/ServerPlaceRecipe aar
	LOGGER d
	inventory b
	menu c
	stackedContents a
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	clearGrid (Z)V a
	getAmountOfFreeSlotsInInventory ()I b
	getStackSize (ZIZ)I a
	handleRecipeClicked (Lnet/minecraft/world/item/crafting/Recipe;Z)V a
	moveItemToGrid (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;)V a
	recipeClicked (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/Recipe;Z)V a
	testClearGrid ()Z a
net/minecraft/resources/DelegatingOps aat
	delegate a
net/minecraft/resources/HolderSetCodec aau
	elementCodec b
	homogenousListCodec c
	registryAwareCodec d
	registryKey a
	create (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec; a
	decodeWithoutRegistry (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	encode (Lnet/minecraft/core/HolderSet;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	encodeWithoutRegistry (Lnet/minecraft/core/HolderSet;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; b
	homogenousList (Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec; a
net/minecraft/resources/RegistryFileCodec aav
	allowInline c
	elementCodec b
	registryKey a
	create (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lnet/minecraft/resources/RegistryFileCodec; a
	create (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lnet/minecraft/resources/RegistryFileCodec; a
	encode (Lnet/minecraft/core/Holder;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/RegistryFixedCodec aaw
	registryKey a
	create (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/RegistryFixedCodec; a
	encode (Lnet/minecraft/core/Holder;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/RegistryLoader aax
	readCache b
	resources a
	bind (Lnet/minecraft/core/RegistryAccess$Writable;)Lnet/minecraft/resources/RegistryLoader$Bound; a
	overrideElementFromResources (Lnet/minecraft/core/WritableRegistry;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult; a
	overrideElementFromResources (Lnet/minecraft/core/WritableRegistry;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Lnet/minecraft/resources/ResourceKey;Ljava/util/Optional;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult; a
	overrideRegistryFromResources (Lnet/minecraft/core/WritableRegistry;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult; a
	readCache (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/RegistryLoader$ReadCache; a
net/minecraft/resources/RegistryLoader$Bound aax$a
	access a
	loader b
	access ()Lnet/minecraft/core/RegistryAccess$Writable; a
	loader ()Lnet/minecraft/resources/RegistryLoader; b
	overrideElementFromResources (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult; a
	overrideRegistryFromResources (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/RegistryLoader$ReadCache aax$b
	values a
net/minecraft/resources/RegistryOps aay
	asJson d
	loader b
	registryAccess c
	create (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/resources/RegistryOps; a
	createAndLoad (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/core/RegistryAccess$Writable;Lnet/minecraft/resources/RegistryResourceAccess;)Lnet/minecraft/resources/RegistryOps; a
	createAndLoad (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/core/RegistryAccess$Writable;Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/resources/RegistryOps; a
	getAsJson ()Lcom/mojang/serialization/DynamicOps; b
	registry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	registryLoader ()Ljava/util/Optional; a
	retrieveRegistry (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/MapCodec; b
net/minecraft/resources/RegistryResourceAccess aaz
	forResourceManager (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/resources/RegistryResourceAccess; a
	getResource (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; b
	listResources (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Map; a
net/minecraft/resources/RegistryResourceAccess$EntryThunk aaz$a
net/minecraft/resources/RegistryResourceAccess$InMemoryStorage aaz$b
	LOGGER a
	entries b
	add (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Encoder;ILjava/lang/Object;Lcom/mojang/serialization/Lifecycle;)V a
	getResource (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; b
	listResources (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Map; a
net/minecraft/resources/RegistryResourceAccess$InMemoryStorage$Entry aaz$b$a
	data a
	id b
	lifecycle c
	data ()Lcom/google/gson/JsonElement; a
	id ()I b
	lifecycle ()Lcom/mojang/serialization/Lifecycle; c
	parse (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Decoder;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/RegistryResourceAccess$ParsedEntry aaz$c
	fixedId b
	value a
	createWithId (Ljava/lang/Object;I)Lnet/minecraft/resources/RegistryResourceAccess$ParsedEntry; a
	createWithoutId (Ljava/lang/Object;)Lnet/minecraft/resources/RegistryResourceAccess$ParsedEntry; a
	fixedId ()Ljava/util/OptionalInt; b
	value ()Ljava/lang/Object; a
net/minecraft/resources/ResourceKey aba
	VALUES a
	location c
	registryName b
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; c
	codec (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; a
	create (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	createRegistryKey (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	isFor (Lnet/minecraft/resources/ResourceKey;)Z b
	location ()Lnet/minecraft/resources/ResourceLocation; a
	registry ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/resources/ResourceLocation abb
	CODEC a
	DEFAULT_NAMESPACE c
	ERROR_INVALID g
	NAMESPACE_SEPARATOR b
	REALMS_NAMESPACE d
	namespace e
	path f
	compareTo (Lnet/minecraft/resources/ResourceLocation;)I a
	decompose (Ljava/lang/String;C)[Ljava/lang/String; b
	getNamespace ()Ljava/lang/String; b
	getPath ()Ljava/lang/String; a
	isAllowedInResourceLocation (C)Z a
	isValidNamespace (Ljava/lang/String;)Z f
	isValidPath (Ljava/lang/String;)Z e
	isValidResourceLocation (Ljava/lang/String;)Z d
	of (Ljava/lang/String;C)Lnet/minecraft/resources/ResourceLocation; a
	read (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
	read (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; b
	toDebugFileName ()Ljava/lang/String; c
	toLanguageKey ()Ljava/lang/String; d
	toLanguageKey (Ljava/lang/String;)Ljava/lang/String; c
	toShortLanguageKey ()Ljava/lang/String; e
	tryBuild (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	tryParse (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	validNamespaceChar (C)Z c
	validPathChar (C)Z b
net/minecraft/resources/ResourceLocation$Serializer abb$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/resources/ResourceLocation; a
	serialize (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/server/Bootstrap abd
	LOGGER c
	STDOUT a
	isBootstrapped b
	bootStrap ()V a
	checkBootstrapCalled (Ljava/util/function/Supplier;)V a
	checkGameruleTranslations (Ljava/util/Set;)V a
	checkTranslations (Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/Set;)V a
	createBootstrapException (Ljava/util/function/Supplier;)Ljava/lang/RuntimeException; b
	getMissingTranslations ()Ljava/util/Set; b
	realStdoutPrintln (Ljava/lang/String;)V a
	validate ()V c
	validateThatAllBiomeFeaturesHaveBiomeFilter ()V d
	wrapStreams ()V e
net/minecraft/server/ChainedJsonException abe
	entries a
	message b
	forException (Ljava/lang/Exception;)Lnet/minecraft/server/ChainedJsonException; a
	prependJsonKey (Ljava/lang/String;)V a
	setFilenameAndFlush (Ljava/lang/String;)V b
net/minecraft/server/ChainedJsonException$Entry abe$a
	filename a
	jsonKeys b
	addJsonKey (Ljava/lang/String;)V a
	getFilename ()Ljava/lang/String; a
	getJsonKeys ()Ljava/lang/String; b
net/minecraft/server/ConsoleInput abf
	msg a
	source b
net/minecraft/server/DebugLoggedPrintStream abg
	LOGGER b
	logLine (Ljava/lang/String;)V a
net/minecraft/server/Eula abh
	LOGGER a
	agreed c
	file b
	hasAgreedToEULA ()Z a
	readFile ()Z b
	saveDefaults ()V c
net/minecraft/server/LoggedPrintStream abi
	LOGGER b
	name a
	logLine (Ljava/lang/String;)V a
net/minecraft/server/MinecraftServer$ReloadableResources net/minecraft/server/MinecraftServer$a
	managers b
	resourceManager a
	managers ()Lnet/minecraft/server/ReloadableServerResources; b
	resourceManager ()Lnet/minecraft/server/packs/resources/CloseableResourceManager; a
net/minecraft/server/MinecraftServer$ServerResourcePackInfo net/minecraft/server/MinecraftServer$b
	hash b
	isRequired c
	prompt d
	url a
	hash ()Ljava/lang/String; b
	isRequired ()Z c
	prompt ()Lnet/minecraft/network/chat/Component; d
	url ()Ljava/lang/String; a
net/minecraft/server/MinecraftServer$TimeProfiler net/minecraft/server/MinecraftServer$c
	startNanos a
	startTick b
	stop (JI)Lnet/minecraft/util/profiling/ProfileResults; a
net/minecraft/server/PlayerAdvancements abj
	GSON c
	LOGGER a
	TYPE_TOKEN d
	VISIBILITY_DEPTH b
	advancements h
	dataFixer e
	file g
	isFirstPacket n
	lastSelectedTab m
	player l
	playerList f
	progressChanged k
	visibilityChanged j
	visible i
	award (Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z a
	checkForAutomaticTriggers (Lnet/minecraft/server/ServerAdvancementManager;)V c
	ensureAllVisible ()V c
	ensureVisibility (Lnet/minecraft/advancements/Advancement;)V e
	flushDirty (Lnet/minecraft/server/level/ServerPlayer;)V b
	getOrStartProgress (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/advancements/AdvancementProgress; b
	hasCompletedChildrenOrSelf (Lnet/minecraft/advancements/Advancement;)Z g
	load (Lnet/minecraft/server/ServerAdvancementManager;)V d
	registerListeners (Lnet/minecraft/advancements/Advancement;)V c
	registerListeners (Lnet/minecraft/server/ServerAdvancementManager;)V b
	reload (Lnet/minecraft/server/ServerAdvancementManager;)V a
	revoke (Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z b
	save ()V b
	setPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	setSelectedTab (Lnet/minecraft/advancements/Advancement;)V a
	shouldBeVisible (Lnet/minecraft/advancements/Advancement;)Z f
	startProgress (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V a
	stopListening ()V a
	unregisterListeners (Lnet/minecraft/advancements/Advancement;)V d
net/minecraft/server/ReloadableServerResources abk
	DATA_RELOAD_INITIAL_TASK b
	LOGGER a
	advancements j
	commandBuildContext c
	commands d
	functionLibrary k
	itemModifierManager i
	lootTables h
	predicateManager g
	recipes e
	tagManager f
	getAdvancements ()Lnet/minecraft/server/ServerAdvancementManager; g
	getCommands ()Lnet/minecraft/commands/Commands; f
	getFunctionLibrary ()Lnet/minecraft/server/ServerFunctionLibrary; a
	getItemModifierManager ()Lnet/minecraft/world/level/storage/loot/ItemModifierManager; d
	getLootTables ()Lnet/minecraft/world/level/storage/loot/LootTables; c
	getPredicateManager ()Lnet/minecraft/world/level/storage/loot/PredicateManager; b
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; e
	listeners ()Ljava/util/List; h
	loadResources (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/core/RegistryAccess$Frozen;Lnet/minecraft/commands/Commands$CommandSelection;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	updateRegistryTags (Lnet/minecraft/core/RegistryAccess;)V a
	updateRegistryTags (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/tags/TagManager$LoadResult;)V a
net/minecraft/server/RunningOnDifferentThreadException abl
	RUNNING_ON_DIFFERENT_THREAD a
net/minecraft/server/ServerAdvancementManager abm
	GSON b
	LOGGER a
	advancements c
	predicateManager d
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getAdvancement (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement; a
	getAllAdvancements ()Ljava/util/Collection; a
net/minecraft/server/ServerFunctionLibrary abn
	FILE_EXTENSION b
	LOGGER a
	PATH_PREFIX_LENGTH c
	PATH_SUFFIX_LENGTH d
	dispatcher i
	functionCompilationLevel h
	functions e
	tags g
	tagsLoader f
	getAvailableTags ()Ljava/lang/Iterable; b
	getFunction (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	getFunctions ()Ljava/util/Map; a
	getTag (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Collection; b
	readLines (Lnet/minecraft/server/packs/resources/Resource;)Ljava/util/List; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/ServerFunctionManager abo
	LOAD_FUNCTION_TAG c
	NO_RECURSIVE_TRACES a
	TICK_FUNCTION_TAG b
	context e
	library h
	postReload g
	server d
	ticking f
	execute (Lnet/minecraft/commands/CommandFunction;Lnet/minecraft/commands/CommandSourceStack;)I a
	execute (Lnet/minecraft/commands/CommandFunction;Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/ServerFunctionManager$TraceCallbacks;)I a
	executeTagFunctions (Ljava/util/Collection;Lnet/minecraft/resources/ResourceLocation;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	getCommandLimit ()I a
	getDispatcher ()Lcom/mojang/brigadier/CommandDispatcher; b
	getFunctionNames ()Ljava/lang/Iterable; e
	getGameLoopSender ()Lnet/minecraft/commands/CommandSourceStack; d
	getTag (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Collection; b
	getTagNames ()Ljava/lang/Iterable; f
	postReload (Lnet/minecraft/server/ServerFunctionLibrary;)V b
	replaceLibrary (Lnet/minecraft/server/ServerFunctionLibrary;)V a
	tick ()V c
net/minecraft/server/ServerFunctionManager$ExecutionContext abo$a
	commandQueue d
	depth b
	nestedCalls e
	tracer c
	delayFunctionCall (Lnet/minecraft/commands/CommandFunction;Lnet/minecraft/commands/CommandSourceStack;)V a
	reportError (Ljava/lang/String;)V a
	runTopCommand (Lnet/minecraft/commands/CommandFunction;Lnet/minecraft/commands/CommandSourceStack;)I b
net/minecraft/server/ServerFunctionManager$QueuedCommand abo$b
	depth b
	entry c
	sender a
	execute (Lnet/minecraft/server/ServerFunctionManager;Ljava/util/Deque;ILnet/minecraft/server/ServerFunctionManager$TraceCallbacks;)V a
net/minecraft/server/ServerFunctionManager$TraceCallbacks abo$c
	onCall (ILnet/minecraft/resources/ResourceLocation;I)V a
	onCommand (ILjava/lang/String;)V a
	onError (ILjava/lang/String;)V b
	onReturn (ILjava/lang/String;I)V a
net/minecraft/server/ServerInterface abp
	getLevelIdName ()Ljava/lang/String; r
	getMaxPlayers ()I H
	getPlayerCount ()I G
	getPlayerNames ()[Ljava/lang/String; I
	getPluginNames ()Ljava/lang/String; t
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	getServerIp ()Ljava/lang/String; b
	getServerName ()Ljava/lang/String; p
	getServerPort ()I d
	getServerVersion ()Ljava/lang/String; F
	runCommand (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/server/ServerScoreboard abq
	dirtyListeners i
	server g
	trackedObjectives h
	addDirtyListener (Ljava/lang/Runnable;)V a
	addPlayerToTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)Z a
	createData ()Lnet/minecraft/world/scores/ScoreboardSaveData; b
	createData (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/scores/ScoreboardSaveData; a
	getObjectiveDisplaySlotCount (Lnet/minecraft/world/scores/Objective;)I h
	getStartTrackingPackets (Lnet/minecraft/world/scores/Objective;)Ljava/util/List; d
	getStopTrackingPackets (Lnet/minecraft/world/scores/Objective;)Ljava/util/List; f
	onObjectiveAdded (Lnet/minecraft/world/scores/Objective;)V a
	onObjectiveChanged (Lnet/minecraft/world/scores/Objective;)V b
	onObjectiveRemoved (Lnet/minecraft/world/scores/Objective;)V c
	onPlayerRemoved (Ljava/lang/String;)V a
	onPlayerScoreRemoved (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)V a
	onScoreChanged (Lnet/minecraft/world/scores/Score;)V a
	onTeamAdded (Lnet/minecraft/world/scores/PlayerTeam;)V a
	onTeamChanged (Lnet/minecraft/world/scores/PlayerTeam;)V b
	onTeamRemoved (Lnet/minecraft/world/scores/PlayerTeam;)V c
	removePlayerFromTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)V b
	setDirty ()V a
	setDisplayObjective (ILnet/minecraft/world/scores/Objective;)V a
	startTrackingObjective (Lnet/minecraft/world/scores/Objective;)V e
	stopTrackingObjective (Lnet/minecraft/world/scores/Objective;)V g
net/minecraft/server/ServerScoreboard$Method abq$a
	$VALUES c
	CHANGE a
	REMOVE b
	$values ()[Lnet/minecraft/server/ServerScoreboard$Method; a
net/minecraft/server/Services abr
	USERID_CACHE_FILE e
	profileCache d
	profileRepository c
	serviceSignatureValidator b
	sessionService a
	create (Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Ljava/io/File;)Lnet/minecraft/server/Services; a
	profileCache ()Lnet/minecraft/server/players/GameProfileCache; d
	profileRepository ()Lcom/mojang/authlib/GameProfileRepository; c
	serviceSignatureValidator ()Lnet/minecraft/util/SignatureValidator; b
	sessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; a
net/minecraft/server/TickTask abs
	runnable b
	tick a
	getTick ()I a
net/minecraft/server/WorldLoader abt
	load (Lnet/minecraft/server/WorldLoader$InitConfig;Lnet/minecraft/server/WorldLoader$WorldDataSupplier;Lnet/minecraft/server/WorldLoader$ResultFactory;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/WorldLoader$InitConfig abt$a
	commandSelection b
	functionCompilationLevel c
	packConfig a
	commandSelection ()Lnet/minecraft/commands/Commands$CommandSelection; b
	functionCompilationLevel ()I c
	packConfig ()Lnet/minecraft/server/WorldLoader$PackConfig; a
net/minecraft/server/WorldLoader$PackConfig abt$b
	initialDataPacks b
	packRepository a
	safeMode c
	createResourceManager ()Lcom/mojang/datafixers/util/Pair; a
	initialDataPacks ()Lnet/minecraft/world/level/DataPackConfig; c
	packRepository ()Lnet/minecraft/server/packs/repository/PackRepository; b
	safeMode ()Z d
net/minecraft/server/WorldLoader$ResultFactory abt$c
net/minecraft/server/WorldLoader$WorldDataSupplier abt$d
net/minecraft/server/WorldStem abu
	dataPackResources b
	registryAccess c
	resourceManager a
	worldData d
	dataPackResources ()Lnet/minecraft/server/ReloadableServerResources; b
	load (Lnet/minecraft/server/WorldLoader$InitConfig;Lnet/minecraft/server/WorldLoader$WorldDataSupplier;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	registryAccess ()Lnet/minecraft/core/RegistryAccess$Frozen; c
	resourceManager ()Lnet/minecraft/server/packs/resources/CloseableResourceManager; a
	worldData ()Lnet/minecraft/world/level/storage/WorldData; d
net/minecraft/server/bossevents/CustomBossEvent abv
	id h
	max k
	players i
	value j
	addOfflinePlayer (Ljava/util/UUID;)V a
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	getMax ()I d
	getTextId ()Lnet/minecraft/resources/ResourceLocation; a
	getValue ()I c
	load (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	onPlayerConnect (Lnet/minecraft/server/level/ServerPlayer;)V c
	onPlayerDisconnect (Lnet/minecraft/server/level/ServerPlayer;)V d
	removeAllPlayers ()V b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	save ()Lnet/minecraft/nbt/CompoundTag; f
	setMax (I)V b
	setPlayers (Ljava/util/Collection;)Z a
	setValue (I)V a
net/minecraft/server/bossevents/CustomBossEvents abw
	events a
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	getEvents ()Ljava/util/Collection; b
	getIds ()Ljava/util/Collection; a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onPlayerConnect (Lnet/minecraft/server/level/ServerPlayer;)V a
	onPlayerDisconnect (Lnet/minecraft/server/level/ServerPlayer;)V b
	remove (Lnet/minecraft/server/bossevents/CustomBossEvent;)V a
	save ()Lnet/minecraft/nbt/CompoundTag; c
net/minecraft/server/chase/ChaseClient aby
	LOGGER a
	RECONNECT_INTERVAL_SECONDS b
	server e
	serverHost c
	serverPort d
	socket g
	thread h
	wantsToRun f
	executeCommand (Ljava/lang/String;)V b
	handleMessage (Ljava/lang/String;)V a
	handleTeleport (Ljava/util/Scanner;)V a
	parseTarget (Ljava/util/Scanner;)Ljava/util/Optional; b
	run ()V c
	start ()V a
	stop ()V b
net/minecraft/server/chase/ChaseClient$TeleportTarget aby$a
	level a
	pos b
	rot c
	level ()Lnet/minecraft/resources/ResourceKey; a
	pos ()Lnet/minecraft/world/phys/Vec3; b
	rot ()Lnet/minecraft/world/phys/Vec2; c
net/minecraft/server/chase/ChaseServer abz
	LOGGER a
	broadcastIntervalMs e
	clientSockets h
	playerList d
	serverBindAddress b
	serverPort c
	serverSocket g
	wantsToRun f
	getPlayerPosition ()Lnet/minecraft/server/chase/ChaseServer$PlayerPosition; e
	runAcceptor ()V d
	runSender ()V c
	start ()V a
	stop ()V b
net/minecraft/server/chase/ChaseServer$PlayerPosition abz$a
	dimensionName a
	x b
	xRot f
	y c
	yRot e
	z d
	dimensionName ()Ljava/lang/String; a
	format ()Ljava/lang/String; g
	x ()D b
	xRot ()F f
	y ()D c
	yRot ()F e
	z ()D d
net/minecraft/server/commands/AdvancementCommands acb
	SUGGEST_ADVANCEMENTS a
	addChildren (Lnet/minecraft/advancements/Advancement;Ljava/util/List;)V a
	getAdvancements (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/server/commands/AdvancementCommands$Mode;)Ljava/util/List; a
	perform (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/commands/AdvancementCommands$Action;Ljava/util/Collection;)I a
	performCriterion (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/commands/AdvancementCommands$Action;Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/AdvancementCommands$Action acb$a
	$VALUES d
	GRANT a
	REVOKE b
	key c
	$values ()[Lnet/minecraft/server/commands/AdvancementCommands$Action; b
	getKey ()Ljava/lang/String; a
	perform (Lnet/minecraft/server/level/ServerPlayer;Ljava/lang/Iterable;)I a
	perform (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/advancements/Advancement;)Z a
	performCriterion (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z a
net/minecraft/server/commands/AdvancementCommands$Mode acb$b
	$VALUES h
	EVERYTHING e
	FROM c
	ONLY a
	THROUGH b
	UNTIL d
	children g
	parents f
	$values ()[Lnet/minecraft/server/commands/AdvancementCommands$Mode; a
net/minecraft/server/commands/AttributeCommand acc
	ERROR_MODIFIER_ALREADY_PRESENT d
	ERROR_NOT_LIVING_ENTITY a
	ERROR_NO_SUCH_ATTRIBUTE b
	ERROR_NO_SUCH_MODIFIER c
	addModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;Ljava/lang/String;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)I a
	getAttributeBase (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;D)I b
	getAttributeInstance (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;D)I a
	getAttributeValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;D)I a
	getEntityWithAttribute (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/LivingEntity; b
	getLivingEntity (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/LivingEntity; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)I a
	setAttributeBase (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;D)I c
net/minecraft/server/commands/BanIpCommands acd
	ERROR_ALREADY_BANNED c
	ERROR_INVALID_IP b
	IP_ADDRESS_PATTERN a
	banIp (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I b
	banIpOrName (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/BanListCommands ace
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	showList (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
net/minecraft/server/commands/BanPlayerCommands acf
	ERROR_ALREADY_BANNED a
	banPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/BossBarCommands acg
	ERROR_ALREADY_EXISTS b
	ERROR_ALREADY_HIDDEN j
	ERROR_ALREADY_VISIBLE k
	ERROR_DOESNT_EXIST c
	ERROR_NO_COLOR_CHANGE f
	ERROR_NO_MAX_CHANGE i
	ERROR_NO_NAME_CHANGE e
	ERROR_NO_PLAYER_CHANGE d
	ERROR_NO_STYLE_CHANGE g
	ERROR_NO_VALUE_CHANGE h
	SUGGEST_BOSS_BAR a
	createBar (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/chat/Component;)I a
	getBossBar (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	getMax (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I b
	getPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I d
	getValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I a
	getVisible (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I c
	listBars (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeBar (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I e
	setColor (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/world/BossEvent$BossBarColor;)I a
	setMax (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;I)I b
	setName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/network/chat/Component;)I a
	setPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Ljava/util/Collection;)I a
	setStyle (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/world/BossEvent$BossBarOverlay;)I a
	setValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;I)I a
	setVisible (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Z)I a
net/minecraft/server/commands/ChaseCommand ach
	BROADCAST_INTERVAL_MS e
	DEFAULT_BIND_ADDRESS c
	DEFAULT_CONNECT_HOST b
	DEFAULT_PORT d
	DIMENSION_NAMES a
	chaseClient g
	chaseServer f
	alreadyRunning (Lnet/minecraft/commands/CommandSourceStack;)Z b
	follow (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;I)I b
	lead (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	stop (Lnet/minecraft/commands/CommandSourceStack;)I a
net/minecraft/server/commands/ClearInventoryCommands aci
	ERROR_MULTIPLE b
	ERROR_SINGLE a
	clearInventory (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/function/Predicate;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
net/minecraft/server/commands/CloneCommands acj
	ERROR_AREA_TOO_LARGE d
	ERROR_FAILED e
	ERROR_OVERLAP c
	FILTER_AIR a
	MAX_CLONE_AREA b
	clone (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Lnet/minecraft/server/commands/CloneCommands$Mode;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
net/minecraft/server/commands/CloneCommands$CloneBlockInfo acj$a
	pos a
	state b
	tag c
net/minecraft/server/commands/CloneCommands$Mode acj$b
	$VALUES e
	FORCE a
	MOVE b
	NORMAL c
	canOverlap d
	$values ()[Lnet/minecraft/server/commands/CloneCommands$Mode; b
	canOverlap ()Z a
net/minecraft/server/commands/DataPackCommand ack
	ERROR_PACK_ALREADY_DISABLED c
	ERROR_PACK_ALREADY_ENABLED b
	ERROR_UNKNOWN_PACK a
	SELECTED_PACKS d
	UNSELECTED_PACKS e
	disablePack (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/packs/repository/Pack;)I a
	enablePack (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/packs/repository/Pack;Lnet/minecraft/server/commands/DataPackCommand$Inserter;)I a
	getPack (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Lnet/minecraft/server/packs/repository/Pack; a
	listAvailablePacks (Lnet/minecraft/commands/CommandSourceStack;)I b
	listEnabledPacks (Lnet/minecraft/commands/CommandSourceStack;)I c
	listPacks (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DataPackCommand$Inserter ack$a
net/minecraft/server/commands/DeOpCommands acl
	ERROR_NOT_OP a
	deopPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DebugCommand acm
	ERROR_ALREADY_RUNNING c
	ERROR_NOT_RUNNING b
	LOGGER a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	start (Lnet/minecraft/commands/CommandSourceStack;)I a
	stop (Lnet/minecraft/commands/CommandSourceStack;)I b
	traceFunction (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
net/minecraft/server/commands/DebugCommand$Tracer acm$a
	INDENT_OFFSET b
	lastIndent d
	output c
	waitingForResult e
	acceptsFailure ()Z j_
	acceptsSuccess ()Z i_
	alwaysAccepts ()Z d_
	indentAndSave (I)V a
	newLine ()V e
	onCall (ILnet/minecraft/resources/ResourceLocation;I)V a
	onCommand (ILjava/lang/String;)V a
	onError (ILjava/lang/String;)V b
	onReturn (ILjava/lang/String;I)V a
	printIndent (I)V b
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	shouldInformAdmins ()Z G_
net/minecraft/server/commands/DebugMobSpawningCommand acn
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spawnMobs (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;)I a
net/minecraft/server/commands/DebugPathCommand aco
	ERROR_NOT_COMPLETE c
	ERROR_NOT_MOB a
	ERROR_NO_PATH b
	fillBlocks (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DefaultGameModeCommands acp
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setMode (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/GameType;)I a
net/minecraft/server/commands/DifficultyCommand acq
	ERROR_ALREADY_DIFFICULT a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setDifficulty (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/Difficulty;)I a
net/minecraft/server/commands/EffectCommands acr
	ERROR_CLEAR_EVERYTHING_FAILED b
	ERROR_CLEAR_SPECIFIC_FAILED c
	ERROR_GIVE_FAILED a
	clearEffect (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/effect/MobEffect;)I a
	clearEffects (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	giveEffect (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/effect/MobEffect;Ljava/lang/Integer;IZ)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/EmoteCommands acs
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/EnchantCommand act
	ERROR_INCOMPATIBLE c
	ERROR_LEVEL_TOO_HIGH d
	ERROR_NOTHING_HAPPENED e
	ERROR_NOT_LIVING_ENTITY a
	ERROR_NO_ITEM b
	enchant (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/item/enchantment/Enchantment;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ExecuteCommand acu
	CALLBACK_CHAINER e
	ERROR_AREA_TOO_LARGE b
	ERROR_CONDITIONAL_FAILED c
	ERROR_CONDITIONAL_FAILED_COUNT d
	MAX_TEST_AREA a
	SUGGEST_PREDICATE f
	addConditional (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLnet/minecraft/server/commands/ExecuteCommand$CommandPredicate;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	addConditionals (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;ZLnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	addIfBlocksConditional (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	checkCustomPredicate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Z a
	checkIfRegions (Lcom/mojang/brigadier/context/CommandContext;Z)I a
	checkMatchingData (Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I a
	checkRegions (Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt; c
	checkRegions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Z)Ljava/util/OptionalInt; a
	checkScore (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/function/BiPredicate;)Z a
	checkScore (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Z a
	checkUnlessRegions (Lcom/mojang/brigadier/context/CommandContext;Z)I b
	createNumericConditionalHandler (ZLnet/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate;)Lcom/mojang/brigadier/Command; a
	expect (Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection; a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	storeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Ljava/util/function/IntFunction;Z)Lnet/minecraft/commands/CommandSourceStack; a
	storeValue (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;Z)Lnet/minecraft/commands/CommandSourceStack; a
	storeValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;ZZ)Lnet/minecraft/commands/CommandSourceStack; a
	wrapStores (Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
net/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate acu$a
net/minecraft/server/commands/ExecuteCommand$CommandPredicate acu$b
net/minecraft/server/commands/ExperienceCommand acv
	ERROR_SET_POINTS_INVALID a
	addExperience (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/server/commands/ExperienceCommand$Type;)I a
	queryExperience (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/commands/ExperienceCommand$Type;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setExperience (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/server/commands/ExperienceCommand$Type;)I b
net/minecraft/server/commands/ExperienceCommand$Type acv$a
	$VALUES g
	LEVELS b
	POINTS a
	add c
	name e
	query f
	set d
	$values ()[Lnet/minecraft/server/commands/ExperienceCommand$Type; a
net/minecraft/server/commands/FillCommand acw
	ERROR_AREA_TOO_LARGE b
	ERROR_FAILED d
	HOLLOW_CORE c
	MAX_FILL_AREA a
	fillBlocks (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/commands/arguments/blocks/BlockInput;Lnet/minecraft/server/commands/FillCommand$Mode;Ljava/util/function/Predicate;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
net/minecraft/server/commands/FillCommand$Mode acw$a
	$VALUES f
	DESTROY d
	HOLLOW c
	OUTLINE b
	REPLACE a
	filter e
	$values ()[Lnet/minecraft/server/commands/FillCommand$Mode; a
net/minecraft/server/commands/ForceLoadCommand acx
	ERROR_ALL_ADDED d
	ERROR_NONE_REMOVED e
	ERROR_NOT_TICKING c
	ERROR_TOO_MANY_CHUNKS b
	MAX_CHUNK_LIMIT a
	changeForceLoad (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ColumnPos;Lnet/minecraft/server/level/ColumnPos;Z)I a
	listForceLoad (Lnet/minecraft/commands/CommandSourceStack;)I a
	queryForceLoad (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ColumnPos;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeAll (Lnet/minecraft/commands/CommandSourceStack;)I b
net/minecraft/server/commands/FunctionCommand acy
	SUGGEST_FUNCTION a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	runFunction (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
net/minecraft/server/commands/GameModeCommand acz
	PERMISSION_LEVEL a
	logGamemodeChange (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/GameType;)V a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setMode (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lnet/minecraft/world/level/GameType;)I a
net/minecraft/server/commands/GameRuleCommand ada
	queryRule (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/GameRules$Key;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setRule (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/world/level/GameRules$Key;)I a
net/minecraft/server/commands/GiveCommand adb
	MAX_ALLOWED_ITEMSTACKS a
	giveItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/item/ItemInput;Ljava/util/Collection;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
net/minecraft/server/commands/HelpCommand adc
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ItemCommands add
	ERROR_SOURCE_INAPPLICABLE_SLOT d
	ERROR_SOURCE_NOT_A_CONTAINER c
	ERROR_TARGET_INAPPLICABLE_SLOT b
	ERROR_TARGET_NOT_A_CONTAINER a
	ERROR_TARGET_NO_CHANGES e
	ERROR_TARGET_NO_CHANGES_KNOWN_ITEM f
	SUGGEST_MODIFIER g
	applyModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	blockToBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos;I)I a
	blockToBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	blockToEntities (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILjava/util/Collection;I)I a
	blockToEntities (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILjava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	entityToBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;ILnet/minecraft/core/BlockPos;I)I a
	entityToBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;ILnet/minecraft/core/BlockPos;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	entityToEntities (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;ILjava/util/Collection;I)I a
	entityToEntities (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;ILjava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	getBlockItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/item/ItemStack; a
	getContainer (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;)Lnet/minecraft/world/Container; a
	getEntityItem (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/item/ItemStack; a
	modifyBlockItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	modifyEntityItem (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	setBlockItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/item/ItemStack;)I a
	setEntityItem (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/world/item/ItemStack;)I a
net/minecraft/server/commands/JfrCommand ade
	DUMP_FAILED b
	START_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	startJfr (Lnet/minecraft/commands/CommandSourceStack;)I a
	stopJfr (Lnet/minecraft/commands/CommandSourceStack;)I b
net/minecraft/server/commands/KickCommand adf
	kickPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/KillCommand adg
	kill (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ListPlayersCommand adh
	format (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/function/Function;)I a
	listPlayers (Lnet/minecraft/commands/CommandSourceStack;)I a
	listPlayersWithUuids (Lnet/minecraft/commands/CommandSourceStack;)I b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/LocateCommand adi
	BIOME_SAMPLE_RESOLUTION_HORIZONTAL i
	BIOME_SAMPLE_RESOLUTION_VERTICAL j
	ERROR_BIOME_INVALID d
	ERROR_BIOME_NOT_FOUND c
	ERROR_POI_INVALID f
	ERROR_POI_NOT_FOUND e
	ERROR_STRUCTURE_INVALID b
	ERROR_STRUCTURE_NOT_FOUND a
	MAX_BIOME_SEARCH_RADIUS h
	MAX_STRUCTURE_SEARCH_RADIUS g
	POI_SEARCH_RADIUS k
	dist (IIII)F a
	getHolders (Lnet/minecraft/commands/arguments/ResourceOrTagLocationArgument$Result;Lnet/minecraft/core/Registry;)Ljava/util/Optional; a
	locateBiome (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/ResourceOrTagLocationArgument$Result;)I b
	locatePoi (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/ResourceOrTagLocationArgument$Result;)I c
	locateStructure (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/ResourceOrTagLocationArgument$Result;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	showLocateResult (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/ResourceOrTagLocationArgument$Result;Lnet/minecraft/core/BlockPos;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;Z)I a
net/minecraft/server/commands/LootCommand adj
	ERROR_NO_HELD_ITEMS b
	ERROR_NO_LOOT_TABLE c
	SUGGEST_LOOT_TABLE a
	addTargets (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lnet/minecraft/server/commands/LootCommand$TailProvider;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	blockDistribute (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	blockReplace (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;IILjava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	callback (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;)V a
	callback (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;Lnet/minecraft/resources/ResourceLocation;)V a
	canMergeItems (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	distributeToContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;)Z a
	drop (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropBlockLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropChestLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropFishingLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropInWorld (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec3;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	dropKillLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	entityReplace (Ljava/util/Collection;IILjava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	getContainer (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/Container; a
	getSourceHandItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; a
	playerGive (Ljava/util/Collection;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	setSlots (Lnet/minecraft/world/entity/Entity;Ljava/util/List;IILjava/util/List;)V a
net/minecraft/server/commands/LootCommand$Callback adj$a
net/minecraft/server/commands/LootCommand$DropConsumer adj$b
net/minecraft/server/commands/LootCommand$TailProvider adj$c
net/minecraft/server/commands/MsgCommand adk
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	sendMessage (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/commands/arguments/MessageArgument$ChatMessage;)I a
net/minecraft/server/commands/OpCommand adl
	ERROR_ALREADY_OP a
	opPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/PardonCommand adm
	ERROR_NOT_BANNED a
	pardonPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/PardonIpCommand adn
	ERROR_INVALID a
	ERROR_NOT_BANNED b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	unban (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
net/minecraft/server/commands/ParticleCommand ado
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	sendParticles (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;FIZLjava/util/Collection;)I a
net/minecraft/server/commands/PerfCommand adp
	ERROR_ALREADY_RUNNING c
	ERROR_NOT_RUNNING b
	LOGGER a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	saveResults (Lnet/minecraft/commands/CommandSourceStack;Ljava/nio/file/Path;Lnet/minecraft/server/MinecraftServer;)V a
	startProfilingDedicatedServer (Lnet/minecraft/commands/CommandSourceStack;)I a
	stopProfilingDedicatedServer (Lnet/minecraft/commands/CommandSourceStack;)I b
	whenStopped (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/util/profiling/ProfileResults;)V a
net/minecraft/server/commands/PlaceCommand adq
	ERROR_FEATURE_FAILED a
	ERROR_JIGSAW_FAILED b
	ERROR_STRUCTURE_FAILED c
	ERROR_TEMPLATE_FAILED e
	ERROR_TEMPLATE_INVALID d
	SUGGEST_TEMPLATES f
	checkLoaded (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/ChunkPos;)V a
	placeFeature (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/Holder;Lnet/minecraft/core/BlockPos;)I a
	placeJigsaw (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/Holder;Lnet/minecraft/resources/ResourceLocation;ILnet/minecraft/core/BlockPos;)I a
	placeStructure (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/Holder;Lnet/minecraft/core/BlockPos;)I b
	placeTemplate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/block/Mirror;FI)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/PlaySoundCommand adr
	ERROR_TOO_FAR a
	playSound (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;Lnet/minecraft/world/phys/Vec3;FFF)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	source (Lnet/minecraft/sounds/SoundSource;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
net/minecraft/server/commands/PublishCommand ads
	ERROR_ALREADY_PUBLISHED b
	ERROR_FAILED a
	publish (Lnet/minecraft/commands/CommandSourceStack;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/RaidCommand adt
	check (Lnet/minecraft/commands/CommandSourceStack;)I d
	getRaid (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/world/entity/raid/Raid; a
	glow (Lnet/minecraft/commands/CommandSourceStack;)I a
	playSound (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setBadOmenLevel (Lnet/minecraft/commands/CommandSourceStack;I)I a
	spawnLeader (Lnet/minecraft/commands/CommandSourceStack;)I b
	start (Lnet/minecraft/commands/CommandSourceStack;I)I b
	stop (Lnet/minecraft/commands/CommandSourceStack;)I c
net/minecraft/server/commands/RecipeCommand adu
	ERROR_GIVE_FAILED a
	ERROR_TAKE_FAILED b
	giveRecipes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	takeRecipes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/Collection;)I b
net/minecraft/server/commands/ReloadCommand adv
	LOGGER a
	discoverNewPacks (Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/world/level/storage/WorldData;Ljava/util/Collection;)Ljava/util/Collection; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	reloadPacks (Ljava/util/Collection;Lnet/minecraft/commands/CommandSourceStack;)V a
net/minecraft/server/commands/ResetChunksCommand adw
	LOGGER a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	resetChunks (Lnet/minecraft/commands/CommandSourceStack;IZ)I a
net/minecraft/server/commands/SaveAllCommand adx
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	saveAll (Lnet/minecraft/commands/CommandSourceStack;Z)I a
net/minecraft/server/commands/SaveOffCommand ady
	ERROR_ALREADY_OFF a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/SaveOnCommand adz
	ERROR_ALREADY_ON a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/SayCommand aea
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ScheduleCommand aeb
	ERROR_CANT_REMOVE b
	ERROR_SAME_TICK a
	SUGGEST_SCHEDULE c
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	remove (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	schedule (Lnet/minecraft/commands/CommandSourceStack;Lcom/mojang/datafixers/util/Pair;IZ)I a
net/minecraft/server/commands/ScoreboardCommand aec
	ERROR_DISPLAY_SLOT_ALREADY_EMPTY b
	ERROR_DISPLAY_SLOT_ALREADY_SET c
	ERROR_NOT_TRIGGER e
	ERROR_NO_VALUE f
	ERROR_OBJECTIVE_ALREADY_EXISTS a
	ERROR_TRIGGER_ALREADY_ENABLED d
	addObjective (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Lnet/minecraft/network/chat/Component;)I a
	addScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I b
	clearDisplaySlot (Lnet/minecraft/commands/CommandSourceStack;I)I a
	createRenderTypeModify ()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
	enableTrigger (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I a
	getScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)I a
	listObjectives (Lnet/minecraft/commands/CommandSourceStack;)I b
	listTrackedPlayerScores (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	listTrackedPlayers (Lnet/minecraft/commands/CommandSourceStack;)I a
	performOperation (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/commands/arguments/OperationArgument$Operation;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeObjective (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;)I a
	removeScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I c
	resetScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I b
	resetScores (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	setDisplayName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/network/chat/Component;)I a
	setDisplaySlot (Lnet/minecraft/commands/CommandSourceStack;ILnet/minecraft/world/scores/Objective;)I a
	setRenderType (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)I a
	setScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I a
	suggestTriggers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/commands/SeedCommand aed
	register (Lcom/mojang/brigadier/CommandDispatcher;Z)V a
net/minecraft/server/commands/SetBlockCommand aee
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	setBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lnet/minecraft/commands/arguments/blocks/BlockInput;Lnet/minecraft/server/commands/SetBlockCommand$Mode;Ljava/util/function/Predicate;)I a
net/minecraft/server/commands/SetBlockCommand$Filter aee$a
net/minecraft/server/commands/SetBlockCommand$Mode aee$b
	$VALUES c
	DESTROY b
	REPLACE a
	$values ()[Lnet/minecraft/server/commands/SetBlockCommand$Mode; a
net/minecraft/server/commands/SetPlayerIdleTimeoutCommand aef
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setIdleTimeout (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/SetSpawnCommand aeg
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setSpawn (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/core/BlockPos;F)I a
net/minecraft/server/commands/SetWorldSpawnCommand aeh
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setSpawn (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;F)I a
net/minecraft/server/commands/SpectateCommand aei
	ERROR_NOT_SPECTATOR b
	ERROR_SELF a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spectate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerPlayer;)I a
net/minecraft/server/commands/SpreadPlayersCommand aej
	ERROR_FAILED_TO_SPREAD_ENTITIES c
	ERROR_FAILED_TO_SPREAD_TEAMS b
	ERROR_INVALID_MAX_HEIGHT d
	MAX_ITERATION_COUNT a
	createInitialPositions (Lnet/minecraft/util/RandomSource;IDDDD)[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position; a
	getNumberOfTeams (Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setPlayerPositions (Ljava/util/Collection;Lnet/minecraft/server/level/ServerLevel;[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;IZ)D a
	spreadPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec2;FFIZLjava/util/Collection;)I a
	spreadPositions (Lnet/minecraft/world/phys/Vec2;DLnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;DDDDI[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;Z)V a
net/minecraft/server/commands/SpreadPlayersCommand$Position aej$a
	x a
	z b
	clamp (DDDD)Z a
	dist (Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;)D a
	getLength ()D b
	getSpawnY (Lnet/minecraft/world/level/BlockGetter;I)I a
	isSafe (Lnet/minecraft/world/level/BlockGetter;I)Z b
	moveAway (Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;)V b
	normalize ()V a
	randomize (Lnet/minecraft/util/RandomSource;DDDD)V a
net/minecraft/server/commands/StopCommand aek
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/StopSoundCommand ael
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	stopSound (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/sounds/SoundSource;Lnet/minecraft/resources/ResourceLocation;)I a
net/minecraft/server/commands/SummonCommand aem
	ERROR_DUPLICATE_UUID b
	ERROR_FAILED a
	INVALID_POSITION c
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spawnEntity (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/nbt/CompoundTag;Z)I a
net/minecraft/server/commands/TagCommand aen
	ERROR_ADD_FAILED a
	ERROR_REMOVE_FAILED b
	addTag (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/lang/String;)I a
	getTags (Ljava/util/Collection;)Ljava/util/Collection; a
	listTags (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeTag (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/lang/String;)I b
net/minecraft/server/commands/TeamCommand aeo
	ERROR_TEAM_ALREADY_COLOR d
	ERROR_TEAM_ALREADY_EMPTY b
	ERROR_TEAM_ALREADY_EXISTS a
	ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED f
	ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED e
	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED h
	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED g
	ERROR_TEAM_ALREADY_NAME c
	ERROR_TEAM_COLLISION_UNCHANGED k
	ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED j
	ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED i
	createTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	createTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I a
	deleteTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I b
	emptyTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I a
	joinTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Ljava/util/Collection;)I a
	leaveTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	listMembers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I c
	listTeams (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setCollision (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$CollisionRule;)I a
	setColor (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/ChatFormatting;)I a
	setDeathMessageVisibility (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$Visibility;)I b
	setDisplayName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I a
	setFriendlyFire (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Z)I b
	setFriendlySight (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Z)I a
	setNametagVisibility (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$Visibility;)I a
	setPrefix (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I b
	setSuffix (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I c
net/minecraft/server/commands/TeamMsgCommand aep
	ERROR_NOT_ON_TEAM b
	SUGGEST_STYLE a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	sendMessage (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/MessageArgument$ChatMessage;)I a
net/minecraft/server/commands/TeleportCommand aeq
	INVALID_POSITION a
	formatDouble (D)Ljava/lang/String; a
	performTeleport (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;DDDLjava/util/Set;FFLnet/minecraft/server/commands/TeleportCommand$LookAt;)V a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	teleportToEntity (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/entity/Entity;)I a
	teleportToPos (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/commands/arguments/coordinates/Coordinates;Lnet/minecraft/commands/arguments/coordinates/Coordinates;Lnet/minecraft/server/commands/TeleportCommand$LookAt;)I a
net/minecraft/server/commands/TeleportCommand$LookAt aeq$a
	anchor c
	entity b
	position a
	perform (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/server/commands/TellRawCommand aer
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/TimeCommand aes
	addTime (Lnet/minecraft/commands/CommandSourceStack;I)I b
	getDayTime (Lnet/minecraft/server/level/ServerLevel;)I a
	queryTime (Lnet/minecraft/commands/CommandSourceStack;I)I c
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setTime (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/TitleCommand aet
	clearTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	resetTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I b
	setTimes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;III)I a
	showTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;Ljava/lang/String;Ljava/util/function/Function;)I a
net/minecraft/server/commands/TriggerCommand aeu
	ERROR_INVALID_OBJECTIVE b
	ERROR_NOT_PRIMED a
	addValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Score;I)I a
	getScore (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/scores/Objective;)Lnet/minecraft/world/scores/Score; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Score;I)I b
	simpleTrigger (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Score;)I a
	suggestObjectives (Lnet/minecraft/commands/CommandSourceStack;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/commands/WardenSpawnTrackerCommand aev
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	resetTracker (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	setWarningLevel (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;I)I a
net/minecraft/server/commands/WeatherCommand aew
	DEFAULT_TIME a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setClear (Lnet/minecraft/commands/CommandSourceStack;I)I a
	setRain (Lnet/minecraft/commands/CommandSourceStack;I)I b
	setThunder (Lnet/minecraft/commands/CommandSourceStack;I)I c
net/minecraft/server/commands/WhitelistCommand aex
	ERROR_ALREADY_DISABLED b
	ERROR_ALREADY_ENABLED a
	ERROR_ALREADY_WHITELISTED c
	ERROR_NOT_WHITELISTED d
	addPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	disableWhitelist (Lnet/minecraft/commands/CommandSourceStack;)I c
	enableWhitelist (Lnet/minecraft/commands/CommandSourceStack;)I b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	reload (Lnet/minecraft/commands/CommandSourceStack;)I a
	removePlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I b
	showList (Lnet/minecraft/commands/CommandSourceStack;)I d
net/minecraft/server/commands/WorldBorderCommand aey
	ERROR_SAME_CENTER a
	ERROR_SAME_DAMAGE_AMOUNT i
	ERROR_SAME_DAMAGE_BUFFER h
	ERROR_SAME_SIZE b
	ERROR_SAME_WARNING_DISTANCE g
	ERROR_SAME_WARNING_TIME f
	ERROR_TOO_BIG d
	ERROR_TOO_FAR_OUT e
	ERROR_TOO_SMALL c
	getSize (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setCenter (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec2;)I a
	setDamageAmount (Lnet/minecraft/commands/CommandSourceStack;F)I b
	setDamageBuffer (Lnet/minecraft/commands/CommandSourceStack;F)I a
	setSize (Lnet/minecraft/commands/CommandSourceStack;DJ)I a
	setWarningDistance (Lnet/minecraft/commands/CommandSourceStack;I)I b
	setWarningTime (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/data/BlockDataAccessor aez
	ERROR_NOT_A_BLOCK_ENTITY b
	PROVIDER a
	entity c
	pos d
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/DataAccessor afa
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/DataCommands afb
	ALL_PROVIDERS a
	ERROR_EXPECTED_LIST h
	ERROR_EXPECTED_OBJECT i
	ERROR_GET_NON_EXISTENT f
	ERROR_GET_NOT_NUMBER e
	ERROR_INVALID_INDEX j
	ERROR_MERGE_UNCHANGED d
	ERROR_MULTIPLE_TAGS g
	SOURCE_PROVIDERS c
	TARGET_PROVIDERS b
	decorateModification (Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	getData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;)I a
	getData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I b
	getNumeric (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;D)I a
	getSingleTag (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Lnet/minecraft/server/commands/data/DataAccessor;)Lnet/minecraft/nbt/Tag; a
	insertAtIndex (ILnet/minecraft/nbt/CompoundTag;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Ljava/util/List;)I a
	manipulateData (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/commands/data/DataCommands$DataProvider;Lnet/minecraft/server/commands/data/DataCommands$DataManipulator;Ljava/util/List;)I a
	mergeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/nbt/CompoundTag;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I a
net/minecraft/server/commands/data/DataCommands$DataManipulator afb$a
net/minecraft/server/commands/data/DataCommands$DataManipulatorDecorator afb$b
net/minecraft/server/commands/data/DataCommands$DataProvider afb$c
	access (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/commands/data/DataAccessor; a
	wrap (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
net/minecraft/server/commands/data/EntityDataAccessor afc
	ERROR_NO_PLAYERS b
	PROVIDER a
	entity c
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/StorageDataAccessor afd
	PROVIDER a
	SUGGEST_STORAGE b
	id d
	storage c
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getGlobalTags (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/world/level/storage/CommandStorage; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/dedicated/DedicatedPlayerList afg
	LOGGER a
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z d
	deop (Lcom/mojang/authlib/GameProfile;)V b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getServer ()Lnet/minecraft/server/dedicated/DedicatedServer; b
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z c
	loadIpBanList ()V y
	loadOps ()V A
	loadUserBanList ()V z
	loadWhiteList ()V C
	op (Lcom/mojang/authlib/GameProfile;)V a
	reloadWhiteList ()V a
	saveIpBanList ()V w
	saveOps ()V B
	saveUserBanList ()V x
	saveWhiteList ()V D
	setUsingWhiteList (Z)V a
net/minecraft/server/dedicated/DedicatedServer afh
	CONVERSION_RETRIES p
	CONVERSION_RETRY_DELAY_MS o
	LOGGER n
	consoleInput q
	gui v
	queryThreadGs4 r
	rconConsoleSource s
	rconThread t
	settings u
	textFilterClient w
	areNpcsEnabled ()Z W
	convertOldUsers ()Z bj
	createTextFilterForPlayer (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/network/TextFilter; a
	dumpServerProperties (Ljava/nio/file/Path;)V a
	enforceSecureProfile ()Z aw
	fillServerSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; a
	forceDifficulty ()V q
	forceSynchronousWrites ()Z aU
	getAbsoluteMaxWorldSize ()I as
	getCompressionThreshold ()I av
	getForcedGameType ()Lnet/minecraft/world/level/GameType; aY
	getFunctionCompilationLevel ()I i
	getLevelIdName ()Ljava/lang/String; r
	getMaxChainedNeighborUpdates ()I be
	getMaxTickLength ()J bk
	getOperatorUserPermissionLevel ()I h
	getPlayerList ()Lnet/minecraft/server/dedicated/DedicatedPlayerList; bh
	getPlayerList ()Lnet/minecraft/server/players/PlayerList; ac
	getPluginNames ()Ljava/lang/String; t
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	getRateLimitPacketsPerSecond ()I l
	getScaledTrackingDistance (I)I b
	getServerIp ()Ljava/lang/String; b
	getServerName ()Ljava/lang/String; p
	getServerPort ()I d
	getServerResourcePack ()Ljava/util/Optional; R
	getSpawnProtectionRadius ()I ah
	handleConsoleInput (Ljava/lang/String;Lnet/minecraft/commands/CommandSourceStack;)V a
	handleConsoleInputs ()V bg
	hasGui ()Z af
	hidesOnlinePlayers ()Z aj
	initServer ()Z e
	isCommandBlockEnabled ()Z n
	isDedicatedServer ()Z k
	isEpollEnabled ()Z m
	isHardcore ()Z g
	isNetherEnabled ()Z A
	isPublished ()Z o
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	isSpawningAnimals ()Z V
	isSpawningMonsters ()Z P
	isUnderSpawnProtection (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	onServerExit ()V f
	previewsChat ()Z aa
	repliesToStatus ()Z ai
	runCommand (Ljava/lang/String;)Ljava/lang/String; a
	setPlayerIdleTimeout (I)V c
	shouldInformAdmins ()Z G_
	shouldRconBroadcast ()Z j
	showGui ()V bi
	stopServer ()V s
	storeUsingWhiteList (Z)V i
	tickChildren (Ljava/util/function/BooleanSupplier;)V b
	waitForRetry ()V bt
net/minecraft/server/dedicated/DedicatedServerProperties afi
	LOGGER Y
	SHA1 Z
	allowFlight g
	allowNether v
	announcePlayerAchievements o
	broadcastConsoleToOps K
	broadcastRconToOps J
	difficulty k
	enableCommandBlock y
	enableJmxMonitoring N
	enableQuery p
	enableRcon r
	enableStatus O
	enforceSecureProfile W
	enforceWhitelist j
	entityBroadcastRangePercentage Q
	forceGameMode i
	functionPermissionLevel B
	gamemode l
	hardcore u
	hideOnlinePlayers P
	levelName m
	maxChainedNeighborUpdates D
	maxPlayers H
	maxTickTime C
	maxWorldSize L
	motd h
	networkCompressionThreshold I
	onlineMode a
	opPermissionLevel A
	playerIdleTimeout U
	preventProxyConnections b
	previewsChat T
	pvp f
	queryPort q
	rateLimitPacketsPerSecond E
	rconPassword t
	rconPort s
	serverIp c
	serverPort n
	serverResourcePackInfo S
	simulationDistance G
	spawnAnimals d
	spawnMonsters w
	spawnNpcs e
	spawnProtection z
	syncChunkWrites M
	textFilteringConfig R
	useNativeTransport x
	viewDistance F
	whiteList V
	worldGenProperties aa
	worldGenSettings ab
	fromFile (Ljava/nio/file/Path;)Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	getServerPackInfo (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Ljava/util/Optional; a
	getWorldGenSettings (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	parseResourcePackPrompt (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; c
	reload (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	reload (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/Settings; b
net/minecraft/server/dedicated/DedicatedServerProperties$WorldGenProperties afi$a
	LEGACY_PRESET_NAMES e
	generateStructures c
	generatorSettings b
	levelSeed a
	levelType d
	create (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	generateStructures ()Z c
	generatorSettings ()Lcom/google/gson/JsonObject; b
	levelSeed ()Ljava/lang/String; a
	levelType ()Ljava/lang/String; d
net/minecraft/server/dedicated/DedicatedServerSettings afj
	properties b
	source a
	forceSave ()V b
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	update (Ljava/util/function/UnaryOperator;)Lnet/minecraft/server/dedicated/DedicatedServerSettings; a
net/minecraft/server/dedicated/ServerWatchdog afk
	LOGGER a
	MAX_SHUTDOWN_TIME b
	SHUTDOWN_STATUS c
	maxTickTime e
	server d
	exit ()V a
net/minecraft/server/dedicated/Settings afl
	LOGGER a
	properties X
	cloneProperties ()Ljava/util/Properties; a
	dispatchNumberOrString (Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function; a
	get (Ljava/lang/String;I)I a
	get (Ljava/lang/String;J)J a
	get (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I a
	get (Ljava/lang/String;Z)Z a
	getLegacy (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object; a
	getLegacyBoolean (Ljava/lang/String;)Ljava/lang/Boolean; b
	getLegacyString (Ljava/lang/String;)Ljava/lang/String; a
	getMutable (Ljava/lang/String;I)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Z)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getStringRaw (Ljava/lang/String;)Ljava/lang/String; c
	loadFromFile (Ljava/nio/file/Path;)Ljava/util/Properties; b
	reload (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/Settings; b
	store (Ljava/nio/file/Path;)V c
	wrapNumberDeserializer (Ljava/util/function/Function;)Ljava/util/function/Function; a
net/minecraft/server/dedicated/Settings$MutableValue afl$a
	key b
	serializer d
	value c
	update (Lnet/minecraft/core/RegistryAccess;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings; a
net/minecraft/server/gui/MinecraftServerGui afn
	LOGGER b
	MONOSPACED a
	SHUTDOWN_TITLE d
	TITLE c
	finalizers g
	isClosing h
	logAppenderThread f
	server e
	addFinalizer (Ljava/lang/Runnable;)V a
	buildChatPanel ()Ljavax/swing/JComponent; e
	buildInfoPanel ()Ljavax/swing/JComponent; c
	buildPlayerPanel ()Ljavax/swing/JComponent; d
	close ()V b
	print (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V a
	runFinalizers ()V f
	showFrameFor (Lnet/minecraft/server/dedicated/DedicatedServer;)Lnet/minecraft/server/gui/MinecraftServerGui; a
	start ()V a
net/minecraft/server/gui/PlayerListComponent afo
	server a
	tickCount b
	tick ()V a
net/minecraft/server/gui/StatsComponent afp
	DECIMAL_FORMAT a
	msgs d
	server e
	timer f
	values b
	vp c
	close ()V a
	getAverage ([J)D a
	tick ()V b
net/minecraft/server/level/BlockDestructionProgress afr
	id a
	pos b
	progress c
	updatedRenderTick d
	compareTo (Lnet/minecraft/server/level/BlockDestructionProgress;)I a
	getId ()I a
	getPos ()Lnet/minecraft/core/BlockPos; b
	getProgress ()I c
	getUpdatedRenderTick ()I d
	setProgress (I)V a
	updateTick (I)V b
net/minecraft/server/level/ChunkHolder afs
	BLOCKS_BEFORE_RESEND_FUDGE h
	CHUNK_STATUSES f
	FULL_CHUNK_STATUSES g
	NOT_DONE_YET d
	UNLOADED_CHUNK a
	UNLOADED_CHUNK_FUTURE b
	UNLOADED_LEVEL_CHUNK c
	UNLOADED_LEVEL_CHUNK_FUTURE e
	blockChangedLightSectionFilter v
	changedBlocksPerSection u
	chunkToSave n
	chunkToSaveHistory o
	entityTickingChunkFuture m
	fullChunkFuture k
	futures i
	hasChangedSections t
	levelHeightAccessor j
	lightEngine x
	oldTicketLevel p
	onLevelChange y
	pendingFullStateConfirmation C
	playerProvider z
	pos s
	queueLevel r
	resendLight B
	skyChangedLightSectionFilter w
	ticketLevel q
	tickingChunkFuture l
	wasAccessibleSinceLastSave A
	addSaveDependency (Ljava/lang/String;Ljava/util/concurrent/CompletableFuture;)V a
	blockChanged (Lnet/minecraft/core/BlockPos;)V a
	broadcast (Lnet/minecraft/network/protocol/Packet;Z)V a
	broadcastBlockEntity (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	broadcastBlockEntityIfNeeded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	broadcastChanges (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	demoteFullChunk (Lnet/minecraft/server/level/ChunkMap;Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)V a
	getAllFutures ()Ljava/util/List; o
	getChunkToSave ()Ljava/util/concurrent/CompletableFuture; h
	getEntityTickingChunkFuture ()Ljava/util/concurrent/CompletableFuture; b
	getFullChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; e
	getFullChunkFuture ()Ljava/util/concurrent/CompletableFuture; c
	getFullChunkStatus (I)Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; c
	getFullStatus ()Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; i
	getFutureIfPresent (Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; b
	getFutureIfPresentUnchecked (Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; a
	getLastAvailable ()Lnet/minecraft/world/level/chunk/ChunkAccess; g
	getLastAvailableStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; f
	getOrScheduleFuture (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/server/level/ChunkMap;)Ljava/util/concurrent/CompletableFuture; a
	getPos ()Lnet/minecraft/world/level/ChunkPos; j
	getQueueLevel ()I l
	getStatus (I)Lnet/minecraft/world/level/chunk/ChunkStatus; b
	getTicketLevel ()I k
	getTickingChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; d
	getTickingChunkFuture ()Ljava/util/concurrent/CompletableFuture; a
	refreshAccessibility ()V n
	replaceProtoChunk (Lnet/minecraft/world/level/chunk/ImposterProtoChunk;)V a
	scheduleFullChunkPromotion (Lnet/minecraft/server/level/ChunkMap;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)V a
	sectionLightChanged (Lnet/minecraft/world/level/LightLayer;I)V a
	setQueueLevel (I)V d
	setTicketLevel (I)V a
	updateChunkToSave (Ljava/util/concurrent/CompletableFuture;Ljava/lang/String;)V a
	updateFutures (Lnet/minecraft/server/level/ChunkMap;Ljava/util/concurrent/Executor;)V a
	wasAccessibleSinceLastSave ()Z m
net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure afs$a
	UNLOADED b
net/minecraft/server/level/ChunkHolder$ChunkSaveDebug afs$b
	future b
	source c
	thread a
net/minecraft/server/level/ChunkHolder$FullChunkStatus afs$c
	$VALUES e
	BORDER b
	ENTITY_TICKING d
	INACCESSIBLE a
	TICKING c
	$values ()[Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; a
	isOrAfter (Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)Z a
net/minecraft/server/level/ChunkHolder$LevelChangeListener afs$d
net/minecraft/server/level/ChunkHolder$PlayerProvider afs$e
	getPlayers (Lnet/minecraft/world/level/ChunkPos;Z)Ljava/util/List; a
net/minecraft/server/level/ChunkMap aft
	CHUNK_SAVED_EAGERLY_PER_TICK k
	CHUNK_SAVED_PER_TICK j
	CHUNK_TYPE_FULL h
	CHUNK_TYPE_REPLACEABLE f
	CHUNK_TYPE_UNKNOWN g
	EAGER_CHUNK_SAVE_COOLDOWN_IN_MILLIS l
	FORCED_TICKET_LEVEL c
	LOGGER i
	MAX_CHUNK_DISTANCE b
	MAX_VIEW_DISTANCE a
	MIN_VIEW_DISTANCE m
	chunkSaveCooldowns M
	chunkStatusListener E
	chunkTypeCache L
	distanceManager F
	entitiesInLevel q
	entityMap K
	generator u
	level r
	lightEngine s
	mainThreadExecutor t
	mainThreadMailbox C
	modified z
	overworldDataStorage w
	pendingUnloads p
	playerMap J
	poiManager x
	progressListener D
	queueSorter A
	randomState v
	storageName I
	structureTemplateManager H
	tickingGenerated G
	toDrop y
	unloadQueue N
	updatingChunkMap n
	viewDistance O
	visibleChunkMap o
	worldgenMailbox B
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	anyPlayerCloseEnoughForSpawning (Lnet/minecraft/world/level/ChunkPos;)Z d
	broadcast (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAndSend (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V b
	createEmptyChunk (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/chunk/ChunkAccess; h
	debugFuturesAndCreateReportedException (Ljava/lang/IllegalStateException;Ljava/lang/String;)Lnet/minecraft/ReportedException; a
	debugReloadGenerator ()V c
	dumpChunks (Ljava/io/Writer;)V a
	euclideanDistanceSquared (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/Entity;)D a
	generator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; a
	getChunkDebugData (Lnet/minecraft/world/level/ChunkPos;)Ljava/lang/String; a
	getChunkQueueLevel (J)Ljava/util/function/IntSupplier; c
	getChunkRangeFuture (Lnet/minecraft/world/level/ChunkPos;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture; a
	getChunks ()Ljava/lang/Iterable; j
	getDependencyStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;I)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	getDistanceManager ()Lnet/minecraft/server/level/DistanceManager; i
	getLightEngine ()Lnet/minecraft/server/level/ThreadedLevelLightEngine; d
	getPlayers (Lnet/minecraft/world/level/ChunkPos;Z)Ljava/util/List; a
	getPlayersCloseForSpawning (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/List; e
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; l
	getStorageName ()Ljava/lang/String; m
	getTickingGenerated ()I g
	getUpdatingChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; a
	getVisibleChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; b
	handleChunkLoadFailure (Ljava/lang/Throwable;Lnet/minecraft/world/level/ChunkPos;)Lcom/mojang/datafixers/util/Either; a
	hasWork ()Z e
	isChunkDataValid (Lnet/minecraft/nbt/CompoundTag;)Z b
	isChunkInRange (IIIII)Z a
	isChunkOnRangeBorder (IIIII)Z b
	isExistingChunkFull (Lnet/minecraft/world/level/ChunkPos;)Z j
	markPosition (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;)B a
	markPositionReplaceable (Lnet/minecraft/world/level/ChunkPos;)V i
	move (Lnet/minecraft/server/level/ServerPlayer;)V a
	onFullChunkStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)V a
	playerIsCloseEnoughForSpawning (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/ChunkPos;)Z a
	playerLoadedChunk (Lnet/minecraft/server/level/ServerPlayer;Lorg/apache/commons/lang3/mutable/MutableObject;Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	postLoadProtoChunk (Lnet/minecraft/server/level/ServerLevel;Ljava/util/List;)V a
	prepareAccessibleChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; b
	prepareEntityTickingChunk (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; b
	prepareTickingChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; a
	printFuture (Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String; a
	processUnloads (Ljava/util/function/BooleanSupplier;)V b
	promoteChunkMap ()Z f
	protoChunkToFullChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; c
	randomState ()Lnet/minecraft/world/level/levelgen/RandomState; b
	readChunk (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; k
	releaseLightTicket (Lnet/minecraft/world/level/ChunkPos;)V c
	removeEntity (Lnet/minecraft/world/entity/Entity;)V b
	save (Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	saveAllChunks (Z)V a
	saveChunkIfNeeded (Lnet/minecraft/server/level/ChunkHolder;)Z d
	schedule (Lnet/minecraft/server/level/ChunkHolder;Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; a
	scheduleChunkGeneration (Lnet/minecraft/server/level/ChunkHolder;Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; b
	scheduleChunkLoad (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; g
	scheduleUnload (JLnet/minecraft/server/level/ChunkHolder;)V a
	setViewDistance (I)V a
	size ()I h
	skipPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z b
	tick ()V k
	tick (Ljava/util/function/BooleanSupplier;)V a
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
	updateChunkTracking (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/ChunkPos;Lorg/apache/commons/lang3/mutable/MutableObject;ZZ)V a
	updatePlayerPos (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/core/SectionPos; c
	updatePlayerStatus (Lnet/minecraft/server/level/ServerPlayer;Z)V a
	upgradeChunkTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; c
net/minecraft/server/level/ChunkMap$DistanceManager aft$a
	getChunk (J)Lnet/minecraft/server/level/ChunkHolder; b
	isChunkToRemove (J)Z a
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
net/minecraft/server/level/ChunkMap$TrackedEntity aft$b
	entity c
	lastSectionPos e
	range d
	seenBy f
	serverEntity b
	broadcast (Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAndSend (Lnet/minecraft/network/protocol/Packet;)V b
	broadcastRemoved ()V a
	getEffectiveRange ()I b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	scaledRange (I)I a
	updatePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	updatePlayers (Ljava/util/List;)V a
net/minecraft/server/level/ChunkTaskPriorityQueue afu
	PRIORITY_LEVEL_COUNT a
	acquired e
	firstQueue c
	maxTasks f
	name d
	taskQueue b
	acquire (J)Ljava/lang/Runnable; a
	getAcquired ()Lit/unimi/dsi/fastutil/longs/LongSet; c
	hasWork ()Z b
	pop ()Ljava/util/stream/Stream; a
	release (JZ)V a
	resortChunkTasks (ILnet/minecraft/world/level/ChunkPos;I)V a
	submit (Ljava/util/Optional;JI)V a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter afv
	LOGGER a
	mailbox d
	queues b
	sleeping c
	getDebugStatus ()Ljava/lang/String; b
	getProcessor (Lnet/minecraft/util/thread/ProcessorHandle;Z)Lnet/minecraft/util/thread/ProcessorHandle; a
	getQueue (Lnet/minecraft/util/thread/ProcessorHandle;)Lnet/minecraft/server/level/ChunkTaskPriorityQueue; b
	getReleaseProcessor (Lnet/minecraft/util/thread/ProcessorHandle;)Lnet/minecraft/util/thread/ProcessorHandle; a
	hasWork ()Z a
	message (Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Ljava/util/function/Function;JLjava/util/function/IntSupplier;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Lnet/minecraft/server/level/ChunkHolder;Ljava/lang/Runnable;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Lnet/minecraft/server/level/ChunkHolder;Ljava/util/function/Function;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	pollTask (Lnet/minecraft/server/level/ChunkTaskPriorityQueue;Lnet/minecraft/util/thread/ProcessorHandle;)V a
	release (Ljava/lang/Runnable;JZ)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release; a
	release (Lnet/minecraft/util/thread/ProcessorHandle;JLjava/lang/Runnable;Z)V a
	submit (Lnet/minecraft/util/thread/ProcessorHandle;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message afv$a
	level c
	pos b
	task a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release afv$b
	clearQueue c
	pos b
	task a
net/minecraft/server/level/ChunkTracker afw
	checkNeighborsAfterUpdate (JIZ)V a
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLevelFromSource (J)I b
	isSource (J)Z a
	update (JIZ)V b
net/minecraft/server/level/ColumnPos afx
	COORD_BITS c
	COORD_MASK d
	x a
	z b
	asLong (II)J a
	getX (J)I a
	getZ (J)I b
	toChunkPos ()Lnet/minecraft/world/level/ChunkPos; a
	toLong ()J b
	x ()I c
	z ()I d
net/minecraft/server/level/DemoMode afy
	DEMO_DAYS a
	TOTAL_PLAY_TICKS b
	demoEndedReminder g
	demoHasEnded f
	displayedIntro e
	gameModeTicks h
	handleBlockBreakAction (Lnet/minecraft/core/BlockPos;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Lnet/minecraft/core/Direction;II)V a
	outputDemoReminder ()V f
	tick ()V a
	useItem (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/server/level/DistanceManager afz
	BLOCK_TICKING_LEVEL_THRESHOLD f
	ENTITY_TICKING_LEVEL_THRESHOLD e
	ENTITY_TICKING_RANGE b
	INITIAL_TICKET_LIST_CAPACITY d
	LOGGER a
	PLAYER_TICKET_LEVEL c
	chunksToUpdateFutures m
	mainThreadExecutor r
	naturalSpawnChunkCounter j
	playerTicketManager l
	playersPerChunk g
	simulationDistance t
	ticketThrottler n
	ticketThrottlerInput o
	ticketThrottlerReleaser p
	ticketTickCounter s
	ticketTracker i
	tickets h
	ticketsToRelease q
	tickingTicketsTracker k
	addPlayer (Lnet/minecraft/core/SectionPos;Lnet/minecraft/server/level/ServerPlayer;)V a
	addRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V c
	addTicket (JLnet/minecraft/server/level/Ticket;)V a
	addTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V a
	dumpTickets (Ljava/lang/String;)V a
	getChunk (J)Lnet/minecraft/server/level/ChunkHolder; b
	getDebugStatus ()Ljava/lang/String; c
	getNaturalSpawnChunkCount ()I b
	getPlayerTicketLevel ()I g
	getTicketDebugString (J)Ljava/lang/String; e
	getTicketLevelAt (Lnet/minecraft/util/SortedArraySet;)I a
	getTickets (J)Lnet/minecraft/util/SortedArraySet; g
	hasPlayersNearby (J)Z f
	hasTickets ()Z f
	inBlockTickingRange (J)Z d
	inEntityTickingRange (J)Z c
	isChunkToRemove (J)Z a
	purgeStaleTickets ()V a
	removePlayer (Lnet/minecraft/core/SectionPos;Lnet/minecraft/server/level/ServerPlayer;)V b
	removeRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V d
	removeTicket (JLnet/minecraft/server/level/Ticket;)V b
	removeTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V b
	removeTicketsOnClosing ()V e
	runAllUpdates (Lnet/minecraft/server/level/ChunkMap;)Z a
	tickingTracker ()Lnet/minecraft/server/level/TickingTracker; d
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
	updatePlayerTickets (I)V a
	updateSimulationDistance (I)V b
net/minecraft/server/level/DistanceManager$ChunkTicketTracker afz$a
	getLevel (J)I c
	getLevelFromSource (J)I b
	runDistanceUpdates (I)I a
	setLevel (JI)V a
net/minecraft/server/level/DistanceManager$FixedPlayerDistanceChunkTracker afz$b
	chunks a
	maxDistance b
	dumpChunks (Ljava/lang/String;)V a
	getLevel (J)I c
	getLevelFromSource (J)I b
	havePlayer (J)Z d
	onLevelChange (JII)V a
	runAllUpdates ()V a
	setLevel (JI)V a
net/minecraft/server/level/DistanceManager$PlayerTicketTracker afz$c
	queueLevels f
	toUpdate g
	viewDistance e
	haveTicketFor (I)Z c
	onLevelChange (JII)V a
	onLevelChange (JIZZ)V a
	runAllUpdates ()V a
	updateViewDistance (I)V a
net/minecraft/server/level/PlayerMap aga
	players a
	addPlayer (JLnet/minecraft/server/level/ServerPlayer;Z)V a
	getPlayers (J)Ljava/util/Set; a
	ignorePlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	ignored (Lnet/minecraft/server/level/ServerPlayer;)Z d
	ignoredOrUnknown (Lnet/minecraft/server/level/ServerPlayer;)Z c
	removePlayer (JLnet/minecraft/server/level/ServerPlayer;)V a
	unIgnorePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	updatePlayer (JJLnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/server/level/PlayerRespawnLogic agb
	getOverworldRespawnPos (Lnet/minecraft/server/level/ServerLevel;II)Lnet/minecraft/core/BlockPos; a
	getSpawnPosInChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/core/BlockPos; a
net/minecraft/server/level/SectionTracker agc
	checkNeighborsAfterUpdate (JIZ)V a
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLevelFromSource (J)I b
	isSource (J)Z a
	update (JIZ)V b
net/minecraft/server/level/ServerBossEvent agd
	players h
	unmodifiablePlayers i
	visible j
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	broadcast (Ljava/util/function/Function;)V a
	getPlayers ()Ljava/util/Collection; h
	isVisible ()Z g
	removeAllPlayers ()V b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	setColor (Lnet/minecraft/world/BossEvent$BossBarColor;)V a
	setCreateWorldFog (Z)Lnet/minecraft/world/BossEvent; c
	setDarkenScreen (Z)Lnet/minecraft/world/BossEvent; a
	setName (Lnet/minecraft/network/chat/Component;)V a
	setOverlay (Lnet/minecraft/world/BossEvent$BossBarOverlay;)V a
	setPlayBossMusic (Z)Lnet/minecraft/world/BossEvent; b
	setProgress (F)V a
	setVisible (Z)V d
net/minecraft/server/level/ServerChunkCache age
	CACHE_SIZE l
	CHUNK_STATUSES b
	chunkMap a
	dataStorage h
	distanceManager c
	lastChunk o
	lastChunkPos m
	lastChunkStatus n
	lastInhabitedUpdate i
	lastSpawnState p
	level d
	lightEngine f
	mainThread e
	mainThreadProcessor g
	spawnEnemies j
	spawnFriendlies k
	addEntity (Lnet/minecraft/world/entity/Entity;)V b
	addRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V a
	blockChanged (Lnet/minecraft/core/BlockPos;)V a
	broadcast (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V b
	broadcastAndSend (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V a
	chunkAbsent (Lnet/minecraft/server/level/ChunkHolder;I)Z a
	chunkScanner ()Lnet/minecraft/world/level/chunk/storage/ChunkScanAccess; l
	clearCache ()V q
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkDebugData (Lnet/minecraft/world/level/ChunkPos;)Ljava/lang/String; a
	getChunkForLighting (II)Lnet/minecraft/world/level/BlockGetter; c
	getChunkFuture (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; b
	getChunkFutureMainThread (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; c
	getChunkNow (II)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getDataStorage ()Lnet/minecraft/world/level/storage/DimensionDataStorage; j
	getFullChunk (JLjava/util/function/Consumer;)V a
	getGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; g
	getLastSpawnState ()Lnet/minecraft/world/level/NaturalSpawner$SpawnState; m
	getLevel ()Lnet/minecraft/world/level/BlockGetter; p
	getLevel ()Lnet/minecraft/world/level/Level; c
	getLightEngine ()Lnet/minecraft/server/level/ThreadedLevelLightEngine; a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; o
	getLoadedChunksCount ()I i
	getPendingTasksCount ()I f
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; k
	getTickingGenerated ()I b
	getVisibleChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; b
	hasChunk (II)Z b
	isPositionTicking (J)Z a
	move (Lnet/minecraft/server/level/ServerPlayer;)V a
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
	pollTask ()Z d
	randomState ()Lnet/minecraft/world/level/levelgen/RandomState; h
	removeEntity (Lnet/minecraft/world/entity/Entity;)V a
	removeRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V b
	removeTicketsOnClosing ()V n
	runDistanceManagerUpdates ()Z r
	save (Z)V a
	setSimulationDistance (I)V b
	setSpawnSettings (ZZ)V a
	setViewDistance (I)V a
	storeInCache (JLnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	tick (Ljava/util/function/BooleanSupplier;Z)V a
	tickChunks ()V s
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
net/minecraft/server/level/ServerChunkCache$ChunkAndHolder age$a
	chunk a
	holder b
	chunk ()Lnet/minecraft/world/level/chunk/LevelChunk; a
	holder ()Lnet/minecraft/server/level/ChunkHolder; b
net/minecraft/server/level/ServerChunkCache$MainThreadExecutor age$b
	doRunTask (Ljava/lang/Runnable;)V d
	getRunningThread ()Ljava/lang/Thread; au
	pollTask ()Z x
	scheduleExecutables ()Z at
	shouldRun (Ljava/lang/Runnable;)Z e
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; f
net/minecraft/server/level/ServerEntity agf
	LOGGER a
	TOLERANCE_LEVEL_ROTATION b
	ap l
	broadcast g
	entity d
	lastPassengers o
	level c
	positionCodec h
	teleportDelay n
	tickCount m
	trackDelta f
	updateInterval e
	wasOnGround q
	wasRiding p
	xRotp j
	yHeadRotp k
	yRotp i
	addPairing (Lnet/minecraft/server/level/ServerPlayer;)V b
	broadcastAndSend (Lnet/minecraft/network/protocol/Packet;)V a
	removePairing (Lnet/minecraft/server/level/ServerPlayer;)V a
	sendChanges ()V a
	sendDirtyEntityData ()V b
	sendPairingData (Ljava/util/function/Consumer;)V a
net/minecraft/server/level/ServerLevel agg
	EMPTY_TIME_NO_TICK I
	END_SPAWN_POINT a
	LOGGER H
	MAX_RAIN_DELAY_TIME A
	MAX_RAIN_TIME C
	MAX_SCHEDULED_TICKS_PER_TICK J
	MAX_THUNDER_DELAY_TIME E
	MAX_THUNDER_TIME G
	MIN_RAIN_DELAY_TIME z
	MIN_RAIN_TIME B
	MIN_THUNDER_DELAY_TIME D
	MIN_THUNDER_TIME F
	blockEvents X
	blockEventsToReschedule Y
	blockTicks T
	chunkSource L
	customSpawners ab
	dragonFight ac
	dragonParts ad
	emptyTime R
	entityManager P
	entityTickList O
	fluidTicks U
	gameEventMessages Z
	handlingTick aa
	isUpdatingNavigations W
	navigatingMobs V
	noSave b
	players K
	portalForcer S
	raids c
	server M
	serverLevelData N
	sleepStatus Q
	structureCheck af
	structureManager ae
	tickTime ag
	addDuringCommandTeleport (Lnet/minecraft/server/level/ServerPlayer;)V a
	addDuringPortalTeleport (Lnet/minecraft/server/level/ServerPlayer;)V b
	addDuringTeleport (Lnet/minecraft/world/entity/Entity;)V d
	addEntity (Lnet/minecraft/world/entity/Entity;)Z j
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z b
	addLegacyChunkEntities (Ljava/util/stream/Stream;)V a
	addNewPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V e
	addRespawnedPlayer (Lnet/minecraft/server/level/ServerPlayer;)V d
	addWithUUID (Lnet/minecraft/world/entity/Entity;)Z c
	addWorldGenChunkEntities (Ljava/util/stream/Stream;)V b
	advanceWeatherCycle ()V ap
	announceSleepStatus ()V ao
	areEntitiesLoaded (J)Z c
	blockEvent (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;II)V a
	blockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V b
	broadcastEntityEvent (Lnet/minecraft/world/entity/Entity;B)V a
	canSleepThroughNights ()Z d
	clearBlockEvents (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	doBlockEvent (Lnet/minecraft/world/level/BlockEventData;)Z a
	dragonFight ()Lnet/minecraft/world/level/dimension/end/EndDragonFight; C
	dumpBlockEntityTickers (Ljava/io/Writer;)V a
	dumpEntities (Ljava/io/Writer;Ljava/lang/Iterable;)V a
	explode (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion; a
	findClosestBiome3d (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;III)Lcom/mojang/datafixers/util/Pair; a
	findLightningRod (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; F
	findLightningTargetAround (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findNearestMapStructure (Lnet/minecraft/tags/TagKey;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)V a
	gatherChunkSourceStats ()Ljava/lang/String; G
	getAllEntities ()Ljava/lang/Iterable; z
	getBlockTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; K
	getBlockTicks ()Lnet/minecraft/world/ticks/LevelTicks; l
	getChunkSource ()Lnet/minecraft/server/level/ServerChunkCache; k
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; I
	getDataStorage ()Lnet/minecraft/world/level/storage/DimensionDataStorage; t
	getDragons ()Ljava/util/List; h
	getEntities ()Lnet/minecraft/world/level/entity/LevelEntityGetter; F
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getEntity (Ljava/util/UUID;)Lnet/minecraft/world/entity/Entity; a
	getEntityOrPart (I)Lnet/minecraft/world/entity/Entity; b
	getFluidTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; J
	getFluidTicks ()Lnet/minecraft/world/ticks/LevelTicks; m
	getForcedChunks ()Lit/unimi/dsi/fastutil/longs/LongSet; v
	getFreeMapId ()I u
	getLevel ()Lnet/minecraft/server/level/ServerLevel; D
	getLogicalHeight ()I j
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getPlayers (Ljava/util/function/Predicate;)Ljava/util/List; a
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; x
	getPortalForcer ()Lnet/minecraft/world/level/portal/PortalForcer; o
	getRaidAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/raid/Raid; c
	getRaids ()Lnet/minecraft/world/entity/raid/Raids; y
	getRandomPlayer ()Lnet/minecraft/server/level/ServerPlayer; i
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; q
	getScoreboard ()Lnet/minecraft/server/ServerScoreboard; f
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; H
	getSeed ()J B
	getServer ()Lnet/minecraft/server/MinecraftServer; n
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getStructureManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; p
	getTypeCount (Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/lang/String; a
	getUncachedNoiseBiome (III)Lnet/minecraft/core/Holder; a
	getWatchdogStats ()Ljava/lang/String; E
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	handleGameEventMessagesInQueue (Ljava/util/List;)V a
	isCloseToVillage (Lnet/minecraft/core/BlockPos;I)Z a
	isFlat ()Z A
	isHandlingTick ()Z c
	isNaturalSpawningAllowed (Lnet/minecraft/core/BlockPos;)Z f
	isNaturalSpawningAllowed (Lnet/minecraft/world/level/ChunkPos;)Z a
	isPositionEntityTicking (Lnet/minecraft/core/BlockPos;)Z e
	isPositionTickingWithEntitiesLoaded (J)Z d
	isRaided (Lnet/minecraft/core/BlockPos;)Z d
	isVillage (Lnet/minecraft/core/BlockPos;)Z b
	isVillage (Lnet/minecraft/core/SectionPos;)Z a
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	makeObsidianPlatform (Lnet/minecraft/server/level/ServerLevel;)V a
	mayInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;)Z a
	neighborChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	noSave ()Z r
	onBlockStateChange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	onReputationEvent (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ReputationEventHandler;)V a
	onStructureStartsAvailable (Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	playSeededSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFJ)V a
	playSeededSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFJ)V a
	players ()Ljava/util/List; w
	registryAccess ()Lnet/minecraft/core/RegistryAccess; s
	removePlayerImmediately (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	resetEmptyTime ()V g
	resetWeatherCycle ()V aq
	runBlockEvents ()V at
	save (Lnet/minecraft/util/ProgressListener;ZZ)V a
	saveDebugReport (Ljava/nio/file/Path;)V a
	saveLevelData ()V ar
	sectionsToVillage (Lnet/minecraft/core/SectionPos;)I b
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendGameEvents ()V as
	sendParticles (Lnet/minecraft/core/particles/ParticleOptions;DDDIDDDD)I a
	sendParticles (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/particles/ParticleOptions;ZDDDIDDDD)Z a
	sendParticles (Lnet/minecraft/server/level/ServerPlayer;ZDDDLnet/minecraft/network/protocol/Packet;)Z a
	setChunkForced (IIZ)Z a
	setDayTime (J)V b
	setDefaultSpawnPos (Lnet/minecraft/core/BlockPos;F)V a
	setMapData (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setWeatherParameters (IIZZ)V a
	shouldDiscardEntity (Lnet/minecraft/world/entity/Entity;)Z i
	shouldTickBlocksAt (J)Z a
	startTickingChunk (Lnet/minecraft/world/level/chunk/LevelChunk;)V b
	structureManager ()Lnet/minecraft/world/level/StructureManager; a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tickBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V d
	tickChunk (Lnet/minecraft/world/level/chunk/LevelChunk;I)V a
	tickCustomSpawners (ZZ)V a
	tickFluid (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)V a
	tickNonPassenger (Lnet/minecraft/world/entity/Entity;)V a
	tickPassenger (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)V a
	tickTime ()V b
	tryAddFreshEntityWithPassengers (Lnet/minecraft/world/entity/Entity;)Z e
	unload (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	updateNeighborsAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	updateNeighborsAtExceptFromFacing (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;)V a
	updateSleepingPlayerList ()V e
	wakeUpAllPlayers ()V an
net/minecraft/server/level/ServerLevel$EntityCallbacks agg$a
	onCreated (Ljava/lang/Object;)V g
	onCreated (Lnet/minecraft/world/entity/Entity;)V a
	onDestroyed (Ljava/lang/Object;)V f
	onDestroyed (Lnet/minecraft/world/entity/Entity;)V b
	onSectionChange (Ljava/lang/Object;)V a
	onSectionChange (Lnet/minecraft/world/entity/Entity;)V g
	onTickingEnd (Ljava/lang/Object;)V d
	onTickingEnd (Lnet/minecraft/world/entity/Entity;)V d
	onTickingStart (Ljava/lang/Object;)V e
	onTickingStart (Lnet/minecraft/world/entity/Entity;)V c
	onTrackingEnd (Ljava/lang/Object;)V b
	onTrackingEnd (Lnet/minecraft/world/entity/Entity;)V f
	onTrackingStart (Ljava/lang/Object;)V c
	onTrackingStart (Lnet/minecraft/world/entity/Entity;)V e
net/minecraft/server/level/ServerPlayer agh
	LOGGER co
	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_XZ cp
	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_Y cq
	advancements cr
	allowsListing cY
	camera cH
	canChatColor cF
	chatVisibility cE
	connection b
	containerCounter db
	containerListener da
	containerSynchronizer cZ
	disconnected cN
	enteredLavaOnVehiclePosition cQ
	enteredNetherPosition cP
	gameMode d
	isChangingDimension cI
	lastActionTime cG
	lastFoodSaturationZero cB
	lastRecordedAirLevel cv
	lastRecordedArmor cw
	lastRecordedExperience cy
	lastRecordedFoodLevel cu
	lastRecordedHealthAndAbsorption ct
	lastRecordedLevel cx
	lastSectionPos cR
	lastSentExp cC
	lastSentFood cA
	lastSentHealth cz
	latency e
	levitationStartPos cL
	levitationStartTime cM
	recipeBook cK
	respawnAngle cV
	respawnDimension cS
	respawnForced cU
	respawnPosition cT
	seenCredits cJ
	server c
	spawnInvulnerableTime cD
	startingToFallPosition cO
	stats cs
	textFilter cW
	textFilteringEnabled cX
	wonGame f
	acceptsChatMessages ()Z ge
	acceptsSystemMessages (Z)Z u
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	allowsListing ()Z V
	attack (Lnet/minecraft/world/entity/Entity;)V d
	awardKillScore (Lnet/minecraft/world/entity/Entity;ILnet/minecraft/world/damagesource/DamageSource;)V a
	awardRecipes (Ljava/util/Collection;)I a
	awardRecipesByKey ([Lnet/minecraft/resources/ResourceLocation;)V a
	awardStat (Lnet/minecraft/stats/Stat;I)V a
	bedBlocked (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	bedInRange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	broadcastToPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z a
	calculateGameModeForNewPlayer (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/GameType; b
	canChatInColor ()Z z
	canHarmPlayer (Lnet/minecraft/world/entity/player/Player;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	closeContainer ()V q
	completeUsingItem ()V v
	createEndPlatform (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	createItemCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; j
	crit (Lnet/minecraft/world/entity/Entity;)V a
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	disconnect ()V s
	dismountTo (DDD)V a
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	doCheckFallDamage (DZ)V a
	doCloseContainer ()V r
	doTick ()V l
	drop (Lnet/minecraft/world/item/ItemStack;ZZ)Lnet/minecraft/world/entity/item/ItemEntity; a
	drop (Z)Z a
	findDimensionEntryPoint (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/portal/PortalInfo; a
	fudgeSpawnLocation (Lnet/minecraft/server/level/ServerLevel;)V d
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getAdvancements ()Lnet/minecraft/server/PlayerAdvancements; M
	getCamera ()Lnet/minecraft/world/entity/Entity; G
	getChatVisibility ()Lnet/minecraft/world/entity/player/ChatVisiblity; A
	getCoprime (I)I u
	getExitPortal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/border/WorldBorder;)Ljava/util/Optional; a
	getIpAddress ()Ljava/lang/String; y
	getLastActionTime ()J I
	getLastSectionPos ()Lnet/minecraft/core/SectionPos; R
	getLevel ()Lnet/minecraft/server/level/ServerLevel; x
	getLevel ()Lnet/minecraft/world/level/Level; W
	getPermissionLevel ()I B
	getRecipeBook ()Lnet/minecraft/stats/ServerRecipeBook; E
	getRespawnAngle ()F O
	getRespawnDimension ()Lnet/minecraft/resources/ResourceKey; P
	getRespawnPosition ()Lnet/minecraft/core/BlockPos; N
	getStats ()Lnet/minecraft/stats/ServerStatsCounter; D
	getTabListDisplayName ()Lnet/minecraft/network/chat/Component; J
	getTextFilter ()Lnet/minecraft/server/network/TextFilter; T
	giveExperienceLevels (I)V c
	giveExperiencePoints (I)V d
	handleTeamKill (Ljava/lang/String;Ljava/lang/String;[Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;)V a
	hasChangedDimension ()V L
	hasDisconnected ()Z t
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	initInventoryMenu ()V g
	initMenu (Lnet/minecraft/world/inventory/AbstractContainerMenu;)V a
	isChangingDimension ()Z K
	isCreative ()Z f
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isPvpAllowed ()Z gc
	isReachableBedBlock (Lnet/minecraft/core/BlockPos;)Z g
	isRespawnForced ()Z Q
	isSpectator ()Z B_
	isTextFilteringEnabled ()Z U
	loadGameTypes (Lnet/minecraft/nbt/CompoundTag;)V c
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)V a
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	mayInteract (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	moveTo (DDD)V c
	nextContainerCounter ()V gd
	onChangedBlock (Lnet/minecraft/core/BlockPos;)V c
	onEffectAdded (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)V a
	onEffectRemoved (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	onEffectUpdated (Lnet/minecraft/world/effect/MobEffectInstance;ZLnet/minecraft/world/entity/Entity;)V a
	onEnchantmentPerformed (Lnet/minecraft/world/item/ItemStack;I)V a
	onEnterCombat ()V h
	onInsideBlock (Lnet/minecraft/world/level/block/state/BlockState;)V a
	onItemPickup (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	onLeaveCombat ()V i
	onUpdateAbilities ()V w
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openHorseInventory (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lnet/minecraft/world/Container;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openMenu (Lnet/minecraft/world/MenuProvider;)Ljava/util/OptionalInt; a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	processPortalCooldown ()V H
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readPlayerMode (Lnet/minecraft/nbt/CompoundTag;Ljava/lang/String;)Lnet/minecraft/world/level/GameType; a
	resetFallDistance ()V m
	resetLastActionTime ()V C
	resetRecipes (Ljava/util/Collection;)I b
	resetSentInfo ()V u
	resetStat (Lnet/minecraft/stats/Stat;)V a
	restoreFrom (Lnet/minecraft/server/level/ServerPlayer;Z)V a
	sendChatHeader (Lnet/minecraft/network/chat/SignedMessageHeader;Lnet/minecraft/network/chat/MessageSignature;[B)V a
	sendChatMessage (Lnet/minecraft/network/chat/OutgoingPlayerChatMessage;ZLnet/minecraft/network/chat/ChatType$Bound;)V a
	sendMerchantOffers (ILnet/minecraft/world/item/trading/MerchantOffers;IIZZ)V a
	sendServerStatus (Lnet/minecraft/network/protocol/status/ServerStatus;)V a
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	sendSystemMessage (Lnet/minecraft/network/chat/Component;Z)V b
	sendTexturePack (Ljava/lang/String;Ljava/lang/String;ZLnet/minecraft/network/chat/Component;)V a
	setCamera (Lnet/minecraft/world/entity/Entity;)V c
	setExperienceLevels (I)V b
	setExperiencePoints (I)V a
	setGameMode (Lnet/minecraft/world/level/GameType;)Z a
	setLastSectionPos (Lnet/minecraft/core/SectionPos;)V a
	setLevel (Lnet/minecraft/server/level/ServerLevel;)V c
	setPlayerInput (FFZZ)V a
	setRespawnPosition (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;FZZ)V a
	shouldFilterMessageTo (Lnet/minecraft/server/level/ServerPlayer;)Z b
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startSleepInBed (Lnet/minecraft/core/BlockPos;)Lcom/mojang/datafixers/util/Either; a
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	stopRiding ()V p
	stopSleepInBed (ZZ)V a
	storeGameTypes (Lnet/minecraft/nbt/CompoundTag;)V k
	swing (Lnet/minecraft/world/InteractionHand;)V a
	take (Lnet/minecraft/world/entity/Entity;I)V a
	teleportTo (DDD)V b
	teleportTo (Lnet/minecraft/server/level/ServerLevel;DDDFF)V a
	tellNeutralMobsThatIDied ()V gb
	tick ()V k
	trackChunk (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/network/protocol/Packet;)V a
	trackEnteredOrExitedLavaOnVehicle ()V o
	trackStartFallingPosition ()V n
	triggerDimensionChangeTriggers (Lnet/minecraft/server/level/ServerLevel;)V e
	untrackChunk (Lnet/minecraft/world/level/ChunkPos;)V a
	updateInvisibilityStatus ()V F
	updateOptions (Lnet/minecraft/network/protocol/game/ServerboundClientInformationPacket;)V a
	updateScoreForCriteria (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;I)V a
	updateUsingItem (Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/server/level/ServerPlayerGameMode agi
	LOGGER a
	delayedDestroyPos k
	delayedTickStart l
	destroyPos h
	destroyProgressStart g
	gameModeForPlayer b
	gameTicks i
	hasDelayedDestroy j
	isDestroyingBlock f
	lastSentState m
	level c
	player d
	previousGameModeForPlayer e
	changeGameModeForPlayer (Lnet/minecraft/world/level/GameType;)Z a
	debugLogging (Lnet/minecraft/core/BlockPos;ZILjava/lang/String;)V a
	destroyAndAck (Lnet/minecraft/core/BlockPos;ILjava/lang/String;)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;)Z a
	getGameModeForPlayer ()Lnet/minecraft/world/level/GameType; b
	getPreviousGameModeForPlayer ()Lnet/minecraft/world/level/GameType; c
	handleBlockBreakAction (Lnet/minecraft/core/BlockPos;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Lnet/minecraft/core/Direction;II)V a
	incrementDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;I)F a
	isCreative ()Z e
	isSurvival ()Z d
	setGameModeForPlayer (Lnet/minecraft/world/level/GameType;Lnet/minecraft/world/level/GameType;)V a
	setLevel (Lnet/minecraft/server/level/ServerLevel;)V a
	tick ()V a
	useItem (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/server/level/ThreadedLevelLightEngine agj
	LOGGER d
	chunkMap g
	lightTasks f
	scheduled j
	sorterMailbox h
	taskMailbox e
	taskPerBatch i
	addTask (IILjava/util/function/IntSupplier;Lnet/minecraft/server/level/ThreadedLevelLightEngine$TaskType;Ljava/lang/Runnable;)V a
	addTask (IILnet/minecraft/server/level/ThreadedLevelLightEngine$TaskType;Ljava/lang/Runnable;)V a
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	lightChunk (Lnet/minecraft/world/level/chunk/ChunkAccess;Z)Ljava/util/concurrent/CompletableFuture; a
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	queueSectionData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/chunk/DataLayer;Z)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	retainData (Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	runUpdate ()V e
	runUpdates (IZZ)I a
	setTaskPerBatch (I)V a
	tryScheduleUpdate ()V a
	updateChunkStatus (Lnet/minecraft/world/level/ChunkPos;)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/server/level/ThreadedLevelLightEngine$TaskType agj$a
	$VALUES c
	POST_UPDATE b
	PRE_UPDATE a
	$values ()[Lnet/minecraft/server/level/ThreadedLevelLightEngine$TaskType; a
net/minecraft/server/level/Ticket agk
	createdTick d
	key c
	ticketLevel b
	type a
	compareTo (Lnet/minecraft/server/level/Ticket;)I a
	getTicketLevel ()I b
	getType ()Lnet/minecraft/server/level/TicketType; a
	setCreatedTick (J)V a
	timedOut (J)Z b
net/minecraft/server/level/TicketType agl
	DRAGON b
	FORCED d
	LIGHT e
	PLAYER c
	PORTAL f
	POST_TELEPORT g
	START a
	UNKNOWN h
	comparator j
	name i
	timeout k
	create (Ljava/lang/String;Ljava/util/Comparator;)Lnet/minecraft/server/level/TicketType; a
	create (Ljava/lang/String;Ljava/util/Comparator;I)Lnet/minecraft/server/level/TicketType; a
	getComparator ()Ljava/util/Comparator; a
	timeout ()J b
net/minecraft/server/level/TickingTracker agm
	INITIAL_TICKET_LIST_CAPACITY b
	chunks a
	tickets c
	addTicket (JLnet/minecraft/server/level/Ticket;)V a
	addTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V a
	getLevel (J)I c
	getLevel (Lnet/minecraft/world/level/ChunkPos;)I a
	getLevelFromSource (J)I b
	getTicketDebugString (J)Ljava/lang/String; d
	getTicketLevelAt (Lnet/minecraft/util/SortedArraySet;)I a
	getTickets (J)Lnet/minecraft/util/SortedArraySet; g
	removeTicket (JLnet/minecraft/server/level/Ticket;)V b
	removeTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V b
	replacePlayerTicketsLevel (I)V a
	runAllUpdates ()V a
	setLevel (JI)V a
net/minecraft/server/level/WorldGenRegion agn
	LOGGER a
	WORLDGEN_REGION_RANDOM t
	biomeManager l
	blockTicks j
	cache b
	center c
	currentlyGenerating r
	dimensionType i
	firstPos m
	fluidTicks k
	generatingStatus p
	lastPos n
	level e
	levelData g
	random h
	seed f
	size d
	structureManager o
	subTickCount s
	writeRadiusCutoff q
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z b
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; q_
	ensureCanWrite (Lnet/minecraft/core/BlockPos;)Z e_
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)V a
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; s_
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; K
	getCenter ()Lnet/minecraft/world/level/ChunkPos; a
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; I
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d_
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFluidTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; J
	getHeight ()I v_
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; D
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; n_
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; l_
	getMinBuildHeight ()I u_
	getNearestPlayer (DDDDLjava/util/function/Predicate;)Lnet/minecraft/world/entity/player/Player; a
	getRandom ()Lnet/minecraft/util/RandomSource; r_
	getSeaLevel ()I m_
	getSeed ()J B
	getServer ()Lnet/minecraft/server/MinecraftServer; n
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getSkyDarken ()I o_
	getUncachedNoiseBiome (III)Lnet/minecraft/core/Holder; a
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; p_
	hasChunk (II)Z b
	isClientSide ()Z k_
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isOldChunkAround (Lnet/minecraft/world/level/ChunkPos;I)Z a
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V f
	nextSubTickCount ()J t_
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	players ()Ljava/util/List; w
	registryAccess ()Lnet/minecraft/core/RegistryAccess; s
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	setCurrentlyGenerating (Ljava/util/function/Supplier;)V a
net/minecraft/server/level/progress/ChunkProgressListener agp
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/ChunkProgressListenerFactory agq
net/minecraft/server/level/progress/LoggerChunkProgressListener agr
	LOGGER a
	count c
	maxCount b
	nextTickTime e
	startTime d
	getProgress ()I c
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/ProcessorChunkProgressListener ags
	delegate a
	mailbox b
	createStarted (Lnet/minecraft/server/level/progress/ChunkProgressListener;Ljava/util/concurrent/Executor;)Lnet/minecraft/server/level/progress/ProcessorChunkProgressListener; a
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/StoringChunkProgressListener agt
	delegate a
	diameter f
	fullDiameter d
	radius e
	spawnPos c
	started g
	statuses b
	getDiameter ()I d
	getFullDiameter ()I c
	getProgress ()I e
	getStatus (II)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/network/FilteredText agv
	EMPTY a
	mask c
	raw b
	filtered ()Ljava/lang/String; a
	filteredOrEmpty ()Ljava/lang/String; b
	fullyFiltered (Ljava/lang/String;)Lnet/minecraft/server/network/FilteredText; b
	isFiltered ()Z c
	mask ()Lnet/minecraft/network/chat/FilterMask; e
	passThrough (Ljava/lang/String;)Lnet/minecraft/server/network/FilteredText; a
	raw ()Ljava/lang/String; d
net/minecraft/server/network/LegacyQueryHandler agw
	FAKE_PROTOCOL_VERSION a
	LOGGER b
	serverConnectionListener c
	createReply (Ljava/lang/String;)Lio/netty/buffer/ByteBuf; a
	sendFlushAndClose (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl agx
	connection b
	server a
	getConnection ()Lnet/minecraft/network/Connection; a
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/network/ServerConnectionListener agy
	LOGGER d
	SERVER_EPOLL_EVENT_GROUP b
	SERVER_EVENT_GROUP a
	channels f
	connections g
	running c
	server e
	getConnections ()Ljava/util/List; e
	getServer ()Lnet/minecraft/server/MinecraftServer; d
	startMemoryChannel ()Ljava/net/SocketAddress; a
	startTcpServerListener (Ljava/net/InetAddress;I)V a
	stop ()V b
	tick ()V c
net/minecraft/server/network/ServerConnectionListener$LatencySimulator agy$a
	TIMER a
	delay b
	jitter c
	queuedMessages d
	delayDownstream (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V a
	onTimeout (Lio/netty/util/Timeout;)V a
net/minecraft/server/network/ServerConnectionListener$LatencySimulator$DelayedMessage agy$a$a
	ctx a
	msg b
net/minecraft/server/network/ServerGamePacketListenerImpl agz
	LATENCY_CHECK_INTERVAL e
	LOGGER d
	MAX_INTERACTION_DISTANCE a
	NO_BLOCK_UPDATES_TO_ACK f
	PENDING_MESSAGE_DISCONNECT_THRESHOLD g
	aboveGroundTickCount G
	aboveGroundVehicleTickCount I
	ackBlockChangesUpTo j
	awaitingPositionFromClient C
	awaitingTeleport D
	awaitingTeleportTime E
	chatMessageChain Q
	chatPreviewCache L
	chatPreviewThrottler M
	chatSpamTickCount n
	clientIsFloating F
	clientVehicleIsFloating H
	connection b
	dropSpamTickCount o
	firstGoodX p
	firstGoodY q
	firstGoodZ r
	keepAliveChallenge m
	keepAlivePending l
	keepAliveTime k
	knownMovePacketCount K
	lastChatTimeStamp N
	lastGoodX s
	lastGoodY t
	lastGoodZ u
	lastSeenMessagesValidator P
	lastVehicle v
	player c
	receivedMovePacketCount J
	server h
	signedMessageDecoder O
	tickCount i
	vehicleFirstGoodX w
	vehicleFirstGoodY x
	vehicleFirstGoodZ y
	vehicleLastGoodX z
	vehicleLastGoodY A
	vehicleLastGoodZ B
	ackBlockChangesUpTo (I)V a
	addPendingMessage (Lnet/minecraft/network/chat/PlayerChatMessage;)V a
	broadcastChatMessage (Lnet/minecraft/network/chat/PlayerChatMessage;)V b
	clampHorizontal (D)D a
	clampVertical (D)D b
	collectSignedArguments (Lnet/minecraft/network/protocol/game/ServerboundChatCommandPacket;Lnet/minecraft/network/chat/PreviewableCommand;)Ljava/util/Map; a
	containsInvalidValues (DDDFF)Z c
	detectRateSpam ()V h
	disconnect (Lnet/minecraft/network/chat/Component;)V b
	dismount (DDDFF)V a
	filterTextPacket (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture; a
	filterTextPacket (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
	filterTextPacket (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; a
	getConnection ()Lnet/minecraft/network/Connection; a
	getPlayer ()Lnet/minecraft/server/level/ServerPlayer; f
	getPreviewedArgument (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/PreviewableCommand;)Ljava/util/concurrent/CompletableFuture; a
	getSignedContent (Lnet/minecraft/network/protocol/game/ServerboundChatPacket;)Lnet/minecraft/network/chat/ChatMessageContent; c
	getSignedMessage (Lnet/minecraft/network/protocol/game/ServerboundChatPacket;)Lnet/minecraft/network/chat/PlayerChatMessage; b
	handleAcceptTeleportPacket (Lnet/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ServerboundSwingPacket;)V a
	handleBlockEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ServerboundChatPacket;)V a
	handleChatAck (Lnet/minecraft/network/protocol/game/ServerboundChatAckPacket;)V a
	handleChatCommand (Lnet/minecraft/network/protocol/game/ServerboundChatCommandPacket;)V a
	handleChatPreview (Lnet/minecraft/network/protocol/game/ServerboundChatPreviewPacket;)V a
	handleClientCommand (Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket;)V a
	handleClientInformation (Lnet/minecraft/network/protocol/game/ServerboundClientInformationPacket;)V a
	handleContainerButtonClick (Lnet/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket;)V a
	handleContainerClick (Lnet/minecraft/network/protocol/game/ServerboundContainerClickPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ServerboundContainerClosePacket;)V a
	handleCustomCommandSuggestions (Lnet/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ServerboundCustomPayloadPacket;)V a
	handleEditBook (Lnet/minecraft/network/protocol/game/ServerboundEditBookPacket;)V a
	handleEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundEntityTagQuery;)V a
	handleInteract (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket;)V a
	handleJigsawGenerate (Lnet/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ServerboundKeepAlivePacket;)V a
	handleLockDifficulty (Lnet/minecraft/network/protocol/game/ServerboundLockDifficultyPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ServerboundMoveVehiclePacket;)V a
	handlePaddleBoat (Lnet/minecraft/network/protocol/game/ServerboundPaddleBoatPacket;)V a
	handlePickItem (Lnet/minecraft/network/protocol/game/ServerboundPickItemPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ServerboundPlaceRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket;)V a
	handlePlayerAction (Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket;)V a
	handlePlayerCommand (Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket;)V a
	handlePlayerInput (Lnet/minecraft/network/protocol/game/ServerboundPlayerInputPacket;)V a
	handlePong (Lnet/minecraft/network/protocol/game/ServerboundPongPacket;)V a
	handleRecipeBookChangeSettingsPacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket;)V a
	handleRecipeBookSeenRecipePacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket;)V a
	handleRenameItem (Lnet/minecraft/network/protocol/game/ServerboundRenameItemPacket;)V a
	handleResourcePackResponse (Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket;)V a
	handleSeenAdvancements (Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket;)V a
	handleSelectTrade (Lnet/minecraft/network/protocol/game/ServerboundSelectTradePacket;)V a
	handleSetBeaconPacket (Lnet/minecraft/network/protocol/game/ServerboundSetBeaconPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket;)V a
	handleSetCommandBlock (Lnet/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket;)V a
	handleSetCommandMinecart (Lnet/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket;)V a
	handleSetCreativeModeSlot (Lnet/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket;)V a
	handleSetJigsawBlock (Lnet/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket;)V a
	handleSetStructureBlock (Lnet/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket;)V a
	handleSignUpdate (Lnet/minecraft/network/protocol/game/ServerboundSignUpdatePacket;)V a
	handleTeleportToEntityPacket (Lnet/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket;)V a
	handleUseItem (Lnet/minecraft/network/protocol/game/ServerboundUseItemPacket;)V a
	handleUseItemOn (Lnet/minecraft/network/protocol/game/ServerboundUseItemOnPacket;)V a
	handleValidationFailure (Ljava/util/Set;)V a
	handlesPreviewRequests ()Z i
	isChatMessageIllegal (Ljava/lang/String;)Z c
	isPlayerCollidingWithAnythingNew (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/phys/AABB;)Z a
	isSingleplayerOwner ()Z g
	noBlocksAround (Lnet/minecraft/world/entity/Entity;)Z a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	parseCommand (Ljava/lang/String;)Lcom/mojang/brigadier/ParseResults; b
	performChatCommand (Lnet/minecraft/network/protocol/game/ServerboundChatCommandPacket;)V b
	queryChatPreview (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; e
	queryCommandPreview (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; f
	queryPreview (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; d
	resetPosition ()V d
	send (Lnet/minecraft/network/protocol/Packet;)V a
	send (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;)V a
	sendPreviewResponse (ILnet/minecraft/network/chat/Component;)V a
	signBook (Lnet/minecraft/server/network/FilteredText;Ljava/util/List;I)V a
	signedMessageDecoder ()Lnet/minecraft/network/chat/SignedMessageChain$Decoder; e
	teleport (DDDFF)V b
	teleport (DDDFFLjava/util/Set;)V a
	teleport (DDDFFLjava/util/Set;Z)V a
	tick ()V c
	tryHandleChat (Ljava/lang/String;Ljava/time/Instant;Lnet/minecraft/network/chat/LastSeenMessages$Update;)Z a
	updateBookContents (Ljava/util/List;I)V a
	updateBookPages (Ljava/util/List;Ljava/util/function/UnaryOperator;Lnet/minecraft/world/item/ItemStack;)V a
	updateChatOrder (Ljava/time/Instant;)Z a
	updateSignText (Lnet/minecraft/network/protocol/game/ServerboundSignUpdatePacket;Ljava/util/List;)V a
	verifyChatMessage (Lnet/minecraft/network/chat/PlayerChatMessage;)Z c
	wasBlockPlacementAttempt (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/server/network/ServerGamePacketListenerImpl$EntityInteraction agz$a
net/minecraft/server/network/ServerHandshakePacketListenerImpl aha
	IGNORE_STATUS_REASON a
	connection c
	server b
	getConnection ()Lnet/minecraft/network/Connection; a
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/network/ServerLoginPacketListenerImpl ahb
	LOGGER c
	MAX_TICKS_BEFORE_LOGIN d
	RANDOM e
	UNIQUE_THREAD_ID b
	connection a
	delayedAcceptPlayer l
	gameProfile j
	nonce f
	profilePublicKeyData m
	server g
	serverId k
	state h
	tick i
	createFakeProfile (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; a
	disconnect (Lnet/minecraft/network/chat/Component;)V b
	getConnection ()Lnet/minecraft/network/Connection; a
	getUserName ()Ljava/lang/String; e
	handleAcceptedLogin ()V d
	handleCustomQueryPacket (Lnet/minecraft/network/protocol/login/ServerboundCustomQueryPacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ServerboundHelloPacket;)V a
	handleKey (Lnet/minecraft/network/protocol/login/ServerboundKeyPacket;)V a
	isValidUsername (Ljava/lang/String;)Z a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	placeNewPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	tick ()V c
	validatePublicKey (Lnet/minecraft/world/entity/player/ProfilePublicKey$Data;Ljava/util/UUID;Lnet/minecraft/util/SignatureValidator;Z)Lnet/minecraft/world/entity/player/ProfilePublicKey; a
net/minecraft/server/network/ServerLoginPacketListenerImpl$State ahb$a
	$VALUES h
	ACCEPTED g
	AUTHENTICATING c
	DELAY_ACCEPT f
	HELLO a
	KEY b
	NEGOTIATING d
	READY_TO_ACCEPT e
	$values ()[Lnet/minecraft/server/network/ServerLoginPacketListenerImpl$State; a
net/minecraft/server/network/ServerPlayerConnection ahc
	getPlayer ()Lnet/minecraft/server/level/ServerPlayer; f
	send (Lnet/minecraft/network/protocol/Packet;)V a
net/minecraft/server/network/ServerStatusPacketListenerImpl ahd
	DISCONNECT_REASON a
	connection c
	hasRequestedStatus d
	server b
	getConnection ()Lnet/minecraft/network/Connection; a
	handlePingRequest (Lnet/minecraft/network/protocol/status/ServerboundPingRequestPacket;)V a
	handleStatusRequest (Lnet/minecraft/network/protocol/status/ServerboundStatusRequestPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/network/TextFilter ahe
	DUMMY a
	join ()V a
	leave ()V b
	processMessageBundle (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; a
	processStreamMessage (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/network/TextFilterClient ahf
	DEFAULT_ENDPOINT d
	LOGGER a
	THREAD_FACTORY c
	WORKER_COUNT b
	authKey k
	chatEncoder f
	chatEndpoint e
	chatIgnoreStrategy l
	joinEncoder h
	joinEndpoint g
	leaveEncoder j
	leaveEndpoint i
	workerPool m
	createContext (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/network/TextFilter; a
	createFromConfig (Ljava/lang/String;)Lnet/minecraft/server/network/TextFilterClient; a
	drainStream (Ljava/io/InputStream;)V a
	getEndpoint (Ljava/net/URI;Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL; a
	getEndpointFromConfig (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	makeRequest (Lcom/google/gson/JsonObject;Ljava/net/URL;)Ljava/net/HttpURLConnection; c
	parseMask (Ljava/lang/String;Lcom/google/gson/JsonArray;Lnet/minecraft/server/network/TextFilterClient$IgnoreStrategy;)Lnet/minecraft/network/chat/FilterMask; a
	processJoinOrLeave (Lcom/mojang/authlib/GameProfile;Ljava/net/URL;Lnet/minecraft/server/network/TextFilterClient$JoinOrLeaveEncoder;Ljava/util/concurrent/Executor;)V a
	processRequest (Lcom/google/gson/JsonObject;Ljava/net/URL;)V b
	processRequestResponse (Lcom/google/gson/JsonObject;Ljava/net/URL;)Lcom/google/gson/JsonObject; a
	requestMessageProcessing (Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lnet/minecraft/server/network/TextFilterClient$IgnoreStrategy;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/network/TextFilterClient$IgnoreStrategy ahf$a
	IGNORE_FULLY_FILTERED b
	NEVER_IGNORE a
net/minecraft/server/network/TextFilterClient$JoinOrLeaveEncoder ahf$b
net/minecraft/server/network/TextFilterClient$MessageEncoder ahf$c
net/minecraft/server/network/TextFilterClient$PlayerContext ahf$d
	profile c
	streamExecutor d
	join ()V a
	leave ()V b
	processMessageBundle (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; a
	processStreamMessage (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/network/TextFilterClient$RequestFailedException ahf$e
net/minecraft/server/packs/AbstractPackResources ahi
	LOGGER b
	file a
	getMetadataFromStream (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;Ljava/io/InputStream;)Ljava/lang/Object; a
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getPathFromLocation (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; c
	getRelativePath (Ljava/io/File;Ljava/io/File;)Ljava/lang/String; a
	getResource (Ljava/lang/String;)Ljava/io/InputStream; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Ljava/lang/String;)Z c
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
	logWarning (Ljava/lang/String;)V d
net/minecraft/server/packs/FilePackResources ahj
	LOGGER e
	SPLITTER b
	zipFile f
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getOrCreateZipFile ()Ljava/util/zip/ZipFile; b
	getResource (Ljava/lang/String;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	hasResource (Ljava/lang/String;)Z c
net/minecraft/server/packs/FolderPackResources ahk
	BACKSLASH_MATCHER f
	LOGGER b
	ON_WINDOWS e
	getFile (Ljava/lang/String;)Ljava/io/File; e
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Ljava/lang/String;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	hasResource (Ljava/lang/String;)Z c
	listResources (Ljava/io/File;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/util/function/Predicate;)V a
	validatePath (Ljava/io/File;Ljava/lang/String;)Z a
net/minecraft/server/packs/PackResources ahl
	METADATA_EXTENSION c
	PACK_META d
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
net/minecraft/server/packs/PackType ahm
	$VALUES e
	CLIENT_RESOURCES a
	SERVER_DATA b
	bridgeType d
	directory c
	$values ()[Lnet/minecraft/server/packs/PackType; b
	getDirectory ()Ljava/lang/String; a
	getVersion (Lcom/mojang/bridge/game/GameVersion;)I a
net/minecraft/server/packs/ResourcePackFileNotFoundException ahn
net/minecraft/server/packs/VanillaPackResources aho
	LOGGER g
	ROOT_DIR_BY_TYPE h
	clientObject b
	generatedDir a
	namespaces f
	packMetadata e
	asProvider ()Lnet/minecraft/server/packs/resources/ResourceProvider; b
	createPath (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; d
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getResourceAsStream (Ljava/lang/String;)Ljava/io/InputStream; a
	getResourceAsStream (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; c
	getResources (Ljava/util/Collection;Ljava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Ljava/util/function/Predicate;)V a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
	isResourceUrlValid (Ljava/lang/String;Ljava/net/URL;)Z a
	safeGetPath (Ljava/net/URI;)Ljava/nio/file/Path; a
net/minecraft/server/packs/metadata/MetadataSectionSerializer ahp
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/server/packs/metadata/pack/PackMetadataSection ahq
	SERIALIZER a
	description b
	packFormat c
	getDescription ()Lnet/minecraft/network/chat/Component; a
	getPackFormat ()I b
net/minecraft/server/packs/metadata/pack/PackMetadataSectionSerializer ahr
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/packs/metadata/pack/PackMetadataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/server/packs/repository/FolderRepositorySource ahv
	RESOURCEPACK_FILTER a
	folder b
	packSource c
	createSupplier (Ljava/io/File;)Ljava/util/function/Supplier; a
	loadPacks (Ljava/util/function/Consumer;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)V a
net/minecraft/server/packs/repository/Pack ahw
	LOGGER a
	compatibility f
	defaultPosition g
	description e
	fixedPosition i
	id b
	packSource j
	required h
	supplier c
	title d
	create (Ljava/lang/String;ZLjava/util/function/Supplier;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;Lnet/minecraft/server/packs/repository/Pack$Position;Lnet/minecraft/server/packs/repository/PackSource;)Lnet/minecraft/server/packs/repository/Pack; a
	getChatLink (Z)Lnet/minecraft/network/chat/Component; a
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; c
	getDefaultPosition ()Lnet/minecraft/server/packs/repository/Pack$Position; h
	getDescription ()Lnet/minecraft/network/chat/Component; b
	getId ()Ljava/lang/String; e
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; i
	getTitle ()Lnet/minecraft/network/chat/Component; a
	isFixedPosition ()Z g
	isRequired ()Z f
	open ()Lnet/minecraft/server/packs/PackResources; d
net/minecraft/server/packs/repository/Pack$PackConstructor ahw$a
net/minecraft/server/packs/repository/Pack$Position ahw$b
	$VALUES c
	BOTTOM b
	TOP a
	$values ()[Lnet/minecraft/server/packs/repository/Pack$Position; b
	insert (Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I a
	opposite ()Lnet/minecraft/server/packs/repository/Pack$Position; a
net/minecraft/server/packs/repository/PackCompatibility ahx
	$VALUES f
	COMPATIBLE c
	TOO_NEW b
	TOO_OLD a
	confirmation e
	description d
	$values ()[Lnet/minecraft/server/packs/repository/PackCompatibility; d
	forFormat (ILnet/minecraft/server/packs/PackType;)Lnet/minecraft/server/packs/repository/PackCompatibility; a
	forMetadata (Lnet/minecraft/server/packs/metadata/pack/PackMetadataSection;Lnet/minecraft/server/packs/PackType;)Lnet/minecraft/server/packs/repository/PackCompatibility; a
	getConfirmation ()Lnet/minecraft/network/chat/Component; c
	getDescription ()Lnet/minecraft/network/chat/Component; b
	isCompatible ()Z a
net/minecraft/server/packs/repository/PackRepository ahy
	available b
	constructor d
	selected c
	sources a
	discoverAvailable ()Ljava/util/Map; g
	getAvailableIds ()Ljava/util/Collection; b
	getAvailablePacks ()Ljava/util/Collection; c
	getAvailablePacks (Ljava/util/Collection;)Ljava/util/stream/Stream; c
	getPack (Ljava/lang/String;)Lnet/minecraft/server/packs/repository/Pack; a
	getSelectedIds ()Ljava/util/Collection; d
	getSelectedPacks ()Ljava/util/Collection; e
	isAvailable (Ljava/lang/String;)Z b
	openAllSelected ()Ljava/util/List; f
	rebuildSelected (Ljava/util/Collection;)Ljava/util/List; b
	reload ()V a
	setSelected (Ljava/util/Collection;)V a
net/minecraft/server/packs/repository/PackSource ahz
	BUILT_IN b
	DEFAULT a
	SERVER d
	WORLD c
	decorating (Ljava/lang/String;)Lnet/minecraft/server/packs/repository/PackSource; a
	passThrough ()Lnet/minecraft/server/packs/repository/PackSource; a
net/minecraft/server/packs/repository/RepositorySource aia
	loadPacks (Ljava/util/function/Consumer;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)V a
net/minecraft/server/packs/repository/ServerPacksSource aib
	BUILT_IN_METADATA a
	VANILLA_ID b
	vanillaPack c
	loadPacks (Ljava/util/function/Consumer;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)V a
net/minecraft/server/packs/resources/CloseableResourceManager aid
net/minecraft/server/packs/resources/FallbackResourceManager aie
	LOGGER b
	fallbacks a
	namespace d
	type c
	applyPackFiltersToExistingResources (Lnet/minecraft/server/packs/resources/FallbackResourceManager$PackEntry;Ljava/util/Map;)V a
	createResourceGetter (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/PackResources;)Lnet/minecraft/server/packs/resources/Resource$IoSupplier; a
	createStackMetadataFinder (Lnet/minecraft/resources/ResourceLocation;I)Lnet/minecraft/server/packs/resources/Resource$IoSupplier; a
	getMetadataLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; b
	getNamespaces ()Ljava/util/Set; a
	getResourceStack (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	isValidLocation (Lnet/minecraft/resources/ResourceLocation;)Z c
	listPackResources (Lnet/minecraft/server/packs/resources/FallbackResourceManager$PackEntry;Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/Map;)V a
	listPacks ()Ljava/util/stream/Stream; b
	listResourceStacks (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; c
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; b
	push (Lnet/minecraft/server/packs/PackResources;)V a
	push (Lnet/minecraft/server/packs/PackResources;Ljava/util/function/Predicate;)V a
	pushFilterOnly (Ljava/lang/String;Ljava/util/function/Predicate;)V a
	pushInternal (Ljava/lang/String;Lnet/minecraft/server/packs/PackResources;Ljava/util/function/Predicate;)V a
net/minecraft/server/packs/resources/FallbackResourceManager$EntryStack aie$a
	entries b
	metadataLocation a
	createThunks ()Ljava/util/List; c
	entries ()Ljava/util/List; b
	metadataLocation ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/server/packs/resources/FallbackResourceManager$LeakedResourceWarningInputStream aie$b
	closed b
	message a
net/minecraft/server/packs/resources/FallbackResourceManager$PackEntry aie$c
	filter c
	name a
	resources b
	filter ()Ljava/util/function/Predicate; c
	filterAll (Ljava/util/Collection;)V a
	isFiltered (Lnet/minecraft/resources/ResourceLocation;)Z a
	name ()Ljava/lang/String; a
	resources ()Lnet/minecraft/server/packs/PackResources; b
net/minecraft/server/packs/resources/FallbackResourceManager$SinglePackResourceThunkSupplier aie$d
	location b
	metadataLocation c
	shouldGetMeta e
	source d
	create ()Lnet/minecraft/server/packs/resources/Resource; b
	ignoreMeta ()V a
net/minecraft/server/packs/resources/MultiPackResourceManager aif
	LOGGER a
	namespacedManagers b
	packs c
	getNamespaces ()Ljava/util/Set; a
	getPackFilterSection (Lnet/minecraft/server/packs/PackResources;)Lnet/minecraft/server/packs/resources/ResourceFilterSection; a
	getResourceStack (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	listPacks ()Ljava/util/stream/Stream; b
	listResourceStacks (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; c
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; b
net/minecraft/server/packs/resources/PreparableReloadListener aig
	getName ()Ljava/lang/String; c
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier aig$a
	wait (Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/ProfiledReloadInstance aih
	LOGGER c
	total d
	finish (Ljava/util/List;)Ljava/util/List; a
net/minecraft/server/packs/resources/ProfiledReloadInstance$State aih$a
	name a
	preparationNanos d
	preparationResult b
	reloadNanos e
	reloadResult c
net/minecraft/server/packs/resources/ReloadInstance aii
	checkExceptions ()V d
	done ()Ljava/util/concurrent/CompletableFuture; a
	getActualProgress ()F b
	isDone ()Z c
net/minecraft/server/packs/resources/ReloadableResourceManager aij
	LOGGER a
	listeners c
	resources b
	type d
	createReload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lnet/minecraft/server/packs/resources/ReloadInstance; a
	getNamespaces ()Ljava/util/Set; a
	getResourceStack (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	listPacks ()Ljava/util/stream/Stream; b
	listResourceStacks (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; c
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; b
	registerReloadListener (Lnet/minecraft/server/packs/resources/PreparableReloadListener;)V a
net/minecraft/server/packs/resources/Resource aik
	cachedMetadata d
	metadataSupplier c
	packId a
	streamSupplier b
	metadata ()Lnet/minecraft/server/packs/resources/ResourceMetadata; d
	open ()Ljava/io/InputStream; b
	openAsReader ()Ljava/io/BufferedReader; c
	sourcePackId ()Ljava/lang/String; a
net/minecraft/server/packs/resources/Resource$IoSupplier aik$a
net/minecraft/server/packs/resources/ResourceFilterSection ail
	CODEC c
	LOGGER b
	SERIALIZER a
	blockList d
	isNamespaceFiltered (Ljava/lang/String;)Z a
	isPathFiltered (Ljava/lang/String;)Z b
net/minecraft/server/packs/resources/ResourceFilterSection$ResourceLocationPattern ail$a
	CODEC a
	namespacePattern b
	namespacePredicate c
	pathPattern d
	pathPredicate e
	test (Lnet/minecraft/resources/ResourceLocation;)Z a
net/minecraft/server/packs/resources/ResourceManager aim
	getNamespaces ()Ljava/util/Set; a
	getResourceStack (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	listPacks ()Ljava/util/stream/Stream; b
	listResourceStacks (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; c
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; b
net/minecraft/server/packs/resources/ResourceManager$Empty aim$a
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/server/packs/resources/ResourceManager$Empty; c
	getNamespaces ()Ljava/util/Set; a
	getResourceStack (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	listPacks ()Ljava/util/stream/Stream; b
	listResourceStacks (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; c
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; b
net/minecraft/server/packs/resources/ResourceManagerReloadListener ain
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/ResourceMetadata aio
	EMPTY a
	fromJsonStream (Ljava/io/InputStream;)Lnet/minecraft/server/packs/resources/ResourceMetadata; a
	getSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/util/Optional; a
net/minecraft/server/packs/resources/ResourceProvider aip
net/minecraft/server/packs/resources/SimpleJsonResourceReloadListener aiq
	LOGGER a
	PATH_SUFFIX b
	PATH_SUFFIX_LENGTH c
	directory e
	gson d
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/util/Map; a
net/minecraft/server/packs/resources/SimplePreparableReloadListener air
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/SimpleReloadInstance ais
	EXTRA_RELOAD_PROGRESS_WEIGHT d
	LISTENER_PROGRESS_WEIGHT e
	PREPARATION_PROGRESS_WEIGHT c
	allDone b
	allPreparations a
	doneTaskCounter k
	finishedReloads i
	listenerCount g
	preparingListeners f
	startedReloads h
	startedTaskCounter j
	create (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Z)Lnet/minecraft/server/packs/resources/ReloadInstance; a
	done ()Ljava/util/concurrent/CompletableFuture; a
	getActualProgress ()F b
	of (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/packs/resources/SimpleReloadInstance; a
net/minecraft/server/packs/resources/SimpleReloadInstance$StateFactory ais$a
net/minecraft/server/players/BanListEntry aiu
	DATE_FORMAT a
	EXPIRES_NEVER b
	created c
	expires e
	reason f
	source d
	getCreated ()Ljava/util/Date; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	getExpires ()Ljava/util/Date; c
	getReason ()Ljava/lang/String; d
	getSource ()Ljava/lang/String; b
	hasExpired ()Z f
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/GameProfileCache aiv
	GAMEPROFILES_EXPIRATION_MONTHS c
	GAMEPROFILES_MRU_LIMIT b
	LOGGER a
	executor l
	file j
	gson i
	operationCount k
	profileRepository h
	profilesByName e
	profilesByUUID f
	requests g
	usesAuthentication d
	add (Lcom/mojang/authlib/GameProfile;)V a
	clearExecutor ()V a
	createDateFormat ()Ljava/text/DateFormat; f
	get (Ljava/lang/String;)Ljava/util/Optional; a
	get (Ljava/util/UUID;)Ljava/util/Optional; a
	getAsync (Ljava/lang/String;Ljava/util/function/Consumer;)V a
	getNextOperation ()J e
	getTopMRUProfiles (I)Ljava/util/stream/Stream; a
	load ()Ljava/util/List; b
	lookupGameProfile (Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Ljava/util/Optional; a
	readGameProfile (Lcom/google/gson/JsonElement;Ljava/text/DateFormat;)Ljava/util/Optional; a
	safeAdd (Lnet/minecraft/server/players/GameProfileCache$GameProfileInfo;)V a
	save ()V c
	setExecutor (Ljava/util/concurrent/Executor;)V a
	setUsesAuthentication (Z)V a
	usesAuthentication ()Z d
	writeGameProfile (Lnet/minecraft/server/players/GameProfileCache$GameProfileInfo;Ljava/text/DateFormat;)Lcom/google/gson/JsonElement; a
net/minecraft/server/players/GameProfileCache$GameProfileInfo aiv$a
	expirationDate b
	lastAccess c
	profile a
	getExpirationDate ()Ljava/util/Date; b
	getLastAccess ()J c
	getProfile ()Lcom/mojang/authlib/GameProfile; a
	setLastAccess (J)V a
net/minecraft/server/players/IpBanList aiw
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	get (Ljava/net/SocketAddress;)Lnet/minecraft/server/players/IpBanListEntry; b
	getIpFromAddress (Ljava/net/SocketAddress;)Ljava/lang/String; c
	isBanned (Ljava/lang/String;)Z a
	isBanned (Ljava/net/SocketAddress;)Z a
net/minecraft/server/players/IpBanListEntry aix
	createIpInfo (Lcom/google/gson/JsonObject;)Ljava/lang/String; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/OldUsersConverter aiy
	LOGGER e
	OLD_IPBANLIST a
	OLD_OPLIST c
	OLD_USERBANLIST b
	OLD_WHITELIST d
	areOldPlayersConverted (Lnet/minecraft/server/MinecraftServer;)Z f
	areOldUserlistsRemoved ()Z a
	convertIpBanlist (Lnet/minecraft/server/MinecraftServer;)Z b
	convertMobOwnerIfNecessary (Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/util/UUID; a
	convertOpsList (Lnet/minecraft/server/MinecraftServer;)Z c
	convertPlayers (Lnet/minecraft/server/dedicated/DedicatedServer;)Z a
	convertUserBanlist (Lnet/minecraft/server/MinecraftServer;)Z a
	convertWhiteList (Lnet/minecraft/server/MinecraftServer;)Z d
	ensureDirectoryExists (Ljava/io/File;)V a
	getWorldPlayersDirectory (Lnet/minecraft/server/MinecraftServer;)Ljava/io/File; g
	lookupPlayers (Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V a
	parseDate (Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date; a
	readOldListFormat (Ljava/io/File;Ljava/util/Map;)Ljava/util/List; a
	renameOldFile (Ljava/io/File;)V b
	serverReadyAfterUserconversion (Lnet/minecraft/server/MinecraftServer;)Z e
net/minecraft/server/players/OldUsersConverter$ConversionError aiy$a
net/minecraft/server/players/PlayerList aiz
	ALLOW_LOGOUTIVATOR y
	BAN_DATE_FORMAT i
	CHAT_FILTERED_FULL f
	IPBANLIST_FILE c
	LOGGER a
	OPLIST_FILE d
	SEND_PLAYER_INFO_INTERVAL h
	USERBANLIST_FILE b
	WHITELIST_FILE e
	advancements r
	allowCheatsForAllPlayers x
	bans m
	doWhiteList t
	ipBans n
	maxPlayers g
	ops o
	playerIo s
	players k
	playersByUUID l
	registryHolder u
	sendAllPlayerInfoIn z
	server j
	simulationDistance w
	stats q
	viewDistance v
	whitelist p
	addWorldborderListener (Lnet/minecraft/server/level/ServerLevel;)V a
	broadcast (Lnet/minecraft/world/entity/player/Player;DDDDLnet/minecraft/resources/ResourceKey;Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAll (Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAll (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/resources/ResourceKey;)V a
	broadcastChatMessage (Lnet/minecraft/network/chat/PlayerChatMessage;Ljava/util/function/Predicate;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/network/chat/ChatSender;Lnet/minecraft/network/chat/ChatType$Bound;)V a
	broadcastChatMessage (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/ChatType$Bound;)V a
	broadcastChatMessage (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/network/chat/ChatType$Bound;)V a
	broadcastMessageHeader (Lnet/minecraft/network/chat/PlayerChatMessage;Ljava/util/Set;)V a
	broadcastSystemMessage (Lnet/minecraft/network/chat/Component;Ljava/util/function/Function;Z)V a
	broadcastSystemMessage (Lnet/minecraft/network/chat/Component;Z)V a
	broadcastSystemToAllExceptTeam (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V b
	broadcastSystemToTeam (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V a
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z d
	canPlayerLogin (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/Component; a
	deop (Lcom/mojang/authlib/GameProfile;)V b
	getBans ()Lnet/minecraft/server/players/UserBanList; f
	getIpBans ()Lnet/minecraft/server/players/IpBanList; g
	getMaxPlayers ()I n
	getOpNames ()[Ljava/lang/String; l
	getOps ()Lnet/minecraft/server/players/ServerOpList; k
	getPlayer (Ljava/util/UUID;)Lnet/minecraft/server/level/ServerPlayer; a
	getPlayerAdvancements (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/PlayerAdvancements; f
	getPlayerByName (Ljava/lang/String;)Lnet/minecraft/server/level/ServerPlayer; a
	getPlayerCount ()I m
	getPlayerForLogin (Lcom/mojang/authlib/GameProfile;Lnet/minecraft/world/entity/player/ProfilePublicKey;)Lnet/minecraft/server/level/ServerPlayer; a
	getPlayerNamesArray ()[Ljava/lang/String; e
	getPlayerStats (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/stats/ServerStatsCounter; a
	getPlayers ()Ljava/util/List; t
	getPlayersWithAddress (Ljava/lang/String;)Ljava/util/List; b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getSimulationDistance ()I q
	getSingleplayerData ()Lnet/minecraft/nbt/CompoundTag; r
	getViewDistance ()I p
	getWhiteList ()Lnet/minecraft/server/players/UserWhiteList; i
	getWhiteListNames ()[Ljava/lang/String; j
	isAllowCheatsForAllPlayers ()Z v
	isOp (Lcom/mojang/authlib/GameProfile;)Z e
	isUsingWhitelist ()Z o
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z c
	load (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/nbt/CompoundTag; a
	op (Lcom/mojang/authlib/GameProfile;)V a
	placeNewPlayer (Lnet/minecraft/network/Connection;Lnet/minecraft/server/level/ServerPlayer;)V a
	reloadResources ()V u
	reloadWhiteList ()V a
	remove (Lnet/minecraft/server/level/ServerPlayer;)V c
	removeAll ()V s
	respawn (Lnet/minecraft/server/level/ServerPlayer;Z)Lnet/minecraft/server/level/ServerPlayer; a
	save (Lnet/minecraft/server/level/ServerPlayer;)V b
	saveAll ()V h
	sendAllPlayerInfo (Lnet/minecraft/server/level/ServerPlayer;)V e
	sendLevelInfo (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/level/ServerLevel;)V a
	sendPlayerPermissionLevel (Lnet/minecraft/server/level/ServerPlayer;)V d
	sendPlayerPermissionLevel (Lnet/minecraft/server/level/ServerPlayer;I)V a
	setAllowCheatsForAllPlayers (Z)V b
	setSimulationDistance (I)V b
	setUsingWhiteList (Z)V a
	setViewDistance (I)V a
	tick ()V d
	updateEntireScoreboard (Lnet/minecraft/server/ServerScoreboard;Lnet/minecraft/server/level/ServerPlayer;)V a
	verifyChatTrusted (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/ChatSender;)Z a
net/minecraft/server/players/ServerOpList aja
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z a
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
net/minecraft/server/players/ServerOpListEntry ajb
	bypassesPlayerLimit b
	level a
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	getBypassesPlayerLimit ()Z b
	getLevel ()I a
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/SleepStatus ajc
	activePlayers a
	sleepingPlayers b
	amountSleeping ()I b
	areEnoughDeepSleeping (ILjava/util/List;)Z a
	areEnoughSleeping (I)Z a
	removeAllSleepers ()V a
	sleepersNeeded (I)I b
	update (Ljava/util/List;)Z a
net/minecraft/server/players/StoredUserEntry ajd
	user a
	getUser ()Ljava/lang/Object; g
	hasExpired ()Z f
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/StoredUserList aje
	GSON b
	LOGGER a
	file c
	map d
	add (Lnet/minecraft/server/players/StoredUserEntry;)V a
	contains (Ljava/lang/Object;)Z d
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	get (Ljava/lang/Object;)Lnet/minecraft/server/players/StoredUserEntry; b
	getEntries ()Ljava/util/Collection; d
	getFile ()Ljava/io/File; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isEmpty ()Z c
	load ()V f
	remove (Ljava/lang/Object;)V c
	remove (Lnet/minecraft/server/players/StoredUserEntry;)V b
	removeExpired ()V g
	save ()V e
net/minecraft/server/players/UserBanList ajf
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isBanned (Lcom/mojang/authlib/GameProfile;)Z a
net/minecraft/server/players/UserBanListEntry ajg
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/UserWhiteList ajh
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z a
net/minecraft/server/players/UserWhiteListEntry aji
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/rcon/NetworkDataOutputStream ajk
	dataOutputStream b
	outputStream a
	reset ()V b
	toByteArray ()[B a
	write (I)V a
	writeBytes ([B)V a
	writeFloat (F)V a
	writeInt (I)V b
	writeShort (S)V a
	writeString (Ljava/lang/String;)V a
net/minecraft/server/rcon/PktUtils ajl
	HEX_CHAR b
	MAX_PACKET_SIZE a
	intFromByteArray ([BI)I a
	intFromByteArray ([BII)I b
	intFromNetworkByteArray ([BII)I c
	stringFromByteArray ([BII)Ljava/lang/String; a
	toHexString (B)Ljava/lang/String; a
net/minecraft/server/rcon/RconConsoleSource ajm
	RCON b
	RCON_COMPONENT c
	buffer d
	server e
	acceptsFailure ()Z j_
	acceptsSuccess ()Z i_
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; g
	getCommandResponse ()Ljava/lang/String; f
	prepareForCommand ()V e
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	shouldInformAdmins ()Z G_
net/minecraft/server/rcon/thread/GenericThread ajo
	LOGGER d
	MAX_STOP_WAIT f
	UNIQUE_THREAD_ID e
	name b
	running a
	thread c
	isRunning ()Z c
	start ()Z a
	stop ()V b
net/minecraft/server/rcon/thread/QueryThreadGs4 ajp
	CHALLENGE_CHECK_INTERVAL g
	GAME_ID f
	GAME_TYPE e
	LOGGER d
	RESPONSE_CACHE_TIME h
	buffer p
	hostIp q
	lastChallengeCheck i
	lastRulesResponse u
	maxPlayers l
	port j
	rulesResponse t
	serverInterface v
	serverIp r
	serverName m
	serverPort k
	socket o
	validChallenges s
	worldName n
	buildRuleResponse (Ljava/net/DatagramPacket;)[B b
	create (Lnet/minecraft/server/ServerInterface;)Lnet/minecraft/server/rcon/thread/QueryThreadGs4; a
	getIdentBytes (Ljava/net/SocketAddress;)[B a
	initSocket ()Z e
	processPacket (Ljava/net/DatagramPacket;)Z a
	pruneChallenges ()V d
	recoverSocketError (Ljava/lang/Exception;)V a
	sendChallenge (Ljava/net/DatagramPacket;)V d
	sendTo ([BLjava/net/DatagramPacket;)V a
	start ()Z a
	validChallenge (Ljava/net/DatagramPacket;)Ljava/lang/Boolean; c
net/minecraft/server/rcon/thread/QueryThreadGs4$RequestChallenge ajp$a
	challenge b
	challengeBytes d
	ident e
	identBytes c
	time a
	before (J)Ljava/lang/Boolean; a
	getChallenge ()I a
	getChallengeBytes ()[B b
	getIdent ()Ljava/lang/String; d
	getIdentBytes ()[B c
net/minecraft/server/rcon/thread/RconClient ajq
	LOGGER d
	SERVERDATA_AUTH e
	SERVERDATA_AUTH_FAILURE i
	SERVERDATA_AUTH_RESPONSE h
	SERVERDATA_EXECCOMMAND f
	SERVERDATA_RESPONSE_VALUE g
	authed j
	buf l
	client k
	rconPassword m
	serverInterface n
	closeSocket ()V e
	send (IILjava/lang/String;)V a
	sendAuthFailure ()V d
	sendCmdResponse (ILjava/lang/String;)V a
	stop ()V b
net/minecraft/server/rcon/thread/RconThread ajr
	LOGGER d
	clients g
	rconPassword f
	serverInterface h
	socket e
	clearClients ()V d
	closeSocket (Ljava/net/ServerSocket;)V a
	create (Lnet/minecraft/server/ServerInterface;)Lnet/minecraft/server/rcon/thread/RconThread; a
	stop ()V b
net/minecraft/sounds/Music ajt
	CODEC a
	event b
	maxDelay d
	minDelay c
	replaceCurrentMusic e
	getEvent ()Lnet/minecraft/sounds/SoundEvent; a
	getMaxDelay ()I c
	getMinDelay ()I b
	replaceCurrentMusic ()Z d
net/minecraft/sounds/Musics aju
	CREATIVE b
	CREDITS c
	END e
	END_BOSS d
	FIVE_MINUTES l
	GAME g
	MENU a
	ONE_SECOND h
	TEN_MINUTES j
	THIRTY_SECONDS i
	TWENTY_MINUTES k
	UNDER_WATER f
	createGameMusic (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/sounds/Music; a
net/minecraft/sounds/SoundEvent ajv
	CODEC a
	location b
	newSystem d
	range c
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getRange (F)F a
net/minecraft/sounds/SoundEvents ajw
	ALLAY_AMBIENT_WITHOUT_ITEM b
	ALLAY_AMBIENT_WITH_ITEM a
	ALLAY_DEATH c
	ALLAY_HURT d
	ALLAY_ITEM_GIVEN e
	ALLAY_ITEM_TAKEN f
	ALLAY_THROW g
	AMBIENT_BASALT_DELTAS_ADDITIONS i
	AMBIENT_BASALT_DELTAS_LOOP j
	AMBIENT_BASALT_DELTAS_MOOD k
	AMBIENT_CAVE h
	AMBIENT_CRIMSON_FOREST_ADDITIONS l
	AMBIENT_CRIMSON_FOREST_LOOP m
	AMBIENT_CRIMSON_FOREST_MOOD n
	AMBIENT_NETHER_WASTES_ADDITIONS o
	AMBIENT_NETHER_WASTES_LOOP p
	AMBIENT_NETHER_WASTES_MOOD q
	AMBIENT_SOUL_SAND_VALLEY_ADDITIONS r
	AMBIENT_SOUL_SAND_VALLEY_LOOP s
	AMBIENT_SOUL_SAND_VALLEY_MOOD t
	AMBIENT_UNDERWATER_ENTER x
	AMBIENT_UNDERWATER_EXIT y
	AMBIENT_UNDERWATER_LOOP z
	AMBIENT_UNDERWATER_LOOP_ADDITIONS A
	AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE B
	AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE C
	AMBIENT_WARPED_FOREST_ADDITIONS u
	AMBIENT_WARPED_FOREST_LOOP v
	AMBIENT_WARPED_FOREST_MOOD w
	AMETHYST_BLOCK_BREAK D
	AMETHYST_BLOCK_CHIME E
	AMETHYST_BLOCK_FALL F
	AMETHYST_BLOCK_HIT G
	AMETHYST_BLOCK_PLACE H
	AMETHYST_BLOCK_STEP I
	AMETHYST_CLUSTER_BREAK J
	AMETHYST_CLUSTER_FALL K
	AMETHYST_CLUSTER_HIT L
	AMETHYST_CLUSTER_PLACE M
	AMETHYST_CLUSTER_STEP N
	ANCIENT_DEBRIS_BREAK O
	ANCIENT_DEBRIS_FALL S
	ANCIENT_DEBRIS_HIT R
	ANCIENT_DEBRIS_PLACE Q
	ANCIENT_DEBRIS_STEP P
	ANVIL_BREAK T
	ANVIL_DESTROY U
	ANVIL_FALL V
	ANVIL_HIT W
	ANVIL_LAND X
	ANVIL_PLACE Y
	ANVIL_STEP Z
	ANVIL_USE aa
	ARMOR_EQUIP_CHAIN ab
	ARMOR_EQUIP_DIAMOND ac
	ARMOR_EQUIP_ELYTRA ad
	ARMOR_EQUIP_GENERIC ae
	ARMOR_EQUIP_GOLD af
	ARMOR_EQUIP_IRON ag
	ARMOR_EQUIP_LEATHER ah
	ARMOR_EQUIP_NETHERITE ai
	ARMOR_EQUIP_TURTLE aj
	ARMOR_STAND_BREAK ak
	ARMOR_STAND_FALL al
	ARMOR_STAND_HIT am
	ARMOR_STAND_PLACE an
	ARROW_HIT ao
	ARROW_HIT_PLAYER ap
	ARROW_SHOOT aq
	AXE_SCRAPE as
	AXE_STRIP ar
	AXE_WAX_OFF at
	AXOLOTL_ATTACK au
	AXOLOTL_DEATH av
	AXOLOTL_HURT aw
	AXOLOTL_IDLE_AIR ax
	AXOLOTL_IDLE_WATER ay
	AXOLOTL_SPLASH az
	AXOLOTL_SWIM aA
	AZALEA_BREAK aB
	AZALEA_FALL aC
	AZALEA_HIT aD
	AZALEA_LEAVES_BREAK aG
	AZALEA_LEAVES_FALL aH
	AZALEA_LEAVES_HIT aI
	AZALEA_LEAVES_PLACE aJ
	AZALEA_LEAVES_STEP aK
	AZALEA_PLACE aE
	AZALEA_STEP aF
	BAMBOO_BREAK aL
	BAMBOO_FALL aM
	BAMBOO_HIT aN
	BAMBOO_PLACE aO
	BAMBOO_SAPLING_BREAK aQ
	BAMBOO_SAPLING_HIT aR
	BAMBOO_SAPLING_PLACE aS
	BAMBOO_STEP aP
	BARREL_CLOSE aT
	BARREL_OPEN aU
	BASALT_BREAK aV
	BASALT_FALL aZ
	BASALT_HIT aY
	BASALT_PLACE aX
	BASALT_STEP aW
	BAT_AMBIENT ba
	BAT_DEATH bb
	BAT_HURT bc
	BAT_LOOP bd
	BAT_TAKEOFF be
	BEACON_ACTIVATE bf
	BEACON_AMBIENT bg
	BEACON_DEACTIVATE bh
	BEACON_POWER_SELECT bi
	BEEHIVE_DRIP bp
	BEEHIVE_ENTER bq
	BEEHIVE_EXIT br
	BEEHIVE_SHEAR bs
	BEEHIVE_WORK bt
	BEE_DEATH bj
	BEE_HURT bk
	BEE_LOOP bm
	BEE_LOOP_AGGRESSIVE bl
	BEE_POLLINATE bo
	BEE_STING bn
	BELL_BLOCK bu
	BELL_RESONATE bv
	BIG_DRIPLEAF_BREAK bw
	BIG_DRIPLEAF_FALL bx
	BIG_DRIPLEAF_HIT by
	BIG_DRIPLEAF_PLACE bz
	BIG_DRIPLEAF_STEP bA
	BIG_DRIPLEAF_TILT_DOWN eV
	BIG_DRIPLEAF_TILT_UP eW
	BLASTFURNACE_FIRE_CRACKLE bQ
	BLAZE_AMBIENT bB
	BLAZE_BURN bC
	BLAZE_DEATH bD
	BLAZE_HURT bE
	BLAZE_SHOOT bF
	BOAT_PADDLE_LAND bG
	BOAT_PADDLE_WATER bH
	BONE_BLOCK_BREAK bI
	BONE_BLOCK_FALL bJ
	BONE_BLOCK_HIT bK
	BONE_BLOCK_PLACE bL
	BONE_BLOCK_STEP bM
	BONE_MEAL_USE bN
	BOOK_PAGE_TURN bO
	BOOK_PUT bP
	BOTTLE_EMPTY bR
	BOTTLE_FILL bS
	BOTTLE_FILL_DRAGONBREATH bT
	BREWING_STAND_BREW bU
	BUBBLE_COLUMN_BUBBLE_POP bV
	BUBBLE_COLUMN_UPWARDS_AMBIENT bW
	BUBBLE_COLUMN_UPWARDS_INSIDE bX
	BUBBLE_COLUMN_WHIRLPOOL_AMBIENT bY
	BUBBLE_COLUMN_WHIRLPOOL_INSIDE bZ
	BUCKET_EMPTY ca
	BUCKET_EMPTY_AXOLOTL cb
	BUCKET_EMPTY_FISH cc
	BUCKET_EMPTY_LAVA cd
	BUCKET_EMPTY_POWDER_SNOW ce
	BUCKET_EMPTY_TADPOLE cf
	BUCKET_FILL cg
	BUCKET_FILL_AXOLOTL ch
	BUCKET_FILL_FISH ci
	BUCKET_FILL_LAVA cj
	BUCKET_FILL_POWDER_SNOW ck
	BUCKET_FILL_TADPOLE cl
	BUNDLE_DROP_CONTENTS cm
	BUNDLE_INSERT cn
	BUNDLE_REMOVE_ONE co
	CAKE_ADD_CANDLE cp
	CALCITE_BREAK cq
	CALCITE_FALL cu
	CALCITE_HIT ct
	CALCITE_PLACE cs
	CALCITE_STEP cr
	CAMPFIRE_CRACKLE cv
	CANDLE_AMBIENT cw
	CANDLE_BREAK cx
	CANDLE_EXTINGUISH cy
	CANDLE_FALL cz
	CANDLE_HIT cA
	CANDLE_PLACE cB
	CANDLE_STEP cC
	CAT_AMBIENT cD
	CAT_BEG_FOR_FOOD cI
	CAT_DEATH cF
	CAT_EAT cG
	CAT_HISS cH
	CAT_HURT cJ
	CAT_PURR cK
	CAT_PURREOW cL
	CAT_STRAY_AMBIENT cE
	CAVE_VINES_BREAK cM
	CAVE_VINES_FALL cN
	CAVE_VINES_HIT cO
	CAVE_VINES_PICK_BERRIES cR
	CAVE_VINES_PLACE cP
	CAVE_VINES_STEP cQ
	CHAIN_BREAK cS
	CHAIN_FALL cT
	CHAIN_HIT cU
	CHAIN_PLACE cV
	CHAIN_STEP cW
	CHEST_CLOSE cX
	CHEST_LOCKED cY
	CHEST_OPEN cZ
	CHICKEN_AMBIENT da
	CHICKEN_DEATH db
	CHICKEN_EGG dc
	CHICKEN_HURT dd
	CHICKEN_STEP de
	CHORUS_FLOWER_DEATH df
	CHORUS_FLOWER_GROW dg
	CHORUS_FRUIT_TELEPORT dh
	COD_AMBIENT di
	COD_DEATH dj
	COD_FLOP dk
	COD_HURT dl
	COMPARATOR_CLICK dm
	COMPOSTER_EMPTY dn
	COMPOSTER_FILL do
	COMPOSTER_FILL_SUCCESS dp
	COMPOSTER_READY dq
	CONDUIT_ACTIVATE dr
	CONDUIT_AMBIENT ds
	CONDUIT_AMBIENT_SHORT dt
	CONDUIT_ATTACK_TARGET du
	CONDUIT_DEACTIVATE dv
	COPPER_BREAK dw
	COPPER_FALL dA
	COPPER_HIT dz
	COPPER_PLACE dy
	COPPER_STEP dx
	CORAL_BLOCK_BREAK dB
	CORAL_BLOCK_FALL dC
	CORAL_BLOCK_HIT dD
	CORAL_BLOCK_PLACE dE
	CORAL_BLOCK_STEP dF
	COW_AMBIENT dG
	COW_DEATH dH
	COW_HURT dI
	COW_MILK dJ
	COW_STEP dK
	CREEPER_DEATH dL
	CREEPER_HURT dM
	CREEPER_PRIMED dN
	CROP_BREAK dO
	CROP_PLANTED dP
	CROSSBOW_HIT dQ
	CROSSBOW_LOADING_END dR
	CROSSBOW_LOADING_MIDDLE dS
	CROSSBOW_LOADING_START dT
	CROSSBOW_QUICK_CHARGE_1 dU
	CROSSBOW_QUICK_CHARGE_2 dV
	CROSSBOW_QUICK_CHARGE_3 dW
	CROSSBOW_SHOOT dX
	DEEPSLATE_BREAK ed
	DEEPSLATE_BRICKS_BREAK dY
	DEEPSLATE_BRICKS_FALL dZ
	DEEPSLATE_BRICKS_HIT ea
	DEEPSLATE_BRICKS_PLACE eb
	DEEPSLATE_BRICKS_STEP ec
	DEEPSLATE_FALL ee
	DEEPSLATE_HIT ef
	DEEPSLATE_PLACE eg
	DEEPSLATE_STEP eh
	DEEPSLATE_TILES_BREAK ei
	DEEPSLATE_TILES_FALL ej
	DEEPSLATE_TILES_HIT ek
	DEEPSLATE_TILES_PLACE el
	DEEPSLATE_TILES_STEP em
	DISPENSER_DISPENSE en
	DISPENSER_FAIL eo
	DISPENSER_LAUNCH ep
	DOLPHIN_AMBIENT eq
	DOLPHIN_AMBIENT_WATER er
	DOLPHIN_ATTACK es
	DOLPHIN_DEATH et
	DOLPHIN_EAT eu
	DOLPHIN_HURT ev
	DOLPHIN_JUMP ew
	DOLPHIN_PLAY ex
	DOLPHIN_SPLASH ey
	DOLPHIN_SWIM ez
	DONKEY_AMBIENT eA
	DONKEY_ANGRY eB
	DONKEY_CHEST eC
	DONKEY_DEATH eD
	DONKEY_EAT eE
	DONKEY_HURT eF
	DRAGON_FIREBALL_EXPLODE fw
	DRIPSTONE_BLOCK_BREAK eG
	DRIPSTONE_BLOCK_FALL eK
	DRIPSTONE_BLOCK_HIT eJ
	DRIPSTONE_BLOCK_PLACE eI
	DRIPSTONE_BLOCK_STEP eH
	DROWNED_AMBIENT eX
	DROWNED_AMBIENT_WATER eY
	DROWNED_DEATH eZ
	DROWNED_DEATH_WATER fa
	DROWNED_HURT fb
	DROWNED_HURT_WATER fc
	DROWNED_SHOOT fd
	DROWNED_STEP fe
	DROWNED_SWIM ff
	DYE_USE fg
	EGG_THROW fh
	ELDER_GUARDIAN_AMBIENT fi
	ELDER_GUARDIAN_AMBIENT_LAND fj
	ELDER_GUARDIAN_CURSE fk
	ELDER_GUARDIAN_DEATH fl
	ELDER_GUARDIAN_DEATH_LAND fm
	ELDER_GUARDIAN_FLOP fn
	ELDER_GUARDIAN_HURT fo
	ELDER_GUARDIAN_HURT_LAND fp
	ELYTRA_FLYING fq
	ENCHANTMENT_TABLE_USE fr
	ENDERMAN_AMBIENT fD
	ENDERMAN_DEATH fE
	ENDERMAN_HURT fF
	ENDERMAN_SCREAM fG
	ENDERMAN_STARE fH
	ENDERMAN_TELEPORT fI
	ENDERMITE_AMBIENT fJ
	ENDERMITE_DEATH fK
	ENDERMITE_HURT fL
	ENDERMITE_STEP fM
	ENDER_CHEST_CLOSE fs
	ENDER_CHEST_OPEN ft
	ENDER_DRAGON_AMBIENT fu
	ENDER_DRAGON_DEATH fv
	ENDER_DRAGON_FLAP fx
	ENDER_DRAGON_GROWL fy
	ENDER_DRAGON_HURT fz
	ENDER_DRAGON_SHOOT fA
	ENDER_EYE_DEATH fB
	ENDER_EYE_LAUNCH fC
	ENDER_PEARL_THROW fN
	END_GATEWAY_SPAWN fO
	END_PORTAL_FRAME_FILL fP
	END_PORTAL_SPAWN fQ
	EVOKER_AMBIENT fR
	EVOKER_CAST_SPELL fS
	EVOKER_CELEBRATE fT
	EVOKER_DEATH fU
	EVOKER_FANGS_ATTACK fV
	EVOKER_HURT fW
	EVOKER_PREPARE_ATTACK fX
	EVOKER_PREPARE_SUMMON fY
	EVOKER_PREPARE_WOLOLO fZ
	EXPERIENCE_BOTTLE_THROW ga
	EXPERIENCE_ORB_PICKUP gb
	FENCE_GATE_CLOSE gc
	FENCE_GATE_OPEN gd
	FIRECHARGE_USE ge
	FIREWORK_ROCKET_BLAST gf
	FIREWORK_ROCKET_BLAST_FAR gg
	FIREWORK_ROCKET_LARGE_BLAST gh
	FIREWORK_ROCKET_LARGE_BLAST_FAR gi
	FIREWORK_ROCKET_LAUNCH gj
	FIREWORK_ROCKET_SHOOT gk
	FIREWORK_ROCKET_TWINKLE gl
	FIREWORK_ROCKET_TWINKLE_FAR gm
	FIRE_AMBIENT gn
	FIRE_EXTINGUISH go
	FISHING_BOBBER_RETRIEVE gq
	FISHING_BOBBER_SPLASH gr
	FISHING_BOBBER_THROW gs
	FISH_SWIM gp
	FLINTANDSTEEL_USE gt
	FLOWERING_AZALEA_BREAK gu
	FLOWERING_AZALEA_FALL gv
	FLOWERING_AZALEA_HIT gw
	FLOWERING_AZALEA_PLACE gx
	FLOWERING_AZALEA_STEP gy
	FOX_AGGRO gz
	FOX_AMBIENT gA
	FOX_BITE gB
	FOX_DEATH gC
	FOX_EAT gD
	FOX_HURT gE
	FOX_SCREECH gF
	FOX_SLEEP gG
	FOX_SNIFF gH
	FOX_SPIT gI
	FOX_TELEPORT gJ
	FROGLIGHT_BREAK gK
	FROGLIGHT_FALL gL
	FROGLIGHT_HIT gM
	FROGLIGHT_PLACE gN
	FROGLIGHT_STEP gO
	FROGSPAWNSTEP gP
	FROGSPAWN_BREAK gQ
	FROGSPAWN_FALL gR
	FROGSPAWN_HATCH gS
	FROGSPAWN_HIT gT
	FROGSPAWN_PLACE gU
	FROG_AMBIENT gV
	FROG_DEATH gW
	FROG_EAT gX
	FROG_HURT gY
	FROG_LAY_SPAWN gZ
	FROG_LONG_JUMP ha
	FROG_STEP hb
	FROG_TONGUE hc
	FUNGUS_BREAK nj
	FUNGUS_FALL nn
	FUNGUS_HIT nm
	FUNGUS_PLACE nl
	FUNGUS_STEP nk
	FURNACE_FIRE_CRACKLE hi
	GENERIC_BIG_FALL hj
	GENERIC_BURN hk
	GENERIC_DEATH hl
	GENERIC_DRINK hm
	GENERIC_EAT hn
	GENERIC_EXPLODE ho
	GENERIC_EXTINGUISH_FIRE hp
	GENERIC_HURT hq
	GENERIC_SMALL_FALL hr
	GENERIC_SPLASH hs
	GENERIC_SWIM ht
	GHAST_AMBIENT hu
	GHAST_DEATH hv
	GHAST_HURT hw
	GHAST_SCREAM hx
	GHAST_SHOOT hy
	GHAST_WARN hz
	GILDED_BLACKSTONE_BREAK hA
	GILDED_BLACKSTONE_FALL hB
	GILDED_BLACKSTONE_HIT hC
	GILDED_BLACKSTONE_PLACE hD
	GILDED_BLACKSTONE_STEP hE
	GLASS_BREAK hF
	GLASS_FALL hG
	GLASS_HIT hH
	GLASS_PLACE hI
	GLASS_STEP hJ
	GLOW_INK_SAC_USE hK
	GLOW_ITEM_FRAME_ADD_ITEM hL
	GLOW_ITEM_FRAME_BREAK hM
	GLOW_ITEM_FRAME_PLACE hN
	GLOW_ITEM_FRAME_REMOVE_ITEM hO
	GLOW_ITEM_FRAME_ROTATE_ITEM hP
	GLOW_SQUID_AMBIENT hQ
	GLOW_SQUID_DEATH hR
	GLOW_SQUID_HURT hS
	GLOW_SQUID_SQUIRT hT
	GOAT_AMBIENT hU
	GOAT_DEATH hV
	GOAT_EAT hW
	GOAT_HORN_BREAK ic
	GOAT_HORN_PLAY id
	GOAT_HORN_SOUND_VARIANTS jf
	GOAT_HORN_VARIANT_COUNT je
	GOAT_HURT hX
	GOAT_LONG_JUMP hY
	GOAT_MILK hZ
	GOAT_PREPARE_RAM ia
	GOAT_RAM_IMPACT ib
	GOAT_SCREAMING_AMBIENT ie
	GOAT_SCREAMING_DEATH if
	GOAT_SCREAMING_EAT ig
	GOAT_SCREAMING_HORN_BREAK im
	GOAT_SCREAMING_HURT ih
	GOAT_SCREAMING_LONG_JUMP ii
	GOAT_SCREAMING_MILK ij
	GOAT_SCREAMING_PREPARE_RAM ik
	GOAT_SCREAMING_RAM_IMPACT il
	GOAT_STEP in
	GRASS_BREAK io
	GRASS_FALL ip
	GRASS_HIT iq
	GRASS_PLACE ir
	GRASS_STEP is
	GRAVEL_BREAK it
	GRAVEL_FALL iu
	GRAVEL_HIT iv
	GRAVEL_PLACE iw
	GRAVEL_STEP ix
	GRINDSTONE_USE iy
	GROWING_PLANT_CROP iz
	GUARDIAN_AMBIENT iA
	GUARDIAN_AMBIENT_LAND iB
	GUARDIAN_ATTACK iC
	GUARDIAN_DEATH iD
	GUARDIAN_DEATH_LAND iE
	GUARDIAN_FLOP iF
	GUARDIAN_HURT iG
	GUARDIAN_HURT_LAND iH
	HANGING_ROOTS_BREAK iI
	HANGING_ROOTS_FALL iJ
	HANGING_ROOTS_HIT iK
	HANGING_ROOTS_PLACE iL
	HANGING_ROOTS_STEP iM
	HOE_TILL iN
	HOGLIN_AMBIENT iO
	HOGLIN_ANGRY iP
	HOGLIN_ATTACK iQ
	HOGLIN_CONVERTED_TO_ZOMBIFIED iR
	HOGLIN_DEATH iS
	HOGLIN_HURT iT
	HOGLIN_RETREAT iU
	HOGLIN_STEP iV
	HONEYCOMB_WAX_ON jc
	HONEY_BLOCK_BREAK iW
	HONEY_BLOCK_FALL iX
	HONEY_BLOCK_HIT iY
	HONEY_BLOCK_PLACE iZ
	HONEY_BLOCK_SLIDE ja
	HONEY_BLOCK_STEP jb
	HONEY_DRINK jd
	HORSE_AMBIENT jg
	HORSE_ANGRY jh
	HORSE_ARMOR ji
	HORSE_BREATHE jj
	HORSE_DEATH jk
	HORSE_EAT jl
	HORSE_GALLOP jm
	HORSE_HURT jn
	HORSE_JUMP jo
	HORSE_LAND jp
	HORSE_SADDLE jq
	HORSE_STEP jr
	HORSE_STEP_WOOD js
	HOSTILE_BIG_FALL jt
	HOSTILE_DEATH ju
	HOSTILE_HURT jv
	HOSTILE_SMALL_FALL jw
	HOSTILE_SPLASH jx
	HOSTILE_SWIM jy
	HUSK_AMBIENT jz
	HUSK_CONVERTED_TO_ZOMBIE jA
	HUSK_DEATH jB
	HUSK_HURT jC
	HUSK_STEP jD
	ILLUSIONER_AMBIENT jE
	ILLUSIONER_CAST_SPELL jF
	ILLUSIONER_DEATH jG
	ILLUSIONER_HURT jH
	ILLUSIONER_MIRROR_MOVE jI
	ILLUSIONER_PREPARE_BLINDNESS jJ
	ILLUSIONER_PREPARE_MIRROR jK
	INK_SAC_USE jL
	IRON_DOOR_CLOSE jM
	IRON_DOOR_OPEN jN
	IRON_GOLEM_ATTACK jO
	IRON_GOLEM_DAMAGE jP
	IRON_GOLEM_DEATH jQ
	IRON_GOLEM_HURT jR
	IRON_GOLEM_REPAIR jS
	IRON_GOLEM_STEP jT
	IRON_TRAPDOOR_CLOSE jU
	IRON_TRAPDOOR_OPEN jV
	ITEM_BREAK kb
	ITEM_FRAME_ADD_ITEM jW
	ITEM_FRAME_BREAK jX
	ITEM_FRAME_PLACE jY
	ITEM_FRAME_REMOVE_ITEM jZ
	ITEM_FRAME_ROTATE_ITEM ka
	ITEM_PICKUP kc
	LADDER_BREAK kd
	LADDER_FALL ke
	LADDER_HIT kf
	LADDER_PLACE kg
	LADDER_STEP kh
	LANTERN_BREAK ki
	LANTERN_FALL kj
	LANTERN_HIT kk
	LANTERN_PLACE kl
	LANTERN_STEP km
	LARGE_AMETHYST_BUD_BREAK kn
	LARGE_AMETHYST_BUD_PLACE ko
	LAVA_AMBIENT kp
	LAVA_EXTINGUISH kq
	LAVA_POP kr
	LEASH_KNOT_BREAK ks
	LEASH_KNOT_PLACE kt
	LEVER_CLICK ku
	LIGHTNING_BOLT_IMPACT kv
	LIGHTNING_BOLT_THUNDER kw
	LILY_PAD_PLACE wi
	LINGERING_POTION_THROW kx
	LLAMA_AMBIENT ky
	LLAMA_ANGRY kz
	LLAMA_CHEST kA
	LLAMA_DEATH kB
	LLAMA_EAT kC
	LLAMA_HURT kD
	LLAMA_SPIT kE
	LLAMA_STEP kF
	LLAMA_SWAG kG
	LODESTONE_BREAK kI
	LODESTONE_COMPASS_LOCK kN
	LODESTONE_FALL kM
	LODESTONE_HIT kL
	LODESTONE_PLACE kK
	LODESTONE_STEP kJ
	MAGMA_CUBE_DEATH kO
	MAGMA_CUBE_DEATH_SMALL kH
	MAGMA_CUBE_HURT kP
	MAGMA_CUBE_HURT_SMALL kQ
	MAGMA_CUBE_JUMP kR
	MAGMA_CUBE_SQUISH kS
	MAGMA_CUBE_SQUISH_SMALL kT
	MANGROVE_ROOTS_BREAK kU
	MANGROVE_ROOTS_FALL kV
	MANGROVE_ROOTS_HIT kW
	MANGROVE_ROOTS_PLACE kX
	MANGROVE_ROOTS_STEP kY
	MEDIUM_AMETHYST_BUD_BREAK kZ
	MEDIUM_AMETHYST_BUD_PLACE la
	METAL_BREAK lb
	METAL_FALL lc
	METAL_HIT ld
	METAL_PLACE le
	METAL_PRESSURE_PLATE_CLICK_OFF lf
	METAL_PRESSURE_PLATE_CLICK_ON lg
	METAL_STEP lh
	MINECART_INSIDE lj
	MINECART_INSIDE_UNDERWATER li
	MINECART_RIDING lk
	MOOSHROOM_CONVERT ll
	MOOSHROOM_EAT lm
	MOOSHROOM_MILK ln
	MOOSHROOM_MILK_SUSPICIOUSLY lo
	MOOSHROOM_SHEAR lp
	MOSS_BREAK lv
	MOSS_CARPET_BREAK lq
	MOSS_CARPET_FALL lr
	MOSS_CARPET_HIT ls
	MOSS_CARPET_PLACE lt
	MOSS_CARPET_STEP lu
	MOSS_FALL lw
	MOSS_HIT lx
	MOSS_PLACE ly
	MOSS_STEP lz
	MUDDY_MANGROVE_ROOTS_BREAK lK
	MUDDY_MANGROVE_ROOTS_FALL lL
	MUDDY_MANGROVE_ROOTS_HIT lM
	MUDDY_MANGROVE_ROOTS_PLACE lN
	MUDDY_MANGROVE_ROOTS_STEP lO
	MUD_BREAK lA
	MUD_BRICKS_BREAK lF
	MUD_BRICKS_FALL lG
	MUD_BRICKS_HIT lH
	MUD_BRICKS_PLACE lI
	MUD_BRICKS_STEP lJ
	MUD_FALL lB
	MUD_HIT lC
	MUD_PLACE lD
	MUD_STEP lE
	MULE_AMBIENT lP
	MULE_ANGRY lQ
	MULE_CHEST lR
	MULE_DEATH lS
	MULE_EAT lT
	MULE_HURT lU
	MUSIC_BIOME_BASALT_DELTAS mq
	MUSIC_BIOME_CRIMSON_FOREST mr
	MUSIC_BIOME_DEEP_DARK ms
	MUSIC_BIOME_DRIPSTONE_CAVES mt
	MUSIC_BIOME_FROZEN_PEAKS mC
	MUSIC_BIOME_GROVE mu
	MUSIC_BIOME_JAGGED_PEAKS mv
	MUSIC_BIOME_JUNGLE_AND_FOREST my
	MUSIC_BIOME_LUSH_CAVES mw
	MUSIC_BIOME_MEADOW mA
	MUSIC_BIOME_NETHER_WASTES mB
	MUSIC_BIOME_OLD_GROWTH_TAIGA mz
	MUSIC_BIOME_SNOWY_SLOPES mD
	MUSIC_BIOME_SOUL_SAND_VALLEY mE
	MUSIC_BIOME_STONY_PEAKS mF
	MUSIC_BIOME_SWAMP mx
	MUSIC_BIOME_WARPED_FOREST mG
	MUSIC_CREATIVE lV
	MUSIC_CREDITS lW
	MUSIC_DISC_11 lY
	MUSIC_DISC_13 lZ
	MUSIC_DISC_5 lX
	MUSIC_DISC_BLOCKS ma
	MUSIC_DISC_CAT mb
	MUSIC_DISC_CHIRP mc
	MUSIC_DISC_FAR md
	MUSIC_DISC_MALL me
	MUSIC_DISC_MELLOHI mf
	MUSIC_DISC_OTHERSIDE ml
	MUSIC_DISC_PIGSTEP mg
	MUSIC_DISC_STAL mh
	MUSIC_DISC_STRAD mi
	MUSIC_DISC_WAIT mj
	MUSIC_DISC_WARD mk
	MUSIC_DRAGON mm
	MUSIC_END mn
	MUSIC_GAME mo
	MUSIC_MENU mp
	MUSIC_UNDER_WATER mH
	NETHERITE_BLOCK_BREAK ny
	NETHERITE_BLOCK_FALL nC
	NETHERITE_BLOCK_HIT nB
	NETHERITE_BLOCK_PLACE nA
	NETHERITE_BLOCK_STEP nz
	NETHERRACK_BREAK nD
	NETHERRACK_FALL nH
	NETHERRACK_HIT nG
	NETHERRACK_PLACE nF
	NETHERRACK_STEP nE
	NETHER_BRICKS_BREAK mI
	NETHER_BRICKS_FALL mM
	NETHER_BRICKS_HIT mL
	NETHER_BRICKS_PLACE mK
	NETHER_BRICKS_STEP mJ
	NETHER_GOLD_ORE_BREAK qR
	NETHER_GOLD_ORE_FALL qS
	NETHER_GOLD_ORE_HIT qT
	NETHER_GOLD_ORE_PLACE qU
	NETHER_GOLD_ORE_STEP qV
	NETHER_ORE_BREAK qW
	NETHER_ORE_FALL qX
	NETHER_ORE_HIT qY
	NETHER_ORE_PLACE qZ
	NETHER_ORE_STEP ra
	NETHER_SPROUTS_BREAK ne
	NETHER_SPROUTS_FALL ni
	NETHER_SPROUTS_HIT nh
	NETHER_SPROUTS_PLACE ng
	NETHER_SPROUTS_STEP nf
	NETHER_WART_BREAK mN
	NETHER_WART_PLANTED mO
	NOTE_BLOCK_BANJO nX
	NOTE_BLOCK_BASEDRUM nI
	NOTE_BLOCK_BASS nJ
	NOTE_BLOCK_BELL nK
	NOTE_BLOCK_BIT nW
	NOTE_BLOCK_CHIME nL
	NOTE_BLOCK_COW_BELL nU
	NOTE_BLOCK_DIDGERIDOO nV
	NOTE_BLOCK_FLUTE nM
	NOTE_BLOCK_GUITAR nN
	NOTE_BLOCK_HARP nO
	NOTE_BLOCK_HAT nP
	NOTE_BLOCK_IRON_XYLOPHONE nT
	NOTE_BLOCK_PLING nQ
	NOTE_BLOCK_SNARE nR
	NOTE_BLOCK_XYLOPHONE nS
	NYLIUM_BREAK mZ
	NYLIUM_FALL nd
	NYLIUM_HIT nc
	NYLIUM_PLACE nb
	NYLIUM_STEP na
	OCELOT_AMBIENT nZ
	OCELOT_DEATH oa
	OCELOT_HURT nY
	PACKED_MUD_BREAK mP
	PACKED_MUD_FALL mQ
	PACKED_MUD_HIT mR
	PACKED_MUD_PLACE mS
	PACKED_MUD_STEP mT
	PAINTING_BREAK ob
	PAINTING_PLACE oc
	PANDA_AGGRESSIVE_AMBIENT ok
	PANDA_AMBIENT of
	PANDA_BITE on
	PANDA_CANT_BREED oj
	PANDA_DEATH og
	PANDA_EAT oh
	PANDA_HURT om
	PANDA_PRE_SNEEZE od
	PANDA_SNEEZE oe
	PANDA_STEP oi
	PANDA_WORRIED_AMBIENT ol
	PARROT_AMBIENT oo
	PARROT_DEATH op
	PARROT_EAT oq
	PARROT_FLY or
	PARROT_HURT os
	PARROT_IMITATE_BLAZE ot
	PARROT_IMITATE_CREEPER ou
	PARROT_IMITATE_DROWNED ov
	PARROT_IMITATE_ELDER_GUARDIAN ow
	PARROT_IMITATE_ENDERMITE oy
	PARROT_IMITATE_ENDER_DRAGON ox
	PARROT_IMITATE_EVOKER oz
	PARROT_IMITATE_GHAST oA
	PARROT_IMITATE_GUARDIAN oB
	PARROT_IMITATE_HOGLIN oC
	PARROT_IMITATE_HUSK oD
	PARROT_IMITATE_ILLUSIONER oE
	PARROT_IMITATE_MAGMA_CUBE oF
	PARROT_IMITATE_PHANTOM oG
	PARROT_IMITATE_PIGLIN oH
	PARROT_IMITATE_PIGLIN_BRUTE oI
	PARROT_IMITATE_PILLAGER oJ
	PARROT_IMITATE_RAVAGER oK
	PARROT_IMITATE_SHULKER oL
	PARROT_IMITATE_SILVERFISH oM
	PARROT_IMITATE_SKELETON oN
	PARROT_IMITATE_SLIME oO
	PARROT_IMITATE_SPIDER oP
	PARROT_IMITATE_STRAY oQ
	PARROT_IMITATE_VEX oR
	PARROT_IMITATE_VINDICATOR oS
	PARROT_IMITATE_WARDEN oT
	PARROT_IMITATE_WITCH oU
	PARROT_IMITATE_WITHER oV
	PARROT_IMITATE_WITHER_SKELETON oW
	PARROT_IMITATE_ZOGLIN oX
	PARROT_IMITATE_ZOMBIE oY
	PARROT_IMITATE_ZOMBIE_VILLAGER oZ
	PARROT_STEP pa
	PHANTOM_AMBIENT pb
	PHANTOM_BITE pc
	PHANTOM_DEATH pd
	PHANTOM_FLAP pe
	PHANTOM_HURT pf
	PHANTOM_SWOOP pg
	PIGLIN_ADMIRING_ITEM pm
	PIGLIN_AMBIENT pn
	PIGLIN_ANGRY po
	PIGLIN_BRUTE_AMBIENT pw
	PIGLIN_BRUTE_ANGRY px
	PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED pB
	PIGLIN_BRUTE_DEATH py
	PIGLIN_BRUTE_HURT pz
	PIGLIN_BRUTE_STEP pA
	PIGLIN_CELEBRATE pp
	PIGLIN_CONVERTED_TO_ZOMBIFIED pv
	PIGLIN_DEATH pq
	PIGLIN_HURT ps
	PIGLIN_JEALOUS pr
	PIGLIN_RETREAT pt
	PIGLIN_STEP pu
	PIG_AMBIENT ph
	PIG_DEATH pi
	PIG_HURT pj
	PIG_SADDLE pk
	PIG_STEP pl
	PILLAGER_AMBIENT pC
	PILLAGER_CELEBRATE pD
	PILLAGER_DEATH pE
	PILLAGER_HURT pF
	PISTON_CONTRACT pG
	PISTON_EXTEND pH
	PLAYER_ATTACK_CRIT pI
	PLAYER_ATTACK_KNOCKBACK pJ
	PLAYER_ATTACK_NODAMAGE pK
	PLAYER_ATTACK_STRONG pL
	PLAYER_ATTACK_SWEEP pM
	PLAYER_ATTACK_WEAK pN
	PLAYER_BIG_FALL pO
	PLAYER_BREATH pP
	PLAYER_BURP pQ
	PLAYER_DEATH pR
	PLAYER_HURT pS
	PLAYER_HURT_DROWN pT
	PLAYER_HURT_FREEZE pU
	PLAYER_HURT_ON_FIRE pV
	PLAYER_HURT_SWEET_BERRY_BUSH pW
	PLAYER_LEVELUP pX
	PLAYER_SMALL_FALL pY
	PLAYER_SPLASH pZ
	PLAYER_SPLASH_HIGH_SPEED qa
	PLAYER_SWIM qb
	POINTED_DRIPSTONE_BREAK eL
	POINTED_DRIPSTONE_DRIP_LAVA eR
	POINTED_DRIPSTONE_DRIP_LAVA_INTO_CAULDRON eT
	POINTED_DRIPSTONE_DRIP_WATER eS
	POINTED_DRIPSTONE_DRIP_WATER_INTO_CAULDRON eU
	POINTED_DRIPSTONE_FALL eP
	POINTED_DRIPSTONE_HIT eO
	POINTED_DRIPSTONE_LAND eQ
	POINTED_DRIPSTONE_PLACE eN
	POINTED_DRIPSTONE_STEP eM
	POLAR_BEAR_AMBIENT qc
	POLAR_BEAR_AMBIENT_BABY qd
	POLAR_BEAR_DEATH qe
	POLAR_BEAR_HURT qf
	POLAR_BEAR_STEP qg
	POLAR_BEAR_WARNING qh
	POLISHED_DEEPSLATE_BREAK qi
	POLISHED_DEEPSLATE_FALL qj
	POLISHED_DEEPSLATE_HIT qk
	POLISHED_DEEPSLATE_PLACE ql
	POLISHED_DEEPSLATE_STEP qm
	PORTAL_AMBIENT qn
	PORTAL_TRAVEL qo
	PORTAL_TRIGGER qp
	POWDER_SNOW_BREAK qq
	POWDER_SNOW_FALL qr
	POWDER_SNOW_HIT qs
	POWDER_SNOW_PLACE qt
	POWDER_SNOW_STEP qu
	PUFFER_FISH_AMBIENT qv
	PUFFER_FISH_BLOW_OUT qw
	PUFFER_FISH_BLOW_UP qx
	PUFFER_FISH_DEATH qy
	PUFFER_FISH_FLOP qz
	PUFFER_FISH_HURT qA
	PUFFER_FISH_STING qB
	PUMPKIN_CARVE qC
	RABBIT_AMBIENT qD
	RABBIT_ATTACK qE
	RABBIT_DEATH qF
	RABBIT_HURT qG
	RABBIT_JUMP qH
	RAID_HORN qI
	RAVAGER_AMBIENT qJ
	RAVAGER_ATTACK qK
	RAVAGER_CELEBRATE qL
	RAVAGER_DEATH qM
	RAVAGER_HURT qN
	RAVAGER_ROAR qQ
	RAVAGER_STEP qO
	RAVAGER_STUNNED qP
	REDSTONE_TORCH_BURNOUT rb
	RESPAWN_ANCHOR_AMBIENT rc
	RESPAWN_ANCHOR_CHARGE rd
	RESPAWN_ANCHOR_DEPLETE re
	RESPAWN_ANCHOR_SET_SPAWN rf
	ROOTED_DIRT_BREAK rg
	ROOTED_DIRT_FALL rh
	ROOTED_DIRT_HIT ri
	ROOTED_DIRT_PLACE rj
	ROOTED_DIRT_STEP rk
	ROOTS_BREAK hd
	ROOTS_FALL hh
	ROOTS_HIT hg
	ROOTS_PLACE hf
	ROOTS_STEP he
	SALMON_AMBIENT rl
	SALMON_DEATH rm
	SALMON_FLOP rn
	SALMON_HURT ro
	SAND_BREAK rp
	SAND_FALL rq
	SAND_HIT rr
	SAND_PLACE rs
	SAND_STEP rt
	SCAFFOLDING_BREAK ru
	SCAFFOLDING_FALL rv
	SCAFFOLDING_HIT rw
	SCAFFOLDING_PLACE rx
	SCAFFOLDING_STEP ry
	SCULK_BLOCK_BREAK rB
	SCULK_BLOCK_CHARGE rA
	SCULK_BLOCK_FALL rC
	SCULK_BLOCK_HIT rD
	SCULK_BLOCK_PLACE rE
	SCULK_BLOCK_SPREAD rz
	SCULK_BLOCK_STEP rF
	SCULK_CATALYST_BLOOM rG
	SCULK_CATALYST_BREAK rH
	SCULK_CATALYST_FALL rI
	SCULK_CATALYST_HIT rJ
	SCULK_CATALYST_PLACE rK
	SCULK_CATALYST_STEP rL
	SCULK_CLICKING rM
	SCULK_CLICKING_STOP rN
	SCULK_SENSOR_BREAK rO
	SCULK_SENSOR_FALL rP
	SCULK_SENSOR_HIT rQ
	SCULK_SENSOR_PLACE rR
	SCULK_SENSOR_STEP rS
	SCULK_SHRIEKER_BREAK rT
	SCULK_SHRIEKER_FALL rU
	SCULK_SHRIEKER_HIT rV
	SCULK_SHRIEKER_PLACE rW
	SCULK_SHRIEKER_SHRIEK rX
	SCULK_SHRIEKER_STEP rY
	SCULK_VEIN_BREAK rZ
	SCULK_VEIN_FALL sa
	SCULK_VEIN_HIT sb
	SCULK_VEIN_PLACE sc
	SCULK_VEIN_STEP sd
	SHEEP_AMBIENT se
	SHEEP_DEATH sf
	SHEEP_HURT sg
	SHEEP_SHEAR sh
	SHEEP_STEP si
	SHIELD_BLOCK sj
	SHIELD_BREAK sk
	SHOVEL_FLATTEN sq
	SHROOMLIGHT_BREAK sl
	SHROOMLIGHT_FALL sp
	SHROOMLIGHT_HIT so
	SHROOMLIGHT_PLACE sn
	SHROOMLIGHT_STEP sm
	SHULKER_AMBIENT sr
	SHULKER_BOX_CLOSE ss
	SHULKER_BOX_OPEN st
	SHULKER_BULLET_HIT su
	SHULKER_BULLET_HURT sv
	SHULKER_CLOSE sw
	SHULKER_DEATH sx
	SHULKER_HURT sy
	SHULKER_HURT_CLOSED sz
	SHULKER_OPEN sA
	SHULKER_SHOOT sB
	SHULKER_TELEPORT sC
	SILVERFISH_AMBIENT sD
	SILVERFISH_DEATH sE
	SILVERFISH_HURT sF
	SILVERFISH_STEP sG
	SKELETON_AMBIENT sH
	SKELETON_CONVERTED_TO_STRAY sI
	SKELETON_DEATH sJ
	SKELETON_HORSE_AMBIENT sK
	SKELETON_HORSE_AMBIENT_WATER sO
	SKELETON_HORSE_DEATH sL
	SKELETON_HORSE_GALLOP_WATER sP
	SKELETON_HORSE_HURT sM
	SKELETON_HORSE_JUMP_WATER sQ
	SKELETON_HORSE_STEP_WATER sR
	SKELETON_HORSE_SWIM sN
	SKELETON_HURT sS
	SKELETON_SHOOT sT
	SKELETON_STEP sU
	SLIME_ATTACK sV
	SLIME_BLOCK_BREAK ta
	SLIME_BLOCK_FALL tb
	SLIME_BLOCK_HIT tc
	SLIME_BLOCK_PLACE td
	SLIME_BLOCK_STEP te
	SLIME_DEATH sW
	SLIME_DEATH_SMALL tL
	SLIME_HURT sX
	SLIME_HURT_SMALL tM
	SLIME_JUMP sY
	SLIME_JUMP_SMALL tN
	SLIME_SQUISH sZ
	SLIME_SQUISH_SMALL tO
	SMALL_AMETHYST_BUD_BREAK tf
	SMALL_AMETHYST_BUD_PLACE tg
	SMALL_DRIPLEAF_BREAK th
	SMALL_DRIPLEAF_FALL ti
	SMALL_DRIPLEAF_HIT tj
	SMALL_DRIPLEAF_PLACE tk
	SMALL_DRIPLEAF_STEP tl
	SMITHING_TABLE_USE tP
	SMOKER_SMOKE tQ
	SNOWBALL_THROW tR
	SNOW_BREAK tS
	SNOW_FALL tT
	SNOW_GOLEM_AMBIENT tU
	SNOW_GOLEM_DEATH tV
	SNOW_GOLEM_HURT tW
	SNOW_GOLEM_SHEAR tY
	SNOW_GOLEM_SHOOT tX
	SNOW_HIT tZ
	SNOW_PLACE ua
	SNOW_STEP ub
	SOUL_ESCAPE tw
	SOUL_SAND_BREAK tm
	SOUL_SAND_FALL tq
	SOUL_SAND_HIT tp
	SOUL_SAND_PLACE to
	SOUL_SAND_STEP tn
	SOUL_SOIL_BREAK tr
	SOUL_SOIL_FALL tv
	SOUL_SOIL_HIT tu
	SOUL_SOIL_PLACE tt
	SOUL_SOIL_STEP ts
	SPIDER_AMBIENT uc
	SPIDER_DEATH ud
	SPIDER_HURT ue
	SPIDER_STEP uf
	SPLASH_POTION_BREAK ug
	SPLASH_POTION_THROW uh
	SPORE_BLOSSOM_BREAK tx
	SPORE_BLOSSOM_FALL ty
	SPORE_BLOSSOM_HIT tz
	SPORE_BLOSSOM_PLACE tA
	SPORE_BLOSSOM_STEP tB
	SPYGLASS_STOP_USING uj
	SPYGLASS_USE ui
	SQUID_AMBIENT uk
	SQUID_DEATH ul
	SQUID_HURT um
	SQUID_SQUIRT un
	STEM_BREAK mU
	STEM_FALL mY
	STEM_HIT mX
	STEM_PLACE mW
	STEM_STEP mV
	STONE_BREAK uo
	STONE_BUTTON_CLICK_OFF up
	STONE_BUTTON_CLICK_ON uq
	STONE_FALL ur
	STONE_HIT us
	STONE_PLACE ut
	STONE_PRESSURE_PLATE_CLICK_OFF uu
	STONE_PRESSURE_PLATE_CLICK_ON uv
	STONE_STEP uw
	STRAY_AMBIENT ux
	STRAY_DEATH uy
	STRAY_HURT uz
	STRAY_STEP uA
	STRIDER_AMBIENT tC
	STRIDER_DEATH tF
	STRIDER_EAT tJ
	STRIDER_HAPPY tD
	STRIDER_HURT tG
	STRIDER_RETREAT tE
	STRIDER_SADDLE tK
	STRIDER_STEP tH
	STRIDER_STEP_LAVA tI
	SWEET_BERRY_BUSH_BREAK uB
	SWEET_BERRY_BUSH_PICK_BERRIES uD
	SWEET_BERRY_BUSH_PLACE uC
	TADPOLE_DEATH uE
	TADPOLE_FLOP uF
	TADPOLE_GROW_UP uG
	TADPOLE_HURT uH
	THORNS_HIT uI
	TNT_PRIMED uJ
	TOTEM_USE uK
	TRIDENT_HIT uL
	TRIDENT_HIT_GROUND uM
	TRIDENT_RETURN uN
	TRIDENT_RIPTIDE_1 uO
	TRIDENT_RIPTIDE_2 uP
	TRIDENT_RIPTIDE_3 uQ
	TRIDENT_THROW uR
	TRIDENT_THUNDER uS
	TRIPWIRE_ATTACH uT
	TRIPWIRE_CLICK_OFF uU
	TRIPWIRE_CLICK_ON uV
	TRIPWIRE_DETACH uW
	TROPICAL_FISH_AMBIENT uX
	TROPICAL_FISH_DEATH uY
	TROPICAL_FISH_FLOP uZ
	TROPICAL_FISH_HURT va
	TUFF_BREAK vb
	TUFF_FALL vf
	TUFF_HIT ve
	TUFF_PLACE vd
	TUFF_STEP vc
	TURTLE_AMBIENT_LAND vg
	TURTLE_DEATH vh
	TURTLE_DEATH_BABY vi
	TURTLE_EGG_BREAK vj
	TURTLE_EGG_CRACK vk
	TURTLE_EGG_HATCH vl
	TURTLE_HURT vm
	TURTLE_HURT_BABY vn
	TURTLE_LAY_EGG vo
	TURTLE_SHAMBLE vp
	TURTLE_SHAMBLE_BABY vq
	TURTLE_SWIM vr
	UI_BUTTON_CLICK vs
	UI_CARTOGRAPHY_TABLE_TAKE_RESULT vv
	UI_LOOM_SELECT_PATTERN vt
	UI_LOOM_TAKE_RESULT vu
	UI_STONECUTTER_SELECT_RECIPE vx
	UI_STONECUTTER_TAKE_RESULT vw
	UI_TOAST_CHALLENGE_COMPLETE vy
	UI_TOAST_IN vz
	UI_TOAST_OUT vA
	VEX_AMBIENT vB
	VEX_CHARGE vC
	VEX_DEATH vD
	VEX_HURT vE
	VILLAGER_AMBIENT vF
	VILLAGER_CELEBRATE vG
	VILLAGER_DEATH vH
	VILLAGER_HURT vI
	VILLAGER_NO vJ
	VILLAGER_TRADE vK
	VILLAGER_WORK_ARMORER vM
	VILLAGER_WORK_BUTCHER vN
	VILLAGER_WORK_CARTOGRAPHER vO
	VILLAGER_WORK_CLERIC vP
	VILLAGER_WORK_FARMER vQ
	VILLAGER_WORK_FISHERMAN vR
	VILLAGER_WORK_FLETCHER vS
	VILLAGER_WORK_LEATHERWORKER vT
	VILLAGER_WORK_LIBRARIAN vU
	VILLAGER_WORK_MASON vV
	VILLAGER_WORK_SHEPHERD vW
	VILLAGER_WORK_TOOLSMITH vX
	VILLAGER_WORK_WEAPONSMITH vY
	VILLAGER_YES vL
	VINDICATOR_AMBIENT vZ
	VINDICATOR_CELEBRATE wa
	VINDICATOR_DEATH wb
	VINDICATOR_HURT wc
	VINE_BREAK wd
	VINE_FALL we
	VINE_HIT wf
	VINE_PLACE wg
	VINE_STEP wh
	WANDERING_TRADER_AMBIENT wj
	WANDERING_TRADER_DEATH wk
	WANDERING_TRADER_DISAPPEARED wl
	WANDERING_TRADER_DRINK_MILK wm
	WANDERING_TRADER_DRINK_POTION wn
	WANDERING_TRADER_HURT wo
	WANDERING_TRADER_NO wp
	WANDERING_TRADER_REAPPEARED wq
	WANDERING_TRADER_TRADE wr
	WANDERING_TRADER_YES ws
	WARDEN_AGITATED wt
	WARDEN_AMBIENT wu
	WARDEN_ANGRY wv
	WARDEN_ATTACK_IMPACT ww
	WARDEN_DEATH wx
	WARDEN_DIG wy
	WARDEN_EMERGE wz
	WARDEN_HEARTBEAT wA
	WARDEN_HURT wB
	WARDEN_LISTENING wC
	WARDEN_LISTENING_ANGRY wD
	WARDEN_NEARBY_CLOSE wE
	WARDEN_NEARBY_CLOSER wF
	WARDEN_NEARBY_CLOSEST wG
	WARDEN_ROAR wH
	WARDEN_SNIFF wI
	WARDEN_SONIC_BOOM wJ
	WARDEN_SONIC_CHARGE wK
	WARDEN_STEP wL
	WARDEN_TENDRIL_CLICKS wM
	WART_BLOCK_BREAK nt
	WART_BLOCK_FALL nx
	WART_BLOCK_HIT nw
	WART_BLOCK_PLACE nv
	WART_BLOCK_STEP nu
	WATER_AMBIENT wN
	WEATHER_RAIN wO
	WEATHER_RAIN_ABOVE wP
	WEEPING_VINES_BREAK no
	WEEPING_VINES_FALL ns
	WEEPING_VINES_HIT nr
	WEEPING_VINES_PLACE nq
	WEEPING_VINES_STEP np
	WET_GRASS_BREAK wQ
	WET_GRASS_FALL wR
	WET_GRASS_HIT wS
	WET_GRASS_PLACE wT
	WET_GRASS_STEP wU
	WITCH_AMBIENT wV
	WITCH_CELEBRATE wW
	WITCH_DEATH wX
	WITCH_DRINK wY
	WITCH_HURT wZ
	WITCH_THROW xa
	WITHER_AMBIENT xb
	WITHER_BREAK_BLOCK xc
	WITHER_DEATH xd
	WITHER_HURT xe
	WITHER_SHOOT xf
	WITHER_SKELETON_AMBIENT xg
	WITHER_SKELETON_DEATH xh
	WITHER_SKELETON_HURT xi
	WITHER_SKELETON_STEP xj
	WITHER_SPAWN xk
	WOLF_AMBIENT xl
	WOLF_DEATH xm
	WOLF_GROWL xn
	WOLF_HOWL xo
	WOLF_HURT xp
	WOLF_PANT xq
	WOLF_SHAKE xr
	WOLF_STEP xs
	WOLF_WHINE xt
	WOODEN_BUTTON_CLICK_OFF xz
	WOODEN_BUTTON_CLICK_ON xA
	WOODEN_DOOR_CLOSE xu
	WOODEN_DOOR_OPEN xv
	WOODEN_PRESSURE_PLATE_CLICK_OFF xE
	WOODEN_PRESSURE_PLATE_CLICK_ON xF
	WOODEN_TRAPDOOR_CLOSE xw
	WOODEN_TRAPDOOR_OPEN xx
	WOOD_BREAK xy
	WOOD_FALL xB
	WOOD_HIT xC
	WOOD_PLACE xD
	WOOD_STEP xG
	WOOL_BREAK xH
	WOOL_FALL xI
	WOOL_HIT xJ
	WOOL_PLACE xK
	WOOL_STEP xL
	ZOGLIN_AMBIENT xM
	ZOGLIN_ANGRY xN
	ZOGLIN_ATTACK xO
	ZOGLIN_DEATH xP
	ZOGLIN_HURT xQ
	ZOGLIN_STEP xR
	ZOMBIE_AMBIENT xS
	ZOMBIE_ATTACK_IRON_DOOR xU
	ZOMBIE_ATTACK_WOODEN_DOOR xT
	ZOMBIE_BREAK_WOODEN_DOOR xV
	ZOMBIE_CONVERTED_TO_DROWNED xW
	ZOMBIE_DEATH xX
	ZOMBIE_DESTROY_EGG xY
	ZOMBIE_HORSE_AMBIENT xZ
	ZOMBIE_HORSE_DEATH ya
	ZOMBIE_HORSE_HURT yb
	ZOMBIE_HURT yc
	ZOMBIE_INFECT yd
	ZOMBIE_STEP yi
	ZOMBIE_VILLAGER_AMBIENT yj
	ZOMBIE_VILLAGER_CONVERTED yk
	ZOMBIE_VILLAGER_CURE yl
	ZOMBIE_VILLAGER_DEATH ym
	ZOMBIE_VILLAGER_HURT yn
	ZOMBIE_VILLAGER_STEP yo
	ZOMBIFIED_PIGLIN_AMBIENT ye
	ZOMBIFIED_PIGLIN_ANGRY yf
	ZOMBIFIED_PIGLIN_DEATH yg
	ZOMBIFIED_PIGLIN_HURT yh
	register (Ljava/lang/String;)Lnet/minecraft/sounds/SoundEvent; a
	register (Ljava/lang/String;F)Lnet/minecraft/sounds/SoundEvent; a
	registerGoatHornSoundVariants ()Lcom/google/common/collect/ImmutableList; a
net/minecraft/sounds/SoundSource ajx
	$VALUES l
	AMBIENT i
	BLOCKS e
	HOSTILE f
	MASTER a
	MUSIC b
	NEUTRAL g
	PLAYERS h
	RECORDS c
	VOICE j
	WEATHER d
	name k
	$values ()[Lnet/minecraft/sounds/SoundSource; b
	getName ()Ljava/lang/String; a
net/minecraft/stats/RecipeBook ajz
	bookSettings c
	highlight b
	known a
	add (Lnet/minecraft/resources/ResourceLocation;)V a
	add (Lnet/minecraft/world/item/crafting/Recipe;)V a
	addHighlight (Lnet/minecraft/resources/ResourceLocation;)V d
	addHighlight (Lnet/minecraft/world/item/crafting/Recipe;)V f
	contains (Lnet/minecraft/resources/ResourceLocation;)Z b
	contains (Lnet/minecraft/world/item/crafting/Recipe;)Z b
	copyOverData (Lnet/minecraft/stats/RecipeBook;)V a
	getBookSettings ()Lnet/minecraft/stats/RecipeBookSettings; a
	isFiltering (Lnet/minecraft/world/inventory/RecipeBookMenu;)Z a
	isFiltering (Lnet/minecraft/world/inventory/RecipeBookType;)Z b
	isOpen (Lnet/minecraft/world/inventory/RecipeBookType;)Z a
	remove (Lnet/minecraft/resources/ResourceLocation;)V c
	remove (Lnet/minecraft/world/item/crafting/Recipe;)V c
	removeHighlight (Lnet/minecraft/world/item/crafting/Recipe;)V e
	setBookSetting (Lnet/minecraft/world/inventory/RecipeBookType;ZZ)V a
	setBookSettings (Lnet/minecraft/stats/RecipeBookSettings;)V a
	setFiltering (Lnet/minecraft/world/inventory/RecipeBookType;Z)V b
	setOpen (Lnet/minecraft/world/inventory/RecipeBookType;Z)V a
	willHighlight (Lnet/minecraft/world/item/crafting/Recipe;)Z d
net/minecraft/stats/RecipeBookSettings aka
	TAG_FIELDS a
	states b
	copy ()Lnet/minecraft/stats/RecipeBookSettings; a
	isFiltering (Lnet/minecraft/world/inventory/RecipeBookType;)Z b
	isOpen (Lnet/minecraft/world/inventory/RecipeBookType;)Z a
	read (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/stats/RecipeBookSettings; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/stats/RecipeBookSettings; a
	replaceFrom (Lnet/minecraft/stats/RecipeBookSettings;)V a
	setFiltering (Lnet/minecraft/world/inventory/RecipeBookType;Z)V b
	setOpen (Lnet/minecraft/world/inventory/RecipeBookType;Z)V a
	write (Lnet/minecraft/nbt/CompoundTag;)V b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/stats/RecipeBookSettings$TypeSettings aka$a
	filtering b
	open a
	copy ()Lnet/minecraft/stats/RecipeBookSettings$TypeSettings; a
net/minecraft/stats/ServerRecipeBook akb
	LOGGER d
	RECIPE_BOOK_TAG c
	addRecipes (Ljava/util/Collection;Lnet/minecraft/server/level/ServerPlayer;)I a
	fromNbt (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/item/crafting/RecipeManager;)V a
	loadRecipes (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Consumer;Lnet/minecraft/world/item/crafting/RecipeManager;)V a
	removeRecipes (Ljava/util/Collection;Lnet/minecraft/server/level/ServerPlayer;)I b
	sendInitialRecipeBook (Lnet/minecraft/server/level/ServerPlayer;)V a
	sendRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State;Lnet/minecraft/server/level/ServerPlayer;Ljava/util/List;)V a
	toNbt ()Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/stats/ServerStatsCounter akc
	LOGGER b
	dirty e
	file d
	server c
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/nbt/CompoundTag; a
	getDirty ()Ljava/util/Set; d
	getKey (Lnet/minecraft/stats/Stat;)Lnet/minecraft/resources/ResourceLocation; b
	getStat (Lnet/minecraft/stats/StatType;Ljava/lang/String;)Ljava/util/Optional; a
	markAllDirty ()V c
	parseLocal (Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V a
	save ()V a
	sendStats (Lnet/minecraft/server/level/ServerPlayer;)V a
	setValue (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V a
	toJson ()Ljava/lang/String; b
net/minecraft/stats/Stat akd
	formatter n
	type p
	value o
	buildName (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)Ljava/lang/String; a
	format (I)Ljava/lang/String; a
	getType ()Lnet/minecraft/stats/StatType; a
	getValue ()Ljava/lang/Object; b
	locationToKey (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; a
net/minecraft/stats/StatFormatter ake
	DECIMAL_FORMAT a
	DEFAULT b
	DISTANCE d
	DIVIDE_BY_TEN c
	TIME e
net/minecraft/stats/StatType akf
	displayName c
	map b
	registry a
	contains (Ljava/lang/Object;)Z a
	get (Ljava/lang/Object;)Lnet/minecraft/stats/Stat; b
	get (Ljava/lang/Object;Lnet/minecraft/stats/StatFormatter;)Lnet/minecraft/stats/Stat; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getRegistry ()Lnet/minecraft/core/Registry; a
	getTranslationKey ()Ljava/lang/String; b
net/minecraft/stats/Stats akg
	ANIMALS_BRED P
	AVIATE_ONE_CM B
	BELL_RING az
	BLOCK_MINED a
	BOAT_ONE_CM y
	CLEAN_ARMOR X
	CLEAN_BANNER Y
	CLEAN_SHULKER_BOX Z
	CLIMB_ONE_CM u
	CROUCH_ONE_CM q
	CROUCH_TIME o
	CUSTOM i
	DAMAGE_ABSORBED L
	DAMAGE_BLOCKED_BY_SHIELD K
	DAMAGE_DEALT G
	DAMAGE_DEALT_ABSORBED H
	DAMAGE_DEALT_RESISTED I
	DAMAGE_RESISTED M
	DAMAGE_TAKEN J
	DEATHS N
	DROP F
	EAT_CAKE_SLICE U
	ENCHANT_ITEM ak
	ENTITY_KILLED g
	ENTITY_KILLED_BY h
	FALL_ONE_CM t
	FILL_CAULDRON V
	FISH_CAUGHT R
	FLY_ONE_CM v
	HORSE_ONE_CM A
	INSPECT_DISPENSER ae
	INSPECT_DROPPER ac
	INSPECT_HOPPER ad
	INTERACT_WITH_ANVIL aC
	INTERACT_WITH_BEACON ab
	INTERACT_WITH_BLAST_FURNACE as
	INTERACT_WITH_BREWINGSTAND aa
	INTERACT_WITH_CAMPFIRE av
	INTERACT_WITH_CARTOGRAPHY_TABLE aw
	INTERACT_WITH_CRAFTING_TABLE an
	INTERACT_WITH_FURNACE am
	INTERACT_WITH_GRINDSTONE aD
	INTERACT_WITH_LECTERN au
	INTERACT_WITH_LOOM ax
	INTERACT_WITH_SMITHING_TABLE aF
	INTERACT_WITH_SMOKER at
	INTERACT_WITH_STONECUTTER ay
	ITEM_BROKEN d
	ITEM_CRAFTED b
	ITEM_DROPPED f
	ITEM_PICKED_UP e
	ITEM_USED c
	JUMP E
	LEAVE_GAME j
	MINECART_ONE_CM x
	MOB_KILLS O
	OPEN_BARREL ar
	OPEN_CHEST ao
	OPEN_ENDERCHEST aj
	OPEN_SHULKER_BOX aq
	PIG_ONE_CM z
	PLAYER_KILLS Q
	PLAY_NOTEBLOCK af
	PLAY_RECORD al
	PLAY_TIME k
	POT_FLOWER ah
	RAID_TRIGGER aA
	RAID_WIN aB
	SLEEP_IN_BED ap
	SPRINT_ONE_CM r
	STRIDER_ONE_CM D
	SWIM_ONE_CM C
	TALKED_TO_VILLAGER S
	TARGET_HIT aE
	TIME_SINCE_DEATH m
	TIME_SINCE_REST n
	TOTAL_WORLD_TIME l
	TRADED_WITH_VILLAGER T
	TRIGGER_TRAPPED_CHEST ai
	TUNE_NOTEBLOCK ag
	USE_CAULDRON W
	WALK_ONE_CM p
	WALK_ON_WATER_ONE_CM s
	WALK_UNDER_WATER_ONE_CM w
	makeCustomStat (Ljava/lang/String;Lnet/minecraft/stats/StatFormatter;)Lnet/minecraft/resources/ResourceLocation; a
	makeRegistryStatType (Ljava/lang/String;Lnet/minecraft/core/Registry;)Lnet/minecraft/stats/StatType; a
net/minecraft/stats/StatsCounter akh
	stats a
	getValue (Lnet/minecraft/stats/Stat;)I a
	getValue (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)I a
	increment (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V b
	setValue (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V a
net/minecraft/tags/BannerPatternTags akj
	NO_ITEM_REQUIRED a
	PATTERN_ITEM_CREEPER c
	PATTERN_ITEM_FLOWER b
	PATTERN_ITEM_GLOBE f
	PATTERN_ITEM_MOJANG e
	PATTERN_ITEM_PIGLIN g
	PATTERN_ITEM_SKULL d
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/BiomeTags akk
	ALLOWS_SURFACE_SLIME_SPAWNS al
	ALLOWS_TROPICAL_FISH_SPAWNS_AT_ANY_HEIGHT ai
	HAS_ANCIENT_CITY S
	HAS_BASTION_REMNANT R
	HAS_BURIED_TREASURE p
	HAS_CLOSER_WATER_FOG Y
	HAS_DESERT_PYRAMID q
	HAS_END_CITY U
	HAS_IGLOO r
	HAS_JUNGLE_TEMPLE s
	HAS_MINESHAFT t
	HAS_MINESHAFT_MESA u
	HAS_NETHER_FORTRESS P
	HAS_NETHER_FOSSIL Q
	HAS_OCEAN_MONUMENT v
	HAS_OCEAN_RUIN_COLD w
	HAS_OCEAN_RUIN_WARM x
	HAS_PILLAGER_OUTPOST y
	HAS_RUINED_PORTAL_DESERT z
	HAS_RUINED_PORTAL_JUNGLE A
	HAS_RUINED_PORTAL_MOUNTAIN D
	HAS_RUINED_PORTAL_NETHER T
	HAS_RUINED_PORTAL_OCEAN B
	HAS_RUINED_PORTAL_STANDARD E
	HAS_RUINED_PORTAL_SWAMP C
	HAS_SHIPWRECK G
	HAS_SHIPWRECK_BEACHED F
	HAS_STRONGHOLD H
	HAS_SWAMP_HUT I
	HAS_VILLAGE_DESERT J
	HAS_VILLAGE_PLAINS K
	HAS_VILLAGE_SAVANNA L
	HAS_VILLAGE_SNOWY M
	HAS_VILLAGE_TAIGA N
	HAS_WOODLAND_MANSION O
	IS_BADLANDS f
	IS_BEACH c
	IS_DEEP_OCEAN a
	IS_END n
	IS_FOREST j
	IS_HILL g
	IS_JUNGLE i
	IS_MOUNTAIN e
	IS_NETHER m
	IS_OCEAN b
	IS_OVERWORLD l
	IS_RIVER d
	IS_SAVANNA k
	IS_TAIGA h
	MINESHAFT_BLOCKING W
	MORE_FREQUENT_DROWNED_SPAWNS ak
	ONLY_ALLOWS_SNOW_AND_GOLD_RABBITS ag
	PLAYS_UNDERWATER_MUSIC X
	POLAR_BEARS_SPAWN_ON_ALTERNATE_BLOCKS aj
	PRODUCES_CORALS_FROM_BONEMEAL aa
	REDUCED_WATER_AMBIENT_SPAWNS ah
	REQUIRED_OCEAN_MONUMENT_SURROUNDING V
	SPAWNS_COLD_VARIANT_FROGS ae
	SPAWNS_WARM_VARIANT_FROGS af
	STRONGHOLD_BIASED_TO o
	WATER_ON_MAP_OUTLINES Z
	WITHOUT_PATROL_SPAWNS ac
	WITHOUT_WANDERING_TRADER_SPAWNS ad
	WITHOUT_ZOMBIE_SIEGES ab
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/BlockTags akl
	ACACIA_LOGS w
	ANCIENT_CITY_REPLACEABLE bC
	ANIMALS_SPAWNABLE_ON bD
	ANVIL I
	AXOLOTLS_SPAWNABLE_ON bE
	AZALEA_GROWS_ON bN
	AZALEA_ROOT_REPLACEABLE bl
	BAMBOO_PLANTABLE_ON ap
	BANNERS D
	BASE_STONE_NETHER aY
	BASE_STONE_OVERWORLD aV
	BEACON_BASE_BLOCKS aD
	BEDS N
	BEEHIVES ax
	BEE_GROWABLES az
	BIG_DRIPLEAF_PLACEABLE bn
	BIRCH_LOGS v
	BUTTONS e
	CAMPFIRES aM
	CANDLES ab
	CANDLE_CAKES bb
	CAULDRONS bc
	CAVE_VINES bi
	CLIMBABLE aG
	COAL_ORES X
	COMPLETES_FIND_TREE_TUTORIAL ae
	CONVERTABLE_TO_MUD bP
	COPPER_ORES Z
	CORALS ao
	CORAL_BLOCKS al
	CORAL_PLANTS an
	CRIMSON_STEMS A
	CROPS ay
	CRYSTAL_SOUND_BLOCKS bd
	DAMPENS_VIBRATIONS bg
	DARK_OAK_LOGS t
	DEAD_BUSH_MAY_PLACE_ON bS
	DEEPSLATE_ORE_REPLACEABLES aX
	DIAMOND_ORES U
	DIRT ac
	DOORS o
	DRAGON_IMMUNE at
	DRAGON_TRANSPARENT au
	DRIPSTONE_REPLACEABLE bh
	EMERALD_ORES Y
	ENDERMAN_HOLDABLE ag
	FALL_DAMAGE_RESETTING aH
	FEATURES_CANNOT_REPLACE bw
	FENCES O
	FENCE_GATES aP
	FIRE aB
	FLOWERS Q
	FLOWER_POTS af
	FOXES_SPAWNABLE_ON bK
	FROGS_SPAWNABLE_ON bM
	FROG_PREFER_JUMP_TO bz
	GEODE_INVALID_BLOCKS by
	GOATS_SPAWNABLE_ON bF
	GOLD_ORES S
	GUARDED_BY_PIGLINS aN
	HOGLIN_REPELLENTS aJ
	ICE ah
	IMPERMEABLE aj
	INFINIBURN_END aU
	INFINIBURN_NETHER aT
	INFINIBURN_OVERWORLD aS
	INSIDE_STEP_SOUND_BLOCKS be
	IRON_ORES T
	JUNGLE_LOGS x
	LAPIS_ORES W
	LAVA_POOL_STONE_CANNOT_REPLACE bx
	LEAVES K
	LOGS s
	LOGS_THAT_BURN q
	LUSH_GROUND_REPLACEABLE bk
	MANGROVE_LOGS z
	MANGROVE_LOGS_CAN_GROW_THROUGH bQ
	MANGROVE_ROOTS_CAN_GROW_THROUGH bR
	MINEABLE_WITH_AXE bp
	MINEABLE_WITH_HOE bq
	MINEABLE_WITH_PICKAXE br
	MINEABLE_WITH_SHOVEL bs
	MOOSHROOMS_SPAWNABLE_ON bG
	MOSS_REPLACEABLE bj
	MUSHROOM_GROW_BLOCK aR
	NEEDS_DIAMOND_TOOL bt
	NEEDS_IRON_TOOL bu
	NEEDS_STONE_TOOL bv
	NETHER_CARVER_REPLACEABLES ba
	NON_FLAMMABLE_WOOD aa
	NYLIUM aC
	OAK_LOGS u
	OCCLUDES_VIBRATION_SIGNALS bf
	OVERWORLD_CARVER_REPLACEABLES aZ
	OVERWORLD_NATURAL_LOGS r
	PARROTS_SPAWNABLE_ON bH
	PIGLIN_REPELLENTS R
	PLANKS b
	POLAR_BEARS_SPAWNABLE_ON_ALTERNATE bI
	PORTALS aA
	PRESSURE_PLATES k
	PREVENT_MOB_SPAWNING_INSIDE aO
	RABBITS_SPAWNABLE_ON bJ
	RAILS J
	REDSTONE_ORES V
	REPLACEABLE_PLANTS bO
	SAND E
	SAPLINGS p
	SCULK_REPLACEABLE bA
	SCULK_REPLACEABLE_WORLD_GEN bB
	SHULKER_BOXES aI
	SIGNS as
	SLABS G
	SMALL_DRIPLEAF_PLACEABLE bm
	SMALL_FLOWERS M
	SNAPS_GOAT_HORN bT
	SNOW bo
	SNOW_LAYER_CANNOT_SURVIVE_ON bU
	SNOW_LAYER_CAN_SURVIVE_ON bV
	SOUL_FIRE_BASE_BLOCKS aK
	SOUL_SPEED_BLOCKS aE
	SPRUCE_LOGS y
	STAIRS F
	STANDING_SIGNS aq
	STONE_BRICKS c
	STONE_ORE_REPLACEABLES aW
	STONE_PRESSURE_PLATES m
	STRIDER_WARM_BLOCKS aL
	TALL_FLOWERS P
	TERRACOTTA ad
	TRAPDOORS L
	UNDERWATER_BONEMEALS ak
	UNSTABLE_BOTTOM_CENTER aQ
	VALID_SPAWN ai
	WALLS H
	WALL_CORALS am
	WALL_POST_OVERRIDE aF
	WALL_SIGNS ar
	WARPED_STEMS B
	WART_BLOCKS C
	WITHER_IMMUNE av
	WITHER_SUMMON_BASE_BLOCKS aw
	WOLVES_SPAWNABLE_ON bL
	WOODEN_BUTTONS d
	WOODEN_DOORS g
	WOODEN_FENCES j
	WOODEN_PRESSURE_PLATES l
	WOODEN_SLABS i
	WOODEN_STAIRS h
	WOODEN_TRAPDOORS n
	WOOL a
	WOOL_CARPETS f
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/CatVariantTags akm
	DEFAULT_SPAWNS a
	FULL_MOON_SPAWNS b
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/EntityTypeTags akn
	ARROWS d
	AXOLOTL_ALWAYS_HOSTILES g
	AXOLOTL_HUNT_TARGETS h
	BEEHIVE_INHABITORS c
	FREEZE_HURTS_EXTRA_TYPES j
	FREEZE_IMMUNE_ENTITY_TYPES i
	FROG_FOOD k
	IMPACT_PROJECTILES e
	POWDER_SNOW_WALKABLE_MOBS f
	RAIDERS b
	SKELETONS a
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/FlatLevelGeneratorPresetTags ako
	VISIBLE a
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/FluidTags akp
	LAVA b
	WATER a
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/GameEventTags akq
	ALLAY_CAN_LISTEN e
	IGNORE_VIBRATIONS_SNEAKING d
	SHRIEKER_CAN_LISTEN c
	VIBRATIONS a
	WARDEN_CAN_LISTEN b
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/InstrumentTags akr
	GOAT_HORNS c
	REGULAR_GOAT_HORNS a
	SCREAMING_GOAT_HORNS b
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/ItemTags aks
	ACACIA_LOGS u
	ANVIL G
	ARROWS ap
	AXOLOTL_TEMPT_ITEMS av
	BANNERS B
	BEACON_PAYMENT_ITEMS ar
	BEDS L
	BIRCH_LOGS t
	BOATS ai
	BUTTONS e
	CANDLES ae
	CHEST_BOATS aj
	CLUSTER_MAX_HARVESTABLES ax
	COALS ao
	COAL_ORES Z
	COMPASSES ay
	COMPLETES_FIND_TREE_TUTORIAL ah
	COPPER_ORES ab
	CREEPER_DROP_MUSIC_DISCS an
	CRIMSON_STEMS y
	DAMPENS_VIBRATIONS aw
	DARK_OAK_LOGS r
	DIAMOND_ORES W
	DIRT af
	DOORS m
	EMERALD_ORES aa
	FENCES M
	FISHES ak
	FLOWERS O
	FOX_FOOD T
	FREEZE_IMMUNE_WEARABLES au
	GOLD_ORES U
	IGNORED_BY_PIGLIN_BABIES R
	IRON_ORES V
	JUNGLE_LOGS v
	LAPIS_ORES Y
	LEAVES I
	LECTERN_BOOKS aq
	LOGS q
	LOGS_THAT_BURN o
	MANGROVE_LOGS x
	MUSIC_DISCS am
	NON_FLAMMABLE_WOOD ac
	OAK_LOGS s
	OVERWORLD_NATURAL_LOGS p
	PIGLIN_FOOD S
	PIGLIN_LOVED Q
	PIGLIN_REPELLENTS P
	PLANKS b
	RAILS H
	REDSTONE_ORES X
	SAND C
	SAPLINGS n
	SIGNS al
	SLABS E
	SMALL_FLOWERS K
	SOUL_FIRE_BASE_BLOCKS ad
	SPRUCE_LOGS w
	STAIRS D
	STONE_BRICKS c
	STONE_CRAFTING_MATERIALS at
	STONE_TOOL_MATERIALS as
	TALL_FLOWERS N
	TERRACOTTA ag
	TRAPDOORS J
	WALLS F
	WARPED_STEMS z
	WART_BLOCKS A
	WOODEN_BUTTONS d
	WOODEN_DOORS g
	WOODEN_FENCES j
	WOODEN_PRESSURE_PLATES k
	WOODEN_SLABS i
	WOODEN_STAIRS h
	WOODEN_TRAPDOORS l
	WOOL a
	WOOL_CARPETS f
	bind (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/PaintingVariantTags akt
	PLACEABLE a
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/PoiTypeTags aku
	ACQUIRABLE_JOB_SITE a
	BEE_HOME c
	VILLAGE b
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/StructureTags akv
	CATS_SPAWN_AS_BLACK g
	CATS_SPAWN_IN f
	DOLPHIN_LOCATED b
	EYE_OF_ENDER_LOCATED a
	MINESHAFT i
	OCEAN_RUIN l
	ON_OCEAN_EXPLORER_MAPS d
	ON_TREASURE_MAPS e
	ON_WOODLAND_EXPLORER_MAPS c
	RUINED_PORTAL k
	SHIPWRECK j
	VILLAGE h
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/TagBuilder akw
	entries a
	add (Lnet/minecraft/tags/TagEntry;)Lnet/minecraft/tags/TagBuilder; a
	addElement (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagBuilder; a
	addOptionalElement (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagBuilder; b
	addOptionalTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagBuilder; d
	addTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagBuilder; c
	build ()Ljava/util/List; b
	create ()Lnet/minecraft/tags/TagBuilder; a
net/minecraft/tags/TagEntry akx
	CODEC a
	FULL_CODEC b
	id c
	required e
	tag d
	build (Lnet/minecraft/tags/TagEntry$Lookup;Ljava/util/function/Consumer;)Z a
	element (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagEntry; a
	elementOrTag ()Lnet/minecraft/util/ExtraCodecs$TagOrElementLocation; a
	optionalElement (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagEntry; b
	optionalTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagEntry; d
	tag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagEntry; c
	verifyIfPresent (Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z a
	visitOptionalDependencies (Ljava/util/function/Consumer;)V b
	visitRequiredDependencies (Ljava/util/function/Consumer;)V a
net/minecraft/tags/TagEntry$Lookup akx$a
	element (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	tag (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Collection; b
net/minecraft/tags/TagFile aky
	CODEC a
	entries b
	replace c
	entries ()Ljava/util/List; a
	replace ()Z b
net/minecraft/tags/TagKey akz
	VALUES c
	location b
	registry a
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; d
	codec (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; a
	create (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagKey; a
	hashedCodec (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; b
	isFor (Lnet/minecraft/resources/ResourceKey;)Z c
	location ()Lnet/minecraft/resources/ResourceLocation; b
	registry ()Lnet/minecraft/resources/ResourceKey; a
net/minecraft/tags/TagLoader ala
	LOGGER a
	PATH_SUFFIX b
	PATH_SUFFIX_LENGTH c
	directory e
	idToValue d
	addDependencyIfNotCyclic (Lcom/google/common/collect/Multimap;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)V b
	build (Ljava/util/Map;)Ljava/util/Map; a
	build (Lnet/minecraft/tags/TagEntry$Lookup;Ljava/util/List;)Lcom/mojang/datafixers/util/Either; a
	isCyclic (Lcom/google/common/collect/Multimap;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Z a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)Ljava/util/Map; a
	loadAndBuild (Lnet/minecraft/server/packs/resources/ResourceManager;)Ljava/util/Map; b
	visitDependenciesAndElement (Ljava/util/Map;Lcom/google/common/collect/Multimap;Ljava/util/Set;Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/BiConsumer;)V a
net/minecraft/tags/TagLoader$EntryWithSource ala$a
	entry a
	source b
	entry ()Lnet/minecraft/tags/TagEntry; a
	source ()Ljava/lang/String; b
net/minecraft/tags/TagManager alb
	CUSTOM_REGISTRY_DIRECTORIES a
	registryAccess b
	results c
	createLoader (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;Lnet/minecraft/core/RegistryAccess$RegistryEntry;)Ljava/util/concurrent/CompletableFuture; a
	getResult ()Ljava/util/List; a
	getTagDir (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/String; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/tags/TagManager$LoadResult alb$a
	key a
	tags b
	key ()Lnet/minecraft/resources/ResourceKey; a
	tags ()Ljava/util/Map; b
net/minecraft/tags/TagNetworkSerialization alc
	deserializeTagsFromNetwork (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Registry;Lnet/minecraft/tags/TagNetworkSerialization$NetworkPayload;Lnet/minecraft/tags/TagNetworkSerialization$TagOutput;)V a
	serializeTagsToNetwork (Lnet/minecraft/core/RegistryAccess;)Ljava/util/Map; a
	serializeToNetwork (Lnet/minecraft/core/Registry;)Lnet/minecraft/tags/TagNetworkSerialization$NetworkPayload; a
net/minecraft/tags/TagNetworkSerialization$NetworkPayload alc$a
	tags a
	isEmpty ()Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/tags/TagNetworkSerialization$NetworkPayload; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/tags/TagNetworkSerialization$TagOutput alc$b
net/minecraft/tags/WorldPresetTags ald
	EXTENDED b
	NORMAL a
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/util/BitStorage alf
	copy ()Lnet/minecraft/util/BitStorage; d
	get (I)I a
	getAll (Ljava/util/function/IntConsumer;)V a
	getAndSet (II)I a
	getBits ()I c
	getRaw ()[J a
	getSize ()I b
	set (II)V b
	unpack ([I)V a
net/minecraft/util/ClassInstanceMultiMap alg
	allInstances c
	baseClass b
	byClass a
	find (Ljava/lang/Class;)Ljava/util/Collection; a
	getAllInstances ()Ljava/util/List; a
net/minecraft/util/CrudeIncrementalIntIdentityHashBiMap alh
	EMPTY_SLOT c
	LOADFACTOR d
	NOT_FOUND b
	byId g
	keys e
	nextId h
	size i
	values f
	add (Ljava/lang/Object;)I c
	addMapping (Ljava/lang/Object;I)V a
	byId (I)Ljava/lang/Object; a
	clear ()V a
	contains (I)Z d
	contains (Ljava/lang/Object;)Z b
	copy ()Lnet/minecraft/util/CrudeIncrementalIntIdentityHashBiMap; c
	create (I)Lnet/minecraft/util/CrudeIncrementalIntIdentityHashBiMap; c
	findEmpty (I)I g
	getId (Ljava/lang/Object;)I a
	getValue (I)I e
	grow (I)V f
	hash (Ljava/lang/Object;)I d
	indexOf (Ljava/lang/Object;I)I b
	nextId ()I d
	size ()I b
net/minecraft/util/Crypt ali
	ASYMMETRIC_ALGORITHM i
	ASYMMETRIC_BITS j
	BYTE_ENCODING k
	HASH_ALGORITHM l
	MIME_ENCODER d
	MIME_LINE_SEPARATOR c
	PEM_RSA_PRIVATE_KEY_FOOTER n
	PEM_RSA_PRIVATE_KEY_HEADER m
	PRIVATE_KEY_CODEC f
	PUBLIC_KEY_CODEC e
	RSA_PUBLIC_KEY_FOOTER o
	RSA_PUBLIC_KEY_HEADER b
	SIGNING_ALGORITHM a
	SYMMETRIC_ALGORITHM g
	SYMMETRIC_BITS h
	byteToPrivateKey ([B)Ljava/security/PrivateKey; b
	byteToPublicKey ([B)Ljava/security/PublicKey; a
	cipherData (ILjava/security/Key;[B)[B a
	decryptByteToSecretKey (Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey; a
	decryptUsingKey (Ljava/security/Key;[B)[B b
	digestData (Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B a
	digestData ([[B)[B a
	encryptUsingKey (Ljava/security/Key;[B)[B a
	generateKeyPair ()Ljava/security/KeyPair; b
	generateSecretKey ()Ljavax/crypto/SecretKey; a
	getCipher (ILjava/security/Key;)Ljavax/crypto/Cipher; a
	pemRsaPrivateKeyToString (Ljava/security/PrivateKey;)Ljava/lang/String; a
	rsaPublicKeyToString (Ljava/security/PublicKey;)Ljava/lang/String; a
	rsaStringToKey (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/util/Crypt$ByteArrayToKeyFunction;)Ljava/security/Key; a
	setupCipher (ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher; a
	stringToPemRsaPrivateKey (Ljava/lang/String;)Ljava/security/PrivateKey; a
	stringToRsaPublicKey (Ljava/lang/String;)Ljava/security/PublicKey; b
net/minecraft/util/Crypt$ByteArrayToKeyFunction ali$a
net/minecraft/util/Crypt$SaltSignaturePair ali$b
	EMPTY a
	salt b
	signature c
	isValid ()Z a
	salt ()J c
	saltAsBytes ()[B b
	signature ()[B d
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/util/Crypt$SaltSignaturePair;)V a
net/minecraft/util/Crypt$SaltSupplier ali$c
	secureRandom a
	getLong ()J a
net/minecraft/util/CryptException alj
net/minecraft/util/CsvOutput alk
	FIELD_SEPARATOR b
	LINE_SEPARATOR a
	columnCount d
	output c
	builder ()Lnet/minecraft/util/CsvOutput$Builder; a
	getStringValue (Ljava/lang/Object;)Ljava/lang/String; a
	writeLine (Ljava/util/stream/Stream;)V a
	writeRow ([Ljava/lang/Object;)V a
net/minecraft/util/CsvOutput$Builder alk$a
	headers a
	addColumn (Ljava/lang/String;)Lnet/minecraft/util/CsvOutput$Builder; a
	build (Ljava/io/Writer;)Lnet/minecraft/util/CsvOutput; a
net/minecraft/util/CubicSampler all
	GAUSSIAN_SAMPLE_BREADTH b
	GAUSSIAN_SAMPLE_KERNEL c
	GAUSSIAN_SAMPLE_RADIUS a
	gaussianSampleVec3 (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/util/CubicSampler$Vec3Fetcher;)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/util/CubicSampler$Vec3Fetcher all$a
net/minecraft/util/CubicSpline alm
	builder (Lnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline$Builder; a
	builder (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline$Builder; a
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	constant (F)Lnet/minecraft/util/CubicSpline; a
	mapAll (Lnet/minecraft/util/CubicSpline$CoordinateVisitor;)Lnet/minecraft/util/CubicSpline; a
	parityString ()Ljava/lang/String; a
net/minecraft/util/CubicSpline$Builder alm$b
	coordinate a
	derivatives e
	locations c
	valueTransformer b
	values d
	addPoint (FF)Lnet/minecraft/util/CubicSpline$Builder; a
	addPoint (FFF)Lnet/minecraft/util/CubicSpline$Builder; a
	addPoint (FLnet/minecraft/util/CubicSpline;)Lnet/minecraft/util/CubicSpline$Builder; a
	addPoint (FLnet/minecraft/util/CubicSpline;F)Lnet/minecraft/util/CubicSpline$Builder; a
	build ()Lnet/minecraft/util/CubicSpline; a
net/minecraft/util/CubicSpline$Constant alm$c
	value b
	apply (Ljava/lang/Object;)F a
	mapAll (Lnet/minecraft/util/CubicSpline$CoordinateVisitor;)Lnet/minecraft/util/CubicSpline; a
	maxValue ()F c
	minValue ()F b
	parityString ()Ljava/lang/String; a
	value ()F d
net/minecraft/util/CubicSpline$CoordinateVisitor alm$d
net/minecraft/util/CubicSpline$Multipoint alm$e
	coordinate b
	derivatives e
	locations c
	maxValue g
	minValue f
	values d
	apply (Ljava/lang/Object;)F a
	coordinate ()Lnet/minecraft/util/ToFloatFunction; d
	create (Lnet/minecraft/util/ToFloatFunction;[FLjava/util/List;[F)Lnet/minecraft/util/CubicSpline$Multipoint; a
	derivatives ()[F g
	findIntervalStart ([FF)I a
	linearExtend (F[FF[FI)F a
	locations ()[F e
	mapAll (Lnet/minecraft/util/CubicSpline$CoordinateVisitor;)Lnet/minecraft/util/CubicSpline; a
	maxValue ()F c
	minValue ()F b
	parityString ()Ljava/lang/String; a
	toString ([F)Ljava/lang/String; a
	validateSizes ([FLjava/util/List;[F)V a
	values ()Ljava/util/List; f
net/minecraft/util/DebugBuffer aln
	data a
	index b
	dump ()Ljava/util/List; a
	push (Ljava/lang/Object;)V a
net/minecraft/util/DirectoryLock alo
	DUMMY d
	LOCK_FILE a
	lock c
	lockFile b
	create (Ljava/nio/file/Path;)Lnet/minecraft/util/DirectoryLock; a
	isLocked (Ljava/nio/file/Path;)Z b
	isValid ()Z a
net/minecraft/util/DirectoryLock$LockException alo$a
	alreadyLocked (Ljava/nio/file/Path;)Lnet/minecraft/util/DirectoryLock$LockException; a
net/minecraft/util/ExceptionCollector alp
	result a
	add (Ljava/lang/Throwable;)V a
	throwIfPresent ()V a
net/minecraft/util/ExtraCodecs alq
	BASE64_STRING g
	INSTANT_ISO8601 f
	NON_NEGATIVE_INT b
	PATTERN e
	POSITIVE_FLOAT d
	POSITIVE_INT c
	TAG_OR_ELEMENT_ID h
	UUID a
	fromOptionalLong j
	toOptionalLong i
	asOptionalLong (Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec; a
	catchDecoderException (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; c
	checkRangeMinExclusiveWithMessage (Ljava/lang/Number;Ljava/lang/Number;Ljava/util/function/Function;)Ljava/util/function/Function; b
	checkRangeWithMessage (Ljava/lang/Number;Ljava/lang/Number;Ljava/util/function/Function;)Ljava/util/function/Function; a
	ensureHomogenous (Ljava/util/function/Function;)Ljava/util/function/Function; b
	floatRangeMinExclusiveWithMessage (FFLjava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	idResolverCodec (Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;I)Lcom/mojang/serialization/Codec; a
	instantCodec (Ljava/time/format/DateTimeFormatter;)Lcom/mojang/serialization/Codec; a
	intRangeWithMessage (IILjava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	intervalCodec (Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	lazyInitializedCodec (Ljava/util/function/Supplier;)Lcom/mojang/serialization/Codec; a
	nonEmptyHolderSet (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
	nonEmptyHolderSetCheck ()Ljava/util/function/Function; b
	nonEmptyList (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	nonEmptyListCheck ()Ljava/util/function/Function; a
	orCompressed (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
	orElsePartial (Ljava/lang/Object;)Lcom/mojang/serialization/Codec$ResultFunction; a
	overrideLifecycle (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	retrieveContext (Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec; a
	stringResolverCodec (Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	xor (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
net/minecraft/util/ExtraCodecs$EitherCodec alq$b
	first a
	second b
	encode (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/util/ExtraCodecs$LazyInitializedCodec alq$c
	delegate a
	delegate ()Ljava/util/function/Supplier; a
net/minecraft/util/ExtraCodecs$TagOrElementLocation alq$d
	id a
	tag b
	decoratedId ()Ljava/lang/String; c
	id ()Lnet/minecraft/resources/ResourceLocation; a
	tag ()Z b
net/minecraft/util/ExtraCodecs$XorCodec alq$e
	first a
	second b
	encode (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/util/FastBufferedInputStream alr
	DEFAULT_BUFFER_SIZE a
	buffer c
	in b
	limit d
	position e
	bytesInBuffer ()I a
	fill ()V b
net/minecraft/util/FastColor als
net/minecraft/util/FastColor$ARGB32 als$a
	alpha (I)I a
	blue (I)I d
	color (IIII)I a
	green (I)I c
	multiply (II)I a
	red (I)I b
net/minecraft/util/FileZipper alt
	LOGGER a
	fs d
	outputFile b
	tempFile c
	add (Ljava/nio/file/Path;)V a
	add (Ljava/nio/file/Path;Ljava/io/File;)V a
	add (Ljava/nio/file/Path;Ljava/lang/String;)V a
net/minecraft/util/FormattedCharSequence alu
	EMPTY a
net/minecraft/util/FormattedCharSink alv
net/minecraft/util/FrameTimer alw
	LOGGING_LENGTH a
	logEnd e
	logLength d
	logStart c
	loggedTimes b
	getAverageDuration (I)J a
	getLog ()[J c
	getLogEnd ()I b
	getLogStart ()I a
	logFrameDuration (J)V a
	scaleAverageDurationTo (II)I a
	scaleSampleTo (JII)I a
	wrapIndex (I)I b
net/minecraft/util/FutureChain alx
	LOGGER c
	executor e
	head d
net/minecraft/util/Graph aly
	depthFirstSearch (Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;Ljava/util/function/Consumer;Ljava/lang/Object;)Z a
net/minecraft/util/GsonHelper alz
	GSON a
	convertToBigDecimal (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal; j
	convertToBigInteger (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger; k
	convertToBoolean (Lcom/google/gson/JsonElement;Ljava/lang/String;)Z c
	convertToByte (Lcom/google/gson/JsonElement;Ljava/lang/String;)B h
	convertToCharacter (Lcom/google/gson/JsonElement;Ljava/lang/String;)C i
	convertToDouble (Lcom/google/gson/JsonElement;Ljava/lang/String;)D d
	convertToFloat (Lcom/google/gson/JsonElement;Ljava/lang/String;)F e
	convertToInt (Lcom/google/gson/JsonElement;Ljava/lang/String;)I g
	convertToItem (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lnet/minecraft/world/item/Item; b
	convertToJsonArray (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray; n
	convertToJsonObject (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject; m
	convertToLong (Lcom/google/gson/JsonElement;Ljava/lang/String;)J f
	convertToObject (Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	convertToShort (Lcom/google/gson/JsonElement;Ljava/lang/String;)S l
	convertToString (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object; a
	getAsBigDecimal (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal; q
	getAsBigDecimal (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal; a
	getAsBigInteger (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger; r
	getAsBigInteger (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger; a
	getAsBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z j
	getAsBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z a
	getAsByte (Lcom/google/gson/JsonObject;Ljava/lang/String;)B o
	getAsByte (Lcom/google/gson/JsonObject;Ljava/lang/String;B)B a
	getAsCharacter (Lcom/google/gson/JsonObject;Ljava/lang/String;)C p
	getAsCharacter (Lcom/google/gson/JsonObject;Ljava/lang/String;C)C a
	getAsDouble (Lcom/google/gson/JsonObject;Ljava/lang/String;)D k
	getAsDouble (Lcom/google/gson/JsonObject;Ljava/lang/String;D)D a
	getAsFloat (Lcom/google/gson/JsonObject;Ljava/lang/String;)F l
	getAsFloat (Lcom/google/gson/JsonObject;Ljava/lang/String;F)F a
	getAsInt (Lcom/google/gson/JsonObject;Ljava/lang/String;)I n
	getAsInt (Lcom/google/gson/JsonObject;Ljava/lang/String;I)I a
	getAsItem (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/world/item/Item; i
	getAsItem (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	getAsJsonArray (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray; u
	getAsJsonArray (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray; a
	getAsJsonObject (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject; t
	getAsJsonObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject; a
	getAsLong (Lcom/google/gson/JsonObject;Ljava/lang/String;)J m
	getAsLong (Lcom/google/gson/JsonObject;Ljava/lang/String;J)J a
	getAsObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	getAsObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	getAsShort (Lcom/google/gson/JsonObject;Ljava/lang/String;)S s
	getAsShort (Lcom/google/gson/JsonObject;Ljava/lang/String;S)S a
	getAsString (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; h
	getAsString (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	getType (Lcom/google/gson/JsonElement;)Ljava/lang/String; d
	isArrayNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z d
	isBooleanValue (Lcom/google/gson/JsonElement;)Z c
	isBooleanValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z c
	isNumberValue (Lcom/google/gson/JsonElement;)Z b
	isNumberValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z b
	isObjectNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z e
	isStringValue (Lcom/google/gson/JsonElement;)Z a
	isStringValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z a
	isValidNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z g
	isValidPrimitive (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z f
	parse (Ljava/io/Reader;)Lcom/google/gson/JsonObject; a
	parse (Ljava/io/Reader;Z)Lcom/google/gson/JsonObject; a
	parse (Ljava/lang/String;)Lcom/google/gson/JsonObject; a
	parse (Ljava/lang/String;Z)Lcom/google/gson/JsonObject; a
	parseArray (Ljava/io/Reader;)Lcom/google/gson/JsonArray; b
	parseArray (Ljava/lang/String;)Lcom/google/gson/JsonArray; b
	sortByKeyIfNeeded (Ljava/util/Collection;Ljava/util/Comparator;)Ljava/util/Collection; a
	toStableString (Lcom/google/gson/JsonElement;)Ljava/lang/String; e
	writeValue (Lcom/google/gson/stream/JsonWriter;Lcom/google/gson/JsonElement;Ljava/util/Comparator;)V a
net/minecraft/util/HttpUtil ama
	DOWNLOAD_EXECUTOR a
	LOGGER b
	downloadTo (Ljava/io/File;Ljava/net/URL;Ljava/util/Map;ILnet/minecraft/util/ProgressListener;Ljava/net/Proxy;)Ljava/util/concurrent/CompletableFuture; a
	getAvailablePort ()I a
net/minecraft/util/InclusiveRange amb
	INT a
	maxInclusive c
	minInclusive b
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	codec (Lcom/mojang/serialization/Codec;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/Codec; a
	contains (Lnet/minecraft/util/InclusiveRange;)Z a
	create (Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/DataResult; a
	isValueInRange (Ljava/lang/Comparable;)Z a
	maxInclusive ()Ljava/lang/Comparable; b
	minInclusive ()Ljava/lang/Comparable; a
net/minecraft/util/KeyDispatchDataCodec amc
	codec a
	codec ()Lcom/mojang/serialization/Codec; a
	of (Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/KeyDispatchDataCodec; a
	of (Lcom/mojang/serialization/MapCodec;)Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/util/LazyLoadedValue amd
	factory a
	get ()Ljava/lang/Object; a
net/minecraft/util/LinearCongruentialGenerator ame
	INCREMENT b
	MULTIPLIER a
	next (JJ)J a
net/minecraft/util/LowerCaseEnumTypeAdapterFactory amf
	toLowercase (Ljava/lang/Object;)Ljava/lang/String; a
net/minecraft/util/MemoryReserve amg
	reserve a
	allocate ()V a
	release ()V b
net/minecraft/util/ModCheck amh
	confidence a
	description b
	confidence ()Lnet/minecraft/util/ModCheck$Confidence; c
	description ()Ljava/lang/String; d
	fullDescription ()Ljava/lang/String; b
	identify (Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/util/ModCheck; a
	merge (Lnet/minecraft/util/ModCheck;)Lnet/minecraft/util/ModCheck; a
	shouldReportAsModified ()Z a
net/minecraft/util/ModCheck$Confidence amh$a
	$VALUES f
	DEFINITELY c
	PROBABLY_NOT a
	VERY_LIKELY b
	description d
	shouldReportAsModified e
	$values ()[Lnet/minecraft/util/ModCheck$Confidence; a
net/minecraft/util/Mth ami
	ASIN_TAB v
	BIG_ENOUGH_FLOAT i
	BIG_ENOUGH_INT h
	COS_TAB w
	DEG_TO_RAD d
	EPSILON f
	FRAC_BIAS u
	FRAC_EXP s
	HALF_PI b
	LUT_SIZE t
	MULTIPLY_DE_BRUIJN_BIT_POSITION q
	ONE_SIXTH r
	PI a
	RAD_TO_DEG e
	RANDOM p
	SIN o
	SIN_SCALE n
	SQRT_OF_TWO g
	TWO_PI c
	UUID_VARIANT l
	UUID_VARIANT_2 m
	UUID_VERSION j
	UUID_VERSION_TYPE_4 k
	abs (F)F e
	abs (I)I a
	absFloor (D)I d
	absMax (DD)D a
	approach (FFF)F d
	approachDegrees (FFF)F e
	atan2 (DD)D d
	average ([J)D a
	binBiModalNormalDistribution (DDDDDDII)[D a
	binLogDistribution (DDII)[D a
	binNormalDistribution (DDDII)[D a
	binarySearch (IILjava/util/function/IntPredicate;)I a
	catmullRomSplinePos (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
	catmullrom (FFFFF)F a
	ceil (D)I e
	ceil (F)I f
	ceillog2 (I)I e
	clamp (BBB)B a
	clamp (DDD)D a
	clamp (FFF)F a
	clamp (III)I a
	clamp (JJJ)J a
	clampedLerp (DDD)D b
	clampedLerp (FFF)F b
	clampedMap (DDDDD)D a
	clampedMap (FFFFF)F b
	color (FFF)I f
	color (III)I b
	colorMultiply (IFFF)I a
	colorMultiply (II)I c
	cos (F)F b
	createInsecureUUID ()Ljava/util/UUID; a
	createInsecureUUID (Lnet/minecraft/util/RandomSource;)Ljava/util/UUID; a
	cube (F)F l
	cumulativeSum ([D)[D a
	degreesDifference (FF)F c
	degreesDifferenceAbs (FF)F d
	diffuseLight (FFF)F k
	equal (DD)Z b
	equal (FF)Z a
	fastFloor (D)I a
	fastInvCubeRoot (F)F j
	fastInvSqrt (D)D h
	fastInvSqrt (F)F i
	floor (D)I b
	floor (F)I d
	frac (D)D g
	frac (F)F h
	getDouble (Ljava/lang/String;D)D a
	getDouble (Ljava/lang/String;DD)D a
	getInt (Ljava/lang/String;I)I a
	getInt (Ljava/lang/String;II)I a
	getRandomForDistributionIntegral (Lnet/minecraft/util/RandomSource;[D)I a
	getSeed (III)J c
	getSeed (Lnet/minecraft/core/Vec3i;)J a
	hsvToRgb (FFF)I h
	intFloorDiv (II)I a
	inverseLerp (DDD)D c
	inverseLerp (FFF)F g
	isPowerOfTwo (I)Z d
	length (DD)D f
	length (DDD)D f
	lengthSquared (DD)D e
	lengthSquared (DDD)D e
	lerp (DDD)D d
	lerp (FFF)F i
	lerp2 (DDDDDD)D a
	lerp3 (DDDDDDDDDDD)D a
	lfloor (D)J c
	log2 (I)I f
	map (DDDDD)D b
	map (FFFFF)F c
	murmurHash3Mixer (I)I g
	murmurHash3Mixer (J)J a
	nextDouble (Lnet/minecraft/util/RandomSource;DD)D a
	nextFloat (Lnet/minecraft/util/RandomSource;FF)F a
	nextInt (Lnet/minecraft/util/RandomSource;II)I a
	normal (Lnet/minecraft/util/RandomSource;FF)F c
	outFromOrigin (III)Ljava/util/stream/IntStream; d
	outFromOrigin (IIII)Ljava/util/stream/IntStream; a
	positiveCeilDiv (II)I e
	positiveModulo (DD)D c
	positiveModulo (FF)F b
	positiveModulo (II)I b
	quantize (DI)I a
	randomBetween (Lnet/minecraft/util/RandomSource;FF)F b
	randomBetweenInclusive (Lnet/minecraft/util/RandomSource;II)I b
	rayIntersectsAABB (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;)Z a
	rotLerp (FFF)F j
	rotWrap (D)F l
	rotateIfNecessary (FFF)F c
	rotlerp (FFF)F l
	roundToward (II)I d
	sign (D)I k
	sin (F)F a
	smallestEncompassingPowerOfTwo (I)I c
	smoothstep (D)D i
	smoothstepDerivative (D)D j
	sqrt (F)F c
	square (D)D m
	square (F)F k
	square (I)I h
	square (J)J b
	triangleWave (FF)F e
	wobble (D)D n
	wrapDegrees (D)D f
	wrapDegrees (F)F g
	wrapDegrees (I)I b
net/minecraft/util/NativeModuleLister amj
	CODEPAGE_MASK d
	DEFAULT_CODEPAGE e
	DEFAULT_LANG c
	LANG_MASK b
	LOGGER a
	addCrashSection (Lnet/minecraft/CrashReportCategory;)V a
	findLangAndCodepage ([I)Ljava/util/OptionalInt; a
	langTableKey (Ljava/lang/String;II)Ljava/lang/String; a
	listModules ()Ljava/util/List; a
	queryVersionString (Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Ljava/lang/String; b
	queryVersionValue (Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Lcom/sun/jna/Pointer; a
	tryGetVersion (Ljava/lang/String;)Ljava/util/Optional; a
net/minecraft/util/NativeModuleLister$NativeModuleInfo amj$a
	name a
	version b
net/minecraft/util/NativeModuleLister$NativeModuleVersion amj$b
	company c
	description a
	version b
net/minecraft/util/OptionEnum amk
	getCaption ()Lnet/minecraft/network/chat/Component; c
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/util/ParticleUtils aml
	getRandomSpeedRanges (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/phys/Vec3; a
	spawnParticleOnFace (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/world/phys/Vec3;D)V a
	spawnParticlesAlongAxis (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;DLnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/util/valueproviders/UniformInt;)V a
	spawnParticlesOnBlockFace (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/core/Direction;Ljava/util/function/Supplier;D)V a
	spawnParticlesOnBlockFaces (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/util/valueproviders/IntProvider;)V a
net/minecraft/util/ProgressListener amm
	progressStage (Lnet/minecraft/network/chat/Component;)V c
	progressStagePercentage (I)V a
	progressStart (Lnet/minecraft/network/chat/Component;)V b
	progressStartNoAbort (Lnet/minecraft/network/chat/Component;)V a
	stop ()V a
net/minecraft/util/RandomSource amn
	GAUSSIAN_SPREAD_FACTOR a
	consumeCount (I)V b
	create ()Lnet/minecraft/util/RandomSource; a
	create (J)Lnet/minecraft/util/RandomSource; a
	createNewThreadLocalInstance ()Lnet/minecraft/util/RandomSource; c
	createThreadSafe ()Lnet/minecraft/util/RandomSource; b
	fork ()Lnet/minecraft/util/RandomSource; d
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	nextBoolean ()Z h
	nextDouble ()D j
	nextFloat ()F i
	nextGaussian ()D k
	nextInt ()I f
	nextInt (I)I a
	nextInt (II)I b
	nextIntBetweenInclusive (II)I a
	nextLong ()J g
	setSeed (J)V b
	triangle (DD)D a
net/minecraft/util/SignatureUpdater amo
net/minecraft/util/SignatureUpdater$Output amo$a
net/minecraft/util/SignatureValidator amp
	LOGGER b
	NO_VALIDATION a
	from (Lcom/mojang/authlib/yggdrasil/ServicesKeyInfo;)Lnet/minecraft/util/SignatureValidator; a
	from (Ljava/security/PublicKey;Ljava/lang/String;)Lnet/minecraft/util/SignatureValidator; a
	validate ([B[B)Z a
	verifySignature (Lnet/minecraft/util/SignatureUpdater;[BLjava/security/Signature;)Z a
net/minecraft/util/Signer amq
	LOGGER a
	from (Ljava/security/PrivateKey;Ljava/lang/String;)Lnet/minecraft/util/Signer; a
	sign ([B)[B a
net/minecraft/util/SimpleBitStorage amr
	MAGIC a
	bits c
	data b
	divideAdd h
	divideMul g
	divideShift i
	mask d
	size e
	valuesPerLong f
	cellIndex (I)I b
	copy ()Lnet/minecraft/util/BitStorage; d
	get (I)I a
	getAll (Ljava/util/function/IntConsumer;)V a
	getAndSet (II)I a
	getBits ()I c
	getRaw ()[J a
	getSize ()I b
	set (II)V b
	unpack ([I)V a
net/minecraft/util/SimpleBitStorage$InitializationException amr$a
net/minecraft/util/SmoothDouble ams
	lastAmount c
	remainingValue b
	targetValue a
	getNewDeltaValue (DD)D a
	reset ()V a
net/minecraft/util/SortedArraySet amt
	DEFAULT_INITIAL_CAPACITY a
	comparator b
	contents c
	size d
	addInternal (Ljava/lang/Object;I)V a
	addOrGet (Ljava/lang/Object;)Ljava/lang/Object; a
	castRawArray ([Ljava/lang/Object;)[Ljava/lang/Object; a
	create ()Lnet/minecraft/util/SortedArraySet; a
	create (I)Lnet/minecraft/util/SortedArraySet; a
	create (Ljava/util/Comparator;)Lnet/minecraft/util/SortedArraySet; a
	create (Ljava/util/Comparator;I)Lnet/minecraft/util/SortedArraySet; a
	findIndex (Ljava/lang/Object;)I c
	first ()Ljava/lang/Object; b
	get (Ljava/lang/Object;)Ljava/lang/Object; b
	getInsertionPosition (I)I b
	getInternal (I)Ljava/lang/Object; e
	grow (I)V c
	last ()Ljava/lang/Object; c
	removeInternal (I)V d
net/minecraft/util/SortedArraySet$ArrayIterator amt$a
	index b
	last c
net/minecraft/util/SpawnUtil amu
	moveToPossibleSpawnPosition (Lnet/minecraft/server/level/ServerLevel;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/util/SpawnUtil$Strategy;)Z a
	trySpawnMob (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;IIILnet/minecraft/util/SpawnUtil$Strategy;)Ljava/util/Optional; a
net/minecraft/util/SpawnUtil$Strategy amu$a
	LEGACY_IRON_GOLEM a
	ON_TOP_OF_COLLIDER b
net/minecraft/util/StringDecomposer amv
	REPLACEMENT_CHAR a
	STOP_ITERATION b
	feedChar (Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;IC)Z a
	filterBrokenSurrogates (Ljava/lang/String;)Ljava/lang/String; a
	getPlainText (Lnet/minecraft/network/chat/FormattedText;)Ljava/lang/String; a
	iterate (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
	iterateBackwards (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z b
	iterateFormatted (Ljava/lang/String;ILnet/minecraft/network/chat/Style;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
	iterateFormatted (Ljava/lang/String;ILnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
	iterateFormatted (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z c
	iterateFormatted (Lnet/minecraft/network/chat/FormattedText;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
net/minecraft/util/StringRepresentable amw
	PRE_BUILT_MAP_THRESHOLD W
	fromEnum (Ljava/util/function/Supplier;)Lnet/minecraft/util/StringRepresentable$EnumCodec; a
	getSerializedName ()Ljava/lang/String; c
	keys ([Lnet/minecraft/util/StringRepresentable;)Lcom/mojang/serialization/Keyable; a
net/minecraft/util/StringRepresentable$EnumCodec amw$a
	codec a
	resolver b
	byName (Ljava/lang/String;)Ljava/lang/Enum; a
	encode (Ljava/lang/Enum;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/util/StringUtil amx
	LINE_END_PATTERN c
	LINE_PATTERN b
	STRIP_COLOR_PATTERN a
	endsWithNewLine (Ljava/lang/String;)Z d
	formatTickDuration (I)Ljava/lang/String; a
	isNullOrEmpty (Ljava/lang/String;)Z b
	lineCount (Ljava/lang/String;)I c
	stripColor (Ljava/lang/String;)Ljava/lang/String; a
	trimChatMessage (Ljava/lang/String;)Ljava/lang/String; e
	truncateStringIfNecessary (Ljava/lang/String;IZ)Ljava/lang/String; a
net/minecraft/util/TaskChainer amy
	IMMEDIATE b
	LOGGER a
net/minecraft/util/TaskChainer$DelayedTask amy$a
net/minecraft/util/TelemetryConstants amz
	BUILD_DISPLAY_NAME i
	BUILD_PLATFORM l
	CLIENT_ID e
	CLIENT_MODDED j
	DEVICE_SESSION_ID f
	EVENT_TIMESTAMP_UTC h
	EVENT_WORLD_LOADED b
	GAME_MODE_ADVENTURE r
	GAME_MODE_CREATIVE q
	GAME_MODE_HARDCORE t
	GAME_MODE_SPECTATOR s
	GAME_MODE_SURVIVAL p
	JAVA_VERSION n
	PLATFORM m
	PLAYER_GAME_MODE o
	SERVER_MODDED c
	SERVER_TYPE k
	SERVER_TYPE_LOCAL v
	SERVER_TYPE_OTHER w
	SERVER_TYPE_REALM u
	TIMESTAMP_FORMATTER a
	USER_ID d
	WORLD_SESSION_ID g
net/minecraft/util/ThreadingDetector ana
	LOGGER a
	fullException f
	lock c
	name b
	stackTraceLock d
	threadThatFailedToAcquire e
	checkAndLock ()V a
	checkAndUnlock ()V b
	makeThreadingException (Ljava/lang/String;Ljava/lang/Thread;)Lnet/minecraft/ReportedException; a
	stackTrace (Ljava/lang/Thread;)Ljava/lang/String; a
net/minecraft/util/TimeSource anb
net/minecraft/util/TimeSource$NanoTimeSource anb$a
net/minecraft/util/TimeUtil anc
	NANOSECONDS_PER_MILLISECOND b
	NANOSECONDS_PER_SECOND a
	rangeOfSeconds (II)Lnet/minecraft/util/valueproviders/UniformInt; a
net/minecraft/util/ToFloatFunction and
	IDENTITY a
	apply (Ljava/lang/Object;)F a
	comap (Ljava/util/function/Function;)Lnet/minecraft/util/ToFloatFunction; a
	createUnlimited (Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)Lnet/minecraft/util/ToFloatFunction; a
	maxValue ()F c
	minValue ()F b
net/minecraft/util/Tuple ane
	getA ()Ljava/lang/Object; a
	getB ()Ljava/lang/Object; b
	setA (Ljava/lang/Object;)V a
	setB (Ljava/lang/Object;)V b
net/minecraft/util/Unit anf
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/util/Unit; a
net/minecraft/util/VisibleForDebug ang
net/minecraft/util/ZeroBitStorage anh
	RAW a
	size b
	copy ()Lnet/minecraft/util/BitStorage; d
	get (I)I a
	getAll (Ljava/util/function/IntConsumer;)V a
	getAndSet (II)I a
	getBits ()I c
	getRaw ()[J a
	getSize ()I b
	set (II)V b
	unpack ([I)V a
net/minecraft/util/datafix/DataFixTypes ani
	$VALUES n
	ADVANCEMENTS i
	CHUNK c
	ENTITY_CHUNK l
	HOTBAR d
	LEVEL a
	OPTIONS e
	PLAYER b
	POI_CHUNK j
	SAVED_DATA h
	STATS g
	STRUCTURE f
	WORLD_GEN_SETTINGS k
	type m
	$values ()[Lnet/minecraft/util/datafix/DataFixTypes; b
	getType ()Lcom/mojang/datafixers/DSL$TypeReference; a
net/minecraft/util/datafix/DataFixerOptimizationOption anj
	$VALUES e
	INITIALIZED_OPTIMIZED d
	INITIALIZED_UNOPTIMIZED c
	UNINITIALIZED_OPTIMIZED b
	UNINITIALIZED_UNOPTIMIZED a
	$values ()[Lnet/minecraft/util/datafix/DataFixerOptimizationOption; a
net/minecraft/util/datafix/DataFixers ank
	BLENDING_VERSION a
	LOGGER b
	SAME c
	SAME_NAMESPACED d
	dataFixer e
	addFixers (Lcom/mojang/datafixers/DataFixerBuilder;)V a
	createFixerUpper ()Lcom/mojang/datafixers/DataFixer; b
	createRenamer (Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/UnaryOperator; a
	createRenamer (Ljava/util/Map;)Ljava/util/function/UnaryOperator; a
	getDataFixer ()Lcom/mojang/datafixers/DataFixer; a
net/minecraft/util/datafix/PackedBitStorage anl
	BIT_TO_LONG_SHIFT a
	bits c
	data b
	mask d
	size e
	get (I)I a
	getBits ()I b
	getRaw ()[J a
	set (II)V a
net/minecraft/util/datafix/fixes/AbstractArrowPickupFix anm
	updateEntity (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
	updatePickup (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateProjectiles (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/AbstractPoiSectionFix ann
	name a
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	processRecords (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
	processSection (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	processSectionRecords (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/AbstractUUIDFix ano
	typeReference a
	createUUIDFromLongs (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; d
	createUUIDFromML (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; a
	createUUIDFromString (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional; a
	createUUIDTag (Lcom/mojang/serialization/Dynamic;JJ)Ljava/util/Optional; a
	replaceUUIDLeastMost (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; c
	replaceUUIDMLTag (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; b
	replaceUUIDString (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; a
	updateNamedChoice (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/AddFlagIfNotPresentFix anp
	flagKey c
	flagValue b
	name a
	typeReference d
net/minecraft/util/datafix/fixes/AddNewChoices anq
	name a
	type b
	cap (Ljava/lang/String;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/AdvancementsFix anr
	RENAMES a
net/minecraft/util/datafix/fixes/AdvancementsRenameFix ans
	name a
	renamer b
net/minecraft/util/datafix/fixes/AttributesRename ant
	RENAMES a
	fixEntity (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; b
	fixItemStackTag (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixName (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BedItemColorFix anu
net/minecraft/util/datafix/fixes/BiomeFix anv
	BIOMES a
net/minecraft/util/datafix/fixes/BitStorageAlignFix anw
	BIT_TO_LONG_SHIFT a
	HEIGHTMAP_BITS e
	HEIGHTMAP_SIZE f
	SECTION_HEIGHT c
	SECTION_SIZE d
	SECTION_WIDTH b
	addPadding (II[J)[J a
	updateBitStorage (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; a
	updateHeightmaps (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateSections (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlendingDataFix anx
	STATUSES_TO_SKIP_BLENDING b
	name a
	updateBlendingData (Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; a
	updateChunkTag (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlendingDataRemoveFromNetherEndFix any
	updateChunkTag (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityBannerColorFix anz
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix aoa
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntityCustomNameToComponentFix aob
net/minecraft/util/datafix/fixes/BlockEntityIdFix aoc
	ID_MAP a
net/minecraft/util/datafix/fixes/BlockEntityJukeboxFix aod
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntityKeepPacked aoe
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityShulkerBoxColorFix aof
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix aog
	GSON a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateLine (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityUUIDFix aoh
	updateConduit (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateSkull (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/BlockNameFlatteningFix aoi
net/minecraft/util/datafix/fixes/BlockRenameFix aoj
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; a
	fixBlock (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw aok
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; b
net/minecraft/util/datafix/fixes/BlockStateData aol
	BLOCK_DEFAULTS d
	FILTER_ME a
	ID_BY_OLD e
	ID_BY_OLD_NAME f
	LOGGER b
	MAP c
	bootstrap0 ()V a
	bootstrap1 ()V b
	bootstrap10 ()V k
	bootstrap11 ()V l
	bootstrap12 ()V m
	bootstrap13 ()V n
	bootstrap14 ()V o
	bootstrap15 ()V p
	bootstrap2 ()V c
	bootstrap3 ()V d
	bootstrap4 ()V e
	bootstrap5 ()V f
	bootstrap6 ()V g
	bootstrap7 ()V h
	bootstrap8 ()V i
	bootstrap9 ()V j
	finalizeMaps ()V q
	getTag (I)Lcom/mojang/serialization/Dynamic; b
	parse (Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; b
	register (ILjava/lang/String;[Ljava/lang/String;)V a
	upgradeBlock (I)Ljava/lang/String; a
	upgradeBlock (Ljava/lang/String;)Ljava/lang/String; a
	upgradeBlockStateTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockStateStructureTemplateFix aom
net/minecraft/util/datafix/fixes/CatTypeFix aon
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/CauldronRenameFix aoo
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/CavesAndCliffsRenames aop
	RENAMES a
net/minecraft/util/datafix/fixes/ChunkBedBlockEntityInjecterFix aoq
	cap (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/templates/List$ListType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/ChunkBiomeFix aor
net/minecraft/util/datafix/fixes/ChunkDeleteIgnoredLightDataFix aos
net/minecraft/util/datafix/fixes/ChunkHeightAndBiomeFix aot
	BIOMES_BY_ID s
	BIOME_CONTAINER_LAYER_SIZE p
	BIOME_CONTAINER_SIZE q
	BIOME_CONTAINER_TOP_LAYER_OFFSET r
	BLOCKS_BEFORE_FEATURE_STATUS o
	BLOCKS_PER_SECTION b
	DATAFIXER_CONTEXT_TAG a
	DEFAULT_BIOME c
	HEIGHTMAP_BITS i
	HEIGHTMAP_MASK j
	HEIGHTMAP_OFFSET k
	HEIGHTMAP_TYPES l
	LONGS_PER_SECTION h
	NAME d
	NEW_MIN_SECTION_Y g
	NEW_SECTION_COUNT f
	OLD_SECTION_COUNT e
	STATUS_IS_OR_AFTER_NOISE n
	STATUS_IS_OR_AFTER_SURFACE m
	addPaddingEntries (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
	ceillog2 (I)I a
	getBiomeContainers (Lcom/mojang/serialization/Dynamic;ZILorg/apache/commons/lang3/mutable/MutableBoolean;)[Lcom/mojang/serialization/Dynamic; a
	getFixedHeightmap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	getOldBiome ([II)I a
	makeBiomeContainer (Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lcom/mojang/serialization/Dynamic; a
	makeOptimizedPalettedContainer (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	makePalettedContainer (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	makePalettedContainer (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	padPaletteEntries (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Ljava/util/List;)Lcom/mojang/serialization/Dynamic; a
	predictChunkStatusBeforeSurface (Lcom/mojang/serialization/Dynamic;Ljava/util/Set;)Lcom/mojang/serialization/Dynamic; a
	shiftUpgradeData (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateCarvingMasks (Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; a
	updateChunkTag (Lcom/mojang/serialization/Dynamic;ZZZLjava/util/function/Supplier;)Lcom/mojang/serialization/Dynamic; a
	updateHeightmaps (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/ChunkLightRemoveFix aou
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix aov
	AIR C
	BANNER_BLOCK_MAP B
	BED_BLOCK_MAP A
	DOOR_MAP x
	DYE_COLOR_MAP z
	EAST_MASK f
	FIX k
	FLOWER_POT_MAP v
	LOGGER i
	NORTH_EAST_MASK g
	NORTH_MASK h
	NORTH_WEST_MASK a
	NOTE_BLOCK_MAP y
	PUMPKIN l
	SIZE D
	SKULL_MAP w
	SNOWY_GRASS n
	SNOWY_MYCELIUM o
	SNOWY_PODZOL m
	SOUTH_EAST_MASK e
	SOUTH_MASK d
	SOUTH_WEST_MASK c
	UPPER_LARGE_FERN s
	UPPER_LILAC q
	UPPER_PEONY u
	UPPER_ROSE_BUSH t
	UPPER_SUNFLOWER p
	UPPER_TALL_GRASS r
	VIRTUAL j
	WEST_MASK b
	addBanners (Ljava/util/Map;ILjava/lang/String;)V b
	addBeds (Ljava/util/Map;ILjava/lang/String;)V a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	getName (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; a
	getProperty (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/lang/String; a
	getSideMask (ZZZZ)I a
	idFor (Lnet/minecraft/util/CrudeIncrementalIntIdentityHashBiMap;Lcom/mojang/serialization/Dynamic;)I a
	mapDoor (Ljava/util/Map;Ljava/lang/String;I)V a
	mapSkull (Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$DataLayer aov$a
	NIBBLE_SIZE b
	SIZE a
	data c
	get (III)I a
	getPosition (I)I b
	isFirst (I)Z a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction aov$b
	$VALUES i
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	axis g
	axisDirection h
	$values ()[Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction; c
	getAxis ()Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis; b
	getAxisDirection ()Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection; a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis aov$b$a
	$VALUES d
	X a
	Y b
	Z c
	$values ()[Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis; a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection aov$b$b
	$VALUES d
	NEGATIVE b
	POSITIVE a
	step c
	$values ()[Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection; b
	getStep ()I a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section aov$c
	buffer i
	hasData e
	listTag c
	palette b
	section d
	seen h
	toFix f
	update g
	y a
	addFix (II)V a
	getBlock (I)Lcom/mojang/serialization/Dynamic; a
	setBlock (ILcom/mojang/serialization/Dynamic;)V a
	upgrade (I)I b
	write ()Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$UpgradeChunk aov$d
	blockEntities f
	level c
	sections b
	sides a
	x d
	z e
	getBlock (I)Lcom/mojang/serialization/Dynamic; a
	getBlockEntity (I)Lcom/mojang/serialization/Dynamic; b
	getSection (I)Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section; d
	relative (ILnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction;)I a
	removeBlockEntity (I)Lcom/mojang/serialization/Dynamic; c
	setBlock (ILcom/mojang/serialization/Dynamic;)V a
	write ()Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkProtoTickListFix aow
	ALWAYS_WATERLOGGED b
	SECTION_WIDTH a
	createTick (Lcom/mojang/serialization/Dynamic;Ljava/util/function/Supplier;IIIILjava/util/function/Function;)Lcom/mojang/serialization/Dynamic; a
	getBlock (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; a
	getLiquid (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; b
	makeTickList (Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;BIILjava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkProtoTickListFix$PoorMansPalettedContainer aow$a
	SIZE_BITS a
	bits d
	data c
	mask e
	palette b
	valuesPerLong f
	data ()[J b
	get (III)Lcom/mojang/serialization/Dynamic; a
	getIndex (III)I b
	palette ()Ljava/util/List; a
net/minecraft/util/datafix/fixes/ChunkRenamesFix aox
	appendChunkName (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	mergeRemainders (Lcom/mojang/datafixers/Typed;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	renameField (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; a
	renameFieldHelper (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/ChunkStatusFix aoy
net/minecraft/util/datafix/fixes/ChunkStatusFix2 aoz
	RENAMES_AND_DOWNGRADES a
net/minecraft/util/datafix/fixes/ChunkStructuresTemplateRenameFix apa
	RENAMES a
	fixTag (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkToProtochunkFix apb
	NUM_SECTIONS a
	fixChunkData (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	packOffsetCoordinates (III)S a
	repackBiomes (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	repackTicks (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/ColorlessShulkerEntityFix apc
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/CriteriaRenameFix apd
	advancementId b
	conversions c
	name a
	fixAdvancements (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/DyeItemRenameFix ape
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/EntityArmorStandSilentFix apf
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityBlockStateFix apg
	MAP a
	getBlockId (Ljava/lang/String;)I a
	updateBlockToBlockState (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; a
	updateEntity (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
	updateFallingBlock (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityCatSplitFix aph
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityCodSalmonFix api
	RENAMED_EGG_IDS b
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityCustomNameToComponentFix apj
	fixTagCustomName (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityElderGuardianSplitFix apk
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityEquipmentToArmorAndHandFix apl
	cap (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/EntityGoatMissingStateFix apm
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityHealthFix apn
	ENTITIES a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityHorseSaddleFix apo
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityHorseSplitFix app
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityIdFix apq
	ID_MAP a
net/minecraft/util/datafix/fixes/EntityItemFrameDirectionFix apr
	direction2dTo3d (B)B a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix aps
	MINECART_BY_ID a
net/minecraft/util/datafix/fixes/EntityPaintingFieldsRenameFix apt
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	renameField (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityPaintingItemFrameDirectionFix apu
	DIRECTIONS a
	doFix (Lcom/mojang/serialization/Dynamic;ZZ)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityPaintingMotiveFix apv
	MAP a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityProjectileOwnerFix apw
	createUUIDArray (JJ)[I a
	setUUID (Lcom/mojang/serialization/Dynamic;JJ)Lcom/mojang/serialization/Dynamic; a
	updateEntity (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
	updateItemPotion (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateOwnerArrow (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateOwnerLlamaSpit (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateOwnerThrowable (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateProjectiles (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityPufferfishRenameFix apx
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityRavagerRenameFix apy
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityRedundantChanceTagsFix apz
	FLOAT_LIST_CODEC a
	isZeroList (Lcom/mojang/serialization/OptionalDynamic;I)Z a
net/minecraft/util/datafix/fixes/EntityRenameFix aqa
	name a
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
	getEntity (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityRidingToPassengersFix aqb
	cap (Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/EntityShulkerColorFix aqc
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityShulkerRotationFix aqd
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntitySkeletonSplitFix aqe
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityStringUuidFix aqf
net/minecraft/util/datafix/fixes/EntityTheRenameningFix aqg
	MINECRAFT_BRED d
	RENAMED_BLOCKS b
	RENAMED_IDS a
	RENAMED_ITEMS c
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityTippedArrowFix aqh
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityUUIDFix aqi
	ABSTRACT_HORSES c
	ANIMALS e
	LIVING_ENTITIES g
	LOGGER b
	MOBS f
	PROJECTILES h
	TAMEABLE_ANIMALS d
	updateAnimal (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; m
	updateAnimalOwner (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; l
	updateAreaEffectCloud (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; g
	updateEntityUUID (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateEvokerFangs (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; e
	updateFox (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; j
	updateHurtBy (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; k
	updateItem (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; i
	updateLivingEntity (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateMob (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; n
	updatePiglin (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateProjectile (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; o
	updateShulkerBullet (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; h
	updateZombieVillager (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; f
net/minecraft/util/datafix/fixes/EntityVariantFix aqj
	fieldName a
	idConversions b
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateAndRename (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityWolfColorFix aqk
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityZombieSplitFix aql
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityZombieVillagerTypeFix aqm
	PROFESSION_MAX a
	RANDOM b
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	getVillagerProfession (I)I a
net/minecraft/util/datafix/fixes/EntityZombifiedPiglinRenameFix aqn
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/FilteredBooksFix aqo
	fixItemStackTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/FilteredSignsFix aqp
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/ForcePoiRebuild aqq
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/FurnaceRecipeFix aqr
	cap (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
	updateFurnaceContents (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/GoatHornIdFix aqs
	INSTRUMENTS a
	fixItemStackTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/GossipUUIDFix aqt
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/HeightmapRenamingFix aqu
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/IglooMetadataRemovalFix aqv
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	isIglooPiece (Lcom/mojang/serialization/Dynamic;)Z c
	removeIglooPieces (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/ItemBannerColorFix aqw
net/minecraft/util/datafix/fixes/ItemCustomNameToComponentFix aqx
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ItemIdFix aqy
	ITEM_NAMES a
	getItem (I)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemLoreFix aqz
	fixLoreEntry (Ljava/lang/String;)Ljava/lang/String; a
	fixLoreList (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
net/minecraft/util/datafix/fixes/ItemPotionFix ara
	DEFAULT a
	POTIONS c
	SPLASH b
net/minecraft/util/datafix/fixes/ItemRemoveBlockEntityTagFix arb
	items a
net/minecraft/util/datafix/fixes/ItemRenameFix arc
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; a
	fixItem (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix ard
	NAMES_BY_COLOR a
net/minecraft/util/datafix/fixes/ItemSpawnEggFix are
	ID_TO_ENTITY a
net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix arf
	MAP a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ItemStackMapIdFix arg
net/minecraft/util/datafix/fixes/ItemStackSpawnEggFix arh
	MAP a
net/minecraft/util/datafix/fixes/ItemStackTagFix ari
	idFilter b
	name a
	fixItemStackTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ItemStackTheFlatteningFix arj
	DAMAGE_IDS c
	IDS b
	MAP a
	updateItem (Ljava/lang/String;I)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemStackUUIDFix ark
	updateAttributeModifiers (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateSkullOwner (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/ItemWaterPotionFix arl
net/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix arm
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/JigsawPropertiesFix arn
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/JigsawRotationFix aro
	RENAMES a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/LeavesFix arp
	DECAY_DISTANCE j
	DIRECTIONS i
	EAST_MASK f
	LEAVES m
	LOGS n
	NORTH_EAST_MASK g
	NORTH_MASK h
	NORTH_WEST_MASK a
	SIZE l
	SIZE_BITS k
	SOUTH_EAST_MASK e
	SOUTH_MASK d
	SOUTH_WEST_MASK c
	WEST_MASK b
	getIndex (III)I a
	getSideMask (ZZZZ)I a
	getX (I)I a
	getY (I)I b
	getZ (I)I c
net/minecraft/util/datafix/fixes/LeavesFix$LeavesSection arp$a
	DECAYABLE i
	DISTANCE j
	PERSISTENT h
	leaveIds k
	logIds l
	stateToIdMap m
	getDistance (I)I d
	isLeaf (I)Z b
	isLog (I)Z a
	makeLeafTag (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/serialization/Dynamic; a
	setDistance (III)V a
	skippable ()Z a
net/minecraft/util/datafix/fixes/LeavesFix$Section arp$b
	BLOCK_STATES_TAG a
	NAME_TAG b
	PROPERTIES_TAG c
	blockStateType h
	index f
	palette e
	paletteFinder d
	storage g
	getBlock (I)I c
	getIndex ()I c
	getStateId (Ljava/lang/String;ZI)I a
	isSkippable ()Z b
	readStorage (Lcom/mojang/serialization/Dynamic;)V a
	skippable ()Z a
	write (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/LevelDataGeneratorOptionsFix arq
	GENERATOR_OPTIONS b
	MAP a
	convert (Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
	getLayerInfoFromString (Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; a
	getLayersInfoFromString (Ljava/lang/String;)Ljava/util/List; b
net/minecraft/util/datafix/fixes/LevelFlatGeneratorInfoFix arr
	AMOUNT_SPLITTER f
	BLOCK_SPLITTER g
	DEFAULT a
	GENERATOR_OPTIONS b
	LAYER_SPLITTER d
	OLD_AMOUNT_SPLITTER e
	SPLITTER c
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixString (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/LevelUUIDFix ars
	LOGGER b
	updateCustomBossEvents (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateDragonFight (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateWanderingTrader (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/MapIdFix art
net/minecraft/util/datafix/fixes/MemoryExpiryDataFix aru
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateBrain (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateMemories (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateMemoryEntry (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; a
	wrapMemoryValue (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
net/minecraft/util/datafix/fixes/MissingDimensionFix arv
	fields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; a
	flatType (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/Type; a
	optionalFields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; b
	optionalFields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; a
	recreateSettings (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/MobSpawnerEntityIdentifiersFix arw
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/NamedEntityFix arx
	entityName b
	name a
	type c
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/NewVillageFix ary
	cap (Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/ObjectiveDisplayNameFix arz
net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix asa
	getRenderType (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; a
net/minecraft/util/datafix/fixes/OminousBannerBlockEntityRenameFix asb
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/OminousBannerRenameFix asc
	fixItemStackTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/OptionsAddTextBackgroundFix asd
	calculateBackground (Ljava/lang/String;)D a
net/minecraft/util/datafix/fixes/OptionsForceVBOFix ase
net/minecraft/util/datafix/fixes/OptionsKeyLwjgl3Fix asf
	KEY_UNKNOWN a
	MAP b
net/minecraft/util/datafix/fixes/OptionsKeyTranslationFix asg
net/minecraft/util/datafix/fixes/OptionsLowerCaseLanguageFix ash
net/minecraft/util/datafix/fixes/OptionsRenameFieldFix asi
	fieldFrom b
	fieldTo c
	fixName a
net/minecraft/util/datafix/fixes/OverreachingTickFix asj
	extractOverreachingTicks (Lcom/mojang/serialization/Dynamic;IILjava/util/Optional;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/PlayerUUIDFix ask
net/minecraft/util/datafix/fixes/PoiTypeRemoveFix asl
	typesToKeep a
	processRecords (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
	shouldKeepRecord (Lcom/mojang/serialization/Dynamic;)Z a
net/minecraft/util/datafix/fixes/PoiTypeRenameFix asm
	renamer a
	processRecords (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
net/minecraft/util/datafix/fixes/RecipesFix asn
	RECIPES a
net/minecraft/util/datafix/fixes/RecipesRenameFix aso
	name a
	renamer b
net/minecraft/util/datafix/fixes/RecipesRenameningFix asp
	RECIPES a
net/minecraft/util/datafix/fixes/RedstoneWireConnectionsFix asq
	isConnected (Ljava/lang/String;)Z a
	updateRedstoneConnections (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/References asr
	ADVANCEMENTS i
	BIOME z
	BLOCK_ENTITY l
	BLOCK_NAME r
	BLOCK_STATE n
	CHUNK c
	ENTITY q
	ENTITY_CHUNK k
	ENTITY_NAME o
	ENTITY_TREE p
	GAME_EVENT_NAME t
	HOTBAR d
	ITEM_NAME s
	ITEM_STACK m
	LEVEL a
	OBJECTIVE w
	OPTIONS e
	PLAYER b
	POI_CHUNK j
	RECIPE y
	SAVED_DATA h
	STATS g
	STRUCTURE f
	STRUCTURE_FEATURE v
	TEAM x
	UNTAGGED_SPAWNER u
	WORLD_GEN_SETTINGS A
net/minecraft/util/datafix/fixes/RemoveGolemGossipFix ass
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixValue (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/RenameBiomesFix ast
	biomes b
	name a
net/minecraft/util/datafix/fixes/RenamedCoralFansFix asu
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/RenamedCoralFix asv
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/ReorganizePoi asw
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/SavedDataFeaturePoolElementFix asx
	FEATURES c
	INDEX_PATTERN a
	PIECE_TYPE b
	fixFeature (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	get (Lcom/mojang/serialization/Dynamic;[Ljava/lang/String;)Lcom/mojang/serialization/OptionalDynamic; a
	getReplacement (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; a
	updateChildren (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateChildren (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
net/minecraft/util/datafix/fixes/SavedDataUUIDFix asy
	LOGGER b
net/minecraft/util/datafix/fixes/SavedDataVillageCropFix asz
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateChildren (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateChildren (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
	updateCrop (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
	updateDoubleField (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateSingleField (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/SimpleEntityRenameFix ata
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/SimpleRenameFix atb
	fixerName a
	nameMapping b
	typeReference c
net/minecraft/util/datafix/fixes/SimplestEntityRenameFix atc
	name a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/SpawnerDataFix atd
	wrapEntityToSpawnData (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	wrapSpawnPotentialsToWeightedEntries (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; b
net/minecraft/util/datafix/fixes/StatsCounterFix ate
	BLOCK_KEY c
	CUSTOM_MAP b
	ENTITIES g
	ENTITY_KEYS f
	ITEM_KEYS e
	NEW_BLOCK_KEY d
	NEW_CUSTOM_KEY h
	SKIP a
	upgradeBlock (Ljava/lang/String;)Ljava/lang/String; b
	upgradeItem (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/StatsRenameFix atf
	name a
	renames b
	createCriteriaRule ()Lcom/mojang/datafixers/TypeRewriteRule; a
	createStatRule ()Lcom/mojang/datafixers/TypeRewriteRule; b
net/minecraft/util/datafix/fixes/StriderGravityFix atg
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/StructureReferenceCountFix ath
	setCountToAtLeastOne (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/StructureSettingsFlattenFix ati
	fixDimension (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; a
	fixStructures (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix atj
	CONVERSION_MAP a
	findUpdatedStructureType (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	guessConfiguration (Lcom/mojang/serialization/Dynamic;Lnet/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$Conversion;)Ljava/util/Optional; a
	updateReference (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; b
	updateReferences (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateStart (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
	updateStarts (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$Conversion atj$a
	biomeMapping a
	fallback b
	biomeMapped (Ljava/util/Map;Ljava/lang/String;)Lnet/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$Conversion; a
	biomeMapping ()Ljava/util/Map; a
	fallback ()Ljava/lang/String; b
	trivial (Ljava/lang/String;)Lnet/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$Conversion; a
	unpack (Ljava/util/Map;)Ljava/util/Map; a
net/minecraft/util/datafix/fixes/TeamDisplayNameFix atk
net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix atl
	LOGGER a
	SIZE b
	SIZE_BITS c
net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix$TrappedChestSection atl$a
	chestIds h
	isTrappedChest (I)Z a
	skippable ()Z a
net/minecraft/util/datafix/fixes/VariantRenameFix atm
	renames a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/VillagerDataFix atn
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	upgradeData (II)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/VillagerFollowRangeFix ato
	NEW_BASE_VALUE b
	ORIGINAL_VALUE a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixValue (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/VillagerRebuildLevelAndXpFix atp
	LEVEL_XP_THRESHOLDS b
	TRADES_PER_LEVEL a
	addLevel (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; a
	addXpFromLevel (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; b
	getMinXpPerLevel (I)I a
net/minecraft/util/datafix/fixes/VillagerTradeFix atq
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateItemStack (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/WallPropertyFix atr
	WALL_BLOCKS a
	fixWallProperty (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
	mapProperty (Ljava/lang/String;)Ljava/lang/String; a
	upgradeBlockStateTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/WeaponSmithChestLootTableFix ats
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/WorldGenSettingsDisallowOldCustomWorldsFix att
net/minecraft/util/datafix/fixes/WorldGenSettingsFix atu
	DEFAULTS j
	DESERT_PYRAMID b
	END_CITY g
	IGLOO c
	JUNGLE_TEMPLE d
	OCEAN_MONUMENT i
	PILLAGER_OUTPOST f
	SWAMP_HUT e
	VILLAGE a
	WOODLAND_MANSION h
	defaultOverworld (Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic; a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixFlatStructures (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/OptionalDynamic;)Ljava/util/Map; a
	getInt (Ljava/lang/String;I)I a
	getInt (Ljava/lang/String;II)I a
	noise (JLcom/mojang/serialization/DynamicLike;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	setSpacing (Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;I)V a
	vanillaBiomeSource (Lcom/mojang/serialization/Dynamic;JZZ)Lcom/mojang/serialization/Dynamic; a
	vanillaLevels (Lcom/mojang/serialization/Dynamic;JLcom/mojang/serialization/Dynamic;Z)Ljava/lang/Object; a
net/minecraft/util/datafix/fixes/WorldGenSettingsFix$StructureFeatureConfiguration atu$a
	CODEC a
	salt d
	separation c
	spacing b
	serialize (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/WorldGenSettingsHeightAndBiomeFix atv
	NAME b
	WAS_PREVIOUSLY_INCREASED_KEY a
	updateLayers (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/WriteAndReadFix atw
	name a
	type b
net/minecraft/util/datafix/fixes/ZombieVillagerRebuildXpFix atx
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/schemas/NamespacedSchema aua
	NAMESPACED_STRING b
	NAMESPACED_STRING_CODEC a
	ensureNamespaced (Ljava/lang/String;)Ljava/lang/String; a
	namespacedString ()Lcom/mojang/datafixers/types/Type; a
net/minecraft/util/datafix/schemas/V100 aub
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V102 auc
net/minecraft/util/datafix/schemas/V1022 aud
net/minecraft/util/datafix/schemas/V106 aue
net/minecraft/util/datafix/schemas/V107 auf
net/minecraft/util/datafix/schemas/V1125 aug
net/minecraft/util/datafix/schemas/V135 auh
net/minecraft/util/datafix/schemas/V143 aui
net/minecraft/util/datafix/schemas/V1451 auj
net/minecraft/util/datafix/schemas/V1451_1 auk
net/minecraft/util/datafix/schemas/V1451_2 aul
net/minecraft/util/datafix/schemas/V1451_3 aum
net/minecraft/util/datafix/schemas/V1451_4 aun
net/minecraft/util/datafix/schemas/V1451_5 auo
net/minecraft/util/datafix/schemas/V1451_6 aup
	REPACK_OBJECTIVE_ID d
	SPECIAL_OBJECTIVE_MARKER b
	UNPACK_OBJECTIVE_ID c
	createCriterionTypes (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; a
net/minecraft/util/datafix/schemas/V1451_7 auq
net/minecraft/util/datafix/schemas/V1460 aur
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1466 aus
net/minecraft/util/datafix/schemas/V1470 aut
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1481 auu
net/minecraft/util/datafix/schemas/V1483 auv
net/minecraft/util/datafix/schemas/V1486 auw
net/minecraft/util/datafix/schemas/V1510 auy
net/minecraft/util/datafix/schemas/V1800 auz
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1801 ava
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1904 avb
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1906 avc
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1909 avd
net/minecraft/util/datafix/schemas/V1920 ave
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1928 avf
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1929 avg
net/minecraft/util/datafix/schemas/V1931 avh
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2100 avi
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2501 avj
	registerFurnace (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2502 avk
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2505 avl
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2509 avm
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2519 avn
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2522 avo
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2551 avp
net/minecraft/util/datafix/schemas/V2568 avq
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2571 avr
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2684 avs
net/minecraft/util/datafix/schemas/V2686 avt
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2688 avu
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2704 avv
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2707 avw
	registerEntity (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2831 avx
net/minecraft/util/datafix/schemas/V2832 avy
net/minecraft/util/datafix/schemas/V2842 avz
net/minecraft/util/datafix/schemas/V3076 awa
net/minecraft/util/datafix/schemas/V3078 awb
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V3081 awc
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V3082 awd
net/minecraft/util/datafix/schemas/V3083 awe
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V501 awf
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V700 awg
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V701 awh
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V702 awi
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V703 awj
net/minecraft/util/datafix/schemas/V704 awk
	ADD_NAMES b
	ITEM_TO_BLOCKENTITY a
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V705 awl
	ADD_NAMES b
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
	registerThrowableProjectile (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
net/minecraft/util/datafix/schemas/V808 awm
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V99 awn
	ADD_NAMES a
	ITEM_TO_BLOCKENTITY c
	LOGGER b
	addNames (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object; a
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V d
	registerMinecart (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V c
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
	registerThrowableProjectile (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
net/minecraft/util/monitoring/jmx/MinecraftServerStatistics awp
	LOGGER a
	attributeDescriptionByName d
	mBeanInfo c
	server b
	getAverageTickTime ()F a
	getTickTimes ()[J b
	registerJmxMonitoring (Lnet/minecraft/server/MinecraftServer;)V a
net/minecraft/util/monitoring/jmx/MinecraftServerStatistics$AttributeDescription awp$a
	description c
	getter b
	name a
	type d
	asMBeanAttributeInfo ()Ljavax/management/MBeanAttributeInfo; a
net/minecraft/util/profiling/ActiveProfiler aws
	LOGGER c
	WARNING_TIME_NANOS a
	chartedPaths o
	currentEntry m
	entries f
	getRealTime h
	getTickTime g
	path k
	paths d
	startTimeNano i
	startTimeTicks j
	startTimes e
	started l
	warn n
	endTick ()V b
	getChartedPaths ()Ljava/util/Set; e
	getCurrentEntry ()Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; f
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; c
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
	incrementCounter (Ljava/lang/String;I)V a
	incrementCounter (Ljava/util/function/Supplier;I)V a
	markForCharting (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V a
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
net/minecraft/util/profiling/ActiveProfiler$PathEntry aws$a
	accumulatedDuration c
	count d
	counters e
	maxDuration a
	minDuration b
	getCount ()J c
	getCounters ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; d
	getDuration ()J a
	getMaxDuration ()J b
net/minecraft/util/profiling/ContinuousProfiler awt
	profiler c
	realTime a
	tickCount b
	disable ()V b
	enable ()V c
	getFiller ()Lnet/minecraft/util/profiling/ProfilerFiller; d
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; e
	isEnabled ()Z a
net/minecraft/util/profiling/EmptyProfileResults awu
	EMPTY a
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getProfilerResults ()Ljava/lang/String; e
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	saveResults (Ljava/nio/file/Path;)Z a
net/minecraft/util/profiling/FilledProfileResults awv
	COUNTER_ENTRY_COMPARATOR e
	EMPTY b
	LOGGER a
	SPLITTER c
	endTimeNano i
	endTimeTicks j
	entries f
	startTimeNano g
	startTimeTicks h
	tickDuration k
	appendCounterResults (ILjava/lang/String;Lnet/minecraft/util/profiling/FilledProfileResults$CounterCollector;ILjava/lang/StringBuilder;)V a
	appendCounters (Ljava/util/Map;Ljava/lang/StringBuilder;I)V a
	appendProfilerResults (ILjava/lang/String;Ljava/lang/StringBuilder;)V a
	getComment ()Ljava/lang/String; i
	getCounterValues ()Ljava/util/Map; h
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ProfilerPathEntry; c
	getProfilerResults ()Ljava/lang/String; e
	getProfilerResults (JI)Ljava/lang/String; a
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTickDuration ()I f
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	indentLine (Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder; a
	isDirectChild (Ljava/lang/String;Ljava/lang/String;)Z a
	saveResults (Ljava/nio/file/Path;)Z a
net/minecraft/util/profiling/FilledProfileResults$CounterCollector awv$a
	children c
	selfValue a
	totalValue b
	addValue (Ljava/util/Iterator;J)V a
net/minecraft/util/profiling/InactiveProfiler aww
	INSTANCE a
	endTick ()V b
	getChartedPaths ()Ljava/util/Set; e
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; c
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
	incrementCounter (Ljava/lang/String;I)V a
	incrementCounter (Ljava/util/function/Supplier;I)V a
	markForCharting (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V a
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
net/minecraft/util/profiling/ProfileCollector awx
	getChartedPaths ()Ljava/util/Set; e
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; c
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
net/minecraft/util/profiling/ProfileResults awy
	PATH_SEPARATOR d
	demanglePath (Ljava/lang/String;)Ljava/lang/String; b
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getNanoDuration ()J g
	getProfilerResults ()Ljava/lang/String; e
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTickDuration ()I f
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	saveResults (Ljava/nio/file/Path;)Z a
net/minecraft/util/profiling/ProfilerFiller awz
	ROOT b
	endTick ()V b
	incrementCounter (Ljava/lang/String;)V d
	incrementCounter (Ljava/lang/String;I)V a
	incrementCounter (Ljava/util/function/Supplier;)V c
	incrementCounter (Ljava/util/function/Supplier;I)V a
	markForCharting (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V a
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
	tee (Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/util/profiling/ProfilerFiller; a
net/minecraft/util/profiling/ProfilerPathEntry axa
	getCount ()J c
	getCounters ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; d
	getDuration ()J a
	getMaxDuration ()J b
net/minecraft/util/profiling/ResultField axb
	count c
	globalPercentage b
	name d
	percentage a
	compareTo (Lnet/minecraft/util/profiling/ResultField;)I a
	getColor ()I a
net/minecraft/util/profiling/SingleTickProfiler axc
	LOGGER a
	location e
	profiler f
	realTime b
	saveThreshold c
	tick d
	createTickProfiler (Ljava/lang/String;)Lnet/minecraft/util/profiling/SingleTickProfiler; a
	decorateFiller (Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/SingleTickProfiler;)Lnet/minecraft/util/profiling/ProfilerFiller; a
	endTick ()V b
	startTick ()Lnet/minecraft/util/profiling/ProfilerFiller; a
net/minecraft/util/profiling/jfr/Environment axd
	$VALUES d
	CLIENT a
	SERVER b
	description c
	$values ()[Lnet/minecraft/util/profiling/jfr/Environment; b
	from (Lnet/minecraft/server/MinecraftServer;)Lnet/minecraft/util/profiling/jfr/Environment; a
	getDescription ()Ljava/lang/String; a
net/minecraft/util/profiling/jfr/JfrProfiler axe
	CUSTOM_EVENTS g
	DATE_TIME_FORMATTER i
	FLIGHT_RECORDER_CONFIG h
	INSTANCE j
	LOGGER f
	NETWORK_CATEGORY d
	ROOT_CATEGORY a
	TICK_CATEGORY c
	WORLD_GEN_CATEGORY b
	currentAverageTickTime l
	networkTrafficByAddress m
	recording k
	getInstance ()Lnet/minecraft/util/profiling/jfr/JfrProfiler; a
	isAvailable ()Z d
	isRunning ()Z c
	networkStatFor (Ljava/net/SocketAddress;)Lnet/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$SumAggregation; a
	onChunkGenerate (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; a
	onPacketReceived (IILjava/net/SocketAddress;I)V a
	onPacketSent (IILjava/net/SocketAddress;I)V b
	onServerTick (F)V a
	onWorldLoadedStarted ()Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; e
	setupSummaryListener ()V f
	start (Ljava/io/Reader;Lnet/minecraft/util/profiling/jfr/Environment;)Z a
	start (Lnet/minecraft/util/profiling/jfr/Environment;)Z a
	stop ()Ljava/nio/file/Path; b
net/minecraft/util/profiling/jfr/JvmProfiler axf
	INSTANCE e
	isAvailable ()Z d
	isRunning ()Z c
	onChunkGenerate (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; a
	onPacketReceived (IILjava/net/SocketAddress;I)V a
	onPacketSent (IILjava/net/SocketAddress;I)V b
	onServerTick (F)V a
	onWorldLoadedStarted ()Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; e
	start (Lnet/minecraft/util/profiling/jfr/Environment;)Z a
	stop ()Ljava/nio/file/Path; b
net/minecraft/util/profiling/jfr/JvmProfiler$NoOpProfiler axf$a
	LOGGER b
	noOpCommit a
	isAvailable ()Z d
	isRunning ()Z c
	onChunkGenerate (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; a
	onPacketReceived (IILjava/net/SocketAddress;I)V a
	onPacketSent (IILjava/net/SocketAddress;I)V b
	onServerTick (F)V a
	onWorldLoadedStarted ()Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; e
	start (Lnet/minecraft/util/profiling/jfr/Environment;)Z a
	stop ()Ljava/nio/file/Path; b
net/minecraft/util/profiling/jfr/Percentiles axg
	DEFAULT_INDEXES a
	evaluate ([D)Ljava/util/Map; a
	evaluate ([J)Ljava/util/Map; a
	sorted (Ljava/util/Map;)Ljava/util/Map; a
net/minecraft/util/profiling/jfr/SummaryReporter axh
	LOGGER a
	onDeregistration b
	infoWithFallback (Ljava/util/function/Supplier;)V a
	recordingStopped (Ljava/nio/file/Path;)V a
	warnWithFallback (Ljava/util/function/Supplier;Ljava/lang/Throwable;)V a
net/minecraft/util/profiling/jfr/callback/ProfiledDuration axi
net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$Fields net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$a
	CHUNK_POS_X c
	CHUNK_POS_Z d
	LEVEL f
	STATUS e
	WORLD_POS_X a
	WORLD_POS_Z b
net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$Fields net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$a
	RECEIVED_BYTES c
	RECEIVED_PACKETS e
	REMOTE_ADDRESS a
	SENT_BYTES b
	SENT_PACKETS d
net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$SumAggregation net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b
	event e
	receivedBytes c
	receivedPackets d
	sentBytes a
	sentPackets b
	commitEvent ()V a
	trackReceivedPacket (I)V b
	trackSentPacket (I)V a
net/minecraft/util/profiling/jfr/event/PacketEvent axk
net/minecraft/util/profiling/jfr/event/PacketEvent$Fields axk$a
	BYTES d
	PACKET_ID c
	PROTOCOL_ID b
	REMOTE_ADDRESS a
net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$Fields net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$a
	AVERAGE_TICK_DURATION a
net/minecraft/util/profiling/jfr/parse/JfrStatsParser axn
	chunkGenStats c
	cpuLoadStat d
	fileReads h
	fileWrites g
	garbageCollections i
	gcHeapStats k
	gcTotalDuration j
	receivedPackets e
	recordingEnded b
	recordingStarted a
	sentPackets f
	threadAllocationStats l
	tickTimes m
	worldCreationDuration n
	appendFileIO (Ljdk/jfr/consumer/RecordedEvent;Ljava/util/List;Ljava/lang/String;)V a
	capture (Ljava/util/stream/Stream;)V a
	collectPacketStats (Ljava/time/Duration;Ljava/util/Map;)Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary; a
	incrementPacket (Ljdk/jfr/consumer/RecordedEvent;ILjava/util/Map;)V a
	parse (Ljava/nio/file/Path;)Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult; a
	results ()Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult; a
net/minecraft/util/profiling/jfr/parse/JfrStatsParser$MutableCountAndSize axn$a
	count a
	totalSize b
	increment (I)V a
	toCountAndSize ()Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize; a
net/minecraft/util/profiling/jfr/parse/JfrStatsResult axo
	chunkGenStats m
	cpuLoadStats f
	fileReads l
	fileWrites k
	heapSummary g
	receivedPacketsSummary i
	recordingDuration c
	recordingEnded b
	recordingStarted a
	sentPacketsSummary j
	threadAllocationSummary h
	tickTimes e
	worldCreationDuration d
	asJson ()Ljava/lang/String; b
	chunkGenStats ()Ljava/util/List; o
	chunkGenSummary ()Ljava/util/List; a
	cpuLoadStats ()Ljava/util/List; h
	fileReads ()Lnet/minecraft/util/profiling/jfr/stats/FileIOStat$Summary; n
	fileWrites ()Lnet/minecraft/util/profiling/jfr/stats/FileIOStat$Summary; m
	heapSummary ()Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary; i
	receivedPacketsSummary ()Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary; k
	recordingDuration ()Ljava/time/Duration; e
	recordingEnded ()Ljava/time/Instant; d
	recordingStarted ()Ljava/time/Instant; c
	sentPacketsSummary ()Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary; l
	threadAllocationSummary ()Lnet/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary; j
	tickTimes ()Ljava/util/List; g
	worldCreationDuration ()Ljava/time/Duration; f
net/minecraft/util/profiling/jfr/serialize/JfrResultJsonSerializer axq
	BYTES_PER_SECOND b
	COUNT c
	COUNT_PER_SECOND f
	DURATION_NANOS_TOTAL d
	TOTAL_BYTES e
	gson a
	chunkGen (Ljava/util/List;)Lcom/google/gson/JsonElement; a
	cpu (Ljava/util/List;)Lcom/google/gson/JsonElement; c
	fileIO (Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult;)Lcom/google/gson/JsonElement; b
	fileIoSummary (Lnet/minecraft/util/profiling/jfr/stats/FileIOStat$Summary;)Lcom/google/gson/JsonElement; a
	format (Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult;)Ljava/lang/String; a
	heap (Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary;)Lcom/google/gson/JsonElement; a
	network (Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult;)Lcom/google/gson/JsonElement; c
	packets (Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary;)Lcom/google/gson/JsonElement; a
	serverTicks (Ljava/util/List;)Lcom/google/gson/JsonElement; b
	threadAllocations (Lnet/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary;)Lcom/google/gson/JsonElement; a
net/minecraft/util/profiling/jfr/stats/ChunkGenStat axs
	chunkPos b
	duration a
	level e
	status d
	worldPos c
	chunkPos ()Lnet/minecraft/world/level/ChunkPos; b
	duration ()Ljava/time/Duration; a
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/ChunkGenStat; a
	level ()Ljava/lang/String; e
	status ()Lnet/minecraft/world/level/chunk/ChunkStatus; d
	worldPos ()Lnet/minecraft/server/level/ColumnPos; c
net/minecraft/util/profiling/jfr/stats/CpuLoadStat axt
	jvm a
	system c
	userJvm b
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/CpuLoadStat; a
	jvm ()D a
	system ()D c
	userJvm ()D b
net/minecraft/util/profiling/jfr/stats/FileIOStat axu
	bytes c
	duration a
	path b
	bytes ()J c
	duration ()Ljava/time/Duration; a
	path ()Ljava/lang/String; b
	summary (Ljava/time/Duration;Ljava/util/List;)Lnet/minecraft/util/profiling/jfr/stats/FileIOStat$Summary; a
net/minecraft/util/profiling/jfr/stats/FileIOStat$Summary axu$a
	bytesPerSecond b
	counts c
	countsPerSecond d
	timeSpentInIO e
	topTenContributorsByTotalBytes f
	totalBytes a
	bytesPerSecond ()D b
	counts ()J c
	countsPerSecond ()D d
	timeSpentInIO ()Ljava/time/Duration; e
	topTenContributorsByTotalBytes ()Ljava/util/List; f
	totalBytes ()J a
net/minecraft/util/profiling/jfr/stats/GcHeapStat axv
	heapUsed b
	timestamp a
	timing c
	calculateAllocationRatePerSecond (Ljava/util/List;)D a
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat; a
	heapUsed ()J b
	summary (Ljava/time/Duration;Ljava/util/List;Ljava/time/Duration;I)Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary; a
	timestamp ()Ljava/time/Instant; a
	timing ()Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat$Timing; c
net/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary axv$a
	allocationRateBytesPerSecond d
	duration a
	gcTotalDuration b
	totalGCs c
	allocationRateBytesPerSecond ()D e
	duration ()Ljava/time/Duration; b
	gcOverHead ()F a
	gcTotalDuration ()Ljava/time/Duration; c
	totalGCs ()I d
net/minecraft/util/profiling/jfr/stats/GcHeapStat$Timing axv$b
	$VALUES c
	AFTER_GC b
	BEFORE_GC a
	$values ()[Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat$Timing; a
net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary axw
	largestSizeContributors b
	recordingDuration c
	totalPacketCountAndSize a
	getCountsPerSecond ()D a
	getSizePerSecond ()D b
	getTotalCount ()J c
	getTotalSize ()J d
	largestSizeContributors ()Ljava/util/List; e
net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize axw$a
	SIZE_THEN_COUNT c
	totalCount a
	totalSize b
	add (Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize;)Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize; a
	totalCount ()J a
	totalSize ()J b
net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketIdentification axw$b
	PACKET_NAME_BY_ID d
	direction a
	packetId c
	protocolId b
	direction ()Lnet/minecraft/network/protocol/PacketFlow; b
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketIdentification; a
	packetId ()I d
	packetName ()Ljava/lang/String; a
	protocolId ()I c
net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat axx
	UNKNOWN_THREAD d
	threadName b
	timestamp a
	totalBytes c
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/ThreadAllocationStat; a
	summary (Ljava/util/List;)Lnet/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary; a
	threadName ()Ljava/lang/String; b
	timestamp ()Ljava/time/Instant; a
	totalBytes ()J c
net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary axx$a
	allocationsPerSecondByThread a
	allocationsPerSecondByThread ()Ljava/util/Map; a
net/minecraft/util/profiling/jfr/stats/TickTimeStat axy
	currentAverage b
	timestamp a
	currentAverage ()Ljava/time/Duration; b
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/TickTimeStat; a
	timestamp ()Ljava/time/Instant; a
net/minecraft/util/profiling/jfr/stats/TimeStamped axz
	getTimestamp ()Ljava/time/Instant; a
net/minecraft/util/profiling/jfr/stats/TimedStat aya
	duration ()Ljava/time/Duration; a
net/minecraft/util/profiling/jfr/stats/TimedStatSummary ayb
	count d
	fastest a
	percentilesNanos e
	secondSlowest c
	slowest b
	totalDuration f
	count ()I d
	fastest ()Lnet/minecraft/util/profiling/jfr/stats/TimedStat; a
	percentilesNanos ()Ljava/util/Map; e
	secondSlowest ()Lnet/minecraft/util/profiling/jfr/stats/TimedStat; c
	slowest ()Lnet/minecraft/util/profiling/jfr/stats/TimedStat; b
	summary (Ljava/util/List;)Lnet/minecraft/util/profiling/jfr/stats/TimedStatSummary; a
	totalDuration ()Ljava/time/Duration; f
net/minecraft/util/profiling/metrics/MetricCategory ayd
	$VALUES k
	CHUNK_RENDERING f
	CHUNK_RENDERING_DISPATCHING g
	CPU h
	EVENT_LOOPS b
	GPU i
	JVM e
	MAIL_BOXES c
	PATH_FINDING a
	TICK_LOOP d
	description j
	$values ()[Lnet/minecraft/util/profiling/metrics/MetricCategory; b
	getDescription ()Ljava/lang/String; a
net/minecraft/util/profiling/metrics/MetricSampler aye
	beforeTick h
	category c
	currentValue i
	isRunning g
	name b
	sampler d
	thresholdTest a
	ticks e
	values f
	builder (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)Lnet/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder; a
	create (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lnet/minecraft/util/profiling/metrics/MetricSampler; a
	create (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/function/DoubleSupplier;)Lnet/minecraft/util/profiling/metrics/MetricSampler; a
	getCategory ()Lnet/minecraft/util/profiling/metrics/MetricCategory; e
	getName ()Ljava/lang/String; d
	getSampler ()Ljava/util/function/DoubleSupplier; c
	onEndTick (I)V a
	onFinished ()V b
	onStartTick ()V a
	result ()Lnet/minecraft/util/profiling/metrics/MetricSampler$SamplerResult; f
	triggersThreshold ()Z g
	verifyRunning ()V h
net/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder aye$a
	beforeTick e
	category b
	context d
	name a
	sampler c
	thresholdTest f
	build ()Lnet/minecraft/util/profiling/metrics/MetricSampler; a
	withBeforeTick (Ljava/util/function/Consumer;)Lnet/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder; a
	withThresholdAlert (Lnet/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest;)Lnet/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder; a
net/minecraft/util/profiling/metrics/MetricSampler$SamplerResult aye$b
	firstTick b
	lastTick c
	recording a
	getFirstTick ()I a
	getLastTick ()I b
	valueAtTick (I)D a
net/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest aye$c
net/minecraft/util/profiling/metrics/MetricSampler$ValueIncreasedByPercentage aye$d
	percentageIncreaseThreshold a
	previousValue b
net/minecraft/util/profiling/metrics/MetricsRegistry ayf
	INSTANCE a
	measuredInstances b
	add (Lnet/minecraft/util/profiling/metrics/ProfilerMeasured;)V a
	aggregateDuplicates (Ljava/util/Map;)Ljava/util/List; a
	getRegisteredSamplers ()Ljava/util/List; a
net/minecraft/util/profiling/metrics/MetricsRegistry$AggregatedMetricSampler ayf$a
	delegates b
	averageValueFromDelegates (Ljava/util/List;)D c
	beforeTick (Ljava/util/List;)V b
	thresholdTest (Ljava/util/List;)Lnet/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest; a
net/minecraft/util/profiling/metrics/MetricsSamplerProvider ayg
	samplers (Ljava/util/function/Supplier;)Ljava/util/Set; a
net/minecraft/util/profiling/metrics/ProfilerMeasured ayh
	profiledMetrics ()Ljava/util/List; bl
net/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder ayj
	PROFILING_MAX_DURATION_SECONDS a
	currentTick l
	deadlineNano k
	deviationsBySampler c
	globalOnReportFinished b
	ioExecutor e
	killSwitch n
	metricsPersister f
	metricsSamplerProvider i
	onProfilingEnd g
	onReportFinished h
	singleTickProfiler m
	taskProfiler d
	thisTickSamplers o
	wallTimeSource j
	cancel ()V b
	cleanup (Ljava/util/Collection;)V a
	createStarted (Lnet/minecraft/util/profiling/metrics/MetricsSamplerProvider;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Lnet/minecraft/util/profiling/metrics/storage/MetricsPersister;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lnet/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder; a
	end ()V a
	endTick ()V d
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; f
	isRecording ()Z e
	registerGlobalCompletionCallback (Ljava/util/function/Consumer;)V a
	scheduleSaveResults (Lnet/minecraft/util/profiling/ProfileResults;)V a
	startTick ()V c
	verifyStarted ()V g
net/minecraft/util/profiling/metrics/profiling/InactiveMetricsRecorder ayk
	INSTANCE a
	cancel ()V b
	end ()V a
	endTick ()V d
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; f
	isRecording ()Z e
	startTick ()V c
net/minecraft/util/profiling/metrics/profiling/MetricsRecorder ayl
	cancel ()V b
	end ()V a
	endTick ()V d
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; f
	isRecording ()Z e
	startTick ()V c
net/minecraft/util/profiling/metrics/profiling/ProfilerSamplerAdapter aym
	previouslyFoundSamplerNames a
	newSamplersFoundInProfiler (Ljava/util/function/Supplier;)Ljava/util/Set; a
	samplerForProfilingPath (Ljava/util/function/Supplier;Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;)Lnet/minecraft/util/profiling/metrics/MetricSampler; a
net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider ayn
	LOGGER a
	samplerFactory c
	samplers b
	runtimeIndependentSamplers ()Ljava/util/Set; a
	samplers (Ljava/util/function/Supplier;)Ljava/util/Set; a
	tickTimeSampler (Ljava/util/function/LongSupplier;)Lnet/minecraft/util/profiling/metrics/MetricSampler; a
net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$CpuStats ayn$a
	currentLoad e
	lastPollMs f
	nrOfCpus a
	previousCpuLoadTick d
	processor c
	systemInfo b
	loadForCpu (I)D a
net/minecraft/util/profiling/metrics/storage/MetricsPersister ayp
	DEVIATIONS_DIR_NAME c
	LOGGER e
	METRICS_DIR_NAME b
	PROFILING_RESULTS_DIR a
	PROFILING_RESULT_FILENAME d
	rootFolderName f
	saveCategory (Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/List;Ljava/nio/file/Path;)V a
	saveDeviations (Ljava/util/Map;Ljava/nio/file/Path;)V a
	saveMetrics (Ljava/util/Set;Ljava/nio/file/Path;)V a
	saveProfilingTaskExecutionResult (Lnet/minecraft/util/profiling/ProfileResults;Ljava/nio/file/Path;)V a
	saveReports (Ljava/util/Set;Ljava/util/Map;Lnet/minecraft/util/profiling/ProfileResults;)Ljava/nio/file/Path; a
net/minecraft/util/profiling/metrics/storage/RecordedDeviation ayq
	profilerResultAtTick c
	tick b
	timestamp a
net/minecraft/util/random/SimpleWeightedRandomList ayt
	builder ()Lnet/minecraft/util/random/SimpleWeightedRandomList$Builder; a
	empty ()Lnet/minecraft/util/random/SimpleWeightedRandomList; b
	getRandomValue (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	single (Ljava/lang/Object;)Lnet/minecraft/util/random/SimpleWeightedRandomList; a
	wrappedCodec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
	wrappedCodecAllowingEmpty (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
net/minecraft/util/random/SimpleWeightedRandomList$Builder ayt$a
	result a
	add (Ljava/lang/Object;I)Lnet/minecraft/util/random/SimpleWeightedRandomList$Builder; a
	build ()Lnet/minecraft/util/random/SimpleWeightedRandomList; a
net/minecraft/util/random/Weight ayu
	CODEC a
	LOGGER c
	ONE b
	value d
	asInt ()I a
	of (I)Lnet/minecraft/util/random/Weight; a
	validateWeight (I)V b
net/minecraft/util/random/WeightedEntry ayv
	getWeight ()Lnet/minecraft/util/random/Weight; a
	wrap (Ljava/lang/Object;I)Lnet/minecraft/util/random/WeightedEntry$Wrapper; a
net/minecraft/util/random/WeightedEntry$IntrusiveBase ayv$a
	weight a
	getWeight ()Lnet/minecraft/util/random/Weight; a
net/minecraft/util/random/WeightedEntry$Wrapper ayv$b
	data a
	weight b
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getData ()Ljava/lang/Object; b
	getWeight ()Lnet/minecraft/util/random/Weight; a
net/minecraft/util/random/WeightedRandom ayw
	getRandomItem (Lnet/minecraft/util/RandomSource;Ljava/util/List;)Ljava/util/Optional; a
	getRandomItem (Lnet/minecraft/util/RandomSource;Ljava/util/List;I)Ljava/util/Optional; a
	getTotalWeight (Ljava/util/List;)I a
	getWeightedItem (Ljava/util/List;I)Ljava/util/Optional; a
net/minecraft/util/random/WeightedRandomList ayx
	items b
	totalWeight a
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; c
	create ()Lnet/minecraft/util/random/WeightedRandomList; c
	create (Ljava/util/List;)Lnet/minecraft/util/random/WeightedRandomList; a
	create ([Lnet/minecraft/util/random/WeightedEntry;)Lnet/minecraft/util/random/WeightedRandomList; a
	getRandom (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; b
	isEmpty ()Z d
	unwrap ()Ljava/util/List; e
net/minecraft/util/thread/BlockableEventLoop ayz
	LOGGER c
	blockingCount e
	name b
	pendingRunnables d
	doRunTask (Ljava/lang/Runnable;)V d
	dropAllTasks ()V bp
	executeBlocking (Ljava/lang/Runnable;)V h
	executeIfPossible (Ljava/lang/Runnable;)V c
	getPendingTasksCount ()I bn
	getRunningThread ()Ljava/lang/Thread; au
	isSameThread ()Z bm
	managedBlock (Ljava/util/function/BooleanSupplier;)V c
	name ()Ljava/lang/String; bo
	pollTask ()Z x
	profiledMetrics ()Ljava/util/List; bl
	runAllTasks ()V bq
	scheduleExecutables ()Z at
	shouldRun (Ljava/lang/Runnable;)Z e
	submit (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; g
	submit (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; a
	submitAsync (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; a
	tell (Ljava/lang/Object;)V a
	tell (Ljava/lang/Runnable;)V i
	waitForTasks ()V br
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; f
net/minecraft/util/thread/NamedThreadFactory aza
	LOGGER a
	group b
	namePrefix d
	threadNumber c
net/minecraft/util/thread/ProcessorHandle azb
	ask (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; b
	askEither (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; c
	name ()Ljava/lang/String; bo
	of (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/util/thread/ProcessorHandle; a
	tell (Ljava/lang/Object;)V a
net/minecraft/util/thread/ProcessorMailbox azc
	CLOSED_BIT b
	LOGGER a
	SCHEDULED_BIT c
	dispatcher f
	name g
	queue e
	status d
	canBeScheduled ()Z f
	create (Ljava/util/concurrent/Executor;Ljava/lang/String;)Lnet/minecraft/util/thread/ProcessorMailbox; a
	hasWork ()Z c
	name ()Ljava/lang/String; bo
	pollTask ()Z h
	pollUntil (Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I a
	profiledMetrics ()Ljava/util/List; bl
	registerForExecution ()V i
	runAll ()V a
	setAsIdle ()V e
	setAsScheduled ()Z d
	shouldProcess ()Z g
	size ()I b
	tell (Ljava/lang/Object;)V a
net/minecraft/util/thread/ReentrantBlockableEventLoop azd
	reentrantCount b
	doRunTask (Ljava/lang/Runnable;)V d
	runningTask ()Z bs
	scheduleExecutables ()Z at
net/minecraft/util/thread/StrictQueue aze
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	push (Ljava/lang/Object;)Z a
	size ()I c
net/minecraft/util/thread/StrictQueue$FixedPriorityQueue aze$a
	queues a
	size b
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	pop ()Ljava/lang/Runnable; d
	push (Ljava/lang/Object;)Z a
	push (Lnet/minecraft/util/thread/StrictQueue$IntRunnable;)Z a
	size ()I c
net/minecraft/util/thread/StrictQueue$IntRunnable aze$b
	priority a
	task b
	getPriority ()I a
net/minecraft/util/thread/StrictQueue$QueueStrictQueue aze$c
	queue a
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	push (Ljava/lang/Object;)Z a
	size ()I c
net/minecraft/util/valueproviders/BiasedToBottomInt azg
	CODEC a
	maxInclusive f
	minInclusive b
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	of (II)Lnet/minecraft/util/valueproviders/BiasedToBottomInt; a
	sample (Lnet/minecraft/util/RandomSource;)I a
net/minecraft/util/valueproviders/ClampedInt azh
	CODEC a
	maxInclusive g
	minInclusive f
	source b
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	of (Lnet/minecraft/util/valueproviders/IntProvider;II)Lnet/minecraft/util/valueproviders/ClampedInt; a
	sample (Lnet/minecraft/util/RandomSource;)I a
net/minecraft/util/valueproviders/ClampedNormalFloat azi
	CODEC a
	deviation d
	max f
	mean b
	min e
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	of (FFFF)Lnet/minecraft/util/valueproviders/ClampedNormalFloat; a
	sample (Lnet/minecraft/util/RandomSource;)F a
	sample (Lnet/minecraft/util/RandomSource;FFFF)F a
net/minecraft/util/valueproviders/ClampedNormalInt azj
	CODEC a
	deviation f
	max_inclusive h
	mean b
	min_inclusive g
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	of (FFII)Lnet/minecraft/util/valueproviders/ClampedNormalInt; a
	sample (Lnet/minecraft/util/RandomSource;)I a
	sample (Lnet/minecraft/util/RandomSource;FFFF)I a
net/minecraft/util/valueproviders/ConstantFloat azk
	CODEC b
	ZERO a
	value d
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	getValue ()F d
	of (F)Lnet/minecraft/util/valueproviders/ConstantFloat; a
	sample (Lnet/minecraft/util/RandomSource;)F a
net/minecraft/util/valueproviders/ConstantInt azl
	CODEC b
	ZERO a
	value f
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	getValue ()I d
	of (I)Lnet/minecraft/util/valueproviders/ConstantInt; a
	sample (Lnet/minecraft/util/RandomSource;)I a
net/minecraft/util/valueproviders/FloatProvider azm
	CODEC c
	CONSTANT_OR_DISPATCH_CODEC a
	codec (FF)Lcom/mojang/serialization/Codec; a
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
net/minecraft/util/valueproviders/FloatProviderType azn
	CLAMPED_NORMAL c
	CONSTANT a
	TRAPEZOID d
	UNIFORM b
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/valueproviders/FloatProviderType; a
net/minecraft/util/valueproviders/IntProvider azo
	CODEC c
	CONSTANT_OR_DISPATCH_CODEC a
	NON_NEGATIVE_CODEC d
	POSITIVE_CODEC e
	codec (II)Lcom/mojang/serialization/Codec; b
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	sample (Lnet/minecraft/util/RandomSource;)I a
net/minecraft/util/valueproviders/IntProviderType azp
	BIASED_TO_BOTTOM c
	CLAMPED d
	CLAMPED_NORMAL f
	CONSTANT a
	UNIFORM b
	WEIGHTED_LIST e
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/valueproviders/IntProviderType; a
net/minecraft/util/valueproviders/MultipliedFloats azq
	values a
	sample (Lnet/minecraft/util/RandomSource;)F a
net/minecraft/util/valueproviders/SampledFloat azr
	sample (Lnet/minecraft/util/RandomSource;)F a
net/minecraft/util/valueproviders/TrapezoidFloat azs
	CODEC a
	max d
	min b
	plateau e
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	of (FFF)Lnet/minecraft/util/valueproviders/TrapezoidFloat; a
	sample (Lnet/minecraft/util/RandomSource;)F a
net/minecraft/util/valueproviders/UniformFloat azt
	CODEC a
	maxExclusive d
	minInclusive b
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	of (FF)Lnet/minecraft/util/valueproviders/UniformFloat; b
	sample (Lnet/minecraft/util/RandomSource;)F a
net/minecraft/util/valueproviders/UniformInt azu
	CODEC a
	maxInclusive f
	minInclusive b
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	of (II)Lnet/minecraft/util/valueproviders/UniformInt; a
	sample (Lnet/minecraft/util/RandomSource;)I a
net/minecraft/util/valueproviders/WeightedListInt azv
	CODEC a
	distribution b
	maxValue g
	minValue f
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	sample (Lnet/minecraft/util/RandomSource;)I a
net/minecraft/util/worldupdate/WorldUpgrader azx
	LOGGER a
	REGEX p
	THREAD_FACTORY b
	converted l
	dataFixer g
	eraseCache d
	finished i
	levelStorage e
	overworldDataStorage q
	progress j
	progressMap n
	running h
	skipped m
	status o
	thread f
	totalChunks k
	worldGenSettings c
	cancel ()V a
	dimensionProgress (Lnet/minecraft/resources/ResourceKey;)F a
	getAllChunkPos (Lnet/minecraft/resources/ResourceKey;)Ljava/util/List; b
	getConverted ()I f
	getProgress ()F d
	getSkipped ()I g
	getStatus ()Lnet/minecraft/network/chat/Component; h
	getTotalChunks ()I e
	isFinished ()Z b
	levels ()Lcom/google/common/collect/ImmutableSet; c
	work ()V i
net/minecraft/world/BossEvent azz
	color c
	createWorldFog g
	darkenScreen e
	id h
	name a
	overlay d
	playBossMusic f
	progress b
	getColor ()Lnet/minecraft/world/BossEvent$BossBarColor; l
	getId ()Ljava/util/UUID; i
	getName ()Lnet/minecraft/network/chat/Component; j
	getOverlay ()Lnet/minecraft/world/BossEvent$BossBarOverlay; m
	getProgress ()F k
	setColor (Lnet/minecraft/world/BossEvent$BossBarColor;)V a
	setCreateWorldFog (Z)Lnet/minecraft/world/BossEvent; c
	setDarkenScreen (Z)Lnet/minecraft/world/BossEvent; a
	setName (Lnet/minecraft/network/chat/Component;)V a
	setOverlay (Lnet/minecraft/world/BossEvent$BossBarOverlay;)V a
	setPlayBossMusic (Z)Lnet/minecraft/world/BossEvent; b
	setProgress (F)V a
	shouldCreateWorldFog ()Z p
	shouldDarkenScreen ()Z n
	shouldPlayBossMusic ()Z o
net/minecraft/world/BossEvent$BossBarColor azz$a
	$VALUES j
	BLUE b
	GREEN d
	PINK a
	PURPLE f
	RED c
	WHITE g
	YELLOW e
	formatting i
	name h
	$values ()[Lnet/minecraft/world/BossEvent$BossBarColor; c
	byName (Ljava/lang/String;)Lnet/minecraft/world/BossEvent$BossBarColor; a
	getFormatting ()Lnet/minecraft/ChatFormatting; a
	getName ()Ljava/lang/String; b
net/minecraft/world/BossEvent$BossBarOverlay azz$b
	$VALUES g
	NOTCHED_10 c
	NOTCHED_12 d
	NOTCHED_20 e
	NOTCHED_6 b
	PROGRESS a
	name f
	$values ()[Lnet/minecraft/world/BossEvent$BossBarOverlay; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/BossEvent$BossBarOverlay; a
	getName ()Ljava/lang/String; a
net/minecraft/world/Clearable baa
	clearContent ()V a
	tryClear (Ljava/lang/Object;)V a
net/minecraft/world/CompoundContainer bab
	container1 b
	container2 c
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	clearContent ()V a
	contains (Lnet/minecraft/world/Container;)Z a
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getMaxStackSize ()I O_
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V d_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c_
net/minecraft/world/Container bac
	LARGE_MAX_STACK_SIZE j_
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	countItem (Lnet/minecraft/world/item/Item;)I a_
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getMaxStackSize ()I O_
	hasAnyMatching (Ljava/util/function/Predicate;)Z a_
	hasAnyOf (Ljava/util/Set;)Z a
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V d_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c_
net/minecraft/world/ContainerHelper bad
	clearOrCountMatchingItems (Lnet/minecraft/world/Container;Ljava/util/function/Predicate;IZ)I a
	clearOrCountMatchingItems (Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Predicate;IZ)I a
	loadAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;)V b
	removeItem (Ljava/util/List;II)Lnet/minecraft/world/item/ItemStack; a
	saveAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;)Lnet/minecraft/nbt/CompoundTag; a
	saveAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;Z)Lnet/minecraft/nbt/CompoundTag; a
	takeItem (Ljava/util/List;I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/ContainerListener bae
	containerChanged (Lnet/minecraft/world/Container;)V a
net/minecraft/world/Containers baf
	dropContents (Lnet/minecraft/world/level/Level;DDDLnet/minecraft/world/Container;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/NonNullList;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/Container;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/Container;)V a
	dropItemStack (Lnet/minecraft/world/level/Level;DDDLnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/Difficulty bag
	$VALUES h
	BY_ID e
	EASY b
	HARD d
	NORMAL c
	PEACEFUL a
	id f
	key g
	$values ()[Lnet/minecraft/world/Difficulty; d
	byId (I)Lnet/minecraft/world/Difficulty; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/Difficulty; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
	getId ()I a
	getKey ()Ljava/lang/String; c
net/minecraft/world/DifficultyInstance bah
	DIFFICULTY_TIME_GLOBAL_OFFSET a
	MAX_DIFFICULTY_TIME_GLOBAL b
	MAX_DIFFICULTY_TIME_LOCAL c
	base d
	effectiveDifficulty e
	calculateDifficulty (Lnet/minecraft/world/Difficulty;JJF)F a
	getDifficulty ()Lnet/minecraft/world/Difficulty; a
	getEffectiveDifficulty ()F b
	getSpecialMultiplier ()F d
	isHard ()Z c
	isHarderThan (F)Z a
net/minecraft/world/InteractionHand bai
	$VALUES c
	MAIN_HAND a
	OFF_HAND b
	$values ()[Lnet/minecraft/world/InteractionHand; a
net/minecraft/world/InteractionResult baj
	$VALUES f
	CONSUME b
	CONSUME_PARTIAL c
	FAIL e
	PASS d
	SUCCESS a
	$values ()[Lnet/minecraft/world/InteractionResult; d
	consumesAction ()Z a
	shouldAwardStats ()Z c
	shouldSwing ()Z b
	sidedSuccess (Z)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/InteractionResultHolder bak
	object b
	result a
	consume (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; b
	fail (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; d
	getObject ()Ljava/lang/Object; b
	getResult ()Lnet/minecraft/world/InteractionResult; a
	pass (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; c
	sidedSuccess (Ljava/lang/Object;Z)Lnet/minecraft/world/InteractionResultHolder; a
	success (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/LockCode bal
	NO_LOCK a
	TAG_LOCK b
	key c
	addToTag (Lnet/minecraft/nbt/CompoundTag;)V a
	fromTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/LockCode; b
	unlocksWith (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/MenuProvider bam
	getDisplayName ()Lnet/minecraft/network/chat/Component; C_
net/minecraft/world/Nameable ban
	getCustomName ()Lnet/minecraft/network/chat/Component; Z
	getDisplayName ()Lnet/minecraft/network/chat/Component; C_
	getName ()Lnet/minecraft/network/chat/Component; X
	hasCustomName ()Z Y
net/minecraft/world/SimpleContainer bao
	items c
	listeners d
	size b
	addItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	addListener (Lnet/minecraft/world/ContainerListener;)V a
	canAddItem (Lnet/minecraft/world/item/ItemStack;)Z b
	clearContent ()V a
	createTag ()Lnet/minecraft/nbt/ListTag; g
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	isEmpty ()Z c
	moveItemToEmptySlots (Lnet/minecraft/world/item/ItemStack;)V c
	moveItemToOccupiedSlotsWithSameType (Lnet/minecraft/world/item/ItemStack;)V d
	moveItemsBetweenStacks (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	removeAllItems ()Ljava/util/List; f
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	removeItemType (Lnet/minecraft/world/item/Item;I)Lnet/minecraft/world/item/ItemStack; a
	removeListener (Lnet/minecraft/world/ContainerListener;)V b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/SimpleMenuProvider bap
	menuConstructor b
	title a
	getDisplayName ()Lnet/minecraft/network/chat/Component; C_
net/minecraft/world/WorldlyContainer baq
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
net/minecraft/world/WorldlyContainerHolder bar
	getContainer (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/WorldlyContainer; a
net/minecraft/world/damagesource/BadRespawnPointDamage bas
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
net/minecraft/world/damagesource/CombatEntry bat
	damage c
	fallDistance f
	health d
	location e
	source a
	time b
	getAttacker ()Lnet/minecraft/world/entity/Entity; i
	getAttackerName ()Lnet/minecraft/network/chat/Component; h
	getDamage ()F c
	getFallDistance ()F j
	getHealthAfterDamage ()F e
	getHealthBeforeDamage ()F d
	getLocation ()Ljava/lang/String; g
	getSource ()Lnet/minecraft/world/damagesource/DamageSource; a
	getTime ()I b
	isCombatRelated ()Z f
net/minecraft/world/damagesource/CombatRules bau
	ARMOR_PROTECTION_DIVIDER b
	BASE_ARMOR_TOUGHNESS c
	MAX_ARMOR a
	MIN_ARMOR_RATIO d
	NUM_ARMOR_ITEMS e
	getDamageAfterAbsorb (FFF)F a
	getDamageAfterMagicAbsorb (FF)F a
net/minecraft/world/damagesource/CombatTracker bav
	RESET_COMBAT_STATUS_TIME b
	RESET_DAMAGE_STATUS_TIME a
	combatEndTime g
	combatStartTime f
	entries c
	inCombat h
	lastDamageTime e
	mob d
	nextLocation j
	takingDamage i
	getCombatDuration ()I f
	getDeathMessage ()Lnet/minecraft/network/chat/Component; b
	getFallLocation (Lnet/minecraft/world/damagesource/CombatEntry;)Ljava/lang/String; a
	getKiller ()Lnet/minecraft/world/entity/LivingEntity; c
	getKillerId ()I j
	getLastEntry ()Lnet/minecraft/world/damagesource/CombatEntry; i
	getMob ()Lnet/minecraft/world/entity/LivingEntity; h
	getMostSignificantFall ()Lnet/minecraft/world/damagesource/CombatEntry; k
	isInCombat ()Z e
	isTakingDamage ()Z d
	prepareForDamage ()V a
	recheckStatus ()V g
	recordDamage (Lnet/minecraft/world/damagesource/DamageSource;FF)V a
	resetPreparedStatus ()V l
net/minecraft/world/damagesource/DamageSource baw
	ANVIL q
	CACTUS j
	CRAMMING g
	DRAGON_BREATH s
	DROWN h
	DRY_OUT t
	FALL k
	FALLING_BLOCK r
	FALLING_STALACTITE w
	FLY_INTO_WALL l
	FREEZE v
	GENERIC n
	HOT_FLOOR e
	IN_FIRE a
	IN_WALL f
	LAVA d
	LIGHTNING_BOLT b
	MAGIC o
	ON_FIRE c
	OUT_OF_WORLD m
	STALAGMITE x
	STARVE i
	SWEET_BERRY_BUSH u
	WITHER p
	bypassArmor A
	bypassEnchantments D
	bypassInvul B
	bypassMagic C
	damageHelmet z
	exhaustion E
	isExplosion J
	isFall K
	isFireSource F
	isMagic I
	isProjectile G
	msgId y
	noAggro L
	scalesWithDifficulty H
	arrow (Lnet/minecraft/world/entity/projectile/AbstractArrow;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	badRespawnPointExplosion ()Lnet/minecraft/world/damagesource/DamageSource; a
	bypassArmor ()Lnet/minecraft/world/damagesource/DamageSource; n
	bypassEnchantments ()Lnet/minecraft/world/damagesource/DamageSource; r
	bypassInvul ()Lnet/minecraft/world/damagesource/DamageSource; p
	bypassMagic ()Lnet/minecraft/world/damagesource/DamageSource; q
	damageHelmet ()Lnet/minecraft/world/damagesource/DamageSource; o
	explosion (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; d
	explosion (Lnet/minecraft/world/level/Explosion;)Lnet/minecraft/world/damagesource/DamageSource; a
	fireball (Lnet/minecraft/world/entity/projectile/Fireball;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	fireworks (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	getDirectEntity ()Lnet/minecraft/world/entity/Entity; l
	getEntity ()Lnet/minecraft/world/entity/Entity; m
	getFoodExhaustion ()F h
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
	getMsgId ()Ljava/lang/String; w
	getSourcePosition ()Lnet/minecraft/world/phys/Vec3; E
	indirectMagic (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; c
	indirectMobAttack (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; a
	isBypassArmor ()Z f
	isBypassEnchantments ()Z k
	isBypassInvul ()Z i
	isBypassMagic ()Z j
	isCreativePlayer ()Z D
	isDamageHelmet ()Z g
	isExplosion ()Z d
	isFall ()Z B
	isFire ()Z u
	isMagic ()Z z
	isNoAggro ()Z v
	isProjectile ()Z b
	mobAttack (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; c
	playerAttack (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/damagesource/DamageSource; a
	scalesWithDifficulty ()Z y
	setExplosion ()Lnet/minecraft/world/damagesource/DamageSource; e
	setIsFall ()Lnet/minecraft/world/damagesource/DamageSource; C
	setIsFire ()Lnet/minecraft/world/damagesource/DamageSource; s
	setMagic ()Lnet/minecraft/world/damagesource/DamageSource; A
	setNoAggro ()Lnet/minecraft/world/damagesource/DamageSource; t
	setProjectile ()Lnet/minecraft/world/damagesource/DamageSource; c
	setScalesWithDifficulty ()Lnet/minecraft/world/damagesource/DamageSource; x
	sonicBoom (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; b
	sting (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; b
	thorns (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	thrown (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; b
	trident (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	witherSkull (Lnet/minecraft/world/entity/projectile/WitherSkull;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
net/minecraft/world/damagesource/EntityDamageSource bax
	entity z
	isThorns A
	getEntity ()Lnet/minecraft/world/entity/Entity; m
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
	getSourcePosition ()Lnet/minecraft/world/phys/Vec3; E
	isThorns ()Z G
	scalesWithDifficulty ()Z y
	setThorns ()Lnet/minecraft/world/damagesource/EntityDamageSource; F
net/minecraft/world/damagesource/IndirectEntityDamageSource bay
	owner A
	getDirectEntity ()Lnet/minecraft/world/entity/Entity; l
	getEntity ()Lnet/minecraft/world/entity/Entity; m
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
net/minecraft/world/effect/AbsoptionMobEffect bba
	addAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V b
	removeAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V a
net/minecraft/world/effect/AttackDamageMobEffect bbb
	multiplier a
	getAttributeModifierValue (ILnet/minecraft/world/entity/ai/attributes/AttributeModifier;)D a
net/minecraft/world/effect/HealthBoostMobEffect bbc
	removeAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V a
net/minecraft/world/effect/InstantenousMobEffect bbd
	isDurationEffectTick (II)Z a
	isInstantenous ()Z a
net/minecraft/world/effect/MobEffect bbe
	attributeModifiers a
	category b
	color c
	descriptionId d
	factorDataFactory e
	addAttributeModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/lang/String;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Lnet/minecraft/world/effect/MobEffect; a
	addAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V b
	applyEffectTick (Lnet/minecraft/world/entity/LivingEntity;I)V a
	applyInstantenousEffect (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/LivingEntity;ID)V a
	byId (I)Lnet/minecraft/world/effect/MobEffect; a
	createFactorData ()Ljava/util/Optional; b
	getAttributeModifierValue (ILnet/minecraft/world/entity/ai/attributes/AttributeModifier;)D a
	getAttributeModifiers ()Ljava/util/Map; h
	getCategory ()Lnet/minecraft/world/effect/MobEffectCategory; f
	getColor ()I g
	getDescriptionId ()Ljava/lang/String; d
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	getId (Lnet/minecraft/world/effect/MobEffect;)I a
	getIdFromNullable (Lnet/minecraft/world/effect/MobEffect;)I b
	getOrCreateDescriptionId ()Ljava/lang/String; c
	isBeneficial ()Z i
	isDurationEffectTick (II)Z a
	isInstantenous ()Z a
	removeAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V a
	setFactorDataFactory (Ljava/util/function/Supplier;)Lnet/minecraft/world/effect/MobEffect; a
net/minecraft/world/effect/MobEffectCategory bbf
	$VALUES e
	BENEFICIAL a
	HARMFUL b
	NEUTRAL c
	tooltipFormatting d
	$values ()[Lnet/minecraft/world/effect/MobEffectCategory; b
	getTooltipFormatting ()Lnet/minecraft/ChatFormatting; a
net/minecraft/world/effect/MobEffectInstance bbg
	LOGGER a
	ambient e
	amplifier d
	duration c
	effect b
	factorData j
	hiddenEffect i
	noCounter f
	showIcon h
	visible g
	applyEffect (Lnet/minecraft/world/entity/LivingEntity;)V a
	compareTo (Lnet/minecraft/world/effect/MobEffectInstance;)I c
	getAmplifier ()I d
	getDescriptionId ()Ljava/lang/String; h
	getDuration ()I c
	getEffect ()Lnet/minecraft/world/effect/MobEffect; b
	getFactorData ()Ljava/util/Optional; a
	isAmbient ()Z e
	isNoCounter ()Z i
	isVisible ()Z f
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/effect/MobEffectInstance; b
	loadSpecifiedEffect (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/effect/MobEffectInstance; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setDetailsFrom (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	setNoCounter (Z)V a
	showIcon ()Z g
	tick (Lnet/minecraft/world/entity/LivingEntity;Ljava/lang/Runnable;)Z a
	tickDownDuration ()I j
	update (Lnet/minecraft/world/effect/MobEffectInstance;)Z b
	writeDetailsTo (Lnet/minecraft/nbt/CompoundTag;)V c
net/minecraft/world/effect/MobEffectInstance$FactorData bbg$a
	CODEC a
	effectChangedTimestamp f
	factorCurrent e
	factorPreviousFrame g
	factorStart c
	factorTarget d
	hadEffectLastTick h
	paddingDuration b
	getFactor (Lnet/minecraft/world/entity/LivingEntity;F)F a
	update (Lnet/minecraft/world/effect/MobEffectInstance;)V a
net/minecraft/world/effect/MobEffectUtil bbh
	addEffectToPlayersAround (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;DLnet/minecraft/world/effect/MobEffectInstance;I)Ljava/util/List; a
	formatDuration (Lnet/minecraft/world/effect/MobEffectInstance;F)Ljava/lang/String; a
	getDigSpeedAmplification (Lnet/minecraft/world/entity/LivingEntity;)I b
	hasDigSpeed (Lnet/minecraft/world/entity/LivingEntity;)Z a
	hasWaterBreathing (Lnet/minecraft/world/entity/LivingEntity;)Z c
net/minecraft/world/effect/MobEffects bbi
	ABSORPTION v
	BAD_OMEN E
	BLINDNESS o
	CONDUIT_POWER C
	CONFUSION i
	DAMAGE_BOOST e
	DAMAGE_RESISTANCE k
	DARKNESS G
	DARKNESS_EFFECT_FACTOR_PADDING_DURATION_TICKS H
	DIG_SLOWDOWN d
	DIG_SPEED c
	DOLPHINS_GRACE D
	FIRE_RESISTANCE l
	GLOWING x
	HARM g
	HEAL f
	HEALTH_BOOST u
	HERO_OF_THE_VILLAGE F
	HUNGER q
	INVISIBILITY n
	JUMP h
	LEVITATION y
	LUCK z
	MOVEMENT_SLOWDOWN b
	MOVEMENT_SPEED a
	NIGHT_VISION p
	POISON s
	REGENERATION j
	SATURATION w
	SLOW_FALLING B
	UNLUCK A
	WATER_BREATHING m
	WEAKNESS r
	WITHER t
	register (ILjava/lang/String;Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffect; a
net/minecraft/world/entity/AgeableMob bbk
	BABY_START_AGE b
	DATA_BABY_ID bX
	FORCED_AGE_PARTICLE_TICKS bY
	age c
	forcedAge d
	forcedAgeTimer e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V n
	ageUp (I)V a_
	ageUp (IZ)V a
	aiStep ()V w_
	canBreed ()Z g
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAge ()I j
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getSpeedUpSecondsWhenFeeding (I)I c
	isBaby ()Z y_
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setAge (I)V b_
	setBaby (Z)V a
net/minecraft/world/entity/AgeableMob$AgeableMobGroupData bbk$a
	babySpawnChance c
	groupSize a
	shouldSpawnBaby b
	getBabySpawnChance ()F d
	getGroupSize ()I a
	increaseGroupSizeByOne ()V b
	isShouldSpawnBaby ()Z c
net/minecraft/world/entity/AnimationState bbl
	STOPPED a
	accumulatedTime c
	lastTime b
	getAccumulatedTime ()J b
	ifStarted (Ljava/util/function/Consumer;)V a
	isStarted ()Z c
	start (I)V a
	startIfStopped (I)V b
	stop ()V a
	updateTime (FF)V a
net/minecraft/world/entity/AreaEffectCloud bbm
	DATA_COLOR e
	DATA_PARTICLE ao
	DATA_RADIUS d
	DATA_WAITING f
	LOGGER b
	MAX_RADIUS ap
	TIME_BETWEEN_APPLICATIONS c
	duration at
	durationOnUse ax
	effects ar
	fixedColor aw
	owner aA
	ownerUUID aB
	potion aq
	radiusOnUse ay
	radiusPerTick az
	reapplicationDelay av
	victims as
	waitTime au
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getColor ()I i
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDuration ()I n
	getDurationOnUse ()I r
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; t
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; j
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; c_
	getPotion ()Lnet/minecraft/world/item/alchemy/Potion; u
	getRadius ()F h
	getRadiusOnUse ()F o
	getRadiusPerTick ()F q
	getWaitTime ()I s
	isWaiting ()Z l
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshDimensions ()V z_
	setDuration (I)V b
	setDurationOnUse (I)V c
	setFixedColor (I)V a
	setOwner (Lnet/minecraft/world/entity/LivingEntity;)V a
	setParticle (Lnet/minecraft/core/particles/ParticleOptions;)V a
	setPotion (Lnet/minecraft/world/item/alchemy/Potion;)V a
	setRadius (F)V a
	setRadiusOnUse (F)V b
	setRadiusPerTick (F)V c
	setWaitTime (I)V d
	setWaiting (Z)V a
	tick ()V k
	updateColor ()V w
net/minecraft/world/entity/Entity bbn
	BASE_TICKS_REQUIRED_TO_FREEZE n
	BOARDING_COOLDOWN i
	BREATHING_DISTANCE_BELOW_EYES m
	DATA_AIR_SUPPLY_ID aL
	DATA_CUSTOM_NAME aM
	DATA_CUSTOM_NAME_VISIBLE aN
	DATA_NO_GRAVITY aP
	DATA_POSE ad
	DATA_SHARED_FLAGS_ID Z
	DATA_SILENT aO
	DATA_TICKS_FROZEN aQ
	DEFAULT_BB_HEIGHT G
	DEFAULT_BB_WIDTH F
	DELTA_AFFECTED_BY_BLOCKS_BELOW l
	EMPTY_LIST d
	ENTITY_COUNTER c
	FLAG_FALL_FLYING ac
	FLAG_GLOWING ab
	FLAG_INVISIBLE aK
	FLAG_ONFIRE aa
	FLAG_SHIFT_KEY_DOWN aH
	FLAG_SPRINTING aI
	FLAG_SWIMMING aJ
	FREEZE_HURT_FREQUENCY o
	ID_TAG g
	INITIAL_AABB e
	LAVA_FAST_FLOW_SCALE ap
	LAVA_SLOW_FLOW_SCALE aq
	LOGGER b
	MAX_ENTITY_TAG_COUNT k
	PASSENGERS_TAG h
	TOTAL_AIR_SUPPLY j
	UUID_TAG p
	WATER_FLOW_SCALE ao
	bb aC
	blockPosition ax
	blocksBuilding q
	boardingCooldown r
	chunkPosition ay
	crystalSoundIntensity bb
	deltaMovement az
	dimensions aZ
	entityData Y
	eyeHeight ba
	fallDistance L
	feetBlockState be
	firstTick X
	fluidHeight U
	fluidOnEyes aG
	flyDist K
	hasGlowingTag aV
	hasImpulse af
	hasVisualFire bd
	horizontalCollision z
	hurtMarked D
	id at
	invulnerable aU
	invulnerableTime W
	isInPowderSnow al
	isInsidePortal ag
	lastCrystalSoundPlayTick bc
	level s
	levelCallback aR
	maxUpStep P
	minorHorizontalCollision C
	moveDist J
	nextStep aE
	noCulling ae
	noPhysics Q
	onGround y
	packetPositionCodec aS
	passengers au
	pistonDeltas aX
	pistonDeltasGameTime aY
	portalCooldown aT
	portalEntrancePos ai
	portalTime ah
	position aw
	random R
	remainingFireTicks aF
	removalReason aD
	stringUUID ak
	stuckSpeedMultiplier E
	tags aW
	tickCount S
	type as
	uuid aj
	vehicle av
	verticalCollision A
	verticalCollisionBelow B
	viewScale ar
	walkDist I
	walkDistO H
	wasEyeInWater V
	wasInPowderSnow am
	wasOnFire an
	wasTouchingWater T
	xOld M
	xRot aB
	xRotO x
	xo t
	yOld N
	yRot aA
	yRotO w
	yo u
	zOld O
	zo v
	absMoveTo (DDD)V g
	absMoveTo (DDDFF)V a
	acceptsFailure ()Z j_
	acceptsSuccess ()Z i_
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addPassenger (Lnet/minecraft/world/entity/Entity;)V m
	addTag (Ljava/lang/String;)Z a
	animateHurt ()V bD
	applyPistonMovementRestriction (Lnet/minecraft/core/Direction$Axis;D)D a
	asChatSender ()Lnet/minecraft/network/chat/ChatSender; aW
	awardKillScore (Lnet/minecraft/world/entity/Entity;ILnet/minecraft/world/damagesource/DamageSource;)V a
	baseTick ()V an
	blockPosition ()Lnet/minecraft/core/BlockPos; da
	broadcastToPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z a
	calculateUpVector (FF)Lnet/minecraft/world/phys/Vec3; c
	calculateViewVector (FF)Lnet/minecraft/world/phys/Vec3; b
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z o
	canBeCollidedWith ()Z bq
	canChangeDimensions ()Z ck
	canCollideWith (Lnet/minecraft/world/entity/Entity;)Z h
	canEnterPose (Lnet/minecraft/world/entity/Pose;)Z d
	canFreeze ()Z do
	canRide (Lnet/minecraft/world/entity/Entity;)Z l
	canSpawnSprintParticle ()Z bd
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	checkDespawn ()V dm
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkInsideBlocks ()V aJ
	checkOutOfWorld ()V ao
	chunkPosition ()Lnet/minecraft/world/level/ChunkPos; dc
	clearFire ()V au
	closerThan (Lnet/minecraft/world/entity/Entity;D)Z a
	closerThan (Lnet/minecraft/world/entity/Entity;DD)Z a
	collide (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; g
	collideBoundingBox (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/Level;Ljava/util/List;)Lnet/minecraft/world/phys/Vec3; a
	collideWithShapes (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/List;)Lnet/minecraft/world/phys/Vec3; a
	copyPosition (Lnet/minecraft/world/entity/Entity;)V s
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; cT
	createHoverEvent ()Lnet/minecraft/network/chat/HoverEvent; cx
	dampensVibrations ()Z aP
	defineSynchedData ()V a_
	discard ()V ah
	dismountTo (DDD)V a
	displayFireAnimation ()Z cn
	distanceTo (Lnet/minecraft/world/entity/Entity;)F e
	distanceToSqr (DDD)D h
	distanceToSqr (Lnet/minecraft/world/entity/Entity;)D f
	distanceToSqr (Lnet/minecraft/world/phys/Vec3;)D e
	doEnchantDamageEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V a
	doWaterSplashEffect ()V ba
	ejectPassengers ()V bv
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	findDimensionEntryPoint (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/portal/PortalInfo; a
	fireImmune ()Z aQ
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;)V a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getAirSupply ()I ca
	getAllSlots ()Ljava/lang/Iterable; bG
	getArmorSlots ()Ljava/lang/Iterable; bF
	getBbHeight ()F cX
	getBbWidth ()F cW
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getBlockJumpFactor ()F aC
	getBlockPosBelowThatAffectsMyMovement ()Lnet/minecraft/core/BlockPos; aE
	getBlockSpeedFactor ()F aD
	getBlockStateOn ()Lnet/minecraft/world/level/block/state/BlockState; bc
	getBlockStateOnLegacy ()Lnet/minecraft/world/level/block/state/BlockState; bb
	getBlockX ()I de
	getBlockY ()I dg
	getBlockZ ()I dk
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; cy
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; cz
	getBoundingBoxForPose (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/phys/AABB; e
	getCollisionHorizontalEscapeVector (DDF)Lnet/minecraft/world/phys/Vec3; a
	getCommandSenderWorld ()Lnet/minecraft/world/level/Level; cC
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cG
	getCustomName ()Lnet/minecraft/network/chat/Component; Z
	getDeltaMovement ()Lnet/minecraft/world/phys/Vec3; dd
	getDimensionChangingDelay ()I bC
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDirection ()Lnet/minecraft/core/Direction; cv
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; C_
	getEncodeId ()Ljava/lang/String; bn
	getEntityData ()Lnet/minecraft/network/syncher/SynchedEntityData; ai
	getExitPortal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/border/WorldBorder;)Ljava/util/Optional; a
	getEyeHeight ()F cA
	getEyeHeight (Lnet/minecraft/world/entity/Pose;)F f
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getEyePosition ()Lnet/minecraft/world/phys/Vec3; bj
	getEyePosition (F)Lnet/minecraft/world/phys/Vec3; i
	getEyeY ()D dj
	getFeetBlockState ()Lnet/minecraft/world/level/block/state/BlockState; db
	getFireImmuneTicks ()I cS
	getFirstPassenger ()Lnet/minecraft/world/entity/Entity; cJ
	getFluidHeight (Lnet/minecraft/tags/TagKey;)D b
	getFluidJumpThreshold ()D cV
	getForward ()Lnet/minecraft/world/phys/Vec3; bA
	getHandHoldingItemAngle (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/phys/Vec3; a
	getHandSlots ()Ljava/lang/Iterable; bE
	getId ()I ae
	getIndirectPassengers ()Ljava/lang/Iterable; cM
	getIndirectPassengersStream ()Ljava/util/stream/Stream; o
	getInputVector (Lnet/minecraft/world/phys/Vec3;FF)Lnet/minecraft/world/phys/Vec3; a
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cB
	getLevel ()Lnet/minecraft/world/level/Level; W
	getLightLevelDependentMagicValue ()F bg
	getLightProbePosition (F)Lnet/minecraft/world/phys/Vec3; j
	getLookAngle ()Lnet/minecraft/world/phys/Vec3; by
	getMaxAirSupply ()I bZ
	getMaxFallDistance ()I cl
	getMotionDirection ()Lnet/minecraft/core/Direction; cw
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aO
	getMyRidingOffset ()D bs
	getName ()Lnet/minecraft/network/chat/Component; X
	getOnPos ()Lnet/minecraft/core/BlockPos; aB
	getOnPos (F)Lnet/minecraft/core/BlockPos; a
	getOnPosLegacy ()Lnet/minecraft/core/BlockPos; aA
	getPassengers ()Ljava/util/List; cI
	getPassengersAndSelf ()Ljava/util/stream/Stream; cL
	getPassengersRidingOffset ()D bt
	getPercentFrozen ()F cc
	getPermissionLevel ()I B
	getPickRadius ()F bx
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dn
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; c_
	getPortalWaitTime ()I ar
	getPose ()Lnet/minecraft/world/entity/Pose; ak
	getPosition (F)Lnet/minecraft/world/phys/Vec3; k
	getPositionCodec ()Lnet/minecraft/network/protocol/game/VecDeltaCodec; ac
	getRandomX (D)D d
	getRandomY ()D di
	getRandomZ (D)D g
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	getRemainingFireTicks ()I at
	getRemovalReason ()Lnet/minecraft/world/entity/Entity$RemovalReason; du
	getRootVehicle ()Lnet/minecraft/world/entity/Entity; cO
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; n
	getRotationVector ()Lnet/minecraft/world/phys/Vec2; bz
	getScoreboardName ()Ljava/lang/String; cq
	getSelfAndPassengers ()Ljava/util/stream/Stream; cK
	getServer ()Lnet/minecraft/server/MinecraftServer; cD
	getSharedFlag (I)Z h
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cR
	getStringUUID ()Ljava/lang/String; cp
	getSwimHighSpeedSplashSound ()Lnet/minecraft/sounds/SoundEvent; aI
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aG
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aH
	getTags ()Ljava/util/Set; af
	getTeam ()Lnet/minecraft/world/scores/Team; bY
	getTeamColor ()I aa
	getTicksFrozen ()I cb
	getTicksRequiredToFreeze ()I ce
	getType ()Lnet/minecraft/world/entity/EntityType; ad
	getTypeName ()Lnet/minecraft/network/chat/Component; cf
	getUUID ()Ljava/util/UUID; co
	getUpVector (F)Lnet/minecraft/world/phys/Vec3; h
	getVehicle ()Lnet/minecraft/world/entity/Entity; cQ
	getViewScale ()D cs
	getViewVector (F)Lnet/minecraft/world/phys/Vec3; e
	getViewXRot (F)F f
	getViewYRot (F)F g
	getVisualRotationYInDegrees ()F dr
	getX ()D df
	getX (D)D c
	getXRot ()F ds
	getY ()D dh
	getY (D)D e
	getYHeadRot ()F cg
	getYRot ()F dq
	getZ ()D dl
	getZ (D)D f
	handleEntityEvent (B)V a
	handleInsidePortal (Lnet/minecraft/core/BlockPos;)V d
	handleNetherPortal ()V bB
	hasControllingPassenger ()Z cH
	hasCustomName ()Z Y
	hasExactlyOnePlayerPassenger ()Z cN
	hasGlowingTag ()Z bV
	hasIndirectPassenger (Lnet/minecraft/world/entity/Entity;)Z w
	hasPassenger (Ljava/util/function/Predicate;)Z a
	hasPassenger (Lnet/minecraft/world/entity/Entity;)Z u
	hasPermissions (I)Z l
	hasPose (Lnet/minecraft/world/entity/Pose;)Z c
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	ignoreExplosion ()Z cE
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	is (Lnet/minecraft/world/entity/Entity;)Z q
	isAlive ()Z bo
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	isAlliedTo (Lnet/minecraft/world/scores/Team;)Z a
	isAlwaysTicking ()Z dx
	isAttackable ()Z ch
	isColliding (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isControlledByLocalInstance ()Z cP
	isCrouching ()Z bQ
	isCurrentlyGlowing ()Z bW
	isCustomNameVisible ()Z ct
	isDescending ()Z bP
	isDiscrete ()Z bO
	isEyeInFluid (Lnet/minecraft/tags/TagKey;)Z a
	isFlapping ()Z aL
	isFree (DDD)Z f
	isFree (Lnet/minecraft/world/phys/AABB;)Z b
	isFreezing ()Z dp
	isFullyFrozen ()Z cd
	isHorizontalCollisionMinor (Lnet/minecraft/world/phys/Vec3;)Z b
	isIgnoringBlockTriggers ()Z cm
	isInBubbleColumn ()Z l
	isInLava ()Z bf
	isInRain ()Z j
	isInWall ()Z bp
	isInWater ()Z aR
	isInWaterOrBubble ()Z aU
	isInWaterOrRain ()Z aS
	isInWaterRainOrBubble ()Z aT
	isInvisible ()Z bX
	isInvisibleTo (Lnet/minecraft/world/entity/player/Player;)Z c
	isInvulnerable ()Z ci
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isNoGravity ()Z aN
	isOnFire ()Z bH
	isOnGround ()Z aw
	isOnPortalCooldown ()Z aq
	isPassenger ()Z bI
	isPassengerOfSameVehicle (Lnet/minecraft/world/entity/Entity;)Z v
	isPickable ()Z bk
	isPushable ()Z bl
	isPushedByFluid ()Z cr
	isRemoved ()Z dt
	isShiftKeyDown ()Z bL
	isSilent ()Z aM
	isSpectator ()Z B_
	isSprinting ()Z bR
	isSteppingCarefully ()Z bM
	isSuppressingBounce ()Z bN
	isSwimming ()Z bS
	isUnderWater ()Z aV
	isVehicle ()Z bJ
	isVisuallyCrawling ()Z bU
	isVisuallySwimming ()Z bT
	kill ()V ag
	lavaHurt ()V as
	lerpHeadTo (FI)V a
	lerpMotion (DDD)V k
	lerpTo (DDDFFIZ)V a
	limitPistonMovement (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; c
	load (Lnet/minecraft/nbt/CompoundTag;)V g
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	makeBoundingBox ()Lnet/minecraft/world/phys/AABB; al
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	markHurt ()V bi
	mayInteract (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	maybeBackOffFromEdge (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/MoverType;)Lnet/minecraft/world/phys/Vec3; a
	mirror (Lnet/minecraft/world/level/block/Mirror;)F a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	moveRelative (FLnet/minecraft/world/phys/Vec3;)V a
	moveTo (DDD)V c
	moveTo (DDDFF)V b
	moveTo (Lnet/minecraft/core/BlockPos;FF)V a
	moveTo (Lnet/minecraft/world/phys/Vec3;)V d
	moveTowardsClosestSpace (DDD)V l
	newDoubleList ([D)Lnet/minecraft/nbt/ListTag; a
	newFloatList ([F)Lnet/minecraft/nbt/ListTag; a
	nextStep ()F aF
	onAboveBubbleCol (Z)V k
	onClientRemoval ()V aj
	onFlap ()V aK
	onInsideBlock (Lnet/minecraft/world/level/block/state/BlockState;)V a
	onInsideBubbleColumn (Z)V l
	onPassengerTurned (Lnet/minecraft/world/entity/Entity;)V j
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onlyOpCanSetNbt ()Z cF
	outOfWorld ()V av
	pick (DFZ)Lnet/minecraft/world/phys/HitResult; a
	playAmethystStepSound (Lnet/minecraft/world/level/block/state/BlockState;)V b
	playEntityOnFireExtinguishedSound ()V ay
	playSound (Lnet/minecraft/sounds/SoundEvent;)V a
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	playSwimSound (F)V d
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	position ()Lnet/minecraft/world/phys/Vec3; cY
	positionRider (Lnet/minecraft/world/entity/Entity;)V i
	positionRider (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V a
	processFlappingMovement ()V az
	processPortalCooldown ()V H
	push (DDD)V i
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reapplyPosition ()V am
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	refreshDimensions ()V z_
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	removeAction (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; c
	removeAfterChangingDimensions ()V cj
	removePassenger (Lnet/minecraft/world/entity/Entity;)V n
	removeTag (Ljava/lang/String;)Z b
	removeVehicle ()V bw
	repositionEntityAfterLoad ()Z bm
	resetFallDistance ()V m
	restoreFrom (Lnet/minecraft/world/entity/Entity;)V t
	rideTick ()V br
	rideableUnderWater ()Z bK
	rotate (Lnet/minecraft/world/level/block/Rotation;)F a
	save (Lnet/minecraft/nbt/CompoundTag;)Z e
	saveAsPassenger (Lnet/minecraft/nbt/CompoundTag;)Z d
	saveWithoutId (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; f
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	setAirSupply (I)V i
	setBoundingBox (Lnet/minecraft/world/phys/AABB;)V a
	setCustomName (Lnet/minecraft/network/chat/Component;)V b
	setCustomNameVisible (Z)V n
	setDeltaMovement (DDD)V n
	setDeltaMovement (Lnet/minecraft/world/phys/Vec3;)V f
	setGlowingTag (Z)V i
	setId (I)V e
	setInvisible (Z)V j
	setInvulnerable (Z)V m
	setIsInPowderSnow (Z)V o
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setLevelCallback (Lnet/minecraft/world/level/entity/EntityInLevelCallback;)V a
	setNoGravity (Z)V e
	setOldPosAndRot ()V bh
	setOnGround (Z)V c
	setPortalCooldown ()V ap
	setPos (DDD)V e
	setPos (Lnet/minecraft/world/phys/Vec3;)V a_
	setPosRaw (DDD)V o
	setPose (Lnet/minecraft/world/entity/Pose;)V b
	setRemainingFireTicks (I)V g
	setRemoved (Lnet/minecraft/world/entity/Entity$RemovalReason;)V b
	setRot (FF)V a
	setSecondsOnFire (I)V f
	setSharedFlag (IZ)V b
	setSharedFlagOnFire (Z)V a_
	setShiftKeyDown (Z)V f
	setSilent (Z)V d
	setSprinting (Z)V g
	setSwimming (Z)V h
	setTicksFrozen (I)V j
	setUUID (Ljava/util/UUID;)V a_
	setViewScale (D)V b
	setXRot (F)V p
	setYBodyRot (F)V m
	setYHeadRot (F)V l
	setYRot (F)V o
	shouldBeSaved ()Z dw
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
	shouldInformAdmins ()Z G_
	shouldRender (DDD)Z j
	shouldRenderAtSqrDistance (D)Z a
	shouldShowName ()Z cu
	showVehicleHealth ()Z bu
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z r
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/item/ItemEntity; b
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnAtLocation (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnAtLocation (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnSprintParticle ()V be
	startRiding (Lnet/minecraft/world/entity/Entity;)Z k
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
	stopRiding ()V p
	stopSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V d
	syncPacketPositionCodec (DDD)V d
	teleportTo (DDD)V b
	teleportToWithTicket (DDD)V m
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V k
	touchingUnloadedChunk ()Z cU
	trackingPosition ()Lnet/minecraft/world/phys/Vec3; cZ
	tryCheckInsideBlocks ()V ax
	turn (DD)V a
	unRide ()V ab
	unsetRemoved ()V dv
	updateDynamicGameEventListener (Ljava/util/function/BiConsumer;)V a
	updateFluidHeightAndDoFluidPushing (Lnet/minecraft/tags/TagKey;D)Z a
	updateFluidOnEyes ()V n
	updateInWaterStateAndDoFluidPushing ()Z aY
	updateInWaterStateAndDoWaterCurrentPushing ()V aZ
	updateSwimming ()V aX
	wasKilled (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/Entity$MoveFunction bbn$a
net/minecraft/world/entity/Entity$MovementEmission bbn$b
	$VALUES g
	ALL d
	EVENTS c
	NONE a
	SOUNDS b
	events f
	sounds e
	$values ()[Lnet/minecraft/world/entity/Entity$MovementEmission; d
	emitsAnything ()Z a
	emitsEvents ()Z b
	emitsSounds ()Z c
net/minecraft/world/entity/Entity$RemovalReason bbn$c
	$VALUES h
	CHANGED_DIMENSION e
	DISCARDED b
	KILLED a
	UNLOADED_TO_CHUNK c
	UNLOADED_WITH_PLAYER d
	destroy f
	save g
	$values ()[Lnet/minecraft/world/entity/Entity$RemovalReason; c
	shouldDestroy ()Z a
	shouldSave ()Z b
net/minecraft/world/entity/EntityDimensions bbo
	fixed c
	height b
	width a
	fixed (FF)Lnet/minecraft/world/entity/EntityDimensions; c
	makeBoundingBox (DDD)Lnet/minecraft/world/phys/AABB; a
	makeBoundingBox (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; a
	scalable (FF)Lnet/minecraft/world/entity/EntityDimensions; b
	scale (F)Lnet/minecraft/world/entity/EntityDimensions; a
	scale (FF)Lnet/minecraft/world/entity/EntityDimensions; a
net/minecraft/world/entity/EntityEvent bbp
	ARMORSTAND_WOBBLE F
	ATTACK_BLOCKED C
	BAD_OMEN_TRIGGERED Q
	BURNED K
	CANCEL_SHAKE_WETNESS ad
	CHEST_BREAK X
	DEATH c
	DOLPHIN_LOOKING_FOR_TREASURE L
	DROWNED J
	EAT_GRASS j
	END_RAM ag
	FEET_BREAK Z
	FIREWORKS_EXPLODE q
	FISHING_ROD_REEL_IN E
	FOX_EAT S
	FROZEN ae
	FULL_DEBUG_INFO w
	GUARDIAN_ATTACK_SOUND u
	HEAD_BREAK W
	HONEY_JUMP ab
	HONEY_SLIDE aa
	HURT b
	IN_LOVE_HEARTS r
	JUMP a
	LEGS_BREAK Y
	LOVE_HEARTS l
	MAINHAND_BREAK U
	OFFER_FLOWER k
	OFFHAND_BREAK V
	PERMISSION_LEVEL_ADMINS A
	PERMISSION_LEVEL_ALL x
	PERMISSION_LEVEL_GAMEMASTERS z
	PERMISSION_LEVEL_MODERATORS y
	PERMISSION_LEVEL_OWNERS B
	POKED R
	POOF ah
	RAVAGER_STUNNED M
	REDUCED_DEBUG_INFO v
	SHAKE_WETNESS h
	SHIELD_DISABLED D
	SILVERFISH_MERGE_ANIM t
	SONIC_CHARGE aj
	SQUID_ANIM_SYNCH s
	START_ATTACKING d
	START_RAM af
	STOP_ATTACKING e
	STOP_OFFER_FLOWER H
	SWAP_HANDS ac
	TALISMAN_ACTIVATE I
	TAMING_FAILED f
	TAMING_SUCCEEDED g
	TELEPORT T
	TENDRILS_SHIVER ai
	THORNED G
	TRUSTING_FAILED N
	TRUSTING_SUCCEEDED O
	USE_ITEM_COMPLETE i
	VILLAGER_ANGRY m
	VILLAGER_HAPPY n
	VILLAGER_SWEAT P
	WITCH_HAT_MAGIC o
	ZOMBIE_CONVERTING p
net/minecraft/world/entity/EntitySelector bbq
	CAN_BE_COLLIDED_WITH g
	CONTAINER_ENTITY_SELECTOR d
	ENTITY_NOT_BEING_RIDDEN c
	ENTITY_STILL_ALIVE a
	LIVING_ENTITY_STILL_ALIVE b
	NO_CREATIVE_OR_SPECTATOR e
	NO_SPECTATORS f
	notRiding (Lnet/minecraft/world/entity/Entity;)Ljava/util/function/Predicate; b
	pushableBy (Lnet/minecraft/world/entity/Entity;)Ljava/util/function/Predicate; a
	withinDistance (DDDD)Ljava/util/function/Predicate; a
net/minecraft/world/entity/EntitySelector$MobCanWearArmorEntitySelector bbq$a
	itemStack a
	test (Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/world/entity/EntityType bbr
	ALLAY b
	AREA_EFFECT_CLOUD c
	ARMOR_STAND d
	ARROW e
	AXOLOTL f
	BAT g
	BEE h
	BLAZE i
	BOAT j
	CAT l
	CAVE_SPIDER m
	CHEST_BOAT k
	CHEST_MINECART ad
	CHICKEN n
	COD o
	COMMAND_BLOCK_MINECART ae
	COW p
	CREEPER q
	DOLPHIN r
	DONKEY s
	DRAGON_FIREBALL t
	DROWNED u
	EGG aQ
	ELDER_GUARDIAN v
	ENDERMAN y
	ENDERMITE z
	ENDER_DRAGON x
	ENDER_PEARL aR
	END_CRYSTAL w
	ENTITY_TAG a
	EVOKER A
	EVOKER_FANGS B
	EXPERIENCE_BOTTLE aS
	EXPERIENCE_ORB C
	EYE_OF_ENDER D
	FALLING_BLOCK E
	FIREBALL V
	FIREWORK_ROCKET F
	FISHING_BOBBER bo
	FOX G
	FROG H
	FURNACE_MINECART af
	GHAST I
	GIANT J
	GLOW_ITEM_FRAME K
	GLOW_SQUID L
	GOAT M
	GUARDIAN N
	HOGLIN O
	HOPPER_MINECART ag
	HORSE P
	HUSK Q
	ILLUSIONER R
	IRON_GOLEM S
	ITEM T
	ITEM_FRAME U
	LEASH_KNOT W
	LIGHTNING_BOLT X
	LLAMA Y
	LLAMA_SPIT Z
	LOGGER bp
	MAGIC_HORSE_WIDTH br
	MAGMA_CUBE aa
	MARKER ab
	MINECART ac
	MOOSHROOM ak
	MULE aj
	OCELOT al
	PAINTING am
	PANDA an
	PARROT ao
	PHANTOM ap
	PIG aq
	PIGLIN ar
	PIGLIN_BRUTE as
	PILLAGER at
	PLAYER bn
	POLAR_BEAR au
	POTION aT
	PUFFERFISH aw
	RABBIT ax
	RAVAGER ay
	SALMON az
	SHEEP aA
	SHULKER aB
	SHULKER_BULLET aC
	SILVERFISH aD
	SKELETON aE
	SKELETON_HORSE aF
	SLIME aG
	SMALL_FIREBALL aH
	SNOWBALL aJ
	SNOW_GOLEM aI
	SPAWNER_MINECART ah
	SPECTRAL_ARROW aK
	SPIDER aL
	SQUID aM
	STRAY aN
	STRIDER aO
	TADPOLE aP
	TNT av
	TNT_MINECART ai
	TRADER_LLAMA aV
	TRIDENT aU
	TROPICAL_FISH aW
	TURTLE aX
	VEX aY
	VILLAGER aZ
	VINDICATOR ba
	WANDERING_TRADER bb
	WARDEN bc
	WITCH bd
	WITHER be
	WITHER_SKELETON bf
	WITHER_SKULL bg
	WOLF bh
	ZOGLIN bi
	ZOMBIE bj
	ZOMBIE_HORSE bk
	ZOMBIE_VILLAGER bl
	ZOMBIFIED_PIGLIN bm
	builtInRegistryHolder bq
	canSpawnFarFromPlayer by
	category bt
	clientTrackingRange bz
	description bC
	descriptionId bB
	dimensions bE
	factory bs
	fireImmune bx
	immuneTo bu
	lootTable bD
	serialize bv
	summon bw
	updateInterval bA
	builtInRegistryHolder ()Lnet/minecraft/core/Holder$Reference; q
	by (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; a
	byString (Ljava/lang/String;)Ljava/util/Optional; a
	canSerialize ()Z b
	canSpawnFarFromPlayer ()Z e
	canSummon ()Z c
	clientTrackingRange ()I n
	create (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	create (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; b
	create (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	fireImmune ()Z d
	getAABB (DDD)Lnet/minecraft/world/phys/AABB; a
	getBaseClass ()Ljava/lang/Class; a
	getCategory ()Lnet/minecraft/world/entity/MobCategory; f
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; j
	getDescription ()Lnet/minecraft/network/chat/Component; h
	getDescriptionId ()Ljava/lang/String; g
	getDimensions ()Lnet/minecraft/world/entity/EntityDimensions; m
	getHeight ()F l
	getKey (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/resources/ResourceLocation; a
	getWidth ()F k
	getYOffset (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/phys/AABB;)D a
	is (Lnet/minecraft/tags/TagKey;)Z a
	isBlockDangerous (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	loadEntitiesRecursive (Ljava/util/List;Lnet/minecraft/world/level/Level;)Ljava/util/stream/Stream; a
	loadEntityRecursive (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;Ljava/util/function/Function;)Lnet/minecraft/world/entity/Entity; a
	loadStaticEntity (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; b
	register (Ljava/lang/String;Lnet/minecraft/world/entity/EntityType$Builder;)Lnet/minecraft/world/entity/EntityType; a
	spawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; a
	toShortString ()Ljava/lang/String; i
	trackDeltas ()Z p
	tryCast (Ljava/lang/Object;)Ljava/lang/Object; a
	tryCast (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/Entity; a
	updateCustomEntityTag (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/nbt/CompoundTag;)V a
	updateInterval ()I o
net/minecraft/world/entity/EntityType$Builder bbr$a
	canSpawnFarFromPlayer g
	category b
	clientTrackingRange h
	dimensions j
	factory a
	fireImmune f
	immuneTo c
	serialize d
	summon e
	updateInterval i
	build (Ljava/lang/String;)Lnet/minecraft/world/entity/EntityType; a
	canSpawnFarFromPlayer ()Lnet/minecraft/world/entity/EntityType$Builder; d
	clientTrackingRange (I)Lnet/minecraft/world/entity/EntityType$Builder; a
	createNothing (Lnet/minecraft/world/entity/MobCategory;)Lnet/minecraft/world/entity/EntityType$Builder; a
	fireImmune ()Lnet/minecraft/world/entity/EntityType$Builder; c
	immuneTo ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/entity/EntityType$Builder; a
	noSave ()Lnet/minecraft/world/entity/EntityType$Builder; b
	noSummon ()Lnet/minecraft/world/entity/EntityType$Builder; a
	of (Lnet/minecraft/world/entity/EntityType$EntityFactory;Lnet/minecraft/world/entity/MobCategory;)Lnet/minecraft/world/entity/EntityType$Builder; a
	sized (FF)Lnet/minecraft/world/entity/EntityType$Builder; a
	updateInterval (I)Lnet/minecraft/world/entity/EntityType$Builder; b
net/minecraft/world/entity/EntityType$EntityFactory bbr$b
net/minecraft/world/entity/EquipmentSlot bbs
	$VALUES k
	CHEST e
	FEET c
	HEAD f
	LEGS d
	MAINHAND a
	OFFHAND b
	filterFlag i
	index h
	name j
	type g
	$values ()[Lnet/minecraft/world/entity/EquipmentSlot; e
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/EquipmentSlot; a
	byTypeAndIndex (Lnet/minecraft/world/entity/EquipmentSlot$Type;I)Lnet/minecraft/world/entity/EquipmentSlot; a
	getFilterFlag ()I c
	getIndex ()I b
	getIndex (I)I a
	getName ()Ljava/lang/String; d
	getType ()Lnet/minecraft/world/entity/EquipmentSlot$Type; a
net/minecraft/world/entity/EquipmentSlot$Type bbs$a
	$VALUES c
	ARMOR b
	HAND a
	$values ()[Lnet/minecraft/world/entity/EquipmentSlot$Type; a
net/minecraft/world/entity/ExperienceOrb bbt
	ENTITY_SCAN_PERIOD c
	LIFETIME b
	MAX_FOLLOW_DIST d
	ORB_GROUPS_PER_AREA e
	ORB_MERGE_DISTANCE f
	age ao
	count ar
	followingPlayer as
	health ap
	value aq
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	award (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;I)V a
	canMerge (Lnet/minecraft/world/entity/ExperienceOrb;)Z a
	canMerge (Lnet/minecraft/world/entity/ExperienceOrb;II)Z a
	defineSynchedData ()V a_
	doWaterSplashEffect ()V ba
	durabilityToXp (I)I b
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getExperienceValue (I)I a
	getIcon ()I i
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aO
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cR
	getValue ()I h
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAttackable ()Z ch
	merge (Lnet/minecraft/world/entity/ExperienceOrb;)V b
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	repairPlayerItems (Lnet/minecraft/world/entity/player/Player;I)I a
	scanForEntities ()V j
	setUnderwaterMovement ()V l
	tick ()V k
	tryMergeToExisting (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;I)Z b
	xpToDurability (I)I c
net/minecraft/world/entity/FlyingMob bbu
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	onClimbable ()Z b_
	travel (Lnet/minecraft/world/phys/Vec3;)V g
net/minecraft/world/entity/GlowSquid bbv
	DATA_DARK_TICKS_REMAINING cb
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	checkGlowSquideSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDarkTicksRemaining ()I t
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInkParticle ()Lnet/minecraft/core/particles/ParticleOptions; n
	getSquirtSound ()Lnet/minecraft/sounds/SoundEvent; q
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setDarkTicks (I)V b
net/minecraft/world/entity/HasCustomInventoryScreen bbw
	openCustomInventoryScreen (Lnet/minecraft/world/entity/player/Player;)V b
net/minecraft/world/entity/HumanoidArm bbx
	$VALUES e
	LEFT a
	RIGHT b
	id c
	name d
	$values ()[Lnet/minecraft/world/entity/HumanoidArm; e
	getId ()I a
	getKey ()Ljava/lang/String; b
	getOpposite ()Lnet/minecraft/world/entity/HumanoidArm; d
net/minecraft/world/entity/ItemBasedSteering bby
	MAX_BOOST_TIME e
	MIN_BOOST_TIME d
	boostTime b
	boostTimeAccessor g
	boostTimeTotal c
	boosting a
	entityData f
	hasSaddleAccessor h
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	boost (Lnet/minecraft/util/RandomSource;)Z a
	hasSaddle ()Z b
	onSynced ()V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	setSaddle (Z)V a
net/minecraft/world/entity/ItemSteerable bbz
	boost ()Z a
	getSteeringSpeed ()F b
	travel (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ItemBasedSteering;Lnet/minecraft/world/phys/Vec3;)Z a
	travelWithInput (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/LerpingModel bca
	getModelRotationValues ()Ljava/util/Map; a
net/minecraft/world/entity/LightningBolt bcb
	DAMAGE_RADIUS d
	DETECTION_RADIUS e
	START_LIFE c
	blocksSetOnFire as
	cause aq
	flashes ao
	hitEntities ar
	life f
	seed b
	visualOnly ap
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	clearCopperOnLightningStrike (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V b
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getBlocksSetOnFire ()I i
	getCause ()Lnet/minecraft/server/level/ServerPlayer; h
	getHitEntities ()Ljava/util/stream/Stream; j
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cR
	getStrikePosition ()Lnet/minecraft/core/BlockPos; n
	powerLightningRod ()V l
	randomStepCleaningCopper (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; c
	randomWalkCleaningCopper (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;I)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setCause (Lnet/minecraft/server/level/ServerPlayer;)V b
	setVisualOnly (Z)V a
	shouldRenderAtSqrDistance (D)Z a
	spawnFire (I)V a
	tick ()V k
net/minecraft/world/entity/LivingEntity bcc
	ARMOR_SLOTS ap
	ARMOR_SLOT_OFFSET ar
	DAMAGE_SOURCE_TIMEOUT bF
	DATA_ARROW_COUNT_ID bN
	DATA_EFFECT_AMBIENCE_ID bM
	DATA_EFFECT_COLOR_ID bL
	DATA_HEALTH_ID bK
	DATA_LIVING_ENTITY_FLAGS aB
	DATA_STINGER_COUNT_ID bO
	DEATH_DURATION aw
	DEFAULT_BASE_GRAVITY av
	DEFAULT_EYE_HEIGHT aC
	EQUIPMENT_SLOT_OFFSET aq
	EXTRA_RENDER_CULLING_SIZE_WITH_BIG_HAT aE
	FREE_FALL_EVENTS_PER_ELYTRA_BREAK bI
	HAND_SLOTS ao
	LIVING_ENTITY_FLAG_IS_USING ay
	LIVING_ENTITY_FLAG_OFF_HAND az
	LIVING_ENTITY_FLAG_SPIN_ATTACK aA
	LOGGER b
	MAX_LINE_OF_SIGHT_TEST_RANGE bJ
	MIN_MOVEMENT_DISTANCE au
	PLAYER_HURT_EXPERIENCE_TIME at
	SLEEPING_DIMENSIONS aD
	SLEEPING_POS_ID bP
	SPEED_MODIFIER_POWDER_SNOW_UUID e
	SPEED_MODIFIER_SOUL_SPEED_UUID d
	SPEED_MODIFIER_SPRINTING bE
	SPEED_MODIFIER_SPRINTING_UUID c
	SWING_DURATION as
	TICKS_PER_ELYTRA_FREE_FALL_EVENT bH
	USE_ITEM_INTERVAL ax
	WAIT_TICKS_BEFORE_ITEM_USE_EFFECTS bG
	absorptionAmount cd
	activeEffects bS
	animStep bi
	animStepO bj
	animationPosition aT
	animationSpeed aS
	animationSpeedOld aR
	attackAnim aP
	attackStrengthTicker aQ
	attributes bQ
	autoSpinAttackTicks bC
	brain bD
	combatTracker bR
	dead be
	deathScore bl
	deathTime aN
	discardFriction bV
	effectsDirty bW
	fallFlyTicks bB
	flyingSpeed bb
	hurtDir aM
	hurtDuration aL
	hurtTime aK
	invulnerableDuration aU
	jumping bn
	lastArmorItemStacks bU
	lastClimbablePos cf
	lastDamageSource cg
	lastDamageStamp ch
	lastHandItemStacks bT
	lastHurt bm
	lastHurtByMob bX
	lastHurtByMobTimestamp bY
	lastHurtByPlayer bc
	lastHurtByPlayerTime bd
	lastHurtMob bZ
	lastHurtMobTimestamp ca
	lastPos ce
	lerpHeadSteps by
	lerpSteps br
	lerpX bs
	lerpXRot bw
	lerpY bt
	lerpYRot bv
	lerpZ bu
	lyHeadRot bx
	noActionTime bf
	noJumpDelay cc
	oAttackAnim aO
	oRun bg
	removeArrowTime aI
	removeStingerTime aJ
	rotA aW
	rotOffs bk
	run bh
	skipDropExperience ck
	speed cb
	swimAmount ci
	swimAmountO cj
	swingTime aH
	swinging aF
	swingingArm aG
	timeOffs aV
	useItem bz
	useItemRemaining bA
	xxa bo
	yBodyRot aX
	yBodyRotO aY
	yHeadRot aZ
	yHeadRotO ba
	yya bp
	zza bq
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEatEffect (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)V a
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)Z b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)Z b
	aiStep ()V w_
	animateHurt ()V bD
	areAllEffectsAmbient (Ljava/util/Collection;)Z c
	attackable ()Z ff
	baseTick ()V an
	blockUsingShield (Lnet/minecraft/world/entity/LivingEntity;)V d
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dz
	breakItem (Lnet/minecraft/world/item/ItemStack;)V j
	broadcastBreakEvent (Lnet/minecraft/world/InteractionHand;)V d
	broadcastBreakEvent (Lnet/minecraft/world/entity/EquipmentSlot;)V d
	calculateEntityAnimation (Lnet/minecraft/world/entity/LivingEntity;Z)V a
	calculateFallDamage (FF)I d
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	canAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;)Z a
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	canBeSeenAsEnemy ()Z dY
	canBeSeenByAnyone ()Z dZ
	canBreatheUnderwater ()Z dB
	canDisableShield ()Z fm
	canFreeze ()Z do
	canSpawnSoulSpeedParticle ()Z dC
	canStandOnFluid (Lnet/minecraft/world/level/material/FluidState;)Z a
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkAutoSpinAttack (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/phys/AABB;)V a
	checkBedExists ()Z E
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkTotemDeathProtection (Lnet/minecraft/world/damagesource/DamageSource;)Z g
	clearSleepingPos ()V fi
	collectEquipmentChanges ()Ljava/util/Map; y
	completeUsingItem ()V v
	createEquipmentSlotAccess (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/entity/SlotAccess; a
	createLivingAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; dA
	createLootContext (ZLnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	createWitherRose (Lnet/minecraft/world/entity/LivingEntity;)V f
	decreaseAirSupply (I)I m
	defineSynchedData ()V a_
	detectEquipmentUpdates ()V x
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	dismountVehicle (Lnet/minecraft/world/entity/Entity;)V a
	doAutoAttackOnTouch (Lnet/minecraft/world/entity/LivingEntity;)V g
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	doesEmitEquipEvent (Lnet/minecraft/world/entity/EquipmentSlot;)Z a
	dropAllDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;)V f
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	dropEquipment ()V ei
	dropExperience ()V ej
	dropFromLootTable (Lnet/minecraft/world/damagesource/DamageSource;Z)V a
	eat (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	entityEventForEquipmentBreak (Lnet/minecraft/world/entity/EquipmentSlot;)B g
	forceAddEffect (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)V c
	getAbsorptionAmount ()F eQ
	getActiveEffects ()Ljava/util/Collection; ec
	getActiveEffectsMap ()Ljava/util/Map; ed
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getArmorCoverPercentage ()F eB
	getArmorSlots ()Ljava/lang/Iterable; bF
	getArmorValue ()I eq
	getArrowCount ()I eu
	getAttackAnim (F)F s
	getAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D c
	getAttributeValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D b
	getAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeMap; ex
	getBedOrientation ()Lnet/minecraft/core/Direction; fl
	getBlockSpeedFactor ()F aD
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; cz
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dy
	getCombatTracker ()Lnet/minecraft/world/damagesource/CombatTracker; er
	getCurrentSwingDuration ()I r
	getDamageAfterArmorAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F d
	getDamageAfterMagicAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F e
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDismountPoses ()Lcom/google/common/collect/ImmutableList; fg
	getDrinkingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; d
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; e
	getEffect (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; b
	getEquipmentSlot (I)Lnet/minecraft/world/entity/EquipmentSlot; d
	getEquipmentSlotForItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/EquipmentSlot; i
	getExperienceReward ()I dO
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getFallDamageSound (I)Lnet/minecraft/sounds/SoundEvent; c
	getFallFlyingTicks ()I fd
	getFallSounds ()Lnet/minecraft/world/entity/LivingEntity$Fallsounds; en
	getFluidFallingAdjustedMovement (DZLnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	getFrictionInfluencedSpeed (F)F u
	getHealth ()F ef
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; c
	getItemInHand (Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/item/ItemStack; b
	getJumpBoostPower ()D eG
	getJumpPower ()F eF
	getKillCredit ()Lnet/minecraft/world/entity/LivingEntity; es
	getLastArmorItem (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; e
	getLastClimbablePos ()Ljava/util/Optional; eo
	getLastDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; eh
	getLastHandItem (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; f
	getLastHurtByMob ()Lnet/minecraft/world/entity/LivingEntity; dR
	getLastHurtByMobTimestamp ()I dS
	getLastHurtMob ()Lnet/minecraft/world/entity/LivingEntity; dT
	getLastHurtMobTimestamp ()I dU
	getLocalBoundsForPose (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/phys/AABB; g
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; ek
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; eS
	getMainHandItem ()Lnet/minecraft/world/item/ItemStack; ez
	getMaxHealth ()F et
	getMobType ()Lnet/minecraft/world/entity/MobType; ey
	getNoActionTime ()I dV
	getOffhandItem ()Lnet/minecraft/world/item/ItemStack; eA
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; h
	getRandom ()Lnet/minecraft/util/RandomSource; dQ
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	getScale ()F dJ
	getSleepingPos ()Ljava/util/Optional; fh
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getSoundVolume ()F eC
	getSpeed ()F eK
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStingerCount ()I ev
	getSwimAmount (F)F a
	getTicksUsingItem ()I eX
	getUseItem ()Lnet/minecraft/world/item/ItemStack; eV
	getUseItemRemainingTicks ()I eW
	getUsedItemHand ()Lnet/minecraft/world/InteractionHand; eU
	getViewYRot (F)F g
	getVisibilityPercent (Lnet/minecraft/world/entity/Entity;)D y
	getVisualRotationYInDegrees ()F dr
	getVoicePitch ()F eD
	getWaterSlowDown ()F eJ
	getYHeadRot ()F cg
	goDownInWater ()V eI
	handleEntityEvent (B)V a
	handleEquipmentChanges (Ljava/util/Map;)V b
	handleHandSwap (Ljava/util/Map;)V a
	handleOnClimbable (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; i
	handleRelativeFrictionAndCalculateMovement (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	hasEffect (Lnet/minecraft/world/effect/MobEffect;)Z a
	hasItemInSlot (Lnet/minecraft/world/entity/EquipmentSlot;)Z b
	hasLineOfSight (Lnet/minecraft/world/entity/Entity;)Z B
	heal (F)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F)V b
	hurtCurrentlyUsedShield (F)V q
	hurtHelmet (Lnet/minecraft/world/damagesource/DamageSource;F)V c
	increaseAirSupply (I)I n
	isAffectedByFluids ()Z dK
	isAffectedByPotions ()Z fe
	isAlive ()Z bo
	isAlwaysExperienceDropper ()Z dP
	isAutoSpinAttack ()Z eO
	isBaby ()Z y_
	isBlocking ()Z fa
	isCurrentlyGlowing ()Z bW
	isDamageSourceBlocked (Lnet/minecraft/world/damagesource/DamageSource;)Z e
	isDeadOrDying ()Z eg
	isEffectiveAi ()Z eP
	isFallFlying ()Z fc
	isHolding (Ljava/util/function/Predicate;)Z b
	isHolding (Lnet/minecraft/world/item/Item;)Z b
	isImmobile ()Z eE
	isInWall ()Z bp
	isInvertedHealAndHarm ()Z ee
	isPickable ()Z bk
	isPushable ()Z bl
	isSensitiveToWater ()Z eL
	isSleeping ()Z fj
	isSuppressingSlidingDownLadder ()Z fb
	isUsingItem ()Z eT
	isVisuallySwimming ()Z bT
	jumpFromGround ()V eH
	jumpInLiquid (Lnet/minecraft/tags/TagKey;)V c
	kill ()V ag
	knockback (DDD)V p
	lerpHeadTo (FI)V a
	lerpTo (DDDFFIZ)V a
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	makePoofParticles ()V u
	onChangedBlock (Lnet/minecraft/core/BlockPos;)V c
	onClimbable ()Z b_
	onEffectAdded (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)V a
	onEffectRemoved (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	onEffectUpdated (Lnet/minecraft/world/effect/MobEffectInstance;ZLnet/minecraft/world/entity/Entity;)V a
	onEnterCombat ()V h
	onEquipItem (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	onItemPickup (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	onLeaveCombat ()V i
	onSoulSpeedBlock ()Z dE
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	outOfWorld ()V av
	playBlockFallSound ()V ep
	playEquipSound (Lnet/minecraft/world/item/ItemStack;)V c
	playHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)V d
	push (Lnet/minecraft/world/entity/Entity;)V g
	pushEntities ()V eN
	randomTeleport (DDDZ)Z a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	releaseUsingItem ()V eY
	removeAllEffects ()Z eb
	removeEffect (Lnet/minecraft/world/effect/MobEffect;)Z d
	removeEffectNoUpdate (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; c
	removeEffectParticles ()V ea
	removeFrost ()V dH
	removeSoulSpeed ()V dF
	resetForwardDirectionOfRelativePortalPosition (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; h
	rideTick ()V br
	rideableUnderWater ()Z bK
	serverAiStep ()V eM
	setAbsorptionAmount (F)V t
	setArrowCount (I)V p
	setDiscardFriction (Z)V p
	setHealth (F)V c
	setItemInHand (Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setJumping (Z)V q
	setLastArmorItem (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V b
	setLastHandItem (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V c
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setLastHurtByPlayer (Lnet/minecraft/world/entity/player/Player;)V d
	setLastHurtMob (Lnet/minecraft/world/entity/Entity;)V x
	setLivingEntityFlag (IZ)V c
	setNoActionTime (I)V o
	setOnGround (Z)V c
	setPosToBed (Lnet/minecraft/core/BlockPos;)V a
	setRecordPlayingNearby (Lnet/minecraft/core/BlockPos;Z)V a
	setSleepingPos (Lnet/minecraft/core/BlockPos;)V e
	setSpeed (F)V r
	setSprinting (Z)V g
	setStingerCount (I)V q
	setYBodyRot (F)V m
	setYHeadRot (F)V l
	shouldDiscardFriction ()Z dW
	shouldDropExperience ()Z dM
	shouldDropLoot ()Z dN
	shouldRemoveSoulSpeed (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	shouldShowName ()Z cu
	shouldTriggerItemUseEffects ()Z C
	skipDropExperience ()V el
	spawnItemParticles (Lnet/minecraft/world/item/ItemStack;I)V a
	spawnSoulSpeedParticle ()V dD
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	startUsingItem (Lnet/minecraft/world/InteractionHand;)V c
	stopRiding ()V p
	stopSleeping ()V fk
	stopUsingItem ()V eZ
	swapHandItems ()V w
	swing (Lnet/minecraft/world/InteractionHand;)V a
	swing (Lnet/minecraft/world/InteractionHand;Z)V a
	take (Lnet/minecraft/world/entity/Entity;I)V a
	tick ()V k
	tickDeath ()V dL
	tickEffects ()V dX
	tickHeadTurn (FF)F e
	trapdoorUsableAsLadder (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z c
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	triggerItemUseEffects (Lnet/minecraft/world/item/ItemStack;I)V b
	tryAddFrost ()V dI
	tryAddSoulSpeed ()V dG
	updateEffectVisibility ()V eR
	updateFallFlying ()V z
	updateGlowingStatus ()V n
	updateInvisibilityStatus ()V F
	updateSwimAmount ()V D
	updateSwingTime ()V ew
	updateUsingItem (Lnet/minecraft/world/item/ItemStack;)V a
	updatingUsingItem ()V A
	verifyEquippedItem (Lnet/minecraft/world/item/ItemStack;)V f
	wasExperienceConsumed ()Z em
net/minecraft/world/entity/LivingEntity$Fallsounds bcc$a
	big b
	small a
	big ()Lnet/minecraft/sounds/SoundEvent; b
	small ()Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/world/entity/Marker bcd
	DATA_TAG b
	data c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addPassenger (Lnet/minecraft/world/entity/Entity;)V m
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; c_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	tick ()V k
net/minecraft/world/entity/Mob bce
	DATA_MOB_FLAGS_ID b
	DEFAULT_EQUIPMENT_DROP_CHANCE bJ
	ITEM_PICKUP_REACH bW
	LEASH_TAG bI
	MAX_ENCHANTED_ARMOR_CHANCE bG
	MAX_ENCHANTED_WEAPON_CHANCE bH
	MAX_PICKUP_LOOT_CHANCE bF
	MAX_WEARING_ARMOR_CHANCE bE
	MOB_FLAG_AGGRESSIVE e
	MOB_FLAG_LEFTHANDED d
	MOB_FLAG_NO_AI c
	PICKUP_REACH f
	PRESERVE_ITEM_DROP_CHANCE bK
	UPDATE_GOAL_SELECTOR_EVERY_N_TICKS bL
	ambientSoundTime bM
	armorDropChances bV
	armorItems cb
	bodyRotationControl bX
	canPickUpLoot cc
	delayedLeashHolderId ci
	goalSelector bS
	handDropChances bU
	handItems ca
	jumpControl bQ
	leashHolder ch
	leashInfoTag cj
	lookControl bO
	lootTable cf
	lootTableSeed cg
	moveControl bP
	navigation bR
	pathfindingMalus ce
	persistenceRequired cd
	restrictCenter ck
	restrictRadius cl
	sensing bZ
	target bY
	targetSelector bT
	xpReward bN
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	ate ()V I
	baseTick ()V an
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canCutCorner (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z b
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z k
	canPickUpLoot ()Z fq
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	canReplaceEqualItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	checkAndHandleImportantInteractions (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; c
	checkDespawn ()V dm
	checkMobSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkSpawnRules (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;)Z a
	clearRestriction ()V fv
	convertTo (Lnet/minecraft/world/entity/EntityType;Z)Lnet/minecraft/world/entity/Mob; a
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; y
	createLootContext (ZLnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	createMobAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; w
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	customServerAiStep ()V T
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	dropFromLootTable (Lnet/minecraft/world/damagesource/DamageSource;Z)V a
	dropLeash (ZZ)V a
	enchantSpawnedArmor (Lnet/minecraft/util/RandomSource;FLnet/minecraft/world/entity/EquipmentSlot;)V a
	enchantSpawnedWeapon (Lnet/minecraft/util/RandomSource;F)V a
	equipItemIfPossible (Lnet/minecraft/world/item/ItemStack;)Z j
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAmbientSoundInterval ()I J
	getArmorSlots ()Ljava/lang/Iterable; bF
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; N
	getEquipmentDropChance (Lnet/minecraft/world/entity/EquipmentSlot;)F f
	getEquipmentForSlot (Lnet/minecraft/world/entity/EquipmentSlot;I)Lnet/minecraft/world/item/Item; a
	getExperienceReward ()I dO
	getHandSlots ()Ljava/lang/Iterable; bE
	getHeadRotSpeed ()I fn
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; c
	getJumpControl ()Lnet/minecraft/world/entity/ai/control/JumpControl; C
	getLeashHolder ()Lnet/minecraft/world/entity/Entity; fz
	getLookControl ()Lnet/minecraft/world/entity/ai/control/LookControl; z
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; ek
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; eS
	getMaxFallDistance ()I cl
	getMaxHeadXRot ()I U
	getMaxHeadYRot ()I V
	getMaxSpawnClusterSize ()I fo
	getMeleeAttackRangeSqr (Lnet/minecraft/world/entity/LivingEntity;)D i
	getMoveControl ()Lnet/minecraft/world/entity/ai/control/MoveControl; A
	getNavigation ()Lnet/minecraft/world/entity/ai/navigation/PathNavigation; D
	getPathfindingMalus (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)F a
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dn
	getPickupReach ()Lnet/minecraft/core/Vec3i; O
	getRestrictCenter ()Lnet/minecraft/core/BlockPos; ft
	getRestrictRadius ()F fu
	getSensing ()Lnet/minecraft/world/entity/ai/sensing/Sensing; E
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; G
	handleEntityEvent (B)V a
	hasRestriction ()Z fw
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAggressive ()Z fC
	isControlledByLocalInstance ()Z cP
	isEffectiveAi ()Z eP
	isLeashed ()Z fy
	isLeftHanded ()Z fB
	isMaxGroupSizeReached (I)Z d
	isNoAi ()Z fA
	isPersistenceRequired ()Z fr
	isSunBurnTick ()Z fD
	isWithinMeleeAttackRange (Lnet/minecraft/world/entity/LivingEntity;)Z j
	isWithinRestriction ()Z fs
	isWithinRestriction (Lnet/minecraft/core/BlockPos;)Z a
	iteratePathfindingStartNodeCandidatePositions ()Ljava/lang/Iterable; fF
	jumpInLiquid (Lnet/minecraft/tags/TagKey;)V c
	lookAt (Lnet/minecraft/world/entity/Entity;FF)V a
	maybeDisableShield (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onOffspringSpawnedFromEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playAmbientSound ()V K
	playHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)V d
	populateDefaultEquipmentEnchantments (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	removeAfterChangingDimensions ()V cj
	removeFreeWill ()V fE
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z P
	resetAmbientSoundTime ()V n
	restoreLeashFromSave ()V fG
	restrictTo (Lnet/minecraft/core/BlockPos;I)V a
	rotlerp (FFF)F a
	sendDebugPackets ()V R
	serverAiStep ()V eM
	setAggressive (Z)V u
	setBaby (Z)V a
	setCanPickUpLoot (Z)V r
	setDelayedLeashHolderId (I)V r
	setDropChance (Lnet/minecraft/world/entity/EquipmentSlot;F)V a
	setGuaranteedDrop (Lnet/minecraft/world/entity/EquipmentSlot;)V e
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setItemSlotAndDropWhenKilled (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V b
	setLeashedTo (Lnet/minecraft/world/entity/Entity;Z)V b
	setLeftHanded (Z)V t
	setNoAi (Z)V s
	setPathfindingMalus (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;F)V a
	setPersistenceRequired ()V fp
	setSpeed (F)V r
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	setXxa (F)V w
	setYya (F)V v
	setZza (F)V u
	shouldDespawnInPeaceful ()Z Q
	shouldPassengersInheritMalus ()Z x
	spawnAnim ()V L
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	tick ()V k
	tickHeadTurn (FF)F e
	tickLeash ()V fx
	updateControlFlags ()V M
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z l
net/minecraft/world/entity/MobCategory bcf
	$VALUES p
	AMBIENT c
	AXOLOTLS d
	CODEC i
	CREATURE b
	MISC h
	MONSTER a
	UNDERGROUND_WATER_CREATURE e
	WATER_AMBIENT g
	WATER_CREATURE f
	despawnDistance o
	isFriendly k
	isPersistent l
	max j
	name m
	noDespawnDistance n
	$values ()[Lnet/minecraft/world/entity/MobCategory; h
	getDespawnDistance ()I f
	getMaxInstancesPerChunk ()I b
	getName ()Ljava/lang/String; a
	getNoDespawnDistance ()I g
	getSerializedName ()Ljava/lang/String; c
	isFriendly ()Z d
	isPersistent ()Z e
net/minecraft/world/entity/MobSpawnType bcg
	$VALUES q
	BREEDING e
	BUCKET l
	CHUNK_GENERATION b
	COMMAND n
	CONVERSION i
	DISPENSER o
	EVENT h
	JOCKEY g
	MOB_SUMMONED f
	NATURAL a
	PATROL p
	REINFORCEMENT j
	SPAWNER c
	SPAWN_EGG m
	STRUCTURE d
	TRIGGERED k
	$values ()[Lnet/minecraft/world/entity/MobSpawnType; a
net/minecraft/world/entity/MobType bch
	ARTHROPOD c
	ILLAGER d
	UNDEAD b
	UNDEFINED a
	WATER e
net/minecraft/world/entity/MoverType bci
	$VALUES f
	PISTON c
	PLAYER b
	SELF a
	SHULKER e
	SHULKER_BOX d
	$values ()[Lnet/minecraft/world/entity/MoverType; a
net/minecraft/world/entity/NeutralMob bcj
	TAG_ANGER_TIME a_
	TAG_ANGRY_AT b_
	addPersistentAngerSaveData (Lnet/minecraft/nbt/CompoundTag;)V c
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	forgetCurrentTargetAndRefreshUniversalAnger ()V J_
	getLastHurtByMob ()Lnet/minecraft/world/entity/LivingEntity; dR
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; G
	isAngry ()Z I_
	isAngryAt (Lnet/minecraft/world/entity/LivingEntity;)Z a_
	isAngryAtAllPlayers (Lnet/minecraft/world/level/Level;)Z b
	playerDied (Lnet/minecraft/world/entity/player/Player;)V a_
	readPersistentAngerSaveData (Lnet/minecraft/world/level/Level;Lnet/minecraft/nbt/CompoundTag;)V a
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setLastHurtByPlayer (Lnet/minecraft/world/entity/player/Player;)V d
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	startPersistentAngerTimer ()V c
	stopBeingAngry ()V H_
	updatePersistentAnger (Lnet/minecraft/server/level/ServerLevel;Z)V a
net/minecraft/world/entity/OwnableEntity bck
	getOwner ()Lnet/minecraft/world/entity/Entity; e
	getOwnerUUID ()Ljava/util/UUID; d
net/minecraft/world/entity/PathfinderMob bcl
	DEFAULT_WALK_TARGET_VALUE bW
	checkSpawnRules (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;)Z a
	followLeashSpeed ()D fI
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;)F f
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isPathFinding ()Z fG
	onLeashDistance (F)V x
	shouldStayCloseToLeashHolder ()Z fH
	tickLeash ()V fx
net/minecraft/world/entity/PlayerRideable bcm
net/minecraft/world/entity/PlayerRideableJumping bcn
	canJump ()Z a
	handleStartJump (I)V b
	handleStopJump ()V b
	onPlayerJump (I)V a
net/minecraft/world/entity/Pose bco
	$VALUES o
	CROAKING i
	CROUCHING f
	DIGGING n
	DYING h
	EMERGING m
	FALL_FLYING b
	LONG_JUMPING g
	ROARING k
	SLEEPING c
	SNIFFING l
	SPIN_ATTACK e
	STANDING a
	SWIMMING d
	USING_TONGUE j
	$values ()[Lnet/minecraft/world/entity/Pose; a
net/minecraft/world/entity/PowerableMob bcp
	isPowered ()Z a
net/minecraft/world/entity/ReputationEventHandler bcq
	onReputationEventFrom (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/entity/Saddleable bcr
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	isSaddleable ()Z c
	isSaddled ()Z d
net/minecraft/world/entity/Shearable bcs
	readyForShearing ()Z a
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/SlotAccess bct
	NULL a
	forContainer (Lnet/minecraft/world/Container;I)Lnet/minecraft/world/entity/SlotAccess; a
	forContainer (Lnet/minecraft/world/Container;ILjava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; a
	forEquipmentSlot (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/entity/SlotAccess; a
	forEquipmentSlot (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; a
	get ()Lnet/minecraft/world/item/ItemStack; a
	set (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/entity/SpawnGroupData bcu
net/minecraft/world/entity/SpawnPlacements bcv
	DATA_BY_TYPE a
	checkSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	getHeightmapType (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; b
	getPlacementType (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/SpawnPlacements$Type; a
	register (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/entity/SpawnPlacements$Type;Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/entity/SpawnPlacements$SpawnPredicate;)V a
net/minecraft/world/entity/SpawnPlacements$Data bcv$a
	heightMap a
	placement b
	predicate c
net/minecraft/world/entity/SpawnPlacements$SpawnPredicate bcv$b
net/minecraft/world/entity/SpawnPlacements$Type bcv$c
	$VALUES e
	IN_LAVA d
	IN_WATER b
	NO_RESTRICTIONS c
	ON_GROUND a
	$values ()[Lnet/minecraft/world/entity/SpawnPlacements$Type; a
net/minecraft/world/entity/TamableAnimal bcw
	DATA_FLAGS_ID bX
	DATA_OWNERUUID_ID bY
	orderedToSit ca
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getOwner ()Lnet/minecraft/world/entity/Entity; e
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; fK
	getOwnerUUID ()Ljava/util/UUID; d
	getTeam ()Lnet/minecraft/world/scores/Team; bY
	handleEntityEvent (B)V a
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	isInSittingPose ()Z fJ
	isOrderedToSit ()Z fL
	isOwnedBy (Lnet/minecraft/world/entity/LivingEntity;)Z k
	isTame ()Z q
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTameGoals ()V t
	setInSittingPose (Z)V x
	setOrderedToSit (Z)V y
	setOwnerUUID (Ljava/util/UUID;)V b
	setTame (Z)V w
	spawnTamingParticles (Z)V v
	tame (Lnet/minecraft/world/entity/player/Player;)V e
	wantsToAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/Brain bcx
	LOGGER a
	SCHEDULE_UPDATE_DELAY c
	activeActivities k
	activityMemoriesToEraseWhenStopped i
	activityRequirements h
	availableBehaviorsByPriority f
	codec b
	coreActivities j
	defaultActivity l
	lastScheduleUpdate m
	memories d
	schedule g
	sensors e
	activityRequirementsAreMet (Lnet/minecraft/world/entity/schedule/Activity;)Z f
	addActivity (Lnet/minecraft/world/entity/schedule/Activity;ILcom/google/common/collect/ImmutableList;)V a
	addActivity (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;)V a
	addActivityAndRemoveMemoriesWhenStopped (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;Ljava/util/Set;)V a
	addActivityAndRemoveMemoryWhenStopped (Lnet/minecraft/world/entity/schedule/Activity;ILcom/google/common/collect/ImmutableList;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V a
	addActivityWithConditions (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V a
	checkMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryStatus;)Z a
	codec (Ljava/util/Collection;Ljava/util/Collection;)Lcom/mojang/serialization/Codec; b
	copyWithoutBehaviors ()Lnet/minecraft/world/entity/ai/Brain; h
	createPriorityPairs (ILcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList; a
	eraseMemoriesForOtherActivitesThan (Lnet/minecraft/world/entity/schedule/Activity;)V e
	eraseMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V b
	forgetOutdatedMemories ()V j
	getActiveActivities ()Ljava/util/Set; c
	getActiveNonCoreActivity ()Ljava/util/Optional; f
	getMemories ()Ljava/util/Map; a
	getMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; c
	getRunningBehaviors ()Ljava/util/List; d
	getSchedule ()Lnet/minecraft/world/entity/schedule/Schedule; b
	getTimeUntilExpiry (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)J d
	hasMemoryValue (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Z a
	isActive (Lnet/minecraft/world/entity/schedule/Activity;)Z c
	isEmptyCollection (Ljava/lang/Object;)Z a
	isMemoryValue (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;)Z b
	memories ()Ljava/util/stream/Stream; i
	provider (Ljava/util/Collection;Ljava/util/Collection;)Lnet/minecraft/world/entity/ai/Brain$Provider; a
	removeAllBehaviors ()V g
	serializeStart (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult; a
	setActiveActivity (Lnet/minecraft/world/entity/schedule/Activity;)V d
	setActiveActivityIfPossible (Lnet/minecraft/world/entity/schedule/Activity;)V a
	setActiveActivityToFirstValid (Ljava/util/List;)V a
	setCoreActivities (Ljava/util/Set;)V a
	setDefaultActivity (Lnet/minecraft/world/entity/schedule/Activity;)V b
	setMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;)V a
	setMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)V a
	setMemoryInternal (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)V b
	setMemoryWithExpiry (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;J)V a
	setSchedule (Lnet/minecraft/world/entity/schedule/Schedule;)V a
	startEachNonRunningBehavior (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V d
	stopAll (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	tickEachRunningBehavior (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V e
	tickSensors (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V c
	updateActivityFromSchedule (JJ)V a
	useDefaultActivity ()V e
net/minecraft/world/entity/ai/Brain$MemoryValue bcx$a
	type a
	value b
	createUnchecked (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/Brain$MemoryValue; a
	serialize (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)V a
	setMemoryInternal (Lnet/minecraft/world/entity/ai/Brain;)V a
net/minecraft/world/entity/ai/Brain$Provider bcx$b
	codec c
	memoryTypes a
	sensorTypes b
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
net/minecraft/world/entity/ai/attributes/Attribute bcy
	MAX_NAME_LENGTH a
	defaultValue b
	descriptionId d
	syncable c
	getDefaultValue ()D a
	getDescriptionId ()Ljava/lang/String; c
	isClientSyncable ()Z b
	sanitizeValue (D)D a
	setSyncable (Z)Lnet/minecraft/world/entity/ai/attributes/Attribute; a
net/minecraft/world/entity/ai/attributes/AttributeInstance bcz
	attribute a
	baseValue e
	cachedValue g
	dirty f
	modifierById c
	modifiersByOperation b
	onDirty h
	permanentModifiers d
	addModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V e
	addPermanentModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V c
	addTransientModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V b
	calculateValue ()D h
	getAttribute ()Lnet/minecraft/world/entity/ai/attributes/Attribute; a
	getBaseValue ()D b
	getModifier (Ljava/util/UUID;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; a
	getModifiers ()Ljava/util/Set; c
	getModifiers (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/util/Set; a
	getModifiersOrEmpty (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/util/Collection; b
	getValue ()D f
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)Z a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeModifier (Ljava/util/UUID;)V b
	removeModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V d
	removeModifiers ()V e
	removePermanentModifier (Ljava/util/UUID;)Z c
	replaceFrom (Lnet/minecraft/world/entity/ai/attributes/AttributeInstance;)V a
	save ()Lnet/minecraft/nbt/CompoundTag; g
	setBaseValue (D)V a
	setDirty ()V d
net/minecraft/world/entity/ai/attributes/AttributeMap bda
	LOGGER a
	attributes b
	dirtyAttributes c
	supplier d
	addTransientAttributeModifiers (Lcom/google/common/collect/Multimap;)V b
	assignValues (Lnet/minecraft/world/entity/ai/attributes/AttributeMap;)V a
	getBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D d
	getDirtyAttributes ()Ljava/util/Set; a
	getInstance (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getModifierValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)D b
	getSyncableAttributes ()Ljava/util/Collection; b
	getValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D c
	hasAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Z b
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)Z a
	load (Lnet/minecraft/nbt/ListTag;)V a
	onAttributeModified (Lnet/minecraft/world/entity/ai/attributes/AttributeInstance;)V a
	removeAttributeModifiers (Lcom/google/common/collect/Multimap;)V a
	save ()Lnet/minecraft/nbt/ListTag; c
net/minecraft/world/entity/ai/attributes/AttributeModifier bdb
	LOGGER a
	amount b
	id e
	nameGetter d
	operation c
	getAmount ()D d
	getId ()Ljava/util/UUID; a
	getName ()Ljava/lang/String; b
	getOperation ()Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; a
	save ()Lnet/minecraft/nbt/CompoundTag; e
net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation bdb$a
	$VALUES f
	ADDITION a
	MULTIPLY_BASE b
	MULTIPLY_TOTAL c
	OPERATIONS d
	value e
	$values ()[Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; b
	fromValue (I)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; a
	toValue ()I a
net/minecraft/world/entity/ai/attributes/AttributeSupplier bdc
	instances a
	builder ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	createInstance (Ljava/util/function/Consumer;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeInstance (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; d
	getBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D b
	getModifierValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)D a
	getValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D a
	hasAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Z c
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)Z b
net/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder bdc$a
	builder a
	instanceFrozen b
	add (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	add (Lnet/minecraft/world/entity/ai/attributes/Attribute;D)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	build ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier; a
	create (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; b
net/minecraft/world/entity/ai/attributes/Attributes bdd
	ARMOR i
	ARMOR_TOUGHNESS j
	ATTACK_DAMAGE f
	ATTACK_KNOCKBACK g
	ATTACK_SPEED h
	FLYING_SPEED e
	FOLLOW_RANGE b
	JUMP_STRENGTH m
	KNOCKBACK_RESISTANCE c
	LUCK k
	MAX_HEALTH a
	MOVEMENT_SPEED d
	SPAWN_REINFORCEMENTS_CHANCE l
	register (Ljava/lang/String;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/Attribute; a
net/minecraft/world/entity/ai/attributes/DefaultAttributes bde
	LOGGER a
	SUPPLIERS b
	getSupplier (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier; a
	hasSupplier (Lnet/minecraft/world/entity/EntityType;)Z b
	validate ()V a
net/minecraft/world/entity/ai/attributes/RangedAttribute bdf
	maxValue c
	minValue b
	getMaxValue ()D e
	getMinValue ()D d
	sanitizeValue (D)D a
net/minecraft/world/entity/ai/behavior/AcquirePoi bdh
	BATCH_SIZE d
	RATE e
	SCAN_RANGE a
	batchCache k
	memoryToAcquire g
	nextScheduledStart j
	onPoiAcquisitionEvent i
	onlyIfAdult h
	poiType f
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	constructEntryConditionMap (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lcom/google/common/collect/ImmutableMap; a
	findPathToPois (Lnet/minecraft/world/entity/Mob;Ljava/util/Set;)Lnet/minecraft/world/level/pathfinder/Path; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/AcquirePoi$JitteredLinearRetry bdh$a
	MAX_INTERVAL_INCREASE b
	MAX_RETRY_PATHFINDING_INTERVAL c
	MIN_INTERVAL_INCREASE a
	currentDelay g
	nextScheduledAttemptTimestamp f
	previousAttemptTimestamp e
	random d
	isStillValid (J)Z b
	markAttempt (J)V a
	shouldRetry (J)Z c
net/minecraft/world/entity/ai/behavior/AnimalMakeLove bdi
	BREED_RANGE a
	MAX_DURATION e
	MIN_DURATION d
	partnerType f
	spawnChildAtTime h
	speedModifier g
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;)Z a
	findValidBreedPartner (Lnet/minecraft/world/entity/animal/Animal;)Ljava/util/Optional; c
	getBreedTarget (Lnet/minecraft/world/entity/animal/Animal;)Lnet/minecraft/world/entity/animal/Animal; a
	hasBreedTargetOfRightType (Lnet/minecraft/world/entity/animal/Animal;)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V c
net/minecraft/world/entity/ai/behavior/AnimalPanic bdj
	PANIC_DISTANCE_HORIZONTAL e
	PANIC_DISTANCE_VERTICAL f
	PANIC_MAX_DURATION d
	PANIC_MIN_DURATION a
	speedMultiplier g
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)Z a
	getPanicPos (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/phys/Vec3; a
	lookForWater (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)Ljava/util/Optional; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V d
net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite bdk
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/BabyFollowAdult bdl
	followRange a
	speedModifier d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getNearestAdult (Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/BackUpIfTooClose bdm
	strafeSpeed d
	tooCloseDistance a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	getTarget (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/entity/LivingEntity; c
	isTargetTooClose (Lnet/minecraft/world/entity/Mob;)Z b
	isTargetVisible (Lnet/minecraft/world/entity/Mob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/BecomePassiveIfMemoryPresent bdn
	pacifyDuration a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/Behavior bdo
	DEFAULT_DURATION b
	endTimestamp d
	entryCondition c
	maxDuration f
	minDuration e
	status a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	doStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V g
	getStatus ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; a
	hasRequiredMemories (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tickOrStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V f
	timedOut (J)Z a
	tryStart (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z e
net/minecraft/world/entity/ai/behavior/Behavior$Status bdo$a
	$VALUES c
	RUNNING b
	STOPPED a
	$values ()[Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; a
net/minecraft/world/entity/ai/behavior/BehaviorUtils bdp
	canSee (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z b
	entityIsVisible (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/LivingEntity;)Z a
	findSectionClosestToVillage (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/SectionPos;I)Lnet/minecraft/core/SectionPos; a
	getLivingEntityFromUUIDMemory (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; a
	getNearbyVillagersWithCondition (Lnet/minecraft/world/entity/npc/Villager;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; a
	getNearestTarget (Lnet/minecraft/world/entity/LivingEntity;Ljava/util/Optional;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	getRandomSwimmablePos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; a
	getTargetNearestMe (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	isBreeding (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isOtherTargetMuchFurtherAwayThanCurrentAttackTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;D)Z a
	isWithinAttackRange (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;I)Z a
	lockGazeAndWalkToEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;F)V a
	lookAtEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V c
	lookAtEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V a
	setWalkAndLookTargetMemories (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;FI)V a
	setWalkAndLookTargetMemories (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;FI)V a
	setWalkAndLookTargetMemories (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/behavior/PositionTracker;FI)V a
	setWalkAndLookTargetMemoriesToEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;F)V b
	targetIsValid (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/function/Predicate;)Z a
	targetIsValid (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/EntityType;)Z a
	throwItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/Vec3;)V a
	throwItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;F)V a
net/minecraft/world/entity/ai/behavior/BlockPosTracker bdq
	blockPos a
	centerPosition b
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/CelebrateVillagersSurvivedRaid bdr
	currentRaid a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getFirework (Lnet/minecraft/world/item/DyeColor;I)Lnet/minecraft/world/item/ItemStack; a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry bds
	durationOfCopy f
	predicate a
	sourceMemory d
	targetMemory e
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/CountDownCooldownTicks bdt
	cooldownTicks a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	getCooldownTickMemory (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/Croak bdu
	CROAK_TICKS a
	TIME_OUT_DURATION d
	croakCounter e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)V d
net/minecraft/world/entity/ai/behavior/CrossbowAttack bdv
	TIMEOUT a
	attackDelay d
	crossbowState e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	crossbowAttack (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	getAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	lookAtTarget (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
net/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState bdv$a
	$VALUES e
	CHARGED c
	CHARGING b
	READY_TO_ATTACK d
	UNCHARGED a
	$values ()[Lnet/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState; a
net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting bdw
	dontRideIf d
	maxWalkDistToRideTarget a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isVehicleValid (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/DoNothing bdx
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
net/minecraft/world/entity/ai/behavior/EntityTracker bdy
	entity a
	trackEyeHeight b
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	getEntity ()Lnet/minecraft/world/entity/Entity; c
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/EraseMemoryIf bdz
	memoryType d
	predicate a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/FlyingRandomStroll bea
	getTargetPos (Lnet/minecraft/world/entity/PathfinderMob;)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/behavior/FollowTemptation beb
	CLOSE_ENOUGH_DIST d
	TEMPTATION_COOLDOWN a
	speedModifier e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)Z a
	getSpeedModifier (Lnet/minecraft/world/entity/PathfinderMob;)F a
	getTemptingPlayer (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/Optional; b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/GateBehavior bec
	behaviors f
	exitErasedMemories a
	orderPolicy d
	runningPolicy e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy bec$a
	$VALUES d
	ORDERED a
	SHUFFLED b
	consumer c
	$values ()[Lnet/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy; a
	apply (Lnet/minecraft/world/entity/ai/behavior/ShufflingList;)V a
net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy bec$b
	$VALUES c
	RUN_ONE a
	TRY_ALL b
	$values ()[Lnet/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy; a
	apply (Ljava/util/stream/Stream;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/GiveGiftToHero bed
	GIFTS g
	MAX_TIME_BETWEEN_GIFTS e
	MIN_TIME_BETWEEN_GIFTS d
	SPEED_MODIFIER h
	THROW_GIFT_AT_DISTANCE a
	TIME_TO_DELAY_FOR_HEAD_TO_FINISH_TURNING f
	giftGivenDuringThisRun j
	timeSinceStart k
	timeUntilNextGift i
	calculateTimeUntilNextGift (Lnet/minecraft/server/level/ServerLevel;)I a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getItemToThrow (Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/List; a
	getNearestTargetableHero (Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; c
	isHero (Lnet/minecraft/world/entity/player/Player;)Z a
	isHeroVisible (Lnet/minecraft/world/entity/npc/Villager;)Z b
	isWithinThrowingDistance (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/player/Player;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	throwGift (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/LivingEntity;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/GoAndGiveItemsToTarget bee
	CLOSE_ENOUGH_DISTANCE_TO_TARGET a
	ITEM_PICKUP_COOLDOWN_AFTER_THROWING d
	speedModifier f
	targetPositionGetter e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canThrowItemToTarget (Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getThrowPosition (Lnet/minecraft/world/entity/ai/behavior/PositionTracker;)Lnet/minecraft/world/phys/Vec3; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	throwItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/Vec3;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	triggerDropItemOnBlock (Lnet/minecraft/world/entity/ai/behavior/PositionTracker;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/world/entity/ai/behavior/GoOutsideToCelebrate bef
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/GoToClosestVillage beg
	closeEnoughDistance d
	speedModifier a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite beh
	TICKS_UNTIL_TIMEOUT d
	speedModifier a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
net/minecraft/world/entity/ai/behavior/GoToTargetLocation bei
	closeEnoughDist d
	locationMemory a
	speedModifier e
	getNearbyPos (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getRandomOffset (Lnet/minecraft/util/RandomSource;)I a
	getTargetLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/core/BlockPos; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/GoToWantedItem bej
	maxDistToWalk d
	predicate a
	speedModifier e
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getClosestLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/item/ItemEntity; b
	isOnPickupCooldown (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/HarvestFarmland bek
	HARVEST_DURATION d
	SPEED_MODIFIER a
	aboveFarmlandPos e
	nextOkStartTime f
	timeWorkedSoFar g
	validFarmlandAroundVillager h
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getValidFarmland (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/core/BlockPos; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	validPos (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/ai/behavior/InsideBrownianWalk bel
	speedModifier a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/InteractWith bem
	interactionRangeSqr f
	maxDist a
	memory i
	selfFilter h
	speedModifier d
	targetFilter g
	type e
	canInteract (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isTargetValid (Lnet/minecraft/world/entity/LivingEntity;)Z b
	of (Lnet/minecraft/world/entity/EntityType;ILjava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/InteractWith; a
	of (Lnet/minecraft/world/entity/EntityType;ILnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/InteractWith; a
	seesAtLeastOneValidTarget (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/InteractWithDoor ben
	COOLDOWN_BEFORE_RERUNNING_IN_SAME_NODE a
	MAX_DISTANCE_TO_HOLD_DOOR_OPEN_FOR_OTHER_MOBS e
	SKIP_CLOSING_DOOR_IF_FURTHER_AWAY_THAN d
	lastCheckedNode f
	remainingCooldown g
	areOtherMobsComingThroughDoor (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	closeDoorsThatIHaveOpenedOrPassedThrough (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)V a
	isDoorTooFarAway (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/GlobalPos;)Z a
	isMobComingThroughDoor (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)Z b
	rememberDoorToClose (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)V c
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/JumpOnBed beo
	COOLDOWN_BETWEEN_JUMPS f
	MAX_JUMPS e
	MAX_TIME_TO_REACH_BED a
	MIN_JUMPS d
	remainingCooldownUntilNextJump k
	remainingJumps j
	remainingTimeToReachBed i
	speedModifier g
	targetBed h
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	getNearestBed (Lnet/minecraft/world/entity/Mob;)Ljava/util/Optional; a
	isBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	nearBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z b
	onBedSurface (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z d
	onOrOverBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z c
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
	startWalkingTowardsBed (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V d
	timedOut (J)Z a
	tiredOfJumping (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z f
	tiredOfWalking (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z e
net/minecraft/world/entity/ai/behavior/LocateHidingPlace bep
	closeEnoughDist e
	currentPos f
	radius d
	speedModifier a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/LocateHidingPlaceDuringRaid beq
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/LongJumpMidJump ber
	TIME_OUT_DURATION a
	landingSound e
	timeBetweenLongJumps d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
net/minecraft/world/entity/ai/behavior/LongJumpToPreferredBlock bes
	currentlyWantingPreferredOnes p
	notPrefferedJumpCandidates o
	preferredBlockTag m
	preferredBlocksChance n
	getJumpCandidate (Lnet/minecraft/server/level/ServerLevel;)Ljava/util/Optional; a
	isAcceptableLandingPosition (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
	willNotLandInFluid (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos bet
	ALLOWED_ANGLES o
	FIND_JUMP_TRIES a
	MIN_PATHFIND_DISTANCE_TO_VALID_JUMP d
	PREPARE_JUMP_DURATION m
	TIME_OUT_DURATION n
	acceptableLandingSpot r
	chosenJump j
	findJumpTries k
	getJumpSound q
	initialPosition i
	jumpCandidates h
	maxJumpVelocity g
	maxLongJumpHeight e
	maxLongJumpWidth f
	prepareJumpStart l
	timeBetweenLongJumps p
	calculateJumpVectorForAngle (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/phys/Vec3;I)Lnet/minecraft/world/phys/Vec3; a
	calculateOptimalJumpVector (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	getJumpCandidate (Lnet/minecraft/server/level/ServerLevel;)Ljava/util/Optional; a
	isAcceptableLandingPosition (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Z a
	isClearTransition (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	pickCandidate (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos$PossibleJump bet$a
	jumpTarget a
	getJumpTarget ()Lnet/minecraft/core/BlockPos; b
net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink beu
	speedModifier a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	followPlayer (Lnet/minecraft/world/entity/npc/Villager;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/LookAtTargetSink bev
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
net/minecraft/world/entity/ai/behavior/MeleeAttack bew
	cooldownBetweenAttacks a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	getAttackTarget (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/entity/LivingEntity; b
	isHoldingUsableProjectileWeapon (Lnet/minecraft/world/entity/Mob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/Mount bex
	CLOSE_ENOUGH_TO_START_RIDING_DIST a
	speedModifier d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getRidableEntity (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/Entity; b
	isCloseEnoughToStartRiding (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot bey
	speedModifier a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getOutdoorPosition (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	hasNoBlocksAbove (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/MoveToTargetSink bez
	MAX_COOLDOWN_BEFORE_RETRYING a
	lastTargetPos f
	path e
	remainingCooldown d
	speedModifier g
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	reachedTarget (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/memory/WalkTarget;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V d
	tryComputePath (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/memory/WalkTarget;J)Z a
net/minecraft/world/entity/ai/behavior/PlayTagWithOtherKids bfa
	AVERAGE_WAIT_TIME_BETWEEN_RUNS h
	CHASE_SPEED_MODIFIER f
	FLEE_SPEED_MODIFIER e
	MAX_CHASERS_PER_TARGET g
	MAX_FLEE_XZ_DIST a
	MAX_FLEE_Y_DIST d
	chaseKid (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)V a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	checkHowManyChasersEachFriendHas (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/Map; c
	findSomeoneBeingChased (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/Optional; b
	findSomeoneToChase (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/Optional; a
	fleeFromChaser (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)V a
	getFriendsNearby (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/List; d
	hasFriendsNearby (Lnet/minecraft/world/entity/PathfinderMob;)Z e
	isChasingSomeone (Lnet/minecraft/world/entity/LivingEntity;)Z c
	isFriendChasingMe (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	seeIfSomeoneIsChasingMe (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
	whoAreYouChasing (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
net/minecraft/world/entity/ai/behavior/PoiCompetitorScan bfb
	profession a
	competesForSameJobsite (Lnet/minecraft/core/GlobalPos;Lnet/minecraft/core/Holder;Lnet/minecraft/world/entity/npc/Villager;)Z a
	hasJobSite (Lnet/minecraft/world/entity/npc/Villager;)Z a
	hasMatchingProfession (Lnet/minecraft/core/Holder;Lnet/minecraft/world/entity/npc/VillagerProfession;)Z a
	selectWinner (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/world/entity/npc/Villager; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/PositionTracker bfc
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget bfd
	TIME_OUT_DURATION a
	getCooldownOnFail d
	getPrepareRamSound j
	maxRamDistance f
	minRamDistance e
	ramCandidate l
	ramPrepareTime i
	ramTargeting h
	reachedRamPositionTimestamp k
	walkSpeed g
	calculateRammingStartPosition (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)Z c
	chooseRamPosition (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)V b
	getEdgeOfBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; a
	isWalkableBlock (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V d
net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget$RamCandidate bfd$a
	startPosition a
	target c
	targetPosition b
	getStartPosition ()Lnet/minecraft/core/BlockPos; a
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; c
	getTargetPosition ()Lnet/minecraft/core/BlockPos; b
net/minecraft/world/entity/ai/behavior/RamTarget bfe
	RAM_SPEED_FORCE_FACTOR d
	TIME_OUT_DURATION a
	getHornBreakSound k
	getImpactSound j
	getKnockbackForce h
	getTimeBetweenRams e
	ramDirection i
	ramTargeting f
	speed g
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/goat/Goat;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/goat/Goat;)Z a
	finishRam (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/goat/Goat;)V b
	hasRammedHornBreakingBlock (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/goat/Goat;)Z c
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/goat/Goat;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/goat/Goat;J)V c
net/minecraft/world/entity/ai/behavior/RandomStroll bff
	MAX_XZ_DIST e
	MAX_Y_DIST f
	maxHorizontalDistance a
	maxVerticalDistance d
	mayStrollFromWater h
	speedModifier g
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	getTargetPos (Lnet/minecraft/world/entity/PathfinderMob;)Lnet/minecraft/world/phys/Vec3; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/RandomSwim bfg
	XY_DISTANCE_TIERS e
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	getTargetPos (Lnet/minecraft/world/entity/PathfinderMob;)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/behavior/ReactToBell bfh
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/ResetProfession bfi
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/ResetRaidStatus bfj
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/RingBell bfk
	BELL_RING_CHANCE d
	RING_BELL_FROM_DISTANCE a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/RunIf bfl
	checkWhileRunningAlso e
	predicate a
	wrappedBehavior d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	mergeMaps (Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/RunOne bfm
net/minecraft/world/entity/ai/behavior/RunSometimes bfn
	interval e
	resetTicks a
	ticksUntilNextStart g
	wasRunning d
	wrappedBehavior f
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	resetTicksUntilNextStart (Lnet/minecraft/server/level/ServerLevel;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget bfo
	BATCH_SIZE d
	CACHE_TIMEOUT a
	OK_DISTANCE_SQR f
	RATE e
	batchCache h
	lastUpdate j
	speedModifier g
	triedCount i
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetEntityLookTarget bfp
	maxDistSqr d
	nearestEntityMatchingTest e
	predicate a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetHiddenState bfq
	HIDE_TIMEOUT a
	closeEnoughDist d
	stayHiddenTicks e
	ticksHidden f
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetLookAndInteract bfr
	interactionRangeSqr d
	selfFilter f
	targetFilter e
	type a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getVisibleEntities (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities; b
	isMatchingTarget (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetRaidStatus bfs
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom bft
	desiredDistance e
	speedModifier d
	toPosition f
	walkAwayFromMemory a
	alreadyWalkingAwayFromPosWithSameSpeed (Lnet/minecraft/world/entity/PathfinderMob;)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	entity (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZ)Lnet/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom; b
	getPosToAvoid (Lnet/minecraft/world/entity/PathfinderMob;)Lnet/minecraft/world/phys/Vec3; a
	moveAwayFrom (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/phys/Vec3;F)V a
	pos (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZ)Lnet/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromAttackTargetIfTargetOutOfReach bfu
	PROJECTILE_ATTACK_RANGE_BUFFER a
	speedModifier d
	clearWalkTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
	setWalkAndLookTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory bfv
	closeEnoughDist e
	memoryType a
	speedModifier d
	tooFarDistance f
	tooLongUnreachableDuration g
	closeEnough (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/GlobalPos;)Z a
	dropPOI (Lnet/minecraft/world/entity/npc/Villager;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	tiredOfTryingToFindTarget (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	tooFar (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/GlobalPos;)Z a
	wrongDimension (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/GlobalPos;)Z a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromLookTarget bfw
	canSetWalkTargetPredicate e
	closeEnoughDistance d
	speedModifier a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer bfx
	MAX_LOOK_TIME a
	STARTING_LOOK_TIME d
	cycleCounter g
	displayIndex h
	displayItems f
	lookTime i
	playerItemStack e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	clearHeldItem (Lnet/minecraft/world/entity/npc/Villager;)V c
	displayAsHeldItem (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/item/ItemStack;)V a
	displayCyclingItems (Lnet/minecraft/world/entity/npc/Villager;)V e
	displayFirstItem (Lnet/minecraft/world/entity/npc/Villager;)V a
	findItemsToDisplay (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/npc/Villager;)V a
	lookAtTarget (Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/world/entity/LivingEntity; d
	playerItemStackMatchesCostOfOffer (Lnet/minecraft/world/item/trading/MerchantOffer;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	updateDisplayItems (Lnet/minecraft/world/entity/npc/Villager;)V b
net/minecraft/world/entity/ai/behavior/ShufflingList bfy
	entries a
	random b
	add (Ljava/lang/Object;I)Lnet/minecraft/world/entity/ai/behavior/ShufflingList; a
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	shuffle ()Lnet/minecraft/world/entity/ai/behavior/ShufflingList; a
	stream ()Ljava/util/stream/Stream; b
net/minecraft/world/entity/ai/behavior/ShufflingList$WeightedEntry bfy$a
	data a
	randWeight c
	weight b
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getData ()Ljava/lang/Object; a
	getRandWeight ()D c
	getWeight ()I b
	setRandom (F)V a
net/minecraft/world/entity/ai/behavior/SleepInBed bfz
	COOLDOWN_AFTER_BEING_WOKEN a
	nextOkStartTime d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/SocializeAtBell bga
	SPEED_MODIFIER a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/StartAttacking bgb
	canAttackPredicate a
	targetFinderFunction d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	setAttackTarget (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/StartCelebratingIfTargetDead bgc
	celebrateDuration a
	dancePredicate d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/StayCloseToTarget bgd
	closeEnough d
	speedModifier f
	targetPositionGetter a
	tooFar e
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid bge
	TIMEOUT_TO_GET_WITHIN_ATTACK_RANGE a
	canGrowTiredOfTryingToReachTarget f
	onTargetErased e
	stopAttackingWhen d
	clearAttackTarget (Lnet/minecraft/world/entity/Mob;)V a
	getAttackTarget (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/entity/LivingEntity; c
	isCurrentTargetDeadOrRemoved (Lnet/minecraft/world/entity/Mob;)Z d
	isCurrentTargetInDifferentLevel (Lnet/minecraft/world/entity/Mob;)Z b
	isTiredOfTryingToReachTarget (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/StopBeingAngryIfTargetDead bgf
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/StrollAroundPoi bgg
	MIN_TIME_BETWEEN_STROLLS a
	STROLL_MAX_XZ_DIST d
	STROLL_MAX_Y_DIST e
	maxDistanceFromPoi h
	memoryType f
	nextOkStartTime g
	speedModifier i
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/StrollToPoi bgh
	closeEnoughDist d
	maxDistanceFromPoi e
	memoryType a
	nextOkStartTime g
	speedModifier f
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/StrollToPoiList bgi
	closeEnoughDist f
	maxDistanceFromPoi g
	mustBeCloseToMemoryType d
	nextOkStartTime h
	speedModifier e
	strollToMemoryType a
	targetPos i
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/Swim bgj
	chance a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
net/minecraft/world/entity/ai/behavior/TradeWithVillager bgk
	INTERACT_DIST_SQR a
	SPEED_MODIFIER d
	trades e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	figureOutWhatIAmWillingToTrade (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Set; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	throwHalfStack (Lnet/minecraft/world/entity/npc/Villager;Ljava/util/Set;Lnet/minecraft/world/entity/LivingEntity;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/TryFindLand bgl
	COOLDOWN_TICKS a
	nextOkStartTime f
	range d
	speedModifier e
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/TryFindLandNearWater bgm
	nextOkStartTime e
	range a
	speedModifier d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/TryFindWater bgn
	nextOkStartTime e
	range a
	speedModifier d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/TryLaySpawnOnWaterNearLand bgo
	memoryModule d
	spawnBlock a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)V a
net/minecraft/world/entity/ai/behavior/UpdateActivityFromSchedule bgp
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/UseBonemeal bgq
	BONEMEALING_DURATION a
	cropPos g
	lastBonemealingSession e
	nextWorkCycleTime d
	timeWorkedSoFar f
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	pickNextTarget (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; b
	setCurrentCropAsTarget (Lnet/minecraft/world/entity/npc/Villager;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	validPos (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi bgr
	MAX_DISTANCE a
	memoryType d
	poiPredicate e
	bedIsOccupied (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	poiDoesntExist (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/VictoryStroll bgs
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
net/minecraft/world/entity/ai/behavior/VillageBoundRandomStroll bgt
	MAX_XZ_DIST a
	MAX_Y_DIST d
	maxXyDist f
	maxYDist g
	speedModifier e
	setRandomPos (Lnet/minecraft/world/entity/PathfinderMob;)V a
	setTargetedPos (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/SectionPos;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/VillagerCalmDown bgu
	SAFE_DISTANCE_FROM_DANGER a
	isCloseToEntityThatHurtMe (Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/VillagerGoalPackages bgv
	STROLL_SPEED_MODIFIER a
	getCorePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; a
	getFullLookBehavior ()Lcom/mojang/datafixers/util/Pair; a
	getHidePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; i
	getIdlePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; e
	getMeetPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; d
	getMinimalLookBehavior ()Lcom/mojang/datafixers/util/Pair; b
	getPanicPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; f
	getPlayPackage (F)Lcom/google/common/collect/ImmutableList; a
	getPreRaidPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; g
	getRaidPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; h
	getRestPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; c
	getWorkPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; b
net/minecraft/world/entity/ai/behavior/VillagerMakeLove bgw
	INTERACT_DIST_SQR a
	SPEED_MODIFIER d
	birthTimestamp e
	breed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; b
	canReach (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Holder;)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	giveBedToChild (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;)V a
	isBreedingPossible (Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	takeVacantBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tryToGiveBirth (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger bgx
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	hasHostile (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isHurt (Lnet/minecraft/world/entity/LivingEntity;)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/WakeUp bgy
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/WorkAtComposter bgz
	COMPOSTABLE_ITEMS a
	compostItems (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/GlobalPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	makeBread (Lnet/minecraft/world/entity/npc/Villager;)V a
	spawnComposterFillEffects (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	useWorkstation (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/WorkAtPoi bha
	CHECK_COOLDOWN a
	DISTANCE d
	lastCheck e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	useWorkstation (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/YieldJobSite bhb
	speedModifier a
	canReachPos (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/ai/village/poi/PoiType;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	eraseMemories (Lnet/minecraft/world/entity/npc/Villager;)V a
	nearbyWantsJobsite (Lnet/minecraft/core/Holder;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	yieldJobSite (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;Z)V a
net/minecraft/world/entity/ai/behavior/warden/Digging bhd
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V c
net/minecraft/world/entity/ai/behavior/warden/Emerging bhe
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V c
net/minecraft/world/entity/ai/behavior/warden/ForceUnmount bhf
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/warden/Roar bhg
	ROAR_ANGER_INCREASE d
	TICKS_BEFORE_PLAYING_ROAR_SOUND a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V c
net/minecraft/world/entity/ai/behavior/warden/SetRoarTarget bhh
	targetFinderFunction a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V a
net/minecraft/world/entity/ai/behavior/warden/SetWardenLookTarget bhi
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V a
net/minecraft/world/entity/ai/behavior/warden/Sniffing bhj
	ANGER_FROM_SNIFFING_MAX_DISTANCE_XZ a
	ANGER_FROM_SNIFFING_MAX_DISTANCE_Y d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V c
net/minecraft/world/entity/ai/behavior/warden/SonicBoom bhk
	COOLDOWN a
	DISTANCE_XZ d
	DISTANCE_Y e
	DURATION i
	KNOCKBACK_HORIZONTAL g
	KNOCKBACK_VERTICAL f
	TICKS_BEFORE_PLAYING_SOUND h
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;)Z a
	setCooldown (Lnet/minecraft/world/entity/LivingEntity;I)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V c
net/minecraft/world/entity/ai/behavior/warden/TryToSniff bhl
	SNIFF_COOLDOWN a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V a
net/minecraft/world/entity/ai/control/BodyRotationControl bhn
	DELAY_UNTIL_STARTING_TO_FACE_FORWARD c
	HEAD_STABLE_ANGLE b
	HOW_LONG_IT_TAKES_TO_FACE_FORWARD d
	headStableTime e
	lastStableYHeadRot f
	mob a
	clientTick ()V a
	isMoving ()Z f
	notCarryingMobPassengers ()Z e
	rotateBodyIfNecessary ()V b
	rotateHeadIfNecessary ()V c
	rotateHeadTowardsFront ()V d
net/minecraft/world/entity/ai/control/Control bho
net/minecraft/world/entity/ai/control/FlyingMoveControl bhp
	hoversInPlace m
	maxTurn l
	tick ()V a
net/minecraft/world/entity/ai/control/JumpControl bhq
	jump a
	mob b
	jump ()V a
	tick ()V b
net/minecraft/world/entity/ai/control/LookControl bhr
	lookAtCooldown d
	mob a
	wantedX e
	wantedY f
	wantedZ g
	xMaxRotAngle c
	yMaxRotSpeed b
	clampHeadRotationToBody ()V b
	getWantedX ()D e
	getWantedY ()D f
	getWantedY (Lnet/minecraft/world/entity/Entity;)D b
	getWantedZ ()D g
	getXRotD ()Ljava/util/Optional; h
	getYRotD ()Ljava/util/Optional; i
	isLookingAtTarget ()Z d
	resetXRotOnTick ()Z c
	rotateTowards (FFF)F a
	setLookAt (DDD)V a
	setLookAt (DDDFF)V a
	setLookAt (Lnet/minecraft/world/entity/Entity;)V a
	setLookAt (Lnet/minecraft/world/entity/Entity;FF)V a
	setLookAt (Lnet/minecraft/world/phys/Vec3;)V a
	tick ()V a
net/minecraft/world/entity/ai/control/MoveControl bhs
	MAX_TURN c
	MIN_SPEED a
	MIN_SPEED_SQR b
	mob d
	operation k
	speedModifier h
	strafeForwards i
	strafeRight j
	wantedX e
	wantedY f
	wantedZ g
	getSpeedModifier ()D c
	getWantedX ()D d
	getWantedY ()D e
	getWantedZ ()D f
	hasWanted ()Z b
	isWalkable (FF)Z b
	rotlerp (FFF)F a
	setWantedPosition (DDDD)V a
	strafe (FF)V a
	tick ()V a
net/minecraft/world/entity/ai/control/MoveControl$Operation bhs$a
	$VALUES e
	JUMPING d
	MOVE_TO b
	STRAFE c
	WAIT a
	$values ()[Lnet/minecraft/world/entity/ai/control/MoveControl$Operation; a
net/minecraft/world/entity/ai/control/SmoothSwimmingLookControl bht
	HEAD_TILT_X i
	HEAD_TILT_Y j
	maxYRotFromCenter h
	tick ()V a
net/minecraft/world/entity/ai/control/SmoothSwimmingMoveControl bhu
	applyGravity p
	inWaterSpeedModifier n
	maxTurnX l
	maxTurnY m
	outsideWaterSpeedModifier o
	tick ()V a
net/minecraft/world/entity/ai/goal/AvoidEntityGoal bhw
	avoidClass f
	avoidEntityTargeting k
	avoidPredicate g
	maxDist c
	mob a
	path d
	pathNav e
	predicateOnAvoidEntity h
	sprintSpeedModifier j
	toAvoid b
	walkSpeedModifier i
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BegGoal bhx
	begTargeting f
	level c
	lookDistance d
	lookTime e
	player b
	wolf a
	canContinueToUse ()Z b
	canUse ()Z a
	playerHoldingInteresting (Lnet/minecraft/world/entity/player/Player;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BoatGoals bhy
	$VALUES c
	GO_IN_BOAT_DIRECTION b
	GO_TO_BOAT a
	$values ()[Lnet/minecraft/world/entity/ai/goal/BoatGoals; a
net/minecraft/world/entity/ai/goal/BreakDoorGoal bhz
	DEFAULT_DOOR_BREAK_TIME g
	breakTime a
	doorBreakTime c
	lastBreakProgress b
	validDifficulties h
	canContinueToUse ()Z b
	canUse ()Z a
	getDoorBreakTime ()I f
	isValidDifficulty (Lnet/minecraft/world/Difficulty;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BreathAirGoal bia
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	findAirPosition ()V h
	givesAir (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isInterruptable ()Z D_
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/BreedGoal bib
	PARTNER_TARGETING d
	animal a
	level b
	loveTime f
	partner c
	partnerClass e
	speedModifier g
	breed ()V g
	canContinueToUse ()Z b
	canUse ()Z a
	getFreePartner ()Lnet/minecraft/world/entity/animal/Animal; h
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/CatLieOnBedGoal bic
	cat g
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	nextStartTick (Lnet/minecraft/world/entity/PathfinderMob;)I a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/CatSitOnBlockGoal bid
	cat g
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/ClimbOnTopOfPowderSnowGoal bie
	level b
	mob a
	canUse ()Z a
	requiresUpdateEveryTick ()Z E_
	tick ()V e
net/minecraft/world/entity/ai/goal/DolphinJumpGoal bif
	STEPS_TO_CHECK a
	breached d
	dolphin b
	interval c
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z D_
	start ()V c
	stop ()V d
	surfaceIsClear (Lnet/minecraft/core/BlockPos;III)Z b
	tick ()V e
	waterIsClear (Lnet/minecraft/core/BlockPos;III)Z a
net/minecraft/world/entity/ai/goal/DoorInteractGoal big
	doorOpenDirX b
	doorOpenDirZ c
	doorPos e
	hasDoor f
	mob d
	passed a
	canContinueToUse ()Z b
	canUse ()Z a
	isOpen ()Z h
	requiresUpdateEveryTick ()Z E_
	setOpen (Z)V a
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/EatBlockGoal bih
	EAT_ANIMATION_TICKS a
	IS_TALL_GRASS b
	eatAnimationTick e
	level d
	mob c
	canContinueToUse ()Z b
	canUse ()Z a
	getEatAnimationTick ()I h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FleeSunGoal bii
	level f
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	getHidePos ()Lnet/minecraft/world/phys/Vec3; i
	setWantedPos ()Z h
	start ()V c
net/minecraft/world/entity/ai/goal/FloatGoal bij
	mob a
	canUse ()Z a
	requiresUpdateEveryTick ()Z E_
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowBoatGoal bik
	currentGoal d
	following c
	mob b
	timeToRecalcPath a
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z D_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowFlockLeaderGoal bil
	INTERVAL_TICKS a
	mob b
	nextStartTick d
	timeToRecalcPath c
	canContinueToUse ()Z b
	canUse ()Z a
	nextStartTick (Lnet/minecraft/world/entity/animal/AbstractSchoolingFish;)I a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowMobGoal bim
	areaSize i
	followPredicate b
	followingMob c
	mob a
	navigation e
	oldWaterCost h
	speedModifier d
	stopDistance g
	timeToRecalcPath f
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowOwnerGoal bin
	MAX_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING c
	MAX_VERTICAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING d
	MIN_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING b
	TELEPORT_WHEN_DISTANCE_IS a
	canFly n
	level g
	navigation i
	oldWaterCost m
	owner f
	speedModifier h
	startDistance l
	stopDistance k
	tamable e
	timeToRecalcPath j
	canContinueToUse ()Z b
	canTeleportTo (Lnet/minecraft/core/BlockPos;)Z a
	canUse ()Z a
	maybeTeleportTo (III)Z a
	randomIntInclusive (II)I a
	start ()V c
	stop ()V d
	teleportToOwner ()V h
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowParentGoal bio
	DONT_FOLLOW_IF_CLOSER_THAN c
	HORIZONTAL_SCAN_RANGE a
	VERTICAL_SCAN_RANGE b
	animal d
	parent e
	speedModifier f
	timeToRecalcPath g
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/Goal bip
	flags a
	adjustedTickDelay (I)I a
	canContinueToUse ()Z b
	canUse ()Z a
	getFlags ()Ljava/util/EnumSet; j
	isInterruptable ()Z D_
	reducedTickDelay (I)I b
	requiresUpdateEveryTick ()Z E_
	setFlags (Ljava/util/EnumSet;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/Goal$Flag bip$a
	$VALUES e
	JUMP c
	LOOK b
	MOVE a
	TARGET d
	$values ()[Lnet/minecraft/world/entity/ai/goal/Goal$Flag; a
net/minecraft/world/entity/ai/goal/GoalSelector biq
	LOGGER a
	NO_GOAL b
	availableGoals d
	disabledFlags f
	lockedFlags c
	newGoalRate h
	profiler e
	tickCount g
	addGoal (ILnet/minecraft/world/entity/ai/goal/Goal;)V a
	disableControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;)V a
	enableControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;)V b
	getAvailableGoals ()Ljava/util/Set; c
	getRunningGoals ()Ljava/util/stream/Stream; d
	goalCanBeReplacedForAllFlags (Lnet/minecraft/world/entity/ai/goal/WrappedGoal;Ljava/util/Map;)Z a
	goalContainsAnyFlags (Lnet/minecraft/world/entity/ai/goal/WrappedGoal;Ljava/util/EnumSet;)Z a
	removeAllGoals ()V a
	removeGoal (Lnet/minecraft/world/entity/ai/goal/Goal;)V a
	setControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;Z)V a
	setNewGoalRate (I)V a
	tick ()V b
	tickRunningGoals (Z)V a
net/minecraft/world/entity/ai/goal/GolemRandomStrollInVillageGoal bir
	POI_SECTION_SCAN_RADIUS i
	RANDOM_POS_XY_DISTANCE k
	RANDOM_POS_Y_DISTANCE l
	VILLAGER_SCAN_RADIUS j
	doesVillagerWantGolem (Lnet/minecraft/world/entity/npc/Villager;)Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
	getPositionTowardsAnywhere ()Lnet/minecraft/world/phys/Vec3; k
	getPositionTowardsPoi ()Lnet/minecraft/world/phys/Vec3; m
	getPositionTowardsVillagerWhoWantsGolem ()Lnet/minecraft/world/phys/Vec3; l
	getRandomPoiWithinSection (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/core/BlockPos; a
	getRandomVillageSection ()Lnet/minecraft/core/SectionPos; n
net/minecraft/world/entity/ai/goal/InteractGoal bis
net/minecraft/world/entity/ai/goal/JumpGoal bit
net/minecraft/world/entity/ai/goal/LandOnOwnersShoulderGoal biu
	entity a
	isSittingOnShoulder c
	owner b
	canUse ()Z a
	isInterruptable ()Z D_
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/LeapAtTargetGoal biv
	mob a
	target b
	yd c
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/LlamaFollowCaravanGoal biw
	CARAVAN_LIMIT c
	distCheckCounter d
	llama a
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	firstIsLeashed (Lnet/minecraft/world/entity/animal/horse/Llama;I)Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/LookAtPlayerGoal bix
	DEFAULT_PROBABILITY a
	lookAt c
	lookAtContext g
	lookAtType f
	lookDistance d
	lookTime h
	mob b
	onlyHorizontal i
	probability e
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/LookAtTradingPlayerGoal biy
	villager h
	canUse ()Z a
net/minecraft/world/entity/ai/goal/MeleeAttackGoal biz
	COOLDOWN_BETWEEN_CAN_USE_CHECKS l
	attackInterval j
	followingTargetEvenIfNotSeen c
	lastCanUseCheck k
	mob a
	path d
	pathedTargetX e
	pathedTargetY f
	pathedTargetZ g
	speedModifier b
	ticksUntilNextAttack i
	ticksUntilNextPathRecalculation h
	canContinueToUse ()Z b
	canUse ()Z a
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;D)V a
	getAttackInterval ()I l
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
	getTicksUntilNextAttack ()I k
	isTimeToAttack ()Z i
	requiresUpdateEveryTick ()Z E_
	resetAttackCooldown ()V h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/MoveBackToVillageGoal bja
	MAX_XZ_DIST i
	MAX_Y_DIST j
	canUse ()Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal bjb
	canDealWithDoors h
	distanceToPoi g
	mob a
	onlyAtNight e
	path c
	poiPos d
	speedModifier b
	visited f
	canContinueToUse ()Z b
	canUse ()Z a
	hasNotVisited (Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	updateVisited ()V h
net/minecraft/world/entity/ai/goal/MoveToBlockGoal bjc
	GIVE_UP_TICKS g
	INTERVAL_TICKS i
	STAY_TICKS h
	blockPos e
	maxStayTicks j
	mob a
	nextStartTick c
	reachedTarget k
	searchRange l
	speedModifier b
	tryTicks d
	verticalSearchRange m
	verticalSearchStart f
	acceptedDistance ()D i
	canContinueToUse ()Z b
	canUse ()Z a
	findNearestBlock ()Z n
	getMoveToTarget ()Lnet/minecraft/core/BlockPos; k
	isReachedTarget ()Z m
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	moveMobToBlock ()V h
	nextStartTick (Lnet/minecraft/world/entity/PathfinderMob;)I a
	requiresUpdateEveryTick ()Z E_
	shouldRecalculatePath ()Z l
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/MoveTowardsRestrictionGoal bjd
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/MoveTowardsTargetGoal bje
	mob a
	speedModifier f
	target b
	wantedX c
	wantedY d
	wantedZ e
	within g
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/OcelotAttackGoal bjf
	attackTime c
	mob a
	target b
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z E_
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/OfferFlowerGoal bjg
	OFFER_TARGER_CONTEXT b
	OFFER_TICKS a
	golem c
	tick e
	villager d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/OpenDoorGoal bjh
	closeDoor a
	forgetTime b
	canContinueToUse ()Z b
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/PanicGoal bji
	WATER_CHECK_DISTANCE_VERTICAL a
	isRunning g
	mob b
	posX d
	posY e
	posZ f
	speedModifier c
	canContinueToUse ()Z b
	canUse ()Z a
	findRandomPosition ()Z i
	isRunning ()Z k
	lookForWater (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/core/BlockPos; a
	shouldPanic ()Z h
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/PathfindToRaidGoal bjj
	RECRUITMENT_SEARCH_TICK_DELAY a
	SPEED_MODIFIER b
	mob c
	recruitmentTick d
	canContinueToUse ()Z b
	canUse ()Z a
	recruitNearby (Lnet/minecraft/world/entity/raid/Raid;)V a
	tick ()V e
net/minecraft/world/entity/ai/goal/RandomLookAroundGoal bjk
	lookTime d
	mob a
	relX b
	relZ c
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z E_
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/RandomStrollGoal bjl
	DEFAULT_INTERVAL a
	checkNoActionTime i
	forceTrigger h
	interval g
	mob b
	speedModifier f
	wantedX c
	wantedY d
	wantedZ e
	canContinueToUse ()Z b
	canUse ()Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
	setInterval (I)V c
	start ()V c
	stop ()V d
	trigger ()V i
net/minecraft/world/entity/ai/goal/RandomSwimmingGoal bjm
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
net/minecraft/world/entity/ai/goal/RangedAttackGoal bjn
	attackIntervalMax h
	attackIntervalMin g
	attackRadius i
	attackRadiusSqr j
	attackTime d
	mob a
	rangedAttackMob b
	seeTime f
	speedModifier e
	target c
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z E_
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedBowAttackGoal bjo
	attackIntervalMin c
	attackRadiusSqr d
	attackTime e
	mob a
	seeTime f
	speedModifier b
	strafingBackwards h
	strafingClockwise g
	strafingTime i
	canContinueToUse ()Z b
	canUse ()Z a
	isHoldingBow ()Z h
	requiresUpdateEveryTick ()Z E_
	setMinAttackInterval (I)V c
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal bjp
	PATHFINDING_DELAY_RANGE a
	attackDelay g
	attackRadiusSqr e
	crossbowState c
	mob b
	seeTime f
	speedModifier d
	updatePathDelay h
	canContinueToUse ()Z b
	canRun ()Z k
	canUse ()Z a
	isHoldingCrossbow ()Z h
	isValidTarget ()Z i
	requiresUpdateEveryTick ()Z E_
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState bjp$a
	$VALUES e
	CHARGED c
	CHARGING b
	READY_TO_ATTACK d
	UNCHARGED a
	$values ()[Lnet/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState; a
net/minecraft/world/entity/ai/goal/RemoveBlockGoal bjq
	WAIT_AFTER_BLOCK_FOUND j
	blockToRemove g
	removerMob h
	ticksSinceReachedGoal i
	canUse ()Z a
	getPosWithBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/core/BlockPos; a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	playBreakSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	playDestroyProgressSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	start ()V c
	stop ()V d
	tick ()V e
	tryFindBlock ()Z o
net/minecraft/world/entity/ai/goal/RestrictSunGoal bjr
	mob a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal bjs
	horse a
	posX c
	posY d
	posZ e
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/SitWhenOrderedToGoal bjt
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/StrollThroughVillageGoal bju
	DISTANCE_THRESHOLD a
	interval c
	mob b
	wantedPos d
	canContinueToUse ()Z b
	canUse ()Z a
	moveRandomly ()V h
	tick ()V e
net/minecraft/world/entity/ai/goal/SwellGoal bjv
	creeper a
	target b
	canUse ()Z a
	requiresUpdateEveryTick ()Z E_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/TemptGoal bjw
	TEMP_TARGETING c
	calmDown k
	canScare n
	isRunning l
	items m
	mob a
	pRotX i
	pRotY j
	player b
	px f
	py g
	pz h
	speedModifier e
	targetingConditions d
	canContinueToUse ()Z b
	canScare ()Z h
	canUse ()Z a
	isRunning ()Z i
	shouldFollow (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/TradeWithPlayerGoal bjx
	mob a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/TryFindWaterGoal bjy
	mob a
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/UseItemGoal bjz
	canUseSelector c
	finishUsingSound d
	item b
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal bka
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
net/minecraft/world/entity/ai/goal/WaterAvoidingRandomStrollGoal bkb
	PROBABILITY i
	probability j
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
net/minecraft/world/entity/ai/goal/WrappedGoal bkc
	goal a
	isRunning c
	priority b
	adjustedTickDelay (I)I a
	canBeReplacedBy (Lnet/minecraft/world/entity/ai/goal/WrappedGoal;)Z a
	canContinueToUse ()Z b
	canUse ()Z a
	getFlags ()Ljava/util/EnumSet; j
	getGoal ()Lnet/minecraft/world/entity/ai/goal/Goal; k
	getPriority ()I i
	isInterruptable ()Z D_
	isRunning ()Z h
	requiresUpdateEveryTick ()Z E_
	setFlags (Ljava/util/EnumSet;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/ZombieAttackGoal bkd
	raiseArmTicks c
	zombie b
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/target/DefendVillageTargetGoal bkf
	attackTargeting c
	golem a
	potentialTarget b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/HurtByTargetGoal bkg
	ALERT_RANGE_Y b
	HURT_BY_TARGETING a
	alertSameType c
	timestamp d
	toIgnoreAlert j
	toIgnoreDamage i
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	alertOthers ()V h
	canUse ()Z a
	setAlertOthers ([Ljava/lang/Class;)Lnet/minecraft/world/entity/ai/goal/target/HurtByTargetGoal; a
	start ()V c
net/minecraft/world/entity/ai/goal/target/NearestAttackableTargetGoal bkh
	DEFAULT_RANDOM_INTERVAL i
	randomInterval b
	target c
	targetConditions d
	targetType a
	canUse ()Z a
	findTarget ()V h
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
	start ()V c
net/minecraft/world/entity/ai/goal/target/NearestAttackableWitchTargetGoal bki
	canAttack i
	canUse ()Z a
	setCanAttack (Z)V a
net/minecraft/world/entity/ai/goal/target/NearestHealableRaiderTargetGoal bkj
	DEFAULT_COOLDOWN i
	cooldown j
	canUse ()Z a
	decrementCooldown ()V k
	getCooldown ()I i
	start ()V c
net/minecraft/world/entity/ai/goal/target/NonTameRandomTargetGoal bkk
	tamableMob i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/ai/goal/target/OwnerHurtByTargetGoal bkl
	ownerLastHurtBy b
	tameAnimal a
	timestamp c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/OwnerHurtTargetGoal bkm
	ownerLastHurt b
	tameAnimal a
	timestamp c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/ResetUniversalAngerTargetGoal bkn
	ALERT_RANGE_Y a
	alertOthersOfSameType c
	lastHurtByPlayerTimestamp d
	mob b
	canUse ()Z a
	getNearbyMobsOfSameType ()Ljava/util/List; i
	start ()V c
	wasHurtByPlayer ()Z h
net/minecraft/world/entity/ai/goal/target/TargetGoal bko
	CANT_REACH_CACHE c
	CAN_REACH_CACHE b
	EMPTY_REACH_CACHE a
	mob e
	mustReach d
	mustSee f
	reachCache i
	reachCacheTime j
	targetMob g
	unseenMemoryTicks h
	unseenTicks k
	canAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;)Z a
	canContinueToUse ()Z b
	canReach (Lnet/minecraft/world/entity/LivingEntity;)Z a
	getFollowDistance ()D l
	setUnseenMemoryTicks (I)Lnet/minecraft/world/entity/ai/goal/target/TargetGoal; c
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/gossip/GossipContainer bkq
	DISCARD_THRESHOLD a
	gossips b
	add (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;I)V a
	decay ()V b
	getCountForType (Lnet/minecraft/world/entity/ai/gossip/GossipType;Ljava/util/function/DoublePredicate;)J a
	getGossipEntries ()Ljava/util/Map; a
	getOrCreate (Ljava/util/UUID;)Lnet/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips; a
	getReputation (Ljava/util/UUID;Ljava/util/function/Predicate;)I a
	mergeValuesForAddition (Lnet/minecraft/world/entity/ai/gossip/GossipType;II)I a
	mergeValuesForTransfer (II)I a
	remove (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	remove (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;I)V b
	remove (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	selectGossipsForTransfer (Lnet/minecraft/util/RandomSource;I)Ljava/util/Collection; a
	store (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
	transferFrom (Lnet/minecraft/world/entity/ai/gossip/GossipContainer;Lnet/minecraft/util/RandomSource;I)V a
	unpack ()Ljava/util/stream/Stream; c
	update (Lcom/mojang/serialization/Dynamic;)V a
net/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips bkq$a
	entries a
	decay ()V a
	isEmpty ()Z b
	makeSureValueIsntTooLowOrTooHigh (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	remove (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V b
	unpack (Ljava/util/UUID;)Ljava/util/stream/Stream; a
	weightedValue (Ljava/util/function/Predicate;)I a
net/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry bkq$b
	TAG_TARGET a
	TAG_TYPE b
	TAG_VALUE c
	target d
	type e
	value f
	load (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; a
	store (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
	weightedValue ()I a
net/minecraft/world/entity/ai/gossip/GossipType bkr
	$VALUES o
	BY_ID n
	MAJOR_NEGATIVE a
	MAJOR_POSITIVE d
	MINOR_NEGATIVE b
	MINOR_POSITIVE c
	REPUTATION_CHANGE_PER_EVENT f
	REPUTATION_CHANGE_PER_EVERLASTING_MEMORY g
	REPUTATION_CHANGE_PER_TRADE h
	TRADING e
	decayPerDay l
	decayPerTransfer m
	id i
	max k
	weight j
	$values ()[Lnet/minecraft/world/entity/ai/gossip/GossipType; a
	byId (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/gossip/GossipType; a
net/minecraft/world/entity/ai/memory/ExpirableValue bkt
	timeToLive b
	value a
	canExpire ()Z e
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getTimeToLive ()J b
	getValue ()Ljava/lang/Object; c
	hasExpired ()Z d
	of (Ljava/lang/Object;)Lnet/minecraft/world/entity/ai/memory/ExpirableValue; a
	of (Ljava/lang/Object;J)Lnet/minecraft/world/entity/ai/memory/ExpirableValue; a
	tick ()V a
net/minecraft/world/entity/ai/memory/MemoryModuleType bku
	ADMIRING_DISABLED ae
	ADMIRING_ITEM ab
	ANGRY_AT Z
	ATE_RECENTLY at
	ATTACK_COOLING_DOWN p
	ATTACK_TARGET o
	AVOID_TARGET z
	BREED_TARGET r
	CANT_REACH_WALK_TARGET_SINCE E
	CELEBRATE_LOCATION ag
	DANCING ah
	DIG_COOLDOWN aC
	DISABLE_WALK_TO_ADMIRE_ITEM ad
	DISTURBANCE_LOCATION ax
	DOORS_TO_CLOSE v
	DUMMY a
	GOLEM_DETECTED_RECENTLY F
	HAS_HUNTING_COOLDOWN S
	HEARD_BELL_TIME D
	HIDING_PLACE C
	HOME b
	HUNTED_RECENTLY af
	HURT_BY x
	HURT_BY_ENTITY y
	INTERACTABLE_DOORS u
	INTERACTION_TARGET q
	IS_EMERGING aA
	IS_IN_WATER V
	IS_PANICKING X
	IS_PREGNANT W
	IS_SNIFFING az
	IS_TEMPTED P
	ITEM_PICKUP_COOLDOWN_TICKS aN
	JOB_SITE c
	LAST_SLEPT G
	LAST_WOKEN H
	LAST_WORKED_AT_POI I
	LIKED_NOTEBLOCK_COOLDOWN_TICKS aM
	LIKED_NOTEBLOCK_POSITION aL
	LIKED_PLAYER aK
	LONG_JUMP_COOLDOWN_TICKS Q
	LONG_JUMP_MID_JUMP R
	LOOK_TARGET n
	MEETING_POINT e
	NEARBY_ADULT_PIGLINS al
	NEAREST_ATTACKABLE B
	NEAREST_BED w
	NEAREST_HOSTILE A
	NEAREST_LIVING_ENTITIES g
	NEAREST_PLAYERS j
	NEAREST_PLAYER_HOLDING_WANTED_ITEM as
	NEAREST_REPELLENT au
	NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD ak
	NEAREST_VISIBLE_ADULT J
	NEAREST_VISIBLE_ADULT_HOGLINS an
	NEAREST_VISIBLE_ADULT_PIGLIN ao
	NEAREST_VISIBLE_ADULT_PIGLINS am
	NEAREST_VISIBLE_ATTACKABLE_PLAYER l
	NEAREST_VISIBLE_BABY_HOGLIN aj
	NEAREST_VISIBLE_HUNTABLE_HOGLIN ai
	NEAREST_VISIBLE_LIVING_ENTITIES h
	NEAREST_VISIBLE_NEMESIS L
	NEAREST_VISIBLE_PLAYER k
	NEAREST_VISIBLE_WANTED_ITEM K
	NEAREST_VISIBLE_ZOMBIFIED ap
	PACIFIED av
	PATH t
	PLAY_DEAD_TICKS M
	POTENTIAL_JOB_SITE d
	RAM_COOLDOWN_TICKS T
	RAM_TARGET U
	RECENT_PROJECTILE ay
	RIDE_TARGET s
	ROAR_SOUND_COOLDOWN aD
	ROAR_SOUND_DELAY aB
	ROAR_TARGET aw
	SECONDARY_JOB_SITE f
	SNIFF_COOLDOWN aE
	SONIC_BOOM_COOLDOWN aH
	SONIC_BOOM_SOUND_COOLDOWN aI
	SONIC_BOOM_SOUND_DELAY aJ
	TEMPTATION_COOLDOWN_TICKS O
	TEMPTING_PLAYER N
	TIME_TRYING_TO_REACH_ADMIRE_ITEM ac
	TOUCH_COOLDOWN aF
	UNIVERSAL_ANGER aa
	UNREACHABLE_TONGUE_TARGETS Y
	VIBRATION_COOLDOWN aG
	VISIBLE_ADULT_HOGLIN_COUNT ar
	VISIBLE_ADULT_PIGLIN_COUNT aq
	VISIBLE_VILLAGER_BABIES i
	WALK_TARGET m
	codec aO
	getCodec ()Ljava/util/Optional; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
net/minecraft/world/entity/ai/memory/MemoryStatus bkv
	$VALUES d
	REGISTERED c
	VALUE_ABSENT b
	VALUE_PRESENT a
	$values ()[Lnet/minecraft/world/entity/ai/memory/MemoryStatus; a
net/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities bkw
	EMPTY a
	lineOfSightTest c
	nearbyEntities b
	contains (Ljava/util/function/Predicate;)Z d
	contains (Lnet/minecraft/world/entity/LivingEntity;)Z a
	empty ()Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities; a
	find (Ljava/util/function/Predicate;)Ljava/util/stream/Stream; c
	findAll (Ljava/util/function/Predicate;)Ljava/lang/Iterable; b
	findClosest (Ljava/util/function/Predicate;)Ljava/util/Optional; a
net/minecraft/world/entity/ai/memory/WalkTarget bkx
	closeEnoughDist c
	speedModifier b
	target a
	getCloseEnoughDist ()I c
	getSpeedModifier ()F b
	getTarget ()Lnet/minecraft/world/entity/ai/behavior/PositionTracker; a
net/minecraft/world/entity/ai/navigation/AmphibiousPathNavigation bkz
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	canUpdatePath ()Z a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getGroundY (Lnet/minecraft/world/phys/Vec3;)D a
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	setCanFloat (Z)V a
net/minecraft/world/entity/ai/navigation/FlyingPathNavigation bla
	canOpenDoors ()Z e
	canPassDoors ()Z d
	canUpdatePath ()Z a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	setCanOpenDoors (Z)V b
	setCanPassDoors (Z)V c
	tick ()V c
net/minecraft/world/entity/ai/navigation/GroundPathNavigation blb
	avoidSun p
	canOpenDoors ()Z f
	canPassDoors ()Z e
	canUpdatePath ()Z a
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getSurfaceY ()I t
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	hasValidPathType (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z a
	setAvoidSun (Z)V d
	setCanOpenDoors (Z)V b
	setCanPassDoors (Z)V c
	trimPath ()V F_
net/minecraft/world/entity/ai/navigation/PathNavigation blc
	MAX_TIME_RECOMPUTE p
	hasDelayedRecomputation m
	isStuck u
	lastStuckCheck f
	lastStuckCheckPos g
	lastTimeoutCheck j
	level b
	maxDistanceToWaypoint l
	maxVisitedNodesMultiplier s
	mob a
	nodeEvaluator o
	path c
	pathFinder t
	reachRange r
	speedModifier d
	targetPos q
	tick e
	timeLastRecompute n
	timeoutCachedNode h
	timeoutLimit k
	timeoutTimer i
	canFloat ()Z q
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	canUpdatePath ()Z a
	createPath (DDDI)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/Set;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/Set;IZI)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/Set;IZIF)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/stream/Stream;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/core/BlockPos;II)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	doStuckDetection (Lnet/minecraft/world/phys/Vec3;)V b
	followThePath ()V k
	getGroundY (Lnet/minecraft/world/phys/Vec3;)D a
	getMaxDistanceToWaypoint ()F r
	getNodeEvaluator ()Lnet/minecraft/world/level/pathfinder/NodeEvaluator; p
	getPath ()Lnet/minecraft/world/level/pathfinder/Path; j
	getTargetPos ()Lnet/minecraft/core/BlockPos; h
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	isClearForMovementBetween (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	isDone ()Z l
	isInLiquid ()Z o
	isInProgress ()Z m
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	isStuck ()Z s
	moveTo (DDDD)Z a
	moveTo (Lnet/minecraft/world/entity/Entity;D)Z a
	moveTo (Lnet/minecraft/world/level/pathfinder/Path;D)Z a
	recomputePath ()V i
	resetMaxVisitedNodesMultiplier ()V g
	resetStuckTimeout ()V f
	setCanFloat (Z)V a
	setMaxVisitedNodesMultiplier (F)V a
	setSpeedModifier (D)V a
	shouldRecomputePath (Lnet/minecraft/core/BlockPos;)Z b
	shouldTargetNextNodeInDirection (Lnet/minecraft/world/phys/Vec3;)Z c
	stop ()V n
	tick ()V c
	timeoutPath ()V e
	trimPath ()V F_
net/minecraft/world/entity/ai/navigation/WallClimberNavigation bld
	pathToPosition p
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	moveTo (Lnet/minecraft/world/entity/Entity;D)Z a
	tick ()V c
net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation ble
	allowBreaching p
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	canUpdatePath ()Z a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getGroundY (Lnet/minecraft/world/phys/Vec3;)D a
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	setCanFloat (Z)V a
net/minecraft/world/entity/ai/sensing/AdultSensor blh
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
	setNearestVisibleAdult (Lnet/minecraft/world/entity/AgeableMob;Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities;)V a
net/minecraft/world/entity/ai/sensing/AxolotlAttackablesSensor bli
	TARGET_DETECTION_DISTANCE a
	getMemory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; b
	isClose (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z f
	isHostileTarget (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isHuntTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z e
	isMatchingEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/sensing/DummySensor blj
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/FrogAttackablesSensor blk
	TARGET_DETECTION_DISTANCE a
	getMemory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; b
	isMatchingEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isUnreachableAttackTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z e
net/minecraft/world/entity/ai/sensing/GolemSensor bll
	GOLEM_SCAN_RATE a
	MEMORY_TIME_TO_LIVE c
	checkForNearbyGolem (Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	golemDetected (Lnet/minecraft/world/entity/LivingEntity;)V b
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/HoglinSpecificSensor blm
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)V a
	findNearestRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; b
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/HurtBySensor bln
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/IsInWaterSensor blo
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestBedSensor blp
	BATCH_SIZE c
	CACHE_TIMEOUT a
	RATE d
	batchCache e
	lastUpdate g
	triedCount f
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestItemSensor blq
	MAX_DISTANCE_TO_WANTED_ITEM a
	XZ_RANGE c
	Y_RANGE d
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor blr
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	radiusXZ ()I b
	radiusY ()I c
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestVisibleLivingEntitySensor bls
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	getMemory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; b
	getNearestEntity (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; b
	getVisibleEntities (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	isMatchingEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/PiglinBruteSpecificSensor blt
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/PiglinSpecificSensor blu
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	findNearestRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; c
	isValidRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/PlayerSensor blv
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/SecondaryPoiSensor blw
	SCAN_RATE a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/Sensing blx
	mob a
	seen b
	unseen c
	hasLineOfSight (Lnet/minecraft/world/entity/Entity;)Z a
	tick ()V a
net/minecraft/world/entity/ai/sensing/Sensor bly
	ATTACK_TARGET_CONDITIONS f
	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_AND_LINE_OF_SIGHT i
	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING g
	ATTACK_TARGET_CONDITIONS_IGNORE_LINE_OF_SIGHT h
	DEFAULT_SCAN_RATE c
	RANDOM a
	TARGETING_RANGE b
	TARGET_CONDITIONS d
	TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING e
	scanRate j
	timeToTick k
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	isEntityAttackable (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z c
	isEntityAttackableIgnoringLineOfSight (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z d
	isEntityTargetable (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z b
	requires ()Ljava/util/Set; a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/ai/sensing/SensorType blz
	AXOLOTL_ATTACKABLES o
	AXOLOTL_TEMPTATIONS p
	DUMMY a
	FROG_ATTACKABLES s
	FROG_TEMPTATIONS r
	GOAT_TEMPTATIONS q
	GOLEM_DETECTED j
	HOGLIN_SPECIFIC_SENSOR m
	HURT_BY f
	IS_IN_WATER t
	NEAREST_ADULT n
	NEAREST_BED e
	NEAREST_ITEMS b
	NEAREST_LIVING_ENTITIES c
	NEAREST_PLAYERS d
	PIGLIN_BRUTE_SPECIFIC_SENSOR l
	PIGLIN_SPECIFIC_SENSOR k
	SECONDARY_POIS i
	VILLAGER_BABIES h
	VILLAGER_HOSTILES g
	WARDEN_ENTITY_SENSOR u
	factory v
	create ()Lnet/minecraft/world/entity/ai/sensing/Sensor; a
	register (Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/world/entity/ai/sensing/SensorType; a
net/minecraft/world/entity/ai/sensing/TemptingSensor bma
	TEMPTATION_RANGE a
	TEMPT_TARGETING c
	temptations d
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)V a
	isTemptation (Lnet/minecraft/world/item/ItemStack;)Z a
	playerHoldingTemptation (Lnet/minecraft/world/entity/player/Player;)Z a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor bmb
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	getNearestVillagerBabies (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/List; a
	getVisibleEntities (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities; c
	isVillagerBaby (Lnet/minecraft/world/entity/LivingEntity;)Z b
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor bmc
	ACCEPTABLE_DISTANCE_FROM_HOSTILES a
	getMemory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; b
	isClose (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z e
	isHostile (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isMatchingEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/sensing/WardenEntitySensor bmd
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;)V a
	getClosest (Lnet/minecraft/world/entity/monster/warden/Warden;Ljava/util/function/Predicate;)Ljava/util/Optional; a
	radiusXZ ()I b
	radiusY ()I c
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/targeting/TargetingConditions bmf
	DEFAULT a
	MIN_VISIBILITY_DISTANCE_FOR_INVISIBLE_TARGET b
	checkLineOfSight e
	isCombat c
	range d
	selector g
	testInvisible f
	copy ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; c
	forCombat ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	forNonCombat ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; b
	ignoreInvisibilityTesting ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; e
	ignoreLineOfSight ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; d
	range (D)Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	selector (Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	test (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/util/AirAndWaterRandomPos bmh
	generateRandomPos (Lnet/minecraft/world/entity/PathfinderMob;IIIDDDZ)Lnet/minecraft/core/BlockPos; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;IIIDDD)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/util/AirRandomPos bmi
	getPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IIILnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/util/DefaultRandomPos bmj
	generateRandomPosTowardDirection (Lnet/minecraft/world/entity/PathfinderMob;IZLnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; a
	getPosAway (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	getPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/util/GoalUtils bmk
	hasGroundPathNavigation (Lnet/minecraft/world/entity/Mob;)Z a
	hasMalus (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z b
	isNotStable (Lnet/minecraft/world/entity/ai/navigation/PathNavigation;Lnet/minecraft/core/BlockPos;)Z a
	isOutsideLimits (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	isRestricted (ZLnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z a
	isSolid (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z c
	isWater (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z a
	mobRestricted (Lnet/minecraft/world/entity/PathfinderMob;I)Z a
net/minecraft/world/entity/ai/util/HoverRandomPos bml
	getPos (Lnet/minecraft/world/entity/PathfinderMob;IIDDFII)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/util/LandRandomPos bmm
	generateRandomPosTowardDirection (Lnet/minecraft/world/entity/PathfinderMob;IZLnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;IILjava/util/function/ToDoubleFunction;)Lnet/minecraft/world/phys/Vec3; a
	getPosAway (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; b
	getPosInDirection (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;Z)Lnet/minecraft/world/phys/Vec3; a
	getPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	movePosUpOutOfSolid (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/entity/ai/util/RandomPos bmn
	RANDOM_POS_ATTEMPTS a
	generateRandomDirection (Lnet/minecraft/util/RandomSource;II)Lnet/minecraft/core/BlockPos; a
	generateRandomDirectionWithinRadians (Lnet/minecraft/util/RandomSource;IIIDDD)Lnet/minecraft/core/BlockPos; a
	generateRandomPos (Ljava/util/function/Supplier;Ljava/util/function/ToDoubleFunction;)Lnet/minecraft/world/phys/Vec3; a
	generateRandomPos (Lnet/minecraft/world/entity/PathfinderMob;Ljava/util/function/Supplier;)Lnet/minecraft/world/phys/Vec3; a
	generateRandomPosTowardDirection (Lnet/minecraft/world/entity/PathfinderMob;ILnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	moveUpOutOfSolid (Lnet/minecraft/core/BlockPos;ILjava/util/function/Predicate;)Lnet/minecraft/core/BlockPos; a
	moveUpToAboveSolid (Lnet/minecraft/core/BlockPos;IILjava/util/function/Predicate;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/entity/ai/village/ReputationEventType bmp
	GOLEM_KILLED b
	TRADE e
	VILLAGER_HURT c
	VILLAGER_KILLED d
	ZOMBIE_VILLAGER_CURED a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/village/ReputationEventType; a
net/minecraft/world/entity/ai/village/VillageSiege bmq
	LOGGER a
	hasSetupSiege b
	nextSpawnTime e
	siegeState c
	spawnX f
	spawnY g
	spawnZ h
	zombiesToSpawn d
	findRandomSpawnPos (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
	trySpawn (Lnet/minecraft/server/level/ServerLevel;)V b
	tryToSetupSiege (Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/ai/village/VillageSiege$State bmq$a
	$VALUES d
	SIEGE_CAN_ACTIVATE a
	SIEGE_DONE c
	SIEGE_TONIGHT b
	$values ()[Lnet/minecraft/world/entity/ai/village/VillageSiege$State; a
net/minecraft/world/entity/ai/village/poi/PoiManager bms
	MAX_VILLAGE_DISTANCE a
	VILLAGE_SECTION_SIZE b
	distanceTracker d
	loadedChunks e
	add (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Holder;)V a
	checkConsistencyWithBlocks (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/LevelChunkSection;)V a
	ensureLoadedAndValid (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;I)V a
	exists (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	existsAtPosition (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;)Z a
	find (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; d
	findAll (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	findAllClosestFirstWithType (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; c
	findAllWithType (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; b
	findClosest (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; e
	findClosest (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; d
	findClosestWithType (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; e
	getCountInRange (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)J a
	getFreeTickets (Lnet/minecraft/core/BlockPos;)I d
	getInChunk (Ljava/util/function/Predicate;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	getInRange (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; c
	getInSquare (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; b
	getRandom (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;Lnet/minecraft/core/BlockPos;ILnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	getType (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; c
	isVillageCenter (J)Z g
	mayHavePoi (Lnet/minecraft/world/level/chunk/LevelChunkSection;)Z a
	onSectionLoad (J)V b
	release (Lnet/minecraft/core/BlockPos;)Z b
	remove (Lnet/minecraft/core/BlockPos;)V a
	sectionsToVillage (Lnet/minecraft/core/SectionPos;)I a
	setDirty (J)V a
	take (Ljava/util/function/Predicate;Ljava/util/function/BiPredicate;Lnet/minecraft/core/BlockPos;I)Ljava/util/Optional; a
	tick (Ljava/util/function/BooleanSupplier;)V a
	updateFromSection (Lnet/minecraft/world/level/chunk/LevelChunkSection;Lnet/minecraft/core/SectionPos;Ljava/util/function/BiConsumer;)V a
net/minecraft/world/entity/ai/village/poi/PoiManager$DistanceTracker bms$a
	levels b
	getLevel (J)I c
	getLevelFromSource (J)I b
	runAllUpdates ()V a
	setLevel (JI)V a
net/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy bms$b
	$VALUES e
	ANY c
	HAS_SPACE a
	IS_OCCUPIED b
	test d
	$values ()[Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy; b
	getTest ()Ljava/util/function/Predicate; a
net/minecraft/world/entity/ai/village/poi/PoiRecord bmt
	freeTickets c
	poiType b
	pos a
	setDirty d
	acquireTicket ()Z b
	codec (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; a
	getFreeTickets ()I a
	getPoiType ()Lnet/minecraft/core/Holder; g
	getPos ()Lnet/minecraft/core/BlockPos; f
	hasSpace ()Z d
	isOccupied ()Z e
	releaseTicket ()Z c
net/minecraft/world/entity/ai/village/poi/PoiSection bmu
	LOGGER a
	byType c
	isValid e
	records b
	setDirty d
	add (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Holder;)V a
	add (Lnet/minecraft/world/entity/ai/village/poi/PoiRecord;)Z a
	clear ()V b
	codec (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; a
	exists (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	getFreeTickets (Lnet/minecraft/core/BlockPos;)I b
	getPoiRecord (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; e
	getRecords (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	getType (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; d
	isValid ()Z a
	refresh (Ljava/util/function/Consumer;)V a
	release (Lnet/minecraft/core/BlockPos;)Z c
	remove (Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/entity/ai/village/poi/PoiType bmv
	NONE a
	matchingStates b
	maxTickets c
	validRange d
	is (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	matchingStates ()Ljava/util/Set; a
	maxTickets ()I b
	validRange ()I c
net/minecraft/world/entity/ai/village/poi/PoiTypes bmw
	ALL_STATES u
	ARMORER a
	BEDS v
	BEEHIVE p
	BEE_NEST q
	BUTCHER b
	CARTOGRAPHER c
	CAULDRONS w
	CLERIC d
	FARMER e
	FISHERMAN f
	FLETCHER g
	HOME n
	LEATHERWORKER h
	LIBRARIAN i
	LIGHTNING_ROD t
	LODESTONE s
	MASON j
	MEETING o
	NETHER_PORTAL r
	SHEPHERD k
	TOOLSMITH l
	TYPE_BY_STATE x
	WEAPONSMITH m
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/entity/ai/village/poi/PoiType; a
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	forState (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; a
	getBlockStates (Lnet/minecraft/world/level/block/Block;)Ljava/util/Set; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;Ljava/util/Set;II)Lnet/minecraft/world/entity/ai/village/poi/PoiType; a
	registerBlockStates (Lnet/minecraft/core/Holder;)V a
net/minecraft/world/entity/ambient/AmbientCreature bmy
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/entity/ambient/Bat bmz
	BAT_RESTING_TARGETING bW
	DATA_ID_FLAGS d
	FLAG_RESTING e
	FLAP_DEGREES_PER_TICK b
	TICKS_PER_FLAP c
	targetPosition bX
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkBatSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	customServerAiStep ()V T
	defineSynchedData ()V a_
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aO
	getSoundVolume ()F eC
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVoicePitch ()F eD
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFlapping ()Z aL
	isHalloween ()Z t
	isIgnoringBlockTriggers ()Z cm
	isPushable ()Z bl
	isResting ()Z q
	pushEntities ()V eN
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setResting (Z)V v
	tick ()V k
net/minecraft/world/entity/animal/AbstractFish bnb
	FROM_BUCKET b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	canRandomSwim ()Z fJ
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	fromBucket ()Z q
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fK
	getMaxSpawnClusterSize ()I fo
	getPickupSound ()Lnet/minecraft/sounds/SoundEvent; t
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aG
	loadFromBucketTag (Lnet/minecraft/nbt/CompoundTag;)V c
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z P
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V m
	setFromBucket (Z)V v
	travel (Lnet/minecraft/world/phys/Vec3;)V g
net/minecraft/world/entity/animal/AbstractFish$FishMoveControl bnb$a
	fish l
	tick ()V a
net/minecraft/world/entity/animal/AbstractFish$FishSwimGoal bnb$b
	fish i
	canUse ()Z a
net/minecraft/world/entity/animal/AbstractGolem bnc
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAmbientSoundInterval ()I J
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	removeWhenFarAway (D)Z h
net/minecraft/world/entity/animal/AbstractSchoolingFish bnd
	leader b
	schoolSize c
	addFollower ()V fS
	addFollowers (Ljava/util/stream/Stream;)V a
	canBeFollowed ()Z fO
	canRandomSwim ()Z fJ
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getMaxSchoolSize ()I fL
	getMaxSpawnClusterSize ()I fo
	hasFollowers ()Z fP
	inRangeOfLeader ()Z fQ
	isFollower ()Z fM
	pathToLeader ()V fR
	registerGoals ()V u
	removeFollower ()V fT
	startFollowing (Lnet/minecraft/world/entity/animal/AbstractSchoolingFish;)Lnet/minecraft/world/entity/animal/AbstractSchoolingFish; a
	stopFollowing ()V fN
	tick ()V k
net/minecraft/world/entity/animal/AbstractSchoolingFish$SchoolSpawnGroupData bnd$a
	leader a
net/minecraft/world/entity/animal/Animal bne
	PARENT_AGE_AFTER_BREEDING bZ
	inLove bX
	loveCause bY
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	canFallInLove ()Z fM
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	checkAnimalSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	customServerAiStep ()V T
	getAmbientSoundInterval ()I J
	getExperienceReward ()I dO
	getInLoveTime ()I fN
	getLoveCause ()Lnet/minecraft/server/level/ServerPlayer; fO
	getMyRidingOffset ()D bs
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isBrightEnoughToSpawn (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isInLove ()Z fP
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	resetLove ()V fQ
	setInLove (Lnet/minecraft/world/entity/player/Player;)V f
	setInLoveTime (I)V s
	spawnChildFromBreeding (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;)V a
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/animal/Bee bnf
	COOLDOWN_BEFORE_LOCATING_NEW_FLOWER cH
	COOLDOWN_BEFORE_LOCATING_NEW_HIVE cF
	DATA_FLAGS_ID ch
	DATA_REMAINING_ANGER_TIME ci
	FLAG_HAS_NECTAR cl
	FLAG_HAS_STUNG ck
	FLAG_ROLL cj
	FLAP_DEGREES_PER_TICK bX
	HIVE_CLOSE_ENOUGH_DISTANCE cu
	HIVE_SEARCH_DISTANCE cw
	MAX_CROPS_GROWABLE cq
	MIN_ATTACK_DIST cp
	PATHFIND_TO_HIVE_WHEN_CLOSER_THAN cv
	PERSISTENT_ANGER_TIME cx
	POISON_SECONDS_HARD cs
	POISON_SECONDS_NORMAL cr
	STING_DEATH_COUNTDOWN cm
	TAG_CANNOT_ENTER_HIVE_TICKS cb
	TAG_CROPS_GROWN_SINCE_POLLINATION ca
	TAG_FLOWER_POS cf
	TAG_HAS_NECTAR ce
	TAG_HAS_STUNG cd
	TAG_HIVE_POS cg
	TAG_TICKS_SINCE_POLLINATION cc
	TICKS_BEFORE_GOING_TO_KNOWN_FLOWER cn
	TICKS_PER_FLAP bY
	TICKS_WITHOUT_NECTAR_BEFORE_GOING_HOME co
	TOO_FAR_DISTANCE ct
	beePollinateGoal cL
	goToHiveGoal cM
	goToKnownFlowerGoal cN
	hivePos cK
	numCropsGrownSincePollination cE
	persistentAngerTarget cy
	remainingCooldownBeforeLocatingNewFlower cI
	remainingCooldownBeforeLocatingNewHive cG
	rollAmount cz
	rollAmountO cA
	savedFlowerPos cJ
	stayOutOfHiveCountdown cD
	ticksWithoutNectarSinceExitingHive cC
	timeSinceSting cB
	underWaterTicks cO
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	closerThan (Lnet/minecraft/core/BlockPos;I)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fW
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	customServerAiStep ()V T
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doesHiveHaveSpace (Lnet/minecraft/core/BlockPos;)Z i
	dropOffNectar ()V fY
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBlacklistedHives ()Ljava/util/List; fK
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Bee; b
	getCropsGrownSincePollination ()I gd
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getFlag (I)Z u
	getGoalSelector ()Lnet/minecraft/world/entity/ai/goal/GoalSelector; fT
	getHivePos ()Lnet/minecraft/core/BlockPos; fS
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cB
	getMobType ()Lnet/minecraft/world/entity/MobType; ey
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getRollAmount (F)F y
	getSavedFlowerPos ()Lnet/minecraft/core/BlockPos; q
	getSoundVolume ()F eC
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTravellingTicks ()I fJ
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasHive ()Z fR
	hasNectar ()Z fU
	hasSavedFlowerPos ()Z t
	hasStung ()Z fV
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	incrementNumCropsGrownSincePollination ()V gf
	isFlapping ()Z aL
	isFlowerValid (Lnet/minecraft/core/BlockPos;)Z k
	isFlying ()Z fX
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isHiveNearFire ()Z gc
	isHiveValid ()Z gg
	isRolling ()Z gh
	isTiredOfLookingForNectar ()Z fZ
	isTooFarAway (Lnet/minecraft/core/BlockPos;)Z j
	jumpInLiquid (Lnet/minecraft/tags/TagKey;)V c
	pathfindRandomlyTowards (Lnet/minecraft/core/BlockPos;)V h
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	resetNumCropsGrownSincePollination ()V ge
	resetTicksWithoutNectarSinceExitingHive ()V fL
	sendDebugPackets ()V R
	setFlag (IZ)V d
	setHasNectar (Z)V v
	setHasStung (Z)V w
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setRolling (Z)V x
	setSavedFlowerPos (Lnet/minecraft/core/BlockPos;)V g
	setStayOutOfHiveCountdown (I)V t
	spawnFluidParticle (Lnet/minecraft/world/level/Level;DDDDDLnet/minecraft/core/particles/ParticleOptions;)V a
	startPersistentAngerTimer ()V c
	tick ()V k
	updateRollAmount ()V gb
	wantsToEnterHive ()Z ga
net/minecraft/world/entity/animal/Bee$BaseBeeGoal bnf$a
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeAttackGoal bnf$b
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeBecomeAngryTargetGoal bnf$c
	beeCanTarget ()Z i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeEnterHiveGoal bnf$d
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	start ()V c
net/minecraft/world/entity/animal/Bee$BeeGoToHiveGoal bnf$e
	MAX_BLACKLISTED_TARGETS e
	MAX_TRAVELLING_TICKS b
	TICKS_BEFORE_HIVE_DROP h
	blacklistedTargets f
	lastPath g
	ticksStuck i
	travellingTicks d
	blacklistTarget (Lnet/minecraft/core/BlockPos;)V c
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	canContinueToUse ()Z b
	canUse ()Z a
	clearBlacklist ()V k
	dropAndBlacklistHive ()V l
	dropHive ()V m
	hasReachedTarget (Lnet/minecraft/core/BlockPos;)Z d
	isTargetBlacklisted (Lnet/minecraft/core/BlockPos;)Z b
	pathfindDirectlyTowards (Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeGoToKnownFlowerGoal bnf$f
	MAX_TRAVELLING_TICKS c
	travellingTicks d
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
	wantsToGoToKnownFlower ()Z k
net/minecraft/world/entity/animal/Bee$BeeGrowCropGoal bnf$g
	GROW_CHANCE b
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeHurtByOtherGoal bnf$h
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/Bee$BeeLocateHiveGoal bnf$i
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	findNearbyHivesWithSpace ()Ljava/util/List; k
	start ()V c
net/minecraft/world/entity/animal/Bee$BeeLookControl bnf$j
	resetXRotOnTick ()Z c
	tick ()V a
net/minecraft/world/entity/animal/Bee$BeePollinateGoal bnf$k
	ARRIVAL_THRESHOLD g
	HOVER_HEIGHT_WITHIN_FLOWER j
	HOVER_POS_OFFSET k
	MAX_FIND_FLOWER_RETRY_COOLDOWN e
	MAX_POLLINATING_TICKS q
	MIN_FIND_FLOWER_RETRY_COOLDOWN d
	MIN_POLLINATION_TICKS c
	POSITION_CHANGE_CHANCE h
	SPEED_MODIFIER i
	VALID_POLLINATION_BLOCKS f
	hoverPos o
	lastSoundPlayedTick m
	pollinating n
	pollinatingTicks p
	successfulPollinatingTicks l
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	findNearbyFlower ()Ljava/util/Optional; p
	findNearestBlock (Ljava/util/function/Predicate;D)Ljava/util/Optional; a
	getOffset ()F o
	hasPollinatedLongEnough ()Z k
	isPollinating ()Z l
	requiresUpdateEveryTick ()Z E_
	setWantedPos ()V n
	start ()V c
	stop ()V d
	stopPollinating ()V m
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeWanderGoal bnf$l
	WANDER_THRESHOLD b
	canContinueToUse ()Z b
	canUse ()Z a
	findPos ()Lnet/minecraft/world/phys/Vec3; h
	start ()V c
net/minecraft/world/entity/animal/Bucketable bng
	bucketMobPickup (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	fromBucket ()Z q
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getPickupSound ()Lnet/minecraft/sounds/SoundEvent; t
	loadDefaultDataFromBucketTag (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/nbt/CompoundTag;)V a
	loadFromBucketTag (Lnet/minecraft/nbt/CompoundTag;)V c
	saveDefaultDataToBucketTag (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/item/ItemStack;)V a
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V m
	setFromBucket (Z)V v
net/minecraft/world/entity/animal/Cat bnh
	DATA_COLLAR_COLOR ch
	DATA_VARIANT_ID ce
	IS_LYING cf
	RELAX_STATE_ONE cg
	SPRINT_SPEED_MOD cc
	TEMPT_INGREDIENT cd
	TEMPT_SPEED_MOD ca
	WALK_SPEED_MOD cb
	avoidPlayersGoal ci
	lieDownAmount ck
	lieDownAmountO cl
	lieDownAmountOTail cn
	lieDownAmountTail cm
	relaxStateOneAmount co
	relaxStateOneAmountO cp
	temptGoal cj
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fX
	customServerAiStep ()V T
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAmbientSoundInterval ()I J
	getAttackDamage ()F fY
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Cat; b
	getCatVariant ()Lnet/minecraft/world/entity/animal/CatVariant; fS
	getCollarColor ()Lnet/minecraft/world/item/DyeColor; fV
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLieDownAmount (F)F y
	getLieDownAmountTail (F)F z
	getRelaxStateOneAmount (F)F A
	getResourceLocation ()Lnet/minecraft/resources/ResourceLocation; fR
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleLieDown ()V fZ
	hiss ()V fW
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isLying ()Z fT
	isRelaxStateOne ()Z fU
	isSteppingCarefully ()Z bM
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTameGoals ()V t
	registerGoals ()V u
	removeWhenFarAway (D)Z h
	setCatVariant (Lnet/minecraft/world/entity/animal/CatVariant;)V a
	setCollarColor (Lnet/minecraft/world/item/DyeColor;)V a
	setLying (Z)V z
	setRelaxStateOne (Z)V A
	tick ()V k
	updateLieDownAmount ()V ga
	updateRelaxStateOneAmount ()V gb
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/animal/Cat$CatAvoidEntityGoal bnh$a
	cat i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Cat$CatRelaxOnOwnerGoal bnh$b
	cat a
	goalPos c
	onBedTicks d
	ownerPlayer b
	canContinueToUse ()Z b
	canUse ()Z a
	giveMorningGift ()V i
	spaceIsOccupied ()Z h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Cat$CatTemptGoal bnh$c
	cat d
	selectedPlayer c
	canScare ()Z h
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/animal/CatVariant bni
	ALL_BLACK k
	BLACK b
	BRITISH_SHORTHAIR e
	CALICO f
	JELLIE j
	PERSIAN g
	RAGDOLL h
	RED c
	SIAMESE d
	TABBY a
	WHITE i
	texture l
	register (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/world/entity/animal/CatVariant; a
	texture ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/entity/animal/Chicken bnj
	FOOD_ITEMS cf
	eggTime cd
	flap bX
	flapSpeed bY
	flapping cc
	isChickenJockey ce
	nextFlap cg
	oFlap cb
	oFlapSpeed ca
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Chicken; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getExperienceReward ()I dO
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	isChickenJockey ()Z t
	isFlapping ()Z aL
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	onFlap ()V aK
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	positionRider (Lnet/minecraft/world/entity/Entity;)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	removeWhenFarAway (D)Z h
	setChickenJockey (Z)V v
net/minecraft/world/entity/animal/Cod bnk
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fK
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
net/minecraft/world/entity/animal/Cow bnl
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Cow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getSoundVolume ()F eC
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	registerGoals ()V u
net/minecraft/world/entity/animal/Dolphin bnm
	ALLOWED_ITEMS c
	GOT_FISH e
	MOISTNESS_LEVEL bX
	SWIM_WITH_PLAYER_TARGETING bY
	TOTAL_AIR_SUPPLY b
	TOTAL_MOISTNESS_LEVEL bZ
	TREASURE_POS d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBreatheUnderwater ()Z dB
	canRide (Lnet/minecraft/world/entity/Entity;)Z l
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	closeToNextPos ()Z fK
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fJ
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxAirSupply ()I bZ
	getMaxHeadXRot ()I U
	getMaxHeadYRot ()I V
	getMoistnessLevel ()I t
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aG
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aH
	getTreasurePos ()Lnet/minecraft/core/BlockPos; n
	gotFish ()Z q
	handleAirSupply (I)V a
	handleEntityEvent (B)V a
	increaseAirSupply (I)I n
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setGotFish (Z)V v
	setMoisntessLevel (I)V b
	setTreasurePos (Lnet/minecraft/core/BlockPos;)V g
	tick ()V k
	travel (Lnet/minecraft/world/phys/Vec3;)V g
net/minecraft/world/entity/animal/Dolphin$DolphinSwimToTreasureGoal bnm$a
	dolphin a
	stuck b
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z D_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Dolphin$DolphinSwimWithPlayerGoal bnm$b
	dolphin a
	player c
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Dolphin$PlayWithItemsGoal bnm$c
	cooldown b
	canUse ()Z a
	drop (Lnet/minecraft/world/item/ItemStack;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/FlyingAnimal bnn
	isFlying ()Z fX
net/minecraft/world/entity/animal/Fox bno
	ALLOWED_ITEMS cj
	AVOID_PLAYERS cm
	DATA_FLAGS_ID cc
	DATA_TRUSTED_ID_0 ch
	DATA_TRUSTED_ID_1 ci
	DATA_TYPE_ID cb
	FLAG_CROUCHING bX
	FLAG_DEFENDING cg
	FLAG_FACEPLANTED cf
	FLAG_INTERESTED bY
	FLAG_POUNCING ca
	FLAG_SITTING cd
	FLAG_SLEEPING ce
	MIN_TICKS_BEFORE_EAT cn
	STALKABLE_PREY cl
	TRUSTED_TARGET_SELECTOR ck
	crouchAmount ct
	crouchAmountO cu
	fishTargetGoal cq
	interestedAngle cr
	interestedAngleO cs
	landTargetGoal co
	ticksSinceEaten cv
	turtleEggTargetGoal cp
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addTrustedUUID (Ljava/util/UUID;)V b
	aiStep ()V w_
	calculateFallDamage (FF)I d
	canEat (Lnet/minecraft/world/item/ItemStack;)Z m
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z k
	canMove ()Z fZ
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	checkFoxSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	clearStates ()V fY
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	defineSynchedData ()V a_
	dropAllDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;)V f
	dropItemStack (Lnet/minecraft/world/item/ItemStack;)V p
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Fox; b
	getCrouchAmount (F)F z
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; e
	getFlag (I)Z t
	getFoxType ()Lnet/minecraft/world/entity/animal/Fox$Type; t
	getHeadRollAngle (F)F y
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cB
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTrustedUUIDs ()Ljava/util/List; fV
	handleEntityEvent (B)V a
	isCrouching ()Z bQ
	isDefending ()Z fW
	isFaceplanted ()Z fK
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isFullyCrouched ()Z fS
	isImmobile ()Z eE
	isInterested ()Z fT
	isJumping ()Z fR
	isPathClear (Lnet/minecraft/world/entity/animal/Fox;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isPouncing ()Z fL
	isSitting ()Z fJ
	isSleeping ()Z fj
	onOffspringSpawnedFromEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playAmbientSound ()V K
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setDefending (Z)V A
	setFaceplanted (Z)V z
	setFlag (IZ)V d
	setFoxType (Lnet/minecraft/world/entity/animal/Fox$Type;)V a
	setIsCrouching (Z)V x
	setIsInterested (Z)V y
	setIsPouncing (Z)V w
	setSitting (Z)V v
	setSleeping (Z)V B
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	setTargetGoals ()V fU
	spitOutItem (Lnet/minecraft/world/item/ItemStack;)V o
	tick ()V k
	trusts (Ljava/util/UUID;)Z c
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
	wakeUp ()V fX
net/minecraft/world/entity/animal/Fox$DefendTrustedTargetGoal bno$a
	timestamp l
	trustedLastHurt k
	trustedLastHurtBy j
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FaceplantGoal bno$b
	countdown a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxAlertableEntitiesSelector bno$c
	test (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/animal/Fox$FoxBehaviorGoal bno$d
	alertableTargeting b
	alertable ()Z i
	hasShelter ()Z h
net/minecraft/world/entity/animal/Fox$FoxBreedGoal bno$e
	breed ()V g
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxEatBerriesGoal bno$f
	WAIT_TICKS i
	ticksWaited g
	acceptedDistance ()D i
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	onReachedTarget ()V o
	pickGlowBerry (Lnet/minecraft/world/level/block/state/BlockState;)V a
	pickSweetBerries (Lnet/minecraft/world/level/block/state/BlockState;)V b
	shouldRecalculatePath ()Z l
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxFloatGoal bno$g
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxFollowParentGoal bno$h
	fox e
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxGroupData bno$i
	type a
net/minecraft/world/entity/animal/Fox$FoxLookAtPlayerGoal bno$j
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Fox$FoxLookControl bno$k
	resetXRotOnTick ()Z c
	tick ()V a
net/minecraft/world/entity/animal/Fox$FoxMeleeAttackGoal bno$l
	canUse ()Z a
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;D)V a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxMoveControl bno$m
	tick ()V a
net/minecraft/world/entity/animal/Fox$FoxPanicGoal bno$n
	shouldPanic ()Z h
net/minecraft/world/entity/animal/Fox$FoxPounceGoal bno$o
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z D_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxSearchForItemsGoal bno$p
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxStrollThroughVillageGoal bno$q
	canContinueToUse ()Z b
	canFoxMove ()Z h
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$PerchAndSearchGoal bno$r
	lookTime e
	looksRemaining f
	relX c
	relZ d
	canContinueToUse ()Z b
	canUse ()Z a
	resetLook ()V k
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$SeekShelterGoal bno$s
	interval c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$SleepGoal bno$t
	WAIT_TIME_BEFORE_SLEEP c
	countdown d
	canContinueToUse ()Z b
	canSleep ()Z k
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Fox$StalkPreyGoal bno$u
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$Type bno$v
	$VALUES g
	BY_ID c
	BY_NAME d
	RED a
	SNOW b
	id e
	name f
	$values ()[Lnet/minecraft/world/entity/animal/Fox$Type; c
	byBiome (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/animal/Fox$Type; a
	byId (I)Lnet/minecraft/world/entity/animal/Fox$Type; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/Fox$Type; a
	getId ()I b
	getName ()Ljava/lang/String; a
net/minecraft/world/entity/animal/FrogVariant bnp
	COLD c
	TEMPERATE a
	WARM b
	texture d
	register (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/world/entity/animal/FrogVariant; a
	texture ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/entity/animal/IronGolem bnq
	DATA_FLAGS_ID c
	IRON_INGOT_HEAL_AMOUNT d
	PERSISTENT_ANGER_TIME bY
	attackAnimationTick e
	offerFlowerTick bX
	persistentAngerTarget ca
	remainingPersistentAngerTime bZ
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	decreaseAirSupply (I)I m
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	getAttackAnimationTick ()I t
	getAttackDamage ()F fL
	getCrackiness ()Lnet/minecraft/world/entity/animal/IronGolem$Crackiness; q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cB
	getOfferFlowerTick ()I fJ
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPlayerCreated ()Z fK
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	offerFlower (Z)V v
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setPlayerCreated (Z)V w
	setRemainingPersistentAngerTime (I)V a
	startPersistentAngerTimer ()V c
net/minecraft/world/entity/animal/IronGolem$Crackiness bnq$a
	$VALUES g
	BY_DAMAGE e
	HIGH d
	LOW b
	MEDIUM c
	NONE a
	fraction f
	$values ()[Lnet/minecraft/world/entity/animal/IronGolem$Crackiness; a
	byFraction (F)Lnet/minecraft/world/entity/animal/IronGolem$Crackiness; a
net/minecraft/world/entity/animal/MushroomCow bnr
	DATA_TYPE bX
	MUTATE_CHANCE bY
	effect ca
	effectDuration cb
	lastLightningBoltUUID cc
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkMushroomSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	defineSynchedData ()V a_
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Cow; b
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/MushroomCow; c
	getEffectFromItemStack (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; m
	getMushroomType ()Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; t
	getOffspringType (Lnet/minecraft/world/entity/animal/MushroomCow;)Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; a
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z a
	setMushroomType (Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType;)V a
	shear (Lnet/minecraft/sounds/SoundSource;)V a
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
net/minecraft/world/entity/animal/MushroomCow$MushroomType bnr$a
	$VALUES e
	BROWN b
	RED a
	blockState d
	type c
	$values ()[Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; b
	byType (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; a
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/entity/animal/Ocelot bns
	CROUCH_SPEED_MOD bX
	DATA_TRUSTING cc
	SPRINT_SPEED_MOD ca
	TEMPT_INGREDIENT cb
	WALK_SPEED_MOD bY
	ocelotAvoidPlayersGoal cd
	temptGoal ce
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkOcelotSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	customServerAiStep ()V T
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAmbientSoundInterval ()I J
	getAttackDamage ()F fK
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Ocelot; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cB
	handleEntityEvent (B)V a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isSteppingCarefully ()Z bM
	isTrusting ()Z fJ
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTrustingGoals ()V t
	registerGoals ()V u
	removeWhenFarAway (D)Z h
	setTrusting (Z)V v
	spawnTrustingParticles (Z)V w
net/minecraft/world/entity/animal/Ocelot$OcelotAvoidEntityGoal bns$a
	ocelot i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Ocelot$OcelotTemptGoal bns$b
	ocelot c
	canScare ()Z h
net/minecraft/world/entity/animal/Panda bnt
	BREED_TARGETING cg
	DATA_ID_FLAGS cf
	EAT_COUNTER cc
	EAT_TICK_INTERVAL cl
	FLAG_ON_BACK ck
	FLAG_ROLL ci
	FLAG_SIT cj
	FLAG_SNEEZE ch
	HIDDEN_GENE_ID ce
	MAIN_GENE_ID cd
	PANDA_ITEMS cx
	SNEEZE_COUNTER cb
	TOTAL_ROLL_STEPS bX
	TOTAL_UNHAPPY_TIME cm
	UNHAPPY_COUNTER ca
	didBite co
	gotBamboo cn
	lookAtPlayerGoal cw
	onBackAmount cs
	onBackAmountO ct
	rollAmount cu
	rollAmountO cv
	rollCounter bY
	rollDelta cp
	sitAmount cq
	sitAmountO cr
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEatingParticles ()V gh
	afterSneeze ()V gm
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canPerformAction ()Z ge
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fV
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	eat (Z)V x
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getEatCounter ()I gf
	getFlag (I)Z w
	getHiddenGene ()Lnet/minecraft/world/entity/animal/Panda$Gene; fT
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLieOnBackAmount (F)F z
	getMainGene ()Lnet/minecraft/world/entity/animal/Panda$Gene; fS
	getOneOfGenesRandomly ()Lnet/minecraft/world/entity/animal/Panda$Gene; gn
	getRollAmount (F)F A
	getSitAmount (F)F y
	getSneezeCounter ()I fR
	getUnhappyCounter ()I q
	getVariant ()Lnet/minecraft/world/entity/animal/Panda$Gene; fW
	handleEating ()V gg
	handleRoll ()V gl
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAggressive ()Z fC
	isBrown ()Z ga
	isEating ()Z fL
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isFoodOrCake (Lnet/minecraft/world/item/ItemStack;)Z m
	isLazy ()Z fX
	isOnBack ()Z fK
	isPlayful ()Z fZ
	isRolling ()Z fU
	isScared ()Z gc
	isSitting ()Z fJ
	isSneezing ()Z t
	isWeak ()Z gb
	isWorried ()Z fY
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	roll (Z)V z
	setAttributes ()V gd
	setEatCounter (I)V v
	setFlag (IZ)V d
	setGeneFromParents (Lnet/minecraft/world/entity/animal/Panda;Lnet/minecraft/world/entity/animal/Panda;)V a
	setHiddenGene (Lnet/minecraft/world/entity/animal/Panda$Gene;)V b
	setMainGene (Lnet/minecraft/world/entity/animal/Panda$Gene;)V a
	setOnBack (Z)V w
	setSneezeCounter (I)V u
	setUnhappyCounter (I)V t
	sit (Z)V v
	sneeze (Z)V y
	tick ()V k
	tryToSit ()V go
	updateOnBackAnimation ()V gj
	updateRollAmount ()V gk
	updateSitAmount ()V gi
net/minecraft/world/entity/animal/Panda$Gene bnt$a
	$VALUES m
	AGGRESSIVE g
	BROWN e
	BY_ID h
	LAZY b
	MAX_GENE i
	NORMAL a
	PLAYFUL d
	WEAK f
	WORRIED c
	id j
	isRecessive l
	name k
	$values ()[Lnet/minecraft/world/entity/animal/Panda$Gene; d
	byId (I)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	getId ()I a
	getName ()Ljava/lang/String; b
	getRandom (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	getVariantFromGenes (Lnet/minecraft/world/entity/animal/Panda$Gene;Lnet/minecraft/world/entity/animal/Panda$Gene;)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	isRecessive ()Z c
net/minecraft/world/entity/animal/Panda$PandaAttackGoal bnt$b
	panda b
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaAvoidGoal bnt$c
	panda i
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaBreedGoal bnt$d
	panda d
	unhappyCooldown e
	canFindBamboo ()Z h
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaHurtByTargetGoal bnt$e
	panda a
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/Panda$PandaLieOnBackGoal bnt$f
	cooldown b
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Panda$PandaLookAtPlayerGoal bnt$g
	panda h
	canContinueToUse ()Z b
	canUse ()Z a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
	tick ()V e
net/minecraft/world/entity/animal/Panda$PandaMoveControl bnt$h
	panda l
	tick ()V a
net/minecraft/world/entity/animal/Panda$PandaPanicGoal bnt$i
	panda h
	canContinueToUse ()Z b
	shouldPanic ()Z h
net/minecraft/world/entity/animal/Panda$PandaRollGoal bnt$j
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z D_
	start ()V c
net/minecraft/world/entity/animal/Panda$PandaSitGoal bnt$k
	cooldown b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Panda$PandaSneezeGoal bnt$l
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Parrot bnu
	DATA_VARIANT_ID ce
	MOB_SOUND_MAP cj
	NOT_PARROT_PREDICATE cf
	POISONOUS_FOOD cg
	TAME_FOOD ch
	VARIANTS ci
	flap ca
	flapSpeed cb
	flapping ck
	jukebox cn
	nextFlap cl
	oFlap cd
	oFlapSpeed cc
	partyParrot cm
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	calculateFlapping ()V fV
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkParrotSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fR
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbient (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/sounds/SoundEvent; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getImitatedSound (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/sounds/SoundEvent; b
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cB
	getPitch (Lnet/minecraft/util/RandomSource;)F a
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cR
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVariant ()I fT
	getVoicePitch ()F eD
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	imitateNearbyMobs (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)Z a
	isBaby ()Z y_
	isFlapping ()Z aL
	isFlying ()Z fX
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isPartyParrot ()Z fS
	isPushable ()Z bl
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onFlap ()V aK
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setRecordPlayingNearby (Lnet/minecraft/core/BlockPos;Z)V a
	setVariant (I)V t
net/minecraft/world/entity/animal/Parrot$ParrotWanderGoal bnu$a
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
	getTreePos ()Lnet/minecraft/world/phys/Vec3; k
net/minecraft/world/entity/animal/Pig bnv
	DATA_BOOST_TIME bY
	DATA_SADDLE_ID bX
	FOOD_ITEMS ca
	steering cb
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	boost ()Z a
	canBeControlledBy (Lnet/minecraft/world/entity/Entity;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	defineSynchedData ()V a_
	dropEquipment ()V ei
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Pig; b
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cG
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cB
	getSteeringSpeed ()F b
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isSaddleable ()Z c
	isSaddled ()Z d
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	travelWithInput (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/animal/PolarBear bnw
	DATA_STANDING_ID bX
	PERSISTENT_ANGER_TIME cd
	STAND_ANIMATION_TICKS bY
	clientSideStandAnimation cb
	clientSideStandAnimationO ca
	persistentAngerTarget cf
	remainingPersistentAngerTime ce
	warningSoundTicks cc
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkPolarBearSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getStandingAnimationScale (F)F y
	getWaterSlowDown ()F eJ
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isStanding ()Z fJ
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	playWarningSound ()V t
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setStanding (Z)V v
	startPersistentAngerTimer ()V c
	tick ()V k
net/minecraft/world/entity/animal/PolarBear$PolarBearAttackPlayersGoal bnw$a
	canUse ()Z a
	getFollowDistance ()D l
net/minecraft/world/entity/animal/PolarBear$PolarBearHurtByTargetGoal bnw$b
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	start ()V c
net/minecraft/world/entity/animal/PolarBear$PolarBearMeleeAttackGoal bnw$c
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;D)V a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
	stop ()V d
net/minecraft/world/entity/animal/PolarBear$PolarBearPanicGoal bnw$d
	shouldPanic ()Z h
net/minecraft/world/entity/animal/Pufferfish bnx
	PUFF_STATE e
	SCARY_MOB bZ
	STATE_FULL d
	STATE_MID c
	STATE_SMALL b
	deflateTimer bY
	inflateCounter bX
	targetingConditions ca
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fK
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getPuffState ()I fL
	getScale (I)F c
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setPuffState (I)V b
	tick ()V k
	touch (Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/entity/animal/Pufferfish$PufferfishPuffGoal bnx$a
	fish a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Rabbit bny
	ATTACK_SPEED_MOD cc
	BREED_SPEED_MOD bY
	DATA_TYPE_ID cm
	EVIL_ARMOR_VALUE cl
	EVIL_ATTACK_POWER ck
	FLEE_SPEED_MOD cb
	FOLLOW_SPEED_MOD ca
	KILLER_BUNNY cn
	MORE_CARROTS_DELAY co
	STROLL_SPEED_MOD bX
	TYPE_BLACK cf
	TYPE_BROWN cd
	TYPE_EVIL cj
	TYPE_GOLD ch
	TYPE_SALT ci
	TYPE_WHITE ce
	TYPE_WHITE_SPLOTCHED cg
	jumpDelayTicks cs
	jumpDuration cq
	jumpTicks cp
	moreCarrotTicks ct
	wasOnGround cr
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	canSpawnSprintParticle ()Z bd
	checkLandingDelay ()V fT
	checkRabbitSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; t
	customServerAiStep ()V T
	defineSynchedData ()V a_
	disableJumpControl ()V fR
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	enableJumpControl ()V fL
	facePoint (DD)V b
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Rabbit; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getJumpCompletion (F)F y
	getJumpPower ()F eF
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; fJ
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cB
	getRabbitType ()I fK
	getRandomRabbitType (Lnet/minecraft/world/level/LevelAccessor;)I a
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cR
	handleEntityEvent (B)V a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isTemptingItem (Lnet/minecraft/world/item/ItemStack;)Z m
	jumpFromGround ()V eH
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setJumping (Z)V q
	setLandingDelay ()V fS
	setRabbitType (I)V t
	setSpeedModifier (D)V i
	startJumping ()V q
	wantsMoreFood ()Z fU
net/minecraft/world/entity/animal/Rabbit$EvilRabbitAttackGoal bny$a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/animal/Rabbit$RabbitAvoidEntityGoal bny$b
	rabbit i
	canUse ()Z a
net/minecraft/world/entity/animal/Rabbit$RabbitGroupData bny$c
	rabbitType a
net/minecraft/world/entity/animal/Rabbit$RabbitJumpControl bny$d
	canJump c
	rabbit b
	canJump ()Z d
	setCanJump (Z)V a
	tick ()V b
	wantJump ()Z c
net/minecraft/world/entity/animal/Rabbit$RabbitMoveControl bny$e
	nextJumpSpeed m
	rabbit l
	setWantedPosition (DDDD)V a
	tick ()V a
net/minecraft/world/entity/animal/Rabbit$RabbitPanicGoal bny$f
	rabbit h
	tick ()V e
net/minecraft/world/entity/animal/Rabbit$RaidGardenGoal bny$g
	canRaid i
	rabbit g
	wantsToRaid h
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	tick ()V e
net/minecraft/world/entity/animal/Salmon bnz
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fK
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxSchoolSize ()I fL
net/minecraft/world/entity/animal/Sheep boa
	COLORARRAY_BY_COLOR cb
	DATA_WOOL_ID bY
	EAT_ANIMATION_TICKS bX
	ITEM_BY_DYE ca
	eatAnimationTick cc
	eatBlockGoal cd
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	ate ()V I
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	createSheepColor (Lnet/minecraft/world/item/DyeColor;)[F c
	customServerAiStep ()V T
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Sheep; b
	getColor ()Lnet/minecraft/world/item/DyeColor; t
	getColorArray (Lnet/minecraft/world/item/DyeColor;)[F a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; N
	getHeadEatAngleScale (F)F z
	getHeadEatPositionScale (F)F y
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getOffspringColor (Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/animal/Animal;)Lnet/minecraft/world/item/DyeColor; a
	getRandomSheepColor (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/DyeColor; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	isSheared ()Z fJ
	makeContainer (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/inventory/CraftingContainer; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z a
	registerGoals ()V u
	setColor (Lnet/minecraft/world/item/DyeColor;)V b
	setSheared (Z)V v
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/animal/ShoulderRidingEntity bob
	RIDE_COOLDOWN ca
	rideCooldownCounter cb
	canSitOnShoulder ()Z fU
	setEntityOnShoulder (Lnet/minecraft/server/level/ServerPlayer;)Z b
	tick ()V k
net/minecraft/world/entity/animal/SnowGolem boc
	DATA_PUMPKIN_ID b
	EYE_HEIGHT d
	PUMPKIN_FLAG c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cB
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hasPumpkin ()Z q
	isSensitiveToWater ()Z eL
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z a
	registerGoals ()V u
	setPumpkin (Z)V v
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/animal/Squid bod
	oldTentacleAngle ca
	oldTentacleMovement bY
	rotateSpeed cd
	speed cb
	tentacleAngle bZ
	tentacleMovement bX
	tentacleSpeed cc
	tx ce
	ty cf
	tz cg
	xBodyRot b
	xBodyRotO c
	zBodyRot d
	zBodyRotO e
	aiStep ()V w_
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fJ
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInkParticle ()Lnet/minecraft/core/particles/ParticleOptions; n
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aO
	getSoundVolume ()F eC
	getSquirtSound ()Lnet/minecraft/sounds/SoundEvent; q
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	hasMovementVector ()Z fK
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	registerGoals ()V u
	rotateVector (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; i
	setMovementVector (FFF)V a
	spawnInk ()V t
	travel (Lnet/minecraft/world/phys/Vec3;)V g
net/minecraft/world/entity/animal/Squid$SquidFleeGoal bod$a
	SQUID_FLEE_MAX_DISTANCE d
	SQUID_FLEE_MIN_DISTANCE c
	SQUID_FLEE_SPEED b
	fleeTicks e
	canUse ()Z a
	requiresUpdateEveryTick ()Z E_
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Squid$SquidRandomMovementGoal bod$b
	squid b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/animal/TropicalFish boe
	BASES bY
	BASE_LARGE d
	BASE_SMALL c
	BASE_TEXTURE_LOCATIONS bZ
	BUCKET_VARIANT_TAG b
	COLORS cd
	COMMON_VARIANTS e
	DATA_ID_TYPE_VARIANT bX
	PATTERNS cc
	PATTERN_A_TEXTURE_LOCATIONS ca
	PATTERN_B_TEXTURE_LOCATIONS cb
	isSchool ce
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	calculateVariant (Lnet/minecraft/world/entity/animal/TropicalFish$Pattern;Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/item/DyeColor;)I a
	checkTropicalFishSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBaseColor ()[F fT
	getBaseColor (I)Lnet/minecraft/world/item/DyeColor; c
	getBaseColorIdx (I)I w
	getBaseTextureLocation ()Lnet/minecraft/resources/ResourceLocation; fX
	getBaseVariant ()I fV
	getBaseVariant (I)I v
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getFishTypeName (I)Ljava/lang/String; t
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fK
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getPatternColor ()[F fU
	getPatternColor (I)Lnet/minecraft/world/item/DyeColor; s
	getPatternColorIdx (I)I x
	getPatternTextureLocation ()Lnet/minecraft/resources/ResourceLocation; fW
	getPatternVariant (I)I y
	getPredefinedName (I)Ljava/lang/String; b
	getVariant ()I fS
	isMaxGroupSizeReached (I)Z d
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V m
	setVariant (I)V u
net/minecraft/world/entity/animal/TropicalFish$Pattern boe$a
	$VALUES p
	BETTY k
	BLOCKFISH j
	BRINELY e
	CLAYFISH l
	DASHER d
	FLOPPER g
	GLITTER i
	KOB a
	SNOOPER c
	SPOTTY f
	STRIPEY h
	SUNSTREAK b
	VALUES o
	base m
	index n
	$values ()[Lnet/minecraft/world/entity/animal/TropicalFish$Pattern; d
	getBase ()I a
	getIndex ()I b
	getName ()Ljava/lang/String; c
	getPatternName (II)Ljava/lang/String; a
net/minecraft/world/entity/animal/TropicalFish$TropicalFishGroupData boe$b
	base b
	baseColor d
	pattern c
	patternColor e
net/minecraft/world/entity/animal/Turtle bof
	BABY_ON_LAND_SELECTOR bY
	FOOD_ITEMS bX
	GOING_HOME ce
	HAS_EGG cb
	HOME_POS ca
	LAYING_EGG cc
	TRAVELLING cf
	TRAVEL_POS cd
	layEggCounter cg
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V n
	aiStep ()V w_
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBreatheUnderwater ()Z dB
	canFallInLove ()Z fM
	checkTurtleSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fJ
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAmbientSoundInterval ()I J
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHomePos ()Lnet/minecraft/core/BlockPos; fK
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; ey
	getScale ()F dJ
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aG
	getTravelPos ()Lnet/minecraft/core/BlockPos; fL
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasEgg ()Z q
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isGoingHome ()Z fR
	isLayingEgg ()Z t
	isPushedByFluid ()Z cr
	isTravelling ()Z fS
	nextStep ()F aF
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	playSwimSound (F)V d
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setGoingHome (Z)V x
	setHasEgg (Z)V v
	setHomePos (Lnet/minecraft/core/BlockPos;)V g
	setLayingEgg (Z)V w
	setTravelPos (Lnet/minecraft/core/BlockPos;)V h
	setTravelling (Z)V y
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	travel (Lnet/minecraft/world/phys/Vec3;)V g
net/minecraft/world/entity/animal/Turtle$TurtleBreedGoal bof$a
	turtle d
	breed ()V g
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtleGoHomeGoal bof$b
	GIVE_UP_TICKS e
	closeToHomeTryTicks d
	speedModifier b
	stuck c
	turtle a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Turtle$TurtleGoToWaterGoal bof$c
	GIVE_UP_TICKS g
	turtle h
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	shouldRecalculatePath ()Z l
net/minecraft/world/entity/animal/Turtle$TurtleLayEggGoal bof$d
	turtle g
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	tick ()V e
net/minecraft/world/entity/animal/Turtle$TurtleMoveControl bof$e
	turtle l
	tick ()V a
	updateSpeed ()V g
net/minecraft/world/entity/animal/Turtle$TurtlePanicGoal bof$f
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtlePathNavigation bof$g
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/animal/Turtle$TurtleRandomStrollGoal bof$h
	turtle i
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtleTravelGoal bof$i
	speedModifier b
	stuck c
	turtle a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/WaterAnimal bog
	baseTick ()V an
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBreatheUnderwater ()Z dB
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkSurfaceWaterAnimalSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	getAmbientSoundInterval ()I J
	getExperienceReward ()I dO
	getMobType ()Lnet/minecraft/world/entity/MobType; ey
	handleAirSupply (I)V a
	isPushedByFluid ()Z cr
net/minecraft/world/entity/animal/Wolf boh
	DATA_COLLAR_COLOR cc
	DATA_INTERESTED_ID cb
	DATA_REMAINING_ANGER_TIME cd
	PERSISTENT_ANGER_TIME cm
	PREY_SELECTOR ca
	START_HEALTH ce
	TAME_HEALTH cf
	interestedAngle cg
	interestedAngleO ch
	isShaking cj
	isWet ci
	persistentAngerTarget cn
	shakeAnim ck
	shakeAnimO cl
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	cancelShake ()V fW
	checkWolfSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fR
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBodyRollAngle (FF)F f
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Wolf; b
	getCollarColor ()Lnet/minecraft/world/item/DyeColor; fU
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHeadRollAngle (F)F z
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cB
	getMaxHeadXRot ()I U
	getMaxSpawnClusterSize ()I fo
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getSoundVolume ()F eC
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTailAngle ()F fT
	getWetShade (F)F y
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isInterested ()Z fV
	isWet ()Z fS
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setCollarColor (Lnet/minecraft/world/item/DyeColor;)V a
	setIsInterested (Z)V z
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setTame (Z)V w
	startPersistentAngerTimer ()V c
	tick ()V k
	wantsToAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/animal/Wolf$WolfAvoidEntityGoal boh$a
	wolf j
	avoidLlama (Lnet/minecraft/world/entity/animal/horse/Llama;)Z a
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Wolf$WolfPanicGoal boh$b
	shouldPanic ()Z h
net/minecraft/world/entity/animal/allay/Allay boi
	DANCING_LOOP_DURATION ca
	DATA_CAN_DUPLICATE ch
	DATA_DANCING cg
	DUPLICATION_COOLDOWN_TICKS ce
	DUPLICATION_ITEM cd
	ITEM_PICKUP_REACH bY
	LIFTING_ITEM_ANIMATION_DURATION bZ
	LOGGER e
	MEMORY_TYPES c
	NUM_OF_DUPLICATION_HEARTS cf
	PATHFINDING_BOUNDING_BOX_PADDING cc
	SENSOR_TYPES b
	SPINNING_ANIMATION_DURATION cb
	THROW_SOUND_PITCHES d
	VIBRATION_EVENT_LISTENER_RANGE bX
	dancingAnimationTicks cq
	duplicationCooldown cn
	dynamicJukeboxListener ck
	dynamicVibrationListener ci
	holdingItemAnimationTicks co
	holdingItemAnimationTicks0 cp
	inventory cl
	jukeboxPos cm
	spinningAnimationTicks cr
	spinningAnimationTicks0 cs
	vibrationListenerConfig cj
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dz
	canDuplicate ()Z fQ
	canPickUpLoot ()Z fq
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	customServerAiStep ()V T
	defineSynchedData ()V a_
	dropEquipment ()V ei
	duplicateAllay ()V fO
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dy
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHoldingItemAnimationProgress (F)F y
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInventory ()Lnet/minecraft/world/SimpleContainer; t
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cB
	getPickupReach ()Lnet/minecraft/core/Vec3i; O
	getSoundVolume ()F eC
	getSpinningProgress (F)F z
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	hasItemInHand ()Z q
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isDancing ()Z fJ
	isDuplicationItem (Lnet/minecraft/world/item/ItemStack;)Z m
	isFlapping ()Z aL
	isOnPickupCooldown ()Z fL
	isSpinning ()Z fK
	iteratePathfindingStartNodeCandidatePositions ()Ljava/lang/Iterable; fF
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeInteractionItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	removeWhenFarAway (D)Z h
	resetDuplicationCooldown ()V fP
	sendDebugPackets ()V R
	setDancing (Z)V v
	setJukeboxPlaying (Lnet/minecraft/core/BlockPos;Z)V b
	shouldStayCloseToLeashHolder ()Z fH
	shouldStopDancing ()Z fM
	spawnHeartParticle ()V fR
	tick ()V k
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	updateDuplicationCooldown ()V fN
	updateDynamicGameEventListener (Ljava/util/function/BiConsumer;)V a
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z l
net/minecraft/world/entity/animal/allay/Allay$AllayVibrationListenerConfig boi$a
	getListenableEvents ()Lnet/minecraft/tags/TagKey; a
	onSignalReceive (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V a
	shouldListen (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)Z a
net/minecraft/world/entity/animal/allay/Allay$JukeboxListener boi$b
	listenerRadius c
	listenerSource b
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	handleGameEvent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEvent$Message;)Z a
net/minecraft/world/entity/animal/allay/AllayAi boj
	CLOSE_ENOUGH_TO_TARGET e
	DISTANCE_TO_WANTED_ITEM k
	MAX_LOOK_DISTANCE g
	MAX_WAIT_DURATION i
	MIN_WAIT_DURATION h
	SPEED_MULTIPLIER_WHEN_FOLLOWING_DEPOSIT_TARGET b
	SPEED_MULTIPLIER_WHEN_IDLING a
	SPEED_MULTIPLIER_WHEN_PANICKING d
	SPEED_MULTIPLIER_WHEN_RETRIEVING_ITEM c
	TIME_TO_FORGET_NOTEBLOCK j
	TOO_FAR_FROM_TARGET f
	getItemDepositPosition (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; b
	getLikedPlayer (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	getLikedPlayerPositionTracker (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; c
	hearNoteblock (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)V a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	shouldDepositItemsAtLikedNoteblock (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/core/GlobalPos;)Z a
	updateActivity (Lnet/minecraft/world/entity/animal/allay/Allay;)V a
net/minecraft/world/entity/animal/axolotl/Axolotl bol
	AXOLOTL_TOTAL_AIR_SUPPLY ci
	DATA_PLAYING_DEAD cg
	DATA_VARIANT cf
	FROM_BUCKET ch
	LOGGER ce
	MEMORY_TYPES ca
	PLAYER_REGEN_DETECTION_RANGE cb
	RARE_VARIANT_CHANCE cc
	REGEN_BUFF_BASE_DURATION cm
	REGEN_BUFF_MAX_DURATION ck
	REHYDRATE_AIR_SUPPLY cj
	SENSOR_TYPES bY
	TOTAL_PLAYDEAD_TIME bX
	VARIANT_TAG cd
	modelRotationValues cl
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applySupportingEffects (Lnet/minecraft/world/entity/player/Player;)V e
	baseTick ()V an
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dz
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBeSeenAsEnemy ()Z dY
	canBreatheUnderwater ()Z dB
	checkAxolotlSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fR
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	customServerAiStep ()V T
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	fromBucket ()Z q
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dy
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxAirSupply ()I bZ
	getMaxHeadXRot ()I U
	getMaxHeadYRot ()I V
	getMeleeAttackRangeSqr (Lnet/minecraft/world/entity/LivingEntity;)D i
	getMobType ()Lnet/minecraft/world/entity/MobType; ey
	getModelRotationValues ()Ljava/util/Map; a
	getPickupSound ()Lnet/minecraft/sounds/SoundEvent; t
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aG
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aH
	getVariant ()Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; fK
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleAirSupply (I)V t
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isPlayingDead ()Z fL
	isPushedByFluid ()Z cr
	loadFromBucketTag (Lnet/minecraft/nbt/CompoundTag;)V c
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onStopAttacking (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;Lnet/minecraft/world/entity/LivingEntity;)V a
	playAmbientSound ()V K
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	rehydrate ()V fJ
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z P
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V m
	sendDebugPackets ()V R
	setFromBucket (Z)V v
	setPlayingDead (Z)V w
	setVariant (Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant;)V a
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
	useRareVariant (Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlGroupData bol$a
	types a
	getVariant (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; a
net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlLookControl bol$b
	tick ()V a
net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlMoveControl bol$c
	axolotl l
	tick ()V a
net/minecraft/world/entity/animal/axolotl/Axolotl$Variant bol$d
	$VALUES j
	BLUE e
	BY_ID f
	CYAN d
	GOLD c
	LUCY a
	WILD b
	common i
	id g
	name h
	$values ()[Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; c
	getCommonSpawnVariant (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; a
	getId ()I a
	getName ()Ljava/lang/String; b
	getRareSpawnVariant (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; b
	getSpawnVariant (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; a
net/minecraft/world/entity/animal/axolotl/AxolotlAi bom
	ADULT_FOLLOW_RANGE a
	SPEED_MULTIPLIER_ON_LAND c
	SPEED_MULTIPLIER_WHEN_CHASING_IN_WATER e
	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT_IN_WATER f
	SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER d
	SPEED_MULTIPLIER_WHEN_MAKING_LOVE b
	canSetWalkTargetFromLookTarget (Lnet/minecraft/world/entity/LivingEntity;)Z a
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Ljava/util/Optional; b
	getSpeedModifier (Lnet/minecraft/world/entity/LivingEntity;)F d
	getSpeedModifierChasing (Lnet/minecraft/world/entity/LivingEntity;)F b
	getSpeedModifierFollowingAdult (Lnet/minecraft/world/entity/LivingEntity;)F c
	getTemptations ()Lnet/minecraft/world/item/crafting/Ingredient; a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initFightActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	initPlayDeadActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	updateActivity (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)V a
net/minecraft/world/entity/animal/axolotl/PlayDead bon
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;J)V b
net/minecraft/world/entity/animal/axolotl/ValidatePlayDead boo
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;J)V a
net/minecraft/world/entity/animal/frog/Frog boq
	DATA_TONGUE_TARGET_ID cj
	DATA_VARIANT_ID ci
	FROG_FALL_DAMAGE_REDUCTION ck
	MEMORY_TYPES ca
	SENSOR_TYPES bY
	TEMPTATION_ITEM bX
	VARIANT_KEY cb
	croakAnimationState cd
	jumpAnimationState cc
	swimAnimationState cg
	swimIdleAnimationState ch
	tongueAnimationState ce
	walkAnimationState cf
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dz
	calculateFallDamage (FF)I d
	canBreatheUnderwater ()Z dB
	canCutCorner (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z b
	canEat (Lnet/minecraft/world/entity/LivingEntity;)Z k
	checkFrogSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fK
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	customServerAiStep ()V T
	defineSynchedData ()V a_
	eraseTongueTarget ()V q
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dy
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHeadRotSpeed ()I fn
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxHeadYRot ()I V
	getTongueTarget ()Ljava/util/Optional; t
	getVariant ()Lnet/minecraft/world/entity/animal/FrogVariant; fJ
	isBaby ()Z y_
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isMovingInWater ()Z fR
	isMovingOnLand ()Z fL
	isPushedByFluid ()Z cr
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	sendDebugPackets ()V R
	setBaby (Z)V a
	setTongueTarget (Lnet/minecraft/world/entity/Entity;)V a
	setVariant (Lnet/minecraft/world/entity/animal/FrogVariant;)V a
	spawnChildFromBreeding (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;)V a
	tick ()V k
	travel (Lnet/minecraft/world/phys/Vec3;)V g
net/minecraft/world/entity/animal/frog/Frog$FrogLookControl boq$a
	resetXRotOnTick ()Z c
net/minecraft/world/entity/animal/frog/Frog$FrogNodeEvaluator boq$b
	belowPos l
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; a
net/minecraft/world/entity/animal/frog/Frog$FrogPathNavigation boq$c
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
net/minecraft/world/entity/animal/frog/FrogAi bor
	MAX_JUMP_VELOCITY i
	MAX_LONG_JUMP_HEIGHT g
	MAX_LONG_JUMP_WIDTH h
	SPEED_MULTIPLIER_IN_WATER e
	SPEED_MULTIPLIER_ON_LAND d
	SPEED_MULTIPLIER_WHEN_IDLING c
	SPEED_MULTIPLIER_WHEN_MAKING_LOVE b
	SPEED_MULTIPLIER_WHEN_PANICKING a
	SPEED_MULTIPLIER_WHEN_TEMPTED j
	TIME_BETWEEN_LONG_JUMPS f
	canAttack (Lnet/minecraft/world/entity/animal/frog/Frog;)Z b
	getTemptations ()Lnet/minecraft/world/item/crafting/Ingredient; a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initJumpActivity (Lnet/minecraft/world/entity/ai/Brain;)V f
	initLaySpawnActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	initMemories (Lnet/minecraft/world/entity/animal/frog/Frog;Lnet/minecraft/util/RandomSource;)V a
	initSwimActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initTongueActivity (Lnet/minecraft/world/entity/ai/Brain;)V g
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	updateActivity (Lnet/minecraft/world/entity/animal/frog/Frog;)V a
net/minecraft/world/entity/animal/frog/ShootTongue bos
	CATCH_ANIMATION_DURATION d
	EATING_DISTANCE h
	EATING_MOVEMENT_FACTOR i
	MAX_UNREACHBLE_TONGUE_TARGETS_IN_MEMORY g
	TIME_OUT_DURATION a
	TONGUE_ANIMATION_DURATION e
	UNREACHABLE_TONGUE_TARGETS_COOLDOWN_DURATION f
	calculatePathCounter k
	eatAnimationTimer j
	eatSound m
	itemSpawnPos n
	state o
	tongueSound l
	addUnreachableTargetToMemory (Lnet/minecraft/world/entity/animal/frog/Frog;Lnet/minecraft/world/entity/LivingEntity;)V b
	canPathfindToTarget (Lnet/minecraft/world/entity/animal/frog/Frog;Lnet/minecraft/world/entity/LivingEntity;)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;)Z a
	eatEntity (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;)V b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)V d
net/minecraft/world/entity/animal/frog/ShootTongue$State bos$a
	$VALUES e
	CATCH_ANIMATION b
	DONE d
	EAT_ANIMATION c
	MOVE_TO_TARGET a
	$values ()[Lnet/minecraft/world/entity/animal/frog/ShootTongue$State; a
net/minecraft/world/entity/animal/frog/Tadpole bot
	HITBOX_HEIGHT d
	HITBOX_WIDTH c
	MEMORY_TYPES bX
	SENSOR_TYPES e
	age bY
	ticksToBeFrog b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageUp ()V fN
	ageUp (I)V b
	aiStep ()V w_
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dz
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fL
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	customServerAiStep ()V T
	feed (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	fromBucket ()Z q
	getAge ()I fM
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dy
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fK
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getPickupSound ()Lnet/minecraft/sounds/SoundEvent; t
	getTicksLeftUntilAdult ()I fO
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	loadFromBucketTag (Lnet/minecraft/nbt/CompoundTag;)V c
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V m
	sendDebugPackets ()V R
	setAge (I)V c
	setFromBucket (Z)V v
	shouldDropExperience ()Z dM
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V b
net/minecraft/world/entity/animal/frog/TadpoleAi bou
	SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER b
	SPEED_MULTIPLIER_WHEN_PANICKING a
	SPEED_MULTIPLIER_WHEN_TEMPTED c
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	updateActivity (Lnet/minecraft/world/entity/animal/frog/Tadpole;)V a
net/minecraft/world/entity/animal/goat/Goat bow
	ADULT_ATTACK_DAMAGE ce
	BABY_ATTACK_DAMAGE cf
	DATA_HAS_LEFT_HORN ch
	DATA_HAS_RIGHT_HORN ci
	DATA_IS_SCREAMING_GOAT cg
	GOAT_FALL_DAMAGE_REDUCTION cb
	GOAT_SCREAMING_CHANCE cc
	LONG_JUMPING_DIMENSIONS bX
	MEMORY_TYPES ca
	SENSOR_TYPES bY
	UNIHORN_CHANCE cd
	isLoweringHead cj
	lowerHeadTick ck
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addHorns ()V fS
	ageBoundaryReached ()V n
	aiStep ()V w_
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dz
	calculateFallDamage (FF)I d
	checkGoatSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; t
	createHorn ()Lnet/minecraft/world/item/ItemStack; q
	customServerAiStep ()V T
	defineSynchedData ()V a_
	dropHorn ()Z fR
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dy
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/goat/Goat; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; e
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxHeadYRot ()I V
	getMilkingSound ()Lnet/minecraft/sounds/SoundEvent; fJ
	getRammingXHeadRot ()F fV
	handleEntityEvent (B)V a
	hasLeftHorn ()Z fK
	hasRightHorn ()Z fL
	isScreamingGoat ()Z fU
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeHorns ()V fT
	sendDebugPackets ()V R
	setScreamingGoat (Z)V v
	setYHeadRot (F)V l
net/minecraft/world/entity/animal/goat/GoatAi box
	ADULT_FOLLOW_RANGE i
	ADULT_RAM_KNOCKBACK_FORCE g
	BABY_RAM_KNOCKBACK_FORCE h
	MAX_JUMP_VELOCITY e
	MAX_LONG_JUMP_HEIGHT c
	MAX_LONG_JUMP_WIDTH d
	RAM_MAX_DISTANCE b
	RAM_MIN_DISTANCE f
	RAM_PREPARE_TIME a
	RAM_TARGET_CONDITIONS s
	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT l
	SPEED_MULTIPLIER_WHEN_IDLING k
	SPEED_MULTIPLIER_WHEN_MAKING_LOVE j
	SPEED_MULTIPLIER_WHEN_PANICKING n
	SPEED_MULTIPLIER_WHEN_PREPARING_TO_RAM o
	SPEED_MULTIPLIER_WHEN_RAMMING t
	SPEED_MULTIPLIER_WHEN_TEMPTED m
	TIME_BETWEEN_LONG_JUMPS p
	TIME_BETWEEN_RAMS q
	TIME_BETWEEN_RAMS_SCREAMER r
	getTemptations ()Lnet/minecraft/world/item/crafting/Ingredient; a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initLongJumpActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initMemories (Lnet/minecraft/world/entity/animal/goat/Goat;Lnet/minecraft/util/RandomSource;)V a
	initRamActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	updateActivity (Lnet/minecraft/world/entity/animal/goat/Goat;)V a
net/minecraft/world/entity/animal/horse/AbstractChestedHorse boz
	DATA_ID_CHEST cn
	INV_CHEST_COUNT bX
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createBaseChestedHorseAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	defineSynchedData ()V a_
	dropEquipment ()V ei
	getInventoryColumns ()I fL
	getInventorySize ()I fJ
	getPassengersRidingOffset ()D bt
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	hasChest ()Z t
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playChestEquipsSound ()V fK
	randomizeAttributes (Lnet/minecraft/util/RandomSource;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setChest (Z)V v
net/minecraft/world/entity/animal/horse/AbstractHorse bpa
	CHEST_SLOT_OFFSET ca
	DATA_ID_FLAGS cp
	DATA_ID_OWNER_UUID cq
	EQUIPMENT_SLOT_OFFSET bY
	FLAG_BRED ct
	FLAG_EATING cu
	FLAG_OPEN_MOUTH cw
	FLAG_SADDLE cs
	FLAG_STANDING cv
	FLAG_TAME cr
	FOOD_ITEMS co
	INVENTORY_SLOT_OFFSET cb
	INV_BASE_COUNT ce
	INV_SLOT_ARMOR cd
	INV_SLOT_SADDLE cc
	MOMMY_TARGETING cn
	PARENT_HORSE_SELECTOR bX
	allowStandSliding cA
	canGallop cl
	eatAnim cB
	eatAnimO cC
	eatingCounter cx
	gallopSoundCounter cm
	inventory ci
	isJumping ch
	mouthAnim cF
	mouthAnimO cG
	mouthCounter cy
	playerJumpPendingScale ck
	sprintCounter cg
	standAnim cD
	standAnimO cE
	standCounter cz
	tailCounter cf
	temper cj
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V fR
	aiStep ()V w_
	calculateFallDamage (FF)I d
	canEatGrass ()Z gh
	canJump ()Z a
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canParent ()Z gk
	canWearArmor ()Z gl
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	containerChanged (Lnet/minecraft/world/Container;)V a
	createBaseHorseAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; ge
	createEquipmentSlotAccess (ILjava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; a
	createInventory ()V fZ
	defineSynchedData ()V a_
	doPlayerRide (Lnet/minecraft/world/entity/player/Player;)V e
	dropEquipment ()V ei
	eating ()V q
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	fedFood (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/InteractionResult; a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	followMommy ()V gg
	generateRandomJumpStrength (Lnet/minecraft/util/RandomSource;)D c
	generateRandomMaxHealth (Lnet/minecraft/util/RandomSource;)F b
	generateRandomSpeed (Lnet/minecraft/util/RandomSource;)D d
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAmbientSoundInterval ()I J
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; gd
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cG
	getControllingPassenger ()Lnet/minecraft/world/entity/LivingEntity; gn
	getCustomJump ()D gb
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDismountLocationInDirection (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; a
	getEatAnim (F)F y
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; gc
	getFlag (I)Z t
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInventorySize ()I fJ
	getMaxSpawnClusterSize ()I fo
	getMaxTemper ()I gf
	getMouthAnim (F)F A
	getOwnerUUID ()Ljava/util/UUID; fT
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getSoundVolume ()F eC
	getStandAnim (F)F z
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTemper ()I fY
	handleEating (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Z b
	handleEntityEvent (B)V a
	handleStartJump (I)V b
	handleStopJump ()V b
	hasInventoryChanged (Lnet/minecraft/world/Container;)Z b
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z m
	isBred ()Z fX
	isEating ()Z fV
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isImmobile ()Z eE
	isJumping ()Z fU
	isPushable ()Z bl
	isSaddleable ()Z c
	isSaddled ()Z d
	isStanding ()Z fW
	isTamed ()Z fS
	isWearingArmor ()Z gm
	makeMad ()V gi
	modifyTemper (I)I v
	moveTail ()V t
	onClimbable ()Z b_
	onLeashDistance (F)V x
	onPlayerJump (I)V a
	openCustomInventoryScreen (Lnet/minecraft/world/entity/player/Player;)V b
	openMouth ()V fK
	playGallopSound (Lnet/minecraft/world/level/block/SoundType;)V a
	playJumpSound ()V gj
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	positionRider (Lnet/minecraft/world/entity/Entity;)V i
	randomizeAttributes (Lnet/minecraft/util/RandomSource;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setBred (Z)V y
	setEating (Z)V z
	setFlag (IZ)V d
	setIsJumping (Z)V x
	setOffspringAttributes (Lnet/minecraft/world/entity/AgeableMob;Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)V a
	setOwnerUUID (Ljava/util/UUID;)V b
	setStanding (Z)V A
	setTamed (Z)V w
	setTemper (I)V u
	spawnTamingParticles (Z)V B
	stand ()V fL
	tameWithName (Lnet/minecraft/world/entity/player/Player;)Z g
	tick ()V k
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	updateContainerEquipment ()V ga
net/minecraft/world/entity/animal/horse/Donkey bpb
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; gd
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; gc
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
net/minecraft/world/entity/animal/horse/Horse bpc
	ARMOR_MODIFIER_UUID bX
	DATA_ID_TYPE_VARIANT cn
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canWearArmor ()Z gl
	containerChanged (Lnet/minecraft/world/Container;)V a
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; gd
	getArmor ()Lnet/minecraft/world/item/ItemStack; q
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; gc
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMarkings ()Lnet/minecraft/world/entity/animal/horse/Markings; fK
	getTypeVariant ()I fL
	getVariant ()Lnet/minecraft/world/entity/animal/horse/Variant; t
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z m
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playGallopSound (Lnet/minecraft/world/level/block/SoundType;)V a
	randomizeAttributes (Lnet/minecraft/util/RandomSource;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setArmor (Lnet/minecraft/world/item/ItemStack;)V o
	setArmorEquipment (Lnet/minecraft/world/item/ItemStack;)V p
	setTypeVariant (I)V w
	setVariantAndMarkings (Lnet/minecraft/world/entity/animal/horse/Variant;Lnet/minecraft/world/entity/animal/horse/Markings;)V a
	updateContainerEquipment ()V ga
net/minecraft/world/entity/animal/horse/Horse$HorseGroupData bpc$a
	variant a
net/minecraft/world/entity/animal/horse/Llama bpd
	DATA_STRENGTH_ID cq
	DATA_SWAG_ID cr
	DATA_VARIANT_ID cs
	FOOD_ITEMS cp
	MAX_STRENGTH cn
	VARIANTS co
	caravanHead cu
	caravanTail cv
	didSpit ct
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canEatGrass ()Z gh
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canWearArmor ()Z gl
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	containerChanged (Lnet/minecraft/world/Container;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gq
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	followLeashSpeed ()D fI
	followMommy ()V gg
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; gd
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/horse/Llama; b
	getCaravanHead ()Lnet/minecraft/world/entity/animal/horse/Llama; gx
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cG
	getControllingPassenger ()Lnet/minecraft/world/entity/LivingEntity; gn
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDyeColor (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/DyeColor; o
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; gc
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInventoryColumns ()I fL
	getInventorySize ()I fJ
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cB
	getMaxTemper ()I gf
	getPassengersRidingOffset ()D bt
	getStrength ()I gp
	getSwag ()Lnet/minecraft/world/item/DyeColor; gs
	getVariant ()I gr
	handleEating (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Z b
	hasCaravanTail ()Z gv
	inCaravan ()Z gw
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z m
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isImmobile ()Z eE
	isSaddleable ()Z c
	isTraderLlama ()Z go
	isWearingArmor ()Z gm
	joinCaravan (Lnet/minecraft/world/entity/animal/horse/Llama;)V a
	leaveCaravan ()V gu
	makeBabyLlama ()Lnet/minecraft/world/entity/animal/horse/Llama; gt
	makeMad ()V gi
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	playChestEquipsSound ()V fK
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	positionRider (Lnet/minecraft/world/entity/Entity;)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setDidSpit (Z)V C
	setRandomStrength (Lnet/minecraft/util/RandomSource;)V e
	setStrength (I)V x
	setSwag (Lnet/minecraft/world/item/DyeColor;)V a
	setVariant (I)V w
	spit (Lnet/minecraft/world/entity/LivingEntity;)V k
	updateContainerEquipment ()V ga
net/minecraft/world/entity/animal/horse/Llama$LlamaAttackWolfGoal bpd$a
	getFollowDistance ()D l
net/minecraft/world/entity/animal/horse/Llama$LlamaGroupData bpd$b
	variant a
net/minecraft/world/entity/animal/horse/Llama$LlamaHurtByTargetGoal bpd$c
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/horse/Markings bpe
	$VALUES h
	BLACK_DOTS e
	BY_ID f
	NONE a
	WHITE b
	WHITE_DOTS d
	WHITE_FIELD c
	id g
	$values ()[Lnet/minecraft/world/entity/animal/horse/Markings; b
	byId (I)Lnet/minecraft/world/entity/animal/horse/Markings; a
	getId ()I a
net/minecraft/world/entity/animal/horse/Mule bpf
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; gd
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; gc
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	playChestEquipsSound ()V fK
net/minecraft/world/entity/animal/horse/SkeletonHorse bpg
	TRAP_MAX_LIFE cn
	isTrap co
	skeletonTrapGoal bX
	trapTime cp
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V fR
	aiStep ()V w_
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; ey
	getPassengersRidingOffset ()D bt
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aG
	getWaterSlowDown ()F eJ
	isTrap ()Z t
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playJumpSound ()V gj
	playSwimSound (F)V d
	randomizeAttributes (Lnet/minecraft/util/RandomSource;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	rideableUnderWater ()Z bK
	setTrap (Z)V v
net/minecraft/world/entity/animal/horse/SkeletonTrapGoal bph
	horse a
	canUse ()Z a
	createHorse (Lnet/minecraft/world/DifficultyInstance;)Lnet/minecraft/world/entity/animal/horse/AbstractHorse; a
	createSkeleton (Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)Lnet/minecraft/world/entity/monster/Skeleton; a
	disenchant (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	tick ()V e
net/minecraft/world/entity/animal/horse/TraderLlama bpi
	despawnDelay cn
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	canDespawn ()Z gz
	doPlayerRide (Lnet/minecraft/world/entity/player/Player;)V e
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	isLeashedToSomethingOtherThanTheWanderingTrader ()Z gB
	isLeashedToWanderingTrader ()Z gA
	isTraderLlama ()Z go
	makeBabyLlama ()Lnet/minecraft/world/entity/animal/horse/Llama; gt
	maybeDespawn ()V gy
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setDespawnDelay (I)V x
net/minecraft/world/entity/animal/horse/TraderLlama$TraderLlamaDefendWanderingTraderGoal bpi$a
	llama a
	ownerLastHurtBy b
	timestamp c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/horse/Variant bpj
	$VALUES j
	BLACK e
	BROWN d
	BY_ID h
	CHESTNUT c
	CREAMY b
	DARKBROWN g
	GRAY f
	WHITE a
	id i
	$values ()[Lnet/minecraft/world/entity/animal/horse/Variant; b
	byId (I)Lnet/minecraft/world/entity/animal/horse/Variant; a
	getId ()I a
net/minecraft/world/entity/animal/horse/ZombieHorse bpk
	addBehaviourGoals ()V fR
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; ey
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	randomizeAttributes (Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/entity/boss/EnderDragonPart bpn
	name c
	parentMob b
	size d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	is (Lnet/minecraft/world/entity/Entity;)Z q
	isPickable ()Z bk
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldBeSaved ()Z dw
net/minecraft/world/entity/boss/enderdragon/EndCrystal bpo
	DATA_BEAM_TARGET c
	DATA_SHOW_BOTTOM d
	time b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getBeamTarget ()Lnet/minecraft/core/BlockPos; h
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aO
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dn
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bk
	kill ()V ag
	onDestroyedBy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setBeamTarget (Lnet/minecraft/core/BlockPos;)V a
	setShowBottom (Z)V a
	shouldRenderAtSqrDistance (D)Z a
	showsBottom ()Z i
	tick ()V k
net/minecraft/world/entity/boss/enderdragon/EnderDragon bpp
	CRYSTAL_DESTROY_TARGETING cd
	DATA_PHASE b
	DRAGON_DEATH_TIME_KEY ch
	DRAGON_PHASE_KEY ci
	GROWL_INTERVAL_MAX cf
	GROWL_INTERVAL_MIN ce
	LOGGER cc
	SITTING_ALLOWED_DAMAGE_PERCENTAGE cg
	body cl
	dragonDeathTime bZ
	dragonFight cr
	flapTime bX
	growlTime ct
	head e
	inWall bY
	nearestCrystal cb
	neck ck
	nodeAdjacency cw
	nodes cv
	oFlapTime bW
	openSet cx
	phaseManager cs
	posPointer d
	positions c
	sittingDamageReceived cu
	subEntities cj
	tail1 cm
	tail2 cn
	tail3 co
	wing1 cp
	wing2 cq
	yRotA ca
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)Z b
	aiStep ()V w_
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	canChangeDimensions ()Z ck
	canRide (Lnet/minecraft/world/entity/Entity;)Z l
	checkCrystals ()V fJ
	checkDespawn ()V dm
	checkWalls (Lnet/minecraft/world/phys/AABB;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	defineSynchedData ()V a_
	findClosestNode ()I q
	findClosestNode (DDD)I q
	findPath (IILnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Path; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDragonFight ()Lnet/minecraft/world/level/dimension/end/EndDragonFight; fH
	getHeadLookVector (F)Lnet/minecraft/world/phys/Vec3; x
	getHeadPartYOffset (I[D[D)F a
	getHeadYOffset ()F fI
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLatencyPos (IF)[D a
	getPhaseManager ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager; fG
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cR
	getSoundVolume ()F eC
	getSubEntities ()[Lnet/minecraft/world/entity/boss/EnderDragonPart; t
	hurt (Ljava/util/List;)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurt (Lnet/minecraft/world/entity/boss/EnderDragonPart;Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFlapping ()Z aL
	isPickable ()Z bk
	kill ()V ag
	knockBack (Ljava/util/List;)V a
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;)V a
	onFlap ()V aK
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z g
	reconstructPath (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Path; a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	rotWrap (D)F i
	tickDeath ()V dL
	tickPart (Lnet/minecraft/world/entity/boss/EnderDragonPart;DDD)V a
net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonPhaseInstance bpr
	dragon a
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getTurnSpeed ()F h
	isSitting ()Z a
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonSittingPhase bps
	isSitting ()Z a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/DragonChargePlayerPhase bpt
	CHARGE_RECOVERY_TIME c
	LOGGER b
	targetLocation d
	timeSinceCharge e
	begin ()V d
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	setTarget (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonDeathPhase bpu
	targetLocation b
	time c
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonHoldingPatternPhase bpv
	NEW_TARGET_TARGETING b
	clockwise e
	currentPath c
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	strafePlayer (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonHoverPhase bpw
	targetLocation b
	begin ()V d
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	isSitting ()Z a
net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingApproachPhase bpx
	NEAR_EGG_TARGETING b
	currentPath c
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingPhase bpy
	targetLocation b
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	getTurnSpeed ()F h
net/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance bpz
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	getTurnSpeed ()F h
	isSitting ()Z a
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingAttackingPhase bqa
	ROAR_DURATION b
	attackingTicks c
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingFlamingPhase bqb
	FLAME_DURATION b
	SITTING_FLAME_ATTACKS_COUNT c
	WARMUP_TIME d
	flame g
	flameCount f
	flameTicks e
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	resetFlameCount ()V j
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingScanningPhase bqc
	CHARGE_TARGETING f
	SITTING_ATTACK_VIEW_RANGE d
	SITTING_ATTACK_Y_VIEW_RANGE c
	SITTING_CHARGE_VIEW_RANGE e
	SITTING_SCANNING_IDLE_TICKS b
	scanTargeting g
	scanningTime h
	begin ()V d
	doServerTick ()V c
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase bqd
	FIREBALL_CHARGE_AMOUNT c
	LOGGER b
	attackTarget g
	currentPath e
	fireballCharge d
	holdingPatternClockwise h
	targetLocation f
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonTakeoffPhase bqe
	currentPath c
	firstTick b
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase bqf
	CHARGING_PLAYER i
	DYING j
	HOLDING_PATTERN a
	HOVERING k
	LANDING d
	LANDING_APPROACH c
	SITTING_ATTACKING h
	SITTING_FLAMING f
	SITTING_SCANNING g
	STRAFE_PLAYER b
	TAKEOFF e
	id n
	instanceClass m
	name o
	phases l
	create (Ljava/lang/Class;Ljava/lang/String;)Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; a
	createInstance (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; a
	getById (I)Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; a
	getConstructor ()Ljava/lang/reflect/Constructor; a
	getCount ()I c
	getId ()I b
net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager bqg
	LOGGER a
	currentPhase d
	dragon b
	phases c
	getCurrentPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; a
	getPhase (Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase;)Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; b
	setPhase (Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase;)V a
net/minecraft/world/entity/boss/wither/WitherBoss bqj
	DATA_ID_INV bX
	DATA_TARGETS e
	DATA_TARGET_A b
	DATA_TARGET_B c
	DATA_TARGET_C d
	INVULNERABLE_TICKS bY
	LIVING_ENTITY_SELECTOR ch
	TARGETING_CONDITIONS ci
	bossEvent cg
	destroyBlocksTick cf
	idleHeadUpdates ce
	nextHeadUpdate cd
	xRotHeads bZ
	xRotOHeads cb
	yRotHeads ca
	yRotOHeads cc
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)Z b
	aiStep ()V w_
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	canChangeDimensions ()Z ck
	canDestroy (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	canRide (Lnet/minecraft/world/entity/Entity;)Z l
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkDespawn ()V dm
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	customServerAiStep ()V T
	defineSynchedData ()V a_
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAlternativeTarget (I)I s
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHeadX (I)D t
	getHeadXRot (I)F b
	getHeadY (I)D u
	getHeadYRot (I)F a
	getHeadZ (I)D v
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInvulnerableTicks ()I t
	getMobType ()Lnet/minecraft/world/entity/MobType; ey
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPowered ()Z a
	makeInvulnerable ()V n
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	performRangedAttack (IDDDZ)V a
	performRangedAttack (ILnet/minecraft/world/entity/LivingEntity;)V a
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	rotlerp (FFF)F a
	setAlternativeTarget (II)V a
	setCustomName (Lnet/minecraft/network/chat/Component;)V b
	setInvulnerableTicks (I)V c
	startSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
	stopSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V d
net/minecraft/world/entity/boss/wither/WitherBoss$WitherDoNothingGoal bqj$a
	canUse ()Z a
net/minecraft/world/entity/decoration/ArmorStand bql
	BABY_DIMENSIONS bW
	CHEST_OFFSET bY
	CLIENT_FLAG_MARKER bF
	CLIENT_FLAG_NO_BASEPLATE bE
	CLIENT_FLAG_SHOW_ARMS f
	CLIENT_FLAG_SMALL e
	DATA_BODY_POSE bI
	DATA_CLIENT_FLAGS bG
	DATA_HEAD_POSE bH
	DATA_LEFT_ARM_POSE bJ
	DATA_LEFT_LEG_POSE bL
	DATA_RIGHT_ARM_POSE bK
	DATA_RIGHT_LEG_POSE bM
	DEFAULT_BODY_POSE bQ
	DEFAULT_HEAD_POSE bP
	DEFAULT_LEFT_ARM_POSE bR
	DEFAULT_LEFT_LEG_POSE bT
	DEFAULT_RIGHT_ARM_POSE bS
	DEFAULT_RIGHT_LEG_POSE bU
	DISABLE_PUTTING_OFFSET d
	DISABLE_TAKING_OFFSET c
	ENABLE_ARMS bO
	FEET_OFFSET bX
	HEAD_OFFSET ca
	LEGS_OFFSET bZ
	MARKER_DIMENSIONS bV
	RIDABLE_MINECARTS cb
	WOBBLE_TIME b
	armorItems cd
	bodyPose ch
	disabledSlots cf
	handItems cc
	headPose cg
	invisible ce
	lastHit bN
	leftArmPose ci
	leftLegPose ck
	rightArmPose cj
	rightLegPose cl
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	attackable ()Z ff
	brokenByAnything (Lnet/minecraft/world/damagesource/DamageSource;)V h
	brokenByPlayer (Lnet/minecraft/world/damagesource/DamageSource;)V g
	canBeSeenByAnyone ()Z dZ
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	causeDamage (Lnet/minecraft/world/damagesource/DamageSource;F)V g
	defineSynchedData ()V a_
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	getArmorSlots ()Ljava/lang/Iterable; bF
	getBodyPose ()Lnet/minecraft/core/Rotations; w
	getClickedSlot (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/EquipmentSlot; i
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDimensionsMarker (Z)Lnet/minecraft/world/entity/EntityDimensions; u
	getFallSounds ()Lnet/minecraft/world/entity/LivingEntity$Fallsounds; en
	getHandSlots ()Ljava/lang/Iterable; bE
	getHeadPose ()Lnet/minecraft/core/Rotations; u
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; c
	getLeftArmPose ()Lnet/minecraft/core/Rotations; x
	getLeftLegPose ()Lnet/minecraft/core/Rotations; z
	getLightProbePosition (F)Lnet/minecraft/world/phys/Vec3; j
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; eS
	getMyRidingOffset ()D bs
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dn
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; c_
	getRightArmPose ()Lnet/minecraft/core/Rotations; y
	getRightLegPose ()Lnet/minecraft/core/Rotations; A
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	hasPhysics ()Z C
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	ignoreExplosion ()Z cE
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAffectedByPotions ()Z fe
	isBaby ()Z y_
	isDisabled (Lnet/minecraft/world/entity/EquipmentSlot;)Z e
	isEffectiveAi ()Z eP
	isMarker ()Z t
	isNoBasePlate ()Z r
	isPickable ()Z bk
	isPushable ()Z bl
	isShowArms ()Z q
	isSmall ()Z n
	kill ()V ag
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playBrokenSound ()V G
	pushEntities ()V eN
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readPose (Lnet/minecraft/nbt/CompoundTag;)V c
	refreshDimensions ()V z_
	setBit (BIZ)B a
	setBodyPose (Lnet/minecraft/core/Rotations;)V b
	setHeadPose (Lnet/minecraft/core/Rotations;)V a
	setInvisible (Z)V j
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setLeftArmPose (Lnet/minecraft/core/Rotations;)V c
	setLeftLegPose (Lnet/minecraft/core/Rotations;)V e
	setMarker (Z)V t
	setNoBasePlate (Z)V s
	setRightArmPose (Lnet/minecraft/core/Rotations;)V d
	setRightLegPose (Lnet/minecraft/core/Rotations;)V f
	setShowArms (Z)V r
	setSmall (Z)V a
	setYBodyRot (F)V m
	setYHeadRot (F)V l
	shouldRenderAtSqrDistance (D)Z a
	showBreakingParticles ()V E
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z r
	swapItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Z a
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V k
	tickHeadTurn (FF)F e
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	updateInvisibilityStatus ()V F
	writePose ()Lnet/minecraft/nbt/CompoundTag; D
net/minecraft/world/entity/decoration/GlowItemFrame bqm
	getAddItemSound ()Lnet/minecraft/sounds/SoundEvent; l
	getBreakSound ()Lnet/minecraft/sounds/SoundEvent; i
	getFrameItemStack ()Lnet/minecraft/world/item/ItemStack; o
	getPlaceSound ()Lnet/minecraft/sounds/SoundEvent; j
	getRemoveItemSound ()Lnet/minecraft/sounds/SoundEvent; h
	getRotateItemSound ()Lnet/minecraft/sounds/SoundEvent; n
net/minecraft/world/entity/decoration/HangingEntity bqn
	HANGING_ENTITY b
	LOGGER e
	checkInterval f
	direction d
	pos c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getDirection ()Lnet/minecraft/core/Direction; cv
	getHeight ()I t
	getPos ()Lnet/minecraft/core/BlockPos; w
	getWidth ()I s
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bk
	mirror (Lnet/minecraft/world/level/block/Mirror;)F a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	offs (I)D a
	playPlacementSound ()V u
	push (DDD)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V q
	refreshDimensions ()V z_
	repositionEntityAfterLoad ()Z bm
	rotate (Lnet/minecraft/world/level/block/Rotation;)F a
	setDirection (Lnet/minecraft/core/Direction;)V a
	setPos (DDD)V e
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z r
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/item/ItemEntity; a
	survives ()Z r
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V k
net/minecraft/world/entity/decoration/ItemFrame bqo
	DATA_ITEM ao
	DATA_ROTATION ap
	LOGGER f
	NUM_ROTATIONS e
	dropChance aq
	fixed ar
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	dropItem (Lnet/minecraft/world/entity/Entity;Z)V b
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getAddItemSound ()Lnet/minecraft/sounds/SoundEvent; l
	getAnalogOutput ()I C
	getBreakSound ()Lnet/minecraft/sounds/SoundEvent; i
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getFrameItemStack ()Lnet/minecraft/world/item/ItemStack; o
	getFramedMapId ()Ljava/util/OptionalInt; y
	getHeight ()I t
	getItem ()Lnet/minecraft/world/item/ItemStack; x
	getPickRadius ()F bx
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dn
	getPlaceSound ()Lnet/minecraft/sounds/SoundEvent; j
	getRemoveItemSound ()Lnet/minecraft/sounds/SoundEvent; h
	getRotateItemSound ()Lnet/minecraft/sounds/SoundEvent; n
	getRotation ()I A
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getVisualRotationYInDegrees ()F dr
	getWidth ()I s
	hasFramedMap ()Z z
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	kill ()V ag
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onItemChanged (Lnet/minecraft/world/item/ItemStack;)V d
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playPlacementSound ()V u
	push (DDD)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V q
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	removeFramedMap (Lnet/minecraft/world/item/ItemStack;)V c
	setDirection (Lnet/minecraft/core/Direction;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;Z)V a
	setRotation (I)V a
	setRotation (IZ)V a
	shouldRenderAtSqrDistance (D)Z a
	survives ()Z r
net/minecraft/world/entity/decoration/LeashFenceKnotEntity bqp
	OFFSET_Y e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getHeight ()I t
	getOrCreateKnot (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity; b
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dn
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; n
	getWidth ()I s
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	playPlacementSound ()V u
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V q
	setDirection (Lnet/minecraft/core/Direction;)V a
	shouldRenderAtSqrDistance (D)Z a
	survives ()Z r
net/minecraft/world/entity/decoration/Painting bqq
	DATA_PAINTING_VARIANT_ID e
	DEFAULT_VARIANT f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	create (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Ljava/util/Optional; a
	defineSynchedData ()V a_
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getDefaultVariant ()Lnet/minecraft/core/Holder; i
	getHeight ()I t
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dn
	getVariant ()Lnet/minecraft/core/Holder; h
	getWidth ()I s
	lerpTo (DDDFFIZ)V a
	moveTo (DDDFF)V b
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playPlacementSound ()V u
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	setVariant (Lnet/minecraft/core/Holder;)V a
	trackingPosition ()Lnet/minecraft/world/phys/Vec3; cZ
	variantArea (Lnet/minecraft/core/Holder;)I b
net/minecraft/world/entity/decoration/PaintingVariant bqr
	height b
	width a
	getHeight ()I b
	getWidth ()I a
net/minecraft/world/entity/decoration/PaintingVariants bqs
	ALBAN c
	AZTEC b
	AZTEC2 d
	BOMB e
	BURNING_SKULL x
	BUST p
	COURBET i
	CREEBET l
	DONKEY_KONG z
	EARTH A
	FIGHTERS u
	FIRE D
	GRAHAM n
	KEBAB a
	MATCH o
	PIGSCENE w
	PLANT f
	POINTER v
	POOL h
	SEA j
	SKELETON y
	SKULL_AND_ROSES s
	STAGE q
	SUNSET k
	VOID r
	WANDERER m
	WASTELAND g
	WATER C
	WIND B
	WITHER t
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/entity/decoration/PaintingVariant; a
	create (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/entity/item/FallingBlockEntity bqu
	DATA_START_POS e
	LOGGER f
	blockData d
	blockState ao
	cancelDrop ap
	dropItem c
	fallDamageMax ar
	fallDamagePerDistance as
	hurtEntities aq
	time b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	callOnBrokenAfterFall (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	defineSynchedData ()V a_
	displayFireAnimation ()Z cn
	fall (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/entity/item/FallingBlockEntity; a
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; i
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aO
	getStartPos ()Lnet/minecraft/core/BlockPos; h
	isAttackable ()Z ch
	isPickable ()Z bk
	onlyOpCanSetNbt ()Z cF
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	setHurtsEntities (FI)V b
	setStartPos (Lnet/minecraft/core/BlockPos;)V a
	tick ()V k
net/minecraft/world/entity/item/ItemEntity bqv
	DATA_ITEM c
	INFINITE_LIFETIME f
	INFINITE_PICKUP_DELAY e
	LIFETIME d
	age ao
	bobOffs b
	health aq
	owner as
	pickupDelay ap
	thrower ar
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	areMergable (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	copy ()Lnet/minecraft/world/entity/item/ItemEntity; x
	dampensVibrations ()Z aP
	defineSynchedData ()V a_
	fireImmune ()Z aQ
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getAge ()I n
	getItem ()Lnet/minecraft/world/item/ItemStack; i
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aO
	getName ()Lnet/minecraft/network/chat/Component; X
	getOwner ()Ljava/util/UUID; j
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cR
	getSpin (F)F a
	getThrower ()Ljava/util/UUID; l
	getThrowingEntity ()Lnet/minecraft/world/entity/Entity; h
	getVisualRotationYInDegrees ()F dr
	hasPickUpDelay ()Z s
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAttackable ()Z ch
	isMergable ()Z C
	makeFakeItem ()V w
	merge (Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;)V a
	merge (Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	merge (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; a
	mergeWithNeighbours ()V A
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setDefaultPickUpDelay ()V o
	setExtendedLifetime ()V u
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
	setNeverPickUp ()V r
	setNoPickUpDelay ()V q
	setOwner (Ljava/util/UUID;)V b
	setPickUpDelay (I)V a
	setThrower (Ljava/util/UUID;)V c
	setUnderLavaMovement ()V z
	setUnderwaterMovement ()V y
	setUnlimitedLifetime ()V t
	tick ()V k
	tryToMerge (Lnet/minecraft/world/entity/item/ItemEntity;)V a
net/minecraft/world/entity/item/PrimedTnt bqw
	DATA_FUSE_ID b
	DEFAULT_FUSE_TIME c
	owner d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	explode ()V j
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getFuse ()I i
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aO
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; h
	isPickable ()Z bk
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setFuse (I)V a
	tick ()V k
net/minecraft/world/entity/monster/AbstractIllager bqy
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; n
	getMobType ()Lnet/minecraft/world/entity/MobType; ey
	registerGoals ()V u
net/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose bqy$a
	$VALUES i
	ATTACKING b
	BOW_AND_ARROW d
	CELEBRATING g
	CROSSBOW_CHARGE f
	CROSSBOW_HOLD e
	CROSSED a
	NEUTRAL h
	SPELLCASTING c
	$values ()[Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; a
net/minecraft/world/entity/monster/AbstractIllager$RaiderOpenDoorGoal bqy$b
	canUse ()Z a
net/minecraft/world/entity/monster/AbstractSkeleton bqz
	bowGoal b
	meleeGoal c
	aiStep ()V w_
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getMobType ()Lnet/minecraft/world/entity/MobType; ey
	getMyRidingOffset ()D bs
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; q
	isShaking ()Z fJ
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessWeaponGoal ()V t
	registerGoals ()V u
	rideTick ()V br
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/monster/Blaze bra
	DATA_FLAGS_ID d
	allowedHeightOffset b
	nextHeightOffsetChangeTick c
	aiStep ()V w_
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	customServerAiStep ()V T
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLightLevelDependentMagicValue ()F bg
	isCharged ()Z q
	isOnFire ()Z bH
	isSensitiveToWater ()Z eL
	registerGoals ()V u
	setCharged (Z)V v
net/minecraft/world/entity/monster/Blaze$BlazeAttackGoal bra$a
	attackStep b
	attackTime c
	blaze a
	lastSeen d
	canUse ()Z a
	getFollowDistance ()D h
	requiresUpdateEveryTick ()Z E_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/CaveSpider brb
	createCaveSpider ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
net/minecraft/world/entity/monster/Creeper brc
	DATA_IS_IGNITED d
	DATA_IS_POWERED c
	DATA_SWELL_DIR b
	droppedSkulls ca
	explosionRadius bZ
	maxSwell bY
	oldSwell e
	swell bX
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canDropMobsSkull ()Z fK
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	explodeCreeper ()V fM
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxFallDistance ()I cl
	getSwellDir ()I q
	getSwelling (F)F y
	ignite ()V fJ
	increaseDroppedSkulls ()V fL
	isIgnited ()Z t
	isPowered ()Z a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setSwellDir (I)V a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	spawnLingeringCloud ()V fP
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V k
net/minecraft/world/entity/monster/CrossbowAttackMob brd
	getProjectileShotVector (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/Vec3;F)Lcom/mojang/math/Vector3f; a
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; G
	onCrossbowAttackPerformed ()V a
	performCrossbowAttack (Lnet/minecraft/world/entity/LivingEntity;F)V b
	setChargingCrossbow (Z)V b
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/projectile/Projectile;FF)V a
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
net/minecraft/world/entity/monster/Drowned bre
	NAUTILUS_SHELL_CHANCE b
	groundNavigation d
	searchingForLand ca
	waterNavigation c
	addBehaviourGoals ()V n
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	checkDrownedSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	closeToNextPos ()Z fL
	convertsInWater ()Z fK
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getSkull ()Lnet/minecraft/world/item/ItemStack; fJ
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; t
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aG
	isDeepEnoughToSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isPushedByFluid ()Z cr
	okTarget (Lnet/minecraft/world/entity/LivingEntity;)Z k
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	setSearchingForLand (Z)V v
	supportsBreakDoorGoal ()Z q
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	updateSwimming ()V aX
	wantsToSwim ()Z fT
net/minecraft/world/entity/monster/Drowned$DrownedAttackGoal bre$a
	drowned b
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/monster/Drowned$DrownedGoToBeachGoal bre$b
	drowned g
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/monster/Drowned$DrownedGoToWaterGoal bre$c
	level f
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	getWaterPos ()Lnet/minecraft/world/phys/Vec3; h
	start ()V c
net/minecraft/world/entity/monster/Drowned$DrownedMoveControl bre$d
	drowned l
	tick ()V a
net/minecraft/world/entity/monster/Drowned$DrownedSwimUpGoal bre$e
	drowned a
	seaLevel c
	speedModifier b
	stuck d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Drowned$DrownedTridentAttackGoal bre$f
	drowned a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/monster/ElderGuardian brf
	EFFECT_AMPLIFIER bZ
	EFFECT_DISPLAY_LIMIT ca
	EFFECT_DURATION bY
	EFFECT_INTERVAL e
	EFFECT_RADIUS bX
	ELDER_SIZE_SCALE b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	customServerAiStep ()V T
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAttackDuration ()I q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; t
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
net/minecraft/world/entity/monster/EnderMan brg
	DATA_CARRY_STATE bY
	DATA_CREEPY bZ
	DATA_STARED_AT ca
	DELAY_BETWEEN_CREEPY_STARE_SOUND e
	MIN_DEAGGRESSION_TIME bX
	PERSISTENT_ANGER_TIME cd
	SPEED_MODIFIER_ATTACKING d
	SPEED_MODIFIER_ATTACKING_UUID c
	lastStareSound cb
	persistentAngerTarget cf
	remainingPersistentAngerTime ce
	targetChangeTime cc
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	customServerAiStep ()V T
	defineSynchedData ()V a_
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getCarriedBlock ()Lnet/minecraft/world/level/block/state/BlockState; fJ
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hasBeenStaredAt ()Z fL
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtWithCleanWater (Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/projectile/ThrownPotion;F)Z a
	isCreepy ()Z fK
	isLookingAtMe (Lnet/minecraft/world/entity/player/Player;)Z f
	isSensitiveToWater ()Z eL
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStareSound ()V q
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	requiresCustomPersistence ()Z P
	setBeingStaredAt ()V fM
	setCarriedBlock (Lnet/minecraft/world/level/block/state/BlockState;)V c
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	startPersistentAngerTimer ()V c
	teleport ()Z t
	teleport (DDD)Z q
	teleportTowards (Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/world/entity/monster/EnderMan$EndermanFreezeWhenLookedAt brg$a
	enderman a
	target b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanLeaveBlockGoal brg$b
	enderman a
	canPlaceBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Z a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanLookForPlayerGoal brg$c
	aggroTime k
	continueAggroTargetConditions n
	enderman i
	pendingTarget j
	startAggroTargetConditions m
	teleportTime l
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanTakeBlockGoal brg$d
	enderman a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Endermite brh
	MAX_LIFE b
	life c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	checkEndermiteSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; ey
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aO
	getMyRidingOffset ()D bs
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setYBodyRot (F)V m
	tick ()V k
net/minecraft/world/entity/monster/Enemy bri
	XP_REWARD_BOSS h_
	XP_REWARD_HUGE g_
	XP_REWARD_LARGE f_
	XP_REWARD_MEDIUM e_
	XP_REWARD_NONE c_
	XP_REWARD_SMALL d_
net/minecraft/world/entity/monster/Evoker brj
	wololoTarget e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	customServerAiStep ()V T
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; fJ
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; L_
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getWololoTarget ()Lnet/minecraft/world/entity/animal/Sheep; gc
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setWololoTarget (Lnet/minecraft/world/entity/animal/Sheep;)V a
net/minecraft/world/entity/monster/Evoker$EvokerAttackSpellGoal brj$a
	createSpellEntity (DDDDFI)V a
	getCastingInterval ()I i
	getCastingTime ()I h
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
net/minecraft/world/entity/monster/Evoker$EvokerCastingSpellGoal brj$b
	tick ()V e
net/minecraft/world/entity/monster/Evoker$EvokerSummonSpellGoal brj$c
	vexCountTargeting e
	canUse ()Z a
	getCastingInterval ()I i
	getCastingTime ()I h
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
net/minecraft/world/entity/monster/Evoker$EvokerWololoSpellGoal brj$d
	wololoTargeting e
	canContinueToUse ()Z b
	canUse ()Z a
	getCastWarmupTime ()I n
	getCastingInterval ()I i
	getCastingTime ()I h
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Ghast brk
	DATA_IS_CHARGING b
	explosionPower c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkGhastSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; t
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getExplosionPower ()I q
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxSpawnClusterSize ()I fo
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cR
	getSoundVolume ()F eC
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isCharging ()Z n
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isReflectedFireball (Lnet/minecraft/world/damagesource/DamageSource;)Z g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setCharging (Z)V v
	shouldDespawnInPeaceful ()Z Q
net/minecraft/world/entity/monster/Ghast$GhastLookGoal brk$a
	ghast a
	canUse ()Z a
	requiresUpdateEveryTick ()Z E_
	tick ()V e
net/minecraft/world/entity/monster/Ghast$GhastMoveControl brk$b
	floatDuration m
	ghast l
	canReach (Lnet/minecraft/world/phys/Vec3;I)Z a
	tick ()V a
net/minecraft/world/entity/monster/Ghast$GhastShootFireballGoal brk$c
	chargeTime a
	ghast b
	canUse ()Z a
	requiresUpdateEveryTick ()Z E_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Ghast$RandomFloatAroundGoal brk$d
	ghast a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Giant brl
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
net/minecraft/world/entity/monster/Guardian brm
	ATTACK_TIME c
	DATA_ID_ATTACK_TARGET e
	DATA_ID_MOVING b
	clientSideAttackTime cd
	clientSideCachedAttackTarget cc
	clientSideSpikesAnimation ca
	clientSideSpikesAnimationO cb
	clientSideTailAnimation bX
	clientSideTailAnimationO bY
	clientSideTailAnimationSpeed bZ
	clientSideTouchedGround ce
	randomStrollGoal d
	aiStep ()V w_
	canBreatheUnderwater ()Z dB
	checkGuardianSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fJ
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	getActiveAttackTarget ()Lnet/minecraft/world/entity/LivingEntity; fM
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAmbientSoundInterval ()I J
	getAttackAnimationScale (F)F A
	getAttackDuration ()I q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; t
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxHeadXRot ()I U
	getMobType ()Lnet/minecraft/world/entity/MobType; ey
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aO
	getSpikesAnimation (F)F z
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTailAnimation (F)F y
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasActiveAttackTarget ()Z fL
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isMoving ()Z fK
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	registerGoals ()V u
	setActiveAttackTarget (I)V a
	setMoving (Z)V v
	travel (Lnet/minecraft/world/phys/Vec3;)V g
net/minecraft/world/entity/monster/Guardian$GuardianAttackGoal brm$a
	attackTime b
	elder c
	guardian a
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z E_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Guardian$GuardianAttackSelector brm$b
	guardian a
	test (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/monster/Guardian$GuardianMoveControl brm$c
	guardian l
	tick ()V a
net/minecraft/world/entity/monster/Husk brn
	checkHuskSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	convertsInWater ()Z fK
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doUnderWaterConversion ()V fM
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getSkull ()Lnet/minecraft/world/item/ItemStack; fJ
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; t
	isSunSensitive ()Z K_
net/minecraft/world/entity/monster/Illusioner bro
	ILLUSION_SPREAD bY
	ILLUSION_TRANSITION_TICKS bX
	NUM_ILLUSIONS e
	clientSideIllusionOffsets ca
	clientSideIllusionTicks bZ
	aiStep ()V w_
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; n
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; cz
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; fJ
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; L_
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getIllusionOffsets (F)[Lnet/minecraft/world/phys/Vec3; y
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	registerGoals ()V u
net/minecraft/world/entity/monster/Illusioner$IllusionerBlindnessSpellGoal bro$a
	lastTargetId e
	canUse ()Z a
	getCastingInterval ()I i
	getCastingTime ()I h
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
	start ()V c
net/minecraft/world/entity/monster/Illusioner$IllusionerMirrorSpellGoal bro$b
	canUse ()Z a
	getCastingInterval ()I i
	getCastingTime ()I h
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
net/minecraft/world/entity/monster/MagmaCube brp
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkMagmaCubeSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	decreaseSquish ()V fG
	getAttackDamage ()F fI
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getJumpDelay ()I t
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; fK
	getLightLevelDependentMagicValue ()F bg
	getParticleType ()Lnet/minecraft/core/particles/ParticleOptions; q
	getSquishSound ()Lnet/minecraft/sounds/SoundEvent; fJ
	isDealsDamage ()Z fH
	isOnFire ()Z bH
	jumpFromGround ()V eH
	jumpInLiquid (Lnet/minecraft/tags/TagKey;)V c
	setSize (IZ)V a
net/minecraft/world/entity/monster/Monster brq
	aiStep ()V w_
	checkAnyLightMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	checkMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	createMonsterAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fO
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getFallSounds ()Lnet/minecraft/world/entity/LivingEntity$Fallsounds; en
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; h
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cR
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aG
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aH
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isDarkEnoughToSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	isPreventingPlayerRest (Lnet/minecraft/world/entity/player/Player;)Z e
	shouldDespawnInPeaceful ()Z Q
	shouldDropExperience ()Z dM
	shouldDropLoot ()Z dN
	updateNoActionTime ()V fN
net/minecraft/world/entity/monster/PatrollingMonster brr
	patrolLeader c
	patrolTarget b
	patrolling d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canBeLeader ()Z fK
	canJoinPatrol ()Z fQ
	checkPatrollingMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	findPatrolTarget ()V fR
	getMyRidingOffset ()D bs
	getPatrolTarget ()Lnet/minecraft/core/BlockPos; fL
	hasPatrolTarget ()Z fM
	isPatrolLeader ()Z fP
	isPatrolling ()Z fS
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	removeWhenFarAway (D)Z h
	setPatrolLeader (Z)V v
	setPatrolTarget (Lnet/minecraft/core/BlockPos;)V g
	setPatrolling (Z)V w
net/minecraft/world/entity/monster/PatrollingMonster$LongDistancePatrolGoal brr$a
	NAVIGATION_FAILED_COOLDOWN a
	cooldownUntil e
	leaderSpeedModifier d
	mob b
	speedModifier c
	canUse ()Z a
	findPatrolCompanions ()Ljava/util/List; h
	moveRandomly ()Z i
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Phantom brs
	FLAP_DEGREES_PER_TICK b
	ID_SIZE d
	TICKS_PER_FLAP c
	anchorPoint bW
	attackPhase bX
	moveTargetPoint e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; y
	customServerAiStep ()V T
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; ey
	getPhantomSize ()I n
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cR
	getSoundVolume ()F eC
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getUniqueFlapTickOffset ()I q
	isFlapping ()Z aL
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setPhantomSize (I)V a
	shouldDespawnInPeaceful ()Z Q
	shouldRenderAtSqrDistance (D)Z a
	tick ()V k
	updatePhantomSizeInfo ()V t
net/minecraft/world/entity/monster/Phantom$AttackPhase brs$a
	$VALUES c
	CIRCLE a
	SWOOP b
	$values ()[Lnet/minecraft/world/entity/monster/Phantom$AttackPhase; a
net/minecraft/world/entity/monster/Phantom$PhantomAttackPlayerTargetGoal brs$b
	attackTargeting b
	nextScanTick c
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/monster/Phantom$PhantomAttackStrategyGoal brs$c
	nextSweepTick b
	canUse ()Z a
	setAnchorAboveTarget ()V h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Phantom$PhantomBodyRotationControl brs$d
	clientTick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomCircleAroundAnchorGoal brs$e
	angle c
	clockwise f
	distance d
	height e
	canUse ()Z a
	selectNext ()V i
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Phantom$PhantomLookControl brs$f
	tick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomMoveControl brs$g
	speed m
	tick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomMoveTargetGoal brs$h
	touchingTarget ()Z h
net/minecraft/world/entity/monster/Phantom$PhantomSweepAttackGoal brs$i
	CAT_SEARCH_TICK_DELAY c
	catSearchTick e
	isScaredOfCat d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Pillager brt
	CROSSBOW_POWER bY
	INVENTORY_SIZE e
	IS_CHARGING_CROSSBOW b
	SLOT_OFFSET bX
	inventory bZ
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	defineSynchedData ()V a_
	enchantSpawnedWeapon (Lnet/minecraft/util/RandomSource;F)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; n
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; L_
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInventory ()Lnet/minecraft/world/SimpleContainer; t
	getMaxSpawnClusterSize ()I fo
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	isChargingCrossbow ()Z fJ
	onCrossbowAttackPerformed ()V a
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setChargingCrossbow (Z)V b
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
	wantsItem (Lnet/minecraft/world/item/ItemStack;)Z m
net/minecraft/world/entity/monster/RangedAttackMob bru
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
net/minecraft/world/entity/monster/Ravager brv
	ATTACK_DURATION cd
	ATTACK_MOVEMENT_SPEED bY
	BASE_MOVEMENT_SPEED bX
	NO_RAVAGER_AND_ALIVE e
	STUNNED_COLOR bZ
	STUNNED_COLOR_BLUE ca
	STUNNED_COLOR_GREEN cb
	STUNNED_COLOR_RED cc
	STUN_DURATION b
	attackTick ce
	roarTick cg
	stunnedTick cf
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	applyRaidBuffs (IZ)V a
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	canBeControlledBy (Lnet/minecraft/world/entity/Entity;)Z a
	canBeLeader ()Z fK
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAttackTick ()I q
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; L_
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cG
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxHeadYRot ()I V
	getPassengersRidingOffset ()D bt
	getRoarTick ()I fT
	getStunnedTick ()I fJ
	handleEntityEvent (B)V a
	hasLineOfSight (Lnet/minecraft/world/entity/Entity;)Z B
	isImmobile ()Z eE
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	roar ()V fV
	strongKnockback (Lnet/minecraft/world/entity/Entity;)V b
	stunEffect ()V fU
	updateControlFlags ()V M
net/minecraft/world/entity/monster/Ravager$RavagerMeleeAttackGoal brv$a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/monster/Ravager$RavagerNavigation brv$b
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
net/minecraft/world/entity/monster/Ravager$RavagerNodeEvaluator brv$c
	evaluateBlockPathType (Lnet/minecraft/world/level/BlockGetter;ZZLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
net/minecraft/world/entity/monster/Shulker brw
	COVERED_ARMOR_MODIFIER bX
	COVERED_ARMOR_MODIFIER_UUID e
	DATA_ATTACH_FACE_ID b
	DATA_COLOR_ID d
	DATA_PEEK_ID c
	DEFAULT_COLOR ca
	FORWARD cf
	MAX_LID_OPEN ck
	MAX_TELEPORT_DISTANCE cb
	NO_COLOR bZ
	OTHER_SHULKER_LIMIT cd
	OTHER_SHULKER_SCAN_RADIUS cc
	PEEK_PER_TICK ce
	TELEPORT_STEPS bY
	clientOldAttachPosition ci
	clientSideTeleportInterpolation cj
	currentPeekAmount ch
	currentPeekAmountO cg
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canBeCollidedWith ()Z bq
	canStayAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; y
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	findAttachableSurface (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction; g
	findNewAttachment ()V fK
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAttachFace ()Lnet/minecraft/core/Direction; t
	getClientPeekAmount (F)F y
	getColor ()Lnet/minecraft/world/item/DyeColor; fJ
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDeltaMovement ()Lnet/minecraft/world/phys/Vec3; dd
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxHeadXRot ()I U
	getMaxHeadYRot ()I V
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aO
	getMyRidingOffset ()D bs
	getPhysicalPeek (F)F A
	getPickRadius ()F bx
	getProgressAabb (Lnet/minecraft/core/Direction;F)Lnet/minecraft/world/phys/AABB; a
	getProgressDeltaAabb (Lnet/minecraft/core/Direction;FF)Lnet/minecraft/world/phys/AABB; a
	getRawPeekAmount ()I fP
	getRenderPosition (F)Ljava/util/Optional; z
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cR
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hitByShulkerBullet ()V fO
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isClosed ()Z fN
	isPositionBlocked (Lnet/minecraft/core/BlockPos;)Z h
	lerpTo (DDDFFIZ)V a
	makeBoundingBox ()Lnet/minecraft/world/phys/AABB; al
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onPeekAmountChange ()V fM
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playAmbientSound ()V K
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	registerGoals ()V u
	setAttachFace (Lnet/minecraft/core/Direction;)V a
	setColor (Lnet/minecraft/world/item/DyeColor;)V a
	setDeltaMovement (Lnet/minecraft/world/phys/Vec3;)V f
	setPos (DDD)V e
	setRawPeekAmount (I)V a
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	stopRiding ()V p
	teleportSomewhere ()Z q
	tick ()V k
	updatePeekAmount ()Z fL
net/minecraft/world/entity/monster/Shulker$ShulkerAttackGoal brw$a
	attackTime b
	canUse ()Z a
	requiresUpdateEveryTick ()Z E_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Shulker$ShulkerBodyRotationControl brw$b
	clientTick ()V a
net/minecraft/world/entity/monster/Shulker$ShulkerDefenseAttackGoal brw$c
	canUse ()Z a
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/entity/monster/Shulker$ShulkerLookControl brw$d
	clampHeadRotationToBody ()V b
	getXRotD ()Ljava/util/Optional; h
	getYRotD ()Ljava/util/Optional; i
net/minecraft/world/entity/monster/Shulker$ShulkerNearestAttackGoal brw$e
	canUse ()Z a
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/entity/monster/Shulker$ShulkerPeekGoal brw$f
	peekTime b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Silverfish brx
	friendsGoal b
	checkSilverfishSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; ey
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aO
	getMyRidingOffset ()D bs
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	registerGoals ()V u
	setYBodyRot (F)V m
	tick ()V k
net/minecraft/world/entity/monster/Silverfish$SilverfishMergeWithStoneGoal brx$a
	doMerge j
	selectedDirection i
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Silverfish$SilverfishWakeUpFriendsGoal brx$b
	lookForFriends b
	silverfish a
	canUse ()Z a
	notifyHurt ()V h
	tick ()V e
net/minecraft/world/entity/monster/Skeleton bry
	CONVERSION_TAG b
	DATA_STRAY_CONVERSION_ID c
	conversionTime e
	inPowderSnowTime d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canFreeze ()Z do
	defineSynchedData ()V a_
	doFreezeConversion ()V fL
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; q
	isFreezeConverting ()Z fK
	isShaking ()Z fJ
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setFreezeConverting (Z)V v
	startFreezeConversion (I)V a
	tick ()V k
net/minecraft/world/entity/monster/Slime brz
	ID_SIZE bX
	MAX_SIZE c
	MIN_SIZE b
	oSquish bW
	squish e
	targetSquish d
	wasOnGround bY
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkSlimeSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	dealDamage (Lnet/minecraft/world/entity/LivingEntity;)V k
	decreaseSquish ()V fG
	defineSynchedData ()V a_
	doPlayJumpSound ()Z fN
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAttackDamage ()F fI
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getJumpDelay ()I t
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; fK
	getMaxHeadXRot ()I U
	getParticleType ()Lnet/minecraft/core/particles/ParticleOptions; q
	getSize ()I fL
	getSoundPitch ()F n
	getSoundVolume ()F eC
	getSquishSound ()Lnet/minecraft/sounds/SoundEvent; fJ
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getType ()Lnet/minecraft/world/entity/EntityType; ad
	isDealsDamage ()Z fH
	isTiny ()Z fM
	jumpFromGround ()V eH
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshDimensions ()V z_
	registerGoals ()V u
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	setSize (IZ)V a
	shouldDespawnInPeaceful ()Z Q
	tick ()V k
net/minecraft/world/entity/monster/Slime$SlimeAttackGoal brz$a
	growTiredTimer b
	slime a
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z E_
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeFloatGoal brz$b
	slime a
	canUse ()Z a
	requiresUpdateEveryTick ()Z E_
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeKeepOnJumpingGoal brz$c
	slime a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeMoveControl brz$d
	isAggressive o
	jumpDelay m
	slime n
	yRot l
	setDirection (FZ)V a
	setWantedMovement (D)V a
	tick ()V a
net/minecraft/world/entity/monster/Slime$SlimeRandomDirectionGoal brz$e
	chosenDegrees b
	nextRandomizeTime c
	slime a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/SpellcasterIllager bsa
	DATA_SPELL_CASTING_ID e
	currentSpell bX
	spellCastingTickCount b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	customServerAiStep ()V T
	defineSynchedData ()V a_
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; n
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; fJ
	getCurrentSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; fU
	getSpellCastingTime ()I fV
	isCastingSpell ()Z fT
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setIsCastingSpell (Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;)V a
	tick ()V k
net/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell bsa$a
	$VALUES i
	BLINDNESS f
	DISAPPEAR e
	FANGS c
	NONE a
	SUMMON_VEX b
	WOLOLO d
	id g
	spellColor h
	$values ()[Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; a
	byId (I)Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; a
net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterCastingSpellGoal bsa$b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterUseSpellGoal bsa$c
	attackWarmupDelay b
	nextAttackTickCount c
	canContinueToUse ()Z b
	canUse ()Z a
	getCastWarmupTime ()I n
	getCastingInterval ()I i
	getCastingTime ()I h
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Spider bsb
	DATA_FLAGS_ID b
	SPIDER_SPECIAL_EFFECT_CHANCE c
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; ey
	getPassengersRidingOffset ()D bt
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	isClimbing ()Z t
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	onClimbable ()Z b_
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	registerGoals ()V u
	setClimbing (Z)V v
	tick ()V k
net/minecraft/world/entity/monster/Spider$SpiderAttackGoal bsb$a
	canContinueToUse ()Z b
	canUse ()Z a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/monster/Spider$SpiderEffectsGroupData bsb$b
	effect a
	setRandomEffect (Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/entity/monster/Spider$SpiderTargetGoal bsb$c
	canUse ()Z a
net/minecraft/world/entity/monster/Stray bsc
	checkStraySpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; q
net/minecraft/world/entity/monster/Strider bsd
	DATA_BOOST_TIME cd
	DATA_SADDLE_ID cf
	DATA_SUFFOCATING ce
	FOOD_ITEMS cb
	STEERING_MODIFIER ca
	SUFFOCATE_SPEED_MODIFIER bY
	SUFFOCATE_STEERING_MODIFIER bX
	TEMPT_ITEMS cc
	panicGoal ci
	steering cg
	temptGoal ch
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	boost ()Z a
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z o
	canBeControlledBy (Lnet/minecraft/world/entity/Entity;)Z a
	canStandOnFluid (Lnet/minecraft/world/level/material/FluidState;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkStriderSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fJ
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	dropEquipment ()V ei
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	floatStrider ()V fR
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/monster/Strider; b
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cG
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cB
	getMoveSpeed ()F t
	getPassengersRidingOffset ()D bt
	getSteeringSpeed ()F b
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isBeingTempted ()Z fL
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isOnFire ()Z bH
	isPanicking ()Z fK
	isSaddleable ()Z c
	isSaddled ()Z d
	isSensitiveToWater ()Z eL
	isSuffocating ()Z q
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	nextStep ()F aF
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setSuffocating (Z)V v
	shouldPassengersInheritMalus ()Z x
	spawnJockey (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/SpawnGroupData;)Lnet/minecraft/world/entity/SpawnGroupData; a
	tick ()V k
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	travelWithInput (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/monster/Strider$StriderGoToLavaGoal bsd$a
	strider g
	canContinueToUse ()Z b
	canUse ()Z a
	getMoveToTarget ()Lnet/minecraft/core/BlockPos; k
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	shouldRecalculatePath ()Z l
net/minecraft/world/entity/monster/Strider$StriderPathNavigation bsd$b
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	hasValidPathType (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z a
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/monster/Vex bse
	DATA_FLAGS_ID d
	FLAG_IS_CHARGING e
	FLAP_DEGREES_PER_TICK b
	TICKS_PER_FLAP c
	boundOrigin bY
	hasLimitedLife bZ
	limitedLifeTicks ca
	owner bX
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBoundOrigin ()Lnet/minecraft/core/BlockPos; t
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLightLevelDependentMagicValue ()F bg
	getOwner ()Lnet/minecraft/world/entity/Mob; q
	getVexFlag (I)Z b
	isCharging ()Z fJ
	isFlapping ()Z aL
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setBoundOrigin (Lnet/minecraft/core/BlockPos;)V g
	setIsCharging (Z)V v
	setLimitedLife (I)V a
	setOwner (Lnet/minecraft/world/entity/Mob;)V a
	setVexFlag (IZ)V a
	tick ()V k
net/minecraft/world/entity/monster/Vex$VexChargeAttackGoal bse$a
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z E_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Vex$VexCopyOwnerTargetGoal bse$b
	copyOwnerTargeting b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Vex$VexMoveControl bse$c
	tick ()V a
net/minecraft/world/entity/monster/Vex$VexRandomMoveGoal bse$d
	canContinueToUse ()Z b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Vindicator bsf
	DOOR_BREAKING_PREDICATE e
	TAG_JOHNNY b
	isJohnny bX
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	customServerAiStep ()V T
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; n
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; L_
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setCustomName (Lnet/minecraft/network/chat/Component;)V b
net/minecraft/world/entity/monster/Vindicator$VindicatorBreakDoorGoal bsf$a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Vindicator$VindicatorJohnnyAttackGoal bsf$b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Vindicator$VindicatorMeleeAttackGoal bsf$c
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/monster/Witch bsg
	DATA_USING_ITEM bX
	SPEED_MODIFIER_DRINKING e
	SPEED_MODIFIER_DRINKING_UUID b
	attackPlayersGoal ca
	healRaidersGoal bZ
	usingTime bY
	aiStep ()V w_
	applyRaidBuffs (IZ)V a
	canBeLeader ()Z fK
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; L_
	getDamageAfterMagicAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F e
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	isDrinkingPotion ()Z n
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	registerGoals ()V u
	setUsingItem (Z)V x
net/minecraft/world/entity/monster/WitherSkeleton bsh
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; q
	populateDefaultEquipmentEnchantments (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	registerGoals ()V u
net/minecraft/world/entity/monster/Zoglin bsi
	ATTACK_DAMAGE bZ
	ATTACK_DURATION cd
	ATTACK_INTERVAL cb
	ATTACK_KNOCKBACK bX
	BABY_ATTACK_DAMAGE ca
	BABY_ATTACK_INTERVAL cc
	DATA_BABY_ID d
	KNOCKBACK_RESISTANCE bY
	MAX_HEALTH e
	MEMORY_TYPES c
	MOVEMENT_SPEED_WHEN_FIGHTING ce
	SENSOR_TYPES b
	SPEED_MULTIPLIER_WHEN_IDLING cf
	attackAnimationRemainingTicks cg
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dz
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	customServerAiStep ()V T
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	findNearestValidAttackTarget ()Ljava/util/Optional; fL
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAttackAnimationRemainingTicks ()I fJ
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dy
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; ey
	getPassengersRidingOffset ()D bt
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V a
	initFightActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	isAdult ()Z q
	isBaby ()Z y_
	isTargetable (Lnet/minecraft/world/entity/LivingEntity;)Z k
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playAngrySound ()V fK
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	sendDebugPackets ()V R
	setAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)V l
	setBaby (Z)V a
	updateActivity ()V t
net/minecraft/world/entity/monster/Zombie bsj
	BREAK_DOOR_CHANCE cc
	DATA_BABY_ID d
	DATA_DROWNED_CONVERSION_ID cb
	DATA_SPECIAL_TYPE_ID ca
	DOOR_BREAKING_PREDICATE cd
	REINFORCEMENT_ATTEMPTS bX
	REINFORCEMENT_RANGE_MAX bY
	REINFORCEMENT_RANGE_MIN bZ
	SPEED_MODIFIER_BABY c
	SPEED_MODIFIER_BABY_UUID b
	ZOMBIE_LEADER_CHANCE e
	breakDoorGoal ce
	canBreakDoors cf
	conversionTime ch
	inWaterTime cg
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V n
	aiStep ()V w_
	canBreakDoors ()Z fR
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z k
	convertToZombieType (Lnet/minecraft/world/entity/EntityType;)V b
	convertsInWater ()Z fK
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fP
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doUnderWaterConversion ()V fM
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getExperienceReward ()I dO
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; ey
	getMyRidingOffset ()D bs
	getSkull ()Lnet/minecraft/world/item/ItemStack; fJ
	getSpawnAsBabyOdds (Lnet/minecraft/util/RandomSource;)Z a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; t
	handleAttributes (F)V y
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isBaby ()Z y_
	isSunSensitive ()Z K_
	isUnderWaterConverting ()Z fQ
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	randomizeReinforcementsChance ()V fS
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setBaby (Z)V a
	setCanBreakDoors (Z)V w
	startUnderWaterConversion (I)V a
	supportsBreakDoorGoal ()Z q
	tick ()V k
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z l
	wasKilled (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/monster/Zombie$ZombieAttackTurtleEggGoal bsj$a
	acceptedDistance ()D i
	playBreakSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	playDestroyProgressSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/entity/monster/Zombie$ZombieGroupData bsj$b
	canSpawnJockey b
	isBaby a
net/minecraft/world/entity/monster/ZombieVillager bsk
	DATA_CONVERTING_ID c
	DATA_VILLAGER_DATA d
	LOGGER b
	MAX_SPECIAL_BLOCKS_COUNT cc
	SPECIAL_BLOCK_RADIUS cd
	VILLAGER_CONVERSION_WAIT_MAX cb
	VILLAGER_CONVERSION_WAIT_MIN ca
	conversionStarter cf
	gossips cg
	tradeOffers ch
	villagerConversionTime ce
	villagerXp ci
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	convertsInWater ()Z fK
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getConversionProgress ()I fW
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getSkull ()Lnet/minecraft/world/item/ItemStack; fJ
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; t
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; fU
	getVillagerXp ()I fV
	getVoicePitch ()F eD
	handleEntityEvent (B)V a
	isConverting ()Z fT
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	setGossips (Lnet/minecraft/nbt/Tag;)V a
	setTradeOffers (Lnet/minecraft/nbt/CompoundTag;)V c
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
	setVillagerXp (I)V a
	startConverting (Ljava/util/UUID;I)V a
	tick ()V k
net/minecraft/world/entity/monster/ZombifiedPiglin bsl
	ALERT_INTERVAL cg
	ALERT_RANGE_Y cf
	FIRST_ANGER_SOUND_DELAY ca
	PERSISTENT_ANGER_TIME cc
	SPEED_MODIFIER_ATTACKING d
	SPEED_MODIFIER_ATTACKING_UUID c
	persistentAngerTarget ce
	playFirstAngerSoundIn cb
	remainingPersistentAngerTime cd
	ticksUntilNextAlert ch
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V n
	alertOthers ()V fW
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkZombifiedPiglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	convertsInWater ()Z fK
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fT
	customServerAiStep ()V T
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMyRidingOffset ()D bs
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getSkull ()Lnet/minecraft/world/item/ItemStack; fJ
	isPreventingPlayerRest (Lnet/minecraft/world/entity/player/Player;)Z e
	maybeAlertOthers ()V fV
	maybePlayFirstAngerSound ()V fU
	playAngerSound ()V fX
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	randomizeReinforcementsChance ()V fS
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	startPersistentAngerTimer ()V c
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z l
net/minecraft/world/entity/monster/hoglin/Hoglin bsm
	ATTACK_DAMAGE cg
	ATTACK_KNOCKBACK ce
	BABY_ATTACK_DAMAGE ch
	CONVERSION_TIME ci
	DATA_IMMUNE_TO_ZOMBIFICATION ca
	KNOCKBACK_RESISTANCE cf
	MAX_HEALTH cc
	MEMORY_TYPES bY
	MOVEMENT_SPEED_WHEN_FIGHTING cd
	PROBABILITY_OF_SPAWNING_AS_BABY cb
	SENSOR_TYPES bX
	attackAnimationRemainingTicks cj
	cannotBeHunted cl
	timeInOverworld ck
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V n
	aiStep ()V w_
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dz
	canBeHunted ()Z fL
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canFallInLove ()Z fM
	checkHoglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	customServerAiStep ()V T
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAttackAnimationRemainingTicks ()I fJ
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dy
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getExperienceReward ()I dO
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getPassengersRidingOffset ()D bt
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cR
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aG
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aH
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAdult ()Z t
	isConverting ()Z fK
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isImmuneToZombification ()Z fR
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playSoundEvent (Lnet/minecraft/sounds/SoundEvent;)V b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	sendDebugPackets ()V R
	setCannotBeHunted (Z)V w
	setImmuneToZombification (Z)V v
	shouldDropExperience ()Z dM
net/minecraft/world/entity/monster/hoglin/HoglinAi bsn
	ADULT_FOLLOW_RANGE j
	ATTACK_DURATION d
	ATTACK_INTERVAL g
	BABY_ATTACK_INTERVAL h
	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_IDLING e
	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_RETREATING f
	REPELLENT_DETECTION_RANGE_HORIZONTAL a
	REPELLENT_DETECTION_RANGE_VERTICAL b
	REPELLENT_PACIFY_TIME i
	RETREAT_DURATION c
	SPEED_MULTIPLIER_WHEN_AVOIDING_REPELLENT k
	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT o
	SPEED_MULTIPLIER_WHEN_IDLING n
	SPEED_MULTIPLIER_WHEN_MAKING_LOVE m
	SPEED_MULTIPLIER_WHEN_RETREATING l
	broadcastAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V h
	broadcastRetreat (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V c
	createIdleMovementBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; a
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; d
	getSoundForActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/sounds/SoundEvent; a
	getSoundForCurrentActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; b
	getVisibleAdultHoglins (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/List; g
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initFightActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initRetreatActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	isBreeding (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z i
	isNearRepellent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z h
	isPacified (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z c
	isPosNearNearestRepellent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/core/BlockPos;)Z a
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeRetaliate (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V f
	onHitTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V a
	piglinsOutnumberHoglins (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z f
	retreatFromNearestTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V d
	setAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V g
	setAttackTargetIfCloserThanCurrent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V i
	setAvoidTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V e
	updateActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)V a
	wantsToStopFleeing (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z e
	wasHurtBy (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/monster/hoglin/HoglinBase bso
	ATTACK_ANIMATION_DURATION i_
	getAttackAnimationRemainingTicks ()I fJ
	hurtAndThrowTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	throwTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/monster/piglin/AbstractPiglin bsr
	CONVERSION_TIME c
	DATA_IMMUNE_TO_ZOMBIFICATION b
	timeInOverworld d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyOpenDoorsAbility ()V t
	canHunt ()Z n
	customServerAiStep ()V T
	defineSynchedData ()V a_
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getArmPose ()Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; fL
	getMyRidingOffset ()D bs
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; G
	isAdult ()Z fK
	isConverting ()Z fJ
	isHoldingMeleeWeapon ()Z fM
	isImmuneToZombification ()Z q
	playAmbientSound ()V K
	playConvertedSound ()V fP
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	sendDebugPackets ()V R
	setImmuneToZombification (Z)V v
net/minecraft/world/entity/monster/piglin/Piglin bss
	ATTACK_DAMAGE cf
	BABY_EYE_HEIGHT_ADJUSTMENT ck
	CHANCE_OF_WEARING_EACH_ARMOUR_ITEM ch
	CROSSBOW_POWER cg
	DATA_BABY_ID bY
	DATA_IS_CHARGING_CROSSBOW bZ
	DATA_IS_DANCING ca
	MAX_HEALTH cd
	MAX_PASSENGERS_ON_ONE_HOGLIN ci
	MEMORY_TYPES bX
	MOVEMENT_SPEED_WHEN_FIGHTING ce
	PROBABILITY_OF_SPAWNING_AS_BABY cj
	PROBABILITY_OF_SPAWNING_WITH_CROSSBOW_INSTEAD_OF_SWORD cl
	SENSOR_TYPES e
	SPEED_MODIFIER_BABY cc
	SPEED_MODIFIER_BABY_UUID cb
	cannotHunt cn
	inventory cm
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addToInventory (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; m
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dz
	canAddToInventory (Lnet/minecraft/world/item/ItemStack;)Z n
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	canHunt ()Z n
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;)Z q
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	checkPiglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fQ
	createSpawnWeapon ()Lnet/minecraft/world/item/ItemStack; fS
	customServerAiStep ()V T
	defineSynchedData ()V a_
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getArmPose ()Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; fL
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dy
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getExperienceReward ()I dO
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInventory ()Lnet/minecraft/world/SimpleContainer; t
	getPassengersRidingOffset ()D bt
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTopPassenger (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/entity/Entity; b
	holdInMainHand (Lnet/minecraft/world/item/ItemStack;)V o
	holdInOffHand (Lnet/minecraft/world/item/ItemStack;)V p
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isBaby ()Z y_
	isChargingCrossbow ()Z fT
	isDancing ()Z fR
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeWearArmor (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/util/RandomSource;)V a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onCrossbowAttackPerformed ()V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playConvertedSound ()V fP
	playSoundEvent (Lnet/minecraft/sounds/SoundEvent;)V b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	setBaby (Z)V a
	setCannotHunt (Z)V x
	setChargingCrossbow (Z)V b
	setDancing (Z)V w
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
	shouldDespawnInPeaceful ()Z Q
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z l
net/minecraft/world/entity/monster/piglin/PiglinAi bst
	ADMIRE_DURATION f
	ANGER_DURATION e
	AVOID_ZOMBIFIED_DURATION A
	BABY_AVOID_NEMESIS_DURATION B
	BABY_FLEE_DURATION_AFTER_GETTING_HIT l
	BARTERING_ITEM c
	CELEBRATION_TIME j
	DESIRED_DISTANCE_FROM_ENTITY_WHEN_AVOIDING t
	DESIRED_DISTANCE_FROM_ZOMBIFIED z
	EAT_COOLDOWN s
	HIT_BY_PLAYER_MEMORY_TIMEOUT m
	HOW_LONG_TIME_TO_DISABLE_ADMIRE_WALKING_IF_CANT_REACH_ITEM i
	INTERACTION_RANGE w
	MAX_DISTANCE_TO_WALK_TO_ITEM g
	MAX_LOOK_DIST u
	MAX_LOOK_DIST_FOR_PLAYER_HOLDING_LOVED_ITEM v
	MAX_TIME_TO_WALK_TO_ITEM h
	MAX_WALK_DISTANCE_TO_START_RIDING n
	MELEE_ATTACK_COOLDOWN r
	MIN_DESIRED_DIST_FROM_TARGET_WHEN_HOLDING_CROSSBOW x
	PLAYER_ANGER_RANGE d
	PROBABILITY_OF_CELEBRATION_DANCE C
	REPELLENT_DETECTION_RANGE_HORIZONTAL a
	REPELLENT_DETECTION_RANGE_VERTICAL b
	RETREAT_DURATION q
	RIDE_DURATION p
	RIDE_START_INTERVAL o
	SPEED_MULTIPLIER_WHEN_AVOIDING D
	SPEED_MULTIPLIER_WHEN_DANCING I
	SPEED_MULTIPLIER_WHEN_GOING_TO_CELEBRATE_LOCATION H
	SPEED_MULTIPLIER_WHEN_GOING_TO_WANTED_ITEM G
	SPEED_MULTIPLIER_WHEN_IDLING J
	SPEED_MULTIPLIER_WHEN_MOUNTING F
	SPEED_MULTIPLIER_WHEN_RETREATING E
	SPEED_WHEN_STRAFING_BACK_FROM_TARGET y
	TIME_BETWEEN_HUNTS k
	admireGoldItem (Lnet/minecraft/world/entity/LivingEntity;)V d
	angerNearbyPiglins (Lnet/minecraft/world/entity/player/Player;Z)V a
	avoidRepellent ()Lnet/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom; c
	avoidZombified ()Lnet/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry; e
	babyAvoidNemesis ()Lnet/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry; d
	babySometimesRideBabyHoglin ()Lnet/minecraft/world/entity/ai/behavior/RunSometimes; f
	broadcastAngerTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V b
	broadcastDontKillAnyMoreHoglinsForAWhile (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V e
	broadcastRetreat (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V c
	broadcastUniversalAnger (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)V a
	canAdmire (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)Z b
	cancelAdmiring (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V b
	createIdleLookBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; a
	createIdleMovementBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; b
	doesntSeeAnyPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z f
	dontKillAnyMoreHoglinsForAWhile (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)V c
	eat (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V r
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; j
	getAdultPiglins (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/List; e
	getAngerTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/Optional; f
	getAvoidTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; f
	getBarterResponseItems (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/List; h
	getNearestVisibleTargetablePlayer (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/Optional; b
	getRandomNearbyPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Lnet/minecraft/world/phys/Vec3; s
	getSoundForActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/sounds/SoundEvent; a
	getSoundForCurrentActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; c
	getVisibleAdultPiglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/List; l
	hasAnyoneNearbyHuntedRecently (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z d
	hasCrossbow (Lnet/minecraft/world/entity/LivingEntity;)Z c
	hasEatenRecently (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z t
	hoglinsOutnumberPiglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z p
	holdInOffhand (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)V c
	initAdmireItemActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initCelebrateActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V a
	initFightActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initMemories (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/util/RandomSource;)V a
	initRetreatActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	initRideHoglinActivity (Lnet/minecraft/world/entity/ai/Brain;)V f
	isAdmiringDisabled (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z w
	isAdmiringItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z u
	isBabyRidingBaby (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z g
	isBarterCurrency (Lnet/minecraft/world/item/ItemStack;)Z b
	isFood (Lnet/minecraft/world/item/ItemStack;)Z c
	isHoldingItemInOffHand (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z x
	isIdle (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Z d
	isLovedItem (Lnet/minecraft/world/item/ItemStack;)Z a
	isNearAvoidTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z k
	isNearRepellent (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z v
	isNearZombified (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z i
	isNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)Z b
	isNotHoldingLovedItemInOffHand (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z y
	isPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isWearingGold (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isZombified (Lnet/minecraft/world/entity/EntityType;)Z a
	makeBrain (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeRetaliate (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V a
	mobInteract (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	pickUpItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/item/ItemEntity;)V a
	piglinsEqualOrOutnumberHoglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z o
	putInInventory (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)V d
	removeOneItemFromItemEntity (Lnet/minecraft/world/entity/item/ItemEntity;)Lnet/minecraft/world/item/ItemStack; a
	retreatFromNearestTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V d
	seesPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z e
	seesPlayerHoldingWantedItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z q
	setAngerTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V c
	setAngerTargetIfCloserThanCurrent (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V e
	setAngerTargetToNearestTargetablePlayerIfFound (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V d
	setAvoidTargetAndDontHuntForAWhile (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V e
	stopHoldingOffHandItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;Z)V a
	stopWalking (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V m
	throwItems (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;)V a
	throwItemsTowardPlayer (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/player/Player;Ljava/util/List;)V a
	throwItemsTowardPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;Lnet/minecraft/world/phys/Vec3;)V a
	throwItemsTowardRandomPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;)V b
	updateActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V a
	wantsToDance (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	wantsToPickup (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)Z a
	wantsToStopFleeing (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z n
	wantsToStopRiding (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/Entity;)Z a
	wasHurtBy (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V a
	wasHurtRecently (Lnet/minecraft/world/entity/LivingEntity;)Z g
net/minecraft/world/entity/monster/piglin/PiglinArmPose bsu
	$VALUES g
	ADMIRING_ITEM d
	ATTACKING_WITH_MELEE_WEAPON a
	CROSSBOW_CHARGE c
	CROSSBOW_HOLD b
	DANCING e
	DEFAULT f
	$values ()[Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; a
net/minecraft/world/entity/monster/piglin/PiglinBrute bsv
	ATTACK_DAMAGE ca
	MAX_HEALTH bY
	MEMORY_TYPES bX
	MOVEMENT_SPEED_WHEN_FIGHTING bZ
	SENSOR_TYPES e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dz
	canHunt ()Z n
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; t
	customServerAiStep ()V T
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getArmPose ()Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; fL
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dy
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	playAngrySound ()V fQ
	playConvertedSound ()V fP
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z l
net/minecraft/world/entity/monster/piglin/PiglinBruteAi bsw
	ACTIVITY_SOUND_LIKELIHOOD_PER_TICK c
	ANGER_DURATION a
	HOME_CLOSE_ENOUGH_DISTANCE h
	HOME_STROLL_AROUND_DISTANCE j
	HOME_TOO_FAR_DISTANCE i
	INTERACTION_RANGE e
	MAX_LOOK_DIST d
	MELEE_ATTACK_COOLDOWN b
	SPEED_MULTIPLIER_WHEN_IDLING g
	TARGETING_RANGE f
	createIdleLookBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; a
	createIdleMovementBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; b
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/Optional; a
	getTargetIfWithinRange (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; a
	initCoreActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)V b
	initFightActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)V d
	initIdleActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)V c
	initMemories (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V a
	isNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)Z a
	makeBrain (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	maybePlayActivitySound (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V c
	playActivitySound (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V d
	setAngerTarget (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/LivingEntity;)V b
	updateActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V b
	wasHurtBy (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/LivingEntity;)V a
net/minecraft/world/entity/monster/piglin/RememberIfHoglinWasKilled bsx
	isAttackTargetDeadHoglin (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StartAdmiringItemIfSeen bsy
	admireDuration a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StartHuntingHoglin bsz
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StopAdmiringIfItemTooFarAway bta
	maxDistanceToItem a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StopAdmiringIfTiredOfTryingToReachItem btb
	disableTime d
	maxTimeToReachItem a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StopHoldingItemIfNoLongerAdmiring btc
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/warden/AngerLevel bte
	$VALUES h
	AGITATED b
	ANGRY c
	CALM a
	SORTED_LEVELS d
	ambientSound f
	listeningSound g
	minimumAnger e
	$values ()[Lnet/minecraft/world/entity/monster/warden/AngerLevel; e
	byAnger (I)Lnet/minecraft/world/entity/monster/warden/AngerLevel; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; b
	getListeningSound ()Lnet/minecraft/sounds/SoundEvent; c
	getMinimumAnger ()I a
	isAngry ()Z d
net/minecraft/world/entity/monster/warden/AngerManagement btf
	CONVERSION_DELAY a
	DEFAULT_ANGER_DECREASE f
	MAX_ANGER b
	SUSPECT_ANGER_PAIR i
	angerBySuspect d
	angerByUuid e
	conversionDelay g
	filter j
	highestAnger h
	suspectSorter k
	suspects c
	clearAnger (Lnet/minecraft/world/entity/Entity;)V a
	codec (Ljava/util/function/Predicate;)Lcom/mojang/serialization/Codec; a
	convertFromUuids (Lnet/minecraft/server/level/ServerLevel;)V a
	createUuidAngerPairs ()Ljava/util/List; b
	getActiveAnger (Lnet/minecraft/world/entity/Entity;)I b
	getActiveEntity ()Ljava/util/Optional; a
	getTopSuspect ()Lnet/minecraft/world/entity/Entity; d
	increaseAnger (Lnet/minecraft/world/entity/Entity;I)I a
	sortAndUpdateHighestAnger ()V c
	tick (Lnet/minecraft/server/level/ServerLevel;Ljava/util/function/Predicate;)V a
net/minecraft/world/entity/monster/warden/AngerManagement$Sorter btf$a
	angerManagement a
	angerManagement ()Lnet/minecraft/world/entity/monster/warden/AngerManagement; a
	compare (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)I a
net/minecraft/world/entity/monster/warden/Warden btg
	ANGERMANAGEMENT_TICK_DELAY cn
	ATTACK_DAMAGE ch
	ATTACK_KNOCKBACK cg
	CLIENT_ANGER_LEVEL ci
	DARKNESS_DISPLAY_LIMIT cj
	DARKNESS_DURATION ck
	DARKNESS_INTERVAL cm
	DARKNESS_RADIUS cl
	DEFAULT_ANGER co
	DIGGING_PARTICLES_AMOUNT ct
	DIGGING_PARTICLES_DURATION cu
	DIGGING_PARTICLES_OFFSET cv
	GAME_EVENT_LISTENER_RANGE ca
	KNOCKBACK_RESISTANCE cf
	LOGGER bZ
	MAX_HEALTH cd
	MOVEMENT_SPEED_WHEN_FIGHTING ce
	ON_HURT_ANGER_BOOST cq
	PROJECTILE_ANGER cp
	PROJECTILE_ANGER_DISTANCE cw
	RECENT_PROJECTILE_TICK_THRESHOLD cr
	TIME_TO_USE_MELEE_UNTIL_SONIC_BOOM cc
	TOUCH_COOLDOWN_TICKS cs
	VIBRATION_COOLDOWN_TICKS cb
	angerManagement cC
	attackAnimationState bX
	diggingAnimationState e
	dynamicGameEventListener cB
	emergeAnimationState d
	heartAnimation cz
	heartAnimationO cA
	roarAnimationState b
	sniffAnimationState c
	sonicBoomAnimationState bY
	tendrilAnimation cx
	tendrilAnimationO cy
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyDarknessAround (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;I)V a
	canDisableShield ()Z fm
	canRide (Lnet/minecraft/world/entity/Entity;)Z l
	canTargetEntity (Lnet/minecraft/world/entity/Entity;)Z a
	canTriggerAvoidVibration ()Z t
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	clearAnger (Lnet/minecraft/world/entity/Entity;)V b
	clientDiggingParticles (Lnet/minecraft/world/entity/AnimationState;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	customServerAiStep ()V T
	dampensVibrations ()Z aP
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getActiveAnger ()I fS
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAngerLevel ()Lnet/minecraft/world/entity/monster/warden/AngerLevel; fJ
	getAngerManagement ()Lnet/minecraft/world/entity/monster/warden/AngerManagement; fL
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dy
	getClientAngerLevel ()I q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getEntityAngryAt ()Ljava/util/Optional; fK
	getHeartAnimation (F)F z
	getHeartBeatDelay ()I fQ
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getListenableEvents ()Lnet/minecraft/tags/TagKey; a
	getSoundVolume ()F eC
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; G
	getTendrilAnimation (F)F y
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	ignoreExplosion ()Z cE
	increaseAngerAt (Lnet/minecraft/world/entity/Entity;)V c
	increaseAngerAt (Lnet/minecraft/world/entity/Entity;IZ)V a
	isDiggingOrEmerging ()Z fM
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isPushable ()Z bl
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	nextStep ()F aF
	onSignalReceive (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playListeningSound ()V fR
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	removeWhenFarAway (D)Z h
	sendDebugPackets ()V R
	setAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)V k
	shouldListen (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)Z a
	syncClientAngerLevel ()V fP
	tick ()V k
	updateDynamicGameEventListener (Ljava/util/function/BiConsumer;)V a
net/minecraft/world/entity/monster/warden/WardenAi bth
	DIGGING_COOLDOWN c
	DIGGING_DURATION h
	DIG_COOLDOWN_SETTER m
	DISTURBANCE_LOCATION_EXPIRY_TIME j
	EMERGE_DURATION a
	MELEE_ATTACK_COOLDOWN g
	MEMORY_TYPES l
	ROAR_DURATION b
	SENSOR_TYPES k
	SNIFFING_DURATION i
	SPEED_MULTIPLIER_WHEN_FIGHTING f
	SPEED_MULTIPLIER_WHEN_IDLING d
	SPEED_MULTIPLIER_WHEN_INVESTIGATING e
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V a
	initDiggingActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initEmergeActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initFightActivity (Lnet/minecraft/world/entity/monster/warden/Warden;Lnet/minecraft/world/entity/ai/Brain;)V a
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initInvestigateActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	initRoarActivity (Lnet/minecraft/world/entity/ai/Brain;)V g
	initSniffingActivity (Lnet/minecraft/world/entity/ai/Brain;)V f
	isTarget (Lnet/minecraft/world/entity/monster/warden/Warden;Lnet/minecraft/world/entity/LivingEntity;)Z a
	makeBrain (Lnet/minecraft/world/entity/monster/warden/Warden;Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	onTargetInvalid (Lnet/minecraft/world/entity/monster/warden/Warden;Lnet/minecraft/world/entity/LivingEntity;)V b
	setDigCooldown (Lnet/minecraft/world/entity/LivingEntity;)V a
	setDisturbanceLocation (Lnet/minecraft/world/entity/monster/warden/Warden;Lnet/minecraft/core/BlockPos;)V a
	updateActivity (Lnet/minecraft/world/entity/monster/warden/Warden;)V a
net/minecraft/world/entity/monster/warden/WardenSpawnTracker bti
	CODEC a
	DECREASE_WARNING_LEVEL_EVERY_INTERVAL e
	MAX_WARNING_LEVEL b
	PLAYER_SEARCH_RADIUS c
	WARNING_CHECK_DIAMETER d
	WARNING_LEVEL_INCREASE_COOLDOWN f
	cooldownTicks i
	ticksSinceLastWarning g
	warningLevel h
	copyData (Lnet/minecraft/world/entity/monster/warden/WardenSpawnTracker;)V a
	decreaseWarningLevel ()V f
	getNearbyPlayers (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Ljava/util/List; b
	getWarningLevel ()I c
	hasNearbyWarden (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	increaseWarningLevel ()V e
	onCooldown ()Z d
	reset ()V b
	setWarningLevel (I)V a
	tick ()V a
	tryWarn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerPlayer;)Ljava/util/OptionalInt; a
net/minecraft/world/entity/npc/AbstractVillager btk
	DATA_UNHAPPY_COUNTER bZ
	VILLAGER_INVENTORY_SIZE ca
	VILLAGER_SLOT_OFFSET bX
	inventory cc
	offers bY
	tradingPlayer cb
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addOffersFromItemListings (Lnet/minecraft/world/item/trading/MerchantOffers;[Lnet/minecraft/world/entity/npc/VillagerTrades$ItemListing;I)V a
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getInventory ()Lnet/minecraft/world/SimpleContainer; t
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; fO
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; fM
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; n
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTradeUpdatedSound (Z)Lnet/minecraft/sounds/SoundEvent; v
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; fK
	getUnhappyCounter ()I q
	getVillagerXp ()I fJ
	isClientSide ()Z fS
	isTrading ()Z fL
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V m
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V t
	playCelebrateSound ()V fP
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V e
	setUnhappyCounter (I)V s
	showProgressBar ()Z fN
	stopTrading ()V fQ
	updateTrades ()V fR
net/minecraft/world/entity/npc/CatSpawner btl
	TICK_DELAY a
	nextTick b
	spawnCat (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)I a
	spawnInHut (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)I b
	spawnInVillage (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)I a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/entity/npc/ClientSideMerchant btm
	offers b
	source a
	xp c
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; fO
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; fM
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; fK
	getVillagerXp ()I fJ
	isClientSide ()Z fS
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V m
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V t
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V e
	showProgressBar ()Z fN
net/minecraft/world/entity/npc/InventoryCarrier btn
	getInventory ()Lnet/minecraft/world/SimpleContainer; t
	pickUpItem (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/npc/InventoryCarrier;Lnet/minecraft/world/entity/item/ItemEntity;)V a
net/minecraft/world/entity/npc/Npc bto
net/minecraft/world/entity/npc/Villager btp
	BREEDING_FOOD_THRESHOLD bZ
	DATA_VILLAGER_DATA ce
	FOOD_POINTS ca
	GOSSIP_COOLDOWN ci
	GOSSIP_DECAY_INTERVAL cj
	HOW_FAR_AWAY_TO_TALK_TO_OTHER_VILLAGERS_ABOUT_GOLEMS cl
	HOW_MANY_VILLAGERS_NEED_TO_AGREE_TO_SPAWN_A_GOLEM cm
	LOGGER cd
	MAX_GOSSIP_TOPICS ch
	MEMORY_TYPES cB
	POI_MEMORIES cc
	REPUTATION_CHANGE_PER_EVENT ck
	SENSOR_TYPES cC
	SPEED_MODIFIER cb
	TIME_SINCE_SLEEPING_FOR_GOLEM_SPAWNING cn
	TRADES_PER_LEVEL cf
	WANTED_ITEMS cg
	assignProfessionWhenSpawned cA
	chasing cr
	foodLevel cs
	gossips ct
	increaseProfessionLevelOnUpdate cp
	lastGossipDecayTime cv
	lastGossipTime cu
	lastRestockCheckDayTime cz
	lastRestockGameTime cx
	lastTradedPlayer cq
	numberOfRestocksToday cy
	updateMerchantTimer co
	villagerXp cw
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V n
	allowedToRestock ()Z gj
	assignProfessionWhenSpawned ()Z fV
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dz
	canBreed ()Z g
	canRestock ()Z fW
	catchUpDemand ()V gk
	countFoodPointsInInventory ()I gr
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fT
	customServerAiStep ()V T
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	digestFood (I)V v
	eatAndDigestFood ()V gb
	eatUntilFull ()V go
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dy
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/npc/Villager; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getGossips ()Lnet/minecraft/world/entity/ai/gossip/GossipContainer; gf
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getPlayerReputation (Lnet/minecraft/world/entity/player/Player;)I f
	getTypeName ()Lnet/minecraft/network/chat/Component; cf
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; fU
	getVillagerXp ()I fJ
	golemSpawnConditionsMet (J)Z b
	gossip (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	handleEntityEvent (B)V a
	hasExcessFood ()Z gc
	hasFarmSeeds ()Z ge
	hungry ()Z gn
	increaseMerchantCareer ()V gq
	isChasing ()Z ga
	isClientSide ()Z fS
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeDecayGossip ()V gs
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	needsToRestock ()Z gi
	onReputationEventFrom (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playWorkSound ()V fZ
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshBrain (Lnet/minecraft/server/level/ServerLevel;)V c
	registerBrainGoals (Lnet/minecraft/world/entity/ai/Brain;)V a
	releaseAllPois ()V gm
	releasePoi (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V a
	removeWhenFarAway (D)Z h
	resetNumberOfRestocks ()V gt
	resetSpecialPrices ()V gh
	restock ()V fX
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	sendDebugPackets ()V R
	setChasing (Z)V w
	setGossips (Lnet/minecraft/nbt/Tag;)V a
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V b
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V e
	setUnhappy ()V gg
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
	setVillagerXp (I)V u
	shouldIncreaseLevel ()Z gp
	shouldRestock ()Z fY
	spawnGolemIfNeeded (Lnet/minecraft/server/level/ServerLevel;JI)V a
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	startTrading (Lnet/minecraft/world/entity/player/Player;)V g
	stopSleeping ()V fk
	stopTrading ()V fQ
	tellWitnessesThatIWasMurdered (Lnet/minecraft/world/entity/Entity;)V a
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V k
	updateDemand ()V gl
	updateSpecialPrices (Lnet/minecraft/world/entity/player/Player;)V h
	updateTrades ()V fR
	wantsMoreFood ()Z gd
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z l
	wantsToSpawnGolem (J)Z a
net/minecraft/world/entity/npc/VillagerData btq
	CODEC c
	MAX_VILLAGER_LEVEL b
	MIN_VILLAGER_LEVEL a
	NEXT_LEVEL_XP_THRESHOLDS d
	level g
	profession f
	type e
	canLevelUp (I)Z d
	getLevel ()I c
	getMaxXpPerLevel (I)I c
	getMinXpPerLevel (I)I b
	getProfession ()Lnet/minecraft/world/entity/npc/VillagerProfession; b
	getType ()Lnet/minecraft/world/entity/npc/VillagerType; a
	setLevel (I)Lnet/minecraft/world/entity/npc/VillagerData; a
	setProfession (Lnet/minecraft/world/entity/npc/VillagerProfession;)Lnet/minecraft/world/entity/npc/VillagerData; a
	setType (Lnet/minecraft/world/entity/npc/VillagerType;)Lnet/minecraft/world/entity/npc/VillagerData; a
net/minecraft/world/entity/npc/VillagerDataHolder btr
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; fU
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
net/minecraft/world/entity/npc/VillagerProfession bts
	ALL_ACQUIRABLE_JOBS a
	ARMORER c
	BUTCHER d
	CARTOGRAPHER e
	CLERIC f
	FARMER g
	FISHERMAN h
	FLETCHER i
	LEATHERWORKER j
	LIBRARIAN k
	MASON l
	NITWIT m
	NONE b
	SHEPHERD n
	TOOLSMITH o
	WEAPONSMITH p
	acquirableJobSite s
	heldJobSite r
	name q
	requestedItems t
	secondaryPoi u
	workSound v
	acquirableJobSite ()Ljava/util/function/Predicate; c
	heldJobSite ()Ljava/util/function/Predicate; b
	name ()Ljava/lang/String; a
	register (Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/entity/npc/VillagerProfession; a
	register (Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/entity/npc/VillagerProfession; a
	register (Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/entity/npc/VillagerProfession; a
	register (Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/entity/npc/VillagerProfession; a
	requestedItems ()Lcom/google/common/collect/ImmutableSet; d
	secondaryPoi ()Lcom/google/common/collect/ImmutableSet; e
	workSound ()Lnet/minecraft/sounds/SoundEvent; f
net/minecraft/world/entity/npc/VillagerTrades btt
	COMMON_ITEMS_SUPPLY d
	DEFAULT_SUPPLY c
	HIGH_TIER_PRICE_MULTIPLIER p
	LOW_TIER_PRICE_MULTIPLIER o
	TRADES a
	UNCOMMON_ITEMS_SUPPLY e
	WANDERING_TRADER_TRADES b
	XP_LEVEL_1_BUY g
	XP_LEVEL_1_SELL f
	XP_LEVEL_2_BUY i
	XP_LEVEL_2_SELL h
	XP_LEVEL_3_BUY k
	XP_LEVEL_3_SELL j
	XP_LEVEL_4_BUY m
	XP_LEVEL_4_SELL l
	XP_LEVEL_5_TRADE n
	toIntMap (Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; a
net/minecraft/world/entity/npc/VillagerTrades$DyedArmorForEmeralds btt$a
	item a
	maxUses c
	value b
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
	getRandomDye (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/DyeItem; a
net/minecraft/world/entity/npc/VillagerTrades$EmeraldForItems btt$b
	cost b
	item a
	maxUses c
	priceMultiplier e
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EmeraldsForVillagerTypeItem btt$c
	cost b
	maxUses c
	trades a
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EnchantBookForEmeralds btt$d
	villagerXp a
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EnchantedItemForEmeralds btt$e
	baseEmeraldCost b
	itemStack a
	maxUses c
	priceMultiplier e
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemListing btt$f
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemsAndEmeraldsToItems btt$g
	emeraldCost c
	fromCount b
	fromItem a
	maxUses f
	priceMultiplier h
	toCount e
	toItem d
	villagerXp g
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemsForEmeralds btt$h
	emeraldCost b
	itemStack a
	maxUses d
	numberOfItems c
	priceMultiplier f
	villagerXp e
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$SuspiciousStewForEmerald btt$i
	duration b
	effect a
	priceMultiplier d
	xp c
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$TippedArrowForItemsAndEmeralds btt$j
	emeraldCost c
	fromCount g
	fromItem f
	maxUses d
	priceMultiplier h
	toCount b
	toItem a
	villagerXp e
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$TreasureMapForEmeralds btt$k
	destination b
	destinationType d
	displayName c
	emeraldCost a
	maxUses e
	villagerXp f
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerType btu
	BY_BIOME i
	DESERT a
	JUNGLE b
	PLAINS c
	SAVANNA d
	SNOW e
	SWAMP f
	TAIGA g
	name h
	byBiome (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/npc/VillagerType; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/npc/VillagerType; a
net/minecraft/world/entity/npc/WanderingTrader btv
	NUMBER_OF_TRADE_OFFERS bZ
	despawnDelay cb
	wanderTarget ca
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDespawnDelay ()I fT
	getDrinkingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; fO
	getTradeUpdatedSound (Z)Lnet/minecraft/sounds/SoundEvent; v
	getWanderTarget ()Lnet/minecraft/core/BlockPos; fV
	maybeDespawn ()V fU
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	removeWhenFarAway (D)Z h
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	setDespawnDelay (I)V u
	setWanderTarget (Lnet/minecraft/core/BlockPos;)V g
	showProgressBar ()Z fN
	updateTrades ()V fR
net/minecraft/world/entity/npc/WanderingTrader$WanderToPositionGoal btv$a
	speedModifier c
	stopDistance b
	trader a
	canUse ()Z a
	isTooFarAway (Lnet/minecraft/core/BlockPos;D)Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/npc/WanderingTraderSpawner btw
	DEFAULT_SPAWN_DELAY a
	DEFAULT_TICK_DELAY b
	MAX_SPAWN_CHANCE d
	MIN_SPAWN_CHANCE c
	NUMBER_OF_SPAWN_ATTEMPTS g
	SPAWN_CHANCE_INCREASE e
	SPAWN_ONE_IN_X_CHANCE f
	random h
	serverLevelData i
	spawnChance l
	spawnDelay k
	tickDelay j
	findSpawnPositionNear (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/core/BlockPos; a
	hasEnoughSpace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	spawn (Lnet/minecraft/server/level/ServerLevel;)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
	tryToSpawnLlamaFor (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/WanderingTrader;I)V a
net/minecraft/world/entity/player/Abilities btz
	flying b
	flyingSpeed f
	instabuild d
	invulnerable a
	mayBuild e
	mayfly c
	walkingSpeed g
	addSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	getFlyingSpeed ()F a
	getWalkingSpeed ()F b
	loadSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	setFlyingSpeed (F)V a
	setWalkingSpeed (F)V b
net/minecraft/world/entity/player/ChatVisiblity bua
	$VALUES g
	BY_ID d
	FULL a
	HIDDEN c
	SYSTEM b
	id e
	key f
	$values ()[Lnet/minecraft/world/entity/player/ChatVisiblity; d
	byId (I)Lnet/minecraft/world/entity/player/ChatVisiblity; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/world/entity/player/Inventory bub
	ALL_ARMOR_SLOTS f
	HELMET_SLOT_ONLY g
	INVENTORY_SIZE c
	NOT_FOUND_INDEX e
	POP_TIME_DURATION b
	SELECTION_SIZE m
	SLOT_OFFHAND d
	armor i
	compartments n
	items h
	offhand j
	player l
	selected k
	timesChanged o
	add (ILnet/minecraft/world/item/ItemStack;)Z c
	add (Lnet/minecraft/world/item/ItemStack;)Z e
	addResource (ILnet/minecraft/world/item/ItemStack;)I d
	addResource (Lnet/minecraft/world/item/ItemStack;)I i
	clearContent ()V a
	clearOrCountMatchingItems (Ljava/util/function/Predicate;ILnet/minecraft/world/Container;)I a
	contains (Lnet/minecraft/tags/TagKey;)Z a
	contains (Lnet/minecraft/world/item/ItemStack;)Z h
	dropAll ()V k
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	findSlotMatchingItem (Lnet/minecraft/world/item/ItemStack;)I b
	findSlotMatchingUnusedItem (Lnet/minecraft/world/item/ItemStack;)I c
	getArmor (I)Lnet/minecraft/world/item/ItemStack; e
	getContainerSize ()I b
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F a
	getFreeSlot ()I h
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getName ()Lnet/minecraft/network/chat/Component; X
	getSelected ()Lnet/minecraft/world/item/ItemStack; f
	getSelectionSize ()I g
	getSlotWithRemainingSpace (Lnet/minecraft/world/item/ItemStack;)I d
	getSuitableHotbarSlot ()I i
	getTimesChanged ()I l
	hasRemainingSpaceForItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F[I)V a
	isEmpty ()Z c
	isHotbarSlot (I)Z d
	load (Lnet/minecraft/nbt/ListTag;)V b
	pickSlot (I)V c
	placeItemBackInInventory (Lnet/minecraft/world/item/ItemStack;)V f
	placeItemBackInInventory (Lnet/minecraft/world/item/ItemStack;Z)V a
	removeFromSelected (Z)Lnet/minecraft/world/item/ItemStack; a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItem (Lnet/minecraft/world/item/ItemStack;)V g
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	replaceWith (Lnet/minecraft/world/entity/player/Inventory;)V a
	save (Lnet/minecraft/nbt/ListTag;)Lnet/minecraft/nbt/ListTag; a
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setPickedItem (Lnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	swapPaint (D)V a
	tick ()V j
net/minecraft/world/entity/player/Player buc
	CROUCH_BB_HEIGHT bJ
	DATA_PLAYER_ABSORPTION_ID e
	DATA_PLAYER_MAIN_HAND bP
	DATA_PLAYER_MODE_CUSTOMISATION bO
	DATA_SCORE_ID f
	DATA_SHOULDER_LEFT bQ
	DATA_SHOULDER_RIGHT bR
	DEFAULT_EYE_HEIGHT bM
	ENDER_SLOT_OFFSET bI
	FLY_ACHIEVEMENT_SPEED d
	LOGGER b
	MAX_HEALTH bF
	MAX_NAME_LENGTH bE
	POSES c
	SLEEP_DURATION bG
	STANDING_DIMENSIONS bN
	SWIMMING_BB_HEIGHT bL
	SWIMMING_BB_WIDTH bK
	WAKE_UP_DURATION bH
	abilities cr
	bob bZ
	containerMenu bU
	cooldowns cx
	defaultFlySpeed cm
	enchantmentSeed cl
	enderChestInventory bS
	experienceLevel ci
	experienceProgress ck
	fishing cn
	foodData bV
	gameProfile ct
	inventory cp
	inventoryMenu bT
	jumpTriggerTime bX
	lastDeathLocation cy
	lastItemInMainHand cw
	lastLevelUpTime cs
	oBob bY
	profilePublicKey cu
	reducedDebugInfo cv
	sleepCounter cq
	takeXpDelay ca
	timeEntitySatOnShoulder co
	totalExperience cj
	wardenSpawnTracker bW
	wasUnderwater ch
	xCloak ce
	xCloakO cb
	yCloak cf
	yCloakO cc
	zCloak cg
	zCloakO cd
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addItem (Lnet/minecraft/world/item/ItemStack;)Z j
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	aiStep ()V w_
	asChatSender ()Lnet/minecraft/network/chat/ChatSender; aW
	attack (Lnet/minecraft/world/entity/Entity;)V d
	awardRecipes (Ljava/util/Collection;)I a
	awardRecipesByKey ([Lnet/minecraft/resources/ResourceLocation;)V a
	awardStat (Lnet/minecraft/resources/ResourceLocation;)V a
	awardStat (Lnet/minecraft/resources/ResourceLocation;I)V a
	awardStat (Lnet/minecraft/stats/Stat;)V b
	awardStat (Lnet/minecraft/stats/Stat;I)V a
	blockActionRestricted (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/GameType;)Z a
	blockUsingShield (Lnet/minecraft/world/entity/LivingEntity;)V d
	canBeSeenAsEnemy ()Z dY
	canEat (Z)Z s
	canHarmPlayer (Lnet/minecraft/world/entity/player/Player;)Z a
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	canUseGameMasterBlocks ()Z fY
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	causeFoodExhaustion (F)V u
	checkMovementStatistics (DDD)V q
	checkRidingStatistics (DDD)V r
	closeContainer ()V q
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fn
	createItemCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; j
	crit (Lnet/minecraft/world/entity/Entity;)V a
	decorateDisplayNameComponent (Lnet/minecraft/network/chat/MutableComponent;)Lnet/minecraft/network/chat/MutableComponent; a
	defineSynchedData ()V a_
	destroyVanishingCursedItems ()V fu
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	disableShield (Z)V r
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	doAutoAttackOnTouch (Lnet/minecraft/world/entity/LivingEntity;)V g
	doWaterSplashEffect ()V ba
	doesEmitEquipEvent (Lnet/minecraft/world/entity/EquipmentSlot;)Z a
	drop (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/world/entity/item/ItemEntity; a
	drop (Lnet/minecraft/world/item/ItemStack;ZZ)Lnet/minecraft/world/entity/item/ItemEntity; a
	dropEquipment ()V ei
	eat (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	findRespawnPositionAndUseSpawnBlock (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;FZZ)Ljava/util/Optional; a
	freeAt (Lnet/minecraft/core/BlockPos;)Z f
	getAbilities ()Lnet/minecraft/world/entity/player/Abilities; fB
	getAbsorptionAmount ()F eQ
	getArmorSlots ()Ljava/lang/Iterable; bF
	getAttackStrengthScale (F)F v
	getBlockSpeedFactor ()F aD
	getCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; fW
	getCurrentItemAttackStrengthDelay ()F fU
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F c
	getDimensionChangingDelay ()I bC
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDismountPoses ()Lcom/google/common/collect/ImmutableList; fg
	getDisplayName ()Lnet/minecraft/network/chat/Component; C_
	getEnchantmentSeed ()I fI
	getEnderChestInventory ()Lnet/minecraft/world/inventory/PlayerEnderChestContainer; fO
	getExperienceReward ()I dO
	getFallSounds ()Lnet/minecraft/world/entity/LivingEntity$Fallsounds; en
	getFireImmuneTicks ()I cS
	getFoodData ()Lnet/minecraft/world/food/FoodData; fL
	getGameProfile ()Lcom/mojang/authlib/GameProfile; fy
	getHandSlots ()Ljava/lang/Iterable; bE
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInventory ()Lnet/minecraft/world/entity/player/Inventory; fA
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; c
	getLastDeathLocation ()Ljava/util/Optional; ga
	getLuck ()F fX
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; eS
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aO
	getMyRidingOffset ()D bs
	getName ()Lnet/minecraft/network/chat/Component; X
	getPortalWaitTime ()I ar
	getProfilePublicKey ()Lnet/minecraft/world/entity/player/ProfilePublicKey; fz
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; h
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; n
	getScore ()I ft
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; fQ
	getScoreboardName ()Ljava/lang/String; cq
	getShoulderEntityLeft ()Lnet/minecraft/nbt/CompoundTag; fS
	getShoulderEntityRight ()Lnet/minecraft/nbt/CompoundTag; fT
	getSleepTimer ()I fE
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cR
	getSpeed ()F eK
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimHighSpeedSplashSound ()Lnet/minecraft/sounds/SoundEvent; aI
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aG
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aH
	getWardenSpawnTracker ()Lnet/minecraft/world/entity/monster/warden/WardenSpawnTracker; fK
	getXpNeededForNextLevel ()I fJ
	giveExperienceLevels (I)V c
	giveExperiencePoints (I)V d
	handleEntityEvent (B)V a
	hasContainerOpen ()Z fC
	hasCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F)V b
	hurtCurrentlyUsedShield (F)V q
	hurtHelmet (Lnet/minecraft/world/damagesource/DamageSource;F)V c
	increaseScore (I)V s
	interactOn (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAboveGround ()Z t
	isAffectedByFluids ()Z dK
	isAlwaysExperienceDropper ()Z dP
	isAlwaysTicking ()Z dx
	isCreative ()Z f
	isHurt ()Z fM
	isImmobile ()Z eE
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isLocalPlayer ()Z fx
	isModelPartShown (Lnet/minecraft/world/entity/player/PlayerModelPart;)Z a
	isPushedByFluid ()Z cr
	isReducedDebugInfo ()Z fR
	isScoping ()Z fZ
	isSecondaryUseActive ()Z fo
	isSleepingLongEnough ()Z fD
	isSpectator ()Z B_
	isStayingOnGroundSurface ()Z fq
	isSwimming ()Z bS
	jumpFromGround ()V eH
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	mayBuild ()Z fN
	mayUseItemAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;)Z a
	maybeBackOffFromEdge (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/MoverType;)Lnet/minecraft/world/phys/Vec3; a
	moveCloak ()V r
	onEnchantmentPerformed (Lnet/minecraft/world/item/ItemStack;I)V a
	onSoulSpeedBlock ()Z dE
	onUpdateAbilities ()V w
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openHorseInventory (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lnet/minecraft/world/Container;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openJigsawBlock (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity;)V a
	openMenu (Lnet/minecraft/world/MenuProvider;)Ljava/util/OptionalInt; a
	openMinecartCommandBlock (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	openStructureBlock (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playShoulderEntityAmbientSound (Lnet/minecraft/nbt/CompoundTag;)V c
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	removeEntitiesOnShoulder ()V fP
	removeVehicle ()V bw
	resetAttackStrengthTicker ()V fV
	resetRecipes (Ljava/util/Collection;)I b
	resetStat (Lnet/minecraft/stats/Stat;)V a
	respawn ()V fw
	respawnEntityOnShoulder (Lnet/minecraft/nbt/CompoundTag;)V k
	rideTick ()V br
	sendMerchantOffers (ILnet/minecraft/world/item/trading/MerchantOffers;IIZZ)V a
	serverAiStep ()V eM
	setAbsorptionAmount (F)V t
	setEntityOnShoulder (Lnet/minecraft/nbt/CompoundTag;)Z h
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setLastDeathLocation (Ljava/util/Optional;)V a
	setMainArm (Lnet/minecraft/world/entity/HumanoidArm;)V a
	setReducedDebugInfo (Z)V t
	setRemainingFireTicks (I)V g
	setScore (I)V r
	setShoulderEntityLeft (Lnet/minecraft/nbt/CompoundTag;)V i
	setShoulderEntityRight (Lnet/minecraft/nbt/CompoundTag;)V j
	shouldBeSaved ()Z dw
	shouldRemoveSoulSpeed (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	shouldShowName ()Z cu
	startAutoSpinAttack (I)V t
	startFallFlying ()V fG
	startSleepInBed (Lnet/minecraft/core/BlockPos;)Lcom/mojang/datafixers/util/Either; a
	stopFallFlying ()V fH
	stopSleepInBed (ZZ)V a
	stopSleeping ()V fk
	sweepAttack ()V fv
	tick ()V k
	touch (Lnet/minecraft/world/entity/Entity;)V c
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	tryToStartFallFlying ()Z fF
	turtleHelmetTick ()V n
	updateIsUnderwater ()Z fr
	updatePlayerPose ()V fs
	updateSwimming ()V aX
	updateTutorialInventoryAction (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V a
	wantsToStopRiding ()Z fp
	wasKilled (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/player/Player$BedSleepingProblem buc$a
	$VALUES h
	NOT_POSSIBLE_HERE a
	NOT_POSSIBLE_NOW b
	NOT_SAFE f
	OBSTRUCTED d
	OTHER_PROBLEM e
	TOO_FAR_AWAY c
	message g
	$values ()[Lnet/minecraft/world/entity/player/Player$BedSleepingProblem; b
	getMessage ()Lnet/minecraft/network/chat/Component; a
net/minecraft/world/entity/player/PlayerModelPart bud
	$VALUES l
	CAPE a
	HAT g
	JACKET b
	LEFT_PANTS_LEG e
	LEFT_SLEEVE c
	RIGHT_PANTS_LEG f
	RIGHT_SLEEVE d
	bit h
	id j
	mask i
	name k
	$values ()[Lnet/minecraft/world/entity/player/PlayerModelPart; e
	getBit ()I b
	getId ()Ljava/lang/String; c
	getMask ()I a
	getName ()Lnet/minecraft/network/chat/Component; d
net/minecraft/world/entity/player/ProfileKeyPair bue
	CODEC a
	privateKey b
	publicKey c
	refreshedAfter d
	dueRefresh ()Z a
	privateKey ()Ljava/security/PrivateKey; b
	publicKey ()Lnet/minecraft/world/entity/player/ProfilePublicKey; c
	refreshedAfter ()Ljava/time/Instant; d
net/minecraft/world/entity/player/ProfilePublicKey buf
	EXPIRED_PROFILE_PUBLIC_KEY b
	EXPIRY_GRACE_PERIOD c
	INVALID_SIGNATURE f
	MISSING_PROFILE_PUBLIC_KEY a
	TRUSTED_CODEC d
	data e
	createSignatureValidator ()Lnet/minecraft/util/SignatureValidator; a
	createValidated (Lnet/minecraft/util/SignatureValidator;Ljava/util/UUID;Lnet/minecraft/world/entity/player/ProfilePublicKey$Data;Ljava/time/Duration;)Lnet/minecraft/world/entity/player/ProfilePublicKey; a
	data ()Lnet/minecraft/world/entity/player/ProfilePublicKey$Data; b
net/minecraft/world/entity/player/ProfilePublicKey$Data buf$a
	CODEC a
	MAX_KEY_SIGNATURE_SIZE e
	expiresAt b
	key c
	keySignature d
	expiresAt ()Ljava/time/Instant; b
	hasExpired ()Z a
	hasExpired (Ljava/time/Duration;)Z a
	key ()Ljava/security/PublicKey; c
	keySignature ()[B d
	signedPayload (Ljava/util/UUID;)[B a
	validateSignature (Lnet/minecraft/util/SignatureValidator;Ljava/util/UUID;)Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/entity/player/ProfilePublicKey$ValidationException buf$b
net/minecraft/world/entity/player/StackedContents bug
	EMPTY b
	contents a
	accountSimpleStack (Lnet/minecraft/world/item/ItemStack;)V a
	accountStack (Lnet/minecraft/world/item/ItemStack;)V b
	accountStack (Lnet/minecraft/world/item/ItemStack;I)V a
	canCraft (Lnet/minecraft/world/item/crafting/Recipe;Lit/unimi/dsi/fastutil/ints/IntList;)Z a
	canCraft (Lnet/minecraft/world/item/crafting/Recipe;Lit/unimi/dsi/fastutil/ints/IntList;I)Z a
	clear ()V a
	fromStackingIndex (I)Lnet/minecraft/world/item/ItemStack; a
	getBiggestCraftableStack (Lnet/minecraft/world/item/crafting/Recipe;ILit/unimi/dsi/fastutil/ints/IntList;)I a
	getBiggestCraftableStack (Lnet/minecraft/world/item/crafting/Recipe;Lit/unimi/dsi/fastutil/ints/IntList;)I b
	getStackingIndex (Lnet/minecraft/world/item/ItemStack;)I c
	has (I)Z b
	put (II)V b
	take (II)I a
net/minecraft/world/entity/player/StackedContents$RecipePicker bug$a
	data g
	ingredientCount d
	ingredients c
	itemCount f
	items e
	path h
	recipe b
	dfs (I)Z a
	getIndex (ZII)I d
	getMinIngredientCount ()I b
	getSatisfiedIndex (I)I d
	getUniqueAvailableIngredientItems ()[I a
	getVisitedIndex (ZI)I c
	hasConnection (ZII)Z a
	hasResidual (ZII)Z b
	hasVisited (ZI)Z b
	isSatisfied (I)Z b
	setSatisfied (I)V c
	toggleResidual (ZII)V c
	tryPick (ILit/unimi/dsi/fastutil/ints/IntList;)Z a
	tryPickAll (ILit/unimi/dsi/fastutil/ints/IntList;)I b
	visit (ZI)V a
net/minecraft/world/entity/projectile/AbstractArrow bui
	ARROW_BASE_DAMAGE f
	FLAG_CRIT aq
	FLAG_CROSSBOW as
	FLAG_NOPHYSICS ar
	ID_FLAGS ao
	PIERCE_LEVEL ap
	baseDamage av
	inGround b
	inGroundTime c
	knockback aw
	lastState at
	life au
	pickup d
	piercedAndKilledEntities az
	piercingIgnoreEntityIds ay
	shakeTime e
	soundEvent ax
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	defineSynchedData ()V a_
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	findHitEntity (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/EntityHitResult; a
	getBaseDamage ()D n
	getDefaultHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; i
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; j
	getKnockback ()I o
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aO
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; l
	getPierceLevel ()B s
	getWaterInertia ()F t
	isAttackable ()Z ch
	isCritArrow ()Z q
	isNoPhysics ()Z u
	lerpMotion (DDD)V k
	lerpTo (DDDFFIZ)V a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	resetPiercedEntities ()V C
	setBaseDamage (D)V h
	setCritArrow (Z)V a
	setEnchantmentEffectsFromEntity (Lnet/minecraft/world/entity/LivingEntity;F)V a
	setFlag (IZ)V a
	setKnockback (I)V a
	setNoPhysics (Z)V p
	setOwner (Lnet/minecraft/world/entity/Entity;)V b
	setPierceLevel (B)V b
	setShotFromCrossbow (Z)V q
	setSoundEvent (Lnet/minecraft/sounds/SoundEvent;)V b
	shoot (DDDFF)V c
	shotFromCrossbow ()Z r
	shouldFall ()Z w
	shouldRenderAtSqrDistance (D)Z a
	startFalling ()V A
	tick ()V k
	tickDespawn ()V h
	tryPickup (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/entity/projectile/AbstractArrow$Pickup bui$a
	$VALUES d
	ALLOWED b
	CREATIVE_ONLY c
	DISALLOWED a
	$values ()[Lnet/minecraft/world/entity/projectile/AbstractArrow$Pickup; a
	byOrdinal (I)Lnet/minecraft/world/entity/projectile/AbstractArrow$Pickup; a
net/minecraft/world/entity/projectile/AbstractHurtingProjectile buj
	xPower b
	yPower c
	zPower d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getInertia ()F j
	getLightLevelDependentMagicValue ()F bg
	getPickRadius ()F bx
	getTrailParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bk
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	shouldBurn ()Z M_
	shouldRenderAtSqrDistance (D)Z a
	tick ()V k
net/minecraft/world/entity/projectile/Arrow buk
	EVENT_POTION_PUFF aq
	EXPOSED_POTION_DECAY_TIME f
	ID_EFFECT_COLOR ap
	NO_EFFECT_COLOR ao
	effects as
	fixedColor at
	potion ar
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	defineSynchedData ()V a_
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	getColor ()I w
	getCustomColor (Lnet/minecraft/world/item/ItemStack;)I c
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; l
	handleEntityEvent (B)V a
	makeParticle (I)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setEffectsFromItem (Lnet/minecraft/world/item/ItemStack;)V a
	setFixedColor (I)V c
	tick ()V k
	updateColor ()V A
net/minecraft/world/entity/projectile/DragonFireball bul
	SPLASH_RANGE e
	getTrailParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bk
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	shouldBurn ()Z M_
net/minecraft/world/entity/projectile/EvokerFangs bum
	ATTACK_DURATION b
	ATTACK_TRIGGER_TICKS d
	LIFE_OFFSET c
	clientSideAttackStarted ap
	lifeTicks ao
	owner aq
	ownerUUID ar
	sentSpikeEvent f
	warmupDelayTicks e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dealDamageTo (Lnet/minecraft/world/entity/LivingEntity;)V c
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getAnimationProgress (F)F a
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; h
	handleEntityEvent (B)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setOwner (Lnet/minecraft/world/entity/LivingEntity;)V a
	tick ()V k
net/minecraft/world/entity/projectile/EyeOfEnder bun
	DATA_ITEM_STACK b
	life f
	surviveAfterDeath ao
	tx c
	ty d
	tz e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getItem ()Lnet/minecraft/world/item/ItemStack; h
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; i
	getLightLevelDependentMagicValue ()F bg
	isAttackable ()Z ch
	lerpMotion (DDD)V k
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
	shouldRenderAtSqrDistance (D)Z a
	signalTo (Lnet/minecraft/core/BlockPos;)V a
	tick ()V k
net/minecraft/world/entity/projectile/Fireball buo
	DATA_ITEM_STACK e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getItem ()Lnet/minecraft/world/item/ItemStack; h
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; l
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/projectile/FireworkRocketEntity bup
	DATA_ATTACHED_TO_TARGET c
	DATA_ID_FIREWORKS_ITEM b
	DATA_SHOT_AT_ANGLE d
	attachedToEntity ao
	life e
	lifetime f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dealExplosionDamage ()V n
	defineSynchedData ()V a_
	explode ()V j
	getItem ()Lnet/minecraft/world/item/ItemStack; h
	handleEntityEvent (B)V a
	hasExplosion ()Z l
	isAttachedToEntity ()Z o
	isAttackable ()Z ch
	isShotAtAngle ()Z i
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldRender (DDD)Z j
	shouldRenderAtSqrDistance (D)Z a
	tick ()V k
net/minecraft/world/entity/projectile/FishingHook buq
	DATA_BITING ap
	DATA_HOOKED_ENTITY ao
	LOGGER b
	MAX_OUT_OF_WATER_TIME f
	biting d
	currentState ax
	fishAngle au
	hookedIn aw
	life aq
	luck ay
	lureSpeed az
	nibble ar
	openWater av
	outOfWaterTime e
	syncronizedRandom c
	timeUntilHooked at
	timeUntilLured as
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	calculateOpenWater (Lnet/minecraft/core/BlockPos;)Z b
	canChangeDimensions ()Z ck
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	catchingFish (Lnet/minecraft/core/BlockPos;)V a
	checkCollision ()V l
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getHookedIn ()Lnet/minecraft/world/entity/Entity; j
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aO
	getOpenWaterTypeForArea (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/projectile/FishingHook$OpenWaterType; a
	getOpenWaterTypeForBlock (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/projectile/FishingHook$OpenWaterType; c
	getPlayerOwner ()Lnet/minecraft/world/entity/player/Player; i
	handleEntityEvent (B)V a
	isOpenWaterFishing ()Z h
	lerpTo (DDDFFIZ)V a
	onClientRemoval ()V aj
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	pullEntity (Lnet/minecraft/world/entity/Entity;)V c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	retrieve (Lnet/minecraft/world/item/ItemStack;)I a
	setHookedEntity (Lnet/minecraft/world/entity/Entity;)V x
	setOwner (Lnet/minecraft/world/entity/Entity;)V b
	shouldRenderAtSqrDistance (D)Z a
	shouldStopFishing (Lnet/minecraft/world/entity/player/Player;)Z a
	tick ()V k
	updateOwnerInfo (Lnet/minecraft/world/entity/projectile/FishingHook;)V a
net/minecraft/world/entity/projectile/FishingHook$FishHookState buq$a
	$VALUES d
	BOBBING c
	FLYING a
	HOOKED_IN_ENTITY b
	$values ()[Lnet/minecraft/world/entity/projectile/FishingHook$FishHookState; a
net/minecraft/world/entity/projectile/FishingHook$OpenWaterType buq$b
	$VALUES d
	ABOVE_WATER a
	INSIDE_WATER b
	INVALID c
	$values ()[Lnet/minecraft/world/entity/projectile/FishingHook$OpenWaterType; a
net/minecraft/world/entity/projectile/ItemSupplier bur
	getItem ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/entity/projectile/LargeFireball bus
	explosionPower e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/entity/projectile/LlamaSpit but
	defineSynchedData ()V a_
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	tick ()V k
net/minecraft/world/entity/projectile/Projectile buu
	cachedOwner c
	hasBeenShot e
	leftOwner d
	ownerUUID b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	checkLeftOwner ()Z i
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getEffectSource ()Lnet/minecraft/world/entity/Entity; y
	getOwner ()Lnet/minecraft/world/entity/Entity; x
	lerpMotion (DDD)V k
	lerpRotation (FF)F d
	mayInteract (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	ownedBy (Lnet/minecraft/world/entity/Entity;)Z d
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	setOwner (Lnet/minecraft/world/entity/Entity;)V b
	shoot (DDDFF)V c
	shootFromRotation (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	tick ()V k
	updateRotation ()V z
net/minecraft/world/entity/projectile/ProjectileUtil buv
	getEntityHitResult (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;D)Lnet/minecraft/world/phys/EntityHitResult; a
	getEntityHitResult (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Lnet/minecraft/world/phys/EntityHitResult; a
	getEntityHitResult (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;F)Lnet/minecraft/world/phys/EntityHitResult; a
	getHitResult (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;)Lnet/minecraft/world/phys/HitResult; a
	getMobArrow (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
	getWeaponHoldingHand (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/InteractionHand; a
	rotateTowardsMovement (Lnet/minecraft/world/entity/Entity;F)V a
net/minecraft/world/entity/projectile/ShulkerBullet buw
	SPEED b
	currentMoveDirection d
	finalTarget c
	flightSteps e
	targetDeltaX f
	targetDeltaY ao
	targetDeltaZ ap
	targetId aq
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	checkDespawn ()V dm
	defineSynchedData ()V a_
	getLightLevelDependentMagicValue ()F bg
	getMoveDirection ()Lnet/minecraft/core/Direction; h
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cR
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isOnFire ()Z bH
	isPickable ()Z bk
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	selectNextMoveDirection (Lnet/minecraft/core/Direction$Axis;)V a
	setMoveDirection (Lnet/minecraft/core/Direction;)V a
	shouldRenderAtSqrDistance (D)Z a
	tick ()V k
net/minecraft/world/entity/projectile/SmallFireball bux
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bk
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/Snowball buy
	getDefaultItem ()Lnet/minecraft/world/item/Item; i
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; n
	handleEntityEvent (B)V a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/SpectralArrow buz
	duration f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; l
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	tick ()V k
net/minecraft/world/entity/projectile/ThrowableItemProjectile bva
	DATA_ITEM_STACK b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getDefaultItem ()Lnet/minecraft/world/item/Item; i
	getItem ()Lnet/minecraft/world/item/ItemStack; h
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; j
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/projectile/ThrowableProjectile bvb
	getGravity ()F l
	shouldRenderAtSqrDistance (D)Z a
	tick ()V k
net/minecraft/world/entity/projectile/ThrownEgg bvc
	getDefaultItem ()Lnet/minecraft/world/item/Item; i
	handleEntityEvent (B)V a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/ThrownEnderpearl bvd
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	getDefaultItem ()Lnet/minecraft/world/item/Item; i
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	tick ()V k
net/minecraft/world/entity/projectile/ThrownExperienceBottle bve
	getDefaultItem ()Lnet/minecraft/world/item/Item; i
	getGravity ()F l
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
net/minecraft/world/entity/projectile/ThrownPotion bvf
	SPLASH_RANGE b
	SPLASH_RANGE_SQ d
	WATER_SENSITIVE c
	applySplash (Ljava/util/List;Lnet/minecraft/world/entity/Entity;)V a
	applyWater ()V n
	dowseFire (Lnet/minecraft/core/BlockPos;)V a
	getDefaultItem ()Lnet/minecraft/world/item/Item; i
	getGravity ()F l
	isLingering ()Z o
	makeAreaOfEffectCloud (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/alchemy/Potion;)V a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
net/minecraft/world/entity/projectile/ThrownTrident bvg
	ID_FOIL ap
	ID_LOYALTY ao
	clientSideReturnTridentTickCount f
	dealtDamage ar
	tridentItem aq
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	findHitEntity (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/EntityHitResult; a
	getDefaultHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; i
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; l
	getWaterInertia ()F t
	isAcceptibleReturnOwner ()Z C
	isChanneling ()Z A
	isFoil ()Z w
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldRender (DDD)Z j
	tick ()V k
	tickDespawn ()V h
	tryPickup (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/entity/projectile/WitherSkull bvh
	DATA_DANGEROUS e
	defineSynchedData ()V a_
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getInertia ()F j
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isDangerous ()Z l
	isOnFire ()Z bH
	isPickable ()Z bk
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	setDangerous (Z)V a
	shouldBurn ()Z M_
net/minecraft/world/entity/raid/Raid bvj
	ATTEMPT_RAID_CLOSE j
	ATTEMPT_RAID_FARTHEST i
	ATTEMPT_RAID_INSIDE k
	DEFAULT_MAX_BAD_OMEN_LEVEL e
	DEFAULT_PRE_RAID_TICKS r
	DEFEAT w
	HERO_OF_THE_VILLAGE_DURATION z
	LOW_MOB_THRESHOLD t
	MAX_CELEBRATION_TICKS c
	MAX_NO_ACTION_TIME b
	NUM_SPAWN_ATTEMPTS n
	OMINOUS_BANNER_PATTERN_NAME o
	OUTSIDE_RAID_BOUNDS_TIMEOUT s
	POST_RAID_TICK_LIMIT q
	RAIDERS_REMAINING p
	RAID_BAR_DEFEAT_COMPONENT y
	RAID_BAR_VICTORY_COMPONENT x
	RAID_NAME_COMPONENT u
	RAID_REMOVAL_THRESHOLD_SQR g
	RAID_TIMEOUT_TICKS m
	SECTION_RADIUS_FOR_FINDING_NEW_VILLAGE_CENTER h
	TICKS_PER_DAY d
	VALID_RAID_RADIUS_SQR f
	VICTORY v
	VILLAGE_RADIUS_BUFFER a
	VILLAGE_SEARCH_RADIUS l
	active K
	badOmenLevel J
	celebrationTicks S
	center E
	groupRaiderMap B
	groupToLeaderMap A
	groupsSpawned L
	heroesOfTheVillage C
	id H
	level F
	numGroups Q
	postRaidTicks N
	raidCooldownTicks O
	raidEvent M
	random P
	started G
	status R
	ticksActive D
	totalHealth I
	waveSpawnPos T
	absorbBadOmen (Lnet/minecraft/world/entity/player/Player;)V a
	addHeroOfTheVillage (Lnet/minecraft/world/entity/Entity;)V a
	addWaveMob (ILnet/minecraft/world/entity/raid/Raider;)Z b
	addWaveMob (ILnet/minecraft/world/entity/raid/Raider;Z)Z a
	findRandomSpawnPos (II)Lnet/minecraft/core/BlockPos; a
	getAllRaiders ()Ljava/util/Set; h
	getBadOmenLevel ()I m
	getCenter ()Lnet/minecraft/core/BlockPos; t
	getDefaultNumSpawns (Lnet/minecraft/world/entity/raid/Raid$RaiderType;IZ)I a
	getEnchantOdds ()F w
	getGroupsSpawned ()I k
	getHealthOfLivingRaiders ()F q
	getId ()I u
	getLeader (I)Lnet/minecraft/world/entity/raid/Raider; b
	getLeaderBannerInstance ()Lnet/minecraft/world/item/ItemStack; s
	getLevel ()Lnet/minecraft/world/level/Level; i
	getMaxBadOmenLevel ()I l
	getNumGroups (Lnet/minecraft/world/Difficulty;)I a
	getPotentialBonusSpawns (Lnet/minecraft/world/entity/raid/Raid$RaiderType;Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/DifficultyInstance;Z)I a
	getTotalHealth ()F g
	getTotalRaidersAlive ()I r
	getValidSpawnPos (I)Ljava/util/Optional; d
	hasBonusWave ()Z C
	hasFirstWaveSpawned ()Z c
	hasMoreWaves ()Z A
	hasSpawnedBonusWave ()Z D
	isActive ()Z v
	isBetweenWaves ()Z b
	isFinalWave ()Z B
	isLoss ()Z f
	isOver ()Z a
	isStarted ()Z j
	isStopped ()Z d
	isVictory ()Z e
	joinRaid (ILnet/minecraft/world/entity/raid/Raider;Lnet/minecraft/core/BlockPos;Z)V a
	moveRaidCenterToNearbyVillageSection ()V z
	playSound (Lnet/minecraft/core/BlockPos;)V a
	removeFromRaid (Lnet/minecraft/world/entity/raid/Raider;Z)V a
	removeLeader (I)V c
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setBadOmenLevel (I)V a
	setCenter (Lnet/minecraft/core/BlockPos;)V c
	setDirty ()V H
	setLeader (ILnet/minecraft/world/entity/raid/Raider;)V a
	shouldSpawnBonusGroup ()Z E
	shouldSpawnGroup ()Z G
	spawnGroup (Lnet/minecraft/core/BlockPos;)V b
	stop ()V n
	tick ()V o
	updateBossbar ()V p
	updatePlayers ()V y
	updateRaiders ()V F
	validPlayer ()Ljava/util/function/Predicate; x
net/minecraft/world/entity/raid/Raid$RaidStatus bvj$a
	$VALUES f
	LOSS c
	ONGOING a
	STOPPED d
	VALUES e
	VICTORY b
	$values ()[Lnet/minecraft/world/entity/raid/Raid$RaidStatus; b
	getByName (Ljava/lang/String;)Lnet/minecraft/world/entity/raid/Raid$RaidStatus; a
	getName ()Ljava/lang/String; a
net/minecraft/world/entity/raid/Raid$RaiderType bvj$b
	$VALUES i
	EVOKER b
	PILLAGER c
	RAVAGER e
	VALUES f
	VINDICATOR a
	WITCH d
	entityType g
	spawnsPerWaveBeforeBonus h
	$values ()[Lnet/minecraft/world/entity/raid/Raid$RaiderType; a
net/minecraft/world/entity/raid/Raider bvk
	ALLOWED_ITEMS b
	IS_CELEBRATING c
	canJoinRaid bX
	raid d
	ticksOutsideRaid bY
	wave e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	applyRaidBuffs (IZ)V a
	canJoinPatrol ()Z fQ
	canJoinRaid ()Z fW
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; L_
	getCurrentRaid ()Lnet/minecraft/world/entity/raid/Raid; fX
	getTicksOutsideRaid ()I gb
	getWave ()I fZ
	hasActiveRaid ()Z fY
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isCelebrating ()Z ga
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z P
	setCanJoinRaid (Z)V y
	setCelebrating (Z)V z
	setCurrentRaid (Lnet/minecraft/world/entity/raid/Raid;)V a
	setTicksOutsideRaid (I)V b
	setWave (I)V a
	updateNoActionTime ()V fN
net/minecraft/world/entity/raid/Raider$HoldGroundAttackGoal bvk$a
	hostileRadiusSqr d
	mob c
	shoutTargeting a
	canUse ()Z a
	requiresUpdateEveryTick ()Z E_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/raid/Raider$ObtainRaidLeaderBannerGoal bvk$b
	mob b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/raid/Raider$RaiderCelebration bvk$c
	mob b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/raid/Raider$RaiderMoveThroughVillageGoal bvk$d
	distanceToPoi e
	poiPos c
	raider a
	speedModifier b
	stuck f
	visited d
	canContinueToUse ()Z b
	canUse ()Z a
	hasNotVisited (Lnet/minecraft/core/BlockPos;)Z a
	hasSuitablePoi ()Z i
	isValidRaid ()Z h
	start ()V c
	stop ()V d
	tick ()V e
	updateVisited ()V k
net/minecraft/world/entity/raid/Raids bvl
	RAID_FILE_ID a
	level c
	nextAvailableID d
	raidMap b
	tick e
	canJoinRaid (Lnet/minecraft/world/entity/raid/Raider;Lnet/minecraft/world/entity/raid/Raid;)Z a
	createOrExtendRaid (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/world/entity/raid/Raid; a
	get (I)Lnet/minecraft/world/entity/raid/Raid; a
	getFileId (Lnet/minecraft/core/Holder;)Ljava/lang/String; a
	getNearbyRaid (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/entity/raid/Raid; a
	getOrCreateRaid (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/raid/Raid; a
	getUniqueId ()I d
	load (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/raid/Raids; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	tick ()V a
net/minecraft/world/entity/schedule/Activity bvn
	ADMIRE_ITEM m
	AVOID n
	CELEBRATE l
	CORE a
	DIG z
	EMERGE y
	FIGHT k
	HIDE j
	IDLE b
	INVESTIGATE w
	LAY_SPAWN u
	LONG_JUMP q
	MEET f
	PANIC g
	PLAY d
	PLAY_DEAD p
	PRE_RAID i
	RAID h
	RAM r
	REST e
	RIDE o
	ROAR x
	SNIFF v
	SWIM t
	TONGUE s
	WORK c
	hashCode B
	name A
	getName ()Ljava/lang/String; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/schedule/Activity; a
net/minecraft/world/entity/schedule/Keyframe bvo
	timeStamp a
	value b
	getTimeStamp ()I a
	getValue ()F b
net/minecraft/world/entity/schedule/Schedule bvp
	EMPTY c
	SIMPLE d
	TOTAL_WORK_TIME b
	VILLAGER_BABY e
	VILLAGER_DEFAULT f
	WORK_START_TIME a
	timelines g
	ensureTimelineExistsFor (Lnet/minecraft/world/entity/schedule/Activity;)V a
	getActivityAt (I)Lnet/minecraft/world/entity/schedule/Activity; a
	getAllTimelinesExceptFor (Lnet/minecraft/world/entity/schedule/Activity;)Ljava/util/List; c
	getTimelineFor (Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/world/entity/schedule/Timeline; b
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/schedule/ScheduleBuilder; a
net/minecraft/world/entity/schedule/ScheduleBuilder bvq
	schedule a
	transitions b
	build ()Lnet/minecraft/world/entity/schedule/Schedule; a
	changeActivityAt (ILnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/world/entity/schedule/ScheduleBuilder; a
net/minecraft/world/entity/schedule/ScheduleBuilder$ActivityTransition bvq$a
	activity b
	time a
	getActivity ()Lnet/minecraft/world/entity/schedule/Activity; b
	getTime ()I a
net/minecraft/world/entity/schedule/Timeline bvr
	keyframes a
	previousIndex b
	addKeyframe (IF)Lnet/minecraft/world/entity/schedule/Timeline; a
	addKeyframes (Ljava/util/Collection;)Lnet/minecraft/world/entity/schedule/Timeline; a
	getKeyframes ()Lcom/google/common/collect/ImmutableList; a
	getValueAt (I)F a
	sortAndDeduplicateKeyframes ()V b
net/minecraft/world/entity/vehicle/AbstractMinecart bvt
	DATA_ID_CUSTOM_DISPLAY ap
	DATA_ID_DAMAGE e
	DATA_ID_DISPLAY_BLOCK f
	DATA_ID_DISPLAY_OFFSET ao
	DATA_ID_HURT c
	DATA_ID_HURTDIR d
	EXITS as
	POSE_DISMOUNT_HEIGHTS aq
	WATER_SLOWDOWN_FACTOR b
	flipped ar
	lSteps at
	lx au
	lxd az
	lxr ay
	ly av
	lyd aA
	lyr ax
	lz aw
	lzd aB
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	animateHurt ()V bD
	applyNaturalSlowdown ()V l
	canCollideWith (Lnet/minecraft/world/entity/Entity;)Z h
	comeOffTrack ()V j
	createMinecart (Lnet/minecraft/world/level/Level;DDDLnet/minecraft/world/entity/vehicle/AbstractMinecart$Type;)Lnet/minecraft/world/entity/vehicle/AbstractMinecart; a
	defineSynchedData ()V a_
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	exits (Lnet/minecraft/world/level/block/state/properties/RailShape;)Lcom/mojang/datafixers/util/Pair; a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getBlockSpeedFactor ()F aD
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; cz
	getDamage ()F n
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; t
	getDefaultDisplayOffset ()I w
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; s
	getDisplayOffset ()I u
	getDropItem ()Lnet/minecraft/world/item/Item; h
	getHurtDir ()I q
	getHurtTime ()I o
	getMaxSpeed ()D i
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; r
	getMotionDirection ()Lnet/minecraft/core/Direction; cw
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aO
	getPassengersRidingOffset ()D bt
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dn
	getPos (DDD)Lnet/minecraft/world/phys/Vec3; p
	getPosOffs (DDDD)Lnet/minecraft/world/phys/Vec3; a
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	hasCustomDisplay ()Z x
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bk
	isPushable ()Z bl
	isRedstoneConductor (Lnet/minecraft/core/BlockPos;)Z a
	lerpMotion (DDD)V k
	lerpTo (DDDFFIZ)V a
	moveAlongTrack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setCustomDisplay (Z)V a
	setDamage (F)V a
	setDisplayBlockState (Lnet/minecraft/world/level/block/state/BlockState;)V b
	setDisplayOffset (I)V m
	setHurtDir (I)V d
	setHurtTime (I)V c
	tick ()V k
net/minecraft/world/entity/vehicle/AbstractMinecart$Type bvt$a
	$VALUES h
	CHEST b
	COMMAND_BLOCK g
	FURNACE c
	HOPPER f
	RIDEABLE a
	SPAWNER e
	TNT d
	$values ()[Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; a
net/minecraft/world/entity/vehicle/AbstractMinecartContainer bvu
	itemStacks c
	lootTable d
	lootTableSeed e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyNaturalSlowdown ()V l
	clearContent ()V a
	clearItemStacks ()V C
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getItemStacks ()Lnet/minecraft/core/NonNullList; A
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; y
	getLootTableSeed ()J z
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;J)V a
	setLootTableSeed (J)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/entity/vehicle/Boat bvv
	BUBBLE_TIME e
	DATA_ID_BUBBLE_TIME at
	DATA_ID_DAMAGE ap
	DATA_ID_HURT f
	DATA_ID_HURTDIR ao
	DATA_ID_PADDLE_LEFT ar
	DATA_ID_PADDLE_RIGHT as
	DATA_ID_TYPE aq
	PADDLE_LEFT b
	PADDLE_RIGHT c
	PADDLE_SOUND_TIME d
	PADDLE_SPEED av
	TIME_TO_EJECT au
	bubbleAngle aS
	bubbleAngleO aT
	bubbleColumnDirectionIsDown aQ
	bubbleMultiplier aR
	deltaRotation az
	inputDown aJ
	inputLeft aG
	inputRight aH
	inputUp aI
	invFriction ax
	isAboveBubbleColumn aP
	landFriction aL
	lastYd aO
	lerpSteps aA
	lerpX aB
	lerpXRot aF
	lerpY aC
	lerpYRot aE
	lerpZ aD
	oldStatus aN
	outOfControlTicks ay
	paddlePositions aw
	status aM
	waterLevel aK
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	animateHurt ()V bD
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z o
	canBeCollidedWith ()Z bq
	canCollideWith (Lnet/minecraft/world/entity/Entity;)Z h
	canVehicleCollide (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkInWater ()Z y
	clampRotation (Lnet/minecraft/world/entity/Entity;)V a
	controlBoat ()V C
	defineSynchedData ()V a_
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	floatBoat ()V A
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getBoatType ()Lnet/minecraft/world/entity/vehicle/Boat$Type; s
	getBubbleAngle (F)F b
	getBubbleTime ()I D
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cG
	getDamage ()F o
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDropItem ()Lnet/minecraft/world/item/Item; h
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getGroundFriction ()F l
	getHurtDir ()I r
	getHurtTime ()I q
	getMaxPassengers ()I t
	getMotionDirection ()Lnet/minecraft/core/Direction; cw
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aO
	getPaddleSound ()Lnet/minecraft/sounds/SoundEvent; i
	getPaddleState (I)Z c
	getPassengersRidingOffset ()D bt
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dn
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	getRowingTime (IF)F a
	getSinglePassengerXOffset ()F n
	getStatus ()Lnet/minecraft/world/entity/vehicle/Boat$Status; x
	getWaterLevelAbove ()F j
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isPickable ()Z bk
	isPushable ()Z bl
	isUnderWater ()Z aV
	isUnderwater ()Lnet/minecraft/world/entity/vehicle/Boat$Status; z
	lerpTo (DDDFFIZ)V a
	onAboveBubbleCol (Z)V k
	onPassengerTurned (Lnet/minecraft/world/entity/Entity;)V j
	positionRider (Lnet/minecraft/world/entity/Entity;)V i
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setBubbleTime (I)V a
	setDamage (F)V a
	setHurtDir (I)V m
	setHurtTime (I)V d
	setInput (ZZZZ)V a
	setPaddleState (ZZ)V a
	setType (Lnet/minecraft/world/entity/vehicle/Boat$Type;)V a
	tick ()V k
	tickBubbleColumn ()V u
	tickLerp ()V w
net/minecraft/world/entity/vehicle/Boat$Status bvv$a
	$VALUES f
	IN_AIR e
	IN_WATER a
	ON_LAND d
	UNDER_FLOWING_WATER c
	UNDER_WATER b
	$values ()[Lnet/minecraft/world/entity/vehicle/Boat$Status; a
net/minecraft/world/entity/vehicle/Boat$Type bvv$b
	$VALUES j
	ACACIA e
	BIRCH c
	DARK_OAK f
	JUNGLE d
	MANGROVE g
	OAK a
	SPRUCE b
	name h
	planks i
	$values ()[Lnet/minecraft/world/entity/vehicle/Boat$Type; c
	byId (I)Lnet/minecraft/world/entity/vehicle/Boat$Type; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/vehicle/Boat$Type; a
	getName ()Ljava/lang/String; a
	getPlanks ()Lnet/minecraft/world/level/block/Block; b
net/minecraft/world/entity/vehicle/ChestBoat bvw
	CONTAINER_SIZE f
	itemStacks ao
	lootTable ap
	lootTableSeed aq
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	clearContent ()V a
	clearItemStacks ()V C
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getContainerSize ()I b
	getDropItem ()Lnet/minecraft/world/item/Item; h
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getItemStacks ()Lnet/minecraft/core/NonNullList; A
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; y
	getLootTableSeed ()J z
	getMaxPassengers ()I t
	getSinglePassengerXOffset ()F n
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	openCustomInventoryScreen (Lnet/minecraft/world/entity/player/Player;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;)V a
	setLootTableSeed (J)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	unpackLootTable (Lnet/minecraft/world/entity/player/Player;)V d
net/minecraft/world/entity/vehicle/ContainerEntity bvx
	addChestVehicleSaveData (Lnet/minecraft/nbt/CompoundTag;)V c
	chestVehicleDestroyed (Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)V a
	clearChestVehicleContent ()V f
	clearItemStacks ()V C
	getChestVehicleItem (I)Lnet/minecraft/world/item/ItemStack; d_
	getChestVehicleSlot (I)Lnet/minecraft/world/entity/SlotAccess; e_
	getItemStacks ()Lnet/minecraft/core/NonNullList; A
	getLevel ()Lnet/minecraft/world/level/Level; W
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; y
	getLootTableSeed ()J z
	interactWithChestVehicle (Ljava/util/function/BiConsumer;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/InteractionResult; a
	isChestVehicleEmpty ()Z g
	isChestVehicleStillValid (Lnet/minecraft/world/entity/player/Player;)Z f
	isEmpty ()Z c
	isRemoved ()Z dt
	position ()Lnet/minecraft/world/phys/Vec3; cY
	readChestVehicleSaveData (Lnet/minecraft/nbt/CompoundTag;)V a_
	removeChestVehicleItem (II)Lnet/minecraft/world/item/ItemStack; b
	removeChestVehicleItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; c_
	setChestVehicleItem (ILnet/minecraft/world/item/ItemStack;)V c
	setLootTable (Lnet/minecraft/resources/ResourceLocation;)V a
	setLootTableSeed (J)V a
	unpackChestVehicleLootTable (Lnet/minecraft/world/entity/player/Player;)V e
net/minecraft/world/entity/vehicle/DismountHelper bvy
	canDismountTo (Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Z a
	canDismountTo (Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Pose;)Z a
	findCeilingFrom (Lnet/minecraft/core/BlockPos;ILjava/util/function/Function;)D a
	findSafeDismountLocation (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/phys/Vec3; a
	isBlockFloorValid (D)Z a
	nonClimbableShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	offsetsForDirection (Lnet/minecraft/core/Direction;)[[I a
net/minecraft/world/entity/vehicle/Minecart bvz
	activateMinecart (IIIZ)V a
	getDropItem ()Lnet/minecraft/world/item/Item; h
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; r
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/entity/vehicle/MinecartChest bwa
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; t
	getDefaultDisplayOffset ()I w
	getDropItem ()Lnet/minecraft/world/item/Item; h
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; r
net/minecraft/world/entity/vehicle/MinecartCommandBlock bwb
	ACTIVATION_DELAY f
	DATA_ID_COMMAND_NAME c
	DATA_ID_LAST_OUTPUT d
	commandBlock e
	lastActivated ao
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; y
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; t
	getDropItem ()Lnet/minecraft/world/item/Item; h
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; r
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onlyOpCanSetNbt ()Z cF
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/entity/vehicle/MinecartCommandBlock$MinecartCommandBase bwb$a
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; i
	getLevel ()Lnet/minecraft/server/level/ServerLevel; e
	getMinecart ()Lnet/minecraft/world/entity/vehicle/MinecartCommandBlock; h
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	onUpdated ()V f
net/minecraft/world/entity/vehicle/MinecartFurnace bwc
	DATA_ID_FUEL e
	INGREDIENT ao
	fuel f
	xPush c
	zPush d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyNaturalSlowdown ()V l
	defineSynchedData ()V a_
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; t
	getDropItem ()Lnet/minecraft/world/item/Item; h
	getMaxSpeed ()D i
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; r
	hasFuel ()Z y
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	moveAlongTrack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setHasFuel (Z)V p
	tick ()V k
net/minecraft/world/entity/vehicle/MinecartHopper bwd
	MOVE_ITEM_SPEED c
	cooldownTime ao
	enabled f
	lastPosition ap
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; t
	getDefaultDisplayOffset ()I w
	getDropItem ()Lnet/minecraft/world/item/Item; h
	getLevelX ()D E
	getLevelY ()D F
	getLevelZ ()D G
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; r
	isEnabled ()Z D
	isOnCooldown ()Z J
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setCooldown (I)V n
	setEnabled (Z)V p
	suckInItems ()Z I
	tick ()V k
net/minecraft/world/entity/vehicle/MinecartSpawner bwe
	spawner c
	ticker d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createTicker (Lnet/minecraft/world/level/Level;)Ljava/lang/Runnable; a
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; t
	getDropItem ()Lnet/minecraft/world/item/Item; h
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; r
	getSpawner ()Lnet/minecraft/world/level/BaseSpawner; y
	handleEntityEvent (B)V a
	onlyOpCanSetNbt ()Z cF
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	tick ()V k
net/minecraft/world/entity/vehicle/MinecartTNT bwf
	EVENT_PRIME c
	fuse d
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	explode (D)V h
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; t
	getDropItem ()Lnet/minecraft/world/item/Item; h
	getFuse ()I z
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; r
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPrimed ()Z A
	primeFuse ()V y
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
	tick ()V k
net/minecraft/world/food/FoodConstants bwh
	EXHAUSTION_ATTACK u
	EXHAUSTION_CROUCH x
	EXHAUSTION_DAMAGE v
	EXHAUSTION_DROP e
	EXHAUSTION_HEAL q
	EXHAUSTION_JUMP r
	EXHAUSTION_MINE t
	EXHAUSTION_SPRINT y
	EXHAUSTION_SPRINT_JUMP s
	EXHAUSTION_SWIM z
	EXHAUSTION_WALK w
	FOOD_SATURATION_GOOD n
	FOOD_SATURATION_LOW l
	FOOD_SATURATION_MAX o
	FOOD_SATURATION_NORMAL m
	FOOD_SATURATION_POOR k
	FOOD_SATURATION_SUPERNATURAL p
	HEALTH_TICK_COUNT f
	HEALTH_TICK_COUNT_SATURATED g
	HEAL_LEVEL h
	MAX_FOOD a
	MAX_SATURATION b
	SATURATION_FLOOR d
	SPRINT_LEVEL i
	START_SATURATION c
	STARVE_LEVEL j
net/minecraft/world/food/FoodData bwi
	exhaustionLevel c
	foodLevel a
	lastFoodLevel e
	saturationLevel b
	tickTimer d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addExhaustion (F)V a
	eat (IF)V a
	eat (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/ItemStack;)V a
	getExhaustionLevel ()F d
	getFoodLevel ()I a
	getLastFoodLevel ()I b
	getSaturationLevel ()F e
	needsFood ()Z c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setExhaustion (F)V c
	setFoodLevel (I)V a
	setSaturation (F)V b
	tick (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/food/FoodProperties bwj
	canAlwaysEat d
	effects f
	fastFood e
	isMeat c
	nutrition a
	saturationModifier b
	canAlwaysEat ()Z d
	getEffects ()Ljava/util/List; f
	getNutrition ()I a
	getSaturationModifier ()F b
	isFastFood ()Z e
	isMeat ()Z c
net/minecraft/world/food/FoodProperties$Builder bwj$a
	canAlwaysEat d
	effects f
	fastFood e
	isMeat c
	nutrition a
	saturationModifier b
	alwaysEat ()Lnet/minecraft/world/food/FoodProperties$Builder; b
	build ()Lnet/minecraft/world/food/FoodProperties; d
	effect (Lnet/minecraft/world/effect/MobEffectInstance;F)Lnet/minecraft/world/food/FoodProperties$Builder; a
	fast ()Lnet/minecraft/world/food/FoodProperties$Builder; c
	meat ()Lnet/minecraft/world/food/FoodProperties$Builder; a
	nutrition (I)Lnet/minecraft/world/food/FoodProperties$Builder; a
	saturationMod (F)Lnet/minecraft/world/food/FoodProperties$Builder; a
net/minecraft/world/food/Foods bwk
	APPLE a
	BAKED_POTATO b
	BEEF c
	BEETROOT d
	BEETROOT_SOUP e
	BREAD f
	CARROT g
	CHICKEN h
	CHORUS_FRUIT i
	COD j
	COOKED_BEEF k
	COOKED_CHICKEN l
	COOKED_COD m
	COOKED_MUTTON n
	COOKED_PORKCHOP o
	COOKED_RABBIT p
	COOKED_SALMON q
	COOKIE r
	DRIED_KELP s
	ENCHANTED_GOLDEN_APPLE t
	GLOW_BERRIES M
	GOLDEN_APPLE u
	GOLDEN_CARROT v
	HONEY_BOTTLE w
	MELON_SLICE x
	MUSHROOM_STEW y
	MUTTON z
	POISONOUS_POTATO A
	PORKCHOP B
	POTATO C
	PUFFERFISH D
	PUMPKIN_PIE E
	RABBIT F
	RABBIT_STEW G
	ROTTEN_FLESH H
	SALMON I
	SPIDER_EYE J
	SUSPICIOUS_STEW K
	SWEET_BERRIES L
	TROPICAL_FISH N
	stew (I)Lnet/minecraft/world/food/FoodProperties$Builder; a
net/minecraft/world/inventory/AbstractContainerMenu bwm
	CARRIED_SLOT_SIZE h
	LOGGER k
	QUICKCRAFT_HEADER_CONTINUE f
	QUICKCRAFT_HEADER_END g
	QUICKCRAFT_HEADER_START e
	QUICKCRAFT_TYPE_CHARITABLE b
	QUICKCRAFT_TYPE_CLONE d
	QUICKCRAFT_TYPE_GREEDY c
	SLOT_CLICKED_OUTSIDE a
	carried n
	containerId j
	containerListeners w
	dataSlots m
	lastSlots l
	menuType s
	quickcraftSlots v
	quickcraftStatus u
	quickcraftType t
	remoteCarried q
	remoteDataSlots p
	remoteSlots o
	slots i
	stateId r
	suppressRemoteUpdates y
	synchronizer x
	addDataSlot (Lnet/minecraft/world/inventory/DataSlot;)Lnet/minecraft/world/inventory/DataSlot; a
	addDataSlots (Lnet/minecraft/world/inventory/ContainerData;)V a
	addSlot (Lnet/minecraft/world/inventory/Slot;)Lnet/minecraft/world/inventory/Slot; a
	addSlotListener (Lnet/minecraft/world/inventory/ContainerListener;)V a
	broadcastChanges ()V d
	broadcastFullState ()V e
	canDragTo (Lnet/minecraft/world/inventory/Slot;)Z b
	canItemQuickReplace (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;Z)Z a
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	checkContainerDataCount (Lnet/minecraft/world/inventory/ContainerData;I)V a
	checkContainerSize (Lnet/minecraft/world/Container;I)V a
	clearContainer (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/Container;)V a
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z b
	clicked (IILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)V a
	createCarriedSlotAccess ()Lnet/minecraft/world/entity/SlotAccess; m
	doClick (IILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)V b
	findSlot (Lnet/minecraft/world/Container;I)Ljava/util/OptionalInt; b
	getCarried ()Lnet/minecraft/world/item/ItemStack; g
	getItems ()Lnet/minecraft/core/NonNullList; c
	getQuickCraftSlotCount (Ljava/util/Set;ILnet/minecraft/world/item/ItemStack;I)V a
	getQuickcraftHeader (I)I d
	getQuickcraftMask (II)I b
	getQuickcraftType (I)I c
	getRedstoneSignalFromBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)I a
	getRedstoneSignalFromContainer (Lnet/minecraft/world/Container;)I b
	getSlot (I)Lnet/minecraft/world/inventory/Slot; b
	getStateId ()I j
	getType ()Lnet/minecraft/world/inventory/MenuType; a
	incrementStateId ()I k
	initializeContents (ILjava/util/List;Lnet/minecraft/world/item/ItemStack;)V a
	isValidQuickcraftType (ILnet/minecraft/world/entity/player/Player;)Z a
	isValidSlotIndex (I)Z a
	moveItemStackTo (Lnet/minecraft/world/item/ItemStack;IIZ)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removeSlotListener (Lnet/minecraft/world/inventory/ContainerListener;)V b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	resetQuickCraft ()V f
	resumeRemoteUpdates ()V i
	sendAllDataToRemote ()V b
	setCarried (Lnet/minecraft/world/item/ItemStack;)V b
	setData (II)V a
	setItem (IILnet/minecraft/world/item/ItemStack;)V a
	setRemoteCarried (Lnet/minecraft/world/item/ItemStack;)V a
	setRemoteSlot (ILnet/minecraft/world/item/ItemStack;)V a
	setRemoteSlotNoCopy (ILnet/minecraft/world/item/ItemStack;)V b
	setSynchronizer (Lnet/minecraft/world/inventory/ContainerSynchronizer;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stillValid (Lnet/minecraft/world/inventory/ContainerLevelAccess;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/Block;)Z a
	suppressRemoteUpdates ()V h
	synchronizeCarriedToRemote ()V l
	synchronizeDataSlotToRemote (II)V d
	synchronizeSlotToRemote (ILnet/minecraft/world/item/ItemStack;Ljava/util/function/Supplier;)V b
	transferState (Lnet/minecraft/world/inventory/AbstractContainerMenu;)V a
	triggerSlotListeners (ILnet/minecraft/world/item/ItemStack;Ljava/util/function/Supplier;)V a
	updateDataSlotListeners (II)V c
net/minecraft/world/inventory/AbstractFurnaceMenu bwn
	DATA_COUNT o
	FUEL_SLOT l
	INGREDIENT_SLOT k
	INV_SLOT_END r
	INV_SLOT_START q
	RESULT_SLOT m
	SLOT_COUNT n
	USE_ROW_SLOT_END t
	USE_ROW_SLOT_START s
	container u
	data v
	level p
	recipeBookType x
	recipeType w
	canSmelt (Lnet/minecraft/world/item/ItemStack;)Z c
	clearCraftingContent ()V l
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getBurnProgress ()I q
	getGridHeight ()I o
	getGridWidth ()I n
	getLitProgress ()I r
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; t
	getResultSlotIndex ()I m
	getSize ()I p
	isFuel (Lnet/minecraft/world/item/ItemStack;)Z d
	isLit ()Z s
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	shouldMoveToInventory (I)Z e
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/AnvilMenu bwo
	COST_ADDED_BASE z
	COST_BASE y
	COST_FAIL x
	COST_INCOMPATIBLE_PENALTY C
	COST_RENAME D
	COST_REPAIR_MATERIAL A
	COST_REPAIR_SACRIFICE B
	DEBUG_COST t
	LOGGER s
	MAX_NAME_LENGTH k
	cost w
	itemName v
	repairItemCountCost u
	calculateIncreasedRepairCost (I)I e
	createResult ()V l
	getCost ()I m
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	setItemName (Ljava/lang/String;)V a
net/minecraft/world/inventory/BeaconMenu bwp
	DATA_COUNT m
	INV_SLOT_END o
	INV_SLOT_START n
	PAYMENT_SLOT k
	SLOT_COUNT l
	USE_ROW_SLOT_END q
	USE_ROW_SLOT_START p
	access t
	beacon r
	beaconData u
	paymentSlot s
	getLevels ()I l
	getPrimaryEffect ()Lnet/minecraft/world/effect/MobEffect; m
	getSecondaryEffect ()Lnet/minecraft/world/effect/MobEffect; n
	hasPayment ()Z o
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setData (II)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	updateEffects (Ljava/util/Optional;Ljava/util/Optional;)V a
net/minecraft/world/inventory/BeaconMenu$PaymentSlot bwp$a
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/BlastFurnaceMenu bwq
net/minecraft/world/inventory/BrewingStandMenu bwr
	BOTTLE_SLOT_END l
	BOTTLE_SLOT_START k
	DATA_COUNT p
	FUEL_SLOT n
	INGREDIENT_SLOT m
	INV_SLOT_END r
	INV_SLOT_START q
	SLOT_COUNT o
	USE_ROW_SLOT_END t
	USE_ROW_SLOT_START s
	brewingStand u
	brewingStandData v
	ingredientSlot w
	getBrewingTicks ()I m
	getFuel ()I l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/BrewingStandMenu$FuelSlot bwr$a
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	mayPlaceItem (Lnet/minecraft/world/item/ItemStack;)Z b
net/minecraft/world/inventory/BrewingStandMenu$IngredientsSlot bwr$b
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/BrewingStandMenu$PotionSlot bwr$c
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	mayPlaceItem (Lnet/minecraft/world/item/ItemStack;)Z b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/inventory/CartographyTableMenu bws
	ADDITIONAL_SLOT l
	INV_SLOT_END p
	INV_SLOT_START o
	MAP_SLOT k
	RESULT_SLOT m
	USE_ROW_SLOT_END r
	USE_ROW_SLOT_START q
	access s
	container n
	lastSoundTime t
	resultContainer u
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupResultSlot (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ChestMenu bwt
	SLOTS_PER_ROW k
	container l
	containerRows m
	fiveRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; e
	fourRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; d
	getContainer ()Lnet/minecraft/world/Container; l
	getRowCount ()I m
	oneRow (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	sixRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; f
	sixRows (ILnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/Container;)Lnet/minecraft/world/inventory/ChestMenu; b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	threeRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; c
	threeRows (ILnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/Container;)Lnet/minecraft/world/inventory/ChestMenu; a
	twoRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; b
net/minecraft/world/inventory/ClickAction bwu
	$VALUES c
	PRIMARY a
	SECONDARY b
	$values ()[Lnet/minecraft/world/inventory/ClickAction; a
net/minecraft/world/inventory/ClickType bwv
	$VALUES h
	CLONE d
	PICKUP a
	PICKUP_ALL g
	QUICK_CRAFT f
	QUICK_MOVE b
	SWAP c
	THROW e
	$values ()[Lnet/minecraft/world/inventory/ClickType; a
net/minecraft/world/inventory/ContainerData bww
	get (I)I a
	getCount ()I a
	set (II)V a
net/minecraft/world/inventory/ContainerLevelAccess bwx
	NULL a
	create (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/inventory/ContainerLevelAccess; a
	evaluate (Ljava/util/function/BiFunction;)Ljava/util/Optional; a
	evaluate (Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object; a
	execute (Ljava/util/function/BiConsumer;)V a
net/minecraft/world/inventory/ContainerListener bwy
	dataChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/inventory/ContainerSynchronizer bwz
	sendCarriedChange (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/world/item/ItemStack;)V a
	sendDataChange (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	sendInitialData (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/core/NonNullList;Lnet/minecraft/world/item/ItemStack;[I)V a
	sendSlotChange (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/inventory/CraftingContainer bxa
	height d
	items b
	menu e
	width c
	clearContent ()V a
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getContainerSize ()I b
	getHeight ()I f
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getWidth ()I g
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/CraftingMenu bxb
	CRAFT_SLOT_END m
	CRAFT_SLOT_START l
	INV_SLOT_END o
	INV_SLOT_START n
	RESULT_SLOT k
	USE_ROW_SLOT_END q
	USE_ROW_SLOT_START p
	access t
	craftSlots r
	player u
	resultSlots s
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clearCraftingContent ()V l
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getGridHeight ()I o
	getGridWidth ()I n
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; t
	getResultSlotIndex ()I m
	getSize ()I p
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	shouldMoveToInventory (I)Z e
	slotChangedCraftingGrid (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/inventory/ResultContainer;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/DataSlot bxc
	prevValue a
	checkAndClearUpdateFlag ()Z c
	forContainer (Lnet/minecraft/world/inventory/ContainerData;I)Lnet/minecraft/world/inventory/DataSlot; a
	get ()I b
	set (I)V a
	shared ([II)Lnet/minecraft/world/inventory/DataSlot; a
	standalone ()Lnet/minecraft/world/inventory/DataSlot; a
net/minecraft/world/inventory/DispenserMenu bxd
	INV_SLOT_END m
	INV_SLOT_START l
	SLOT_COUNT k
	USE_ROW_SLOT_END o
	USE_ROW_SLOT_START n
	dispenser p
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/EnchantmentMenu bxe
	access o
	costs k
	enchantClue l
	enchantSlots n
	enchantmentSeed q
	levelClue m
	random p
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z b
	getEnchantmentList (Lnet/minecraft/world/item/ItemStack;II)Ljava/util/List; a
	getEnchantmentSeed ()I m
	getGoldCount ()I l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/FurnaceFuelSlot bxf
	menu a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I a_
	isBucket (Lnet/minecraft/world/item/ItemStack;)Z c
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/FurnaceMenu bxg
net/minecraft/world/inventory/FurnaceResultSlot bxh
	player a
	removeCount b
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V b_
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/GrindstoneMenu bxi
	ADDITIONAL_SLOT m
	INPUT_SLOT l
	INV_SLOT_END p
	INV_SLOT_START o
	MAX_NAME_LENGTH k
	RESULT_SLOT n
	USE_ROW_SLOT_END r
	USE_ROW_SLOT_START q
	access u
	repairSlots t
	resultSlots s
	createResult ()V l
	mergeEnchants (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removeNonCurses (Lnet/minecraft/world/item/ItemStack;II)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/HopperMenu bxj
	CONTAINER_SIZE k
	hopper l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/HorseInventoryMenu bxk
	horse l
	horseContainer k
	hasChest (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/InventoryMenu bxl
	ARMOR_SLOT_END p
	ARMOR_SLOT_START o
	BLOCK_ATLAS v
	CONTAINER_ID k
	CRAFT_SLOT_END n
	CRAFT_SLOT_START m
	EMPTY_ARMOR_SLOT_BOOTS z
	EMPTY_ARMOR_SLOT_CHESTPLATE x
	EMPTY_ARMOR_SLOT_HELMET w
	EMPTY_ARMOR_SLOT_LEGGINGS y
	EMPTY_ARMOR_SLOT_SHIELD A
	INV_SLOT_END r
	INV_SLOT_START q
	RESULT_SLOT l
	SHIELD_SLOT u
	SLOT_IDS D
	TEXTURE_EMPTY_SLOTS C
	USE_ROW_SLOT_END t
	USE_ROW_SLOT_START s
	active B
	craftSlots E
	owner G
	resultSlots F
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clearCraftingContent ()V l
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getCraftSlots ()Lnet/minecraft/world/inventory/CraftingContainer; q
	getGridHeight ()I o
	getGridWidth ()I n
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; t
	getResultSlotIndex ()I m
	getSize ()I p
	isHotbarSlot (I)Z f
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	shouldMoveToInventory (I)Z e
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ItemCombinerMenu bxm
	ADDITIONAL_SLOT m
	INPUT_SLOT l
	INV_SLOT_END s
	INV_SLOT_START k
	RESULT_SLOT n
	USE_ROW_SLOT_END u
	USE_ROW_SLOT_START t
	access q
	inputSlots p
	player r
	resultSlots o
	createResult ()V l
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	shouldQuickMoveToAdditionalSlot (Lnet/minecraft/world/item/ItemStack;)Z c
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/LecternMenu bxn
	BUTTON_NEXT_PAGE l
	BUTTON_PAGE_JUMP_RANGE_START n
	BUTTON_PREV_PAGE k
	BUTTON_TAKE_BOOK m
	DATA_COUNT o
	SLOT_COUNT p
	lectern q
	lecternData r
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z b
	getBook ()Lnet/minecraft/world/item/ItemStack; l
	getPage ()I m
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	setData (II)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/LoomMenu bxo
	INV_SLOT_END m
	INV_SLOT_START l
	PATTERN_NOT_SET k
	USE_ROW_SLOT_END o
	USE_ROW_SLOT_START n
	access p
	bannerSlot t
	dyeSlot u
	inputContainer y
	lastSoundTime x
	outputContainer z
	patternSlot v
	resultSlot w
	selectablePatterns r
	selectedBannerPatternIndex q
	slotUpdateListener s
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z b
	getBannerSlot ()Lnet/minecraft/world/inventory/Slot; n
	getDyeSlot ()Lnet/minecraft/world/inventory/Slot; o
	getPatternSlot ()Lnet/minecraft/world/inventory/Slot; p
	getResultSlot ()Lnet/minecraft/world/inventory/Slot; q
	getSelectablePatterns ()Ljava/util/List; l
	getSelectablePatterns (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; c
	getSelectedBannerPatternIndex ()I m
	isValidPatternIndex (I)Z e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	registerUpdateListener (Ljava/lang/Runnable;)V a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupResultSlot (Lnet/minecraft/core/Holder;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/MenuConstructor bxp
net/minecraft/world/inventory/MenuType bxq
	ANVIL h
	BEACON i
	BLAST_FURNACE j
	BREWING_STAND k
	CARTOGRAPHY_TABLE w
	CRAFTING l
	ENCHANTMENT m
	FURNACE n
	GENERIC_3x3 g
	GENERIC_9x1 a
	GENERIC_9x2 b
	GENERIC_9x3 c
	GENERIC_9x4 d
	GENERIC_9x5 e
	GENERIC_9x6 f
	GRINDSTONE o
	HOPPER p
	LECTERN q
	LOOM r
	MERCHANT s
	SHULKER_BOX t
	SMITHING u
	SMOKER v
	STONECUTTER x
	constructor y
	create (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	register (Ljava/lang/String;Lnet/minecraft/world/inventory/MenuType$MenuSupplier;)Lnet/minecraft/world/inventory/MenuType; a
net/minecraft/world/inventory/MenuType$MenuSupplier bxq$a
net/minecraft/world/inventory/MerchantContainer bxr
	activeOffer d
	futureXp f
	itemStacks c
	merchant b
	selectionHint e
	clearContent ()V a
	getActiveOffer ()Lnet/minecraft/world/item/trading/MerchantOffer; g
	getContainerSize ()I b
	getFutureXp ()I h
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	isEmpty ()Z c
	isPaymentSlot (I)Z d
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setSelectionHint (I)V c
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	updateSellItem ()V f
net/minecraft/world/inventory/MerchantMenu bxs
	BUYSLOT_X t
	INV_SLOT_END o
	INV_SLOT_START n
	PAYMENT1_SLOT k
	PAYMENT2_SLOT l
	RESULT_SLOT m
	ROW_Y u
	SELLSLOT1_X r
	SELLSLOT2_X s
	USE_ROW_SLOT_END q
	USE_ROW_SLOT_START p
	canRestock z
	merchantLevel x
	showProgressBar y
	tradeContainer w
	trader v
	canRestock ()Z o
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	getFutureTraderXp ()I m
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; p
	getTraderLevel ()I n
	getTraderXp ()I l
	moveFromInventoryToPaymentSlot (ILnet/minecraft/world/item/ItemStack;)V c
	playTradeSound ()V r
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setCanRestock (Z)V b
	setMerchantLevel (I)V g
	setOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	setSelectionHint (I)V e
	setShowProgressBar (Z)V a
	setXp (I)V f
	showProgressBar ()Z q
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	tryMoveItems (I)V h
net/minecraft/world/inventory/MerchantResultSlot bxt
	merchant h
	player b
	removeCount c
	slots a
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V b_
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/PlayerEnderChestContainer bxu
	activeChest b
	createTag ()Lnet/minecraft/nbt/ListTag; g
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
	isActiveChest (Lnet/minecraft/world/level/block/entity/EnderChestBlockEntity;)Z b
	setActiveChest (Lnet/minecraft/world/level/block/entity/EnderChestBlockEntity;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V d_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c_
net/minecraft/world/inventory/RecipeBookMenu bxv
	clearCraftingContent ()V l
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getGridHeight ()I o
	getGridWidth ()I n
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; t
	getResultSlotIndex ()I m
	getSize ()I p
	handlePlacement (ZLnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/server/level/ServerPlayer;)V a
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	shouldMoveToInventory (I)Z e
net/minecraft/world/inventory/RecipeBookType bxw
	$VALUES e
	BLAST_FURNACE c
	CRAFTING a
	FURNACE b
	SMOKER d
	$values ()[Lnet/minecraft/world/inventory/RecipeBookType; a
net/minecraft/world/inventory/RecipeHolder bxx
	awardUsedRecipes (Lnet/minecraft/world/entity/player/Player;)V b
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/Recipe; d
	setRecipeUsed (Lnet/minecraft/world/item/crafting/Recipe;)V a
	setRecipeUsed (Lnet/minecraft/world/level/Level;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/Recipe;)Z a
net/minecraft/world/inventory/ResultContainer bxy
	itemStacks b
	recipeUsed c
	clearContent ()V a
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/Recipe; d
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setRecipeUsed (Lnet/minecraft/world/item/crafting/Recipe;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ResultSlot bxz
	craftSlots a
	player b
	removeCount c
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V b_
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onSwapCraft (I)V b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/ShulkerBoxMenu bya
	CONTAINER_SIZE k
	container l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ShulkerBoxSlot byb
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/SimpleContainerData byc
	ints a
	get (I)I a
	getCount ()I a
	set (II)V a
net/minecraft/world/inventory/Slot byd
	container d
	index e
	slot a
	x f
	y g
	allowModification (Lnet/minecraft/world/entity/player/Player;)Z b
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V b_
	getContainerSlot ()I g
	getItem ()Lnet/minecraft/world/item/ItemStack; e
	getMaxStackSize ()I a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I a_
	getNoItemIcon ()Lcom/mojang/datafixers/util/Pair; c
	hasItem ()Z f
	initialize (Lnet/minecraft/world/item/ItemStack;)V e
	isActive ()Z b
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	onSwapCraft (I)V b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
	safeInsert (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; f
	safeInsert (Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; b
	safeTake (IILnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; b
	set (Lnet/minecraft/world/item/ItemStack;)V d
	setChanged ()V d
	tryRemove (IILnet/minecraft/world/entity/player/Player;)Ljava/util/Optional; a
net/minecraft/world/inventory/SmithingMenu bye
	level k
	recipes t
	selectedRecipe s
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	createResult ()V l
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	shouldQuickMoveToAdditionalSlot (Lnet/minecraft/world/item/ItemStack;)Z c
	shrinkStackInSlot (I)V e
net/minecraft/world/inventory/SmokerMenu byf
net/minecraft/world/inventory/StackedContentsCompatible byg
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
net/minecraft/world/inventory/StonecutterMenu byh
	INPUT_SLOT k
	INV_SLOT_END q
	INV_SLOT_START p
	RESULT_SLOT l
	USE_ROW_SLOT_END s
	USE_ROW_SLOT_START r
	access t
	container o
	input x
	inputSlot m
	lastSoundTime y
	level v
	recipes w
	resultContainer A
	resultSlot n
	selectedRecipeIndex u
	slotUpdateListener z
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z b
	getNumRecipes ()I n
	getRecipes ()Ljava/util/List; m
	getSelectedRecipeIndex ()I l
	getType ()Lnet/minecraft/world/inventory/MenuType; a
	hasInputItem ()Z o
	isValidRecipeIndex (I)Z e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	registerUpdateListener (Ljava/lang/Runnable;)V a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupRecipeList (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;)V a
	setupResultSlot ()V p
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/tooltip/BundleTooltip byj
	items a
	weight b
	getItems ()Lnet/minecraft/core/NonNullList; a
	getWeight ()I b
net/minecraft/world/inventory/tooltip/TooltipComponent byk
net/minecraft/world/item/AdventureModeCheck bym
	checksBlockEntity d
	lastCheckedBlock b
	lastResult c
	tagName a
	areSameBlocks (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;Z)Z a
	test (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/world/item/AirItem byn
	block a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/item/ArmorItem byo
	ARMOR_MODIFIER_UUID_PER_SLOT e
	DISPENSE_ITEM_BEHAVIOR a
	defaultModifiers h
	defense f
	knockbackResistance c
	material d
	slot b
	toughness g
	dispenseArmor (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Z a
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDefense ()I e
	getEnchantmentValue ()I c
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; g
	getMaterial ()Lnet/minecraft/world/item/ArmorMaterial; d
	getSlot ()Lnet/minecraft/world/entity/EquipmentSlot; b
	getToughness ()F f
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ArmorMaterial byp
	getDefenseForSlot (Lnet/minecraft/world/entity/EquipmentSlot;)I b
	getDurabilityForSlot (Lnet/minecraft/world/entity/EquipmentSlot;)I a
	getEnchantmentValue ()I a
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; b
	getKnockbackResistance ()F f
	getName ()Ljava/lang/String; d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; c
	getToughness ()F e
net/minecraft/world/item/ArmorMaterials byq
	$VALUES q
	CHAIN b
	DIAMOND e
	GOLD d
	HEALTH_PER_SLOT h
	IRON c
	LEATHER a
	NETHERITE g
	TURTLE f
	durabilityMultiplier j
	enchantmentValue l
	knockbackResistance o
	name i
	repairIngredient p
	slotProtections k
	sound m
	toughness n
	$values ()[Lnet/minecraft/world/item/ArmorMaterials; n
	getDefenseForSlot (Lnet/minecraft/world/entity/EquipmentSlot;)I b
	getDurabilityForSlot (Lnet/minecraft/world/entity/EquipmentSlot;)I a
	getEnchantmentValue ()I a
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; b
	getKnockbackResistance ()F f
	getName ()Ljava/lang/String; d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; c
	getToughness ()F e
net/minecraft/world/item/ArmorStandItem byr
	randomizePose (Lnet/minecraft/world/entity/decoration/ArmorStand;Lnet/minecraft/util/RandomSource;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ArrowItem bys
	createArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
net/minecraft/world/item/AxeItem byt
	STRIPPABLES a
	getStripped (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BannerItem byu
	PATTERN_PREFIX b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	appendHoverTextFromBannerBlockEntityTag (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)V a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
net/minecraft/world/item/BannerPatternItem byv
	bannerPattern a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getBannerPattern ()Lnet/minecraft/tags/TagKey; b
	getDisplayName ()Lnet/minecraft/network/chat/MutableComponent; d
net/minecraft/world/item/BedItem byw
	placeBlock (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/BlockItem byx
	BLOCK_ENTITY_TAG b
	BLOCK_STATE_TAG a
	block c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	canFitInsideContainerItems ()Z S_
	canPlace (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getBlock ()Lnet/minecraft/world/level/block/Block; e
	getBlockEntityData (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/CompoundTag; a
	getDescriptionId ()Ljava/lang/String; a
	getPlaceSound (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/sounds/SoundEvent; a
	getPlacementState (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
	mustSurvive ()Z d
	onDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	place (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/InteractionResult; a
	placeBlock (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	registerBlocks (Ljava/util/Map;Lnet/minecraft/world/item/Item;)V a
	setBlockEntityData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/nbt/CompoundTag;)V a
	updateBlockStateFromTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateCustomBlockEntityTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	updateCustomBlockEntityTag (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Z a
	updatePlacementContext (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/item/context/BlockPlaceContext; b
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Lnet/minecraft/world/level/block/state/BlockState; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BoatItem byy
	ENTITY_PREDICATE a
	hasChest c
	type b
	getBoat (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/HitResult;)Lnet/minecraft/world/entity/vehicle/Boat; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BoneMealItem byz
	GRASS_COUNT_MULTIPLIER c
	GRASS_SPREAD_HEIGHT b
	GRASS_SPREAD_WIDTH a
	addGrowthParticles (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	growCrop (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	growWaterPlant (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BookItem bza
	getEnchantmentValue ()I c
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z c_
net/minecraft/world/item/BottleItem bzb
	turnBottleIntoItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BowItem bzc
	DEFAULT_RANGE b
	MAX_DRAW_DURATION a
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getDefaultProjectileRange ()I d
	getPowerForTime (I)F a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BowlFoodItem bzd
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/BucketItem bze
	content a
	checkExtraContent (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	emptyContents (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/BlockHitResult;)Z a
	getEmptySuccessItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; a
	playEmptySound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BundleItem bzf
	BAR_COLOR d
	BUNDLE_IN_BUNDLE_WEIGHT c
	MAX_WEIGHT a
	TAG_ITEMS b
	add (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)I b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	dropContents (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Z a
	getBarColor (Lnet/minecraft/world/item/ItemStack;)I g
	getBarWidth (Lnet/minecraft/world/item/ItemStack;)I f
	getContentWeight (Lnet/minecraft/world/item/ItemStack;)I o
	getContents (Lnet/minecraft/world/item/ItemStack;)Ljava/util/stream/Stream; q
	getFullnessDisplay (Lnet/minecraft/world/item/ItemStack;)F d
	getMatchingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/nbt/ListTag;)Ljava/util/Optional; a
	getTooltipImage (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; h
	getWeight (Lnet/minecraft/world/item/ItemStack;)I k
	isBarVisible (Lnet/minecraft/world/item/ItemStack;)Z e
	onDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	overrideOtherStackedOnMe (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/SlotAccess;)Z a
	overrideStackedOnOther (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;)Z a
	playDropContentsSound (Lnet/minecraft/world/entity/Entity;)V c
	playInsertSound (Lnet/minecraft/world/entity/Entity;)V b
	playRemoveOneSound (Lnet/minecraft/world/entity/Entity;)V a
	removeOne (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; p
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ChorusFruitItem bzg
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/CompassItem bzh
	LOGGER d
	TAG_LODESTONE_DIMENSION b
	TAG_LODESTONE_POS a
	TAG_LODESTONE_TRACKED c
	addLodestoneTags (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)V a
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
	getLodestoneDimension (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; c
	getLodestonePosition (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/core/GlobalPos; a
	getSpawnPosition (Lnet/minecraft/world/level/Level;)Lnet/minecraft/core/GlobalPos; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	isLodestoneCompass (Lnet/minecraft/world/item/ItemStack;)Z d
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ComplexItem bzi
	getUpdatePacket (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	isComplex ()Z P_
net/minecraft/world/item/CreativeModeTab bzj
	TABS a
	TAB_BREWING k
	TAB_BUILDING_BLOCKS b
	TAB_COMBAT j
	TAB_DECORATIONS c
	TAB_FOOD h
	TAB_HOTBAR m
	TAB_INVENTORY n
	TAB_MATERIALS l
	TAB_MISC f
	TAB_REDSTONE d
	TAB_SEARCH g
	TAB_TOOLS i
	TAB_TRANSPORTATION e
	backgroundSuffix s
	canScroll t
	displayName q
	enchantmentCategories v
	iconItemStack w
	id o
	langId p
	recipeFolderName r
	showTitle u
	canScroll ()Z i
	fillItemList (Lnet/minecraft/core/NonNullList;)V a
	getBackgroundSuffix ()Ljava/lang/String; f
	getColumn ()I k
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getEnchantmentCategories ()[Lnet/minecraft/world/item/enchantment/EnchantmentCategory; n
	getIconItem ()Lnet/minecraft/world/item/ItemStack; d
	getId ()I a
	getRecipeFolderName ()Ljava/lang/String; b
	hasEnchantmentCategory (Lnet/minecraft/world/item/enchantment/EnchantmentCategory;)Z a
	hideScroll ()Lnet/minecraft/world/item/CreativeModeTab; j
	hideTitle ()Lnet/minecraft/world/item/CreativeModeTab; h
	isAlignedRight ()Z m
	isTopRow ()Z l
	makeIcon ()Lnet/minecraft/world/item/ItemStack; e
	setBackgroundSuffix (Ljava/lang/String;)Lnet/minecraft/world/item/CreativeModeTab; a
	setEnchantmentCategories ([Lnet/minecraft/world/item/enchantment/EnchantmentCategory;)Lnet/minecraft/world/item/CreativeModeTab; a
	setRecipeFolderName (Ljava/lang/String;)Lnet/minecraft/world/item/CreativeModeTab; b
	showTitle ()Z g
net/minecraft/world/item/CrossbowItem bzk
	ARROW_POWER r
	DEFAULT_RANGE a
	FIREWORK_POWER s
	MAX_CHARGE_DURATION f
	MID_SOUND_PERCENT j
	START_SOUND_PERCENT i
	TAG_CHARGED b
	TAG_CHARGED_PROJECTILES e
	midLoadSoundPlayed h
	startSoundPlayed g
	addChargedProjectile (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	clearChargedProjectiles (Lnet/minecraft/world/item/ItemStack;)V q
	containsChargedProjectile (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/Item;)Z a
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
	getChargeDuration (Lnet/minecraft/world/item/ItemStack;)I k
	getChargedProjectiles (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; p
	getDefaultProjectileRange ()I d
	getPowerForTime (ILnet/minecraft/world/item/ItemStack;)F a
	getRandomShotPitch (ZLnet/minecraft/util/RandomSource;)F a
	getShootingPower (Lnet/minecraft/world/item/ItemStack;)F o
	getShotPitches (Lnet/minecraft/util/RandomSource;)[F a
	getStartSound (I)Lnet/minecraft/sounds/SoundEvent; a
	getSupportedHeldProjectiles ()Ljava/util/function/Predicate; e
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	isCharged (Lnet/minecraft/world/item/ItemStack;)Z d
	loadProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;ZZ)Z a
	onCrossbowShot (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;I)V a
	performShooting (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;FF)V a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	setCharged (Lnet/minecraft/world/item/ItemStack;Z)V a
	shootProjectile (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;FZFFF)V a
	tryLoadProjectiles (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOnRelease (Lnet/minecraft/world/item/ItemStack;)Z l
net/minecraft/world/item/DebugStickItem bzl
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	cycleState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	getNameHelper (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/String; a
	getRelative (Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object; a
	handleInteraction (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/item/ItemStack;)Z a
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	message (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/DiggerItem bzm
	attackDamageBaseline c
	blocks a
	defaultModifiers d
	speed b
	getAttackDamage ()F d
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/item/DiscFragmentItem bzn
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getDisplayName ()Lnet/minecraft/network/chat/MutableComponent; d
net/minecraft/world/item/DispensibleContainerItem bzo
	checkExtraContent (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	emptyContents (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/BlockHitResult;)Z a
net/minecraft/world/item/DoubleHighBlockItem bzp
	placeBlock (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/DyeColor bzq
	$VALUES y
	BLACK p
	BLUE l
	BROWN m
	BY_FIREWORK_COLOR r
	BY_ID q
	CYAN j
	GRAY h
	GREEN n
	LIGHT_BLUE d
	LIGHT_GRAY i
	LIME f
	MAGENTA c
	ORANGE b
	PINK g
	PURPLE k
	RED o
	WHITE a
	YELLOW e
	color u
	fireworkColor w
	id s
	name t
	textColor x
	textureDiffuseColors v
	$values ()[Lnet/minecraft/world/item/DyeColor; h
	byFireworkColor (I)Lnet/minecraft/world/item/DyeColor; b
	byId (I)Lnet/minecraft/world/item/DyeColor; a
	byName (Ljava/lang/String;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/DyeColor; a
	getFireworkColor ()I f
	getId ()I a
	getMaterialColor ()Lnet/minecraft/world/level/material/MaterialColor; e
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; c
	getTextColor ()I g
	getTextureDiffuseColors ()[F d
net/minecraft/world/item/DyeItem bzr
	ITEM_BY_COLOR a
	dyeColor b
	byColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/DyeItem; a
	getDyeColor ()Lnet/minecraft/world/item/DyeColor; d
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/DyeableArmorItem bzs
net/minecraft/world/item/DyeableHorseArmorItem bzt
net/minecraft/world/item/DyeableLeatherItem bzu
	DEFAULT_LEATHER_COLOR n_
	TAG_COLOR l_
	TAG_DISPLAY m_
	clearColor (Lnet/minecraft/world/item/ItemStack;)V e_
	dyeArmor (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)Lnet/minecraft/world/item/ItemStack; a
	getColor (Lnet/minecraft/world/item/ItemStack;)I d_
	hasCustomColor (Lnet/minecraft/world/item/ItemStack;)Z a
	setColor (Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/world/item/EggItem bzv
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ElytraItem bzw
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; g
	isFlyEnabled (Lnet/minecraft/world/item/ItemStack;)Z d
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/EmptyMapItem bzx
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/EnchantedBookItem bzy
	TAG_STORED_ENCHANTMENTS a
	addEnchantment (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	createForEnchantment (Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)Lnet/minecraft/world/item/ItemStack; a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getEnchantments (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/ListTag; d
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z c_
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
net/minecraft/world/item/EnchantedGoldenAppleItem bzz
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
net/minecraft/world/item/EndCrystalItem caa
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/EnderEyeItem cab
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/EnderpearlItem cac
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ExperienceBottleItem cad
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/FireChargeItem cae
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FireworkRocketItem caf
	ROCKET_PLACEMENT_OFFSET j
	TAG_EXPLOSION b
	TAG_EXPLOSIONS c
	TAG_EXPLOSION_COLORS h
	TAG_EXPLOSION_FADECOLORS i
	TAG_EXPLOSION_FLICKER g
	TAG_EXPLOSION_TRAIL f
	TAG_EXPLOSION_TYPE e
	TAG_FIREWORKS a
	TAG_FLIGHT d
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; Q_
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FireworkRocketItem$Shape caf$a
	$VALUES i
	BURST e
	BY_ID f
	CREEPER d
	LARGE_BALL b
	SMALL_BALL a
	STAR c
	id g
	name h
	$values ()[Lnet/minecraft/world/item/FireworkRocketItem$Shape; c
	byId (I)Lnet/minecraft/world/item/FireworkRocketItem$Shape; a
	getId ()I a
	getName ()Ljava/lang/String; b
net/minecraft/world/item/FireworkStarItem cag
	appendColors (Lnet/minecraft/network/chat/MutableComponent;[I)Lnet/minecraft/network/chat/Component; a
	appendHoverText (Lnet/minecraft/nbt/CompoundTag;Ljava/util/List;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getColorName (I)Lnet/minecraft/network/chat/Component; a
net/minecraft/world/item/FishingRodItem cah
	getEnchantmentValue ()I c
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/FlintAndSteelItem cai
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FoodOnAStickItem caj
	canInteractWith a
	consumeItemDamage b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/GameMasterBlockItem cak
	getPlacementState (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/item/HangingEntityItem cal
	type a
	mayPlace (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Z a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/HoeItem cam
	TILLABLES a
	changeIntoState (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/function/Consumer; b
	changeIntoStateAndDropItem (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/ItemLike;)Ljava/util/function/Consumer; a
	onlyIfAirAbove (Lnet/minecraft/world/item/context/UseOnContext;)Z b
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/HoneyBottleItem can
	DRINK_DURATION a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; R_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; h
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/HoneycombItem cao
	WAXABLES a
	WAX_OFF_BY_BLOCK b
	getWaxed (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/HorseArmorItem cap
	TEX_FOLDER a
	protection b
	texture c
	getProtection ()I j
	getTexture ()Lnet/minecraft/resources/ResourceLocation; i
net/minecraft/world/item/Instrument caq
	CODEC a
	range d
	soundEvent b
	useDuration c
	range ()F c
	soundEvent ()Lnet/minecraft/sounds/SoundEvent; a
	useDuration ()I b
net/minecraft/world/item/InstrumentItem car
	TAG_INSTRUMENT a
	instruments b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	create (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/item/ItemStack; a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getInstrument (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; d
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	play (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/Instrument;)V a
	setRandom (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/tags/TagKey;Lnet/minecraft/util/RandomSource;)V a
	setSoundVariantId (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Holder;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/Instruments cas
	ADMIRE_GOAT_HORN g
	CALL_GOAT_HORN h
	DREAM_GOAT_HORN j
	FEEL_GOAT_HORN f
	GOAT_HORN_DURATION b
	GOAT_HORN_RANGE_BLOCKS a
	PONDER_GOAT_HORN c
	SEEK_GOAT_HORN e
	SING_GOAT_HORN d
	YEARN_GOAT_HORN i
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/item/Instrument; a
	create (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/item/Item cat
	BASE_ATTACK_DAMAGE_UUID l
	BASE_ATTACK_SPEED_UUID m
	BY_BLOCK k
	EAT_DURATION o
	LOGGER a
	MAX_BAR_WIDTH p
	MAX_STACK_SIZE n
	builtInRegistryHolder b
	category q
	craftingRemainingItem g
	descriptionId h
	foodProperties i
	isFireResistant f
	maxDamage e
	maxStackSize d
	rarity c
	allowedIn (Lnet/minecraft/world/item/CreativeModeTab;)Z a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	asItem ()Lnet/minecraft/world/item/Item; l
	builtInRegistryHolder ()Lnet/minecraft/core/Holder$Reference; k
	byBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; a
	byId (I)Lnet/minecraft/world/item/Item; b
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	canBeDepleted ()Z o
	canBeHurtBy (Lnet/minecraft/world/damagesource/DamageSource;)Z a
	canFitInsideContainerItems ()Z S_
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getBarColor (Lnet/minecraft/world/item/ItemStack;)I g
	getBarWidth (Lnet/minecraft/world/item/ItemStack;)I f
	getCraftingRemainingItem ()Lnet/minecraft/world/item/Item; s
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; Q_
	getDescription ()Lnet/minecraft/network/chat/Component; p
	getDescriptionId ()Ljava/lang/String; a
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; R_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; h
	getEnchantmentValue ()I c
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; g
	getFoodProperties ()Lnet/minecraft/world/food/FoodProperties; w
	getId (Lnet/minecraft/world/item/Item;)I a
	getItemCategory ()Lnet/minecraft/world/item/CreativeModeTab; u
	getMaxDamage ()I n
	getMaxStackSize ()I m
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; m
	getOrCreateDescriptionId ()Ljava/lang/String; q
	getPlayerPOVHitResult (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/ClipContext$Fluid;)Lnet/minecraft/world/phys/BlockHitResult; a
	getRarity (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/Rarity; n
	getTooltipImage (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; h
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	hasCraftingRemainingItem ()Z t
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isBarVisible (Lnet/minecraft/world/item/ItemStack;)Z e
	isComplex ()Z P_
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	isEdible ()Z v
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z c_
	isFireResistant ()Z x
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	onCraftedBy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)V b
	onDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;I)V a
	overrideOtherStackedOnMe (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/SlotAccess;)Z a
	overrideStackedOnOther (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;)Z a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	shouldOverrideMultiplayerNbt ()Z r
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
	useOnRelease (Lnet/minecraft/world/item/ItemStack;)Z l
	verifyTagAfterLoad (Lnet/minecraft/nbt/CompoundTag;)V b
net/minecraft/world/item/Item$Properties cat$a
	category d
	craftingRemainingItem c
	foodProperties f
	isFireResistant g
	maxDamage b
	maxStackSize a
	rarity e
	craftRemainder (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item$Properties; a
	defaultDurability (I)Lnet/minecraft/world/item/Item$Properties; b
	durability (I)Lnet/minecraft/world/item/Item$Properties; c
	fireResistant ()Lnet/minecraft/world/item/Item$Properties; a
	food (Lnet/minecraft/world/food/FoodProperties;)Lnet/minecraft/world/item/Item$Properties; a
	rarity (Lnet/minecraft/world/item/Rarity;)Lnet/minecraft/world/item/Item$Properties; a
	stacksTo (I)Lnet/minecraft/world/item/Item$Properties; a
	tab (Lnet/minecraft/world/item/CreativeModeTab;)Lnet/minecraft/world/item/Item$Properties; a
net/minecraft/world/item/ItemCooldowns cau
	cooldowns a
	tickCount b
	addCooldown (Lnet/minecraft/world/item/Item;I)V a
	getCooldownPercent (Lnet/minecraft/world/item/Item;F)F a
	isOnCooldown (Lnet/minecraft/world/item/Item;)Z a
	onCooldownEnded (Lnet/minecraft/world/item/Item;)V c
	onCooldownStarted (Lnet/minecraft/world/item/Item;I)V b
	removeCooldown (Lnet/minecraft/world/item/Item;)V b
	tick ()V a
net/minecraft/world/item/ItemCooldowns$CooldownInstance cau$a
	endTime b
	startTime a
net/minecraft/world/item/ItemFrameItem cav
	mayPlace (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/item/ItemNameBlockItem caw
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/item/ItemStack cax
	ATTRIBUTE_MODIFIER_FORMAT c
	CODEC a
	DONT_HIDE_TOOLTIP p
	EMPTY b
	LOGGER j
	LORE_STYLE q
	TAG_CAN_DESTROY_BLOCK_LIST m
	TAG_CAN_PLACE_ON_BLOCK_LIST n
	TAG_COLOR i
	TAG_DAMAGE h
	TAG_DISPLAY e
	TAG_DISPLAY_NAME f
	TAG_ENCH d
	TAG_HIDE_FLAGS o
	TAG_LORE g
	TAG_REPAIR_COST l
	TAG_UNBREAKABLE k
	adventureBreakCheck x
	adventurePlaceCheck y
	count r
	emptyCacheFlag v
	entityRepresentation w
	item t
	popTime s
	tag u
	addAttributeModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;Lnet/minecraft/world/entity/EquipmentSlot;)V a
	addTagElement (Ljava/lang/String;Lnet/minecraft/nbt/Tag;)V a
	appendEnchantmentNames (Ljava/util/List;Lnet/minecraft/nbt/ListTag;)V a
	copy ()Lnet/minecraft/world/item/ItemStack; o
	enchant (Lnet/minecraft/world/item/enchantment/Enchantment;I)V a
	expandBlockState (Ljava/lang/String;)Ljava/util/Collection; d
	finishUsingItem (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getBarColor ()I n
	getBarWidth ()I m
	getBaseRepairCost ()I H
	getCount ()I K
	getDamageValue ()I j
	getDescriptionId ()Ljava/lang/String; p
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F a
	getDisplayName ()Lnet/minecraft/network/chat/Component; I
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; M
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; N
	getEnchantmentTags ()Lnet/minecraft/nbt/ListTag; w
	getEntityRepresentation ()Lnet/minecraft/world/entity/Entity; G
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; O
	getFrame ()Lnet/minecraft/world/entity/decoration/ItemFrame; F
	getHideFlags ()I Q
	getHoverName ()Lnet/minecraft/network/chat/Component; x
	getItem ()Lnet/minecraft/world/item/Item; c
	getItemHolder ()Lnet/minecraft/core/Holder; d
	getMaxDamage ()I k
	getMaxStackSize ()I f
	getOrCreateTag ()Lnet/minecraft/nbt/CompoundTag; v
	getOrCreateTagElement (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	getPopTime ()I J
	getRarity ()Lnet/minecraft/world/item/Rarity; B
	getTag ()Lnet/minecraft/nbt/CompoundTag; u
	getTagElement (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; b
	getTags ()Ljava/util/stream/Stream; e
	getTooltipImage ()Ljava/util/Optional; a
	getTooltipLines (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/TooltipFlag;)Ljava/util/List; a
	getUseAnimation ()Lnet/minecraft/world/item/UseAnim; r
	getUseDuration ()I q
	grow (I)V f
	hasAdventureModeBreakTagForBlock (Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z b
	hasAdventureModePlaceTagForBlock (Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
	hasCustomHoverName ()Z z
	hasFoil ()Z A
	hasTag ()Z t
	hideTooltipPart (Lnet/minecraft/world/item/ItemStack$TooltipPart;)V a
	hurt (ILnet/minecraft/util/RandomSource;Lnet/minecraft/server/level/ServerPlayer;)Z a
	hurtAndBreak (ILnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Consumer;)V a
	hurtEnemy (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/player/Player;)V a
	interactLivingEntity (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	inventoryTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	is (Ljava/util/function/Predicate;)Z a
	is (Lnet/minecraft/core/Holder;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	is (Lnet/minecraft/world/item/Item;)Z a
	isBarVisible ()Z l
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	isDamageableItem ()Z h
	isDamaged ()Z i
	isEdible ()Z L
	isEmpty ()Z b
	isEnchantable ()Z C
	isEnchanted ()Z D
	isFramed ()Z E
	isSame (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	isSameIgnoreDurability (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z d
	isSameItemSameTags (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z e
	isStackable ()Z g
	matches (Lnet/minecraft/world/item/ItemStack;)Z c
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	mineBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	of (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/item/ItemStack; a
	onCraftedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;I)V a
	onDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V b
	overrideOtherStackedOnMe (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/SlotAccess;)Z a
	overrideStackedOnOther (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;)Z a
	releaseUsing (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	removeTagKey (Ljava/lang/String;)V c
	resetHoverName ()V y
	sameItem (Lnet/minecraft/world/item/ItemStack;)Z a
	sameItemStackIgnoreDurability (Lnet/minecraft/world/item/ItemStack;)Z b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setCount (I)V e
	setDamageValue (I)V b
	setEntityRepresentation (Lnet/minecraft/world/entity/Entity;)V a
	setHoverName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/item/ItemStack; a
	setPopTime (I)V d
	setRepairCost (I)V c
	setTag (Lnet/minecraft/nbt/CompoundTag;)V c
	shouldShowInTooltip (ILnet/minecraft/world/item/ItemStack$TooltipPart;)Z a
	shrink (I)V g
	split (I)Lnet/minecraft/world/item/ItemStack; a
	tagMatches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	updateEmptyCacheFlag ()V P
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
	useOnRelease ()Z s
net/minecraft/world/item/ItemStack$TooltipPart cax$a
	$VALUES i
	ADDITIONAL f
	CAN_DESTROY d
	CAN_PLACE e
	DYE g
	ENCHANTMENTS a
	MODIFIERS b
	UNBREAKABLE c
	mask h
	$values ()[Lnet/minecraft/world/item/ItemStack$TooltipPart; b
	getMask ()I a
net/minecraft/world/item/ItemUtils cay
	createFilledResult (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	createFilledResult (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/world/item/ItemStack; a
	onContainerDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;Ljava/util/stream/Stream;)V a
	startUsingInstantly (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/Items caz
	ACACIA_BOAT mE
	ACACIA_BUTTON lo
	ACACIA_CHEST_BOAT mF
	ACACIA_DOOR lL
	ACACIA_FENCE em
	ACACIA_FENCE_GATE me
	ACACIA_LEAVES bQ
	ACACIA_LOG be
	ACACIA_PLANKS B
	ACACIA_PRESSURE_PLATE lB
	ACACIA_SAPLING K
	ACACIA_SIGN oC
	ACACIA_SLAB dk
	ACACIA_STAIRS fE
	ACACIA_TRAPDOOR lV
	ACACIA_WOOD bH
	ACTIVATOR_RAIL mm
	AIR a
	ALLAY_SPAWN_EGG qC
	ALLIUM cE
	AMETHYST_BLOCK ao
	AMETHYST_CLUSTER vb
	AMETHYST_SHARD mY
	ANCIENT_DEBRIS aj
	ANDESITE g
	ANDESITE_SLAB kB
	ANDESITE_STAIRS kk
	ANDESITE_WALL fV
	ANVIL gh
	APPLE mP
	ARMOR_STAND sB
	ARROW mR
	AXOLOTL_BUCKET oS
	AXOLOTL_SPAWN_EGG qD
	AZALEA cg
	AZALEA_LEAVES bT
	AZURE_BLUET cF
	BAKED_POTATO se
	BAMBOO df
	BARREL tX
	BARRIER gF
	BASALT ex
	BAT_SPAWN_EGG qE
	BEACON fK
	BEDROCK N
	BEEF qi
	BEEHIVE up
	BEETROOT te
	BEETROOT_SEEDS tf
	BEETROOT_SOUP tg
	BEE_NEST uo
	BEE_SPAWN_EGG qF
	BELL uf
	BIG_DRIPLEAF dd
	BIRCH_BOAT mA
	BIRCH_BUTTON lm
	BIRCH_CHEST_BOAT mB
	BIRCH_DOOR lJ
	BIRCH_FENCE ek
	BIRCH_FENCE_GATE mc
	BIRCH_LEAVES bO
	BIRCH_LOG bc
	BIRCH_PLANKS z
	BIRCH_PRESSURE_PLATE lz
	BIRCH_SAPLING I
	BIRCH_SIGN oA
	BIRCH_SLAB di
	BIRCH_STAIRS fC
	BIRCH_TRAPDOOR lT
	BIRCH_WOOD bF
	BLACKSTONE uu
	BLACKSTONE_SLAB uv
	BLACKSTONE_STAIRS uw
	BLACKSTONE_WALL ga
	BLACK_BANNER ta
	BLACK_BED qa
	BLACK_CANDLE uX
	BLACK_CARPET gX
	BLACK_CONCRETE jc
	BLACK_CONCRETE_POWDER js
	BLACK_DYE pG
	BLACK_GLAZED_TERRACOTTA iM
	BLACK_SHULKER_BOX iw
	BLACK_STAINED_GLASS hw
	BLACK_STAINED_GLASS_PANE hM
	BLACK_TERRACOTTA gE
	BLACK_WOOL cA
	BLAST_FURNACE tZ
	BLAZE_POWDER qw
	BLAZE_ROD qo
	BLAZE_SPAWN_EGG qG
	BLUE_BANNER sW
	BLUE_BED pW
	BLUE_CANDLE uT
	BLUE_CARPET gT
	BLUE_CONCRETE iY
	BLUE_CONCRETE_POWDER jo
	BLUE_DYE pC
	BLUE_GLAZED_TERRACOTTA iI
	BLUE_ICE jY
	BLUE_ORCHID cD
	BLUE_SHULKER_BOX is
	BLUE_STAINED_GLASS hs
	BLUE_STAINED_GLASS_PANE hI
	BLUE_TERRACOTTA gA
	BLUE_WOOL cw
	BONE pI
	BONE_BLOCK ie
	BONE_MEAL pH
	BOOK oY
	BOOKSHELF dL
	BOW mQ
	BOWL nM
	BRAIN_CORAL jF
	BRAIN_CORAL_BLOCK jA
	BRAIN_CORAL_FAN jP
	BREAD nT
	BREWING_STAND qy
	BRICK oU
	BRICKS dK
	BRICK_SLAB dv
	BRICK_STAIRS fe
	BRICK_WALL fN
	BROWN_BANNER sX
	BROWN_BED pX
	BROWN_CANDLE uU
	BROWN_CARPET gU
	BROWN_CONCRETE iZ
	BROWN_CONCRETE_POWDER jp
	BROWN_DYE pD
	BROWN_GLAZED_TERRACOTTA iJ
	BROWN_MUSHROOM cP
	BROWN_MUSHROOM_BLOCK eV
	BROWN_SHULKER_BOX it
	BROWN_STAINED_GLASS ht
	BROWN_STAINED_GLASS_PANE hJ
	BROWN_TERRACOTTA gB
	BROWN_WOOL cx
	BUBBLE_CORAL jG
	BUBBLE_CORAL_BLOCK jB
	BUBBLE_CORAL_FAN jQ
	BUCKET oH
	BUDDING_AMETHYST ap
	BUNDLE pd
	CACTUS ef
	CAKE pK
	CALCITE l
	CAMPFIRE uk
	CANDLE uH
	CARROT sc
	CARROT_ON_A_STICK mt
	CARTOGRAPHY_TABLE ua
	CARVED_PUMPKIN es
	CAT_SPAWN_EGG qH
	CAULDRON qz
	CAVE_SPIDER_SPAWN_EGG qI
	CHAIN eZ
	CHAINMAIL_BOOTS ob
	CHAINMAIL_CHESTPLATE nZ
	CHAINMAIL_HELMET nY
	CHAINMAIL_LEGGINGS oa
	CHAIN_COMMAND_BLOCK hZ
	CHARCOAL mT
	CHEST dW
	CHEST_MINECART mp
	CHICKEN qk
	CHICKEN_SPAWN_EGG qJ
	CHIPPED_ANVIL gi
	CHISELED_DEEPSLATE eT
	CHISELED_NETHER_BRICKS fl
	CHISELED_POLISHED_BLACKSTONE uB
	CHISELED_QUARTZ_BLOCK gk
	CHISELED_RED_SANDSTONE hV
	CHISELED_SANDSTONE cb
	CHISELED_STONE_BRICKS eM
	CHORUS_FLOWER dR
	CHORUS_FRUIT tc
	CHORUS_PLANT dQ
	CLAY eg
	CLAY_BALL oV
	CLOCK pf
	COAL mS
	COAL_BLOCK ak
	COAL_ORE R
	COARSE_DIRT q
	COBBLED_DEEPSLATE j
	COBBLED_DEEPSLATE_SLAB kF
	COBBLED_DEEPSLATE_STAIRS ko
	COBBLED_DEEPSLATE_WALL gd
	COBBLESTONE w
	COBBLESTONE_SLAB du
	COBBLESTONE_STAIRS eb
	COBBLESTONE_WALL fL
	COBWEB cd
	COCOA_BEANS pq
	COD pi
	COD_BUCKET oQ
	COD_SPAWN_EGG qK
	COMMAND_BLOCK fJ
	COMMAND_BLOCK_MINECART sI
	COMPARATOR kO
	COMPASS pb
	COMPOSTER tW
	CONDUIT jZ
	COOKED_BEEF qj
	COOKED_CHICKEN ql
	COOKED_COD pm
	COOKED_MUTTON sK
	COOKED_PORKCHOP ou
	COOKED_RABBIT sx
	COOKED_SALMON pn
	COOKIE qb
	COPPER_BLOCK ar
	COPPER_INGOT nc
	COPPER_ORE V
	CORNFLOWER cL
	COW_SPAWN_EGG qL
	CRACKED_DEEPSLATE_BRICKS eQ
	CRACKED_DEEPSLATE_TILES eS
	CRACKED_NETHER_BRICKS fk
	CRACKED_POLISHED_BLACKSTONE_BRICKS uF
	CRACKED_STONE_BRICKS eL
	CRAFTING_TABLE dX
	CREEPER_BANNER_PATTERN tQ
	CREEPER_HEAD sm
	CREEPER_SPAWN_EGG qM
	CRIMSON_BUTTON lr
	CRIMSON_DOOR lO
	CRIMSON_FENCE ep
	CRIMSON_FENCE_GATE mh
	CRIMSON_FUNGUS cR
	CRIMSON_HYPHAE bK
	CRIMSON_NYLIUM u
	CRIMSON_PLANKS E
	CRIMSON_PRESSURE_PLATE lE
	CRIMSON_ROOTS cT
	CRIMSON_SIGN oF
	CRIMSON_SLAB dn
	CRIMSON_STAIRS fH
	CRIMSON_STEM bj
	CRIMSON_TRAPDOOR lY
	CROSSBOW tM
	CRYING_OBSIDIAN ut
	CUT_COPPER ay
	CUT_COPPER_SLAB aG
	CUT_COPPER_STAIRS aC
	CUT_RED_SANDSTONE hW
	CUT_RED_SANDSTONE_SLAB dB
	CUT_SANDSTONE cc
	CUT_STANDSTONE_SLAB ds
	CYAN_BANNER sU
	CYAN_BED pU
	CYAN_CANDLE uR
	CYAN_CARPET gR
	CYAN_CONCRETE iW
	CYAN_CONCRETE_POWDER jm
	CYAN_DYE pA
	CYAN_GLAZED_TERRACOTTA iG
	CYAN_SHULKER_BOX iq
	CYAN_STAINED_GLASS hq
	CYAN_STAINED_GLASS_PANE hG
	CYAN_TERRACOTTA gy
	CYAN_WOOL cu
	DAMAGED_ANVIL gj
	DANDELION cB
	DARK_OAK_BOAT mG
	DARK_OAK_BUTTON lp
	DARK_OAK_CHEST_BOAT mH
	DARK_OAK_DOOR lM
	DARK_OAK_FENCE en
	DARK_OAK_FENCE_GATE mf
	DARK_OAK_LEAVES bR
	DARK_OAK_LOG bf
	DARK_OAK_PLANKS C
	DARK_OAK_PRESSURE_PLATE lC
	DARK_OAK_SAPLING L
	DARK_OAK_SIGN oD
	DARK_OAK_SLAB dl
	DARK_OAK_STAIRS fF
	DARK_OAK_TRAPDOOR lW
	DARK_OAK_WOOD bI
	DARK_PRISMARINE hP
	DARK_PRISMARINE_SLAB dF
	DARK_PRISMARINE_STAIRS hS
	DAYLIGHT_DETECTOR lb
	DEAD_BRAIN_CORAL jJ
	DEAD_BRAIN_CORAL_BLOCK jv
	DEAD_BRAIN_CORAL_FAN jU
	DEAD_BUBBLE_CORAL jK
	DEAD_BUBBLE_CORAL_BLOCK jw
	DEAD_BUBBLE_CORAL_FAN jV
	DEAD_BUSH ci
	DEAD_FIRE_CORAL jL
	DEAD_FIRE_CORAL_BLOCK jx
	DEAD_FIRE_CORAL_FAN jW
	DEAD_HORN_CORAL jM
	DEAD_HORN_CORAL_BLOCK jy
	DEAD_HORN_CORAL_FAN jX
	DEAD_TUBE_CORAL jN
	DEAD_TUBE_CORAL_BLOCK ju
	DEAD_TUBE_CORAL_FAN jT
	DEBUG_STICK tr
	DEEPSLATE i
	DEEPSLATE_BRICKS eP
	DEEPSLATE_BRICK_SLAB kH
	DEEPSLATE_BRICK_STAIRS kq
	DEEPSLATE_BRICK_WALL gf
	DEEPSLATE_COAL_ORE S
	DEEPSLATE_COPPER_ORE W
	DEEPSLATE_DIAMOND_ORE ag
	DEEPSLATE_EMERALD_ORE ac
	DEEPSLATE_GOLD_ORE Y
	DEEPSLATE_IRON_ORE U
	DEEPSLATE_LAPIS_ORE ae
	DEEPSLATE_REDSTONE_ORE aa
	DEEPSLATE_TILES eR
	DEEPSLATE_TILE_SLAB kI
	DEEPSLATE_TILE_STAIRS kr
	DEEPSLATE_TILE_WALL gg
	DETECTOR_RAIL mk
	DIAMOND mU
	DIAMOND_AXE nE
	DIAMOND_BLOCK at
	DIAMOND_BOOTS oj
	DIAMOND_CHESTPLATE oh
	DIAMOND_HELMET og
	DIAMOND_HOE nF
	DIAMOND_HORSE_ARMOR sE
	DIAMOND_LEGGINGS oi
	DIAMOND_ORE af
	DIAMOND_PICKAXE nD
	DIAMOND_SHOVEL nC
	DIAMOND_SWORD nB
	DIORITE e
	DIORITE_SLAB kE
	DIORITE_STAIRS kn
	DIORITE_WALL fZ
	DIRT p
	DIRT_PATH ha
	DISC_FRAGMENT_5 tH
	DISPENSER kV
	DOLPHIN_SPAWN_EGG qN
	DONKEY_SPAWN_EGG qO
	DRAGON_BREATH th
	DRAGON_EGG fw
	DRAGON_HEAD sn
	DRIED_KELP qf
	DRIED_KELP_BLOCK oW
	DRIPSTONE_BLOCK n
	DROPPER kW
	DROWNED_SPAWN_EGG qP
	ECHO_SHARD vh
	EGG pa
	ELDER_GUARDIAN_SPAWN_EGG qQ
	ELYTRA mv
	EMERALD mV
	EMERALD_BLOCK fz
	EMERALD_ORE ab
	ENCHANTED_BOOK ss
	ENCHANTED_GOLDEN_APPLE ox
	ENCHANTING_TABLE fs
	ENDERMAN_SPAWN_EGG qR
	ENDERMITE_SPAWN_EGG qS
	ENDER_CHEST fy
	ENDER_EYE qA
	ENDER_PEARL qn
	END_CRYSTAL tb
	END_PORTAL_FRAME ft
	END_ROD dP
	END_STONE fu
	END_STONE_BRICKS fv
	END_STONE_BRICK_SLAB kx
	END_STONE_BRICK_STAIRS kf
	END_STONE_BRICK_WALL fY
	EVOKER_SPAWN_EGG qT
	EXPERIENCE_BOTTLE rV
	EXPOSED_COPPER av
	EXPOSED_CUT_COPPER az
	EXPOSED_CUT_COPPER_SLAB aH
	EXPOSED_CUT_COPPER_STAIRS aD
	FARMLAND dY
	FEATHER nP
	FERMENTED_SPIDER_EYE qv
	FERN cf
	FILLED_MAP qc
	FIREWORK_ROCKET sq
	FIREWORK_STAR sr
	FIRE_CHARGE rW
	FIRE_CORAL jH
	FIRE_CORAL_BLOCK jC
	FIRE_CORAL_FAN jR
	FISHING_ROD pe
	FLETCHING_TABLE ub
	FLINT os
	FLINT_AND_STEEL mO
	FLOWERING_AZALEA ch
	FLOWERING_AZALEA_LEAVES bU
	FLOWER_BANNER_PATTERN tP
	FLOWER_POT sb
	FOX_SPAWN_EGG qU
	FROGSPAWN vg
	FROG_SPAWN_EGG qV
	FURNACE dZ
	FURNACE_MINECART mq
	GHAST_SPAWN_EGG qW
	GHAST_TEAR qp
	GILDED_BLACKSTONE ux
	GLASS bX
	GLASS_BOTTLE qt
	GLASS_PANE fa
	GLISTERING_MELON_SLICE qB
	GLOBE_BANNER_PATTERN tT
	GLOWSTONE eB
	GLOWSTONE_DUST ph
	GLOW_BERRIES uj
	GLOW_INK_SAC pp
	GLOW_ITEM_FRAME sa
	GLOW_LICHEN fd
	GLOW_SQUID_SPAWN_EGG qX
	GOAT_HORN tV
	GOAT_SPAWN_EGG qY
	GOLDEN_APPLE ow
	GOLDEN_AXE nu
	GOLDEN_BOOTS on
	GOLDEN_CARROT sh
	GOLDEN_CHESTPLATE ol
	GOLDEN_HELMET ok
	GOLDEN_HOE nv
	GOLDEN_HORSE_ARMOR sD
	GOLDEN_LEGGINGS om
	GOLDEN_PICKAXE nt
	GOLDEN_SHOVEL ns
	GOLDEN_SWORD nr
	GOLD_BLOCK as
	GOLD_INGOT ne
	GOLD_NUGGET qq
	GOLD_ORE X
	GRANITE c
	GRANITE_SLAB kA
	GRANITE_STAIRS kj
	GRANITE_WALL fR
	GRASS ce
	GRASS_BLOCK o
	GRAVEL Q
	GRAY_BANNER sS
	GRAY_BED pS
	GRAY_CANDLE uP
	GRAY_CARPET gP
	GRAY_CONCRETE iU
	GRAY_CONCRETE_POWDER jk
	GRAY_DYE py
	GRAY_GLAZED_TERRACOTTA iE
	GRAY_SHULKER_BOX io
	GRAY_STAINED_GLASS ho
	GRAY_STAINED_GLASS_PANE hE
	GRAY_TERRACOTTA gw
	GRAY_WOOL cs
	GREEN_BANNER sY
	GREEN_BED pY
	GREEN_CANDLE uV
	GREEN_CARPET gV
	GREEN_CONCRETE ja
	GREEN_CONCRETE_POWDER jq
	GREEN_DYE pE
	GREEN_GLAZED_TERRACOTTA iK
	GREEN_SHULKER_BOX iu
	GREEN_STAINED_GLASS hu
	GREEN_STAINED_GLASS_PANE hK
	GREEN_TERRACOTTA gC
	GREEN_WOOL cy
	GRINDSTONE uc
	GUARDIAN_SPAWN_EGG qZ
	GUNPOWDER nQ
	HANGING_ROOTS dc
	HAY_BLOCK gH
	HEART_OF_THE_SEA tL
	HEAVY_WEIGHTED_PRESSURE_PLATE lw
	HOGLIN_SPAWN_EGG ra
	HONEYCOMB un
	HONEYCOMB_BLOCK ur
	HONEY_BLOCK kS
	HONEY_BOTTLE uq
	HOPPER kU
	HOPPER_MINECART ms
	HORN_CORAL jI
	HORN_CORAL_BLOCK jD
	HORN_CORAL_FAN jS
	HORSE_SPAWN_EGG rb
	HUSK_SPAWN_EGG rc
	ICE ed
	INFESTED_CHISELED_STONE_BRICKS eH
	INFESTED_COBBLESTONE eD
	INFESTED_CRACKED_STONE_BRICKS eG
	INFESTED_DEEPSLATE eI
	INFESTED_MOSSY_STONE_BRICKS eF
	INFESTED_STONE eC
	INFESTED_STONE_BRICKS eE
	INK_SAC po
	IRON_AXE nz
	IRON_BARS eY
	IRON_BLOCK aq
	IRON_BOOTS of
	IRON_CHESTPLATE od
	IRON_DOOR lG
	IRON_HELMET oc
	IRON_HOE nA
	IRON_HORSE_ARMOR sC
	IRON_INGOT na
	IRON_LEGGINGS oe
	IRON_NUGGET tp
	IRON_ORE T
	IRON_PICKAXE ny
	IRON_SHOVEL nx
	IRON_SWORD nw
	IRON_TRAPDOOR lQ
	ITEM_FRAME rZ
	JACK_O_LANTERN et
	JIGSAW mL
	JUKEBOX eh
	JUNGLE_BOAT mC
	JUNGLE_BUTTON ln
	JUNGLE_CHEST_BOAT mD
	JUNGLE_DOOR lK
	JUNGLE_FENCE el
	JUNGLE_FENCE_GATE md
	JUNGLE_LEAVES bP
	JUNGLE_LOG bd
	JUNGLE_PLANKS A
	JUNGLE_PRESSURE_PLATE lA
	JUNGLE_SAPLING J
	JUNGLE_SIGN oB
	JUNGLE_SLAB dj
	JUNGLE_STAIRS fD
	JUNGLE_TRAPDOOR lU
	JUNGLE_WOOD bG
	KELP cZ
	KNOWLEDGE_BOOK tq
	LADDER ea
	LANTERN ug
	LAPIS_BLOCK bZ
	LAPIS_LAZULI mW
	LAPIS_ORE ad
	LARGE_AMETHYST_BUD va
	LARGE_FERN hg
	LAVA_BUCKET oJ
	LEAD sG
	LEATHER oM
	LEATHER_BOOTS nX
	LEATHER_CHESTPLATE nV
	LEATHER_HELMET nU
	LEATHER_HORSE_ARMOR sF
	LEATHER_LEGGINGS nW
	LECTERN kX
	LEVER kZ
	LIGHT gG
	LIGHTNING_ROD la
	LIGHT_BLUE_BANNER sO
	LIGHT_BLUE_BED pO
	LIGHT_BLUE_CANDLE uL
	LIGHT_BLUE_CARPET gL
	LIGHT_BLUE_CONCRETE iQ
	LIGHT_BLUE_CONCRETE_POWDER jg
	LIGHT_BLUE_DYE pu
	LIGHT_BLUE_GLAZED_TERRACOTTA iA
	LIGHT_BLUE_SHULKER_BOX ik
	LIGHT_BLUE_STAINED_GLASS hk
	LIGHT_BLUE_STAINED_GLASS_PANE hA
	LIGHT_BLUE_TERRACOTTA gs
	LIGHT_BLUE_WOOL co
	LIGHT_GRAY_BANNER sT
	LIGHT_GRAY_BED pT
	LIGHT_GRAY_CANDLE uQ
	LIGHT_GRAY_CARPET gQ
	LIGHT_GRAY_CONCRETE iV
	LIGHT_GRAY_CONCRETE_POWDER jl
	LIGHT_GRAY_DYE pz
	LIGHT_GRAY_GLAZED_TERRACOTTA iF
	LIGHT_GRAY_SHULKER_BOX ip
	LIGHT_GRAY_STAINED_GLASS hp
	LIGHT_GRAY_STAINED_GLASS_PANE hF
	LIGHT_GRAY_TERRACOTTA gx
	LIGHT_GRAY_WOOL ct
	LIGHT_WEIGHTED_PRESSURE_PLATE lv
	LILAC hc
	LILY_OF_THE_VALLEY cM
	LILY_PAD fi
	LIME_BANNER sQ
	LIME_BED pQ
	LIME_CANDLE uN
	LIME_CARPET gN
	LIME_CONCRETE iS
	LIME_CONCRETE_POWDER ji
	LIME_DYE pw
	LIME_GLAZED_TERRACOTTA iC
	LIME_SHULKER_BOX im
	LIME_STAINED_GLASS hm
	LIME_STAINED_GLASS_PANE hC
	LIME_TERRACOTTA gu
	LIME_WOOL cq
	LINGERING_POTION tl
	LLAMA_SPAWN_EGG rd
	LODESTONE us
	LOOM tO
	MAGENTA_BANNER sN
	MAGENTA_BED pN
	MAGENTA_CANDLE uK
	MAGENTA_CARPET gK
	MAGENTA_CONCRETE iP
	MAGENTA_CONCRETE_POWDER jf
	MAGENTA_DYE pt
	MAGENTA_GLAZED_TERRACOTTA iz
	MAGENTA_SHULKER_BOX ij
	MAGENTA_STAINED_GLASS hj
	MAGENTA_STAINED_GLASS_PANE hz
	MAGENTA_TERRACOTTA gr
	MAGENTA_WOOL cn
	MAGMA_BLOCK ia
	MAGMA_CREAM qx
	MAGMA_CUBE_SPAWN_EGG re
	MANGROVE_BOAT mI
	MANGROVE_BUTTON lq
	MANGROVE_CHEST_BOAT mJ
	MANGROVE_DOOR lN
	MANGROVE_FENCE eo
	MANGROVE_FENCE_GATE mg
	MANGROVE_LEAVES bS
	MANGROVE_LOG bg
	MANGROVE_PLANKS D
	MANGROVE_PRESSURE_PLATE lD
	MANGROVE_PROPAGULE M
	MANGROVE_ROOTS bh
	MANGROVE_SIGN oE
	MANGROVE_SLAB dm
	MANGROVE_STAIRS fG
	MANGROVE_TRAPDOOR lX
	MANGROVE_WOOD bJ
	MAP sg
	MEDIUM_AMETHYST_BUD uZ
	MELON fb
	MELON_SEEDS qh
	MELON_SLICE qe
	MILK_BUCKET oN
	MINECART mo
	MOJANG_BANNER_PATTERN tS
	MOOSHROOM_SPAWN_EGG rf
	MOSSY_COBBLESTONE dM
	MOSSY_COBBLESTONE_SLAB kw
	MOSSY_COBBLESTONE_STAIRS ke
	MOSSY_COBBLESTONE_WALL fM
	MOSSY_STONE_BRICKS eK
	MOSSY_STONE_BRICK_SLAB ku
	MOSSY_STONE_BRICK_STAIRS kc
	MOSSY_STONE_BRICK_WALL fQ
	MOSS_BLOCK db
	MOSS_CARPET da
	MUD t
	MUDDY_MANGROVE_ROOTS bi
	MUD_BRICKS eO
	MUD_BRICK_SLAB dx
	MUD_BRICK_STAIRS fg
	MUD_BRICK_WALL fT
	MULE_SPAWN_EGG rg
	MUSHROOM_STEM eX
	MUSHROOM_STEW nN
	MUSIC_DISC_11 tC
	MUSIC_DISC_13 ts
	MUSIC_DISC_5 tF
	MUSIC_DISC_BLOCKS tu
	MUSIC_DISC_CAT tt
	MUSIC_DISC_CHIRP tv
	MUSIC_DISC_FAR tw
	MUSIC_DISC_MALL tx
	MUSIC_DISC_MELLOHI ty
	MUSIC_DISC_OTHERSIDE tE
	MUSIC_DISC_PIGSTEP tG
	MUSIC_DISC_STAL tz
	MUSIC_DISC_STRAD tA
	MUSIC_DISC_WAIT tD
	MUSIC_DISC_WARD tB
	MUTTON sJ
	MYCELIUM fh
	NAME_TAG sH
	NAUTILUS_SHELL tK
	NETHERITE_AXE nJ
	NETHERITE_BLOCK au
	NETHERITE_BOOTS or
	NETHERITE_CHESTPLATE op
	NETHERITE_HELMET oo
	NETHERITE_HOE nK
	NETHERITE_INGOT nf
	NETHERITE_LEGGINGS oq
	NETHERITE_PICKAXE nI
	NETHERITE_SCRAP ng
	NETHERITE_SHOVEL nH
	NETHERITE_SWORD nG
	NETHERRACK eu
	NETHER_BRICK st
	NETHER_BRICKS fj
	NETHER_BRICK_FENCE fm
	NETHER_BRICK_SLAB dy
	NETHER_BRICK_STAIRS fn
	NETHER_BRICK_WALL fU
	NETHER_GOLD_ORE ah
	NETHER_QUARTZ_ORE ai
	NETHER_SPROUTS cV
	NETHER_STAR so
	NETHER_WART qr
	NETHER_WART_BLOCK ib
	NOTE_BLOCK lh
	OAK_BOAT mw
	OAK_BUTTON lk
	OAK_CHEST_BOAT mx
	OAK_DOOR lH
	OAK_FENCE ei
	OAK_FENCE_GATE ma
	OAK_LEAVES bM
	OAK_LOG ba
	OAK_PLANKS x
	OAK_PRESSURE_PLATE lx
	OAK_SAPLING G
	OAK_SIGN oy
	OAK_SLAB dg
	OAK_STAIRS fA
	OAK_TRAPDOOR lR
	OAK_WOOD bD
	OBSERVER kT
	OBSIDIAN dN
	OCELOT_SPAWN_EGG rh
	OCHRE_FROGLIGHT vd
	ORANGE_BANNER sM
	ORANGE_BED pM
	ORANGE_CANDLE uJ
	ORANGE_CARPET gJ
	ORANGE_CONCRETE iO
	ORANGE_CONCRETE_POWDER je
	ORANGE_DYE ps
	ORANGE_GLAZED_TERRACOTTA iy
	ORANGE_SHULKER_BOX ii
	ORANGE_STAINED_GLASS hi
	ORANGE_STAINED_GLASS_PANE hy
	ORANGE_TERRACOTTA gq
	ORANGE_TULIP cH
	ORANGE_WOOL cm
	OXEYE_DAISY cK
	OXIDIZED_COPPER ax
	OXIDIZED_CUT_COPPER aB
	OXIDIZED_CUT_COPPER_SLAB aJ
	OXIDIZED_CUT_COPPER_STAIRS aF
	PACKED_ICE gZ
	PACKED_MUD eN
	PAINTING ov
	PANDA_SPAWN_EGG ri
	PAPER oX
	PARROT_SPAWN_EGG rj
	PEARLESCENT_FROGLIGHT vf
	PEONY he
	PETRIFIED_OAK_SLAB dt
	PHANTOM_MEMBRANE tJ
	PHANTOM_SPAWN_EGG rk
	PIGLIN_BANNER_PATTERN tU
	PIGLIN_BRUTE_SPAWN_EGG rn
	PIGLIN_SPAWN_EGG rm
	PIG_SPAWN_EGG rl
	PILLAGER_SPAWN_EGG ro
	PINK_BANNER sR
	PINK_BED pR
	PINK_CANDLE uO
	PINK_CARPET gO
	PINK_CONCRETE iT
	PINK_CONCRETE_POWDER jj
	PINK_DYE px
	PINK_GLAZED_TERRACOTTA iD
	PINK_SHULKER_BOX in
	PINK_STAINED_GLASS hn
	PINK_STAINED_GLASS_PANE hD
	PINK_TERRACOTTA gv
	PINK_TULIP cJ
	PINK_WOOL cr
	PISTON kP
	PLAYER_HEAD sk
	PODZOL r
	POINTED_DRIPSTONE vc
	POISONOUS_POTATO sf
	POLAR_BEAR_SPAWN_EGG rp
	POLISHED_ANDESITE h
	POLISHED_ANDESITE_SLAB kD
	POLISHED_ANDESITE_STAIRS km
	POLISHED_BASALT ey
	POLISHED_BLACKSTONE uy
	POLISHED_BLACKSTONE_BRICKS uC
	POLISHED_BLACKSTONE_BRICK_SLAB uD
	POLISHED_BLACKSTONE_BRICK_STAIRS uE
	POLISHED_BLACKSTONE_BRICK_WALL gc
	POLISHED_BLACKSTONE_BUTTON lj
	POLISHED_BLACKSTONE_PRESSURE_PLATE lu
	POLISHED_BLACKSTONE_SLAB uz
	POLISHED_BLACKSTONE_STAIRS uA
	POLISHED_BLACKSTONE_WALL gb
	POLISHED_DEEPSLATE k
	POLISHED_DEEPSLATE_SLAB kG
	POLISHED_DEEPSLATE_STAIRS kp
	POLISHED_DEEPSLATE_WALL ge
	POLISHED_DIORITE f
	POLISHED_DIORITE_SLAB kv
	POLISHED_DIORITE_STAIRS kd
	POLISHED_GRANITE d
	POLISHED_GRANITE_SLAB ks
	POLISHED_GRANITE_STAIRS ka
	POPPED_CHORUS_FRUIT td
	POPPY cC
	PORKCHOP ot
	POTATO sd
	POTION qs
	POWDER_SNOW_BUCKET oK
	POWERED_RAIL mj
	PRISMARINE hN
	PRISMARINE_BRICKS hO
	PRISMARINE_BRICK_SLAB dE
	PRISMARINE_BRICK_STAIRS hR
	PRISMARINE_CRYSTALS sv
	PRISMARINE_SHARD su
	PRISMARINE_SLAB dD
	PRISMARINE_STAIRS hQ
	PRISMARINE_WALL fO
	PUFFERFISH pl
	PUFFERFISH_BUCKET oO
	PUFFERFISH_SPAWN_EGG rq
	PUMPKIN er
	PUMPKIN_PIE sp
	PUMPKIN_SEEDS qg
	PURPLE_BANNER sV
	PURPLE_BED pV
	PURPLE_CANDLE uS
	PURPLE_CARPET gS
	PURPLE_CONCRETE iX
	PURPLE_CONCRETE_POWDER jn
	PURPLE_DYE pB
	PURPLE_GLAZED_TERRACOTTA iH
	PURPLE_SHULKER_BOX ir
	PURPLE_STAINED_GLASS hr
	PURPLE_STAINED_GLASS_PANE hH
	PURPLE_TERRACOTTA gz
	PURPLE_WOOL cv
	PURPUR_BLOCK dS
	PURPUR_PILLAR dT
	PURPUR_SLAB dC
	PURPUR_STAIRS dU
	QUARTZ mX
	QUARTZ_BLOCK gl
	QUARTZ_BRICKS gm
	QUARTZ_PILLAR gn
	QUARTZ_SLAB dz
	QUARTZ_STAIRS go
	RABBIT sw
	RABBIT_FOOT sz
	RABBIT_HIDE sA
	RABBIT_SPAWN_EGG rr
	RABBIT_STEW sy
	RAIL ml
	RAVAGER_SPAWN_EGG rs
	RAW_COPPER nb
	RAW_COPPER_BLOCK am
	RAW_GOLD nd
	RAW_GOLD_BLOCK an
	RAW_IRON mZ
	RAW_IRON_BLOCK al
	RECOVERY_COMPASS pc
	REDSTONE kK
	REDSTONE_BLOCK kM
	REDSTONE_LAMP lg
	REDSTONE_ORE Z
	REDSTONE_TORCH kL
	RED_BANNER sZ
	RED_BED pZ
	RED_CANDLE uW
	RED_CARPET gW
	RED_CONCRETE jb
	RED_CONCRETE_POWDER jr
	RED_DYE pF
	RED_GLAZED_TERRACOTTA iL
	RED_MUSHROOM cQ
	RED_MUSHROOM_BLOCK eW
	RED_NETHER_BRICKS id
	RED_NETHER_BRICK_SLAB kC
	RED_NETHER_BRICK_STAIRS kl
	RED_NETHER_BRICK_WALL fW
	RED_SAND P
	RED_SANDSTONE hU
	RED_SANDSTONE_SLAB dA
	RED_SANDSTONE_STAIRS hX
	RED_SANDSTONE_WALL fP
	RED_SHULKER_BOX iv
	RED_STAINED_GLASS hv
	RED_STAINED_GLASS_PANE hL
	RED_TERRACOTTA gD
	RED_TULIP cG
	RED_WOOL cz
	REINFORCED_DEEPSLATE eU
	REPEATER kN
	REPEATING_COMMAND_BLOCK hY
	RESPAWN_ANCHOR uG
	ROOTED_DIRT s
	ROSE_BUSH hd
	ROTTEN_FLESH qm
	SADDLE mn
	SALMON pj
	SALMON_BUCKET oP
	SALMON_SPAWN_EGG rt
	SAND O
	SANDSTONE ca
	SANDSTONE_SLAB dr
	SANDSTONE_STAIRS fx
	SANDSTONE_WALL fX
	SCAFFOLDING kJ
	SCULK fo
	SCULK_CATALYST fq
	SCULK_SENSOR lc
	SCULK_SHRIEKER fr
	SCULK_VEIN fp
	SCUTE mN
	SEAGRASS cj
	SEA_LANTERN hT
	SEA_PICKLE ck
	SHEARS qd
	SHEEP_SPAWN_EGG ru
	SHIELD tm
	SHROOMLIGHT um
	SHULKER_BOX ig
	SHULKER_SHELL to
	SHULKER_SPAWN_EGG rv
	SILVERFISH_SPAWN_EGG rw
	SKELETON_HORSE_SPAWN_EGG ry
	SKELETON_SKULL si
	SKELETON_SPAWN_EGG rx
	SKULL_BANNER_PATTERN tR
	SLIME_BALL oZ
	SLIME_BLOCK kR
	SLIME_SPAWN_EGG rz
	SMALL_AMETHYST_BUD uY
	SMALL_DRIPLEAF de
	SMITHING_TABLE ud
	SMOKER tY
	SMOOTH_BASALT ez
	SMOOTH_QUARTZ dG
	SMOOTH_QUARTZ_SLAB kz
	SMOOTH_QUARTZ_STAIRS ki
	SMOOTH_RED_SANDSTONE dH
	SMOOTH_RED_SANDSTONE_SLAB kt
	SMOOTH_RED_SANDSTONE_STAIRS kb
	SMOOTH_SANDSTONE dI
	SMOOTH_SANDSTONE_SLAB ky
	SMOOTH_SANDSTONE_STAIRS kh
	SMOOTH_STONE dJ
	SMOOTH_STONE_SLAB dq
	SNOW ec
	SNOWBALL oL
	SNOW_BLOCK ee
	SOUL_CAMPFIRE ul
	SOUL_LANTERN uh
	SOUL_SAND ev
	SOUL_SOIL ew
	SOUL_TORCH eA
	SPAWNER dV
	SPECTRAL_ARROW tj
	SPIDER_EYE qu
	SPIDER_SPAWN_EGG rA
	SPLASH_POTION ti
	SPONGE bV
	SPORE_BLOSSOM cO
	SPRUCE_BOAT my
	SPRUCE_BUTTON ll
	SPRUCE_CHEST_BOAT mz
	SPRUCE_DOOR lI
	SPRUCE_FENCE ej
	SPRUCE_FENCE_GATE mb
	SPRUCE_LEAVES bN
	SPRUCE_LOG bb
	SPRUCE_PLANKS y
	SPRUCE_PRESSURE_PLATE ly
	SPRUCE_SAPLING H
	SPRUCE_SIGN oz
	SPRUCE_SLAB dh
	SPRUCE_STAIRS fB
	SPRUCE_TRAPDOOR lS
	SPRUCE_WOOD bE
	SPYGLASS pg
	SQUID_SPAWN_EGG rB
	STICK nL
	STICKY_PISTON kQ
	STONE b
	STONECUTTER ue
	STONE_AXE np
	STONE_BRICKS eJ
	STONE_BRICK_SLAB dw
	STONE_BRICK_STAIRS ff
	STONE_BRICK_WALL fS
	STONE_BUTTON li
	STONE_HOE nq
	STONE_PICKAXE no
	STONE_PRESSURE_PLATE lt
	STONE_SHOVEL nn
	STONE_SLAB dp
	STONE_STAIRS kg
	STONE_SWORD nm
	STRAY_SPAWN_EGG rC
	STRIDER_SPAWN_EGG rD
	STRING nO
	STRIPPED_ACACIA_LOG bp
	STRIPPED_ACACIA_WOOD by
	STRIPPED_BIRCH_LOG bn
	STRIPPED_BIRCH_WOOD bw
	STRIPPED_CRIMSON_HYPHAE bB
	STRIPPED_CRIMSON_STEM bs
	STRIPPED_DARK_OAK_LOG bq
	STRIPPED_DARK_OAK_WOOD bz
	STRIPPED_JUNGLE_LOG bo
	STRIPPED_JUNGLE_WOOD bx
	STRIPPED_MANGROVE_LOG br
	STRIPPED_MANGROVE_WOOD bA
	STRIPPED_OAK_LOG bl
	STRIPPED_OAK_WOOD bu
	STRIPPED_SPRUCE_LOG bm
	STRIPPED_SPRUCE_WOOD bv
	STRIPPED_WARPED_HYPHAE bC
	STRIPPED_WARPED_STEM bt
	STRUCTURE_BLOCK mK
	STRUCTURE_VOID if
	SUGAR pJ
	SUGAR_CANE cY
	SUNFLOWER hb
	SUSPICIOUS_STEW tN
	SWEET_BERRIES ui
	TADPOLE_BUCKET oT
	TADPOLE_SPAWN_EGG rE
	TALL_GRASS hf
	TARGET kY
	TERRACOTTA gY
	TINTED_GLASS bY
	TIPPED_ARROW tk
	TNT lf
	TNT_MINECART mr
	TORCH dO
	TOTEM_OF_UNDYING tn
	TRADER_LLAMA_SPAWN_EGG rF
	TRAPPED_CHEST le
	TRIDENT tI
	TRIPWIRE_HOOK ld
	TROPICAL_FISH pk
	TROPICAL_FISH_BUCKET oR
	TROPICAL_FISH_SPAWN_EGG rG
	TUBE_CORAL jE
	TUBE_CORAL_BLOCK jz
	TUBE_CORAL_FAN jO
	TUFF m
	TURTLE_EGG jt
	TURTLE_HELMET mM
	TURTLE_SPAWN_EGG rH
	TWISTING_VINES cX
	VERDANT_FROGLIGHT ve
	VEX_SPAWN_EGG rI
	VILLAGER_SPAWN_EGG rJ
	VINDICATOR_SPAWN_EGG rK
	VINE fc
	WANDERING_TRADER_SPAWN_EGG rL
	WARDEN_SPAWN_EGG rM
	WARPED_BUTTON ls
	WARPED_DOOR lP
	WARPED_FENCE eq
	WARPED_FENCE_GATE mi
	WARPED_FUNGUS cS
	WARPED_FUNGUS_ON_A_STICK mu
	WARPED_HYPHAE bL
	WARPED_NYLIUM v
	WARPED_PLANKS F
	WARPED_PRESSURE_PLATE lF
	WARPED_ROOTS cU
	WARPED_SIGN oG
	WARPED_SLAB do
	WARPED_STAIRS fI
	WARPED_STEM bk
	WARPED_TRAPDOOR lZ
	WARPED_WART_BLOCK ic
	WATER_BUCKET oI
	WAXED_COPPER_BLOCK aK
	WAXED_CUT_COPPER aO
	WAXED_CUT_COPPER_SLAB aW
	WAXED_CUT_COPPER_STAIRS aS
	WAXED_EXPOSED_COPPER aL
	WAXED_EXPOSED_CUT_COPPER aP
	WAXED_EXPOSED_CUT_COPPER_SLAB aX
	WAXED_EXPOSED_CUT_COPPER_STAIRS aT
	WAXED_OXIDIZED_COPPER aN
	WAXED_OXIDIZED_CUT_COPPER aR
	WAXED_OXIDIZED_CUT_COPPER_SLAB aZ
	WAXED_OXIDIZED_CUT_COPPER_STAIRS aV
	WAXED_WEATHERED_COPPER aM
	WAXED_WEATHERED_CUT_COPPER aQ
	WAXED_WEATHERED_CUT_COPPER_SLAB aY
	WAXED_WEATHERED_CUT_COPPER_STAIRS aU
	WEATHERED_COPPER aw
	WEATHERED_CUT_COPPER aA
	WEATHERED_CUT_COPPER_SLAB aI
	WEATHERED_CUT_COPPER_STAIRS aE
	WEEPING_VINES cW
	WET_SPONGE bW
	WHEAT nS
	WHEAT_SEEDS nR
	WHITE_BANNER sL
	WHITE_BED pL
	WHITE_CANDLE uI
	WHITE_CARPET gI
	WHITE_CONCRETE iN
	WHITE_CONCRETE_POWDER jd
	WHITE_DYE pr
	WHITE_GLAZED_TERRACOTTA ix
	WHITE_SHULKER_BOX ih
	WHITE_STAINED_GLASS hh
	WHITE_STAINED_GLASS_PANE hx
	WHITE_TERRACOTTA gp
	WHITE_TULIP cI
	WHITE_WOOL cl
	WITCH_SPAWN_EGG rN
	WITHER_ROSE cN
	WITHER_SKELETON_SKULL sj
	WITHER_SKELETON_SPAWN_EGG rO
	WOLF_SPAWN_EGG rP
	WOODEN_AXE nk
	WOODEN_HOE nl
	WOODEN_PICKAXE nj
	WOODEN_SHOVEL ni
	WOODEN_SWORD nh
	WRITABLE_BOOK rX
	WRITTEN_BOOK rY
	YELLOW_BANNER sP
	YELLOW_BED pP
	YELLOW_CANDLE uM
	YELLOW_CARPET gM
	YELLOW_CONCRETE iR
	YELLOW_CONCRETE_POWDER jh
	YELLOW_DYE pv
	YELLOW_GLAZED_TERRACOTTA iB
	YELLOW_SHULKER_BOX il
	YELLOW_STAINED_GLASS hl
	YELLOW_STAINED_GLASS_PANE hB
	YELLOW_TERRACOTTA gt
	YELLOW_WOOL cp
	ZOGLIN_SPAWN_EGG rQ
	ZOMBIE_HEAD sl
	ZOMBIE_HORSE_SPAWN_EGG rS
	ZOMBIE_SPAWN_EGG rR
	ZOMBIE_VILLAGER_SPAWN_EGG rT
	ZOMBIFIED_PIGLIN_SPAWN_EGG rU
	ifPart2 (Ljava/lang/Object;)Ljava/util/Optional; a
	registerBlock (Lnet/minecraft/world/item/BlockItem;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;Ljava/util/Optional;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/CreativeModeTab;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/CreativeModeTab;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	registerItem (Ljava/lang/String;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	registerItem (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
net/minecraft/world/item/KnowledgeBookItem cba
	LOGGER b
	RECIPE_TAG a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/LeadItem cbb
	bindPlayerMobs (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/InteractionResult; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/LingeringPotionItem cbc
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/MapItem cbd
	DEFAULT_MAP_COLOR c
	IMAGE_HEIGHT b
	IMAGE_WIDTH a
	TAG_MAP d
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	create (Lnet/minecraft/world/level/Level;IIBZZ)Lnet/minecraft/world/item/ItemStack; a
	createAndStoreSavedData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;IIIZZLnet/minecraft/resources/ResourceKey;)V a
	createNewSavedData (Lnet/minecraft/world/level/Level;IIIZZLnet/minecraft/resources/ResourceKey;)I a
	getColor (Lnet/minecraft/world/item/ItemStack;)I k
	getCorrectStateForFluidBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getMapId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/Integer; d
	getSavedData (Ljava/lang/Integer;Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getSavedData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getUpdatePacket (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isBiomeWatery ([ZII)Z a
	lockMap (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)V a
	makeKey (I)Ljava/lang/String; a
	onCraftedBy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)V b
	renderBiomePreviewMap (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;)V a
	scaleMap (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;I)V a
	storeMapData (Lnet/minecraft/world/item/ItemStack;I)V a
	update (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/MilkBucketItem cbe
	DRINK_DURATION a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/MinecartItem cbf
	DISPENSE_ITEM_BEHAVIOR a
	type b
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/MobBucketItem cbg
	emptySound b
	type a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	checkExtraContent (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	playEmptySound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	spawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/item/NameTagItem cbh
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/PickaxeItem cbi
net/minecraft/world/item/PlaceOnWaterBlockItem cbj
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/PlayerHeadItem cbk
	TAG_SKULL_OWNER b
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; m
	verifyTagAfterLoad (Lnet/minecraft/nbt/CompoundTag;)V b
net/minecraft/world/item/PotionItem cbl
	DRINK_DURATION a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; Q_
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ProjectileWeaponItem cbm
	ARROW_ONLY c
	ARROW_OR_FIREWORK d
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getDefaultProjectileRange ()I d
	getEnchantmentValue ()I c
	getHeldProjectile (Lnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Predicate;)Lnet/minecraft/world/item/ItemStack; a
	getSupportedHeldProjectiles ()Ljava/util/function/Predicate; e
net/minecraft/world/item/Rarity cbn
	$VALUES f
	COMMON a
	EPIC d
	RARE c
	UNCOMMON b
	color e
	$values ()[Lnet/minecraft/world/item/Rarity; a
net/minecraft/world/item/RecordItem cbo
	BY_NAME a
	analogOutput b
	lengthInTicks d
	sound c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getAnalogOutput ()I i
	getBySound (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/item/RecordItem; a
	getDisplayName ()Lnet/minecraft/network/chat/MutableComponent; j
	getLengthInTicks ()I z
	getSound ()Lnet/minecraft/sounds/SoundEvent; y
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SaddleItem cbp
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ScaffoldingBlockItem cbq
	mustSurvive ()Z d
	updatePlacementContext (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/item/context/BlockPlaceContext; b
net/minecraft/world/item/ServerItemCooldowns cbr
	player a
	onCooldownEnded (Lnet/minecraft/world/item/Item;)V c
	onCooldownStarted (Lnet/minecraft/world/item/Item;I)V b
net/minecraft/world/item/ShearsItem cbs
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ShieldItem cbt
	EFFECTIVE_BLOCK_DELAY a
	MINIMUM_DURABILITY_DAMAGE b
	TAG_BASE_COLOR c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getColor (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/DyeColor; d
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ShovelItem cbu
	FLATTENABLES a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SignItem cbv
	updateCustomBlockEntityTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/SimpleFoiledItem cbw
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
net/minecraft/world/item/SnowballItem cbx
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/SolidBucketItem cby
	placeSound b
	emptyContents (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/BlockHitResult;)Z a
	getDescriptionId ()Ljava/lang/String; a
	getPlaceSound (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/sounds/SoundEvent; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SpawnEggItem cbz
	BY_ID a
	backgroundColor b
	defaultType d
	highlightColor c
	byId (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/item/SpawnEggItem; a
	eggs ()Ljava/lang/Iterable; i
	getColor (I)I a
	getType (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/EntityType; a
	spawnOffspringFromSpawnEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	spawnsEntity (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/entity/EntityType;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SpectralArrowItem cca
	createArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
net/minecraft/world/item/SplashPotionItem ccb
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/SpyglassItem ccc
	USE_DURATION a
	ZOOM_FOV_MODIFIER b
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	stopUsing (Lnet/minecraft/world/entity/LivingEntity;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/StandingAndWallBlockItem ccd
	wallBlock c
	getPlacementState (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
	registerBlocks (Ljava/util/Map;Lnet/minecraft/world/item/Item;)V a
net/minecraft/world/item/SuspiciousStewItem cce
	EFFECTS_TAG a
	EFFECT_DURATION_TAG c
	EFFECT_ID_TAG b
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	saveMobEffect (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/effect/MobEffect;I)V a
net/minecraft/world/item/SwordItem ccf
	attackDamage a
	defaultModifiers b
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	getDamage ()F i
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/item/ThrowablePotionItem ccg
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/Tier cch
	getAttackDamageBonus ()F c
	getEnchantmentValue ()I e
	getLevel ()I d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; f
	getSpeed ()F b
	getUses ()I a
net/minecraft/world/item/TieredItem cci
	tier a
	getEnchantmentValue ()I c
	getTier ()Lnet/minecraft/world/item/Tier; j
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/item/Tiers ccj
	$VALUES m
	DIAMOND d
	GOLD e
	IRON c
	NETHERITE f
	STONE b
	WOOD a
	damage j
	enchantmentValue k
	level g
	repairIngredient l
	speed i
	uses h
	$values ()[Lnet/minecraft/world/item/Tiers; m
	getAttackDamageBonus ()F c
	getEnchantmentValue ()I e
	getLevel ()I d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; f
	getSpeed ()F b
	getUses ()I a
net/minecraft/world/item/TippedArrowItem cck
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; Q_
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
net/minecraft/world/item/TooltipFlag ccl
	isAdvanced ()Z a
net/minecraft/world/item/TooltipFlag$Default ccl$a
	$VALUES d
	ADVANCED b
	NORMAL a
	advanced c
	$values ()[Lnet/minecraft/world/item/TooltipFlag$Default; b
	isAdvanced ()Z a
net/minecraft/world/item/TridentItem ccm
	BASE_DAMAGE b
	SHOOT_POWER c
	THROW_THRESHOLD_TIME a
	defaultModifiers d
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getEnchantmentValue ()I c
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/UseAnim ccn
	$VALUES j
	BLOCK d
	BOW e
	CROSSBOW g
	DRINK c
	EAT b
	NONE a
	SPEAR f
	SPYGLASS h
	TOOT_HORN i
	$values ()[Lnet/minecraft/world/item/UseAnim; a
net/minecraft/world/item/Vanishable cco
net/minecraft/world/item/Wearable ccp
net/minecraft/world/item/WritableBookItem ccq
	makeSureTagIsValid (Lnet/minecraft/nbt/CompoundTag;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/WrittenBookItem ccr
	MAX_GENERATION f
	MAX_PAGES e
	PAGE_EDIT_LENGTH c
	PAGE_LENGTH d
	TAG_AUTHOR i
	TAG_FILTERED_PAGES r
	TAG_FILTERED_TITLE h
	TAG_GENERATION s
	TAG_PAGES j
	TAG_RESOLVED t
	TAG_TITLE g
	TITLE_LENGTH a
	TITLE_MAX_LENGTH b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getGeneration (Lnet/minecraft/world/item/ItemStack;)I d
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; m
	getPageCount (Lnet/minecraft/world/item/ItemStack;)I k
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	makeSureTagIsValid (Lnet/minecraft/nbt/CompoundTag;)Z a
	resolveBookComponents (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/player/Player;)Z a
	resolvePage (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/player/Player;Ljava/lang/String;)Ljava/lang/String; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/alchemy/Potion ccs
	effects b
	name a
	byName (Ljava/lang/String;)Lnet/minecraft/world/item/alchemy/Potion; a
	getEffects ()Ljava/util/List; a
	getName (Ljava/lang/String;)Ljava/lang/String; b
	hasInstantEffects ()Z b
net/minecraft/world/item/alchemy/PotionBrewing cct
	ALLOWED_CONTAINER e
	ALLOWED_CONTAINERS d
	BREWING_TIME_SECONDS a
	CONTAINER_MIXES c
	POTION_MIXES b
	addContainer (Lnet/minecraft/world/item/Item;)V a
	addContainerRecipe (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;)V a
	addMix (Lnet/minecraft/world/item/alchemy/Potion;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/alchemy/Potion;)V a
	bootStrap ()V a
	hasContainerMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	hasMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	hasPotionMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	isBrewablePotion (Lnet/minecraft/world/item/alchemy/Potion;)Z a
	isContainerIngredient (Lnet/minecraft/world/item/ItemStack;)Z b
	isIngredient (Lnet/minecraft/world/item/ItemStack;)Z a
	isPotionIngredient (Lnet/minecraft/world/item/ItemStack;)Z c
	mix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; d
net/minecraft/world/item/alchemy/PotionBrewing$Mix cct$a
	from a
	ingredient b
	to c
net/minecraft/world/item/alchemy/PotionUtils ccu
	EMPTY_COLOR d
	NO_EFFECT e
	TAG_CUSTOM_POTION_COLOR b
	TAG_CUSTOM_POTION_EFFECTS a
	TAG_POTION c
	addPotionTooltip (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;F)V a
	getAllEffects (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; a
	getAllEffects (Lnet/minecraft/world/item/alchemy/Potion;Ljava/util/Collection;)Ljava/util/List; a
	getColor (Ljava/util/Collection;)I a
	getColor (Lnet/minecraft/world/item/ItemStack;)I c
	getColor (Lnet/minecraft/world/item/alchemy/Potion;)I a
	getCustomEffects (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; b
	getCustomEffects (Lnet/minecraft/nbt/CompoundTag;Ljava/util/List;)V a
	getCustomEffects (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
	getMobEffects (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	getPotion (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/item/alchemy/Potion; c
	getPotion (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/alchemy/Potion; d
	setCustomEffects (Lnet/minecraft/world/item/ItemStack;Ljava/util/Collection;)Lnet/minecraft/world/item/ItemStack; a
	setPotion (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/alchemy/Potions ccv
	AWKWARD e
	EMPTY a
	FIRE_RESISTANCE m
	HARMING B
	HEALING z
	INVISIBILITY h
	LEAPING j
	LONG_FIRE_RESISTANCE n
	LONG_INVISIBILITY i
	LONG_LEAPING k
	LONG_NIGHT_VISION g
	LONG_POISON E
	LONG_REGENERATION H
	LONG_SLOWNESS s
	LONG_SLOW_FALLING Q
	LONG_STRENGTH K
	LONG_SWIFTNESS p
	LONG_TURTLE_MASTER v
	LONG_WATER_BREATHING y
	LONG_WEAKNESS N
	LUCK O
	MUNDANE c
	NIGHT_VISION f
	POISON D
	REGENERATION G
	SLOWNESS r
	SLOW_FALLING P
	STRENGTH J
	STRONG_HARMING C
	STRONG_HEALING A
	STRONG_LEAPING l
	STRONG_POISON F
	STRONG_REGENERATION I
	STRONG_SLOWNESS t
	STRONG_STRENGTH L
	STRONG_SWIFTNESS q
	STRONG_TURTLE_MASTER w
	SWIFTNESS o
	THICK d
	TURTLE_MASTER u
	WATER b
	WATER_BREATHING x
	WEAKNESS M
	register (Ljava/lang/String;Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/item/alchemy/Potion; a
net/minecraft/world/item/context/BlockPlaceContext ccx
	relativePos b
	replaceClicked a
	at (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/item/context/BlockPlaceContext; a
	canPlace ()Z b
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getNearestLookingDirection ()Lnet/minecraft/core/Direction; d
	getNearestLookingDirections ()[Lnet/minecraft/core/Direction; f
	getNearestLookingVerticalDirection ()Lnet/minecraft/core/Direction; e
	replacingClickedOnBlock ()Z c
net/minecraft/world/item/context/DirectionalPlaceContext ccy
	direction b
	canPlace ()Z b
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getHorizontalDirection ()Lnet/minecraft/core/Direction; g
	getNearestLookingDirection ()Lnet/minecraft/core/Direction; d
	getNearestLookingDirections ()[Lnet/minecraft/core/Direction; f
	getRotation ()F i
	isSecondaryUseActive ()Z h
	replacingClickedOnBlock ()Z c
net/minecraft/world/item/context/UseOnContext ccz
	hand b
	hitResult c
	itemStack e
	level d
	player a
	getClickLocation ()Lnet/minecraft/world/phys/Vec3; l
	getClickedFace ()Lnet/minecraft/core/Direction; k
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getHand ()Lnet/minecraft/world/InteractionHand; p
	getHitResult ()Lnet/minecraft/world/phys/BlockHitResult; j
	getHorizontalDirection ()Lnet/minecraft/core/Direction; g
	getItemInHand ()Lnet/minecraft/world/item/ItemStack; n
	getLevel ()Lnet/minecraft/world/level/Level; q
	getPlayer ()Lnet/minecraft/world/entity/player/Player; o
	getRotation ()F i
	isInside ()Z m
	isSecondaryUseActive ()Z h
net/minecraft/world/item/crafting/AbstractCookingRecipe cdb
	cookingTime g
	experience f
	group c
	id b
	ingredient d
	result e
	type a
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getCookingTime ()I e
	getExperience ()F b
	getGroup ()Ljava/lang/String; d
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ArmorDyeRecipe cdc
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/BannerDuplicateRecipe cdd
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; b
	getRemainingItems (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/core/NonNullList; b
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/BlastingRecipe cde
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/BookCloningRecipe cdf
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; b
	getRemainingItems (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/core/NonNullList; b
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/CampfireCookingRecipe cdg
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/CraftingRecipe cdh
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
net/minecraft/world/item/crafting/CustomRecipe cdi
	id a
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	isSpecial ()Z T_
net/minecraft/world/item/crafting/FireworkRocketRecipe cdj
	GUNPOWDER_INGREDIENT b
	PAPER_INGREDIENT a
	STAR_INGREDIENT c
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/FireworkStarFadeRecipe cdk
	STAR_INGREDIENT a
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/FireworkStarRecipe cdl
	FLICKER_INGREDIENT c
	GUNPOWDER_INGREDIENT e
	SHAPE_BY_ITEM d
	SHAPE_INGREDIENT a
	TRAIL_INGREDIENT b
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/Ingredient cdm
	EMPTY a
	itemStacks c
	stackingIds d
	values b
	dissolve ()V f
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/world/item/crafting/Ingredient; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Ingredient; b
	fromValues (Ljava/util/stream/Stream;)Lnet/minecraft/world/item/crafting/Ingredient; b
	getItems ()[Lnet/minecraft/world/item/ItemStack; a
	getStackingIds ()Lit/unimi/dsi/fastutil/ints/IntList; b
	isEmpty ()Z d
	of ()Lnet/minecraft/world/item/crafting/Ingredient; e
	of (Ljava/util/stream/Stream;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of ([Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of ([Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/item/crafting/Ingredient; a
	test (Lnet/minecraft/world/item/ItemStack;)Z a
	toJson ()Lcom/google/gson/JsonElement; c
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Ingredient$Value; a
net/minecraft/world/item/crafting/Ingredient$ItemValue cdm$a
	item a
	getItems ()Ljava/util/Collection; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/world/item/crafting/Ingredient$TagValue cdm$b
	tag a
	getItems ()Ljava/util/Collection; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/world/item/crafting/Ingredient$Value cdm$c
	getItems ()Ljava/util/Collection; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/world/item/crafting/MapCloningRecipe cdn
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/MapExtendingRecipe cdo
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	isSpecial ()Z T_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/Recipe cdp
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getGroup ()Ljava/lang/String; d
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; b
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
	isIncomplete ()Z i
	isSpecial ()Z T_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/RecipeManager cdq
	GSON a
	LOGGER b
	byName d
	hasErrors e
	recipes c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	byKey (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	byType (Lnet/minecraft/world/item/crafting/RecipeType;)Ljava/util/Map; c
	createCheck (Lnet/minecraft/world/item/crafting/RecipeType;)Lnet/minecraft/world/item/crafting/RecipeManager$CachedCheck; b
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	getAllRecipesFor (Lnet/minecraft/world/item/crafting/RecipeType;)Ljava/util/List; a
	getRecipeFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getRecipeFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	getRecipeIds ()Ljava/util/stream/Stream; d
	getRecipes ()Ljava/util/Collection; b
	getRecipesFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Ljava/util/List; b
	getRemainingItemsFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Lnet/minecraft/core/NonNullList; c
	hadErrorsLoading ()Z a
	replaceRecipes (Ljava/lang/Iterable;)V a
net/minecraft/world/item/crafting/RecipeManager$CachedCheck cdq$a
	getRecipeFor (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
net/minecraft/world/item/crafting/RecipeSerializer cdr
	ARMOR_DYE c
	BANNER_DUPLICATE k
	BLASTING_RECIPE q
	BOOK_CLONING d
	CAMPFIRE_COOKING_RECIPE s
	FIREWORK_ROCKET g
	FIREWORK_STAR h
	FIREWORK_STAR_FADE i
	MAP_CLONING e
	MAP_EXTENDING f
	REPAIR_ITEM o
	SHAPED_RECIPE a
	SHAPELESS_RECIPE b
	SHIELD_DECORATION l
	SHULKER_BOX_COLORING m
	SMELTING_RECIPE p
	SMITHING u
	SMOKING_RECIPE r
	STONECUTTER t
	SUSPICIOUS_STEW n
	TIPPED_ARROW j
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	register (Ljava/lang/String;Lnet/minecraft/world/item/crafting/RecipeSerializer;)Lnet/minecraft/world/item/crafting/RecipeSerializer; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/crafting/RecipeType cds
	BLASTING c
	CAMPFIRE_COOKING e
	CRAFTING a
	SMELTING b
	SMITHING g
	SMOKING d
	STONECUTTING f
	register (Ljava/lang/String;)Lnet/minecraft/world/item/crafting/RecipeType; a
net/minecraft/world/item/crafting/RepairItemRecipe cdt
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShapedRecipe cdu
	group f
	height b
	id e
	recipeItems c
	result d
	width a
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	dissolvePattern ([Ljava/lang/String;Ljava/util/Map;II)Lnet/minecraft/core/NonNullList; a
	firstNonSpace (Ljava/lang/String;)I a
	getGroup ()Ljava/lang/String; d
	getHeight ()I k
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	getWidth ()I j
	isIncomplete ()Z i
	itemFromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/Item; b
	itemStackFromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/ItemStack; a
	keyFromJson (Lcom/google/gson/JsonObject;)Ljava/util/Map; c
	lastNonSpace (Ljava/lang/String;)I b
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;IIZ)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
	patternFromJson (Lcom/google/gson/JsonArray;)[Ljava/lang/String; a
	shrink ([Ljava/lang/String;)[Ljava/lang/String; a
net/minecraft/world/item/crafting/ShapedRecipe$Serializer cdu$a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/ShapedRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/ShapedRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/ShapedRecipe;)V a
net/minecraft/world/item/crafting/ShapelessRecipe cdv
	group b
	id a
	ingredients d
	result c
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getGroup ()Ljava/lang/String; d
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShapelessRecipe$Serializer cdv$a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/ShapelessRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/ShapelessRecipe; b
	itemsFromJson (Lcom/google/gson/JsonArray;)Lnet/minecraft/core/NonNullList; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/ShapelessRecipe;)V a
net/minecraft/world/item/crafting/ShieldDecorationRecipe cdw
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShulkerBoxColoring cdx
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/SimpleCookingSerializer cdy
	defaultCookingTime v
	factory w
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/AbstractCookingRecipe; b
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/AbstractCookingRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/AbstractCookingRecipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/crafting/SimpleCookingSerializer$CookieBaker cdy$a
net/minecraft/world/item/crafting/SimpleRecipeSerializer cdz
	constructor v
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/crafting/SingleItemRecipe cea
	group d
	id c
	ingredient a
	result b
	serializer f
	type e
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getGroup ()Ljava/lang/String; d
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
net/minecraft/world/item/crafting/SingleItemRecipe$Serializer cea$a
	factory v
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/SingleItemRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/SingleItemRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/SingleItemRecipe;)V a
net/minecraft/world/item/crafting/SingleItemRecipe$Serializer$SingleItemMaker cea$a$a
net/minecraft/world/item/crafting/SmeltingRecipe ceb
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/SmokingRecipe cec
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/StonecutterRecipe ced
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/SuspiciousStewRecipe cee
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/TippedArrowRecipe cef
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/UpgradeRecipe ceg
	addition b
	base a
	id d
	result c
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; U_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
	isAdditionIngredient (Lnet/minecraft/world/item/ItemStack;)Z a
	isIncomplete ()Z i
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/UpgradeRecipe$Serializer ceg$a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/UpgradeRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/UpgradeRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/UpgradeRecipe;)V a
net/minecraft/world/item/enchantment/ArrowDamageEnchantment cei
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowFireEnchantment cej
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowInfiniteEnchantment cek
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowKnockbackEnchantment cel
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowPiercingEnchantment cem
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/BindingCurseEnchantment cen
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isCurse ()Z c
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/DamageEnchantment ceo
	ALL a
	ARTHROPODS c
	LEVEL_COST i
	LEVEL_COST_SPAN j
	MIN_COST h
	NAMES g
	UNDEAD b
	type d
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	doPostAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V a
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/DigDurabilityEnchantment cep
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	shouldIgnoreDurabilityDrop (Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/item/enchantment/DiggingEnchantment ceq
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/Enchantment cer
	category e
	descriptionId f
	rarity b
	slots a
	byId (I)Lnet/minecraft/world/item/enchantment/Enchantment; c
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	doPostAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V a
	doPostHurt (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V b
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getDamageProtection (ILnet/minecraft/world/damagesource/DamageSource;)I a
	getDescriptionId ()Ljava/lang/String; g
	getFullname (I)Lnet/minecraft/network/chat/Component; d
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	getMinLevel ()I e
	getOrCreateDescriptionId ()Ljava/lang/String; f
	getRarity ()Lnet/minecraft/world/item/enchantment/Enchantment$Rarity; d
	getSlotItems (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Map; a
	isCompatibleWith (Lnet/minecraft/world/item/enchantment/Enchantment;)Z b
	isCurse ()Z c
	isDiscoverable ()Z i
	isTradeable ()Z h
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/Enchantment$Rarity cer$a
	$VALUES f
	COMMON a
	RARE c
	UNCOMMON b
	VERY_RARE d
	weight e
	$values ()[Lnet/minecraft/world/item/enchantment/Enchantment$Rarity; b
	getWeight ()I a
net/minecraft/world/item/enchantment/EnchantmentCategory ces
	$VALUES o
	ARMOR a
	ARMOR_CHEST d
	ARMOR_FEET b
	ARMOR_HEAD e
	ARMOR_LEGS c
	BOW k
	BREAKABLE j
	CROSSBOW m
	DIGGER g
	FISHING_ROD h
	TRIDENT i
	VANISHABLE n
	WEAPON f
	WEARABLE l
	$values ()[Lnet/minecraft/world/item/enchantment/EnchantmentCategory; a
	canEnchant (Lnet/minecraft/world/item/Item;)Z a
net/minecraft/world/item/enchantment/EnchantmentHelper cet
	SWIFT_SNEAK_EXTRA_FACTOR c
	TAG_ENCH_ID a
	TAG_ENCH_LEVEL b
	deserializeEnchantments (Lnet/minecraft/nbt/ListTag;)Ljava/util/Map; a
	doPostDamageEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V b
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V a
	enchantItem (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/item/ItemStack;IZ)Lnet/minecraft/world/item/ItemStack; a
	filterCompatibleEnchantments (Ljava/util/List;Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)V a
	getAvailableEnchantmentResults (ILnet/minecraft/world/item/ItemStack;Z)Ljava/util/List; a
	getBlockEfficiency (Lnet/minecraft/world/entity/LivingEntity;)I g
	getDamageBonus (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/MobType;)F a
	getDamageProtection (Ljava/lang/Iterable;Lnet/minecraft/world/damagesource/DamageSource;)I a
	getDepthStrider (Lnet/minecraft/world/entity/LivingEntity;)I f
	getEnchantmentCost (Lnet/minecraft/util/RandomSource;IILnet/minecraft/world/item/ItemStack;)I a
	getEnchantmentId (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/resources/ResourceLocation; b
	getEnchantmentId (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/resources/ResourceLocation; a
	getEnchantmentLevel (Lnet/minecraft/nbt/CompoundTag;)I a
	getEnchantmentLevel (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;)I a
	getEnchantments (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Map; a
	getFireAspect (Lnet/minecraft/world/entity/LivingEntity;)I d
	getFishingLuckBonus (Lnet/minecraft/world/item/ItemStack;)I b
	getFishingSpeedBonus (Lnet/minecraft/world/item/ItemStack;)I c
	getItemEnchantmentLevel (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/item/ItemStack;)I a
	getKnockbackBonus (Lnet/minecraft/world/entity/LivingEntity;)I c
	getLoyalty (Lnet/minecraft/world/item/ItemStack;)I f
	getMobLooting (Lnet/minecraft/world/entity/LivingEntity;)I h
	getRandomItemWith (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Map$Entry; b
	getRandomItemWith (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Predicate;)Ljava/util/Map$Entry; a
	getRespiration (Lnet/minecraft/world/entity/LivingEntity;)I e
	getRiptide (Lnet/minecraft/world/item/ItemStack;)I g
	getSneakingSpeedBonus (Lnet/minecraft/world/entity/LivingEntity;)F b
	getSweepingDamageRatio (Lnet/minecraft/world/entity/LivingEntity;)F a
	hasAquaAffinity (Lnet/minecraft/world/entity/LivingEntity;)Z i
	hasBindingCurse (Lnet/minecraft/world/item/ItemStack;)Z d
	hasChanneling (Lnet/minecraft/world/item/ItemStack;)Z h
	hasFrostWalker (Lnet/minecraft/world/entity/LivingEntity;)Z j
	hasSoulSpeed (Lnet/minecraft/world/entity/LivingEntity;)Z k
	hasVanishingCurse (Lnet/minecraft/world/item/ItemStack;)Z e
	isEnchantmentCompatible (Ljava/util/Collection;Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	runIterationOnInventory (Lnet/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor;Ljava/lang/Iterable;)V a
	runIterationOnItem (Lnet/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor;Lnet/minecraft/world/item/ItemStack;)V a
	selectEnchantment (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/item/ItemStack;IZ)Ljava/util/List; b
	setEnchantmentLevel (Lnet/minecraft/nbt/CompoundTag;I)V a
	setEnchantments (Ljava/util/Map;Lnet/minecraft/world/item/ItemStack;)V a
	storeEnchantment (Lnet/minecraft/resources/ResourceLocation;I)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor cet$a
net/minecraft/world/item/enchantment/EnchantmentInstance ceu
	enchantment a
	level b
net/minecraft/world/item/enchantment/Enchantments cev
	ALL_DAMAGE_PROTECTION a
	AQUA_AFFINITY g
	ARMOR_SLOTS N
	BANE_OF_ARTHROPODS p
	BINDING_CURSE k
	BLAST_PROTECTION d
	BLOCK_EFFICIENCY u
	BLOCK_FORTUNE x
	CHANNELING H
	DEPTH_STRIDER i
	FALL_PROTECTION c
	FIRE_ASPECT r
	FIRE_PROTECTION b
	FISHING_LUCK C
	FISHING_SPEED D
	FLAMING_ARROWS A
	FROST_WALKER j
	IMPALING F
	INFINITY_ARROWS B
	KNOCKBACK q
	LOYALTY E
	MENDING L
	MOB_LOOTING s
	MULTISHOT I
	PIERCING K
	POWER_ARROWS y
	PROJECTILE_PROTECTION e
	PUNCH_ARROWS z
	QUICK_CHARGE J
	RESPIRATION f
	RIPTIDE G
	SHARPNESS n
	SILK_TOUCH v
	SMITE o
	SOUL_SPEED l
	SWEEPING_EDGE t
	SWIFT_SNEAK m
	THORNS h
	UNBREAKING w
	VANISHING_CURSE M
	register (Ljava/lang/String;Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/item/enchantment/Enchantment; a
net/minecraft/world/item/enchantment/FireAspectEnchantment cew
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/FishingSpeedEnchantment cex
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/FrostWalkerEnchantment cey
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isTreasureOnly ()Z b
	onEntityMoved (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
net/minecraft/world/item/enchantment/KnockbackEnchantment cez
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/LootBonusEnchantment cfa
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/MendingEnchantment cfb
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/MultiShotEnchantment cfc
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/OxygenEnchantment cfd
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ProtectionEnchantment cfe
	type a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getDamageProtection (ILnet/minecraft/world/damagesource/DamageSource;)I a
	getExplosionKnockbackAfterDampener (Lnet/minecraft/world/entity/LivingEntity;D)D a
	getFireAfterDampener (Lnet/minecraft/world/entity/LivingEntity;I)I a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ProtectionEnchantment$Type cfe$a
	$VALUES h
	ALL a
	EXPLOSION d
	FALL c
	FIRE b
	PROJECTILE e
	levelCost g
	minCost f
	$values ()[Lnet/minecraft/world/item/enchantment/ProtectionEnchantment$Type; c
	getLevelCost ()I b
	getMinCost ()I a
net/minecraft/world/item/enchantment/QuickChargeEnchantment cff
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/SoulSpeedEnchantment cfg
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isDiscoverable ()Z i
	isTradeable ()Z h
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/SweepingEdgeEnchantment cfh
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	getSweepingDamageRatio (I)F e
net/minecraft/world/item/enchantment/SwiftSneakEnchantment cfi
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isDiscoverable ()Z i
	isTradeable ()Z h
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/ThornsEnchantment cfj
	CHANCE_PER_LEVEL a
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	doPostHurt (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V b
	getDamage (ILnet/minecraft/util/RandomSource;)I b
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	shouldHit (ILnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/item/enchantment/TridentChannelingEnchantment cfk
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentImpalerEnchantment cfl
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentLoyaltyEnchantment cfm
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentRiptideEnchantment cfn
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/UntouchingEnchantment cfo
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/VanishingCurseEnchantment cfp
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isCurse ()Z c
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/WaterWalkerEnchantment cfq
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/WaterWorkerEnchantment cfr
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/trading/Merchant cfu
	canRestock ()Z fW
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; fO
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; fM
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; fK
	getVillagerXp ()I fJ
	isClientSide ()Z fS
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V m
	openTradingScreen (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;I)V a
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V t
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V e
	showProgressBar ()Z fN
net/minecraft/world/item/trading/MerchantOffer cfv
	baseCostA a
	costB b
	demand h
	maxUses e
	priceMultiplier i
	result c
	rewardExp f
	specialPriceDiff g
	uses d
	xp j
	addToSpecialPriceDiff (I)V a
	assemble ()Lnet/minecraft/world/item/ItemStack; f
	createTag ()Lnet/minecraft/nbt/CompoundTag; t
	getBaseCostA ()Lnet/minecraft/world/item/ItemStack; a
	getCostA ()Lnet/minecraft/world/item/ItemStack; b
	getCostB ()Lnet/minecraft/world/item/ItemStack; c
	getDemand ()I k
	getMaxUses ()I i
	getPriceMultiplier ()F n
	getResult ()Lnet/minecraft/world/item/ItemStack; d
	getSpecialPriceDiff ()I m
	getUses ()I g
	getXp ()I o
	increaseUses ()V j
	isOutOfStock ()Z p
	isRequiredItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	needsRestock ()Z r
	resetSpecialPriceDiff ()V l
	resetUses ()V h
	satisfiedBy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	setSpecialPriceDiff (I)V b
	setToOutOfStock ()V q
	shouldRewardExp ()Z s
	take (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	updateDemand ()V e
net/minecraft/world/item/trading/MerchantOffers cfw
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/trading/MerchantOffers; b
	createTag ()Lnet/minecraft/nbt/CompoundTag; a
	getRecipeFor (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/trading/MerchantOffer; a
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/BaseCommandBlock cfy
	DEFAULT_NAME c
	TIME_FORMAT b
	command i
	lastExecution d
	lastOutput h
	name j
	successCount f
	trackOutput g
	updateLastExecution e
	acceptsFailure ()Z j_
	acceptsSuccess ()Z i_
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; i
	getCommand ()Ljava/lang/String; l
	getLastOutput ()Lnet/minecraft/network/chat/Component; k
	getLevel ()Lnet/minecraft/server/level/ServerLevel; e
	getName ()Lnet/minecraft/network/chat/Component; m
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	getSuccessCount ()I j
	isTrackOutput ()Z n
	load (Lnet/minecraft/nbt/CompoundTag;)V b
	onUpdated ()V f
	performCommand (Lnet/minecraft/world/level/Level;)Z a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	setCommand (Ljava/lang/String;)V a
	setLastOutput (Lnet/minecraft/network/chat/Component;)V c
	setName (Lnet/minecraft/network/chat/Component;)V b
	setSuccessCount (I)V a
	setTrackOutput (Z)V a
	shouldInformAdmins ()Z G_
	usedBy (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/BaseSpawner cfz
	EVENT_SPAWN b
	LOGGER a
	displayEntity k
	maxNearbyEntities l
	maxSpawnDelay i
	minSpawnDelay h
	nextSpawnData e
	oSpin g
	requiredPlayerRange m
	spawnCount j
	spawnDelay c
	spawnPotentials d
	spawnRange n
	spin f
	broadcastEvent (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
	clientTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	delay (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V c
	getOrCreateDisplayEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getSpin ()D a
	getoSpin ()D b
	isNearPlayer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z b
	load (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)V a
	onEventTriggered (Lnet/minecraft/world/level/Level;I)Z a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	serverTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	setEntityId (Lnet/minecraft/world/entity/EntityType;)V a
	setNextSpawnData (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/SpawnData;)V a
net/minecraft/world/level/BlockAndTintGetter cga
	canSeeSky (Lnet/minecraft/core/BlockPos;)Z g
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getBrightness (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/BlockPos;)I a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; l_
	getRawBrightness (Lnet/minecraft/core/BlockPos;I)I b
	getShade (Lnet/minecraft/core/Direction;Z)F a
net/minecraft/world/level/BlockCollisions cgb
	box a
	cachedBlockGetter h
	cachedBlockGetterPos i
	collisionGetter f
	context b
	cursor c
	entityShape e
	onlySuffocatingBlocks g
	pos d
	computeNext ()Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getChunk (II)Lnet/minecraft/world/level/BlockGetter; a
net/minecraft/world/level/BlockEventData cgc
	block b
	paramA c
	paramB d
	pos a
	block ()Lnet/minecraft/world/level/block/Block; b
	paramA ()I c
	paramB ()I d
	pos ()Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/BlockGetter cgd
	clip (Lnet/minecraft/world/level/ClipContext;)Lnet/minecraft/world/phys/BlockHitResult; a
	clipWithInteractionOverride (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/BlockHitResult; a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Ljava/util/Optional; a
	getBlockFloorHeight (Lnet/minecraft/core/BlockPos;)D i
	getBlockFloorHeight (Lnet/minecraft/world/phys/shapes/VoxelShape;Ljava/util/function/Supplier;)D a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockStates (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getLightEmission (Lnet/minecraft/core/BlockPos;)I h
	getMaxLightLevel ()I L
	isBlockInLine (Lnet/minecraft/world/level/ClipBlockStateContext;)Lnet/minecraft/world/phys/BlockHitResult; a
	traverseBlocks (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object; a
net/minecraft/world/level/ChunkPos cge
	COORD_BITS h
	COORD_MASK i
	HASH_A l
	HASH_C m
	HASH_Z_XOR n
	INVALID_CHUNK_POS a
	REGION_BITS j
	REGION_MASK k
	REGION_MAX_INDEX d
	REGION_SIZE c
	SAFETY_MARGIN g
	ZERO b
	x e
	z f
	asLong (II)J c
	asLong (Lnet/minecraft/core/BlockPos;)J a
	getBlockAt (III)Lnet/minecraft/core/BlockPos; a
	getBlockX (I)I a
	getBlockZ (I)I b
	getChessboardDistance (Lnet/minecraft/world/level/ChunkPos;)I a
	getMaxBlockX ()I f
	getMaxBlockZ ()I g
	getMiddleBlockPosition (I)Lnet/minecraft/core/BlockPos; c
	getMiddleBlockX ()I b
	getMiddleBlockZ ()I c
	getMinBlockX ()I d
	getMinBlockZ ()I e
	getRegionLocalX ()I j
	getRegionLocalZ ()I k
	getRegionX ()I h
	getRegionZ ()I i
	getWorldPosition ()Lnet/minecraft/core/BlockPos; l
	getX (J)I a
	getZ (J)I b
	hash (II)I d
	maxFromRegion (II)Lnet/minecraft/world/level/ChunkPos; b
	minFromRegion (II)Lnet/minecraft/world/level/ChunkPos; a
	rangeClosed (Lnet/minecraft/world/level/ChunkPos;I)Ljava/util/stream/Stream; a
	rangeClosed (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/ChunkPos;)Ljava/util/stream/Stream; a
	toLong ()J a
net/minecraft/world/level/ClipBlockStateContext cgf
	block c
	from a
	to b
	getFrom ()Lnet/minecraft/world/phys/Vec3; b
	getTo ()Lnet/minecraft/world/phys/Vec3; a
	isTargetBlock ()Ljava/util/function/Predicate; c
net/minecraft/world/level/ClipContext cgg
	block c
	collisionContext e
	fluid d
	from a
	to b
	getBlockShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFluidShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFrom ()Lnet/minecraft/world/phys/Vec3; b
	getTo ()Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/level/ClipContext$Block cgg$a
	$VALUES f
	COLLIDER a
	FALLDAMAGE_RESETTING d
	OUTLINE b
	VISUAL c
	shapeGetter e
	$values ()[Lnet/minecraft/world/level/ClipContext$Block; a
net/minecraft/world/level/ClipContext$Fluid cgg$b
	$VALUES f
	ANY c
	NONE a
	SOURCE_ONLY b
	WATER d
	canPick e
	$values ()[Lnet/minecraft/world/level/ClipContext$Fluid; a
	canPick (Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/ClipContext$ShapeGetter cgg$c
net/minecraft/world/level/CollisionGetter cgh
	borderCollision (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	collidesWithSuffocatingBlock (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Z e
	findFreePosition (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/Vec3;DDD)Ljava/util/Optional; a
	getBlockCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/lang/Iterable; d
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/lang/Iterable; c
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; b
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; p_
	isUnobstructed (Lnet/minecraft/world/entity/Entity;)Z f
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	isUnobstructed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Z a
	noCollision (Lnet/minecraft/world/entity/Entity;)Z g
	noCollision (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Z a
	noCollision (Lnet/minecraft/world/phys/AABB;)Z b
net/minecraft/world/level/ColorResolver cgi
net/minecraft/world/level/CommonLevelAccessor cgj
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Ljava/util/Optional; a
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; b
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; s
net/minecraft/world/level/CustomSpawner cgk
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/DataPackConfig cgl
	CODEC b
	DEFAULT a
	disabled d
	enabled c
	getDisabled ()Ljava/util/List; b
	getEnabled ()Ljava/util/List; a
net/minecraft/world/level/EmptyBlockGetter cgm
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/EmptyBlockGetter; a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getHeight ()I v_
	getMinBuildHeight ()I u_
net/minecraft/world/level/EntityBasedExplosionDamageCalculator cgn
	source a
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Ljava/util/Optional; a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
net/minecraft/world/level/EntityGetter cgo
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a_
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; b
	getNearbyEntities (Ljava/lang/Class;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getNearbyPlayers (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getNearestEntity (Ljava/lang/Class;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDDLnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/entity/LivingEntity; a
	getNearestEntity (Ljava/util/List;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDD)Lnet/minecraft/world/entity/LivingEntity; a
	getNearestPlayer (DDDDLjava/util/function/Predicate;)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (DDDDZ)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/Entity;D)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;DDD)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDD)Lnet/minecraft/world/entity/player/Player; a
	getPlayerByUUID (Ljava/util/UUID;)Lnet/minecraft/world/entity/player/Player; b
	hasNearbyAlivePlayer (DDDD)Z a
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	players ()Ljava/util/List; w
net/minecraft/world/level/Explosion cgp
	EXPLOSION_DAMAGE_CALCULATOR a
	MAX_DROPS_PER_COMBINED_STACK b
	blockInteraction d
	damageCalculator m
	damageSource l
	fire c
	hitPlayers o
	level f
	radius k
	random e
	source j
	toBlow n
	x g
	y h
	z i
	addBlockDrops (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	clearToBlow ()V e
	explode ()V a
	finalizeExplosion (Z)V a
	getDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; b
	getHitPlayers ()Ljava/util/Map; c
	getSeenPercent (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;)F a
	getSourceMob ()Lnet/minecraft/world/entity/LivingEntity; d
	getToBlow ()Ljava/util/List; f
	makeDamageCalculator (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/ExplosionDamageCalculator; a
net/minecraft/world/level/Explosion$BlockInteraction cgp$a
	$VALUES d
	BREAK b
	DESTROY c
	NONE a
	$values ()[Lnet/minecraft/world/level/Explosion$BlockInteraction; a
net/minecraft/world/level/ExplosionDamageCalculator cgq
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Ljava/util/Optional; a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
net/minecraft/world/level/FoliageColor cgr
	pixels a
	get (DD)I a
	getBirchColor ()I b
	getDefaultColor ()I c
	getEvergreenColor ()I a
	getMangroveColor ()I d
	init ([I)V a
net/minecraft/world/level/ForcedChunksSavedData cgs
	FILE_ID a
	TAG_FORCED b
	chunks c
	getChunks ()Lit/unimi/dsi/fastutil/longs/LongSet; a
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/ForcedChunksSavedData; b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/GameRules cgt
	DEFAULT_RANDOM_TICK_SPEED a
	GAME_RULE_TYPES M
	LOGGER L
	RULE_ANNOUNCE_ADVANCEMENTS x
	RULE_COMMANDBLOCKOUTPUT i
	RULE_DAYLIGHT k
	RULE_DISABLE_ELYTRA_MOVEMENT_CHECK s
	RULE_DISABLE_RAIDS y
	RULE_DOBLOCKDROPS g
	RULE_DOENTITYDROPS h
	RULE_DOFIRETICK b
	RULE_DOINSOMNIA z
	RULE_DOMOBLOOT f
	RULE_DOMOBSPAWNING e
	RULE_DO_IMMEDIATE_RESPAWN A
	RULE_DO_PATROL_SPAWNING F
	RULE_DO_TRADER_SPAWNING G
	RULE_DO_WARDEN_SPAWNING H
	RULE_DROWNING_DAMAGE B
	RULE_FALL_DAMAGE C
	RULE_FIRE_DAMAGE D
	RULE_FORGIVE_DEAD_PLAYERS I
	RULE_FREEZE_DAMAGE E
	RULE_KEEPINVENTORY d
	RULE_LIMITED_CRAFTING v
	RULE_LOGADMINCOMMANDS l
	RULE_MAX_COMMAND_CHAIN_LENGTH w
	RULE_MAX_ENTITY_CRAMMING t
	RULE_MOBGRIEFING c
	RULE_NATURAL_REGENERATION j
	RULE_PLAYERS_SLEEPING_PERCENTAGE K
	RULE_RANDOMTICKING n
	RULE_REDUCEDDEBUGINFO p
	RULE_SENDCOMMANDFEEDBACK o
	RULE_SHOWDEATHMESSAGES m
	RULE_SPAWN_RADIUS r
	RULE_SPECTATORSGENERATECHUNKS q
	RULE_UNIVERSAL_ANGER J
	RULE_WEATHER_CYCLE u
	rules N
	assignCap (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules;Lnet/minecraft/server/MinecraftServer;)V a
	assignFrom (Lnet/minecraft/world/level/GameRules;Lnet/minecraft/server/MinecraftServer;)V a
	callVisitorCap (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V a
	copy ()Lnet/minecraft/world/level/GameRules; b
	createTag ()Lnet/minecraft/nbt/CompoundTag; a
	getBoolean (Lnet/minecraft/world/level/GameRules$Key;)Z b
	getInt (Lnet/minecraft/world/level/GameRules$Key;)I c
	getRule (Lnet/minecraft/world/level/GameRules$Key;)Lnet/minecraft/world/level/GameRules$Value; a
	loadFromTag (Lcom/mojang/serialization/DynamicLike;)V a
	register (Ljava/lang/String;Lnet/minecraft/world/level/GameRules$Category;Lnet/minecraft/world/level/GameRules$Type;)Lnet/minecraft/world/level/GameRules$Key; a
	visitGameRuleTypes (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;)V a
net/minecraft/world/level/GameRules$BooleanValue cgt$a
	value b
	copy ()Lnet/minecraft/world/level/GameRules$BooleanValue; e
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	create (Z)Lnet/minecraft/world/level/GameRules$Type; a
	create (ZLjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$Type; a
	deserialize (Ljava/lang/String;)V a
	get ()Z a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$BooleanValue; d
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	serialize ()Ljava/lang/String; b
	set (ZLnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$BooleanValue;Lnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$Category cgt$b
	$VALUES i
	CHAT f
	DROPS d
	MISC g
	MOBS b
	PLAYER a
	SPAWNING c
	UPDATES e
	descriptionId h
	$values ()[Lnet/minecraft/world/level/GameRules$Category; b
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/level/GameRules$GameRuleTypeVisitor cgt$c
	visit (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V a
	visitBoolean (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V b
	visitInteger (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V c
net/minecraft/world/level/GameRules$IntegerValue cgt$d
	value b
	copy ()Lnet/minecraft/world/level/GameRules$IntegerValue; e
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	create (I)Lnet/minecraft/world/level/GameRules$Type; a
	create (ILjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$Type; a
	deserialize (Ljava/lang/String;)V a
	get ()I a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$IntegerValue; d
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	safeParse (Ljava/lang/String;)I c
	serialize ()Ljava/lang/String; b
	set (ILnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$IntegerValue;Lnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	tryDeserialize (Ljava/lang/String;)Z b
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$Key cgt$e
	category b
	id a
	getCategory ()Lnet/minecraft/world/level/GameRules$Category; c
	getDescriptionId ()Ljava/lang/String; b
	getId ()Ljava/lang/String; a
net/minecraft/world/level/GameRules$Type cgt$f
	argument a
	callback c
	constructor b
	visitorCaller d
	callVisitor (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;Lnet/minecraft/world/level/GameRules$Key;)V a
	createArgument (Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; a
	createRule ()Lnet/minecraft/world/level/GameRules$Value; a
net/minecraft/world/level/GameRules$Value cgt$g
	type a
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	deserialize (Ljava/lang/String;)V a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	onChanged (Lnet/minecraft/server/MinecraftServer;)V a
	serialize ()Ljava/lang/String; b
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	setFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V b
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$VisitorCaller cgt$h
net/minecraft/world/level/GameType cgu
	$VALUES k
	ADVENTURE c
	CREATIVE b
	DEFAULT_MODE e
	NOT_SET f
	SPECTATOR d
	SURVIVAL a
	id g
	longName j
	name h
	shortName i
	$values ()[Lnet/minecraft/world/level/GameType; h
	byId (I)Lnet/minecraft/world/level/GameType; a
	byId (ILnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/GameType; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/GameType; a
	byName (Ljava/lang/String;Lnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/GameType; a
	byNullableId (I)Lnet/minecraft/world/level/GameType; b
	getId ()I a
	getLongDisplayName ()Lnet/minecraft/network/chat/Component; c
	getName ()Ljava/lang/String; b
	getNullableId (Lnet/minecraft/world/level/GameType;)I a
	getShortDisplayName ()Lnet/minecraft/network/chat/Component; d
	isBlockPlacingRestricted ()Z e
	isCreative ()Z f
	isSurvival ()Z g
	updatePlayerAbilities (Lnet/minecraft/world/entity/player/Abilities;)V a
net/minecraft/world/level/GrassColor cgv
	pixels a
	get (DD)I a
	init ([I)V a
net/minecraft/world/level/ItemLike cgw
	asItem ()Lnet/minecraft/world/item/Item; l
net/minecraft/world/level/Level cgx
	DIRECTIONS a
	END g
	LONG_PARTICLE_CLIP_RANGE i
	MAX_BRIGHTNESS k
	MAX_ENTITY_SPAWN_Y m
	MAX_LEVEL_SIZE h
	MIN_ENTITY_SPAWN_Y n
	NETHER f
	OVERWORLD e
	RESOURCE_KEY_CODEC d
	SHORT_PARTICLE_CLIP_RANGE j
	TICKS_PER_DAY l
	addend r
	biomeManager H
	blockEntityTickers o
	dimension I
	dimensionTypeId D
	dimensionTypeRegistration E
	isClientSide y
	isDebug A
	levelData x
	neighborUpdater p
	oRainLevel s
	oThunderLevel u
	pendingBlockEntityTickers b
	profiler F
	rainLevel t
	randValue q
	random w
	skyDarken B
	subTickCount J
	thread z
	threadSafeRandom C
	thunderLevel v
	tickingBlockEntities c
	worldBorder G
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V b
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V b
	addBlockEntityTicker (Lnet/minecraft/world/level/block/entity/TickingBlockEntity;)V a
	addDestroyBlockEffect (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	blockEntityChanged (Lnet/minecraft/core/BlockPos;)V p
	blockEvent (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;II)V a
	broadcastEntityEvent (Lnet/minecraft/world/entity/Entity;B)V a
	createFireworks (DDDDDDLnet/minecraft/nbt/CompoundTag;)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	dimension ()Lnet/minecraft/resources/ResourceKey; ab
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; q_
	dimensionTypeId ()Lnet/minecraft/resources/ResourceKey; Z
	dimensionTypeRegistration ()Lnet/minecraft/core/Holder; aa
	disconnect ()V T
	explode (Lnet/minecraft/world/entity/Entity;DDDFLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion; a
	explode (Lnet/minecraft/world/entity/Entity;DDDFZLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion; a
	explode (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion; a
	fillReportDetails (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReportCategory; a
	gatherChunkSourceStats ()Ljava/lang/String; G
	getBestNeighborSignal (Lnet/minecraft/core/BlockPos;)I s
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; s_
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockRandomPos (IIII)Lnet/minecraft/core/BlockPos; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (II)Lnet/minecraft/world/level/chunk/LevelChunk; d
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/LevelChunk; l
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d_
	getDayTime ()J V
	getDirectSignalTo (Lnet/minecraft/core/BlockPos;)I q
	getEntities ()Lnet/minecraft/world/level/entity/LevelEntityGetter; F
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFreeMapId ()I u
	getGameRules ()Lnet/minecraft/world/level/GameRules; W
	getGameTime ()J U
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; n_
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; l_
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; ac
	getProfilerSupplier ()Ljava/util/function/Supplier; ad
	getRainLevel (F)F d
	getRandom ()Lnet/minecraft/util/RandomSource; r_
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; q
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; H
	getSeaLevel ()I m_
	getServer ()Lnet/minecraft/server/MinecraftServer; n
	getSharedSpawnAngle ()F R
	getSharedSpawnPos ()Lnet/minecraft/core/BlockPos; Q
	getSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSkyDarken ()I o_
	getSunAngle (F)F a
	getThunderLevel (F)F b
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; p_
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	guardEntityTick (Ljava/util/function/Consumer;Lnet/minecraft/world/entity/Entity;)V a
	hasNeighborSignal (Lnet/minecraft/core/BlockPos;)Z r
	hasSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	isClientSide ()Z k_
	isDay ()Z M
	isDebug ()Z ae
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isHumidAt (Lnet/minecraft/core/BlockPos;)Z u
	isInSpawnableBounds (Lnet/minecraft/core/BlockPos;)Z k
	isInWorldBounds (Lnet/minecraft/core/BlockPos;)Z j
	isInWorldBoundsHorizontal (Lnet/minecraft/core/BlockPos;)Z F
	isLoaded (Lnet/minecraft/core/BlockPos;)Z o
	isNight ()Z N
	isOutsideSpawnableHeight (I)Z b
	isRaining ()Z Y
	isRainingAt (Lnet/minecraft/core/BlockPos;)Z t
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	isThundering ()Z X
	loadedAndEntityCanStandOn (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	loadedAndEntityCanStandOnFace (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;)Z a
	mayInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;)Z a
	neighborChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	neighborShapeChanged (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II)V a
	nextSubTickCount ()J t_
	noSave ()Z r
	onBlockStateChange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	playLocalSound (DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playSeededSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFJ)V a
	playSeededSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFJ)V a
	playSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	prepareWeather ()V S
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V n
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendPacketToServer (Lnet/minecraft/network/protocol/Packet;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	setBlockAndUpdate (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlocksDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V b
	setMapData (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setRainLevel (F)V e
	setSkyFlashTime (I)V c
	setSpawnSettings (ZZ)V b
	setThunderLevel (F)V c
	shouldTickBlocksAt (J)Z a
	shouldTickBlocksAt (Lnet/minecraft/core/BlockPos;)Z m
	shouldTickDeath (Lnet/minecraft/world/entity/Entity;)Z h
	tickBlockEntities ()V O
	updateNeighborsAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	updateNeighborsAtExceptFromFacing (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;)V a
	updateNeighbourForOutputSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V c
	updateSkyBrightness ()V P
net/minecraft/world/level/LevelAccessor cgy
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	blockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V b
	createTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;I)Lnet/minecraft/world/ticks/ScheduledTick; a
	createTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/ticks/TickPriority;)Lnet/minecraft/world/ticks/ScheduledTick; a
	dayTime ()J af
	gameEvent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;)V a
	gameEvent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;)V a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)V a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)V a
	getBlockTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; K
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; I
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d_
	getDifficulty ()Lnet/minecraft/world/Difficulty; ag
	getFluidTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; J
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; n_
	getRandom ()Lnet/minecraft/util/RandomSource; r_
	getServer ()Lnet/minecraft/server/MinecraftServer; n
	hasChunk (II)Z b
	levelEvent (ILnet/minecraft/core/BlockPos;I)V c
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	neighborShapeChanged (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II)V a
	nextSubTickCount ()J t_
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;I)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;ILnet/minecraft/world/ticks/TickPriority;)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;I)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;ILnet/minecraft/world/ticks/TickPriority;)V a
net/minecraft/world/level/LevelHeightAccessor cgz
	create (II)Lnet/minecraft/world/level/LevelHeightAccessor; e
	getHeight ()I v_
	getMaxBuildHeight ()I ah
	getMaxSection ()I ak
	getMinBuildHeight ()I u_
	getMinSection ()I aj
	getSectionIndex (I)I e
	getSectionIndexFromSectionY (I)I f
	getSectionYFromSectionIndex (I)I g
	getSectionsCount ()I ai
	isOutsideBuildHeight (I)Z d
	isOutsideBuildHeight (Lnet/minecraft/core/BlockPos;)Z v
net/minecraft/world/level/LevelReader cha
	canSeeSkyFromBelowWater (Lnet/minecraft/core/BlockPos;)Z y
	containsAnyLiquid (Lnet/minecraft/world/phys/AABB;)Z d
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; q_
	getBiome (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Holder; w
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; s_
	getBlockStatesIfLoaded (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; c
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/ChunkAccess; B
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getDirectSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I c
	getHeight ()I v_
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getLightLevelDependentMagicValue (Lnet/minecraft/core/BlockPos;)F A
	getMaxLocalRawBrightness (Lnet/minecraft/core/BlockPos;)I D
	getMaxLocalRawBrightness (Lnet/minecraft/core/BlockPos;I)I c
	getMinBuildHeight ()I u_
	getPathfindingCostFromLightLevels (Lnet/minecraft/core/BlockPos;)F z
	getSeaLevel ()I m_
	getSkyDarken ()I o_
	getUncachedNoiseBiome (III)Lnet/minecraft/core/Holder; a
	hasChunk (II)Z b
	hasChunkAt (II)Z f
	hasChunkAt (Lnet/minecraft/core/BlockPos;)Z E
	hasChunksAt (IIII)Z b
	hasChunksAt (IIIIII)Z a
	hasChunksAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Z a
	isClientSide ()Z k_
	isEmptyBlock (Lnet/minecraft/core/BlockPos;)Z x
	isWaterAt (Lnet/minecraft/core/BlockPos;)Z C
net/minecraft/world/level/LevelSettings chb
	allowCommands e
	dataPackConfig g
	difficulty d
	gameRules f
	gameType b
	hardcore c
	levelName a
	allowCommands ()Z e
	copy ()Lnet/minecraft/world/level/LevelSettings; h
	difficulty ()Lnet/minecraft/world/Difficulty; d
	gameRules ()Lnet/minecraft/world/level/GameRules; f
	gameType ()Lnet/minecraft/world/level/GameType; b
	getDataPackConfig ()Lnet/minecraft/world/level/DataPackConfig; g
	hardcore ()Z c
	levelName ()Ljava/lang/String; a
	parse (Lcom/mojang/serialization/Dynamic;Lnet/minecraft/world/level/DataPackConfig;)Lnet/minecraft/world/level/LevelSettings; a
	withDataPackConfig (Lnet/minecraft/world/level/DataPackConfig;)Lnet/minecraft/world/level/LevelSettings; a
	withDifficulty (Lnet/minecraft/world/Difficulty;)Lnet/minecraft/world/level/LevelSettings; a
	withGameType (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/LevelSettings; a
net/minecraft/world/level/LevelSimulatedRW chc
net/minecraft/world/level/LevelSimulatedReader chd
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Ljava/util/Optional; a
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
net/minecraft/world/level/LevelTimeAccess che
	dayTime ()J af
	getMoonBrightness ()F al
	getMoonPhase ()I am
	getTimeOfDay (F)F f
net/minecraft/world/level/LevelWriter chf
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z b
	destroyBlock (Lnet/minecraft/core/BlockPos;Z)Z b
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;)Z a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
net/minecraft/world/level/LightLayer chg
	$VALUES d
	BLOCK b
	SKY a
	surrounding c
	$values ()[Lnet/minecraft/world/level/LightLayer; a
net/minecraft/world/level/LocalMobCapCalculator chh
	chunkMap c
	playerMobCounts b
	playersNearChunk a
	addMob (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/MobCategory;)V a
	canSpawn (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/ChunkPos;)Z a
	getPlayersNear (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/List; a
net/minecraft/world/level/LocalMobCapCalculator$MobCounts chh$a
	counts a
	add (Lnet/minecraft/world/entity/MobCategory;)V a
	canSpawn (Lnet/minecraft/world/entity/MobCategory;)Z b
net/minecraft/world/level/NaturalSpawner chi
	LOGGER c
	MAGIC_NUMBER e
	MIN_SPAWN_DISTANCE d
	SPAWNING_CATEGORIES f
	SPAWN_DISTANCE_BLOCK b
	SPAWN_DISTANCE_CHUNK a
	canSpawnMobAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/biome/MobSpawnSettings$SpawnerData;Lnet/minecraft/core/BlockPos;)Z a
	createState (ILjava/lang/Iterable;Lnet/minecraft/world/level/NaturalSpawner$ChunkGetter;Lnet/minecraft/world/level/LocalMobCapCalculator;)Lnet/minecraft/world/level/NaturalSpawner$SpawnState; a
	getMobForSpawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/Mob; a
	getRandomPosWithin (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/core/BlockPos; a
	getRandomSpawnMobAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; a
	getRoughBiome (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/world/level/biome/Biome; a
	getTopNonCollidingPos (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/entity/EntityType;II)Lnet/minecraft/core/BlockPos; a
	isInNetherFortressBounds (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/StructureManager;)Z a
	isRightDistanceToPlayerAndSpawnPoint (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos$MutableBlockPos;D)Z a
	isSpawnPositionOk (Lnet/minecraft/world/entity/SpawnPlacements$Type;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Z a
	isValidEmptySpawnBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/entity/EntityType;)Z a
	isValidPositionForMob (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;D)Z a
	isValidSpawnPostitionForType (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/MobSpawnSettings$SpawnerData;Lnet/minecraft/core/BlockPos$MutableBlockPos;D)Z a
	mobsAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Holder;)Lnet/minecraft/util/random/WeightedRandomList; a
	spawnCategoryForChunk (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/NaturalSpawner$SpawnPredicate;Lnet/minecraft/world/level/NaturalSpawner$AfterSpawnCallback;)V a
	spawnCategoryForPosition (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	spawnCategoryForPosition (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/NaturalSpawner$SpawnPredicate;Lnet/minecraft/world/level/NaturalSpawner$AfterSpawnCallback;)V a
	spawnForChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/NaturalSpawner$SpawnState;ZZZ)V a
	spawnMobsForChunkGeneration (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/NaturalSpawner$AfterSpawnCallback chi$a
net/minecraft/world/level/NaturalSpawner$ChunkGetter chi$b
net/minecraft/world/level/NaturalSpawner$SpawnPredicate chi$c
net/minecraft/world/level/NaturalSpawner$SpawnState chi$d
	lastCharge h
	lastCheckedPos f
	lastCheckedType g
	localMobCapCalculator e
	mobCategoryCounts b
	spawnPotential c
	spawnableChunkCount a
	unmodifiableMobCategoryCounts d
	afterSpawn (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	canSpawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	canSpawnForCategory (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/ChunkPos;)Z a
	getMobCategoryCounts ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; b
	getSpawnableChunkCount ()I a
net/minecraft/world/level/NoiseColumn chj
	column b
	minY a
	getBlock (I)Lnet/minecraft/world/level/block/state/BlockState; a
	setBlock (ILnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/PathNavigationRegion chk
	allEmpty d
	centerX a
	centerZ b
	chunks c
	level e
	plains f
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/ChunkAccess; d
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; b
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getHeight ()I v_
	getMinBuildHeight ()I u_
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; a
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; p_
net/minecraft/world/level/PotentialCalculator chl
	charges a
	addCharge (Lnet/minecraft/core/BlockPos;D)V a
	getPotentialEnergyChange (Lnet/minecraft/core/BlockPos;D)D b
net/minecraft/world/level/PotentialCalculator$PointCharge chl$a
	charge b
	pos a
	getPotentialChange (Lnet/minecraft/core/BlockPos;)D a
net/minecraft/world/level/ServerLevelAccessor chm
	addFreshEntityWithPassengers (Lnet/minecraft/world/entity/Entity;)V a_
	getLevel ()Lnet/minecraft/server/level/ServerLevel; D
net/minecraft/world/level/SpawnData chn
	CODEC a
	DEFAULT_TYPE c
	LIST_CODEC b
	customSpawnRules e
	entityToSpawn d
	customSpawnRules ()Ljava/util/Optional; d
	entityToSpawn ()Lnet/minecraft/nbt/CompoundTag; c
	getCustomSpawnRules ()Ljava/util/Optional; b
	getEntityToSpawn ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/SpawnData$CustomSpawnRules chn$a
	CODEC a
	LIGHT_RANGE d
	blockLightLimit b
	skyLightLimit c
	blockLightLimit ()Lnet/minecraft/util/InclusiveRange; a
	checkLightBoundaries (Lnet/minecraft/util/InclusiveRange;)Lcom/mojang/serialization/DataResult; a
	skyLightLimit ()Lnet/minecraft/util/InclusiveRange; b
net/minecraft/world/level/StructureManager cho
	level a
	structureCheck c
	worldGenSettings b
	addReference (Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	addReferenceForStructure (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/structure/Structure;JLnet/minecraft/world/level/chunk/StructureAccess;)V a
	checkStructurePresence (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/Structure;Z)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; a
	fillStartsForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;Lit/unimi/dsi/fastutil/longs/LongSet;Ljava/util/function/Consumer;)V a
	forWorldGenRegion (Lnet/minecraft/server/level/WorldGenRegion;)Lnet/minecraft/world/level/StructureManager; a
	getAllStructuresAt (Lnet/minecraft/core/BlockPos;)Ljava/util/Map; b
	getStartForStructure (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/chunk/StructureAccess;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStructureAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStructureWithPieceAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStructureWithPieceAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStructureWithPieceAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; b
	hasAnyStructureAt (Lnet/minecraft/core/BlockPos;)Z a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; b
	setStartForStructure (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;Lnet/minecraft/world/level/chunk/StructureAccess;)V a
	shouldGenerateStructures ()Z a
	startsForStructure (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/structure/Structure;)Ljava/util/List; a
	startsForStructure (Lnet/minecraft/world/level/ChunkPos;Ljava/util/function/Predicate;)Ljava/util/List; a
	structureHasPieceAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)Z a
net/minecraft/world/level/WorldGenLevel chp
	ensureCanWrite (Lnet/minecraft/core/BlockPos;)Z e_
	getSeed ()J B
	setCurrentlyGenerating (Ljava/util/function/Supplier;)V a
net/minecraft/world/level/biome/AmbientAdditionsSettings chq
	CODEC a
	soundEvent b
	tickChance c
	getSoundEvent ()Lnet/minecraft/sounds/SoundEvent; a
	getTickChance ()D b
net/minecraft/world/level/biome/AmbientMoodSettings chr
	CODEC a
	LEGACY_CAVE_SETTINGS b
	blockSearchExtent e
	soundEvent c
	soundPositionOffset f
	tickDelay d
	getBlockSearchExtent ()I c
	getSoundEvent ()Lnet/minecraft/sounds/SoundEvent; a
	getSoundPositionOffset ()D d
	getTickDelay ()I b
net/minecraft/world/level/biome/AmbientParticleSettings chs
	CODEC a
	options b
	probability c
	canSpawn (Lnet/minecraft/util/RandomSource;)Z a
	getOptions ()Lnet/minecraft/core/particles/ParticleOptions; a
net/minecraft/world/level/biome/Biome cht
	BIOME_INFO_NOISE e
	CODEC c
	DIRECT_CODEC a
	FROZEN_TEMPERATURE_NOISE g
	LIST_CODEC d
	NETWORK_CODEC b
	TEMPERATURE_CACHE_SIZE h
	TEMPERATURE_NOISE f
	climateSettings i
	generationSettings j
	mobSettings k
	specialEffects l
	temperatureCache m
	coldEnoughToSnow (Lnet/minecraft/core/BlockPos;)Z a
	getAmbientAdditions ()Ljava/util/Optional; p
	getAmbientLoop ()Ljava/util/Optional; n
	getAmbientMood ()Ljava/util/Optional; o
	getAmbientParticle ()Ljava/util/Optional; m
	getBackgroundMusic ()Ljava/util/Optional; q
	getBaseTemperature ()F i
	getDownfall ()F h
	getFogColor ()I f
	getFoliageColor ()I g
	getFoliageColorFromTexture ()I s
	getGenerationSettings ()Lnet/minecraft/world/level/biome/BiomeGenerationSettings; e
	getGrassColor (DD)I a
	getGrassColorFromTexture ()I r
	getHeightAdjustedTemperature (Lnet/minecraft/core/BlockPos;)F e
	getMobSettings ()Lnet/minecraft/world/level/biome/MobSpawnSettings; b
	getPrecipitation ()Lnet/minecraft/world/level/biome/Biome$Precipitation; c
	getSkyColor ()I a
	getSpecialEffects ()Lnet/minecraft/world/level/biome/BiomeSpecialEffects; j
	getTemperature (Lnet/minecraft/core/BlockPos;)F f
	getWaterColor ()I k
	getWaterFogColor ()I l
	isHumid ()Z d
	shouldFreeze (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	shouldFreeze (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Z)Z a
	shouldMeltFrozenOceanIcebergSlightly (Lnet/minecraft/core/BlockPos;)Z c
	shouldSnow (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	shouldSnowGolemBurn (Lnet/minecraft/core/BlockPos;)Z d
	warmEnoughToRain (Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/biome/Biome$BiomeBuilder cht$a
	downfall d
	generationSettings g
	mobSpawnSettings f
	precipitation a
	specialEffects e
	temperature b
	temperatureModifier c
	build ()Lnet/minecraft/world/level/biome/Biome; a
	downfall (F)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; b
	generationSettings (Lnet/minecraft/world/level/biome/BiomeGenerationSettings;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	mobSpawnSettings (Lnet/minecraft/world/level/biome/MobSpawnSettings;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	precipitation (Lnet/minecraft/world/level/biome/Biome$Precipitation;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	specialEffects (Lnet/minecraft/world/level/biome/BiomeSpecialEffects;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	temperature (F)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	temperatureAdjustment (Lnet/minecraft/world/level/biome/Biome$TemperatureModifier;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
net/minecraft/world/level/biome/Biome$ClimateSettings cht$b
	CODEC a
	downfall e
	precipitation b
	temperature c
	temperatureModifier d
	downfall ()F d
	precipitation ()Lnet/minecraft/world/level/biome/Biome$Precipitation; a
	temperature ()F b
	temperatureModifier ()Lnet/minecraft/world/level/biome/Biome$TemperatureModifier; c
net/minecraft/world/level/biome/Biome$Precipitation cht$c
	$VALUES f
	CODEC d
	NONE a
	RAIN b
	SNOW c
	name e
	$values ()[Lnet/minecraft/world/level/biome/Biome$Precipitation; b
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/biome/Biome$TemperatureModifier cht$d
	$VALUES e
	CODEC c
	FROZEN b
	NONE a
	name d
	$values ()[Lnet/minecraft/world/level/biome/Biome$TemperatureModifier; b
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
	modifyTemperature (Lnet/minecraft/core/BlockPos;F)F a
net/minecraft/world/level/biome/BiomeGenerationSettings chu
	CODEC b
	EMPTY a
	LOGGER c
	carvers d
	featureSet g
	features e
	flowerFeatures f
	features ()Ljava/util/List; b
	getCarvers (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/lang/Iterable; a
	getFlowerFeatures ()Ljava/util/List; a
	hasFeature (Lnet/minecraft/world/level/levelgen/placement/PlacedFeature;)Z a
net/minecraft/world/level/biome/BiomeGenerationSettings$Builder chu$a
	carvers a
	features b
	addCarver (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
	addFeature (ILnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
	addFeature (Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
	addFeatureStepsUpTo (I)V a
	build ()Lnet/minecraft/world/level/biome/BiomeGenerationSettings; a
net/minecraft/world/level/biome/BiomeManager chv
	CHUNK_CENTER_QUART a
	ZOOM c
	ZOOM_BITS b
	ZOOM_MASK d
	biomeZoomSeed f
	noiseBiomeSource e
	getBiome (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Holder; a
	getFiddle (J)D b
	getFiddledDistance (JIIIDDD)D a
	getNoiseBiomeAtPosition (DDD)Lnet/minecraft/core/Holder; a
	getNoiseBiomeAtPosition (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Holder; b
	getNoiseBiomeAtQuart (III)Lnet/minecraft/core/Holder; a
	obfuscateSeed (J)J a
	withDifferentSource (Lnet/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource;)Lnet/minecraft/world/level/biome/BiomeManager; a
net/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource chv$a
net/minecraft/world/level/biome/BiomeResolver chw
net/minecraft/world/level/biome/BiomeSource chx
	CODEC a
	possibleBiomes b
	addDebugInfo (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Climate$Sampler;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	findBiomeHorizontal (IIIIILjava/util/function/Predicate;Lnet/minecraft/util/RandomSource;ZLnet/minecraft/world/level/biome/Climate$Sampler;)Lcom/mojang/datafixers/util/Pair; a
	findBiomeHorizontal (IIIILjava/util/function/Predicate;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/biome/Climate$Sampler;)Lcom/mojang/datafixers/util/Pair; a
	findClosestBiome3d (Lnet/minecraft/core/BlockPos;IIILjava/util/function/Predicate;Lnet/minecraft/world/level/biome/Climate$Sampler;Lnet/minecraft/world/level/LevelReader;)Lcom/mojang/datafixers/util/Pair; a
	getBiomesWithin (IIIILnet/minecraft/world/level/biome/Climate$Sampler;)Ljava/util/Set; a
	possibleBiomes ()Ljava/util/Set; b
net/minecraft/world/level/biome/BiomeSources chy
	bootstrap (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/biome/BiomeSpecialEffects chz
	CODEC a
	ambientAdditionsSettings l
	ambientLoopSoundEvent j
	ambientMoodSettings k
	ambientParticleSettings i
	backgroundMusic m
	fogColor b
	foliageColorOverride f
	grassColorModifier h
	grassColorOverride g
	skyColor e
	waterColor c
	waterFogColor d
	getAmbientAdditionsSettings ()Ljava/util/Optional; k
	getAmbientLoopSoundEvent ()Ljava/util/Optional; i
	getAmbientMoodSettings ()Ljava/util/Optional; j
	getAmbientParticleSettings ()Ljava/util/Optional; h
	getBackgroundMusic ()Ljava/util/Optional; l
	getFogColor ()I a
	getFoliageColorOverride ()Ljava/util/Optional; e
	getGrassColorModifier ()Lnet/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier; g
	getGrassColorOverride ()Ljava/util/Optional; f
	getSkyColor ()I d
	getWaterColor ()I b
	getWaterFogColor ()I c
net/minecraft/world/level/biome/BiomeSpecialEffects$Builder chz$a
	ambientAdditionsSettings k
	ambientLoopSoundEvent i
	ambientMoodSettings j
	ambientParticle h
	backgroundMusic l
	fogColor a
	foliageColorOverride e
	grassColorModifier g
	grassColorOverride f
	skyColor d
	waterColor b
	waterFogColor c
	ambientAdditionsSound (Lnet/minecraft/world/level/biome/AmbientAdditionsSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientLoopSound (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientMoodSound (Lnet/minecraft/world/level/biome/AmbientMoodSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientParticle (Lnet/minecraft/world/level/biome/AmbientParticleSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	backgroundMusic (Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	build ()Lnet/minecraft/world/level/biome/BiomeSpecialEffects; a
	fogColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	foliageColorOverride (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; e
	grassColorModifier (Lnet/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	grassColorOverride (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; f
	skyColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; d
	waterColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; b
	waterFogColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; c
net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier chz$b
	$VALUES f
	CODEC d
	DARK_FOREST b
	NONE a
	SWAMP c
	name e
	$values ()[Lnet/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier; b
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
	modifyColor (DDI)I a
net/minecraft/world/level/biome/Biomes cia
	BADLANDS A
	BAMBOO_JUNGLE z
	BASALT_DELTAS af
	BEACH L
	BIRCH_FOREST k
	COLD_OCEAN T
	CRIMSON_FOREST ad
	DARK_FOREST l
	DEEP_COLD_OCEAN U
	DEEP_DARK aa
	DEEP_FROZEN_OCEAN W
	DEEP_LUKEWARM_OCEAN Q
	DEEP_OCEAN S
	DESERT f
	DRIPSTONE_CAVES Y
	END_BARRENS ak
	END_HIGHLANDS ah
	END_MIDLANDS ai
	ERODED_BADLANDS B
	FLOWER_FOREST j
	FOREST i
	FROZEN_OCEAN V
	FROZEN_PEAKS G
	FROZEN_RIVER K
	GROVE E
	ICE_SPIKES e
	JAGGED_PEAKS H
	JUNGLE x
	LUKEWARM_OCEAN P
	LUSH_CAVES Z
	MANGROVE_SWAMP h
	MEADOW D
	MUSHROOM_FIELDS X
	NETHER_WASTES ab
	OCEAN R
	OLD_GROWTH_BIRCH_FOREST m
	OLD_GROWTH_PINE_TAIGA n
	OLD_GROWTH_SPRUCE_TAIGA o
	PLAINS b
	RIVER J
	SAVANNA r
	SAVANNA_PLATEAU s
	SMALL_END_ISLANDS aj
	SNOWY_BEACH M
	SNOWY_PLAINS d
	SNOWY_SLOPES F
	SNOWY_TAIGA q
	SOUL_SAND_VALLEY ae
	SPARSE_JUNGLE y
	STONY_PEAKS I
	STONY_SHORE N
	SUNFLOWER_PLAINS c
	SWAMP g
	TAIGA p
	THE_END ag
	THE_VOID a
	WARM_OCEAN O
	WARPED_FOREST ac
	WINDSWEPT_FOREST v
	WINDSWEPT_GRAVELLY_HILLS u
	WINDSWEPT_HILLS t
	WINDSWEPT_SAVANNA w
	WOODED_BADLANDS C
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/biome/CheckerboardColumnBiomeSource cib
	CODEC b
	allowedBiomes c
	bitShift d
	size e
	codec ()Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/biome/Climate cic
	DEBUG_SLOW_BIOME_SEARCH b
	PARAMETER_COUNT a
	QUANTIZATION_FACTOR c
	empty ()Lnet/minecraft/world/level/biome/Climate$Sampler; a
	findSpawnPosition (Ljava/util/List;Lnet/minecraft/world/level/biome/Climate$Sampler;)Lnet/minecraft/core/BlockPos; a
	parameters (FFFFFFF)Lnet/minecraft/world/level/biome/Climate$ParameterPoint; a
	parameters (Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;F)Lnet/minecraft/world/level/biome/Climate$ParameterPoint; a
	quantizeCoord (F)J a
	target (FFFFFF)Lnet/minecraft/world/level/biome/Climate$TargetPoint; a
	unquantizeCoord (J)F a
net/minecraft/world/level/biome/Climate$DistanceMetric cic$a
net/minecraft/world/level/biome/Climate$Parameter cic$b
	CODEC a
	max c
	min b
	distance (J)J a
	distance (Lnet/minecraft/world/level/biome/Climate$Parameter;)J a
	max ()J b
	min ()J a
	point (F)Lnet/minecraft/world/level/biome/Climate$Parameter; a
	span (FF)Lnet/minecraft/world/level/biome/Climate$Parameter; a
	span (Lnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/world/level/biome/Climate$Parameter; b
	span (Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/world/level/biome/Climate$Parameter; a
net/minecraft/world/level/biome/Climate$ParameterList cic$c
	index b
	values a
	findValue (Lnet/minecraft/world/level/biome/Climate$TargetPoint;)Ljava/lang/Object; a
	findValueBruteForce (Lnet/minecraft/world/level/biome/Climate$TargetPoint;)Ljava/lang/Object; b
	findValueIndex (Lnet/minecraft/world/level/biome/Climate$TargetPoint;)Ljava/lang/Object; c
	findValueIndex (Lnet/minecraft/world/level/biome/Climate$TargetPoint;Lnet/minecraft/world/level/biome/Climate$DistanceMetric;)Ljava/lang/Object; a
	values ()Ljava/util/List; a
net/minecraft/world/level/biome/Climate$ParameterPoint cic$d
	CODEC a
	continentalness d
	depth f
	erosion e
	humidity c
	offset h
	temperature b
	weirdness g
	continentalness ()Lnet/minecraft/world/level/biome/Climate$Parameter; d
	depth ()Lnet/minecraft/world/level/biome/Climate$Parameter; f
	erosion ()Lnet/minecraft/world/level/biome/Climate$Parameter; e
	fitness (Lnet/minecraft/world/level/biome/Climate$TargetPoint;)J a
	humidity ()Lnet/minecraft/world/level/biome/Climate$Parameter; c
	offset ()J h
	parameterSpace ()Ljava/util/List; a
	temperature ()Lnet/minecraft/world/level/biome/Climate$Parameter; b
	weirdness ()Lnet/minecraft/world/level/biome/Climate$Parameter; g
net/minecraft/world/level/biome/Climate$RTree cic$e
	CHILDREN_PER_NODE a
	lastResult c
	root b
	bucketize (Ljava/util/List;)Ljava/util/List; b
	build (ILjava/util/List;)Lnet/minecraft/world/level/biome/Climate$RTree$Node; a
	buildParameterSpace (Ljava/util/List;)Ljava/util/List; c
	comparator (IZ)Ljava/util/Comparator; a
	cost ([Lnet/minecraft/world/level/biome/Climate$Parameter;)J a
	create (Ljava/util/List;)Lnet/minecraft/world/level/biome/Climate$RTree; a
	search (Lnet/minecraft/world/level/biome/Climate$TargetPoint;Lnet/minecraft/world/level/biome/Climate$DistanceMetric;)Ljava/lang/Object; a
	sort (Ljava/util/List;IIZ)V a
net/minecraft/world/level/biome/Climate$RTree$Leaf cic$e$a
	value b
	search ([JLnet/minecraft/world/level/biome/Climate$RTree$Leaf;Lnet/minecraft/world/level/biome/Climate$DistanceMetric;)Lnet/minecraft/world/level/biome/Climate$RTree$Leaf; a
net/minecraft/world/level/biome/Climate$RTree$Node cic$e$b
	parameterSpace a
	distance ([J)J a
	search ([JLnet/minecraft/world/level/biome/Climate$RTree$Leaf;Lnet/minecraft/world/level/biome/Climate$DistanceMetric;)Lnet/minecraft/world/level/biome/Climate$RTree$Leaf; a
net/minecraft/world/level/biome/Climate$RTree$SubTree cic$e$c
	children b
	search ([JLnet/minecraft/world/level/biome/Climate$RTree$Leaf;Lnet/minecraft/world/level/biome/Climate$DistanceMetric;)Lnet/minecraft/world/level/biome/Climate$RTree$Leaf; a
net/minecraft/world/level/biome/Climate$Sampler cic$f
	continentalness c
	depth e
	erosion d
	humidity b
	spawnTarget g
	temperature a
	weirdness f
	continentalness ()Lnet/minecraft/world/level/levelgen/DensityFunction; d
	depth ()Lnet/minecraft/world/level/levelgen/DensityFunction; f
	erosion ()Lnet/minecraft/world/level/levelgen/DensityFunction; e
	findSpawnPosition ()Lnet/minecraft/core/BlockPos; a
	humidity ()Lnet/minecraft/world/level/levelgen/DensityFunction; c
	sample (III)Lnet/minecraft/world/level/biome/Climate$TargetPoint; a
	spawnTarget ()Ljava/util/List; h
	temperature ()Lnet/minecraft/world/level/levelgen/DensityFunction; b
	weirdness ()Lnet/minecraft/world/level/levelgen/DensityFunction; g
net/minecraft/world/level/biome/Climate$SpawnFinder cic$g
	result a
	getSpawnPositionAndFitness (Ljava/util/List;Lnet/minecraft/world/level/biome/Climate$Sampler;II)Lnet/minecraft/world/level/biome/Climate$SpawnFinder$Result; a
	radialSearch (Ljava/util/List;Lnet/minecraft/world/level/biome/Climate$Sampler;FF)V a
net/minecraft/world/level/biome/Climate$SpawnFinder$Result cic$g$a
	fitness b
	location a
	fitness ()J b
	location ()Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/biome/Climate$TargetPoint cic$h
	continentalness c
	depth e
	erosion d
	humidity b
	temperature a
	weirdness f
	continentalness ()J d
	depth ()J f
	erosion ()J e
	humidity ()J c
	temperature ()J b
	toParameterArray ()[J a
	weirdness ()J g
net/minecraft/world/level/biome/FeatureSorter cid
	buildFeaturesPerStep (Ljava/util/List;Ljava/util/function/Function;Z)Ljava/util/List; a
net/minecraft/world/level/biome/FeatureSorter$StepFeatureData cid$b
	features a
	indexMapping b
	features ()Ljava/util/List; a
	indexMapping ()Ljava/util/function/ToIntFunction; b
net/minecraft/world/level/biome/FixedBiomeSource cie
	CODEC b
	biome c
	codec ()Lcom/mojang/serialization/Codec; a
	findBiomeHorizontal (IIIIILjava/util/function/Predicate;Lnet/minecraft/util/RandomSource;ZLnet/minecraft/world/level/biome/Climate$Sampler;)Lcom/mojang/datafixers/util/Pair; a
	findClosestBiome3d (Lnet/minecraft/core/BlockPos;IIILjava/util/function/Predicate;Lnet/minecraft/world/level/biome/Climate$Sampler;Lnet/minecraft/world/level/LevelReader;)Lcom/mojang/datafixers/util/Pair; a
	getBiomesWithin (IIIILnet/minecraft/world/level/biome/Climate$Sampler;)Ljava/util/Set; a
net/minecraft/world/level/biome/MobSpawnSettings cif
	CODEC c
	DEFAULT_CREATURE_SPAWN_PROBABILITY e
	EMPTY b
	EMPTY_MOB_LIST a
	LOGGER d
	creatureGenerationProbability f
	mobSpawnCosts h
	spawners g
	getCreatureProbability ()F a
	getMobSpawnCost (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost; a
	getMobs (Lnet/minecraft/world/entity/MobCategory;)Lnet/minecraft/util/random/WeightedRandomList; a
net/minecraft/world/level/biome/MobSpawnSettings$Builder cif$a
	creatureGenerationProbability c
	mobSpawnCosts b
	spawners a
	addMobCharge (Lnet/minecraft/world/entity/EntityType;DD)Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; a
	addSpawn (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/biome/MobSpawnSettings$SpawnerData;)Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; a
	build ()Lnet/minecraft/world/level/biome/MobSpawnSettings; a
	creatureGenerationProbability (F)Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; a
net/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost cif$b
	CODEC a
	charge c
	energyBudget b
	getCharge ()D b
	getEnergyBudget ()D a
net/minecraft/world/level/biome/MobSpawnSettings$SpawnerData cif$c
	CODEC a
	maxCount d
	minCount c
	type b
net/minecraft/world/level/biome/MultiNoiseBiomeSource cig
	CODEC c
	DIRECT_CODEC b
	parameters d
	preset e
	addDebugInfo (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Climate$Sampler;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	getNoiseBiome (Lnet/minecraft/world/level/biome/Climate$TargetPoint;)Lnet/minecraft/core/Holder; a
	preset ()Ljava/util/Optional; c
	stable (Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource$Preset;)Z a
net/minecraft/world/level/biome/MultiNoiseBiomeSource$Preset cig$a
	BY_NAME c
	NETHER a
	OVERWORLD b
	name d
	parameterSource e
	biomeSource (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource; a
	biomeSource (Lnet/minecraft/core/Registry;Z)Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource; a
	biomeSource (Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource$PresetInstance;Z)Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource; a
	getPresets ()Ljava/util/stream/Stream; a
	possibleBiomes ()Ljava/util/stream/Stream; b
net/minecraft/world/level/biome/MultiNoiseBiomeSource$PresetInstance cig$b
	CODEC a
	biomes c
	preset b
	biomeSource ()Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource; a
	biomes ()Lnet/minecraft/core/Registry; c
	preset ()Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource$Preset; b
net/minecraft/world/level/biome/OverworldBiomeBuilder cih
	DEPTH_DEEP_DARK_DRYNESS_THRESHOLD n
	EROSION_DEEP_DARK_DRYNESS_THRESHOLD m
	EROSION_INDEX_1_START f
	EROSION_INDEX_2_START g
	FAR_INLAND_START e
	FROZEN_RANGE s
	FULL_RANGE o
	HIGH_END j
	HIGH_START a
	LOW_START i
	MIDDLE_BIOMES D
	MIDDLE_BIOMES_VARIANT E
	MID_INLAND_START d
	NEAR_INLAND_START c
	OCEANS C
	PEAK_END l
	PEAK_SIZE k
	PEAK_START b
	PLATEAU_BIOMES F
	PLATEAU_BIOMES_VARIANT G
	SHATTERED_BIOMES H
	UNFROZEN_RANGE t
	VALLEY_SIZE h
	coastContinentalness x
	deepOceanContinentalness v
	erosions r
	farInlandContinentalness B
	humidities q
	inlandContinentalness y
	midInlandContinentalness A
	mushroomFieldsContinentalness u
	nearInlandContinentalness z
	oceanContinentalness w
	temperatures p
	addBiomes (Ljava/util/function/Consumer;)V a
	addBottomBiome (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;FLnet/minecraft/resources/ResourceKey;)V c
	addHighSlice (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;)V b
	addInlandBiomes (Ljava/util/function/Consumer;)V c
	addLowSlice (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;)V d
	addMidSlice (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;)V c
	addOffCoastBiomes (Ljava/util/function/Consumer;)V b
	addPeaks (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;)V a
	addSurfaceBiome (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;FLnet/minecraft/resources/ResourceKey;)V a
	addUndergroundBiome (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;FLnet/minecraft/resources/ResourceKey;)V b
	addUndergroundBiomes (Ljava/util/function/Consumer;)V d
	addValleys (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;)V e
	getContinentalnessThresholds ()[Lnet/minecraft/world/level/biome/Climate$Parameter; e
	getDebugStringForContinentalness (D)Ljava/lang/String; b
	getDebugStringForErosion (D)Ljava/lang/String; c
	getDebugStringForHumidity (D)Ljava/lang/String; e
	getDebugStringForNoiseValue (D[Lnet/minecraft/world/level/biome/Climate$Parameter;)Ljava/lang/String; a
	getDebugStringForPeaksAndValleys (D)Ljava/lang/String; a
	getDebugStringForTemperature (D)Ljava/lang/String; d
	getErosionThresholds ()[Lnet/minecraft/world/level/biome/Climate$Parameter; d
	getHumidityThresholds ()[Lnet/minecraft/world/level/biome/Climate$Parameter; c
	getPeaksAndValleysThresholds ()[Lnet/minecraft/world/level/biome/Climate$Parameter; f
	getTemperatureThresholds ()[Lnet/minecraft/world/level/biome/Climate$Parameter; b
	getWeirdnessThresholds ()[Lnet/minecraft/world/level/biome/Climate$Parameter; g
	isDeepDarkRegion (DD)Z a
	maybePickWindsweptSavannaBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; a
	pickBadlandsBiome (ILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; a
	pickBeachBiome (II)Lnet/minecraft/resources/ResourceKey; a
	pickMiddleBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; a
	pickMiddleBiomeOrBadlandsIfHot (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; b
	pickMiddleBiomeOrBadlandsIfHotOrSlopeIfCold (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; c
	pickPeakBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; f
	pickPlateauBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; e
	pickShatteredBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; h
	pickShatteredCoastBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; d
	pickSlopeBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; g
	spawnTarget ()Ljava/util/List; a
net/minecraft/world/level/biome/TheEndBiomeSource cii
	CODEC b
	barrens g
	end c
	highlands d
	islands f
	midlands e
	codec ()Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/block/AbstractBannerBlock cik
	color a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
	isPossibleToRespawnInThis ()Z Y_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/AbstractCandleBlock cil
	LIGHT_PER_CANDLE a
	LIT b
	addParticlesAndSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/util/RandomSource;)V a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canBeLit (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	extinguish (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	getParticleOffsets (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/Iterable; a
	isLit (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	setLit (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Z)V a
net/minecraft/world/level/block/AbstractCauldronBlock cim
	FLOOR_LEVEL a
	INSIDE g
	LEG_DEPTH f
	LEG_HEIGHT e
	LEG_WIDTH d
	SHAPE b
	SIDE_THICKNESS c
	interactions h
	canReceiveStalactiteDrip (Lnet/minecraft/world/level/material/Fluid;)Z a
	getContentHeight (Lnet/minecraft/world/level/block/state/BlockState;)D a
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isEntityInsideContent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	isFull (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	receiveStalactiteDrip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/AbstractChestBlock cin
	blockEntityType a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
net/minecraft/world/level/block/AbstractFurnaceBlock cio
	FACING a
	LIT b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	createFurnaceTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/AbstractGlassBlock cip
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/AbstractSkullBlock ciq
	type a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getType ()Lnet/minecraft/world/level/block/SkullBlock$Type; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/AirBlock cir
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/AmethystBlock cis
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
net/minecraft/world/level/block/AmethystClusterBlock cit
	FACING b
	WATERLOGGED a
	downAabb h
	eastAabb e
	northAabb c
	southAabb d
	upAabb g
	westAabb f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/AnvilBlock ciu
	BASE b
	CONTAINER_TITLE k
	FACING a
	FALL_DAMAGE_MAX m
	FALL_DAMAGE_PER_DISTANCE l
	X_AXIS_AABB i
	X_LEG1 c
	X_LEG2 d
	X_TOP e
	Z_AXIS_AABB j
	Z_LEG1 f
	Z_LEG2 g
	Z_TOP h
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	damage (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; e
	falling (Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I d
	getFallDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; b
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onBrokenAfterFall (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/AttachedStemBlock civ
	AABBS c
	AABB_OFFSET b
	FACING a
	fruit d
	seedSupplier e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/AzaleaBlock ciw
	SHAPE b
	TREE_GROWER a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/BambooBlock cix
	AGE g
	AGE_THICK_BAMBOO n
	AGE_THIN_BAMBOO m
	COLLISION_AABB_OFFSET c
	COLLISION_SHAPE f
	LARGE_LEAVES_AABB_OFFSET b
	LARGE_SHAPE e
	LEAVES h
	MAX_HEIGHT j
	SMALL_LEAVES_AABB_OFFSET a
	SMALL_SHAPE d
	STAGE i
	STAGE_DONE_GROWING l
	STAGE_GROWING k
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getHeightAboveUpToMax (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getHeightBelowUpToMax (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	growBamboo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;I)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BambooSaplingBlock ciy
	SAPLING_AABB_OFFSET a
	SAPLING_SHAPE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	growBamboo (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BannerBlock ciz
	BY_COLOR b
	ROTATION a
	SHAPE c
	byColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/Block; a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BarrelBlock cja
	FACING a
	OPEN b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BarrierBlock cjb
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/BaseCoralFanBlock cjc
	AABB a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/BaseCoralPlantBlock cjd
	AABB_OFFSET a
	SHAPE b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/BaseCoralPlantTypeBlock cje
	AABB a
	WATERLOGGED c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	scanForWater (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z e
	tryScheduleDieTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseCoralWallFanBlock cjf
	FACING a
	SHAPES b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseEntityBlock cjg
	createTickerHelper (Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/world/level/block/entity/BlockEntityTicker;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
net/minecraft/world/level/block/BaseFireBlock cjh
	AABB_OFFSET a
	DOWN_AABB b
	SECONDS_ON_FIRE c
	fireDamage d
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canBePlacedAt (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z f
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	inPortalDimension (Lnet/minecraft/world/level/Level;)Z a
	isPortal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	spawnDestroyParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/BasePressurePlateBlock cji
	AABB b
	PRESSED_AABB a
	TOUCH_AABB c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	checkPressed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getPressedTime ()I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	isPossibleToRespawnInThis ()Z Y_
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playOffSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	playOnSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateNeighbours (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseRailBlock cjj
	FLAT_AABB a
	HALF_BLOCK_AABB b
	WATERLOGGED c
	isStraight d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; c
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isRail (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isRail (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	isStraight ()Z b
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	shouldBeRemoved (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/properties/RailShape;)Z a
	updateDir (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BeaconBeamBlock cjk
	getColor ()Lnet/minecraft/world/item/DyeColor; a
net/minecraft/world/level/block/BeaconBlock cjl
	getColor ()Lnet/minecraft/world/item/DyeColor; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BedBlock cjm
	BASE d
	EAST_SHAPE l
	HEIGHT c
	LEG_NORTH_EAST g
	LEG_NORTH_WEST e
	LEG_SOUTH_EAST h
	LEG_SOUTH_WEST f
	LEG_WIDTH m
	NORTH_SHAPE i
	OCCUPIED b
	PART a
	SOUTH_SHAPE j
	WEST_SHAPE k
	color n
	bedAboveStandUpOffsets (Lnet/minecraft/core/Direction;)[[I a
	bedStandUpOffsets (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)[[I a
	bedSurroundStandUpOffsets (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)[[I b
	bounceUp (Lnet/minecraft/world/entity/Entity;)V a
	canSetSpawn (Lnet/minecraft/world/level/Level;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	findBunkBedStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Ljava/util/Optional; a
	findStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;F)Ljava/util/Optional; a
	findStandUpPositionAtOffset (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;[[IZ)Ljava/util/Optional; a
	getBedOrientation (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction; a
	getBlockType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$BlockType; h
	getColor ()Lnet/minecraft/world/item/DyeColor; b
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; g
	getNeighbourDirection (Lnet/minecraft/world/level/block/state/properties/BedPart;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBunkBed (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	kickVillagerOutOfBed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BeehiveBlock cjn
	FACING a
	HONEY_LEVEL b
	MAX_HONEY_LEVELS c
	SHEARED_HONEYCOMB_COUNT d
	angerNearbyBees (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dropHoneycomb (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	hiveContainsBees (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z c
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	releaseBeesAndResetHoneyLevel (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)V a
	resetHoneyLevel (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	spawnFluidParticle (Lnet/minecraft/world/level/Level;DDDDD)V a
	spawnParticle (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/VoxelShape;D)V a
	trySpawnDripParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BeetrootBlock cjo
	AGE b
	MAX_AGE a
	SHAPE_BY_AGE e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAgeProperty ()Lnet/minecraft/world/level/block/state/properties/IntegerProperty; b
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; d
	getBonemealAgeIncrease (Lnet/minecraft/world/level/Level;)I a
	getMaxAge ()I c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/BellBlock cjp
	ATTACHMENT b
	BELL_BOTTOM_SHAPE h
	BELL_SHAPE i
	BELL_TOP_SHAPE g
	CEILING_SHAPE F
	EAST_WEST_BETWEEN k
	EAST_WEST_FLOOR_SHAPE f
	EVENT_BELL_RING d
	FACING a
	NORTH_SOUTH_BETWEEN j
	NORTH_SOUTH_FLOOR_SHAPE e
	POWERED c
	TO_EAST m
	TO_NORTH n
	TO_SOUTH E
	TO_WEST l
	attemptToRing (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	attemptToRing (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; n
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getVoxelShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isProperHit (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;D)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/player/Player;Z)Z a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BigDripleafBlock cjq
	DELAY_UNTIL_NEXT_TILT_STATE d
	ENTITY_DETECTION_MIN_Y g
	LEAF_SHAPES i
	LOWEST_LEAF_TOP h
	MAX_GEN_HEIGHT e
	NO_TICK c
	STEM_SHAPES k
	STEM_SLICER j
	STEM_WIDTH f
	TILT b
	WATERLOGGED a
	shapesCache l
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	canEntityTilt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	canPlaceAt (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canReplace (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/core/Direction;)Z a
	placeWithRandomHeight (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	playTiltSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;)V a
	resetTilt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	setTilt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Tilt;)V a
	setTiltAndScheduleTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Tilt;Lnet/minecraft/sounds/SoundEvent;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BigDripleafStemBlock cjr
	EAST_SHAPE c
	NORTH_SHAPE a
	SOUTH_SHAPE b
	STEM_WIDTH f
	WATERLOGGED e
	WEST_SHAPE d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/core/Direction;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BlastFurnaceBlock cjs
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/Block cjt
	BLOCK_STATE_REGISTRY o
	CACHE_SIZE g
	INDESTRUCTIBLE A
	INSTANT B
	LOGGER a
	OCCLUSION_CACHE h
	SHAPE_FULL_BLOCK_CACHE c
	UPDATE_ALL y
	UPDATE_ALL_IMMEDIATE z
	UPDATE_CLIENTS q
	UPDATE_IMMEDIATE s
	UPDATE_INVISIBLE r
	UPDATE_KNOWN_SHAPE t
	UPDATE_LIMIT C
	UPDATE_MOVE_BY_PISTON v
	UPDATE_NEIGHBORS p
	UPDATE_NONE x
	UPDATE_SUPPRESS_DROPS u
	UPDATE_SUPPRESS_LIGHT w
	builtInRegistryHolder b
	defaultBlockState d
	descriptionId e
	item f
	stateDefinition D
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	asBlock ()Lnet/minecraft/world/level/block/Block; o
	asItem ()Lnet/minecraft/world/item/Item; l
	box (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	builtInRegistryHolder ()Lnet/minecraft/core/Holder$Reference; p
	byItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/block/Block; a
	canSupportCenter (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSupportRigidBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	copyProperty (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/world/level/block/state/BlockState; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	defaultBlockState ()Lnet/minecraft/world/level/block/state/BlockState; m
	destroy (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	dropFromExplosion (Lnet/minecraft/world/level/Explosion;)Z a
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V c
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;)V a
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)V b
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getDescriptionId ()Ljava/lang/String; g
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)Ljava/util/List; a
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	getExplosionResistance ()F e
	getFriction ()F h
	getId (Lnet/minecraft/world/level/block/state/BlockState;)I i
	getJumpFactor ()F j
	getName ()Lnet/minecraft/network/chat/MutableComponent; f
	getShapeForEachState (Ljava/util/function/Function;)Lcom/google/common/collect/ImmutableMap; a
	getSoundType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/SoundType; m
	getSpeedFactor ()F i
	getStateDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; k
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	handlePrecipitation (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome$Precipitation;)V a
	hasDynamicShape ()Z n
	isExceptionForConnection (Lnet/minecraft/world/level/block/state/BlockState;)Z j
	isFaceFull (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z a
	isPossibleToRespawnInThis ()Z Y_
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isShapeFullBlock (Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	popExperience (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;I)V a
	popResource (Lnet/minecraft/world/level/Level;Ljava/util/function/Supplier;Lnet/minecraft/world/item/ItemStack;)V a
	popResource (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	popResourceFromFace (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;)V a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	pushEntitiesUp (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	registerDefaultState (Lnet/minecraft/world/level/block/state/BlockState;)V k
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	shouldRenderFace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;)Z a
	spawnDestroyParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	stateById (I)Lnet/minecraft/world/level/block/state/BlockState; a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	tryDropExperience (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/util/valueproviders/IntProvider;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
	updateFromNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	updateOrDestroy (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	updateOrDestroy (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
	withPropertiesOf (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; l
net/minecraft/world/level/block/Block$BlockStatePairKey cjt$a
	direction c
	first a
	second b
net/minecraft/world/level/block/Blocks cju
	ACACIA_BUTTON fE
	ACACIA_DOOR jf
	ACACIA_FENCE iZ
	ACACIA_FENCE_GATE iT
	ACACIA_LEAVES aw
	ACACIA_LOG S
	ACACIA_PLANKS r
	ACACIA_PRESSURE_PLATE cO
	ACACIA_SAPLING y
	ACACIA_SIGN cs
	ACACIA_SLAB iv
	ACACIA_STAIRS gQ
	ACACIA_TRAPDOOR dM
	ACACIA_WALL_SIGN cD
	ACACIA_WOOD ai
	ACTIVATOR_RAIL gi
	AIR a
	ALLIUM bH
	AMETHYST_BLOCK pe
	AMETHYST_CLUSTER pg
	ANCIENT_DEBRIS nU
	ANDESITE g
	ANDESITE_SLAB mm
	ANDESITE_STAIRS lZ
	ANDESITE_WALL my
	ANVIL fT
	ATTACHED_MELON_STEM ej
	ATTACHED_PUMPKIN_STEM ei
	AZALEA qh
	AZALEA_LEAVES az
	AZURE_BLUET bI
	BAMBOO lK
	BAMBOO_SAPLING lJ
	BARREL mF
	BARRIER gU
	BASALT di
	BEACON eV
	BEDROCK B
	BEEHIVE nQ
	BEETROOTS jp
	BEE_NEST nP
	BELL mO
	BIG_DRIPLEAF ql
	BIG_DRIPLEAF_STEM qm
	BIRCH_BUTTON fC
	BIRCH_DOOR jd
	BIRCH_FENCE iX
	BIRCH_FENCE_GATE iR
	BIRCH_LEAVES au
	BIRCH_LOG Q
	BIRCH_PLANKS p
	BIRCH_PRESSURE_PLATE cM
	BIRCH_SAPLING w
	BIRCH_SIGN cr
	BIRCH_SLAB it
	BIRCH_STAIRS eS
	BIRCH_TRAPDOOR dK
	BIRCH_WALL_SIGN cC
	BIRCH_WOOD ag
	BLACKSTONE oc
	BLACKSTONE_SLAB of
	BLACKSTONE_STAIRS od
	BLACKSTONE_WALL oe
	BLACK_BANNER hW
	BLACK_BED bb
	BLACK_CANDLE oM
	BLACK_CANDLE_CAKE pd
	BLACK_CARPET hx
	BLACK_CONCRETE kx
	BLACK_CONCRETE_POWDER kN
	BLACK_GLAZED_TERRACOTTA kh
	BLACK_SHULKER_BOX jR
	BLACK_STAINED_GLASS dH
	BLACK_STAINED_GLASS_PANE gP
	BLACK_TERRACOTTA gz
	BLACK_WALL_BANNER im
	BLACK_WOOL bC
	BLAST_FURNACE mH
	BLUE_BANNER hS
	BLUE_BED aX
	BLUE_CANDLE oI
	BLUE_CANDLE_CAKE oZ
	BLUE_CARPET ht
	BLUE_CONCRETE kt
	BLUE_CONCRETE_POWDER kJ
	BLUE_GLAZED_TERRACOTTA kd
	BLUE_ICE lH
	BLUE_ORCHID bG
	BLUE_SHULKER_BOX jN
	BLUE_STAINED_GLASS dD
	BLUE_STAINED_GLASS_PANE gL
	BLUE_TERRACOTTA gv
	BLUE_WALL_BANNER ii
	BLUE_WOOL by
	BONE_BLOCK jy
	BOOKSHELF bX
	BRAIN_CORAL li
	BRAIN_CORAL_BLOCK kY
	BRAIN_CORAL_FAN ls
	BRAIN_CORAL_WALL_FAN lC
	BREWING_STAND ez
	BRICKS bV
	BRICK_SLAB iE
	BRICK_STAIRS ep
	BRICK_WALL mq
	BROWN_BANNER hT
	BROWN_BED aY
	BROWN_CANDLE oJ
	BROWN_CANDLE_CAKE pa
	BROWN_CARPET hu
	BROWN_CONCRETE ku
	BROWN_CONCRETE_POWDER kK
	BROWN_GLAZED_TERRACOTTA ke
	BROWN_MUSHROOM bR
	BROWN_MUSHROOM_BLOCK eb
	BROWN_SHULKER_BOX jO
	BROWN_STAINED_GLASS dE
	BROWN_STAINED_GLASS_PANE gM
	BROWN_TERRACOTTA gw
	BROWN_WALL_BANNER ij
	BROWN_WOOL bz
	BUBBLE_COLUMN lO
	BUBBLE_CORAL lj
	BUBBLE_CORAL_BLOCK kZ
	BUBBLE_CORAL_FAN lt
	BUBBLE_CORAL_WALL_FAN lD
	BUDDING_AMETHYST pf
	CACTUS cZ
	CAKE dq
	CALCITE pl
	CAMPFIRE mR
	CANDLE ow
	CANDLE_CAKE oN
	CARROTS fy
	CARTOGRAPHY_TABLE mI
	CARVED_PUMPKIN do
	CAULDRON eA
	CAVE_AIR lN
	CAVE_VINES qe
	CAVE_VINES_PLANT qf
	CHAIN ef
	CHAIN_COMMAND_BLOCK jt
	CHEST cg
	CHIPPED_ANVIL fU
	CHISELED_DEEPSLATE qI
	CHISELED_NETHER_BRICKS ot
	CHISELED_POLISHED_BLACKSTONE oj
	CHISELED_QUARTZ_BLOCK gf
	CHISELED_RED_SANDSTONE io
	CHISELED_SANDSTONE aJ
	CHISELED_STONE_BRICKS dS
	CHORUS_FLOWER jk
	CHORUS_PLANT jj
	CLAY da
	COAL_BLOCK hz
	COAL_ORE L
	COARSE_DIRT k
	COBBLED_DEEPSLATE qs
	COBBLED_DEEPSLATE_SLAB qu
	COBBLED_DEEPSLATE_STAIRS qt
	COBBLED_DEEPSLATE_WALL qv
	COBBLESTONE m
	COBBLESTONE_SLAB iD
	COBBLESTONE_STAIRS cz
	COBBLESTONE_WALL eW
	COBWEB bf
	COCOA eJ
	COMMAND_BLOCK eU
	COMPARATOR fZ
	COMPOSTER nN
	CONDUIT lI
	COPPER_BLOCK pw
	COPPER_ORE px
	CORNFLOWER bO
	CRACKED_DEEPSLATE_BRICKS qJ
	CRACKED_DEEPSLATE_TILES qK
	CRACKED_NETHER_BRICKS ou
	CRACKED_POLISHED_BLACKSTONE_BRICKS oi
	CRACKED_STONE_BRICKS dR
	CRAFTING_TABLE cl
	CREEPER_HEAD fP
	CREEPER_WALL_HEAD fQ
	CRIMSON_BUTTON nD
	CRIMSON_DOOR nF
	CRIMSON_FENCE nv
	CRIMSON_FENCE_GATE nz
	CRIMSON_FUNGUS ni
	CRIMSON_HYPHAE nf
	CRIMSON_NYLIUM nh
	CRIMSON_PLANKS np
	CRIMSON_PRESSURE_PLATE nt
	CRIMSON_ROOTS no
	CRIMSON_SIGN nH
	CRIMSON_SLAB nr
	CRIMSON_STAIRS nB
	CRIMSON_STEM nd
	CRIMSON_TRAPDOOR nx
	CRIMSON_WALL_SIGN nJ
	CRYING_OBSIDIAN nV
	CUT_COPPER pC
	CUT_COPPER_SLAB pK
	CUT_COPPER_STAIRS pG
	CUT_RED_SANDSTONE ip
	CUT_RED_SANDSTONE_SLAB iK
	CUT_SANDSTONE aK
	CUT_SANDSTONE_SLAB iB
	CYAN_BANNER hQ
	CYAN_BED aV
	CYAN_CANDLE oG
	CYAN_CANDLE_CAKE oX
	CYAN_CARPET hr
	CYAN_CONCRETE kr
	CYAN_CONCRETE_POWDER kH
	CYAN_GLAZED_TERRACOTTA kb
	CYAN_SHULKER_BOX jL
	CYAN_STAINED_GLASS dB
	CYAN_STAINED_GLASS_PANE gJ
	CYAN_TERRACOTTA gt
	CYAN_WALL_BANNER ig
	CYAN_WOOL bw
	DAMAGED_ANVIL fV
	DANDELION bE
	DARK_OAK_BUTTON fF
	DARK_OAK_DOOR jg
	DARK_OAK_FENCE ja
	DARK_OAK_FENCE_GATE iU
	DARK_OAK_LEAVES ax
	DARK_OAK_LOG T
	DARK_OAK_PLANKS s
	DARK_OAK_PRESSURE_PLATE cP
	DARK_OAK_SAPLING z
	DARK_OAK_SIGN cu
	DARK_OAK_SLAB iw
	DARK_OAK_STAIRS gR
	DARK_OAK_TRAPDOOR dN
	DARK_OAK_WALL_SIGN cF
	DARK_OAK_WOOD aj
	DARK_PRISMARINE gZ
	DARK_PRISMARINE_SLAB hf
	DARK_PRISMARINE_STAIRS hc
	DAYLIGHT_DETECTOR ga
	DEAD_BRAIN_CORAL ld
	DEAD_BRAIN_CORAL_BLOCK kT
	DEAD_BRAIN_CORAL_FAN ln
	DEAD_BRAIN_CORAL_WALL_FAN lx
	DEAD_BUBBLE_CORAL le
	DEAD_BUBBLE_CORAL_BLOCK kU
	DEAD_BUBBLE_CORAL_FAN lo
	DEAD_BUBBLE_CORAL_WALL_FAN ly
	DEAD_BUSH bi
	DEAD_FIRE_CORAL lf
	DEAD_FIRE_CORAL_BLOCK kV
	DEAD_FIRE_CORAL_FAN lp
	DEAD_FIRE_CORAL_WALL_FAN lz
	DEAD_HORN_CORAL lg
	DEAD_HORN_CORAL_BLOCK kW
	DEAD_HORN_CORAL_FAN lq
	DEAD_HORN_CORAL_WALL_FAN lA
	DEAD_TUBE_CORAL lc
	DEAD_TUBE_CORAL_BLOCK kS
	DEAD_TUBE_CORAL_FAN lm
	DEAD_TUBE_CORAL_WALL_FAN lw
	DEEPSLATE qr
	DEEPSLATE_BRICKS qE
	DEEPSLATE_BRICK_SLAB qG
	DEEPSLATE_BRICK_STAIRS qF
	DEEPSLATE_BRICK_WALL qH
	DEEPSLATE_COAL_ORE M
	DEEPSLATE_COPPER_ORE py
	DEEPSLATE_DIAMOND_ORE cj
	DEEPSLATE_EMERALD_ORE eM
	DEEPSLATE_GOLD_ORE I
	DEEPSLATE_IRON_ORE K
	DEEPSLATE_LAPIS_ORE aF
	DEEPSLATE_REDSTONE_ORE cS
	DEEPSLATE_TILES qA
	DEEPSLATE_TILE_SLAB qC
	DEEPSLATE_TILE_STAIRS qB
	DEEPSLATE_TILE_WALL qD
	DETECTOR_RAIL bd
	DIAMOND_BLOCK ck
	DIAMOND_ORE ci
	DIORITE e
	DIORITE_SLAB mp
	DIORITE_STAIRS mc
	DIORITE_WALL mC
	DIRT j
	DIRT_PATH jq
	DISPENSER aH
	DRAGON_EGG eH
	DRAGON_HEAD fR
	DRAGON_WALL_HEAD fS
	DRIED_KELP_BLOCK kQ
	DRIPSTONE_BLOCK qd
	DROPPER gj
	EMERALD_BLOCK eQ
	EMERALD_ORE eL
	ENCHANTING_TABLE ey
	ENDER_CHEST eN
	END_GATEWAY jr
	END_PORTAL eE
	END_PORTAL_FRAME eF
	END_ROD ji
	END_STONE eG
	END_STONE_BRICKS jo
	END_STONE_BRICK_SLAB mi
	END_STONE_BRICK_STAIRS lU
	END_STONE_BRICK_WALL mB
	EXPOSED_COPPER pv
	EXPOSED_CUT_COPPER pB
	EXPOSED_CUT_COPPER_SLAB pJ
	EXPOSED_CUT_COPPER_STAIRS pF
	FARMLAND cn
	FERN bh
	FIRE cc
	FIRE_CORAL lk
	FIRE_CORAL_BLOCK la
	FIRE_CORAL_FAN lu
	FIRE_CORAL_WALL_FAN lE
	FLETCHING_TABLE mJ
	FLOWERING_AZALEA qi
	FLOWERING_AZALEA_LEAVES aA
	FLOWER_POT eY
	FROGSPAWN qV
	FROSTED_ICE ju
	FURNACE co
	GILDED_BLACKSTONE on
	GLASS aD
	GLASS_PANE eg
	GLOWSTONE dm
	GLOW_LICHEN en
	GOLD_BLOCK bT
	GOLD_ORE H
	GRANITE c
	GRANITE_SLAB ml
	GRANITE_STAIRS lY
	GRANITE_WALL mu
	GRASS bg
	GRASS_BLOCK i
	GRAVEL G
	GRAY_BANNER hO
	GRAY_BED aT
	GRAY_CANDLE oE
	GRAY_CANDLE_CAKE oV
	GRAY_CARPET hp
	GRAY_CONCRETE kp
	GRAY_CONCRETE_POWDER kF
	GRAY_GLAZED_TERRACOTTA jZ
	GRAY_SHULKER_BOX jJ
	GRAY_STAINED_GLASS dz
	GRAY_STAINED_GLASS_PANE gH
	GRAY_TERRACOTTA gr
	GRAY_WALL_BANNER ie
	GRAY_WOOL bu
	GREEN_BANNER hU
	GREEN_BED aZ
	GREEN_CANDLE oK
	GREEN_CANDLE_CAKE pb
	GREEN_CARPET hv
	GREEN_CONCRETE kv
	GREEN_CONCRETE_POWDER kL
	GREEN_GLAZED_TERRACOTTA kf
	GREEN_SHULKER_BOX jP
	GREEN_STAINED_GLASS dF
	GREEN_STAINED_GLASS_PANE gN
	GREEN_TERRACOTTA gx
	GREEN_WALL_BANNER ik
	GREEN_WOOL bA
	GRINDSTONE mK
	HANGING_ROOTS qo
	HAY_BLOCK hh
	HEAVY_WEIGHTED_PRESSURE_PLATE fY
	HONEYCOMB_BLOCK nS
	HONEY_BLOCK nR
	HOPPER gd
	HORN_CORAL ll
	HORN_CORAL_BLOCK lb
	HORN_CORAL_FAN lv
	HORN_CORAL_WALL_FAN lF
	ICE cX
	INFESTED_CHISELED_STONE_BRICKS ea
	INFESTED_COBBLESTONE dW
	INFESTED_CRACKED_STONE_BRICKS dZ
	INFESTED_DEEPSLATE qL
	INFESTED_MOSSY_STONE_BRICKS dY
	INFESTED_STONE dV
	INFESTED_STONE_BRICKS dX
	IRON_BARS ee
	IRON_BLOCK bU
	IRON_DOOR cJ
	IRON_ORE J
	IRON_TRAPDOOR gW
	JACK_O_LANTERN dp
	JIGSAW nM
	JUKEBOX dc
	JUNGLE_BUTTON fD
	JUNGLE_DOOR je
	JUNGLE_FENCE iY
	JUNGLE_FENCE_GATE iS
	JUNGLE_LEAVES av
	JUNGLE_LOG R
	JUNGLE_PLANKS q
	JUNGLE_PRESSURE_PLATE cN
	JUNGLE_SAPLING x
	JUNGLE_SIGN ct
	JUNGLE_SLAB iu
	JUNGLE_STAIRS eT
	JUNGLE_TRAPDOOR dL
	JUNGLE_WALL_SIGN cE
	JUNGLE_WOOD ah
	KELP kO
	KELP_PLANT kP
	LADDER cx
	LANTERN mP
	LAPIS_BLOCK aG
	LAPIS_ORE aE
	LARGE_AMETHYST_BUD ph
	LARGE_FERN hG
	LAVA D
	LAVA_CAULDRON eC
	LECTERN mL
	LEVER cH
	LIGHT gV
	LIGHTNING_ROD qb
	LIGHT_BLUE_BANNER hK
	LIGHT_BLUE_BED aP
	LIGHT_BLUE_CANDLE oA
	LIGHT_BLUE_CANDLE_CAKE oR
	LIGHT_BLUE_CARPET hl
	LIGHT_BLUE_CONCRETE kl
	LIGHT_BLUE_CONCRETE_POWDER kB
	LIGHT_BLUE_GLAZED_TERRACOTTA jV
	LIGHT_BLUE_SHULKER_BOX jF
	LIGHT_BLUE_STAINED_GLASS dv
	LIGHT_BLUE_STAINED_GLASS_PANE gD
	LIGHT_BLUE_TERRACOTTA gn
	LIGHT_BLUE_WALL_BANNER ia
	LIGHT_BLUE_WOOL bq
	LIGHT_GRAY_BANNER hP
	LIGHT_GRAY_BED aU
	LIGHT_GRAY_CANDLE oF
	LIGHT_GRAY_CANDLE_CAKE oW
	LIGHT_GRAY_CARPET hq
	LIGHT_GRAY_CONCRETE kq
	LIGHT_GRAY_CONCRETE_POWDER kG
	LIGHT_GRAY_GLAZED_TERRACOTTA ka
	LIGHT_GRAY_SHULKER_BOX jK
	LIGHT_GRAY_STAINED_GLASS dA
	LIGHT_GRAY_STAINED_GLASS_PANE gI
	LIGHT_GRAY_TERRACOTTA gs
	LIGHT_GRAY_WALL_BANNER if
	LIGHT_GRAY_WOOL bv
	LIGHT_WEIGHTED_PRESSURE_PLATE fX
	LILAC hC
	LILY_OF_THE_VALLEY bQ
	LILY_PAD et
	LIME_BANNER hM
	LIME_BED aR
	LIME_CANDLE oC
	LIME_CANDLE_CAKE oT
	LIME_CARPET hn
	LIME_CONCRETE kn
	LIME_CONCRETE_POWDER kD
	LIME_GLAZED_TERRACOTTA jX
	LIME_SHULKER_BOX jH
	LIME_STAINED_GLASS dx
	LIME_STAINED_GLASS_PANE gF
	LIME_TERRACOTTA gp
	LIME_WALL_BANNER ic
	LIME_WOOL bs
	LODESTONE ob
	LOOM mE
	MAGENTA_BANNER hJ
	MAGENTA_BED aO
	MAGENTA_CANDLE oz
	MAGENTA_CANDLE_CAKE oQ
	MAGENTA_CARPET hk
	MAGENTA_CONCRETE kk
	MAGENTA_CONCRETE_POWDER kA
	MAGENTA_GLAZED_TERRACOTTA jU
	MAGENTA_SHULKER_BOX jE
	MAGENTA_STAINED_GLASS du
	MAGENTA_STAINED_GLASS_PANE gC
	MAGENTA_TERRACOTTA gm
	MAGENTA_WALL_BANNER hZ
	MAGENTA_WOOL bp
	MAGMA_BLOCK jv
	MANGROVE_BUTTON fG
	MANGROVE_DOOR jh
	MANGROVE_FENCE jb
	MANGROVE_FENCE_GATE iV
	MANGROVE_LEAVES ay
	MANGROVE_LOG U
	MANGROVE_PLANKS t
	MANGROVE_PRESSURE_PLATE cQ
	MANGROVE_PROPAGULE A
	MANGROVE_ROOTS V
	MANGROVE_SIGN cv
	MANGROVE_SLAB ix
	MANGROVE_STAIRS gS
	MANGROVE_TRAPDOOR dO
	MANGROVE_WALL_SIGN cG
	MANGROVE_WOOD ak
	MEDIUM_AMETHYST_BUD pi
	MELON eh
	MELON_STEM el
	MOSSY_COBBLESTONE bY
	MOSSY_COBBLESTONE_SLAB mh
	MOSSY_COBBLESTONE_STAIRS lT
	MOSSY_COBBLESTONE_WALL eX
	MOSSY_STONE_BRICKS dQ
	MOSSY_STONE_BRICK_SLAB mf
	MOSSY_STONE_BRICK_STAIRS lR
	MOSSY_STONE_BRICK_WALL mt
	MOSS_BLOCK qk
	MOSS_CARPET qj
	MOVING_PISTON bD
	MUD qq
	MUDDY_MANGROVE_ROOTS W
	MUD_BRICKS dU
	MUD_BRICK_SLAB iG
	MUD_BRICK_STAIRS er
	MUD_BRICK_WALL mw
	MUSHROOM_STEM ed
	MYCELIUM es
	NETHERITE_BLOCK nT
	NETHERRACK df
	NETHER_BRICKS eu
	NETHER_BRICK_FENCE ev
	NETHER_BRICK_SLAB iH
	NETHER_BRICK_STAIRS ew
	NETHER_BRICK_WALL mx
	NETHER_GOLD_ORE N
	NETHER_PORTAL dn
	NETHER_QUARTZ_ORE gc
	NETHER_SPROUTS nc
	NETHER_WART ex
	NETHER_WART_BLOCK jw
	NOTE_BLOCK aL
	OAK_BUTTON fA
	OAK_DOOR cw
	OAK_FENCE dd
	OAK_FENCE_GATE eo
	OAK_LEAVES as
	OAK_LOG O
	OAK_PLANKS n
	OAK_PRESSURE_PLATE cK
	OAK_SAPLING u
	OAK_SIGN cp
	OAK_SLAB ir
	OAK_STAIRS cf
	OAK_TRAPDOOR dI
	OAK_WALL_SIGN cA
	OAK_WOOD ae
	OBSERVER jA
	OBSIDIAN bZ
	OCHRE_FROGLIGHT qS
	ORANGE_BANNER hI
	ORANGE_BED aN
	ORANGE_CANDLE oy
	ORANGE_CANDLE_CAKE oP
	ORANGE_CARPET hj
	ORANGE_CONCRETE kj
	ORANGE_CONCRETE_POWDER kz
	ORANGE_GLAZED_TERRACOTTA jT
	ORANGE_SHULKER_BOX jD
	ORANGE_STAINED_GLASS dt
	ORANGE_STAINED_GLASS_PANE gB
	ORANGE_TERRACOTTA gl
	ORANGE_TULIP bK
	ORANGE_WALL_BANNER hY
	ORANGE_WOOL bo
	OXEYE_DAISY bN
	OXIDIZED_COPPER pt
	OXIDIZED_CUT_COPPER pz
	OXIDIZED_CUT_COPPER_SLAB pH
	OXIDIZED_CUT_COPPER_STAIRS pD
	PACKED_ICE hA
	PACKED_MUD dT
	PEARLESCENT_FROGLIGHT qU
	PEONY hE
	PETRIFIED_OAK_SLAB iC
	PINK_BANNER hN
	PINK_BED aS
	PINK_CANDLE oD
	PINK_CANDLE_CAKE oU
	PINK_CARPET ho
	PINK_CONCRETE ko
	PINK_CONCRETE_POWDER kE
	PINK_GLAZED_TERRACOTTA jY
	PINK_SHULKER_BOX jI
	PINK_STAINED_GLASS dy
	PINK_STAINED_GLASS_PANE gG
	PINK_TERRACOTTA gq
	PINK_TULIP bM
	PINK_WALL_BANNER id
	PINK_WOOL bt
	PISTON bl
	PISTON_HEAD bm
	PLAYER_HEAD fN
	PLAYER_WALL_HEAD fO
	PODZOL l
	POINTED_DRIPSTONE qc
	POLISHED_ANDESITE h
	POLISHED_ANDESITE_SLAB mo
	POLISHED_ANDESITE_STAIRS mb
	POLISHED_BASALT dj
	POLISHED_BLACKSTONE og
	POLISHED_BLACKSTONE_BRICKS oh
	POLISHED_BLACKSTONE_BRICK_SLAB ok
	POLISHED_BLACKSTONE_BRICK_STAIRS ol
	POLISHED_BLACKSTONE_BRICK_WALL om
	POLISHED_BLACKSTONE_BUTTON or
	POLISHED_BLACKSTONE_PRESSURE_PLATE oq
	POLISHED_BLACKSTONE_SLAB op
	POLISHED_BLACKSTONE_STAIRS oo
	POLISHED_BLACKSTONE_WALL os
	POLISHED_DEEPSLATE qw
	POLISHED_DEEPSLATE_SLAB qy
	POLISHED_DEEPSLATE_STAIRS qx
	POLISHED_DEEPSLATE_WALL qz
	POLISHED_DIORITE f
	POLISHED_DIORITE_SLAB mg
	POLISHED_DIORITE_STAIRS lS
	POLISHED_GRANITE d
	POLISHED_GRANITE_SLAB md
	POLISHED_GRANITE_STAIRS lP
	POPPY bF
	POTATOES fz
	POTTED_ACACIA_SAPLING fd
	POTTED_ALLIUM fk
	POTTED_AZALEA qQ
	POTTED_AZURE_BLUET fl
	POTTED_BAMBOO lL
	POTTED_BIRCH_SAPLING fb
	POTTED_BLUE_ORCHID fj
	POTTED_BROWN_MUSHROOM fv
	POTTED_CACTUS fx
	POTTED_CORNFLOWER fr
	POTTED_CRIMSON_FUNGUS nX
	POTTED_CRIMSON_ROOTS nZ
	POTTED_DANDELION fh
	POTTED_DARK_OAK_SAPLING fe
	POTTED_DEAD_BUSH fw
	POTTED_FERN fg
	POTTED_FLOWERING_AZALEA qR
	POTTED_JUNGLE_SAPLING fc
	POTTED_LILY_OF_THE_VALLEY fs
	POTTED_MANGROVE_PROPAGULE ff
	POTTED_OAK_SAPLING eZ
	POTTED_ORANGE_TULIP fn
	POTTED_OXEYE_DAISY fq
	POTTED_PINK_TULIP fp
	POTTED_POPPY fi
	POTTED_RED_MUSHROOM fu
	POTTED_RED_TULIP fm
	POTTED_SPRUCE_SAPLING fa
	POTTED_WARPED_FUNGUS nY
	POTTED_WARPED_ROOTS oa
	POTTED_WHITE_TULIP fo
	POTTED_WITHER_ROSE ft
	POWDER_SNOW pn
	POWDER_SNOW_CAULDRON eD
	POWERED_RAIL bc
	PRISMARINE gX
	PRISMARINE_BRICKS gY
	PRISMARINE_BRICK_SLAB he
	PRISMARINE_BRICK_STAIRS hb
	PRISMARINE_SLAB hd
	PRISMARINE_STAIRS ha
	PRISMARINE_WALL mr
	PUMPKIN de
	PUMPKIN_STEM ek
	PURPLE_BANNER hR
	PURPLE_BED aW
	PURPLE_CANDLE oH
	PURPLE_CANDLE_CAKE oY
	PURPLE_CARPET hs
	PURPLE_CONCRETE ks
	PURPLE_CONCRETE_POWDER kI
	PURPLE_GLAZED_TERRACOTTA kc
	PURPLE_SHULKER_BOX jM
	PURPLE_STAINED_GLASS dC
	PURPLE_STAINED_GLASS_PANE gK
	PURPLE_TERRACOTTA gu
	PURPLE_WALL_BANNER ih
	PURPLE_WOOL bx
	PURPUR_BLOCK jl
	PURPUR_PILLAR jm
	PURPUR_SLAB iL
	PURPUR_STAIRS jn
	QUARTZ_BLOCK ge
	QUARTZ_BRICKS ov
	QUARTZ_PILLAR gg
	QUARTZ_SLAB iI
	QUARTZ_STAIRS gh
	RAIL cy
	RAW_COPPER_BLOCK qO
	RAW_GOLD_BLOCK qP
	RAW_IRON_BLOCK qN
	REDSTONE_BLOCK gb
	REDSTONE_LAMP eI
	REDSTONE_ORE cR
	REDSTONE_TORCH cT
	REDSTONE_WALL_TORCH cU
	REDSTONE_WIRE ch
	RED_BANNER hV
	RED_BED ba
	RED_CANDLE oL
	RED_CANDLE_CAKE pc
	RED_CARPET hw
	RED_CONCRETE kw
	RED_CONCRETE_POWDER kM
	RED_GLAZED_TERRACOTTA kg
	RED_MUSHROOM bS
	RED_MUSHROOM_BLOCK ec
	RED_NETHER_BRICKS jx
	RED_NETHER_BRICK_SLAB mn
	RED_NETHER_BRICK_STAIRS ma
	RED_NETHER_BRICK_WALL mz
	RED_SAND F
	RED_SANDSTONE in
	RED_SANDSTONE_SLAB iJ
	RED_SANDSTONE_STAIRS iq
	RED_SANDSTONE_WALL ms
	RED_SHULKER_BOX jQ
	RED_STAINED_GLASS dG
	RED_STAINED_GLASS_PANE gO
	RED_TERRACOTTA gy
	RED_TULIP bJ
	RED_WALL_BANNER il
	RED_WOOL bB
	REINFORCED_DEEPSLATE qW
	REPEATER dr
	REPEATING_COMMAND_BLOCK js
	RESPAWN_ANCHOR nW
	ROOTED_DIRT qp
	ROSE_BUSH hD
	SAND E
	SANDSTONE aI
	SANDSTONE_SLAB iA
	SANDSTONE_STAIRS eK
	SANDSTONE_WALL mA
	SCAFFOLDING mD
	SCULK pp
	SCULK_CATALYST pr
	SCULK_SENSOR po
	SCULK_SHRIEKER ps
	SCULK_VEIN pq
	SEAGRASS bj
	SEA_LANTERN hg
	SEA_PICKLE lG
	SHROOMLIGHT nj
	SHULKER_BOX jB
	SKELETON_SKULL fH
	SKELETON_WALL_SKULL fI
	SLIME_BLOCK gT
	SMALL_AMETHYST_BUD pj
	SMALL_DRIPLEAF qn
	SMITHING_TABLE mM
	SMOKER mG
	SMOOTH_BASALT qM
	SMOOTH_QUARTZ iO
	SMOOTH_QUARTZ_SLAB mk
	SMOOTH_QUARTZ_STAIRS lX
	SMOOTH_RED_SANDSTONE iP
	SMOOTH_RED_SANDSTONE_SLAB me
	SMOOTH_RED_SANDSTONE_STAIRS lQ
	SMOOTH_SANDSTONE iN
	SMOOTH_SANDSTONE_SLAB mj
	SMOOTH_SANDSTONE_STAIRS lW
	SMOOTH_STONE iM
	SMOOTH_STONE_SLAB iz
	SNOW cW
	SNOW_BLOCK cY
	SOUL_CAMPFIRE mS
	SOUL_FIRE cd
	SOUL_LANTERN mQ
	SOUL_SAND dg
	SOUL_SOIL dh
	SOUL_TORCH dk
	SOUL_WALL_TORCH dl
	SPAWNER ce
	SPONGE aB
	SPORE_BLOSSOM qg
	SPRUCE_BUTTON fB
	SPRUCE_DOOR jc
	SPRUCE_FENCE iW
	SPRUCE_FENCE_GATE iQ
	SPRUCE_LEAVES at
	SPRUCE_LOG P
	SPRUCE_PLANKS o
	SPRUCE_PRESSURE_PLATE cL
	SPRUCE_SAPLING v
	SPRUCE_SIGN cq
	SPRUCE_SLAB is
	SPRUCE_STAIRS eR
	SPRUCE_TRAPDOOR dJ
	SPRUCE_WALL_SIGN cB
	SPRUCE_WOOD af
	STICKY_PISTON be
	STONE b
	STONECUTTER mN
	STONE_BRICKS dP
	STONE_BRICK_SLAB iF
	STONE_BRICK_STAIRS eq
	STONE_BRICK_WALL mv
	STONE_BUTTON cV
	STONE_PRESSURE_PLATE cI
	STONE_SLAB iy
	STONE_STAIRS lV
	STRIPPED_ACACIA_LOG aa
	STRIPPED_ACACIA_WOOD ap
	STRIPPED_BIRCH_LOG Y
	STRIPPED_BIRCH_WOOD an
	STRIPPED_CRIMSON_HYPHAE ng
	STRIPPED_CRIMSON_STEM ne
	STRIPPED_DARK_OAK_LOG ab
	STRIPPED_DARK_OAK_WOOD aq
	STRIPPED_JUNGLE_LOG Z
	STRIPPED_JUNGLE_WOOD ao
	STRIPPED_MANGROVE_LOG ad
	STRIPPED_MANGROVE_WOOD ar
	STRIPPED_OAK_LOG ac
	STRIPPED_OAK_WOOD al
	STRIPPED_SPRUCE_LOG X
	STRIPPED_SPRUCE_WOOD am
	STRIPPED_WARPED_HYPHAE mX
	STRIPPED_WARPED_STEM mV
	STRUCTURE_BLOCK nL
	STRUCTURE_VOID jz
	SUGAR_CANE db
	SUNFLOWER hB
	SWEET_BERRY_BUSH mT
	TALL_GRASS hF
	TALL_SEAGRASS bk
	TARGET nO
	TERRACOTTA hy
	TINTED_GLASS pm
	TNT bW
	TORCH ca
	TRAPPED_CHEST fW
	TRIPWIRE eP
	TRIPWIRE_HOOK eO
	TUBE_CORAL lh
	TUBE_CORAL_BLOCK kX
	TUBE_CORAL_FAN lr
	TUBE_CORAL_WALL_FAN lB
	TUFF pk
	TURTLE_EGG kR
	TWISTING_VINES nm
	TWISTING_VINES_PLANT nn
	VERDANT_FROGLIGHT qT
	VINE em
	VOID_AIR lM
	WALL_TORCH cb
	WARPED_BUTTON nE
	WARPED_DOOR nG
	WARPED_FENCE nw
	WARPED_FENCE_GATE nA
	WARPED_FUNGUS mZ
	WARPED_HYPHAE mW
	WARPED_NYLIUM mY
	WARPED_PLANKS nq
	WARPED_PRESSURE_PLATE nu
	WARPED_ROOTS nb
	WARPED_SIGN nI
	WARPED_SLAB ns
	WARPED_STAIRS nC
	WARPED_STEM mU
	WARPED_TRAPDOOR ny
	WARPED_WALL_SIGN nK
	WARPED_WART_BLOCK na
	WATER C
	WATER_CAULDRON eB
	WAXED_COPPER_BLOCK pL
	WAXED_CUT_COPPER pS
	WAXED_CUT_COPPER_SLAB qa
	WAXED_CUT_COPPER_STAIRS pW
	WAXED_EXPOSED_COPPER pN
	WAXED_EXPOSED_CUT_COPPER pR
	WAXED_EXPOSED_CUT_COPPER_SLAB pZ
	WAXED_EXPOSED_CUT_COPPER_STAIRS pV
	WAXED_OXIDIZED_COPPER pO
	WAXED_OXIDIZED_CUT_COPPER pP
	WAXED_OXIDIZED_CUT_COPPER_SLAB pX
	WAXED_OXIDIZED_CUT_COPPER_STAIRS pT
	WAXED_WEATHERED_COPPER pM
	WAXED_WEATHERED_CUT_COPPER pQ
	WAXED_WEATHERED_CUT_COPPER_SLAB pY
	WAXED_WEATHERED_CUT_COPPER_STAIRS pU
	WEATHERED_COPPER pu
	WEATHERED_CUT_COPPER pA
	WEATHERED_CUT_COPPER_SLAB pI
	WEATHERED_CUT_COPPER_STAIRS pE
	WEEPING_VINES nk
	WEEPING_VINES_PLANT nl
	WET_SPONGE aC
	WHEAT cm
	WHITE_BANNER hH
	WHITE_BED aM
	WHITE_CANDLE ox
	WHITE_CANDLE_CAKE oO
	WHITE_CARPET hi
	WHITE_CONCRETE ki
	WHITE_CONCRETE_POWDER ky
	WHITE_GLAZED_TERRACOTTA jS
	WHITE_SHULKER_BOX jC
	WHITE_STAINED_GLASS ds
	WHITE_STAINED_GLASS_PANE gA
	WHITE_TERRACOTTA gk
	WHITE_TULIP bL
	WHITE_WALL_BANNER hX
	WHITE_WOOL bn
	WITHER_ROSE bP
	WITHER_SKELETON_SKULL fJ
	WITHER_SKELETON_WALL_SKULL fK
	YELLOW_BANNER hL
	YELLOW_BED aQ
	YELLOW_CANDLE oB
	YELLOW_CANDLE_CAKE oS
	YELLOW_CARPET hm
	YELLOW_CONCRETE km
	YELLOW_CONCRETE_POWDER kC
	YELLOW_GLAZED_TERRACOTTA jW
	YELLOW_SHULKER_BOX jG
	YELLOW_STAINED_GLASS dw
	YELLOW_STAINED_GLASS_PANE gE
	YELLOW_TERRACOTTA go
	YELLOW_WALL_BANNER ib
	YELLOW_WOOL br
	ZOMBIE_HEAD fL
	ZOMBIE_WALL_HEAD fM
	always (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	always (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; b
	bed (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/BedBlock; a
	leaves (Lnet/minecraft/world/level/block/SoundType;)Lnet/minecraft/world/level/block/LeavesBlock; a
	litBlockEmission (I)Ljava/util/function/ToIntFunction; a
	log (Lnet/minecraft/world/level/material/MaterialColor;Lnet/minecraft/world/level/material/MaterialColor;)Lnet/minecraft/world/level/block/RotatedPillarBlock; a
	netherStem (Lnet/minecraft/world/level/material/MaterialColor;)Lnet/minecraft/world/level/block/Block; a
	never (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	never (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; a
	ocelotOrParrot (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; c
	pistonBase (Z)Lnet/minecraft/world/level/block/piston/PistonBaseBlock; a
	rebuildCache ()V a
	register (Ljava/lang/String;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; a
	shulkerBox (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)Lnet/minecraft/world/level/block/ShulkerBoxBlock; a
	stainedGlass (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/StainedGlassBlock; b
net/minecraft/world/level/block/BonemealableBlock cjv
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/BrewingStandBlock cjw
	HAS_BOTTLE a
	SHAPE b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BubbleColumnBlock cjx
	CHECK_PERIOD b
	DRAG_DOWN a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canExistIn (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getColumnState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; n
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPickupSound ()Ljava/util/Optional; X_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	pickupBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; c
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateColumn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	updateColumn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BucketPickup cjy
	getPickupSound ()Ljava/util/Optional; X_
	pickupBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; c
net/minecraft/world/level/block/BuddingAmethystBlock cjz
	DIRECTIONS b
	GROWTH_CHANCE a
	canClusterGrowAtState (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/BushBlock cka
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ButtonBlock ckb
	CEILING_AABB_X d
	CEILING_AABB_Z e
	EAST_AABB k
	FLOOR_AABB_X f
	FLOOR_AABB_Z g
	HALF_AABB_HEIGHT b
	HALF_AABB_WIDTH c
	NORTH_AABB h
	POWERED a
	PRESSED_CEILING_AABB_X l
	PRESSED_CEILING_AABB_Z m
	PRESSED_DEPTH K
	PRESSED_EAST_AABB I
	PRESSED_FLOOR_AABB_X n
	PRESSED_FLOOR_AABB_Z E
	PRESSED_NORTH_AABB F
	PRESSED_SOUTH_AABB G
	PRESSED_WEST_AABB H
	SOUTH_AABB i
	UNPRESSED_DEPTH L
	WEST_AABB j
	sensitive M
	checkPressed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getPressDuration ()I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getSound (Z)Lnet/minecraft/sounds/SoundEvent; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Z)V a
	press (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateNeighbours (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V f
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CactusBlock ckc
	AABB_OFFSET c
	AGE a
	COLLISION_SHAPE d
	MAX_AGE b
	OUTLINE_SHAPE e
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CakeBlock ckd
	AABB_OFFSET d
	AABB_SIZE_PER_BITE e
	BITES b
	FULL_CAKE_SIGNAL c
	MAX_BITES a
	SHAPE_BY_BITE f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	eat (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/InteractionResult; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getOutputSignal (I)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CampfireBlock cke
	FACING e
	LIT b
	SHAPE a
	SIGNAL_FIRE c
	SMOKE_DISTANCE g
	VIRTUAL_FENCE_POST f
	WATERLOGGED d
	fireDamage i
	spawnParticles h
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canLight (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dowse (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isLitCampfire (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSmokeSource (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isSmokeyPos (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	makeParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZZ)V a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CandleBlock ckf
	CANDLES e
	FOUR_AABB m
	LIGHT_EMISSION h
	LIT f
	MAX_CANDLES d
	MIN_CANDLES c
	ONE_AABB j
	PARTICLE_OFFSETS i
	THREE_AABB l
	TWO_AABB k
	WATERLOGGED g
	canBeLit (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canLight (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getParticleOffsets (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/Iterable; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CandleCakeBlock ckg
	AABB_OFFSET d
	BY_CANDLE h
	CAKE_SHAPE e
	CANDLE_SHAPE f
	LIT c
	PARTICLE_OFFSETS i
	SHAPE g
	byCandle (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockState; a
	canLight (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	candleHit (Lnet/minecraft/world/phys/BlockHitResult;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getParticleOffsets (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/Iterable; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CarpetBlock ckh
	SHAPE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CarrotBlock cki
	SHAPE_BY_AGE a
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/CartographyTableBlock ckj
	CONTAINER_TITLE a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CarvedPumpkinBlock ckk
	FACING a
	PUMPKINS_PREDICATE f
	ironGolemBase d
	ironGolemFull e
	snowGolemBase b
	snowGolemFull c
	canSpawnGolem (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOrCreateIronGolemBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; u
	getOrCreateIronGolemFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; v
	getOrCreateSnowGolemBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; b
	getOrCreateSnowGolemFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; q
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	trySpawnGolem (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/block/CauldronBlock ckl
	POWDER_SNOW_FILL_CHANCE d
	RAIN_FILL_CHANCE c
	canReceiveStalactiteDrip (Lnet/minecraft/world/level/material/Fluid;)Z a
	handlePrecipitation (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome$Precipitation;)V a
	isFull (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	receiveStalactiteDrip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)V a
	shouldHandlePrecipitation (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/biome/Biome$Precipitation;)Z a
net/minecraft/world/level/block/CaveVines ckm
	BERRIES p_
	SHAPE o_
	emission (I)Ljava/util/function/ToIntFunction; f_
	hasGlowBerries (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/InteractionResult; a_
net/minecraft/world/level/block/CaveVinesBlock ckn
	CHANCE_OF_BERRIES_ON_GROWTH f
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlocksToGrowWhenBonemealed (Lnet/minecraft/util/RandomSource;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; b
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getGrowIntoState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateBodyAfterConvertedFromHead (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CaveVinesPlantBlock cko
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateHeadAfterConvertedFromBody (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ChainBlock ckp
	AABB_MAX c
	AABB_MIN b
	WATERLOGGED a
	X_AXIS_AABB f
	Y_AXIS_AABB d
	Z_AXIS_AABB e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ChangeOverTimeBlock ckq
	SCAN_DISTANCE t_
	applyChangeOverTime (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V c
	getAge ()Ljava/lang/Enum; b
	getChanceModifier ()F a
	getNext (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; a
	onRandomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a_
net/minecraft/world/level/block/ChestBlock ckr
	AABB l
	AABB_HEIGHT g
	AABB_OFFSET f
	CHEST_COMBINER m
	EAST_AABB k
	EVENT_SET_OPEN_COUNT e
	FACING b
	MENU_PROVIDER_COMBINER n
	NORTH_AABB h
	SOUTH_AABB i
	TYPE c
	WATERLOGGED d
	WEST_AABB j
	blockEntityType ()Lnet/minecraft/world/level/block/entity/BlockEntityType; d
	candidatePartnerFacing (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$BlockType; g
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getContainer (Lnet/minecraft/world/level/block/ChestBlock;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/Container; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOpenChestStat ()Lnet/minecraft/stats/Stat; c
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isBlockedChestByBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	isCatSittingOnChest (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z b
	isChestBlockedAt (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	opennessCombiner (Lnet/minecraft/world/level/block/entity/LidBlockEntity;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$Combiner; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ChorusFlowerBlock cks
	AGE b
	DEAD_AGE a
	plant c
	allNeighborsEmpty (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	generatePlant (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;I)V a
	growTreeRecursive (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;II)V a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	placeDeadFlower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	placeGrownFlower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ChorusPlantBlock ckt
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CocoaBlock cku
	AGE b
	AGE_0_HALFWIDTH e
	AGE_0_HEIGHT d
	AGE_0_WIDTH c
	AGE_1_HALFWIDTH h
	AGE_1_HEIGHT g
	AGE_1_WIDTH f
	AGE_2_HALFWIDTH k
	AGE_2_HEIGHT j
	AGE_2_WIDTH i
	EAST_AABB l
	MAX_AGE a
	NORTH_AABB n
	SOUTH_AABB E
	WEST_AABB m
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CommandBlock ckv
	CONDITIONAL b
	FACING a
	LOGGER c
	automatic d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	execute (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BaseCommandBlock;Z)V a
	executeChain (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComparatorBlock ckw
	MODE a
	calculateOutputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I e
	checkTickOnNeighbor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getInputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getItemFrame (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/decoration/ItemFrame; a
	getOutputSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	refreshOutputState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V f
	shouldTurnOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComposterBlock ckx
	AABB_SIDE_THICKNESS f
	COMPOSTABLES e
	LEVEL d
	MAX_LEVEL c
	MIN_LEVEL b
	OUTER_SHAPE g
	READY a
	SHAPES h
	add (FLnet/minecraft/world/level/ItemLike;)V a
	addItem (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/level/block/state/BlockState; a
	bootStrap ()V b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	empty (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; c
	extractProduce (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getContainer (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/WorldlyContainer; a
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	handleFill (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	insertItem (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComposterBlock$EmptyContainer ckx$a
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
net/minecraft/world/level/block/ComposterBlock$InputContainer ckx$b
	changed e
	level c
	pos d
	state b
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getMaxStackSize ()I O_
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	setChanged ()V e
net/minecraft/world/level/block/ComposterBlock$OutputContainer ckx$c
	changed e
	level c
	pos d
	state b
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getMaxStackSize ()I O_
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	setChanged ()V e
net/minecraft/world/level/block/ConcretePowderBlock cky
	concrete a
	canSolidify (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I d
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	shouldSolidify (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	touchesLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ConduitBlock ckz
	SHAPE b
	SIZE c
	WATERLOGGED a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralBlock cla
	deadBlock a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	scanForWater (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralFanBlock clb
	deadBlock a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralPlantBlock clc
	AABB_OFFSET a
	SHAPE b
	deadBlock d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralWallFanBlock cld
	deadBlock b
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CraftingTableBlock cle
	CONTAINER_TITLE a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CropBlock clf
	AGE d
	MAX_AGE c
	SHAPE_BY_AGE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAge (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getAgeProperty ()Lnet/minecraft/world/level/block/state/properties/IntegerProperty; b
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; d
	getBonemealAgeIncrease (Lnet/minecraft/world/level/Level;)I a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getGrowthSpeed (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getMaxAge ()I c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForAge (I)Lnet/minecraft/world/level/block/state/BlockState; b
	growCrops (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isMaxAge (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/CrossCollisionBlock clg
	EAST b
	NORTH a
	PROPERTY_BY_DIRECTION f
	SOUTH c
	WATERLOGGED e
	WEST d
	collisionShapeByIndex g
	shapeByIndex h
	stateToIndex i
	getAABBIndex (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	indexFor (Lnet/minecraft/core/Direction;)I a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	makeShapes (FFFFF)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CryingObsidianBlock clh
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/DaylightDetectorBlock cli
	INVERTED b
	POWER a
	SHAPE c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	tickEntity (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/DaylightDetectorBlockEntity;)V a
	updateSignalStrength (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/DeadBushBlock clj
	AABB_OFFSET a
	SHAPE b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/block/DetectorRailBlock clk
	POWERED e
	PRESSED_CHECK_PERIOD f
	SHAPE d
	checkPressed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getInteractingMinecartOfType (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List; a
	getSearchBB (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; c
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updatePowerToConnected (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
net/minecraft/world/level/block/DiodeBlock cll
	POWERED c
	SHAPE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	checkTickOnNeighbor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	getAlternateSignal (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getAlternateSignalAt (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getInputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getOutputSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isAlternateInput (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isDiode (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isLocked (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	shouldPrioritize (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z c
	shouldTurnOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateNeighborsInFront (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V d
net/minecraft/world/level/block/DirectionalBlock clm
	FACING a
net/minecraft/world/level/block/DirtPathBlock cln
	SHAPE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/DispenserBlock clo
	DISPENSER_REGISTRY c
	FACING a
	TRIGGERED b
	TRIGGER_DURATION d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dispenseFrom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDispenseMethod (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/core/dispenser/DispenseItemBehavior; a
	getDispensePosition (Lnet/minecraft/core/BlockSource;)Lnet/minecraft/core/Position; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	registerBehavior (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/core/dispenser/DispenseItemBehavior;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DoorBlock clp
	AABB_DOOR_THICKNESS f
	EAST_AABB j
	FACING a
	HALF e
	HINGE c
	NORTH_AABB h
	OPEN b
	POWERED d
	SOUTH_AABB g
	WEST_AABB i
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloseSound ()I b
	getHinge (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/properties/DoorHingeSide; b
	getOpenSound ()I q
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isOpen (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isWoodenDoor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isWoodenDoor (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setOpen (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DoubleBlockCombiner clq
	combineWithNeigbour (Lnet/minecraft/world/level/block/entity/BlockEntityType;Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/world/level/block/state/properties/DirectionProperty;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/function/BiPredicate;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
net/minecraft/world/level/block/DoubleBlockCombiner$BlockType clq$a
	$VALUES d
	FIRST b
	SECOND c
	SINGLE a
	$values ()[Lnet/minecraft/world/level/block/DoubleBlockCombiner$BlockType; a
net/minecraft/world/level/block/DoubleBlockCombiner$Combiner clq$b
	acceptDouble (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; a
	acceptNone ()Ljava/lang/Object; b
	acceptSingle (Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult clq$c
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Double clq$c$a
	first a
	second b
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Single clq$c$b
	single a
net/minecraft/world/level/block/DoublePlantBlock clr
	HALF a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	copyWaterloggedFrom (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	placeAt (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;I)V a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	preventCreativeDropFromBottomPart (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V b
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/DragonEggBlock cls
	SHAPE a
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	getDelayAfterPlace ()I c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	teleport (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DropExperienceBlock clt
	xpRange a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
net/minecraft/world/level/block/DropperBlock clu
	DISPENSE_BEHAVIOUR c
	dispenseFrom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	getDispenseMethod (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/core/dispenser/DispenseItemBehavior; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EnchantmentTableBlock clv
	BOOKSHELF_OFFSETS b
	SHAPE a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isValidBookShelf (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/EndGatewayBlock clw
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EndPortalBlock clx
	SHAPE a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EndPortalFrameBlock cly
	BASE_SHAPE c
	EYE_SHAPE d
	FACING a
	FULL_SHAPE e
	HAS_EYE b
	portalShape f
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getOrCreatePortalShape ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/EndRodBlock clz
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/EnderChestBlock cma
	CONTAINER_TITLE e
	FACING b
	SHAPE d
	WATERLOGGED c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/EntityBlock cmb
	getListener (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/world/level/gameevent/GameEventListener; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock cmc
	FACE J
	canAttach (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/Fallable cmd
	getFallDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; b
	getHurtsEntitySelector ()Ljava/util/function/Predicate; W_
	onBrokenAfterFall (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
net/minecraft/world/level/block/FallingBlock cme
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	falling (Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	getDelayAfterPlace ()I c
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I d
	isFree (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/FarmBlock cmf
	MAX_MOISTURE c
	MOISTURE a
	SHAPE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isNearWater (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isUnderCrops (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	turnToDirt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/FenceBlock cmg
	occlusionByIndex i
	connectsTo (Lnet/minecraft/world/level/block/state/BlockState;ZLnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSameFence (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FenceGateBlock cmh
	IN_WALL c
	OPEN a
	POWERED b
	X_COLLISION_SHAPE i
	X_OCCLUSION_SHAPE k
	X_OCCLUSION_SHAPE_LOW m
	X_SHAPE e
	X_SHAPE_LOW g
	Z_COLLISION_SHAPE h
	Z_OCCLUSION_SHAPE j
	Z_OCCLUSION_SHAPE_LOW l
	Z_SHAPE d
	Z_SHAPE_LOW f
	connectsToDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isWall (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FireBlock cmi
	AGE d
	BURN_EASY L
	BURN_HARD N
	BURN_INSTANT K
	BURN_MEDIUM M
	EAST f
	EAST_AABB m
	IGNITE_EASY H
	IGNITE_HARD J
	IGNITE_INSTANT G
	IGNITE_MEDIUM I
	MAX_AGE c
	NORTH e
	NORTH_AABB n
	PROPERTY_BY_DIRECTION j
	SOUTH g
	SOUTH_AABB E
	UP i
	UP_AABB k
	WEST h
	WEST_AABB l
	burnOdds P
	igniteOdds O
	shapesCache F
	bootStrap ()V b
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	checkBurnOut (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ILnet/minecraft/util/RandomSource;I)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBurnOdds (Lnet/minecraft/world/level/block/state/BlockState;)I n
	getFireTickDelay (Lnet/minecraft/util/RandomSource;)I a
	getIgniteOdds (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)I a
	getIgniteOdds (Lnet/minecraft/world/level/block/state/BlockState;)I o
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	getStateWithAge (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/block/state/BlockState; a
	isNearRain (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isValidFireLocation (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	setFlammable (Lnet/minecraft/world/level/block/Block;II)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/FletchingTableBlock cmj
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FlowerBlock cmk
	AABB_OFFSET a
	SHAPE b
	effectDuration d
	suspiciousStewEffect c
	getEffectDuration ()I c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSuspiciousStewEffect ()Lnet/minecraft/world/effect/MobEffect; b
net/minecraft/world/level/block/FlowerPotBlock cml
	AABB_SIZE a
	POTTED_BY_CONTENT c
	SHAPE b
	content d
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getContent ()Lnet/minecraft/world/level/block/Block; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isEmpty ()Z q
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FrogspawnBlock cmm
	DEFAULT_MAX_HATCH_TICK_DELAY e
	DEFAULT_MIN_HATCH_TICK_DELAY d
	MAX_TADPOLES_SPAWN c
	MIN_TADPOLES_SPAWN b
	SHAPE a
	maxHatchTickDelay g
	minHatchTickDelay f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	destroyBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getFrogspawnHatchDelay (Lnet/minecraft/util/RandomSource;)I a
	getRandomTadpolePositionOffset (Lnet/minecraft/util/RandomSource;)D b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hatchFrogspawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	mayPlaceOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	setDefaultHatchDelay ()V b
	setHatchDelay (II)V a
	spawnTadpoles (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/FrostedIceBlock cmn
	AGE b
	MAX_AGE a
	NEIGHBORS_TO_AGE c
	NEIGHBORS_TO_MELT d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fewerNeigboursThan (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;I)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	slightlyMelt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z e
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/FungusBlock cmo
	BONEMEAL_SUCCESS_PROBABILITY b
	SHAPE a
	feature c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/FurnaceBlock cmp
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/GameMasterBlock cmq
net/minecraft/world/level/block/GlassBlock cmr
net/minecraft/world/level/block/GlazedTerracottaBlock cms
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/GlowLichenBlock cmt
	WATERLOGGED b
	spreader c
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	emission (I)Ljava/util/function/ToIntFunction; b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getSpreader ()Lnet/minecraft/world/level/block/MultifaceSpreader; c
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/GrassBlock cmu
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/GravelBlock cmv
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I d
net/minecraft/world/level/block/GrindstoneBlock cmw
	CEILING_EAST_WEST_ALL_LEGS aB
	CEILING_EAST_WEST_GRINDSTONE aC
	CEILING_EAST_WEST_LEFT_LEG az
	CEILING_EAST_WEST_LEFT_PIVOT ax
	CEILING_EAST_WEST_LEFT_POST av
	CEILING_EAST_WEST_RIGHT_LEG aA
	CEILING_EAST_WEST_RIGHT_PIVOT ay
	CEILING_EAST_WEST_RIGHT_POST aw
	CEILING_NORTH_SOUTH_ALL_LEGS at
	CEILING_NORTH_SOUTH_GRINDSTONE au
	CEILING_NORTH_SOUTH_LEFT_LEG ar
	CEILING_NORTH_SOUTH_LEFT_PIVOT ap
	CEILING_NORTH_SOUTH_LEFT_POST an
	CEILING_NORTH_SOUTH_RIGHT_LEG as
	CEILING_NORTH_SOUTH_RIGHT_PIVOT aq
	CEILING_NORTH_SOUTH_RIGHT_POST ao
	CONTAINER_TITLE aQ
	FLOOR_EAST_WEST_ALL_LEGS E
	FLOOR_EAST_WEST_GRINDSTONE F
	FLOOR_EAST_WEST_LEFT_LEG m
	FLOOR_EAST_WEST_LEFT_PIVOT k
	FLOOR_EAST_WEST_LEFT_POST i
	FLOOR_EAST_WEST_RIGHT_LEG n
	FLOOR_EAST_WEST_RIGHT_PIVOT l
	FLOOR_EAST_WEST_RIGHT_POST j
	FLOOR_NORTH_SOUTH_ALL_LEGS g
	FLOOR_NORTH_SOUTH_GRINDSTONE h
	FLOOR_NORTH_SOUTH_LEFT_LEG e
	FLOOR_NORTH_SOUTH_LEFT_PIVOT c
	FLOOR_NORTH_SOUTH_LEFT_POST a
	FLOOR_NORTH_SOUTH_RIGHT_LEG f
	FLOOR_NORTH_SOUTH_RIGHT_PIVOT d
	FLOOR_NORTH_SOUTH_RIGHT_POST b
	WALL_EAST_ALL_LEGS al
	WALL_EAST_GRINDSTONE am
	WALL_EAST_LEFT_LEG aj
	WALL_EAST_LEFT_PIVOT ah
	WALL_EAST_LEFT_POST af
	WALL_EAST_RIGHT_LEG ak
	WALL_EAST_RIGHT_PIVOT ai
	WALL_EAST_RIGHT_POST ag
	WALL_NORTH_ALL_LEGS V
	WALL_NORTH_GRINDSTONE W
	WALL_NORTH_LEFT_LEG T
	WALL_NORTH_LEFT_PIVOT R
	WALL_NORTH_LEFT_POST P
	WALL_NORTH_RIGHT_LEG U
	WALL_NORTH_RIGHT_PIVOT S
	WALL_NORTH_RIGHT_POST Q
	WALL_SOUTH_ALL_LEGS N
	WALL_SOUTH_GRINDSTONE O
	WALL_SOUTH_LEFT_LEG L
	WALL_SOUTH_LEFT_PIVOT I
	WALL_SOUTH_LEFT_POST G
	WALL_SOUTH_RIGHT_LEG M
	WALL_SOUTH_RIGHT_PIVOT K
	WALL_SOUTH_RIGHT_POST H
	WALL_WEST_ALL_LEGS ad
	WALL_WEST_GRINDSTONE ae
	WALL_WEST_LEFT_LEG ab
	WALL_WEST_LEFT_PIVOT Z
	WALL_WEST_LEFT_POST X
	WALL_WEST_RIGHT_LEG ac
	WALL_WEST_RIGHT_PIVOT aa
	WALL_WEST_RIGHT_POST Y
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getVoxelShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; n
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/GrowingPlantBlock cmx
	growthDirection a
	scheduleFluidTicks b
	shape c
	canAttachTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; b
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/LevelAccessor;)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/GrowingPlantBodyBlock cmy
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; b
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getHeadPos (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateHeadAfterConvertedFromBody (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/GrowingPlantHeadBlock cmz
	AGE d
	MAX_AGE e
	growPerTickProbability f
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlocksToGrowWhenBonemealed (Lnet/minecraft/util/RandomSource;)I a
	getGrowIntoState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; a
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
	getMaxAgeState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; n
	getStateForPlacement (Lnet/minecraft/world/level/LevelAccessor;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isMaxAge (Lnet/minecraft/world/level/block/state/BlockState;)Z o
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	updateBodyAfterConvertedFromHead (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/HalfTransparentBlock cna
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/HangingRootsBlock cnb
	SHAPE a
	WATERLOGGED b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/HayBlock cnc
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
net/minecraft/world/level/block/HoneyBlock cnd
	MIN_FALL_SPEED_TO_BE_CONSIDERED_SLIDING c
	SHAPE a
	SLIDE_ADVANCEMENT_CHECK_INTERVAL e
	SLIDE_STARTS_WHEN_VERTICAL_SPEED_IS_AT_LEAST b
	THROTTLE_SLIDE_SPEED_TO d
	doSlideMovement (Lnet/minecraft/world/entity/Entity;)V d
	doesEntityDoHoneyBlockSlideEffects (Lnet/minecraft/world/entity/Entity;)Z c
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	isSlidingDown (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	maybeDoSlideAchievement (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)V a
	maybeDoSlideEffects (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)V a
	showJumpParticles (Lnet/minecraft/world/entity/Entity;)V b
	showParticles (Lnet/minecraft/world/entity/Entity;I)V a
	showSlideParticles (Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/HopperBlock cne
	BASE f
	CONVEX_BASE e
	DOWN_INTERACTION_SHAPE l
	DOWN_SHAPE g
	EAST_INTERACTION_SHAPE m
	EAST_SHAPE h
	ENABLED b
	FACING a
	FUNNEL d
	NORTH_INTERACTION_SHAPE n
	NORTH_SHAPE i
	SOUTH_INTERACTION_SHAPE E
	SOUTH_SHAPE j
	TOP c
	WEST_INTERACTION_SHAPE F
	WEST_SHAPE k
	checkPoweredState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/HorizontalDirectionalBlock cnf
	FACING aD
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/HugeMushroomBlock cng
	DOWN f
	EAST b
	NORTH a
	PROPERTY_BY_DIRECTION g
	SOUTH c
	UP e
	WEST d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/IceBlock cnh
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	melt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/InfestedBlock cni
	BLOCK_BY_HOST_BLOCK b
	HOST_TO_INFESTED_STATES c
	INFESTED_TO_HOST_STATES d
	hostBlock a
	getHostBlock ()Lnet/minecraft/world/level/block/Block; b
	getNewStateWithProperties (Ljava/util/Map;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Supplier;)Lnet/minecraft/world/level/block/state/BlockState; a
	hostStateByInfested (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; o
	infestedStateByHost (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; n
	isCompatibleHostBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	spawnInfestation (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/block/InfestedRotatedPillarBlock cnj
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/IronBarsBlock cnk
	attachsTo (Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/JigsawBlock cnl
	ORIENTATION a
	canAttach (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFrontFacing (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTopFacing (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; n
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/JukeboxBlock cnm
	HAS_RECORD a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dropRecording (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	setRecord (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/KelpBlock cnn
	GROW_PER_TICK_PROBABILITY g
	SHAPE f
	canAttachTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getBlocksToGrowWhenBonemealed (Lnet/minecraft/util/RandomSource;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/KelpPlantBlock cno
	canAttachTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/LadderBlock cnp
	AABB_OFFSET c
	EAST_AABB d
	FACING a
	NORTH_AABB g
	SOUTH_AABB f
	WATERLOGGED b
	WEST_AABB e
	canAttachTo (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LanternBlock cnq
	AABB c
	HANGING a
	HANGING_AABB d
	WATERLOGGED b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LavaCauldronBlock cnr
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getContentHeight (Lnet/minecraft/world/level/block/state/BlockState;)D a
	isFull (Lnet/minecraft/world/level/block/state/BlockState;)Z c
net/minecraft/world/level/block/LayeredCauldronBlock cns
	BASE_CONTENT_HEIGHT h
	HEIGHT_PER_LEVEL i
	LEVEL e
	MAX_FILL_LEVEL d
	MIN_FILL_LEVEL c
	RAIN f
	SNOW g
	fillPredicate j
	canReceiveStalactiteDrip (Lnet/minecraft/world/level/material/Fluid;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getContentHeight (Lnet/minecraft/world/level/block/state/BlockState;)D a
	handleEntityOnFireInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	handlePrecipitation (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome$Precipitation;)V a
	isFull (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	lowerFillLevel (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	receiveStalactiteDrip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)V a
net/minecraft/world/level/block/LeavesBlock cnt
	DECAY_DISTANCE a
	DISTANCE b
	PERSISTENT c
	TICK_DELAY e
	WATERLOGGED d
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	decaying (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getDistanceAt (Lnet/minecraft/world/level/block/state/BlockState;)I n
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getLightBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I g
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateDistance (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LecternBlock cnu
	FACING a
	HAS_BOOK c
	PAGE_CHANGE_IMPULSE_TICKS m
	POWERED b
	SHAPE_BASE d
	SHAPE_COLLISION h
	SHAPE_COMMON f
	SHAPE_EAST k
	SHAPE_NORTH j
	SHAPE_POST e
	SHAPE_SOUTH l
	SHAPE_TOP_PLATE g
	SHAPE_WEST i
	changePowered (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	openScreen (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	placeBook (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;)V b
	popBook (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	resetBookState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	signalPageChange (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	tryPlaceBook (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;)Z a
	updateBelow (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/LevelEvent cnv
	ANIMATION_DRAGON_SUMMON_ROAR ao
	ANIMATION_END_GATEWAY_SPAWN an
	COMPOSTER_FILL X
	DRIPSTONE_DRIP ab
	END_PORTAL_FRAME_FILL aa
	LAVA_FIZZ Y
	PARTICLES_AND_SOUND_PLANT_GROWTH ac
	PARTICLES_AND_SOUND_WAX_ON aq
	PARTICLES_DESTROY_BLOCK ae
	PARTICLES_DRAGON_BLOCK_BREAK al
	PARTICLES_DRAGON_FIREBALL_SPLASH aj
	PARTICLES_ELECTRIC_SPARK ap
	PARTICLES_EYE_OF_ENDER_DEATH ag
	PARTICLES_INSTANT_POTION_SPLASH ak
	PARTICLES_MOBBLOCK_SPAWN ah
	PARTICLES_PLANT_GROWTH ai
	PARTICLES_SCRAPE as
	PARTICLES_SCULK_CHARGE at
	PARTICLES_SCULK_SHRIEK au
	PARTICLES_SHOOT ad
	PARTICLES_SPELL_POTION_SPLASH af
	PARTICLES_WATER_EVAPORATING am
	PARTICLES_WAX_OFF ar
	REDSTONE_TORCH_BURNOUT Z
	SOUND_ANVIL_BROKEN D
	SOUND_ANVIL_LAND F
	SOUND_ANVIL_USED E
	SOUND_BAT_LIFTOFF z
	SOUND_BLAZE_FIREBALL s
	SOUND_BREWING_STAND_BREW J
	SOUND_CHORUS_DEATH I
	SOUND_CHORUS_GROW H
	SOUND_CLOSE_FENCE_GATE o
	SOUND_CLOSE_IRON_DOOR l
	SOUND_CLOSE_IRON_TRAP_DOOR K
	SOUND_CLOSE_WOODEN_DOOR m
	SOUND_CLOSE_WOODEN_TRAP_DOOR n
	SOUND_DISPENSER_DISPENSE a
	SOUND_DISPENSER_FAIL b
	SOUND_DISPENSER_PROJECTILE_LAUNCH c
	SOUND_DRAGON_DEATH C
	SOUND_DRAGON_FIREBALL r
	SOUND_DRIP_LAVA_INTO_CAULDRON U
	SOUND_DRIP_WATER_INTO_CAULDRON V
	SOUND_ENDER_EYE_LAUNCH d
	SOUND_END_PORTAL_SPAWN M
	SOUND_EXTINGUISH_FIRE j
	SOUND_FIREWORK_SHOOT e
	SOUND_GHAST_FIREBALL q
	SOUND_GHAST_WARNING p
	SOUND_GRINDSTONE_USED Q
	SOUND_HUSK_TO_ZOMBIE P
	SOUND_OPEN_FENCE_GATE i
	SOUND_OPEN_IRON_DOOR f
	SOUND_OPEN_IRON_TRAP_DOOR L
	SOUND_OPEN_WOODEN_DOOR g
	SOUND_OPEN_WOODEN_TRAP_DOOR h
	SOUND_PAGE_TURN R
	SOUND_PHANTOM_BITE N
	SOUND_PLAY_RECORDING k
	SOUND_POINTED_DRIPSTONE_LAND T
	SOUND_PORTAL_TRAVEL G
	SOUND_SKELETON_TO_STRAY W
	SOUND_SMITHING_TABLE_USED S
	SOUND_WITHER_BLOCK_BREAK w
	SOUND_WITHER_BOSS_SHOOT y
	SOUND_WITHER_BOSS_SPAWN x
	SOUND_ZOMBIE_CONVERTED B
	SOUND_ZOMBIE_DOOR_CRASH v
	SOUND_ZOMBIE_INFECTED A
	SOUND_ZOMBIE_IRON_DOOR u
	SOUND_ZOMBIE_TO_DROWNED O
	SOUND_ZOMBIE_WOODEN_DOOR t
net/minecraft/world/level/block/LeverBlock cnw
	DEPTH b
	DOWN_AABB_X l
	DOWN_AABB_Z k
	EAST_AABB h
	HEIGHT d
	NORTH_AABB e
	POWERED a
	SOUTH_AABB f
	UP_AABB_X j
	UP_AABB_Z i
	WEST_AABB g
	WIDTH c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	makeParticle (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;F)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	pull (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d
	updateNeighbours (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/LightBlock cnx
	LEVEL b
	LIGHT_EMISSION d
	MAX_LEVEL a
	WATERLOGGED c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/LightningRodBlock cny
	ACTIVATION_TICKS j
	POWERED c
	RANGE d
	SPARK_CYCLE k
	WATERLOGGED b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	onLightningStrike (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateNeighbours (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LiquidBlock cnz
	LEVEL a
	POSSIBLE_FLOW_DIRECTIONS d
	STABLE_SHAPE c
	fluid b
	stateCache e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fizz (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPickupSound ()Ljava/util/Optional; X_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	pickupBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; c
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	shouldSpreadLiquid (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LiquidBlockContainer coa
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/LoomBlock cob
	CONTAINER_TITLE a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/MagmaBlock coc
	BUBBLE_COLUMN_CHECK_DELAY a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/MangroveLeavesBlock cod
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/MangrovePropaguleBlock coe
	AGE a
	GROW_TALL_MANGROVE_PROBABILITY i
	HANGING c
	MAX_AGE b
	SHAPE_PER_AGE g
	WATERLOGGED h
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	createNewHangingPropagule ()Lnet/minecraft/world/level/block/state/BlockState; c
	createNewHangingPropagule (I)Lnet/minecraft/world/level/block/state/BlockState; b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isFullyGrown (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isHanging (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/MangroveRootsBlock cof
	WATERLOGGED a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/MelonBlock cog
	getAttachedStem ()Lnet/minecraft/world/level/block/AttachedStemBlock; c
	getStem ()Lnet/minecraft/world/level/block/StemBlock; b
net/minecraft/world/level/block/Mirror coh
	$VALUES h
	CODEC d
	FRONT_BACK c
	LEFT_RIGHT b
	NONE a
	id e
	rotation g
	symbol f
	$values ()[Lnet/minecraft/world/level/block/Mirror; d
	getRotation (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/Rotation; a
	getSerializedName ()Ljava/lang/String; c
	mirror (II)I a
	mirror (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; b
	rotation ()Lcom/mojang/math/OctahedralGroup; a
	symbol ()Lnet/minecraft/network/chat/Component; b
net/minecraft/world/level/block/MossBlock coi
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/MudBlock coj
	SHAPE a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
net/minecraft/world/level/block/MultifaceBlock cok
	AABB_OFFSET b
	DIRECTIONS a
	DOWN_AABB d
	EAST_AABB f
	NORTH_AABB g
	PROPERTY_BY_DIRECTION i
	SHAPE_BY_DIRECTION j
	SOUTH_AABB h
	UP_AABB c
	WEST_AABB e
	canMirrorX m
	canMirrorZ n
	canRotate l
	shapesCache k
	availableFaces (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Set; h
	calculateMultifaceShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; o
	canAttachTo (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDefaultMultifaceState (Lnet/minecraft/world/level/block/state/StateDefinition;)Lnet/minecraft/world/level/block/state/BlockState; a
	getFaceProperty (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/BooleanProperty; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSpreader ()Lnet/minecraft/world/level/block/MultifaceSpreader; c
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/BlockState; c
	hasAnyFace (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	hasAnyVacantFace (Lnet/minecraft/world/level/block/state/BlockState;)Z p
	hasFace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	isFaceSupported (Lnet/minecraft/core/Direction;)Z a
	isValidStateForPlacement (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	isWaterloggable ()Z q
	mapDirections (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Function;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	pack (Ljava/util/Collection;)B a
	removeFace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	unpack (B)Ljava/util/Set; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/MultifaceSpreader col
	DEFAULT_SPREAD_ORDER a
	config b
	canSpreadInAnyDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	getSpreadFromFaceTowardDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadPredicate;)Ljava/util/Optional; a
	spreadAll (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Z)J a
	spreadFromFaceTowardAllDirections (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)J a
	spreadFromFaceTowardDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Z)Ljava/util/Optional; a
	spreadFromFaceTowardRandomDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;Z)Ljava/util/Optional; a
	spreadFromRandomFaceTowardRandomDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	spreadToFace (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadPos;Z)Ljava/util/Optional; a
net/minecraft/world/level/block/MultifaceSpreader$DefaultSpreaderConfig col$a
	block a
	canSpreadInto (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadPos;)Z a
	getStateForPlacement (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/BlockState; a
	stateCanBeReplaced (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/MultifaceSpreader$SpreadConfig col$b
	canSpreadFrom (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z b
	canSpreadInto (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadPos;)Z a
	getSpreadTypes ()[Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadType; a
	getStateForPlacement (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasFace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	isOtherBlockValidAsSource (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	placeBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
net/minecraft/world/level/block/MultifaceSpreader$SpreadPos col$c
	face b
	pos a
	face ()Lnet/minecraft/core/Direction; b
	pos ()Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/block/MultifaceSpreader$SpreadPredicate col$d
net/minecraft/world/level/block/MultifaceSpreader$SpreadType col$e
	$VALUES d
	SAME_PLANE b
	SAME_POSITION a
	WRAP_AROUND c
	$values ()[Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadType; a
	getSpreadPos (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadPos; a
net/minecraft/world/level/block/MushroomBlock com
	AABB_OFFSET a
	SHAPE b
	featureSupplier c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	growMushroom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/MyceliumBlock coo
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/NetherPortalBlock cop
	AABB_OFFSET b
	AXIS a
	X_AXIS_AABB c
	Z_AXIS_AABB d
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/NetherSproutsBlock coq
	SHAPE a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/block/NetherVines cor
	BONEMEAL_GROW_PROBABILITY_DECREASE_RATE b
	GROW_PER_TICK_PROBABILITY a
	getBlocksToGrowWhenBonemealed (Lnet/minecraft/util/RandomSource;)I a
	isValidGrowthState (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/NetherWartBlock cos
	AGE b
	MAX_AGE a
	SHAPE_BY_AGE c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/NetherrackBlock cot
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/NoteBlock cou
	INSTRUMENT a
	NOTE c
	POWERED b
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	playNote (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/NyliumBlock cov
	canBeNylium (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/ObserverBlock cow
	POWERED b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	startSignal (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateNeighborsInFront (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/PipeBlock cox
	DIRECTIONS i
	DOWN f
	EAST b
	NORTH a
	PROPERTY_BY_DIRECTION g
	SOUTH c
	UP e
	WEST d
	shapeByIndex h
	getAABBIndex (Lnet/minecraft/world/level/block/state/BlockState;)I h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	makeShapes (F)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/PlayerHeadBlock coy
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/PlayerWallHeadBlock coz
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/PointedDripstoneBlock cpa
	AVERAGE_DAYS_PER_GROWTH G
	BASE_SHAPE Q
	DELAY_BEFORE_FALLING e
	DRIP_PROBABILITY_PER_ANIMATE_TICK f
	DRIP_PROBABILITY_PER_ANIMATE_TICK_IF_UNDER_LIQUID_SOURCE g
	FRUSTUM_SHAPE O
	GROWTH_PROBABILITY_PER_RANDOM_TICK H
	LAVA_TRANSFER_PROBABILITY_PER_RANDOM_TICK j
	MAX_GROWTH_LENGTH I
	MAX_HORIZONTAL_OFFSET R
	MAX_SEARCH_LENGTH_BETWEEN_STALACTITE_TIP_AND_CAULDRON h
	MAX_SEARCH_LENGTH_WHEN_CHECKING_DRIP_TYPE d
	MAX_STALACTITE_HEIGHT_FOR_DAMAGE_CALCULATION n
	MAX_STALAGMITE_SEARCH_RANGE_WHEN_GROWING J
	MIDDLE_SHAPE P
	MIN_TRIDENT_VELOCITY_TO_BREAK_DRIPSTONE k
	REQUIRED_SPACE_TO_DRIP_THROUGH_NON_SOLID_BLOCK S
	STALACTITE_DAMAGE_PER_FALL_DISTANCE_AND_SIZE l
	STALACTITE_DRIP_START_PIXEL K
	STALACTITE_MAX_DAMAGE m
	STALAGMITE_FALL_DAMAGE_MODIFIER F
	STALAGMITE_FALL_DISTANCE_OFFSET E
	THICKNESS b
	TIP_DIRECTION a
	TIP_MERGE_SHAPE L
	TIP_SHAPE_DOWN N
	TIP_SHAPE_UP M
	WATERLOGGED c
	WATER_TRANSFER_PROBABILITY_PER_RANDOM_TICK i
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	calculateDripstoneThickness (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Lnet/minecraft/world/level/block/state/properties/DripstoneThickness; a
	calculateTipDirection (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; b
	canDrip (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canDripThrough (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	canFillCauldron (Lnet/minecraft/world/level/material/Fluid;)Z a
	canGrow (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canTipGrow (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	createDripstone (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)V a
	createMergedTips (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	findBlockVertical (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$AxisDirection;Ljava/util/function/BiPredicate;Ljava/util/function/Predicate;I)Ljava/util/Optional; a
	findFillableCauldronBelowStalactiteTip (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/core/BlockPos; a
	findRootBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Ljava/util/Optional; a
	findStalactiteTipAboveCauldron (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findTip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	getCauldronFillFluidType (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/Fluid; a
	getDripFluid (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/material/Fluid; a
	getFallDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; b
	getFluidAboveStalactite (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getHurtsEntitySelector ()Ljava/util/function/Predicate; W_
	getMaxHorizontalOffset ()F V_
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	grow (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	growStalactiteOrStalagmiteIfPossible (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V c
	growStalagmiteBelow (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V b
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isPointedDripstoneWithDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z b
	isStalactite (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isStalactiteStartPos (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	isStalagmite (Lnet/minecraft/world/level/block/state/BlockState;)Z o
	isTip (Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	isUnmergedTipWithDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	isValidPointedDripstonePlacement (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z c
	maybeTransferFluid (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;F)V a
	onBrokenAfterFall (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	spawnDripParticle (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	spawnDripParticle (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)V a
	spawnFallingStalactite (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/PointedDripstoneBlock$FluidInfo cpa$a
	fluid b
	pos a
	sourceState c
	fluid ()Lnet/minecraft/world/level/material/Fluid; b
	pos ()Lnet/minecraft/core/BlockPos; a
	sourceState ()Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/level/block/PotatoBlock cpb
	SHAPE_BY_AGE a
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/PowderSnowBlock cpc
	FALLING_COLLISION_SHAPE e
	HORIZONTAL_PARTICLE_MOMENTUM_FACTOR a
	IN_BLOCK_HORIZONTAL_SPEED_MULTIPLIER b
	IN_BLOCK_VERTICAL_SPEED_MULTIPLIER c
	MINIMUM_FALL_DISTANCE_FOR_BIG_SOUND g
	MINIMUM_FALL_DISTANCE_FOR_SOUND f
	NUM_BLOCKS_TO_FALL_INTO_BLOCK d
	canEntityWalkOnPowderSnow (Lnet/minecraft/world/entity/Entity;)Z a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getPickupSound ()Ljava/util/Optional; X_
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	pickupBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; c
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/PowderSnowCauldronBlock cpd
	handleEntityOnFireInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
net/minecraft/world/level/block/PoweredBlock cpe
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
net/minecraft/world/level/block/PoweredRailBlock cpf
	POWERED e
	SHAPE d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	findPoweredRailSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZI)Z a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; c
	isSameRailWithPower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZILnet/minecraft/world/level/block/state/properties/RailShape;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/world/level/block/PressurePlateBlock cpg
	POWERED d
	sensitivity e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	playOffSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	playOnSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/PressurePlateBlock$Sensitivity cpg$a
	$VALUES c
	EVERYTHING a
	MOBS b
	$values ()[Lnet/minecraft/world/level/block/PressurePlateBlock$Sensitivity; a
net/minecraft/world/level/block/PumpkinBlock cph
	getAttachedStem ()Lnet/minecraft/world/level/block/AttachedStemBlock; c
	getStem ()Lnet/minecraft/world/level/block/StemBlock; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RailBlock cpi
	SHAPE d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; c
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/world/level/block/RailState cpj
	block c
	connections f
	isStraight e
	level a
	pos b
	state d
	canConnectTo (Lnet/minecraft/world/level/block/RailState;)Z b
	connectTo (Lnet/minecraft/world/level/block/RailState;)V c
	connectsTo (Lnet/minecraft/world/level/block/RailState;)Z a
	countPotentialConnections ()I b
	getConnections ()Ljava/util/List; a
	getRail (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/RailState; b
	getState ()Lnet/minecraft/world/level/block/state/BlockState; c
	hasConnection (Lnet/minecraft/core/BlockPos;)Z c
	hasNeighborRail (Lnet/minecraft/core/BlockPos;)Z d
	hasRail (Lnet/minecraft/core/BlockPos;)Z a
	place (ZZLnet/minecraft/world/level/block/state/properties/RailShape;)Lnet/minecraft/world/level/block/RailState; a
	removeSoftConnections ()V d
	updateConnections (Lnet/minecraft/world/level/block/state/properties/RailShape;)V a
net/minecraft/world/level/block/RedStoneOreBlock cpk
	LIT a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	interact (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	spawnParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RedStoneWireBlock cpl
	COLORS F
	E i
	EAST b
	H g
	N j
	NORTH a
	PARTICLE_DENSITY G
	POWER e
	PROPERTY_BY_DIRECTION f
	S k
	SHAPES_CACHE E
	SHAPES_FLOOR m
	SHAPES_UP n
	SHAPE_DOT l
	SOUTH c
	W h
	WEST d
	crossState H
	shouldSignal I
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; n
	calculateTargetStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canSurviveOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	checkCornerChangeAt (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getColorForPower (I)I b
	getConnectingSide (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/RedstoneSide; a
	getConnectingSide (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Lnet/minecraft/world/level/block/state/properties/RedstoneSide; a
	getConnectionState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getMissingConnections (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getWireSignal (Lnet/minecraft/world/level/block/state/BlockState;)I q
	isCross (Lnet/minecraft/world/level/block/state/BlockState;)Z o
	isDot (Lnet/minecraft/world/level/block/state/BlockState;)Z p
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnParticlesAlongLine (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;FF)V a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateNeighborsOfNeighboringWires (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V c
	updatePowerStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updatesOnShapeChange (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RedstoneLampBlock cpm
	LIT a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/RedstoneTorchBlock cpn
	LIT a
	MAX_RECENT_TOGGLES c
	RECENT_TOGGLES e
	RECENT_TOGGLE_TIMER b
	RESTART_DELAY d
	TOGGLE_DELAY f
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	hasNeighborSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	isToggledTooFrequently (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/RedstoneTorchBlock$Toggle cpn$a
	pos a
	when b
net/minecraft/world/level/block/RedstoneWallTorchBlock cpo
	FACING e
	LIT f
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; g
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasNeighborSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/RenderShape cpp
	$VALUES d
	ENTITYBLOCK_ANIMATED b
	INVISIBLE a
	MODEL c
	$values ()[Lnet/minecraft/world/level/block/RenderShape; a
net/minecraft/world/level/block/RepeaterBlock cpq
	DELAY d
	LOCKED a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isAlternateInput (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isLocked (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RespawnAnchorBlock cpr
	CHARGE c
	MAX_CHARGES b
	MIN_CHARGES a
	RESPAWN_HORIZONTAL_OFFSETS d
	RESPAWN_OFFSETS e
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canBeCharged (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canSetSpawn (Lnet/minecraft/world/level/Level;)Z a
	charge (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	explode (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	findStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; a
	findStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getScaledChargeLevel (Lnet/minecraft/world/level/block/state/BlockState;I)I a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRespawnFuel (Lnet/minecraft/world/item/ItemStack;)Z a
	isWaterThatWouldFlow (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;)Z a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RodBlock cps
	AABB_MAX f
	AABB_MIN e
	X_AXIS_AABB i
	Y_AXIS_AABB g
	Z_AXIS_AABB h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/RootedDirtBlock cpt
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/RootsBlock cpu
	AABB_OFFSET a
	SHAPE b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/block/RotatedPillarBlock cpv
	AXIS g
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotatePillar (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; b
net/minecraft/world/level/block/Rotation cpw
	$VALUES h
	CLOCKWISE_180 c
	CLOCKWISE_90 b
	CODEC e
	COUNTERCLOCKWISE_90 d
	NONE a
	id f
	rotation g
	$values ()[Lnet/minecraft/world/level/block/Rotation; b
	getRandom (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/Rotation; a
	getRotated (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/Rotation; a
	getSerializedName ()Ljava/lang/String; c
	getShuffled (Lnet/minecraft/util/RandomSource;)Ljava/util/List; b
	rotate (II)I a
	rotate (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	rotation ()Lcom/mojang/math/OctahedralGroup; a
net/minecraft/world/level/block/SandBlock cpx
	dustColor a
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I d
net/minecraft/world/level/block/SaplingBlock cpy
	AABB_OFFSET e
	SHAPE f
	STAGE d
	treeGrower a
	advanceTree (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/ScaffoldingBlock cpz
	BELOW_BLOCK i
	BOTTOM d
	DISTANCE b
	STABILITY_MAX_DISTANCE a
	STABLE_SHAPE f
	TICK_DELAY e
	UNSTABLE_SHAPE g
	UNSTABLE_SHAPE_BOTTOM h
	WATERLOGGED c
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDistance (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBottom (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;I)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SculkBehaviour cqa
	DEFAULT q_
	attemptSpreadVein (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Collection;Z)Z a
	attemptUseCharge (Lnet/minecraft/world/level/block/SculkSpreader$ChargeCursor;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/SculkSpreader;Z)I a
	canChangeBlockStateOnSpread ()Z b
	depositCharge (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	getSculkSpreadDelay ()B a
	onDischarged (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateDecayDelay (I)I g_
net/minecraft/world/level/block/SculkBlock cqb
	attemptUseCharge (Lnet/minecraft/world/level/block/SculkSpreader$ChargeCursor;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/SculkSpreader;Z)I a
	canChangeBlockStateOnSpread ()Z b
	canPlaceGrowth (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	getDecayPenalty (Lnet/minecraft/world/level/block/SculkSpreader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;I)I a
	getRandomGrowthState (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SculkCatalystBlock cqc
	PULSE b
	PULSE_TICKS a
	xpRange c
	bloom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getListener (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/world/level/gameevent/GameEventListener; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/SculkSensorBlock cqd
	ACTIVE_TICKS a
	COOLDOWN_TICKS b
	PHASE d
	POWER e
	SHAPE g
	VIBRATION_FREQUENCY_FOR_EVENT c
	WATERLOGGED f
	listenerRange h
	activate (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canActivate (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	deactivate (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getListener (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/world/level/gameevent/GameEventListener; a
	getListenerRange ()I d
	getPhase (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/properties/SculkSensorPhase; h
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateNeighbours (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/SculkShriekerBlock cqe
	CAN_SUMMON c
	COLLIDER d
	SHRIEKING a
	TOP_Y e
	WATERLOGGED b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getListener (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/world/level/gameevent/GameEventListener; a
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/SculkSpreader cqf
	LOGGER m
	MAX_CHARGE b
	MAX_CURSORS e
	MAX_DECAY_FACTOR c
	MAX_GROWTH_RATE_RADIUS a
	SHRIEKER_PLACEMENT_RATE d
	additionalDecayRate k
	chargeDecayRate j
	cursors l
	growthSpawnCost h
	isWorldGeneration f
	noGrowthRadius i
	replaceableBlocks g
	addCursor (Lnet/minecraft/world/level/block/SculkSpreader$ChargeCursor;)V a
	addCursors (Lnet/minecraft/core/BlockPos;I)V a
	additionalDecayRate ()I g
	chargeDecayRate ()I f
	clear ()V j
	createLevelSpreader ()Lnet/minecraft/world/level/block/SculkSpreader; a
	createWorldGenSpreader ()Lnet/minecraft/world/level/block/SculkSpreader; b
	getCursors ()Ljava/util/List; i
	growthSpawnCost ()I d
	isWorldGeneration ()Z h
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	noGrowthRadius ()I e
	replaceableBlocks ()Lnet/minecraft/tags/TagKey; c
	save (Lnet/minecraft/nbt/CompoundTag;)V b
	updateCursors (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Z)V a
net/minecraft/world/level/block/SculkSpreader$ChargeCursor cqf$a
	CODEC b
	DIRECTION_SET i
	MAX_CURSOR_DECAY_DELAY a
	NON_CORNER_NEIGHBOURS c
	charge e
	decayDelay g
	facings h
	pos d
	updateDelay f
	getBlockBehaviour (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/SculkBehaviour; a
	getCharge ()I b
	getDecayDelay ()I c
	getFacingData ()Ljava/util/Set; d
	getPos ()Lnet/minecraft/core/BlockPos; a
	getRandomizedNonCornerNeighbourOffsets (Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getValidMovementPos (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/BlockPos; a
	isMovementUnobstructed (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Z a
	isUnobstructed (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	mergeWith (Lnet/minecraft/world/level/block/SculkSpreader$ChargeCursor;)V a
	shouldUpdate (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Z)Z a
	update (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/SculkSpreader;Z)V a
net/minecraft/world/level/block/SculkVeinBlock cqg
	WATERLOGGED b
	sameSpaceSpreader d
	veinSpreader c
	attemptPlaceSculk (Lnet/minecraft/world/level/block/SculkSpreader;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	attemptUseCharge (Lnet/minecraft/world/level/block/SculkSpreader$ChargeCursor;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/SculkSpreader;Z)I a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getSameSpaceSpreader ()Lnet/minecraft/world/level/block/MultifaceSpreader; d
	getSpreader ()Lnet/minecraft/world/level/block/MultifaceSpreader; c
	hasSubstrateAccess (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Z a
	onDischarged (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	regrow (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Collection;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SculkVeinBlock$SculkVeinSpreaderConfig cqg$a
	spreadTypes c
	getSpreadTypes ()[Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadType; a
	isOtherBlockValidAsSource (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	stateCanBeReplaced (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/SeaPickleBlock cqh
	FOUR_AABB g
	MAX_PICKLES a
	ONE_AABB d
	PICKLES b
	THREE_AABB f
	TWO_AABB e
	WATERLOGGED c
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isDead (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SeagrassBlock cqi
	AABB_OFFSET a
	SHAPE b
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ShulkerBoxBlock cqj
	CONTENTS b
	FACING a
	color c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	canOpen (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockByColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/Block; a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
	getColorFromBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/DyeColor; a
	getColorFromItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/DyeColor; b
	getColoredItemStack (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/ItemStack; b
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SignBlock cqk
	AABB_OFFSET b
	SHAPE c
	WATERLOGGED a
	type d
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPossibleToRespawnInThis ()Z Y_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	type ()Lnet/minecraft/world/level/block/state/properties/WoodType; d
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SimpleWaterloggedBlock cql
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getPickupSound ()Ljava/util/Optional; X_
	pickupBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; c
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/SkullBlock cqm
	MAX a
	ROTATION b
	ROTATIONS d
	SHAPE c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SkullBlock$Type cqm$a
net/minecraft/world/level/block/SkullBlock$Types cqm$b
	$VALUES g
	CREEPER e
	DRAGON f
	PLAYER c
	SKELETON a
	WITHER_SKELETON b
	ZOMBIE d
	$values ()[Lnet/minecraft/world/level/block/SkullBlock$Types; a
net/minecraft/world/level/block/SlabBlock cqn
	BOTTOM_AABB c
	TOP_AABB d
	TYPE a
	WATERLOGGED b
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/SlimeBlock cqo
	bounceUp (Lnet/minecraft/world/entity/Entity;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/SmallDripleafBlock cqp
	AABB_OFFSET c
	FACING b
	SHAPE d
	WATERLOGGED e
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getMaxVerticalOffset ()F Z_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SmithingTableBlock cqq
	CONTAINER_TITLE a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SmokerBlock cqr
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/SnowLayerBlock cqs
	HEIGHT_IMPASSABLE d
	LAYERS b
	MAX_HEIGHT a
	SHAPE_BY_LAYER c
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/SnowyDirtBlock cqt
	SNOWY a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSnowySetting (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoulFireBlock cqu
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canSurviveOnBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoulSandBlock cqv
	BUBBLE_COLUMN_CHECK_DELAY b
	SHAPE a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoundType cqw
	AMETHYST X
	AMETHYST_CLUSTER Y
	ANCIENT_DEBRIS R
	ANVIL m
	AZALEA aj
	AZALEA_LEAVES ar
	BAMBOO r
	BAMBOO_SAPLING s
	BASALT J
	BIG_DRIPLEAF an
	BONE_BLOCK P
	CALCITE ad
	CANDLE W
	CAVE_VINES ah
	CHAIN T
	COPPER ag
	CORAL_BLOCK q
	CROP v
	DEEPSLATE ay
	DEEPSLATE_BRICKS az
	DEEPSLATE_TILES aA
	DRIPSTONE_BLOCK ae
	FLOWERING_AZALEA ak
	FROGLIGHT aC
	FROGSPAWN aD
	FUNGUS C
	GILDED_BLACKSTONE V
	GLASS g
	GLOW_LICHEN ax
	GRASS c
	GRAVEL b
	HANGING_ROOTS aq
	HARD_CROP w
	HONEY_BLOCK o
	LADDER l
	LANTERN z
	LARGE_AMETHYST_BUD ab
	LILY_PAD d
	LODESTONE S
	MANGROVE_ROOTS aE
	MEDIUM_AMETHYST_BUD aa
	METAL f
	MOSS am
	MOSS_CARPET al
	MUD aG
	MUDDY_MANGROVE_ROOTS aF
	MUD_BRICKS aH
	NETHERITE_BLOCK Q
	NETHERRACK L
	NETHER_BRICKS M
	NETHER_GOLD_ORE U
	NETHER_ORE O
	NETHER_SPROUTS N
	NETHER_WART y
	NYLIUM B
	PACKED_MUD aI
	POINTED_DRIPSTONE af
	POLISHED_DEEPSLATE aB
	POWDER_SNOW k
	ROOTED_DIRT ap
	ROOTS D
	SAND i
	SCAFFOLDING t
	SCULK au
	SCULK_CATALYST at
	SCULK_SENSOR as
	SCULK_SHRIEKER aw
	SCULK_VEIN av
	SHROOMLIGHT E
	SLIME_BLOCK n
	SMALL_AMETHYST_BUD Z
	SMALL_DRIPLEAF ao
	SNOW j
	SOUL_SAND H
	SOUL_SOIL I
	SPORE_BLOSSOM ai
	STEM A
	STONE e
	SWEET_BERRY_BUSH u
	TUFF ac
	TWISTING_VINES G
	VINE x
	WART_BLOCK K
	WEEPING_VINES F
	WET_GRASS p
	WOOD a
	WOOL h
	breakSound aL
	fallSound aP
	hitSound aO
	pitch aK
	placeSound aN
	stepSound aM
	volume aJ
	getBreakSound ()Lnet/minecraft/sounds/SoundEvent; c
	getFallSound ()Lnet/minecraft/sounds/SoundEvent; g
	getHitSound ()Lnet/minecraft/sounds/SoundEvent; f
	getPitch ()F b
	getPlaceSound ()Lnet/minecraft/sounds/SoundEvent; e
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; d
	getVolume ()F a
net/minecraft/world/level/block/SpawnerBlock cqx
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
net/minecraft/world/level/block/SpongeBlock cqy
	MAX_COUNT b
	MAX_DEPTH a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	removeWaterBreadthFirstSearch (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z b
	tryAbsorbWater (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/block/SporeBlossomBlock cqz
	ADD_PARTICLE_ATTEMPTS b
	PARTICLE_XZ_RADIUS c
	PARTICLE_Y_MAX d
	SHAPE a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SpreadingSnowyDirtBlock cra
	canBeGrass (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	canPropagate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z c
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/StainedGlassBlock crb
	color a
	getColor ()Lnet/minecraft/world/item/DyeColor; a
net/minecraft/world/level/block/StainedGlassPaneBlock crc
	color i
	getColor ()Lnet/minecraft/world/item/DyeColor; a
net/minecraft/world/level/block/StairBlock crd
	BOTTOM_AABB f
	BOTTOM_SHAPES F
	FACING a
	HALF b
	OCTET_NNN g
	OCTET_NNP h
	OCTET_NPN i
	OCTET_NPP j
	OCTET_PNN k
	OCTET_PNP l
	OCTET_PPN m
	OCTET_PPP n
	SHAPE c
	SHAPE_BY_STATE G
	TOP_AABB e
	TOP_SHAPES E
	WATERLOGGED d
	base H
	baseState I
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	canTakeShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	destroy (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	getExplosionResistance ()F e
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShapeIndex (Lnet/minecraft/world/level/block/state/BlockState;)I n
	getStairsShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/properties/StairsShape; i
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isStairs (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	makeShapes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	makeStairShape (ILnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
net/minecraft/world/level/block/StandingSignBlock cre
	ROTATION d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/StemBlock crf
	AABB_OFFSET c
	AGE b
	MAX_AGE a
	SHAPE_BY_AGE d
	fruit e
	seedSupplier f
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFruit ()Lnet/minecraft/world/level/block/StemGrownBlock; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/StemGrownBlock crg
	getAttachedStem ()Lnet/minecraft/world/level/block/AttachedStemBlock; c
	getStem ()Lnet/minecraft/world/level/block/StemBlock; b
net/minecraft/world/level/block/StoneButtonBlock crh
	getSound (Z)Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/world/level/block/StonecutterBlock cri
	CONTAINER_TITLE c
	FACING a
	SHAPE b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/StructureBlock crj
	MODE a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	trigger (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/StructureVoidBlock crk
	SHAPE b
	SIZE a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/SugarCaneBlock crl
	AABB_OFFSET b
	AGE a
	SHAPE c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SupportType crm
	$VALUES d
	CENTER b
	FULL a
	RIGID c
	$values ()[Lnet/minecraft/world/level/block/SupportType; a
	isSupporting (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/SweetBerryBushBlock crn
	AGE b
	HURT_SPEED_THRESHOLD c
	MAX_AGE a
	MID_GROWTH_SHAPE e
	SAPLING_SHAPE d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/TallFlowerBlock cro
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TallGrassBlock crp
	AABB_OFFSET a
	SHAPE b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TallSeagrassBlock crq
	AABB_OFFSET c
	HALF b
	SHAPE d
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/TargetBlock crr
	ACTIVATION_TICKS_ARROWS b
	ACTIVATION_TICKS_OTHER c
	OUTPUT_POWER a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRedstoneStrength (Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/phys/Vec3;)I a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	setOutputPower (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;ILnet/minecraft/core/BlockPos;I)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateRedstoneOutput (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/Entity;)I a
net/minecraft/world/level/block/TintedGlassBlock crs
	getLightBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I g
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/TntBlock crt
	UNSTABLE a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dropFromExplosion (Lnet/minecraft/world/level/Explosion;)Z a
	explode (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	explode (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
net/minecraft/world/level/block/TorchBlock cru
	AABB h
	AABB_STANDING_OFFSET g
	flameParticle i
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/TrapDoorBlock crv
	AABB_THICKNESS e
	BOTTOM_AABB j
	EAST_OPEN_AABB f
	HALF b
	NORTH_OPEN_AABB i
	OPEN a
	POWERED c
	SOUTH_OPEN_AABB h
	TOP_AABB k
	WATERLOGGED d
	WEST_OPEN_AABB g
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/TrappedChestBlock crw
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getOpenChestStat ()Lnet/minecraft/stats/Stat; c
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/TripWireBlock crx
	AABB h
	ATTACHED b
	DISARMED c
	EAST e
	NORTH d
	NOT_ATTACHED_AABB i
	POWERED a
	PROPERTY_BY_DIRECTION j
	RECHECK_PERIOD k
	SOUTH f
	WEST g
	hook l
	checkPressed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateSource (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TripWireHookBlock cry
	AABB_OFFSET f
	ATTACHED c
	EAST_AABB j
	FACING a
	NORTH_AABB g
	POWERED b
	RECHECK_PERIOD k
	SOUTH_AABB h
	WEST_AABB i
	WIRE_DIST_MAX e
	WIRE_DIST_MIN d
	calculateState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZZILnet/minecraft/world/level/block/state/BlockState;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	emitState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZZZZ)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	notifyNeighbors (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/TurtleEggBlock crz
	EGGS e
	HATCH d
	MAX_EGGS c
	MAX_HATCH_LEVEL a
	MIN_EGGS b
	MULTIPLE_EGGS_AABB g
	ONE_EGG_AABB f
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canDestroyEgg (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	decreaseEggs (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	destroyEgg (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;I)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSand (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onSand (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	shouldUpdateHatchLevel (Lnet/minecraft/world/level/Level;)Z a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/TwistingVinesBlock csa
	SHAPE f
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	getBlocksToGrowWhenBonemealed (Lnet/minecraft/util/RandomSource;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; b
net/minecraft/world/level/block/TwistingVinesPlantBlock csb
	SHAPE d
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
net/minecraft/world/level/block/VineBlock csc
	AABB_OFFSET g
	EAST c
	EAST_AABB j
	NORTH b
	NORTH_AABB k
	PROPERTY_BY_DIRECTION f
	SOUTH d
	SOUTH_AABB l
	UP a
	UP_AABB h
	WEST e
	WEST_AABB i
	shapesCache m
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSpread (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	canSupportAtFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	copyRandomFaces (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; a
	countFaces (Lnet/minecraft/world/level/block/state/BlockState;)I o
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPropertyForFace (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/BooleanProperty; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getUpdatedState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; i
	hasFaces (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	hasHorizontalConnection (Lnet/minecraft/world/level/block/state/BlockState;)Z p
	isAcceptableNeighbour (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallBannerBlock csd
	FACING a
	SHAPES b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; g
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallBlock cse
	EAST_TEST I
	EAST_WALL b
	NORTH_TEST F
	NORTH_WALL c
	POST_COVER_WIDTH l
	POST_TEST E
	POST_WIDTH k
	SOUTH_TEST G
	SOUTH_WALL d
	UP a
	WALL_COVER_END n
	WALL_COVER_START m
	WALL_HEIGHT j
	WALL_WIDTH i
	WATERLOGGED f
	WEST_TEST H
	WEST_WALL e
	collisionShapeByIndex h
	shapeByIndex g
	applyWallShape (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/level/block/state/properties/WallSide;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	connectsTo (Lnet/minecraft/world/level/block/state/BlockState;ZLnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isConnected (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	isCovered (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	makeShapes (FFFFFF)Ljava/util/Map; a
	makeWallState (ZLnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/level/block/state/properties/WallSide; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldRaisePost (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	sideUpdate (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/BlockState; a
	topUpdate (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZZZZ)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateSides (Lnet/minecraft/world/level/block/state/BlockState;ZZZZLnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallSignBlock csf
	AABBS h
	AABB_BOTTOM f
	AABB_THICKNESS e
	AABB_TOP g
	FACING d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; g
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallSkullBlock csg
	AABBS b
	FACING a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; g
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallTorchBlock csh
	AABBS c
	AABB_OFFSET b
	FACING a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; g
	getShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WaterlilyBlock csi
	AABB a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/block/WeatheringCopper csj
	NEXT_BY_BLOCK r_
	PREVIOUS_BY_BLOCK s_
	getChanceModifier ()F a
	getFirst (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; b
	getFirst (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; c
	getNext (Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; c
	getNext (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; a
	getPrevious (Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; a
	getPrevious (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
net/minecraft/world/level/block/WeatheringCopper$WeatherState csj$a
	$VALUES e
	EXPOSED b
	OXIDIZED d
	UNAFFECTED a
	WEATHERED c
	$values ()[Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; a
net/minecraft/world/level/block/WeatheringCopperFullBlock csk
	weatherState d
	getAge ()Ljava/lang/Enum; b
	getAge ()Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; q
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/WeatheringCopperSlabBlock csl
	weatherState e
	getAge ()Ljava/lang/Enum; b
	getAge ()Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; q
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/WeatheringCopperStairBlock csm
	weatherState G
	getAge ()Ljava/lang/Enum; b
	getAge ()Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; q
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/WebBlock csn
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/WeepingVinesBlock cso
	SHAPE f
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	getBlocksToGrowWhenBonemealed (Lnet/minecraft/util/RandomSource;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; b
net/minecraft/world/level/block/WeepingVinesPlantBlock csp
	SHAPE d
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
net/minecraft/world/level/block/WeightedPressurePlateBlock csq
	POWER d
	maxWeight e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPressedTime ()I b
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	playOffSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	playOnSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WetSpongeBlock csr
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
net/minecraft/world/level/block/WitherRoseBlock css
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/block/WitherSkullBlock cst
	witherPatternBase e
	witherPatternFull d
	canSpawnMob (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Z b
	checkSpawn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/SkullBlockEntity;)V a
	getOrCreateWitherBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; u
	getOrCreateWitherFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; q
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/WitherWallSkullBlock csu
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/WoodButtonBlock csv
	getSound (Z)Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/world/level/block/WoolCarpetBlock csw
	color b
	getColor ()Lnet/minecraft/world/item/DyeColor; b
net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity csx
	BURN_COOL_SPEED k
	BURN_TIME_STANDARD j
	DATA_COOKING_PROGRESS g
	DATA_COOKING_TOTAL_TIME h
	DATA_LIT_DURATION f
	DATA_LIT_TIME e
	NUM_DATA_VALUES i
	SLOTS_FOR_DOWN r
	SLOTS_FOR_SIDES s
	SLOTS_FOR_UP q
	SLOT_FUEL c
	SLOT_INPUT b
	SLOT_RESULT d
	cookingProgress v
	cookingTotalTime w
	dataAccess m
	items l
	litDuration u
	litTime t
	quickCheck y
	recipesUsed x
	add (Ljava/util/Map;Lnet/minecraft/tags/TagKey;I)V a
	add (Ljava/util/Map;Lnet/minecraft/world/level/ItemLike;I)V a
	awardUsedRecipes (Lnet/minecraft/world/entity/player/Player;)V b
	awardUsedRecipesAndPopExperience (Lnet/minecraft/server/level/ServerPlayer;)V a
	burn (Lnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/core/NonNullList;I)Z b
	canBurn (Lnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/core/NonNullList;I)Z a
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	clearContent ()V a
	createExperience (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;IF)V a
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getContainerSize ()I b
	getFuel ()Ljava/util/Map; f
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/Recipe; d
	getRecipesToAwardAndPopExperience (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Ljava/util/List; a
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	getTotalCookTime (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity;)I a
	isEmpty ()Z c
	isFuel (Lnet/minecraft/world/item/ItemStack;)Z b
	isLit ()Z i
	isNeverAFurnaceFuel (Lnet/minecraft/world/item/Item;)Z b
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity;)V a
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setRecipeUsed (Lnet/minecraft/world/item/crafting/Recipe;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/level/block/entity/BannerBlockEntity csy
	MAX_PATTERNS a
	TAG_COLOR d
	TAG_PATTERN c
	TAG_PATTERNS b
	baseColor f
	itemPatterns g
	name e
	patterns h
	createPatterns (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/nbt/ListTag;)Ljava/util/List; a
	fromItem (Lnet/minecraft/world/item/ItemStack;)V b
	fromItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/DyeColor;)V a
	getBaseColor ()Lnet/minecraft/world/item/DyeColor; g
	getCustomName ()Lnet/minecraft/network/chat/Component; Z
	getItem ()Lnet/minecraft/world/item/ItemStack; f
	getItemPatterns (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/ListTag; a
	getName ()Lnet/minecraft/network/chat/Component; X
	getPatternCount (Lnet/minecraft/world/item/ItemStack;)I c
	getPatterns ()Ljava/util/List; c
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; aa_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeLastPattern (Lnet/minecraft/world/item/ItemStack;)V d
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/BannerPattern csz
	hashname a
	byHash (Ljava/lang/String;)Lnet/minecraft/core/Holder; a
	getHashname ()Ljava/lang/String; a
	location (Lnet/minecraft/resources/ResourceKey;Z)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/block/entity/BannerPattern$Builder csz$a
	patterns a
	addPattern (Lcom/mojang/datafixers/util/Pair;)Lnet/minecraft/world/level/block/entity/BannerPattern$Builder; a
	addPattern (Lnet/minecraft/core/Holder;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/entity/BannerPattern$Builder; a
	addPattern (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/entity/BannerPattern$Builder; a
	toListTag ()Lnet/minecraft/nbt/ListTag; a
net/minecraft/world/level/block/entity/BannerPatterns cta
	BASE a
	BORDER E
	BRICKS I
	CIRCLE_MIDDLE y
	CREEPER K
	CROSS o
	CURLY_BORDER F
	DIAGONAL_LEFT u
	DIAGONAL_LEFT_MIRROR w
	DIAGONAL_RIGHT v
	DIAGONAL_RIGHT_MIRROR x
	FLOWER M
	GLOBE J
	GRADIENT G
	GRADIENT_UP H
	HALF_HORIZONTAL B
	HALF_HORIZONTAL_MIRROR D
	HALF_VERTICAL A
	HALF_VERTICAL_MIRROR C
	MOJANG N
	PIGLIN O
	RHOMBUS_MIDDLE z
	SKULL L
	SQUARE_BOTTOM_LEFT b
	SQUARE_BOTTOM_RIGHT c
	SQUARE_TOP_LEFT d
	SQUARE_TOP_RIGHT e
	STRAIGHT_CROSS p
	STRIPE_BOTTOM f
	STRIPE_CENTER j
	STRIPE_DOWNLEFT m
	STRIPE_DOWNRIGHT l
	STRIPE_LEFT h
	STRIPE_MIDDLE k
	STRIPE_RIGHT i
	STRIPE_SMALL n
	STRIPE_TOP g
	TRIANGLES_BOTTOM s
	TRIANGLES_TOP t
	TRIANGLE_BOTTOM q
	TRIANGLE_TOP r
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/block/entity/BannerPattern; a
	create (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/block/entity/BarrelBlockEntity ctb
	items b
	openersCounter c
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/sounds/SoundEvent;)V a
	recheckOpen ()V i
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setItems (Lnet/minecraft/core/NonNullList;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V d_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	updateBlockState (Lnet/minecraft/world/level/block/state/BlockState;Z)V a
net/minecraft/world/level/block/entity/BaseContainerBlockEntity ctc
	lockKey b
	name c
	canOpen (Lnet/minecraft/world/entity/player/Player;)Z d
	canUnlock (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/LockCode;Lnet/minecraft/network/chat/Component;)Z a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getCustomName ()Lnet/minecraft/network/chat/Component; Z
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getDisplayName ()Lnet/minecraft/network/chat/Component; C_
	getName ()Lnet/minecraft/network/chat/Component; X
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/BeaconBlockEntity ctd
	BEACON_EFFECTS a
	BLOCKS_CHECK_PER_TICK h
	DATA_LEVELS b
	DATA_PRIMARY c
	DATA_SECONDARY d
	MAX_LEVELS f
	NUM_DATA_VALUES e
	VALID_EFFECTS g
	beamSections i
	checkingBeamSections j
	dataAccess t
	lastCheckY l
	levels k
	lockKey s
	name r
	primaryPower m
	secondaryPower q
	applyEffects (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/effect/MobEffect;)V a
	getBeamSections ()Ljava/util/List; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; C_
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; f
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; aa_
	getValidEffectById (I)Lnet/minecraft/world/effect/MobEffect; a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setRemoved ()V ab_
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;)V a
	updateBase (Lnet/minecraft/world/level/Level;III)I a
net/minecraft/world/level/block/entity/BeaconBlockEntity$BeaconBeamSection ctd$a
	color a
	height b
	getColor ()[F b
	getHeight ()I c
	increaseHeight ()V a
net/minecraft/world/level/block/entity/BedBlockEntity cte
	color a
	getColor ()Lnet/minecraft/world/item/DyeColor; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; c
	setColor (Lnet/minecraft/world/item/DyeColor;)V a
net/minecraft/world/level/block/entity/BeehiveBlockEntity ctf
	BEES f
	ENTITY_DATA c
	HAS_NECTAR e
	IGNORED_BEE_TAGS i
	MAX_OCCUPANTS g
	MIN_OCCUPATION_TICKS b
	MIN_OCCUPATION_TICKS_NECTAR k
	MIN_OCCUPATION_TICKS_NECTARLESS h
	MIN_TICKS_BEFORE_REENTERING_HIVE j
	TAG_FLOWER_POS a
	TICKS_IN_HIVE d
	savedFlowerPos m
	stored l
	addOccupant (Lnet/minecraft/world/entity/Entity;Z)V a
	addOccupantWithPresetTicks (Lnet/minecraft/world/entity/Entity;ZI)V a
	emptyAllLivingFromHive (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)V a
	getHoneyLevel (Lnet/minecraft/world/level/block/state/BlockState;)I a
	getOccupantCount ()I g
	hasSavedFlowerPos ()Z t
	isEmpty ()Z d
	isFireNearby ()Z c
	isFull ()Z f
	isSedated ()Z i
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	releaseAllOccupants (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)Ljava/util/List; a
	releaseOccupant (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData;Ljava/util/List;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;Lnet/minecraft/core/BlockPos;)Z a
	removeIgnoredBeeTags (Lnet/minecraft/nbt/CompoundTag;)V d
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity;)V a
	setBeeReleaseData (ILnet/minecraft/world/entity/animal/Bee;)V a
	setChanged ()V e
	storeBee (Lnet/minecraft/nbt/CompoundTag;IZ)V a
	tickOccupants (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/List;Lnet/minecraft/core/BlockPos;)V a
	writeBees ()Lnet/minecraft/nbt/ListTag; j
net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData ctf$a
	entityData a
	minOccupationTicks c
	ticksInHive b
net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus ctf$b
	$VALUES d
	BEE_RELEASED b
	EMERGENCY c
	HONEY_DELIVERED a
	$values ()[Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus; a
net/minecraft/world/level/block/entity/BellBlockEntity ctg
	DURATION d
	GLOW_DURATION e
	HEAR_BELL_RADIUS j
	HIGHLIGHT_RAIDERS_RADIUS k
	MAX_RESONATION_TICKS g
	MIN_TICKS_BETWEEN_SEARCHES f
	SEARCH_RADIUS i
	TICKS_BEFORE_RESONATION h
	clickDirection c
	lastRingTimestamp l
	nearbyEntities m
	resonating q
	resonationTicks r
	shaking b
	ticks a
	areRaidersNearby (Lnet/minecraft/core/BlockPos;Ljava/util/List;)Z a
	clientTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BellBlockEntity;)V a
	glow (Lnet/minecraft/world/entity/LivingEntity;)V a
	isRaiderWithinRange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	makeRaidersGlow (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V a
	onHit (Lnet/minecraft/core/Direction;)V a
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BellBlockEntity;)V b
	showBellParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V b
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BellBlockEntity;Lnet/minecraft/world/level/block/entity/BellBlockEntity$ResonationEndAction;)V a
	triggerEvent (II)Z a_
	updateEntities ()V c
net/minecraft/world/level/block/entity/BellBlockEntity$ResonationEndAction ctg$a
net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity cth
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/BlockEntity cti
	LOGGER b
	blockState d
	level n
	remove p
	type c
	worldPosition o
	addEntityType (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/block/entity/BlockEntityType;)V a
	clearRemoved ()V s
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getBlockPos ()Lnet/minecraft/core/BlockPos; p
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; q
	getLevel ()Lnet/minecraft/world/level/Level; k
	getPosFromTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/core/BlockPos; c
	getType ()Lnet/minecraft/world/level/block/entity/BlockEntityType; v
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; aa_
	hasLevel ()Z l
	isRemoved ()Z r
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadStatic (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onlyOpCanSetNbt ()Z u
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	saveId (Lnet/minecraft/nbt/CompoundTag;)V d
	saveMetadata (Lnet/minecraft/nbt/CompoundTag;)V e
	saveToItem (Lnet/minecraft/world/item/ItemStack;)V e
	saveWithFullMetadata ()Lnet/minecraft/nbt/CompoundTag; m
	saveWithId ()Lnet/minecraft/nbt/CompoundTag; n
	saveWithoutMetadata ()Lnet/minecraft/nbt/CompoundTag; o
	setBlockState (Lnet/minecraft/world/level/block/state/BlockState;)V b
	setChanged ()V e
	setChanged (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setRemoved ()V ab_
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/BlockEntityTicker ctj
net/minecraft/world/level/block/entity/BlockEntityType ctk
	BANNER s
	BARREL z
	BEACON n
	BED x
	BEEHIVE G
	BELL D
	BLAST_FURNACE B
	BREWING_STAND k
	CAMPFIRE F
	CHEST b
	COMMAND_BLOCK v
	COMPARATOR r
	CONDUIT y
	DAYLIGHT_DETECTOR p
	DISPENSER f
	DROPPER g
	ENCHANTING_TABLE l
	ENDER_CHEST d
	END_GATEWAY u
	END_PORTAL m
	FURNACE a
	HOPPER q
	JIGSAW E
	JUKEBOX e
	LECTERN C
	LOGGER K
	MOB_SPAWNER i
	PISTON j
	SCULK_CATALYST I
	SCULK_SENSOR H
	SCULK_SHRIEKER J
	SHULKER_BOX w
	SIGN h
	SKULL o
	SMOKER A
	STRUCTURE_BLOCK t
	TRAPPED_CHEST c
	dataType N
	factory L
	validBlocks M
	create (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockEntity (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getKey (Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/resources/ResourceLocation; a
	isValid (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/block/entity/BlockEntityType$Builder;)Lnet/minecraft/world/level/block/entity/BlockEntityType; a
net/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier ctk$a
net/minecraft/world/level/block/entity/BlockEntityType$Builder ctk$b
	factory a
	validBlocks b
	build (Lcom/mojang/datafixers/types/Type;)Lnet/minecraft/world/level/block/entity/BlockEntityType; a
	of (Lnet/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/entity/BlockEntityType$Builder; a
net/minecraft/world/level/block/entity/BrewingStandBlockEntity ctl
	DATA_BREW_TIME c
	DATA_FUEL_USES d
	FUEL_SLOT h
	FUEL_USES b
	INGREDIENT_SLOT g
	NUM_DATA_VALUES e
	SLOTS_FOR_DOWN j
	SLOTS_FOR_SIDES k
	SLOTS_FOR_UP i
	brewTime m
	dataAccess f
	fuel s
	ingredient r
	items l
	lastPotionCount q
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	clearContent ()V a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	doBrew (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/NonNullList;)V a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getPotionBits ()[Z f
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	isBrewable (Lnet/minecraft/core/NonNullList;)Z a
	isEmpty ()Z c
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BrewingStandBlockEntity;)V a
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/level/block/entity/CampfireBlockEntity ctm
	BURN_COOL_SPEED a
	NUM_SLOTS b
	cookingProgress d
	cookingTime e
	items c
	quickCheck f
	clearContent ()V a
	cookTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;)V a
	cooldownTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;)V b
	dowse ()V f
	getCookableRecipe (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	getItems ()Lnet/minecraft/core/NonNullList; c
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; d
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; aa_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	markUpdated ()V g
	particleTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;)V c
	placeFood (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;I)Z a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
net/minecraft/world/level/block/entity/ChestBlockEntity ctn
	EVENT_SET_OPEN_COUNT b
	chestLidController i
	items c
	openersCounter f
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getOpenCount (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getOpenNess (F)F a
	lidAnimateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/ChestBlockEntity;)V a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/sounds/SoundEvent;)V a
	recheckOpen ()V i
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setItems (Lnet/minecraft/core/NonNullList;)V a
	signalOpenCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V d_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	swapContents (Lnet/minecraft/world/level/block/entity/ChestBlockEntity;Lnet/minecraft/world/level/block/entity/ChestBlockEntity;)V a
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/ChestLidController cto
	oOpenness c
	openness b
	shouldBeOpen a
	getOpenness (F)F a
	shouldBeOpen (Z)V a
	tickLid ()V a
net/minecraft/world/level/block/entity/CommandBlockEntity ctp
	auto b
	commandBlock d
	conditionMet c
	powered a
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; c
	getMode ()Lnet/minecraft/world/level/block/entity/CommandBlockEntity$Mode; t
	isAutomatic ()Z f
	isConditional ()Z w
	isPowered ()Z d
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	markConditionMet ()Z j
	onModeSwitch ()V g
	onlyOpCanSetNbt ()Z u
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	scheduleTick ()V x
	setAutomatic (Z)V b
	setPowered (Z)V a
	wasConditionMet ()Z i
net/minecraft/world/level/block/entity/CommandBlockEntity$Mode ctp$a
	$VALUES d
	AUTO b
	REDSTONE c
	SEQUENCE a
	$values ()[Lnet/minecraft/world/level/block/entity/CommandBlockEntity$Mode; a
net/minecraft/world/level/block/entity/ComparatorBlockEntity ctq
	output a
	getOutputSignal ()I c
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setOutputSignal (I)V a
net/minecraft/world/level/block/entity/ConduitBlockEntity ctr
	BLOCK_REFRESH_RATE b
	EFFECT_DURATION c
	KILL_RANGE g
	MIN_ACTIVE_SIZE e
	MIN_KILL_SIZE f
	ROTATION_SPEED d
	VALID_BLOCKS h
	activeRotation i
	destroyTarget m
	destroyTargetUUID q
	effectBlocks l
	isActive j
	isHunting k
	nextAmbientSoundActivation r
	tickCount a
	animationTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/world/entity/Entity;I)V a
	applyEffects (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V b
	clientTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V a
	findDestroyTarget (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/UUID;)Lnet/minecraft/world/entity/LivingEntity; a
	getActiveRotation (F)F a
	getDestroyRangeAABB (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; a
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; c
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; aa_
	isActive ()Z d
	isHunting ()Z f
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V b
	setHunting (Z)V a
	updateClientTarget (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V a
	updateDestroyTarget (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/List;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V a
	updateHunting (Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;Ljava/util/List;)V a
	updateShape (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;)Z a
net/minecraft/world/level/block/entity/ContainerOpenersCounter cts
	CHECK_TICK_DELAY a
	openCount b
	decrementOpeners (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	getOpenCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getOpenerCount ()I a
	incrementOpeners (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	isOwnContainer (Lnet/minecraft/world/entity/player/Player;)Z a
	onClose (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	onOpen (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	openerCountChanged (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)V a
	recheckOpeners (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	scheduleRecheck (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V d
net/minecraft/world/level/block/entity/DaylightDetectorBlockEntity ctt
net/minecraft/world/level/block/entity/DispenserBlockEntity ctu
	CONTAINER_SIZE b
	items c
	addItem (Lnet/minecraft/world/item/ItemStack;)I a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getRandomSlot (Lnet/minecraft/util/RandomSource;)I a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setItems (Lnet/minecraft/core/NonNullList;)V a
net/minecraft/world/level/block/entity/DropperBlockEntity ctv
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/EnchantmentTableBlockEntity ctw
	RANDOM k
	flip b
	flipA e
	flipT d
	name l
	oFlip c
	oOpen g
	oRot i
	open f
	rot h
	tRot j
	time a
	bookAnimationTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/EnchantmentTableBlockEntity;)V a
	getCustomName ()Lnet/minecraft/network/chat/Component; Z
	getName ()Lnet/minecraft/network/chat/Component; X
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/EnderChestBlockEntity ctx
	chestLidController a
	openersCounter b
	getOpenNess (F)F a
	lidAnimateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/EnderChestBlockEntity;)V a
	recheckOpen ()V c
	startOpen (Lnet/minecraft/world/entity/player/Player;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z c
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V b
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/FurnaceBlockEntity cty
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/Hopper ctz
	ABOVE u_
	INSIDE k_
	SUCK v_
	getLevelX ()D E
	getLevelY ()D F
	getLevelZ ()D G
	getSuckShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; N_
net/minecraft/world/level/block/entity/HopperBlockEntity cua
	HOPPER_CONTAINER_SIZE f
	MOVE_ITEM_SPEED c
	cooldownTime j
	items i
	tickedGameTime k
	addItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/item/ItemStack; a
	addItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/entity/item/ItemEntity;)Z a
	canMergeItems (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	canPlaceItemInContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Z a
	canTakeItemFromContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Z b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	ejectItems (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/Container;)Z a
	entityInside (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/entity/HopperBlockEntity;)V a
	getAttachedContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/Container; b
	getContainerAt (Lnet/minecraft/world/level/Level;DDD)Lnet/minecraft/world/Container; a
	getContainerAt (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/Container; a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getItemsAtAndAbove (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/Hopper;)Ljava/util/List; b
	getLevelX ()D E
	getLevelY ()D F
	getLevelZ ()D G
	getSlots (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Ljava/util/stream/IntStream; a
	getSourceContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/Hopper;)Lnet/minecraft/world/Container; c
	inventoryFull ()Z j
	isEmptyContainer (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Z c
	isFullContainer (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Z b
	isOnCooldown ()Z t
	isOnCustomCooldown ()Z w
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	pushItemsTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/HopperBlockEntity;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setCooldown (I)V c
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setItems (Lnet/minecraft/core/NonNullList;)V a
	suckInItems (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/Hopper;)Z a
	tryMoveInItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Lnet/minecraft/world/item/ItemStack; a
	tryMoveItems (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/HopperBlockEntity;Ljava/util/function/BooleanSupplier;)Z a
	tryTakeInItemFromSlot (Lnet/minecraft/world/level/block/entity/Hopper;Lnet/minecraft/world/Container;ILnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/entity/JigsawBlockEntity cub
	FINAL_STATE e
	JOINT c
	NAME d
	POOL b
	TARGET a
	finalState j
	joint i
	name f
	pool h
	target g
	generate (Lnet/minecraft/server/level/ServerLevel;IZ)V a
	getFinalState ()Ljava/lang/String; g
	getJoint ()Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType; i
	getName ()Lnet/minecraft/resources/ResourceLocation; c
	getPool ()Lnet/minecraft/resources/ResourceKey; f
	getTarget ()Lnet/minecraft/resources/ResourceLocation; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; j
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; aa_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setFinalState (Ljava/lang/String;)V a
	setJoint (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType;)V a
	setName (Lnet/minecraft/resources/ResourceLocation;)V a
	setPool (Lnet/minecraft/resources/ResourceKey;)V a
	setTarget (Lnet/minecraft/resources/ResourceLocation;)V b
net/minecraft/world/level/block/entity/JigsawBlockEntity$JointType cub$a
	$VALUES d
	ALIGNED b
	ROLLABLE a
	name c
	$values ()[Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType; b
	byName (Ljava/lang/String;)Ljava/util/Optional; a
	getSerializedName ()Ljava/lang/String; c
	getTranslatedName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/world/level/block/entity/JukeboxBlockEntity cuc
	isPlaying e
	record a
	recordStartedTick d
	tickCount c
	ticksSinceLastEvent b
	clearContent ()V a
	getRecord ()Lnet/minecraft/world/item/ItemStack; c
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	playRecord ()V d
	playRecordTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/JukeboxBlockEntity;)V a
	recordIsPlaying (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/JukeboxBlockEntity;)Z a
	recordShouldStopPlaying (Lnet/minecraft/world/level/block/entity/JukeboxBlockEntity;Lnet/minecraft/world/item/RecordItem;)Z a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setRecord (Lnet/minecraft/world/item/ItemStack;)V a
	shouldSendJukeboxPlayingEvent (Lnet/minecraft/world/level/block/entity/JukeboxBlockEntity;)Z a
net/minecraft/world/level/block/entity/LecternBlockEntity cud
	DATA_PAGE a
	NUM_DATA b
	NUM_SLOTS d
	SLOT_BOOK c
	book g
	bookAccess e
	dataAccess f
	page h
	pageCount i
	clearContent ()V a
	createCommandSourceStack (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/commands/CommandSourceStack; a
	getBook ()Lnet/minecraft/world/item/ItemStack; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; C_
	getPage ()I g
	getRedstoneSignal ()I i
	hasBook ()Z f
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onBookItemRemove ()V j
	onlyOpCanSetNbt ()Z u
	resolveBook (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setBook (Lnet/minecraft/world/item/ItemStack;)V a
	setBook (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)V a
	setPage (I)V a
net/minecraft/world/level/block/entity/LidBlockEntity cue
	getOpenNess (F)F a
net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity cuf
	LOOT_TABLE_SEED_TAG e
	LOOT_TABLE_TAG d
	lootTable g
	lootTableSeed h
	canOpen (Lnet/minecraft/world/entity/player/Player;)Z d
	clearContent ()V a
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getItems ()Lnet/minecraft/core/NonNullList; f
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setItems (Lnet/minecraft/core/NonNullList;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;J)V a
	setLootTable (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/resources/ResourceLocation;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	tryLoadLootTable (Lnet/minecraft/nbt/CompoundTag;)Z d
	trySaveLootTable (Lnet/minecraft/nbt/CompoundTag;)Z e
	unpackLootTable (Lnet/minecraft/world/entity/player/Player;)V e
net/minecraft/world/level/block/entity/SculkCatalystBlockEntity cug
	blockPosSource a
	sculkSpreader b
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	getSculkSpreader ()Lnet/minecraft/world/level/block/SculkSpreader; d
	handleEventsImmediately ()Z c
	handleGameEvent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEvent$Message;)Z a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/SculkCatalystBlockEntity;)V a
net/minecraft/world/level/block/entity/SculkSensorBlockEntity cuh
	LOGGER a
	lastVibrationFrequency c
	listener b
	canTriggerAvoidVibration ()Z t
	getLastVibrationFrequency ()I d
	getListener ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationListener; c
	getRedstoneStrengthForDistance (FI)I a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onSignalReceive (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V a
	onSignalSchedule ()V f
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setLastVibrationFrequency (I)V a
	shouldListen (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)Z a
net/minecraft/world/level/block/entity/SculkShriekerBlockEntity cui
	DARKNESS_RADIUS g
	LISTENER_RADIUS b
	LOGGER a
	SHRIEKING_TICKS i
	SOUND_BY_LEVEL h
	WARDEN_SPAWN_ATTEMPTS d
	WARDEN_SPAWN_RANGE_XZ e
	WARDEN_SPAWN_RANGE_Y f
	WARNING_SOUND_RADIUS c
	listener k
	warningLevel j
	canRespond (Lnet/minecraft/server/level/ServerLevel;)Z b
	getListenableEvents ()Lnet/minecraft/tags/TagKey; a
	getListener ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationListener; c
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onSignalReceive (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V a
	onSignalSchedule ()V f
	playWardenReplySound ()V d
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	shouldListen (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)Z a
	shriek (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Entity;)V a
	tryGetPlayer (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/server/level/ServerPlayer; a
	tryRespond (Lnet/minecraft/server/level/ServerLevel;)V a
	tryShriek (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/server/level/ServerPlayer;)V a
	trySummonWarden (Lnet/minecraft/server/level/ServerLevel;)Z c
	tryToWarn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/server/level/ServerPlayer;)Z b
net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity cuj
	COLUMNS b
	CONTAINER_SIZE f
	EVENT_SET_OPEN_COUNT i
	ITEMS_TAG m
	MAX_LID_HEIGHT k
	MAX_LID_ROTATION l
	OPENING_TICK_LENGTH j
	ROWS c
	SLOTS q
	animationStatus t
	color w
	itemStacks r
	openCount s
	progress u
	progressOld v
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	doNeighborUpdates (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V d
	getAnimationStatus ()Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus; i
	getBoundingBox (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/AABB; a
	getColor ()Lnet/minecraft/world/item/DyeColor; j
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getProgress (F)F a
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	isClosed ()Z t
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadFromTag (Lnet/minecraft/nbt/CompoundTag;)V f
	moveCollidedEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setItems (Lnet/minecraft/core/NonNullList;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V d_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity;)V a
	triggerEvent (II)Z a_
	updateAnimation (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus cuj$a
	$VALUES e
	CLOSED a
	CLOSING d
	OPENED c
	OPENING b
	$values ()[Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus; a
net/minecraft/world/level/block/entity/SignBlockEntity cuk
	FILTERED_TEXT_FIELD_NAMES c
	LINES a
	RAW_TEXT_FIELD_NAMES b
	color j
	filteredMessages e
	hasGlowingText k
	isEditable f
	messages d
	playerWhoMayEdit g
	renderMessagedFiltered i
	renderMessages h
	createCommandSourceStack (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/commands/CommandSourceStack; b
	deserializeTextSafe (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; b
	executeClickCommands (Lnet/minecraft/server/level/ServerPlayer;)Z a
	getColor ()Lnet/minecraft/world/item/DyeColor; g
	getMessage (IZ)Lnet/minecraft/network/chat/Component; a
	getMessages (Z)[Lnet/minecraft/network/chat/Component; c
	getPlayerWhoMayEdit ()Ljava/util/UUID; f
	getRenderMessages (ZLjava/util/function/Function;)[Lnet/minecraft/util/FormattedCharSequence; a
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; c
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; aa_
	hasGlowingText ()Z i
	isEditable ()Z d
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadLine (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	markUpdated ()V j
	onlyOpCanSetNbt ()Z u
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setAllowedPlayerEditor (Ljava/util/UUID;)V a
	setColor (Lnet/minecraft/world/item/DyeColor;)Z a
	setEditable (Z)V a
	setHasGlowingText (Z)Z b
	setMessage (ILnet/minecraft/network/chat/Component;)V a
	setMessage (ILnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/SkullBlockEntity cul
	TAG_SKULL_OWNER a
	isMovingMouth g
	mainThreadExecutor d
	mouthTickCount f
	owner e
	profileCache b
	sessionService c
	clear ()V c
	dragonHeadAnimation (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/SkullBlockEntity;)V a
	getMouthAnimation (F)F a
	getOwnerProfile ()Lcom/mojang/authlib/GameProfile; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; f
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; aa_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setOwner (Lcom/mojang/authlib/GameProfile;)V a
	setup (Lnet/minecraft/server/Services;Ljava/util/concurrent/Executor;)V a
	updateGameprofile (Lcom/mojang/authlib/GameProfile;Ljava/util/function/Consumer;)V a
	updateOwnerProfile ()V g
net/minecraft/world/level/block/entity/SmokerBlockEntity cum
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/SpawnerBlockEntity cun
	spawner a
	clientTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/SpawnerBlockEntity;)V a
	getSpawner ()Lnet/minecraft/world/level/BaseSpawner; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; c
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; aa_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onlyOpCanSetNbt ()Z u
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/SpawnerBlockEntity;)V b
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/StructureBlockEntity cuo
	AUTHOR_TAG c
	MAX_OFFSET_PER_AXIS a
	MAX_SIZE_PER_AXIS b
	SCAN_CORNER_BLOCKS_RANGE d
	author f
	ignoreEntities m
	integrity t
	metaData g
	mirror j
	mode l
	powered q
	rotation k
	seed u
	showAir r
	showBoundingBox s
	structureName e
	structurePos h
	structureSize i
	calculateEnclosingBoundingBox (Lnet/minecraft/core/BlockPos;Ljava/util/stream/Stream;)Ljava/util/Optional; a
	createRandom (J)Lnet/minecraft/util/RandomSource; b
	createdBy (Lnet/minecraft/world/entity/LivingEntity;)V a
	detectSize ()Z C
	getIntegrity ()F A
	getMetaData ()Ljava/lang/String; x
	getMirror ()Lnet/minecraft/world/level/block/Mirror; t
	getMode ()Lnet/minecraft/world/level/block/state/properties/StructureMode; y
	getRelatedCorners (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; w
	getSeed ()J B
	getShowAir ()Z H
	getShowBoundingBox ()Z I
	getStructureName ()Ljava/lang/String; d
	getStructurePath ()Ljava/lang/String; f
	getStructurePos ()Lnet/minecraft/core/BlockPos; i
	getStructureSize ()Lnet/minecraft/core/Vec3i; j
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; c
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; aa_
	hasStructureName ()Z g
	isIgnoreEntities ()Z z
	isPowered ()Z G
	isStructureLoadable ()Z F
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadStructure (Lnet/minecraft/server/level/ServerLevel;)Z a
	loadStructure (Lnet/minecraft/server/level/ServerLevel;Z)Z a
	loadStructure (Lnet/minecraft/server/level/ServerLevel;ZLnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate;)Z a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	saveStructure ()Z D
	saveStructure (Z)Z b
	setIgnoreEntities (Z)V a
	setIntegrity (F)V a
	setMetaData (Ljava/lang/String;)V b
	setMirror (Lnet/minecraft/world/level/block/Mirror;)V a
	setMode (Lnet/minecraft/world/level/block/state/properties/StructureMode;)V a
	setPowered (Z)V c
	setRotation (Lnet/minecraft/world/level/block/Rotation;)V a
	setSeed (J)V a
	setShowAir (Z)V d
	setShowBoundingBox (Z)V e
	setStructureName (Ljava/lang/String;)V a
	setStructureName (Lnet/minecraft/resources/ResourceLocation;)V a
	setStructurePos (Lnet/minecraft/core/BlockPos;)V a
	setStructureSize (Lnet/minecraft/core/Vec3i;)V a
	unloadStructure ()V E
	updateBlockState ()V J
	usedBy (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType cuo$a
	$VALUES e
	LOAD_AREA c
	SAVE_AREA b
	SCAN_AREA d
	UPDATE_DATA a
	$values ()[Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType; a
net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity cup
	ATTENTION_INTERVAL d
	COOLDOWN_TIME c
	EVENT_COOLDOWN e
	GATEWAY_HEIGHT_ABOVE_SURFACE f
	LOGGER a
	SPAWN_TIME b
	age g
	exactTeleport j
	exitPortal i
	teleportCooldown h
	beamAnimationTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;)V a
	canEntityTeleport (Lnet/minecraft/world/entity/Entity;)Z a
	findExitPortalXZPosTentative (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; b
	findExitPosition (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findOrCreateValidTeleportPos (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findTallestBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	findValidSpawnInChunk (Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/core/BlockPos; a
	getChunk (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getCooldownPercent (F)F b
	getParticleAmount ()I g
	getSpawnPercent (F)F a
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; f
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; aa_
	isChunkEmpty (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	isCoolingDown ()Z d
	isSpawning ()Z c
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setExitPosition (Lnet/minecraft/core/BlockPos;Z)V a
	shouldRenderFace (Lnet/minecraft/core/Direction;)Z a
	spawnGatewayPortal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration;)V a
	teleportEntity (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;)V a
	teleportTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;)V b
	triggerCooldown (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;)V c
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/TheEndPortalBlockEntity cuq
	shouldRenderFace (Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/entity/TickingBlockEntity cur
	getPos ()Lnet/minecraft/core/BlockPos; c
	getType ()Ljava/lang/String; d
	isRemoved ()Z b
	tick ()V a
net/minecraft/world/level/block/entity/TrappedChestBlockEntity cus
	signalOpenCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)V a
net/minecraft/world/level/block/grower/AbstractMegaTreeGrower cuu
	getConfiguredMegaFeature (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/Holder; a
	growTree (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
	isTwoByTwoSapling (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;II)Z a
	placeMega (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;II)Z a
net/minecraft/world/level/block/grower/AbstractTreeGrower cuv
	getConfiguredFeature (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/core/Holder; a
	growTree (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
	hasFlowers (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/block/grower/AcaciaTreeGrower cuw
	getConfiguredFeature (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/core/Holder; a
net/minecraft/world/level/block/grower/AzaleaTreeGrower cux
	getConfiguredFeature (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/core/Holder; a
net/minecraft/world/level/block/grower/BirchTreeGrower cuy
	getConfiguredFeature (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/core/Holder; a
net/minecraft/world/level/block/grower/DarkOakTreeGrower cuz
	getConfiguredFeature (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/core/Holder; a
	getConfiguredMegaFeature (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/Holder; a
net/minecraft/world/level/block/grower/JungleTreeGrower cva
	getConfiguredFeature (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/core/Holder; a
	getConfiguredMegaFeature (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/Holder; a
net/minecraft/world/level/block/grower/MangroveTreeGrower cvb
	tallProbability a
	getConfiguredFeature (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/core/Holder; a
net/minecraft/world/level/block/grower/OakTreeGrower cvc
	getConfiguredFeature (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/core/Holder; a
net/minecraft/world/level/block/grower/SpruceTreeGrower cvd
	getConfiguredFeature (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/core/Holder; a
	getConfiguredMegaFeature (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/Holder; a
net/minecraft/world/level/block/piston/MovingPistonBlock cvg
	FACING a
	TYPE b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	destroy (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	getBlockEntity (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity; a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	newMovingBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;ZZ)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/piston/PistonBaseBlock cvh
	DOWN_AABB l
	EAST_AABB g
	EXTENDED b
	NORTH_AABB j
	PLATFORM_THICKNESS f
	SOUTH_AABB i
	TRIGGER_CONTRACT d
	TRIGGER_DROP e
	TRIGGER_EXTEND c
	UP_AABB k
	WEST_AABB h
	isSticky m
	checkIfExtend (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getNeighborSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isPushable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;ZLnet/minecraft/core/Direction;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	moveBlocks (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/piston/PistonHeadBlock cvi
	AABB_OFFSET k
	DOWN_AABB j
	DOWN_ARM_AABB E
	EAST_AABB e
	EAST_ARM_AABB H
	EDGE_MAX m
	EDGE_MIN l
	NORTH_AABB h
	NORTH_ARM_AABB G
	PLATFORM d
	SHAPES_LONG Q
	SHAPES_SHORT P
	SHORT c
	SHORT_DOWN_ARM_AABB K
	SHORT_EAST_ARM_AABB N
	SHORT_NORTH_ARM_AABB M
	SHORT_SOUTH_ARM_AABB L
	SHORT_UP_ARM_AABB J
	SHORT_WEST_ARM_AABB O
	SOUTH_AABB g
	SOUTH_ARM_AABB F
	TYPE b
	UP_AABB i
	UP_ARM_AABB n
	WEST_AABB f
	WEST_ARM_AABB I
	calculateShape (Lnet/minecraft/core/Direction;Z)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isFittingBase (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	makeShapes (Z)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/piston/PistonMath cvj
	getMovementArea (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/core/Direction;D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/level/block/piston/PistonMovingBlockEntity cvk
	NOCLIP h
	PUSH_OFFSET c
	TICKS_TO_EXTEND b
	TICK_MOVEMENT a
	deathTicks l
	direction e
	extending f
	isSourcePiston g
	lastTicked k
	movedState d
	progress i
	progressO j
	finalTick ()V j
	fixEntityWithinPistonBase (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;D)V a
	getCollisionRelatedBlockState ()Lnet/minecraft/world/level/block/state/BlockState; w
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getDirection ()Lnet/minecraft/core/Direction; d
	getExtendedProgress (F)F e
	getLastTicked ()J t
	getMovedState ()Lnet/minecraft/world/level/block/state/BlockState; i
	getMovement (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/core/Direction;Lnet/minecraft/world/phys/AABB;)D a
	getMovementDirection ()Lnet/minecraft/core/Direction; g
	getProgress (F)F a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; aa_
	getXOff (F)F b
	getYOff (F)F c
	getZOff (F)F d
	isExtending ()Z c
	isSourcePiston ()Z f
	isStickyForEntities ()Z x
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	matchesStickyCritera (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/entity/Entity;)Z a
	moveByPositionAndProgress (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;)Lnet/minecraft/world/phys/AABB; a
	moveCollidedEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;FLnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;)V a
	moveEntityByPiston (Lnet/minecraft/core/Direction;Lnet/minecraft/world/entity/Entity;DLnet/minecraft/core/Direction;)V a
	moveStuckEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;FLnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;)V b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;)V a
net/minecraft/world/level/block/piston/PistonStructureResolver cvl
	MAX_PUSH_DEPTH a
	extending d
	level b
	pistonDirection i
	pistonPos c
	pushDirection f
	startPos e
	toDestroy h
	toPush g
	addBlockLine (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	addBranchingBlocks (Lnet/minecraft/core/BlockPos;)Z a
	canStickToEachOther (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	getPushDirection ()Lnet/minecraft/core/Direction; b
	getToDestroy ()Ljava/util/List; d
	getToPush ()Ljava/util/List; c
	isSticky (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	reorderListAtCollision (II)V a
	resolve ()Z a
net/minecraft/world/level/block/state/BlockBehaviour cvn
	UPDATE_SHAPE_ORDER aE
	drops aP
	dynamicShape aN
	explosionResistance aH
	friction aK
	hasCollision aG
	isRandomlyTicking aI
	jumpFactor aM
	material aF
	properties aO
	soundType aJ
	speedFactor aL
	asBlock ()Lnet/minecraft/world/level/block/Block; o
	asItem ()Lnet/minecraft/world/item/Item; l
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	defaultDestroyTime ()F t
	defaultMaterialColor ()Lnet/minecraft/world/level/material/MaterialColor; s
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getLightBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I g
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; r
	getMaxHorizontalOffset ()F V_
	getMaxVerticalOffset ()F Z_
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	isOcclusionShapeFullBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase cvn$a
	cache a
	canOcclude m
	destroySpeed k
	emissiveRendering r
	hasPostProcess q
	isAir h
	isRedstoneConductor n
	isSuffocating o
	isViewBlocking p
	lightEmission b
	material i
	materialColor j
	offsetType s
	requiresCorrectToolForDrops l
	useShapeForLightOcclusion g
	asState ()Lnet/minecraft/world/level/block/state/BlockState; s
	attack (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	canBeReplaced (Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canBeReplaced (Lnet/minecraft/world/level/material/Fluid;)Z a
	canOcclude ()Z m
	canSurvive (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	emissiveRendering (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z e
	entityCanStandOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	entityCanStandOnFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;)Z a
	entityInside (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlock ()Lnet/minecraft/world/level/block/Block; b
	getBlockHolder ()Lnet/minecraft/core/Holder; c
	getBlockSupportShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; l
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; k
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getDestroyProgress (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getDestroySpeed (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F h
	getDirectSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I c
	getDrops (Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getFaceOcclusionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFluidState ()Lnet/minecraft/world/level/material/FluidState; p
	getInteractionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLightBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I b
	getLightEmission ()I g
	getMapColor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/MaterialColor; d
	getMaterial ()Lnet/minecraft/world/level/material/Material; d
	getMenuProvider (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getOffset (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; n
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; u
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; l
	getRenderShape ()Lnet/minecraft/world/level/block/RenderShape; i
	getSeed (Lnet/minecraft/core/BlockPos;)J a
	getShadeBrightness (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F f
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; j
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSoundType ()Lnet/minecraft/world/level/block/SoundType; r
	getTags ()Ljava/util/stream/Stream; n
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getVisualShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	hasAnalogOutputSignal ()Z k
	hasBlockEntity ()Z o
	hasLargeCollisionShape ()Z e
	hasPostProcess (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z q
	initCache ()V a
	is (Lnet/minecraft/core/HolderSet;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	is (Lnet/minecraft/tags/TagKey;Ljava/util/function/Predicate;)Z a
	is (Lnet/minecraft/world/level/block/Block;)Z a
	isAir ()Z h
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z r
	isFaceSturdy (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z d
	isFaceSturdy (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/SupportType;)Z a
	isPathfindable (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking ()Z q
	isRedstoneConductor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z g
	isSignalSource ()Z j
	isSolidRender (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z i
	isSuffocating (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z o
	isValidSpawn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Z a
	isViewBlocking (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z p
	mirror (Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	propagatesSkylightDown (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	randomTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	requiresCorrectToolForDrops ()Z t
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnAfterBreak (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	triggerEvent (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V b
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V b
	updateNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	updateNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateShape (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion ()Z f
net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase$Cache cvn$a$a
	DIRECTIONS e
	SUPPORT_TYPE_COUNT f
	collisionShape b
	faceSturdy j
	isCollisionShapeFullBlock d
	largeCollisionShape c
	lightBlock h
	occlusionShapes i
	propagatesSkylightDown g
	solidRender a
	getFaceSupportIndex (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/SupportType;)I b
	isFaceSturdy (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/SupportType;)Z a
net/minecraft/world/level/block/state/BlockBehaviour$OffsetType cvn$b
	$VALUES d
	NONE a
	XYZ c
	XZ b
	$values ()[Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; a
net/minecraft/world/level/block/state/BlockBehaviour$Properties cvn$c
	canOcclude n
	destroyTime g
	drops m
	dynamicShape v
	emissiveRendering u
	explosionResistance f
	friction j
	hasCollision c
	hasPostProcess t
	isAir o
	isRandomlyTicking i
	isRedstoneConductor q
	isSuffocating r
	isValidSpawn p
	isViewBlocking s
	jumpFactor l
	lightEmission e
	material a
	materialColor b
	offsetType w
	requiresCorrectToolForDrops h
	soundType d
	speedFactor k
	air ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; g
	color (Lnet/minecraft/world/level/material/MaterialColor;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	copy (Lnet/minecraft/world/level/block/state/BlockBehaviour;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	destroyTime (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; e
	dropsLike (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	dynamicShape ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; e
	emissiveRendering (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; e
	explosionResistance (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; f
	friction (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	hasPostProcess (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	instabreak ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	isRedstoneConductor (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	isSuffocating (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	isValidSpawn (Lnet/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	isViewBlocking (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	jumpFactor (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	lightLevel (Ljava/util/function/ToIntFunction;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	noCollission ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	noLootTable ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; f
	noOcclusion ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	of (Lnet/minecraft/world/level/material/Material;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	of (Lnet/minecraft/world/level/material/Material;Ljava/util/function/Function;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	of (Lnet/minecraft/world/level/material/Material;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	of (Lnet/minecraft/world/level/material/Material;Lnet/minecraft/world/level/material/MaterialColor;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	offsetType (Ljava/util/function/Function;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	offsetType (Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	randomTicks ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	requiresCorrectToolForDrops ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; h
	sound (Lnet/minecraft/world/level/block/SoundType;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	speedFactor (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	strength (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	strength (FF)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
net/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate cvn$d
net/minecraft/world/level/block/state/BlockBehaviour$StatePredicate cvn$e
net/minecraft/world/level/block/state/BlockState cvo
	CODEC b
	asState ()Lnet/minecraft/world/level/block/state/BlockState; s
net/minecraft/world/level/block/state/StateDefinition cvp
	NAME_PATTERN a
	owner b
	propertiesByName c
	states d
	any ()Lnet/minecraft/world/level/block/state/StateHolder; b
	appendPropertyCodec (Lcom/mojang/serialization/MapCodec;Ljava/util/function/Supplier;Ljava/lang/String;Lnet/minecraft/world/level/block/state/properties/Property;)Lcom/mojang/serialization/MapCodec; a
	getOwner ()Ljava/lang/Object; c
	getPossibleStates ()Lcom/google/common/collect/ImmutableList; a
	getProperties ()Ljava/util/Collection; d
	getProperty (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/Property; a
net/minecraft/world/level/block/state/StateDefinition$Builder cvp$a
	owner a
	properties b
	add ([Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/world/level/block/state/StateDefinition$Builder; a
	create (Ljava/util/function/Function;Lnet/minecraft/world/level/block/state/StateDefinition$Factory;)Lnet/minecraft/world/level/block/state/StateDefinition; a
	validateProperty (Lnet/minecraft/world/level/block/state/properties/Property;)V a
net/minecraft/world/level/block/state/StateDefinition$Factory cvp$b
net/minecraft/world/level/block/state/StateHolder cvq
	NAME_TAG c
	PROPERTIES_TAG d
	PROPERTY_ENTRY_TO_STRING_FUNCTION a
	neighbours g
	owner e
	propertiesCodec f
	values b
	codec (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	cycle (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/Object; a
	findNextInCollection (Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object; a
	getOptionalValue (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/util/Optional; d
	getProperties ()Ljava/util/Collection; v
	getValue (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/Comparable; c
	getValues ()Lcom/google/common/collect/ImmutableMap; w
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;)Z b
	makeNeighbourValues (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/util/Map; b
	populateNeighbours (Ljava/util/Map;)V a
	setValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/Object; a
net/minecraft/world/level/block/state/pattern/BlockInWorld cvs
	cachedEntity f
	entity e
	level a
	loadChunks c
	pos b
	state d
	getEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; b
	getLevel ()Lnet/minecraft/world/level/LevelReader; c
	getPos ()Lnet/minecraft/core/BlockPos; d
	getState ()Lnet/minecraft/world/level/block/state/BlockState; a
	hasState (Ljava/util/function/Predicate;)Ljava/util/function/Predicate; a
net/minecraft/world/level/block/state/pattern/BlockPattern cvt
	depth b
	height c
	pattern a
	width d
	createLevelCache (Lnet/minecraft/world/level/LevelReader;Z)Lcom/google/common/cache/LoadingCache; a
	find (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	getDepth ()I a
	getHeight ()I b
	getPattern ()[[[Ljava/util/function/Predicate; d
	getWidth ()I c
	matches (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lcom/google/common/cache/LoadingCache;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	matches (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	translateAndRotate (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;III)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/block/state/pattern/BlockPattern$BlockCacheLoader cvt$a
	level a
	loadChunks b
	load (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/pattern/BlockInWorld; a
net/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch cvt$b
	cache d
	depth g
	forwards b
	frontTopLeft a
	height f
	up c
	width e
	getBlock (III)Lnet/minecraft/world/level/block/state/pattern/BlockInWorld; a
	getDepth ()I f
	getForwards ()Lnet/minecraft/core/Direction; b
	getFrontTopLeft ()Lnet/minecraft/core/BlockPos; a
	getHeight ()I e
	getUp ()Lnet/minecraft/core/Direction; c
	getWidth ()I d
net/minecraft/world/level/block/state/pattern/BlockPatternBuilder cvu
	COMMA_JOINED a
	height d
	lookup c
	pattern b
	width e
	aisle ([Ljava/lang/String;)Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
	build ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; b
	createPattern ()[[[Ljava/util/function/Predicate; c
	ensureAllCharactersMatched ()V d
	start ()Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
	where (CLjava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
net/minecraft/world/level/block/state/predicate/BlockMaterialPredicate cvw
	AIR a
	material b
	forMaterial (Lnet/minecraft/world/level/material/Material;)Lnet/minecraft/world/level/block/state/predicate/BlockMaterialPredicate; a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/state/predicate/BlockPredicate cvx
	block a
	forBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/predicate/BlockPredicate; a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/state/predicate/BlockStatePredicate cvy
	ANY a
	definition b
	properties c
	applies (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;)Z a
	forBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/predicate/BlockStatePredicate; a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	where (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/predicate/BlockStatePredicate; a
net/minecraft/world/level/block/state/properties/AttachFace cwa
	$VALUES e
	CEILING c
	FLOOR a
	WALL b
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/AttachFace; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/BambooLeaves cwb
	$VALUES e
	LARGE c
	NONE a
	SMALL b
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/BambooLeaves; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/BedPart cwc
	$VALUES d
	FOOT b
	HEAD a
	name c
	$values ()[Lnet/minecraft/world/level/block/state/properties/BedPart; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/BellAttachType cwd
	$VALUES f
	CEILING b
	DOUBLE_WALL d
	FLOOR a
	SINGLE_WALL c
	name e
	$values ()[Lnet/minecraft/world/level/block/state/properties/BellAttachType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/BlockStateProperties cwe
	AGE_1 aq
	AGE_15 aw
	AGE_2 ar
	AGE_25 ax
	AGE_3 as
	AGE_4 at
	AGE_5 au
	AGE_7 av
	ATTACHED a
	ATTACH_FACE U
	AXIS J
	BAMBOO_LEAVES bl
	BED_PART bc
	BELL_ATTACHMENT V
	BERRIES E
	BITES ay
	BLOOM F
	BOTTOM b
	CANDLES az
	CAN_SUMMON H
	CHEST_TYPE bd
	CONDITIONAL c
	DELAY aA
	DISARMED d
	DISTANCE aC
	DOOR_HINGE bf
	DOUBLE_BLOCK_HALF ae
	DOWN L
	DRAG e
	DRIPSTONE_THICKNESS bo
	EAST N
	EAST_REDSTONE aa
	EAST_WALL W
	EGGS aD
	ENABLED f
	EXTENDED g
	EYE h
	FACING Q
	FACING_HOPPER R
	FALLING i
	HALF af
	HANGING j
	HAS_BOOK o
	HAS_BOTTLE_0 k
	HAS_BOTTLE_1 l
	HAS_BOTTLE_2 m
	HAS_RECORD n
	HATCH aE
	HORIZONTAL_AXIS I
	HORIZONTAL_FACING S
	INVERTED p
	IN_WALL q
	LAYERS aF
	LEVEL aP
	LEVEL_CAULDRON aK
	LEVEL_COMPOSTER aL
	LEVEL_FLOWING aM
	LEVEL_HONEY aN
	LIT r
	LOCKED s
	MAX_AGE_1 ai
	MAX_AGE_15 ao
	MAX_AGE_2 aj
	MAX_AGE_25 ap
	MAX_AGE_3 ak
	MAX_AGE_4 al
	MAX_AGE_5 am
	MAX_AGE_7 an
	MAX_DISTANCE aB
	MAX_LEVEL_15 aO
	MAX_LEVEL_3 aI
	MAX_LEVEL_8 aJ
	MAX_RESPAWN_ANCHOR_CHARGES aY
	MAX_ROTATIONS_16 ba
	MIN_LEVEL aG
	MIN_LEVEL_CAULDRON aH
	MIN_RESPAWN_ANCHOR_CHARGES aX
	MODE_COMPARATOR be
	MOISTURE aQ
	NORTH M
	NORTH_REDSTONE ab
	NORTH_WALL X
	NOTE aR
	NOTEBLOCK_INSTRUMENT bg
	OCCUPIED t
	OPEN u
	ORIENTATION T
	PERSISTENT v
	PICKLES aS
	PISTON_TYPE bh
	POWER aT
	POWERED w
	RAIL_SHAPE ag
	RAIL_SHAPE_STRAIGHT ah
	RESPAWN_ANCHOR_CHARGES aZ
	ROTATION_16 bb
	SCULK_SENSOR_PHASE bp
	SHORT x
	SHRIEKING G
	SIGNAL_FIRE y
	SLAB_TYPE bi
	SNOWY z
	SOUTH O
	SOUTH_REDSTONE ac
	SOUTH_WALL Y
	STABILITY_DISTANCE aW
	STABILITY_MAX_DISTANCE aV
	STAGE aU
	STAIRS_SHAPE bj
	STRUCTUREBLOCK_MODE bk
	TILT bm
	TRIGGERED A
	UNSTABLE B
	UP K
	VERTICAL_DIRECTION bn
	VINE_END D
	WATERLOGGED C
	WEST P
	WEST_REDSTONE ad
	WEST_WALL Z
net/minecraft/world/level/block/state/properties/BooleanProperty cwf
	values a
	create (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/BooleanProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Boolean;)Ljava/lang/String; a
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/ChestType cwg
	$VALUES g
	BY_ID d
	LEFT b
	RIGHT c
	SINGLE a
	name e
	opposite f
	$values ()[Lnet/minecraft/world/level/block/state/properties/ChestType; b
	getOpposite ()Lnet/minecraft/world/level/block/state/properties/ChestType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/ComparatorMode cwh
	$VALUES d
	COMPARE a
	SUBTRACT b
	name c
	$values ()[Lnet/minecraft/world/level/block/state/properties/ComparatorMode; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/DirectionProperty cwi
	create (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;Ljava/util/Collection;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;[Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
net/minecraft/world/level/block/state/properties/DoorHingeSide cwj
	$VALUES c
	LEFT a
	RIGHT b
	$values ()[Lnet/minecraft/world/level/block/state/properties/DoorHingeSide; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/DoubleBlockHalf cwk
	$VALUES c
	LOWER b
	UPPER a
	$values ()[Lnet/minecraft/world/level/block/state/properties/DoubleBlockHalf; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/DripstoneThickness cwl
	$VALUES g
	BASE e
	FRUSTUM c
	MIDDLE d
	TIP b
	TIP_MERGE a
	name f
	$values ()[Lnet/minecraft/world/level/block/state/properties/DripstoneThickness; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/EnumProperty cwm
	names b
	values a
	create (Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getName (Ljava/lang/Enum;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/Half cwn
	$VALUES d
	BOTTOM b
	TOP a
	name c
	$values ()[Lnet/minecraft/world/level/block/state/properties/Half; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/IntegerProperty cwo
	max c
	min b
	values a
	create (Ljava/lang/String;II)Lnet/minecraft/world/level/block/state/properties/IntegerProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getName (Ljava/lang/Integer;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/NoteBlockInstrument cwp
	$VALUES s
	BANJO o
	BASEDRUM b
	BASS e
	BELL g
	BIT n
	CHIME i
	COW_BELL l
	DIDGERIDOO m
	FLUTE f
	GUITAR h
	HARP a
	HAT d
	IRON_XYLOPHONE k
	PLING p
	SNARE c
	XYLOPHONE j
	name q
	soundEvent r
	$values ()[Lnet/minecraft/world/level/block/state/properties/NoteBlockInstrument; b
	byState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/properties/NoteBlockInstrument; a
	getSerializedName ()Ljava/lang/String; c
	getSoundEvent ()Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/world/level/block/state/properties/PistonType cwq
	$VALUES d
	DEFAULT a
	STICKY b
	name c
	$values ()[Lnet/minecraft/world/level/block/state/properties/PistonType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/Property cwr
	clazz a
	codec d
	hashCode c
	name b
	valueCodec e
	codec ()Lcom/mojang/serialization/Codec; d
	generateHashCode ()I b
	getAllValues ()Ljava/util/stream/Stream; c
	getName ()Ljava/lang/String; f
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
	getValueClass ()Ljava/lang/Class; g
	parseValue (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/block/state/StateHolder;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	value (Ljava/lang/Comparable;)Lnet/minecraft/world/level/block/state/properties/Property$Value; b
	value (Lnet/minecraft/world/level/block/state/StateHolder;)Lnet/minecraft/world/level/block/state/properties/Property$Value; a
	valueCodec ()Lcom/mojang/serialization/Codec; e
net/minecraft/world/level/block/state/properties/Property$Value cwr$a
	property a
	value b
	property ()Lnet/minecraft/world/level/block/state/properties/Property; a
	value ()Ljava/lang/Comparable; b
net/minecraft/world/level/block/state/properties/RailShape cws
	$VALUES l
	ASCENDING_EAST c
	ASCENDING_NORTH e
	ASCENDING_SOUTH f
	ASCENDING_WEST d
	EAST_WEST b
	NORTH_EAST j
	NORTH_SOUTH a
	NORTH_WEST i
	SOUTH_EAST g
	SOUTH_WEST h
	name k
	$values ()[Lnet/minecraft/world/level/block/state/properties/RailShape; d
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
	isAscending ()Z b
net/minecraft/world/level/block/state/properties/RedstoneSide cwt
	$VALUES e
	NONE c
	SIDE b
	UP a
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/RedstoneSide; b
	getSerializedName ()Ljava/lang/String; c
	isConnected ()Z a
net/minecraft/world/level/block/state/properties/SculkSensorPhase cwu
	$VALUES e
	ACTIVE b
	COOLDOWN c
	INACTIVE a
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/SculkSensorPhase; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/SlabType cwv
	$VALUES e
	BOTTOM b
	DOUBLE c
	TOP a
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/SlabType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/StairsShape cww
	$VALUES g
	INNER_LEFT b
	INNER_RIGHT c
	OUTER_LEFT d
	OUTER_RIGHT e
	STRAIGHT a
	name f
	$values ()[Lnet/minecraft/world/level/block/state/properties/StairsShape; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/StructureMode cwx
	$VALUES g
	CORNER c
	DATA d
	LOAD b
	SAVE a
	displayName f
	name e
	$values ()[Lnet/minecraft/world/level/block/state/properties/StructureMode; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/Tilt cwy
	$VALUES g
	FULL d
	NONE a
	PARTIAL c
	UNSTABLE b
	causesVibration f
	name e
	$values ()[Lnet/minecraft/world/level/block/state/properties/Tilt; b
	causesVibration ()Z a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/WallSide cwz
	$VALUES e
	LOW b
	NONE a
	TALL c
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/WallSide; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/WoodType cxa
	ACACIA d
	BIRCH c
	CRIMSON g
	DARK_OAK f
	JUNGLE e
	MANGROVE i
	OAK a
	SPRUCE b
	VALUES j
	WARPED h
	name k
	name ()Ljava/lang/String; b
	register (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/world/level/block/state/properties/WoodType; a
	values ()Ljava/util/stream/Stream; a
net/minecraft/world/level/border/BorderChangeListener cxc
	onBorderCenterSet (Lnet/minecraft/world/level/border/WorldBorder;DD)V a
	onBorderSetDamagePerBlock (Lnet/minecraft/world/level/border/WorldBorder;D)V b
	onBorderSetDamageSafeZOne (Lnet/minecraft/world/level/border/WorldBorder;D)V c
	onBorderSetWarningBlocks (Lnet/minecraft/world/level/border/WorldBorder;I)V b
	onBorderSetWarningTime (Lnet/minecraft/world/level/border/WorldBorder;I)V a
	onBorderSizeLerping (Lnet/minecraft/world/level/border/WorldBorder;DDJ)V a
	onBorderSizeSet (Lnet/minecraft/world/level/border/WorldBorder;D)V a
net/minecraft/world/level/border/BorderChangeListener$DelegateBorderChangeListener cxc$a
	worldBorder a
	onBorderCenterSet (Lnet/minecraft/world/level/border/WorldBorder;DD)V a
	onBorderSetDamagePerBlock (Lnet/minecraft/world/level/border/WorldBorder;D)V b
	onBorderSetDamageSafeZOne (Lnet/minecraft/world/level/border/WorldBorder;D)V c
	onBorderSetWarningBlocks (Lnet/minecraft/world/level/border/WorldBorder;I)V b
	onBorderSetWarningTime (Lnet/minecraft/world/level/border/WorldBorder;I)V a
	onBorderSizeLerping (Lnet/minecraft/world/level/border/WorldBorder;DDJ)V a
	onBorderSizeSet (Lnet/minecraft/world/level/border/WorldBorder;D)V a
net/minecraft/world/level/border/BorderStatus cxd
	$VALUES e
	GROWING a
	SHRINKING b
	STATIONARY c
	color d
	$values ()[Lnet/minecraft/world/level/border/BorderStatus; b
	getColor ()I a
net/minecraft/world/level/border/WorldBorder cxe
	DEFAULT_SETTINGS e
	MAX_CENTER_COORDINATE d
	MAX_SIZE c
	absoluteMaxSize k
	centerX i
	centerZ j
	damagePerBlock b
	damageSafeZone f
	extent l
	listeners a
	warningBlocks h
	warningTime g
	addListener (Lnet/minecraft/world/level/border/BorderChangeListener;)V a
	applySettings (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	clampToBounds (DDD)Lnet/minecraft/core/BlockPos; b
	createSettings ()Lnet/minecraft/world/level/border/WorldBorder$Settings; t
	getAbsoluteMaxSize ()I m
	getCenterX ()D a
	getCenterZ ()D b
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDamagePerBlock ()D o
	getDamageSafeZone ()D n
	getDistanceToBorder (DD)D b
	getDistanceToBorder (Lnet/minecraft/world/entity/Entity;)D a
	getLerpRemainingTime ()J j
	getLerpSpeed ()D p
	getLerpTarget ()D k
	getListeners ()Ljava/util/List; l
	getMaxX ()D g
	getMaxZ ()D h
	getMinX ()D e
	getMinZ ()D f
	getSize ()D i
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; d
	getWarningBlocks ()I r
	getWarningTime ()I q
	isInsideCloseToBorder (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Z a
	isWithinBounds (DD)Z a
	isWithinBounds (DDD)Z a
	isWithinBounds (Lnet/minecraft/core/BlockPos;)Z a
	isWithinBounds (Lnet/minecraft/world/level/ChunkPos;)Z a
	isWithinBounds (Lnet/minecraft/world/phys/AABB;)Z a
	lerpSizeBetween (DDJ)V a
	removeListener (Lnet/minecraft/world/level/border/BorderChangeListener;)V b
	setAbsoluteMaxSize (I)V a
	setCenter (DD)V c
	setDamagePerBlock (D)V c
	setDamageSafeZone (D)V b
	setSize (D)V a
	setWarningBlocks (I)V c
	setWarningTime (I)V b
	tick ()V s
net/minecraft/world/level/border/WorldBorder$BorderExtent cxe$a
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
net/minecraft/world/level/border/WorldBorder$MovingBorderExtent cxe$b
	from b
	lerpBegin e
	lerpDuration f
	lerpEnd d
	to c
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
net/minecraft/world/level/border/WorldBorder$Settings cxe$c
	centerX a
	centerZ b
	damagePerBlock c
	safeZone d
	size g
	sizeLerpTarget i
	sizeLerpTime h
	warningBlocks e
	warningTime f
	getCenterX ()D a
	getCenterZ ()D b
	getDamagePerBlock ()D c
	getSafeZone ()D d
	getSize ()D g
	getSizeLerpTarget ()D i
	getSizeLerpTime ()J h
	getWarningBlocks ()I e
	getWarningTime ()I f
	read (Lcom/mojang/serialization/DynamicLike;Lnet/minecraft/world/level/border/WorldBorder$Settings;)Lnet/minecraft/world/level/border/WorldBorder$Settings; a
	write (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/border/WorldBorder$StaticBorderExtent cxe$d
	maxX e
	maxZ f
	minX c
	minZ d
	shape g
	size b
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
	updateBox ()V n
net/minecraft/world/level/chunk/BlockColumn cxg
	getBlock (I)Lnet/minecraft/world/level/block/state/BlockState; a
	setBlock (ILnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/chunk/BulkSectionAccess cxh
	acquiredSections b
	lastSection c
	lastSectionKey d
	level a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	getSection (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/LevelChunkSection; a
net/minecraft/world/level/chunk/CarvingMask cxi
	additionalMask c
	mask b
	minY a
	get (III)Z b
	getIndex (III)I c
	set (III)V a
	setAdditionalMask (Lnet/minecraft/world/level/chunk/CarvingMask$Mask;)V a
	stream (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/stream/Stream; a
	toArray ()[J a
net/minecraft/world/level/chunk/CarvingMask$Mask cxi$a
net/minecraft/world/level/chunk/ChunkAccess cxj
	EMPTY_REFERENCE_SET m
	LOGGER l
	blendingData f
	blockEntities i
	carverBiomeSettings p
	chunkPos c
	heightmaps g
	inhabitedTime o
	isLightCorrect n
	levelHeightAccessor j
	noiseChunk d
	pendingBlockEntities h
	postProcessing a
	sections k
	structureStarts q
	structuresRefences r
	unsaved b
	upgradeData e
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addPackedPostProcess (SI)V a
	addReferenceForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;J)V a
	carverBiome (Ljava/util/function/Supplier;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings; a
	fillBiomesFromNoise (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/biome/Climate$Sampler;)V a
	getAllReferences ()Ljava/util/Map; h
	getAllStarts ()Ljava/util/Map; g
	getBelowZeroRetrogen ()Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen; x
	getBlendingData ()Lnet/minecraft/world/level/levelgen/blending/BlendingData; t
	getBlockEntitiesPos ()Ljava/util/Set; c
	getBlockEntityNbt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; f
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; g
	getBlockTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; o
	getEventDispatcher (I)Lnet/minecraft/world/level/gameevent/GameEventDispatcher; a
	getFluidTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; p
	getHeight ()I v_
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getHeightAccessorForGeneration ()Lnet/minecraft/world/level/LevelHeightAccessor; z
	getHeightmaps ()Ljava/util/Collection; e
	getHighestSection ()Lnet/minecraft/world/level/chunk/LevelChunkSection; a
	getHighestSectionPosition ()I b
	getInhabitedTime ()J u
	getLights ()Ljava/util/stream/Stream; n
	getMinBuildHeight ()I u_
	getOrCreateHeightmapUnprimed (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap; a
	getOrCreateNoiseChunk (Ljava/util/function/Function;)Lnet/minecraft/world/level/levelgen/NoiseChunk; a
	getOrCreateOffsetList ([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList; a
	getPos ()Lnet/minecraft/world/level/ChunkPos; f
	getPostProcessing ()[Lit/unimi/dsi/fastutil/shorts/ShortList; m
	getReferencesForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getSection (I)Lnet/minecraft/world/level/chunk/LevelChunkSection; b
	getSections ()[Lnet/minecraft/world/level/chunk/LevelChunkSection; d
	getStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; j
	getTicksForSerialization ()Lnet/minecraft/world/level/chunk/ChunkAccess$TicksToSave; q
	getUpgradeData ()Lnet/minecraft/world/level/chunk/UpgradeData; r
	hasAnyStructureReferences ()Z w
	hasPrimedHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Z b
	incrementInhabitedTime (J)V a
	isLightCorrect ()Z v
	isOldNoiseGeneration ()Z s
	isUnsaved ()Z i
	isUpgrading ()Z y
	isYSpaceEmpty (II)Z a
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	replaceMissingSections (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/Registry;[Lnet/minecraft/world/level/chunk/LevelChunkSection;)V a
	setAllReferences (Ljava/util/Map;)V b
	setAllStarts (Ljava/util/Map;)V a
	setBlendingData (Lnet/minecraft/world/level/levelgen/blending/BlendingData;)V a
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockEntityNbt (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	setInhabitedTime (J)V b
	setLightCorrect (Z)V b
	setStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setUnsaved (Z)V a
net/minecraft/world/level/chunk/ChunkAccess$TicksToSave cxj$a
	blocks a
	fluids b
	blocks ()Lnet/minecraft/world/ticks/SerializableTickContainer; a
	fluids ()Lnet/minecraft/world/ticks/SerializableTickContainer; b
net/minecraft/world/level/chunk/ChunkGenerator cxk
	CODEC a
	LOGGER e
	biomeSource c
	featuresPerStep f
	generationSettingsGetter g
	hasGeneratedPositions j
	placementsForStructure h
	ringPositions i
	structureOverrides d
	structureSets b
	addDebugScreenInfo (Ljava/util/List;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/core/BlockPos;)V a
	applyBiomeDecoration (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/StructureManager;)V a
	applyCarvers (Lnet/minecraft/server/level/WorldGenRegion;JLnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	buildSurface (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; b
	commonCodec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1; a
	createBiomes (Lnet/minecraft/core/Registry;Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	createReferences (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	createStructures (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;J)V a
	ensureStructuresGenerated (Lnet/minecraft/world/level/levelgen/RandomState;)V a
	fetchReferences (Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/structure/Structure;)I a
	fillFromNoise (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	findNearestMapStructure (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/HolderSet;Lnet/minecraft/core/BlockPos;IZ)Lcom/mojang/datafixers/util/Pair; a
	generatePositions (Lnet/minecraft/world/level/levelgen/RandomState;)V b
	generateRingPositions (Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement;)Ljava/util/concurrent/CompletableFuture; a
	getBaseColumn (IILnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/NoiseColumn; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I a
	getBiomeGenerationSettings (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings; a
	getBiomeSource ()Lnet/minecraft/world/level/biome/BiomeSource; d
	getFirstFreeHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I b
	getFirstOccupiedHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I c
	getGenDepth ()I e
	getMinY ()I g
	getMobsAt (Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/util/random/WeightedRandomList; a
	getNearestGeneratedStructure (Ljava/util/Set;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement;)Lcom/mojang/datafixers/util/Pair; a
	getNearestGeneratedStructure (Ljava/util/Set;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/StructureManager;IIIZJLnet/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement;)Lcom/mojang/datafixers/util/Pair; a
	getPlacementsForStructure (Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/levelgen/RandomState;)Ljava/util/List; a
	getRingPositionsFor (Lnet/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement;Lnet/minecraft/world/level/levelgen/RandomState;)Ljava/util/List; a
	getSeaLevel ()I f
	getSpawnHeight (Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	getStructureGeneratingAt (Ljava/util/Set;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/StructureManager;ZLnet/minecraft/world/level/levelgen/structure/placement/StructurePlacement;Lnet/minecraft/world/level/ChunkPos;)Lcom/mojang/datafixers/util/Pair; a
	getTypeNameForDataFixer ()Ljava/util/Optional; c
	getWritableArea (Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	hasStructureChunkInRange (Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/levelgen/RandomState;JIII)Z a
	possibleStructureSets ()Ljava/util/stream/Stream; a
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
	tryAddReference (Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)Z a
	tryGenerateStructure (Lnet/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;JLnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/SectionPos;)Z a
net/minecraft/world/level/chunk/ChunkGenerators cxl
	bootstrap (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/chunk/ChunkSource cxm
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IIZ)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getChunkForLighting (II)Lnet/minecraft/world/level/BlockGetter; c
	getChunkNow (II)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; o
	getLoadedChunksCount ()I i
	hasChunk (II)Z b
	setSpawnSettings (ZZ)V a
	tick (Ljava/util/function/BooleanSupplier;Z)V a
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
net/minecraft/world/level/chunk/ChunkStatus cxn
	BIOMES f
	CARVERS i
	EMPTY c
	FEATURES k
	FULL o
	HEIGHTMAPS n
	LIGHT l
	LIQUID_CARVERS j
	MAX_STRUCTURE_DISTANCE a
	NOISE g
	PASSTHROUGH_LOAD_TASK q
	POST_FEATURES b
	PRE_FEATURES p
	RANGE_BY_STATUS s
	SPAWN m
	STATUS_BY_RANGE r
	STRUCTURE_REFERENCES e
	STRUCTURE_STARTS d
	SURFACE h
	chunkType z
	generationTask w
	heightmapsAfter A
	index u
	loadingTask x
	name t
	parent v
	range y
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	generate (Ljava/util/concurrent/Executor;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/server/level/ThreadedLevelLightEngine;Ljava/util/function/Function;Ljava/util/List;Z)Ljava/util/concurrent/CompletableFuture; a
	getChunkType ()Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType; g
	getDistance (Lnet/minecraft/world/level/chunk/ChunkStatus;)I a
	getIndex ()I c
	getName ()Ljava/lang/String; d
	getParent ()Lnet/minecraft/world/level/chunk/ChunkStatus; e
	getRange ()I f
	getStatusAroundFullChunk (I)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	getStatusList ()Ljava/util/List; a
	heightmapsAfter ()Ljava/util/EnumSet; h
	isLighted (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	isOrAfter (Lnet/minecraft/world/level/chunk/ChunkStatus;)Z b
	lightChunk (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/server/level/ThreadedLevelLightEngine;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	load (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/server/level/ThreadedLevelLightEngine;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	maxDistance ()I b
	register (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$GenerationTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$GenerationTask;Lnet/minecraft/world/level/chunk/ChunkStatus$LoadingTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	registerSimple (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
net/minecraft/world/level/chunk/ChunkStatus$ChunkType cxn$a
	$VALUES c
	LEVELCHUNK b
	PROTOCHUNK a
	$values ()[Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType; a
net/minecraft/world/level/chunk/ChunkStatus$GenerationTask cxn$b
net/minecraft/world/level/chunk/ChunkStatus$LoadingTask cxn$c
net/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask cxn$d
net/minecraft/world/level/chunk/DataLayer cxo
	LAYER_COUNT a
	LAYER_SIZE b
	NIBBLE_SIZE e
	SIZE c
	data d
	copy ()Lnet/minecraft/world/level/chunk/DataLayer; b
	get (I)I b
	get (III)I a
	getByteIndex (I)I d
	getData ()[B a
	getIndex (III)I b
	getNibbleIndex (I)I c
	isEmpty ()Z c
	layerToString (I)Ljava/lang/String; a
	set (II)V a
	set (IIII)V a
net/minecraft/world/level/chunk/EmptyLevelChunk cxp
	biome l
	addAndRegisterBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V b
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFullStatus ()Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; B
	getLightEmission (Lnet/minecraft/core/BlockPos;)I h
	isEmpty ()Z A
	isYSpaceEmpty (II)Z a
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/chunk/GlobalPalette cxq
	registry a
	copy ()Lnet/minecraft/world/level/chunk/Palette; c
	create (ILnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PaletteResize;Ljava/util/List;)Lnet/minecraft/world/level/chunk/Palette; a
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/HashMapPalette cxr
	bits d
	registry a
	resizeHandler c
	values b
	copy ()Lnet/minecraft/world/level/chunk/Palette; c
	create (ILnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PaletteResize;Ljava/util/List;)Lnet/minecraft/world/level/chunk/Palette; a
	getEntries ()Ljava/util/List; d
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/ImposterProtoChunk cxs
	allowWrites m
	wrapped l
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addReferenceForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;J)V a
	fillBiomesFromNoise (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/biome/Climate$Sampler;)V a
	fixType (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; c
	getAllReferences ()Ljava/util/Map; h
	getAllStarts ()Ljava/util/Map; g
	getBlendingData ()Lnet/minecraft/world/level/levelgen/blending/BlendingData; t
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntityNbt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; f
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; g
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; o
	getCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/chunk/CarvingMask; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFluidTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; p
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLights ()Ljava/util/stream/Stream; n
	getMaxLightLevel ()I L
	getOrCreateCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/chunk/CarvingMask; b
	getOrCreateHeightmapUnprimed (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap; a
	getPos ()Lnet/minecraft/world/level/ChunkPos; f
	getReferencesForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getSection (I)Lnet/minecraft/world/level/chunk/LevelChunkSection; b
	getSections ()[Lnet/minecraft/world/level/chunk/LevelChunkSection; d
	getStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; j
	getTicksForSerialization ()Lnet/minecraft/world/level/chunk/ChunkAccess$TicksToSave; q
	getWrapped ()Lnet/minecraft/world/level/chunk/LevelChunk; A
	isLightCorrect ()Z v
	isUnsaved ()Z i
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setAllReferences (Ljava/util/Map;)V b
	setAllStarts (Ljava/util/Map;)V a
	setBlendingData (Lnet/minecraft/world/level/levelgen/blending/BlendingData;)V a
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockEntityNbt (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	setLightCorrect (Z)V b
	setStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	setUnsaved (Z)V a
net/minecraft/world/level/chunk/LevelChunk cxt
	LOGGER l
	NULL_TICKER m
	blockTicks u
	clientLightReady p
	fluidTicks v
	fullStatus r
	gameEventDispatcherSections t
	level q
	loaded o
	postLoad s
	tickersInLevel n
	addAndRegisterBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V b
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addGameEventListener (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/server/level/ServerLevel;)V b
	clearAllBlockEntities ()V G
	createBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; j
	createTicker (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/level/block/entity/BlockEntityTicker;)Lnet/minecraft/world/level/block/entity/TickingBlockEntity; a
	getBlockEntities ()Ljava/util/Map; E
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; g
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; o
	getEventDispatcher (I)Lnet/minecraft/world/level/gameevent/GameEventDispatcher; a
	getFluidState (III)Lnet/minecraft/world/level/material/FluidState; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFluidTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; p
	getFullStatus ()Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; B
	getLevel ()Lnet/minecraft/world/level/Level; D
	getLights ()Ljava/util/stream/Stream; n
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; j
	getTicksForSerialization ()Lnet/minecraft/world/level/chunk/ChunkAccess$TicksToSave; q
	isClientLightReady ()Z I
	isEmpty ()Z A
	isInLevel ()Z J
	isTicking (Lnet/minecraft/core/BlockPos;)Z k
	postProcessGeneration ()V F
	promotePendingBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	registerAllBlockEntitiesAfterLevelLoad ()V H
	registerTickContainerInLevel (Lnet/minecraft/server/level/ServerLevel;)V a
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	removeBlockEntityTicker (Lnet/minecraft/core/BlockPos;)V l
	removeGameEventListener (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/server/level/ServerLevel;)V a
	replaceWithPacketData (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Consumer;)V a
	runPostLoad ()V C
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setClientLightReady (Z)V d
	setFullStatus (Ljava/util/function/Supplier;)V b
	setLoaded (Z)V c
	unpackTicks (J)V c
	unregisterTickContainerFromLevel (Lnet/minecraft/server/level/ServerLevel;)V b
	updateBlockEntityTicker (Lnet/minecraft/world/level/block/entity/BlockEntity;)V c
net/minecraft/world/level/chunk/LevelChunk$BoundTickingBlockEntity cxt$a
	blockEntity b
	loggedInvalidBlockState d
	ticker c
	getPos ()Lnet/minecraft/core/BlockPos; c
	getType ()Ljava/lang/String; d
	isRemoved ()Z b
	tick ()V a
net/minecraft/world/level/chunk/LevelChunk$EntityCreationType cxt$b
	$VALUES d
	CHECK c
	IMMEDIATE a
	QUEUED b
	$values ()[Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType; a
net/minecraft/world/level/chunk/LevelChunk$PostLoadProcessor cxt$c
net/minecraft/world/level/chunk/LevelChunk$RebindableTickingBlockEntityWrapper cxt$d
	ticker b
	getPos ()Lnet/minecraft/core/BlockPos; c
	getType ()Ljava/lang/String; d
	isRemoved ()Z b
	rebind (Lnet/minecraft/world/level/block/entity/TickingBlockEntity;)V a
	tick ()V a
net/minecraft/world/level/chunk/LevelChunkSection cxu
	BIOME_CONTAINER_BITS d
	SECTION_HEIGHT b
	SECTION_SIZE c
	SECTION_WIDTH a
	biomes j
	bottomBlockY e
	nonEmptyBlockCount f
	states i
	tickingBlockCount g
	tickingFluidCount h
	acquire ()V a
	bottomBlockY ()I g
	fillBiomesFromNoise (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/biome/Climate$Sampler;II)V a
	getBiomes ()Lnet/minecraft/world/level/chunk/PalettedContainerRO; j
	getBlockState (III)Lnet/minecraft/world/level/block/state/BlockState; a
	getBottomBlockY (I)I a
	getFluidState (III)Lnet/minecraft/world/level/material/FluidState; b
	getNoiseBiome (III)Lnet/minecraft/core/Holder; c
	getSerializedSize ()I k
	getStates ()Lnet/minecraft/world/level/chunk/PalettedContainer; i
	hasOnlyAir ()Z c
	isRandomlyTicking ()Z d
	isRandomlyTickingBlocks ()Z e
	isRandomlyTickingFluids ()Z f
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	recalcBlockCounts ()V h
	release ()V b
	setBlockState (IIILnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	setBlockState (IIILnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/LightChunkGetter cxv
	getChunkForLighting (II)Lnet/minecraft/world/level/BlockGetter; c
	getLevel ()Lnet/minecraft/world/level/BlockGetter; p
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
net/minecraft/world/level/chunk/LinearPalette cxw
	bits d
	registry a
	resizeHandler c
	size e
	values b
	copy ()Lnet/minecraft/world/level/chunk/Palette; c
	create (ILnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PaletteResize;Ljava/util/List;)Lnet/minecraft/world/level/chunk/Palette; a
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/MissingPaletteEntryException cxx
net/minecraft/world/level/chunk/Palette cxy
	copy ()Lnet/minecraft/world/level/chunk/Palette; c
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/Palette$Factory cxy$a
net/minecraft/world/level/chunk/PaletteResize cxz
net/minecraft/world/level/chunk/PalettedContainer cya
	MIN_PALETTE_BITS a
	data d
	dummyPaletteResize b
	registry c
	strategy e
	threadingDetector f
	acquire ()V a
	codec (Lnet/minecraft/core/IdMap;Lcom/mojang/serialization/Codec;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;Ljava/lang/Object;Lnet/minecraft/world/level/chunk/PalettedContainerRO$Unpacker;)Lcom/mojang/serialization/Codec; a
	codecRO (Lnet/minecraft/core/IdMap;Lcom/mojang/serialization/Codec;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;Ljava/lang/Object;)Lcom/mojang/serialization/Codec; b
	codecRW (Lnet/minecraft/core/IdMap;Lcom/mojang/serialization/Codec;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;Ljava/lang/Object;)Lcom/mojang/serialization/Codec; a
	copy ()Lnet/minecraft/world/level/chunk/PalettedContainer; d
	count (Lnet/minecraft/world/level/chunk/PalettedContainer$CountConsumer;)V a
	createOrReuseData (Lnet/minecraft/world/level/chunk/PalettedContainer$Data;I)Lnet/minecraft/world/level/chunk/PalettedContainer$Data; a
	get (I)Ljava/lang/Object; a
	get (III)Ljava/lang/Object; a
	getAll (Ljava/util/function/Consumer;)V a
	getAndSet (IIILjava/lang/Object;)Ljava/lang/Object; a
	getAndSet (ILjava/lang/Object;)Ljava/lang/Object; a
	getAndSetUnchecked (IIILjava/lang/Object;)Ljava/lang/Object; b
	getSerializedSize ()I c
	maybeHas (Ljava/util/function/Predicate;)Z a
	pack (Lnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;)Lnet/minecraft/world/level/chunk/PalettedContainerRO$PackedData; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	recreate ()Lnet/minecraft/world/level/chunk/PalettedContainer; e
	release ()V b
	set (IIILjava/lang/Object;)V c
	set (ILjava/lang/Object;)V b
	swapPalette ([ILjava/util/function/IntUnaryOperator;)V a
	unpack (Lnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;Lnet/minecraft/world/level/chunk/PalettedContainerRO$PackedData;)Lcom/mojang/serialization/DataResult; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/PalettedContainer$Configuration cya$a
	bits b
	factory a
	bits ()I b
	createData (Lnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PaletteResize;I)Lnet/minecraft/world/level/chunk/PalettedContainer$Data; a
	factory ()Lnet/minecraft/world/level/chunk/Palette$Factory; a
net/minecraft/world/level/chunk/PalettedContainer$CountConsumer cya$b
net/minecraft/world/level/chunk/PalettedContainer$Data cya$c
	configuration a
	palette c
	storage b
	configuration ()Lnet/minecraft/world/level/chunk/PalettedContainer$Configuration; c
	copy ()Lnet/minecraft/world/level/chunk/PalettedContainer$Data; b
	copyFrom (Lnet/minecraft/world/level/chunk/Palette;Lnet/minecraft/util/BitStorage;)V a
	getSerializedSize ()I a
	palette ()Lnet/minecraft/world/level/chunk/Palette; e
	storage ()Lnet/minecraft/util/BitStorage; d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/chunk/PalettedContainer$Strategy cya$d
	GLOBAL_PALETTE_FACTORY f
	HASHMAP_PALETTE_FACTORY c
	LINEAR_PALETTE_FACTORY b
	SECTION_BIOMES e
	SECTION_STATES d
	SINGLE_VALUE_PALETTE_FACTORY a
	sizeBits g
	calculateBitsForSerialization (Lnet/minecraft/core/IdMap;I)I b
	getConfiguration (Lnet/minecraft/core/IdMap;I)Lnet/minecraft/world/level/chunk/PalettedContainer$Configuration; a
	getIndex (III)I a
	size ()I a
net/minecraft/world/level/chunk/PalettedContainerRO cyb
	count (Lnet/minecraft/world/level/chunk/PalettedContainer$CountConsumer;)V a
	get (III)Ljava/lang/Object; a
	getAll (Ljava/util/function/Consumer;)V a
	getSerializedSize ()I c
	maybeHas (Ljava/util/function/Predicate;)Z a
	pack (Lnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;)Lnet/minecraft/world/level/chunk/PalettedContainerRO$PackedData; a
	recreate ()Lnet/minecraft/world/level/chunk/PalettedContainer; e
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/PalettedContainerRO$PackedData cyb$a
	paletteEntries a
	storage b
	paletteEntries ()Ljava/util/List; a
	storage ()Ljava/util/Optional; b
net/minecraft/world/level/chunk/PalettedContainerRO$Unpacker cyb$b
net/minecraft/world/level/chunk/ProtoChunk cyc
	belowZeroRetrogen q
	blockTicks r
	carvingMasks p
	entities n
	fluidTicks s
	lightEngine l
	lights o
	status m
	addEntity (Lnet/minecraft/nbt/CompoundTag;)V b
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addLight (Lnet/minecraft/core/BlockPos;)V j
	addLight (SI)V b
	addPackedPostProcess (SI)V a
	getBelowZeroRetrogen ()Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen; x
	getBlockEntities ()Ljava/util/Map; C
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; g
	getBlockEntityNbts ()Ljava/util/Map; E
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; o
	getCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/chunk/CarvingMask; a
	getEntities ()Ljava/util/List; D
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFluidTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; p
	getHeightAccessorForGeneration ()Lnet/minecraft/world/level/LevelHeightAccessor; z
	getLights ()Ljava/util/stream/Stream; n
	getOrCreateCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/chunk/CarvingMask; b
	getPackedLights ()[Lit/unimi/dsi/fastutil/shorts/ShortList; B
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; j
	getTicksForSerialization ()Lnet/minecraft/world/level/chunk/ChunkAccess$TicksToSave; q
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	packOffsetCoordinates (Lnet/minecraft/core/BlockPos;)S k
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setBelowZeroRetrogen (Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen;)V a
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;Lnet/minecraft/world/level/chunk/CarvingMask;)V a
	setLightEngine (Lnet/minecraft/world/level/lighting/LevelLightEngine;)V a
	setStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	unpackBlockTicks ()Lnet/minecraft/world/ticks/LevelChunkTicks; F
	unpackFluidTicks ()Lnet/minecraft/world/ticks/LevelChunkTicks; G
	unpackOffsetCoordinates (SILnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/core/BlockPos; a
	unpackTicks (Lnet/minecraft/world/ticks/ProtoChunkTicks;)Lnet/minecraft/world/ticks/LevelChunkTicks; a
net/minecraft/world/level/chunk/SingleValuePalette cyd
	registry a
	resizeHandler c
	value b
	copy ()Lnet/minecraft/world/level/chunk/Palette; c
	create (ILnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PaletteResize;Ljava/util/List;)Lnet/minecraft/world/level/chunk/Palette; a
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/StructureAccess cye
	addReferenceForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;J)V a
	getAllReferences ()Ljava/util/Map; h
	getReferencesForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	setAllReferences (Ljava/util/Map;)V b
	setStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
net/minecraft/world/level/chunk/UpgradeData cyf
	CHUNKY_FIXERS j
	DIRECTIONS d
	EMPTY a
	LOGGER b
	MAP i
	TAG_INDICES c
	index h
	neighborBlockTicks f
	neighborFluidTicks g
	sides e
	isEmpty ()Z a
	loadTicks (Lnet/minecraft/nbt/CompoundTag;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/List;)V a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	upgrade (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	upgradeInside (Lnet/minecraft/world/level/chunk/LevelChunk;)V b
	upgradeSides (Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/core/Direction8;)V a
	write ()Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/world/level/chunk/UpgradeData$BlockFixer cyf$a
	processChunk (Lnet/minecraft/world/level/LevelAccessor;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/chunk/UpgradeData$BlockFixers cyf$b
	$VALUES g
	BLACKLIST a
	CHEST c
	DEFAULT b
	DIRECTIONS f
	LEAVES d
	STEM_BLOCK e
	$values ()[Lnet/minecraft/world/level/chunk/UpgradeData$BlockFixers; a
net/minecraft/world/level/chunk/storage/ChunkScanAccess cyh
	scanChunk (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/StreamTagVisitor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/world/level/chunk/storage/ChunkSerializer cyi
	BLOCK_LIGHT_TAG f
	BLOCK_STATE_CODEC h
	BLOCK_TICKS_TAG k
	FLUID_TICKS_TAG l
	HEIGHTMAPS_TAG c
	IS_LIGHT_ON_TAG d
	LOGGER i
	SECTIONS_TAG e
	SKY_LIGHT_TAG g
	TAG_UPGRADE_DATA j
	X_POS_TAG a
	Z_POS_TAG b
	getChunkTypeFromTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType; a
	getListOfCompoundsOrNull (Lnet/minecraft/nbt/CompoundTag;Ljava/lang/String;)Lnet/minecraft/nbt/ListTag; a
	logErrors (Lnet/minecraft/world/level/ChunkPos;ILjava/lang/String;)V a
	makeBiomeCodec (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec; a
	packOffsets ([Lit/unimi/dsi/fastutil/shorts/ShortList;)Lnet/minecraft/nbt/ListTag; a
	packStructureData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/world/level/ChunkPos;Ljava/util/Map;Ljava/util/Map;)Lnet/minecraft/nbt/CompoundTag; a
	postLoadChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/LevelChunk$PostLoadProcessor; a
	read (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/ai/village/poi/PoiManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/ProtoChunk; a
	saveTicks (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/chunk/ChunkAccess$TicksToSave;)V a
	unpackStructureReferences (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Map; a
	unpackStructureStart (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;J)Ljava/util/Map; a
	write (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/chunk/storage/ChunkStorage cyj
	LAST_MONOLYTH_STRUCTURE_DATA_VERSION d
	fixerUpper e
	legacyStructureHandler b
	worker a
	chunkScanner ()Lnet/minecraft/world/level/chunk/storage/ChunkScanAccess; o
	flushWorker ()V n
	getLegacyStructureHandler (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;)Lnet/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler; a
	getVersion (Lnet/minecraft/nbt/CompoundTag;)I a
	injectDatafixingContext (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/resources/ResourceKey;Ljava/util/Optional;)V a
	isOldChunkAround (Lnet/minecraft/world/level/ChunkPos;I)Z a
	read (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; f
	upgradeChunkTag (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;Lnet/minecraft/nbt/CompoundTag;Ljava/util/Optional;)Lnet/minecraft/nbt/CompoundTag; a
	write (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/chunk/storage/EntityStorage cyk
	ENTITIES_TAG c
	LOGGER b
	POSITION_TAG d
	emptyChunks g
	entityDeserializerQueue h
	fixerUpper a
	level e
	worker f
	emptyChunk (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/entity/ChunkEntities; b
	flush (Z)V a
	getVersion (Lnet/minecraft/nbt/CompoundTag;)I a
	loadEntities (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; a
	readChunkPos (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/ChunkPos; b
	storeEntities (Lnet/minecraft/world/level/entity/ChunkEntities;)V a
	upgradeChunkTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; c
	writeChunkPos (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/world/level/chunk/storage/IOWorker cyl
	LOGGER a
	REGION_CACHE_SIZE g
	mailbox c
	pendingWrites e
	regionCacheForBlender f
	shutdownRequested b
	storage d
	createOldDataForRegion (II)Ljava/util/concurrent/CompletableFuture; b
	getOrCreateOldDataForRegion (II)Ljava/util/concurrent/CompletableFuture; a
	isOldChunk (Lnet/minecraft/nbt/CompoundTag;)Z a
	isOldChunkAround (Lnet/minecraft/world/level/ChunkPos;I)Z a
	loadAsync (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; a
	runStore (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/storage/IOWorker$PendingStore;)V a
	scanChunk (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/StreamTagVisitor;)Ljava/util/concurrent/CompletableFuture; a
	store (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/concurrent/CompletableFuture; a
	storePendingChunk ()V a
	submitTask (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; a
	synchronize (Z)Ljava/util/concurrent/CompletableFuture; a
	tellStorePending ()V b
net/minecraft/world/level/chunk/storage/IOWorker$PendingStore cyl$a
	data a
	result b
net/minecraft/world/level/chunk/storage/IOWorker$Priority cyl$b
	$VALUES d
	BACKGROUND b
	FOREGROUND a
	SHUTDOWN c
	$values ()[Lnet/minecraft/world/level/chunk/storage/IOWorker$Priority; a
net/minecraft/world/level/chunk/storage/RegionBitmap cym
	used a
	allocate (I)I a
	force (II)V a
	free (II)V b
	getUsed ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/world/level/chunk/storage/RegionFile cyn
	CHUNK_HEADER_SIZE e
	CHUNK_NOT_PRESENT k
	EXTERNAL_CHUNK_THRESHOLD j
	EXTERNAL_FILE_EXTENSION h
	EXTERNAL_STREAM_FLAG i
	HEADER_OFFSET f
	LOGGER c
	PADDING_BUFFER g
	SECTOR_BYTES d
	SECTOR_INTS a
	externalFileDir m
	file l
	header o
	offsets p
	timestamps q
	usedSectors b
	version n
	clear (Lnet/minecraft/world/level/ChunkPos;)V d
	createChunkInputStream (Lnet/minecraft/world/level/ChunkPos;BLjava/io/InputStream;)Ljava/io/DataInputStream; a
	createExternalChunkInputStream (Lnet/minecraft/world/level/ChunkPos;B)Ljava/io/DataInputStream; a
	createExternalStub ()Ljava/nio/ByteBuffer; c
	createStream (Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream; a
	doesChunkExist (Lnet/minecraft/world/level/ChunkPos;)Z b
	flush ()V a
	getChunkDataInputStream (Lnet/minecraft/world/level/ChunkPos;)Ljava/io/DataInputStream; a
	getChunkDataOutputStream (Lnet/minecraft/world/level/ChunkPos;)Ljava/io/DataOutputStream; c
	getExternalChunkPath (Lnet/minecraft/world/level/ChunkPos;)Ljava/nio/file/Path; f
	getExternalChunkVersion (B)B b
	getNumSectors (I)I a
	getOffset (Lnet/minecraft/world/level/ChunkPos;)I g
	getOffsetIndex (Lnet/minecraft/world/level/ChunkPos;)I h
	getSectorNumber (I)I b
	getTimestamp ()I b
	hasChunk (Lnet/minecraft/world/level/ChunkPos;)Z e
	isExternalStreamChunk (B)Z a
	packSectorOffset (II)I a
	padToFullSector ()V e
	sizeToSectors (I)I c
	write (Lnet/minecraft/world/level/ChunkPos;Ljava/nio/ByteBuffer;)V a
	writeHeader ()V d
	writeToExternalFile (Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Lnet/minecraft/world/level/chunk/storage/RegionFile$CommitOp; a
net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer cyn$a
	pos b
net/minecraft/world/level/chunk/storage/RegionFile$CommitOp cyn$b
net/minecraft/world/level/chunk/storage/RegionFileStorage cyo
	ANVIL_EXTENSION a
	MAX_CACHE_SIZE b
	folder d
	regionCache c
	sync e
	flush ()V a
	getRegionFile (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/chunk/storage/RegionFile; b
	read (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
	scanChunk (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/StreamTagVisitor;)V a
	write (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/chunk/storage/RegionFileVersion cyp
	VERSIONS d
	VERSION_DEFLATE b
	VERSION_GZIP a
	VERSION_NONE c
	id e
	inputWrapper f
	outputWrapper g
	fromId (I)Lnet/minecraft/world/level/chunk/storage/RegionFileVersion; a
	getId ()I a
	isValidVersion (I)Z b
	register (Lnet/minecraft/world/level/chunk/storage/RegionFileVersion;)Lnet/minecraft/world/level/chunk/storage/RegionFileVersion; a
	wrap (Ljava/io/InputStream;)Ljava/io/InputStream; a
	wrap (Ljava/io/OutputStream;)Ljava/io/OutputStream; a
net/minecraft/world/level/chunk/storage/RegionFileVersion$StreamWrapper cyp$a
net/minecraft/world/level/chunk/storage/SectionStorage cyq
	LOGGER a
	SECTIONS_TAG b
	codec g
	dirty f
	factory h
	fixerUpper i
	levelHeightAccessor c
	registryAccess k
	storage e
	type j
	worker d
	flush (Lnet/minecraft/world/level/ChunkPos;)V a
	get (J)Ljava/util/Optional; c
	getKey (Lnet/minecraft/world/level/ChunkPos;I)J a
	getOrCreate (J)Ljava/lang/Object; f
	getOrLoad (J)Ljava/util/Optional; d
	getVersion (Lcom/mojang/serialization/Dynamic;)I a
	hasWork ()Z a
	onSectionLoad (J)V b
	outsideStoredRange (J)Z e
	readColumn (Lnet/minecraft/world/level/ChunkPos;)V b
	readColumn (Lnet/minecraft/world/level/ChunkPos;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V a
	setDirty (J)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tryRead (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; c
	writeColumn (Lnet/minecraft/world/level/ChunkPos;)V d
	writeColumn (Lnet/minecraft/world/level/ChunkPos;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/world/level/dimension/BuiltinDimensionTypes cys
	END c
	END_EFFECTS g
	NETHER b
	NETHER_EFFECTS f
	OVERWORLD a
	OVERWORLD_CAVES d
	OVERWORLD_EFFECTS e
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/dimension/DimensionDefaults cyt
	END_GENERATION_HEIGHT k
	END_LEVEL_HEIGHT j
	END_LOGICAL_HEIGHT l
	END_MIN_Y i
	NETHER_GENERATION_HEIGHT g
	NETHER_LEVEL_HEIGHT f
	NETHER_LOGICAL_HEIGHT h
	NETHER_MIN_Y e
	OVERWORLD_GENERATION_HEIGHT c
	OVERWORLD_LEVEL_HEIGHT b
	OVERWORLD_LOGICAL_HEIGHT d
	OVERWORLD_MIN_Y a
net/minecraft/world/level/dimension/DimensionType cyu
	BITS_FOR_Y a
	CODEC j
	DIRECT_CODEC h
	MAX_Y d
	MIN_HEIGHT b
	MIN_Y e
	MOON_BRIGHTNESS_PER_PHASE i
	MOON_PHASES z
	WAY_ABOVE_MAX_Y f
	WAY_BELOW_MIN_Y g
	Y_SIZE c
	ambientLight x
	bedWorks q
	coordinateScale p
	effectsLocation w
	fixedTime k
	hasCeiling m
	hasSkyLight l
	height t
	infiniburn v
	logicalHeight u
	minY s
	monsterSettings y
	natural o
	respawnAnchorWorks r
	ultraWarm n
	ambientLight ()F s
	bedWorks ()Z l
	coordinateScale ()D k
	effectsLocation ()Lnet/minecraft/resources/ResourceLocation; r
	fixedTime ()Ljava/util/OptionalLong; f
	getStorageFolder (Lnet/minecraft/resources/ResourceKey;Ljava/nio/file/Path;)Ljava/nio/file/Path; a
	getTeleportationScale (Lnet/minecraft/world/level/dimension/DimensionType;Lnet/minecraft/world/level/dimension/DimensionType;)D a
	hasCeiling ()Z h
	hasFixedTime ()Z a
	hasRaids ()Z c
	hasSkyLight ()Z g
	height ()I o
	infiniburn ()Lnet/minecraft/tags/TagKey; q
	logicalHeight ()I p
	minY ()I n
	monsterSettings ()Lnet/minecraft/world/level/dimension/DimensionType$MonsterSettings; t
	monsterSpawnBlockLightLimit ()I e
	monsterSpawnLightTest ()Lnet/minecraft/util/valueproviders/IntProvider; d
	moonPhase (J)I b
	natural ()Z j
	parseLegacy (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; a
	piglinSafe ()Z b
	respawnAnchorWorks ()Z m
	timeOfDay (J)F a
	ultraWarm ()Z i
net/minecraft/world/level/dimension/DimensionType$MonsterSettings cyu$a
	CODEC a
	hasRaids c
	monsterSpawnBlockLightLimit e
	monsterSpawnLightTest d
	piglinSafe b
	hasRaids ()Z b
	monsterSpawnBlockLightLimit ()I d
	monsterSpawnLightTest ()Lnet/minecraft/util/valueproviders/IntProvider; c
	piglinSafe ()Z a
net/minecraft/world/level/dimension/LevelStem cyv
	BUILTIN_ORDER e
	CODEC a
	END d
	NETHER c
	OVERWORLD b
	generator g
	type f
	generator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; b
	keysInOrder (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
	sortMap (Lnet/minecraft/core/Registry;)Lnet/minecraft/core/Registry; a
	stable (Lnet/minecraft/core/Registry;)Z b
	typeHolder ()Lnet/minecraft/core/Holder; a
net/minecraft/world/level/dimension/end/DragonRespawnAnimation cyw
	$VALUES f
	END e
	PREPARING_TO_SUMMON_PILLARS b
	START a
	SUMMONING_DRAGON d
	SUMMONING_PILLARS c
	$values ()[Lnet/minecraft/world/level/dimension/end/DragonRespawnAnimation; a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/dimension/end/EndDragonFight;Ljava/util/List;ILnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/dimension/end/EndDragonFight cyx
	ARENA_SIZE_CHUNKS g
	ARENA_TICKET_LEVEL a
	DRAGON_SPAWN_Y b
	GATEWAY_COUNT h
	GATEWAY_DISTANCE i
	LOGGER c
	MAX_TICKS_BEFORE_DRAGON_RESPAWN d
	TIME_BETWEEN_CRYSTAL_SCANS e
	TIME_BETWEEN_PLAYER_SCANS f
	VALID_PLAYER j
	crystalsAlive p
	dragonEvent k
	dragonKilled s
	dragonUUID u
	exitPortalPattern n
	gateways m
	level l
	needsStateScanning v
	portalLocation w
	previouslyKilled t
	respawnCrystals z
	respawnStage x
	respawnTime y
	ticksSinceCrystalsScanned q
	ticksSinceDragonSeen o
	ticksSinceLastPlayerScan r
	createNewDragon ()Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon; o
	findExitPortal ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; j
	findOrCreateDragon ()V h
	getCrystalsAlive ()I c
	hasActiveExitPortal ()Z i
	hasPreviouslyKilledDragon ()Z d
	isArenaLoaded ()Z k
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/world/damagesource/DamageSource;)V a
	resetSpikeCrystals ()V f
	respawnDragon (Ljava/util/List;)V a
	saveData ()Lnet/minecraft/nbt/CompoundTag; a
	scanState ()V g
	setDragonKilled (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)V a
	setRespawnStage (Lnet/minecraft/world/level/dimension/end/DragonRespawnAnimation;)V a
	spawnExitPortal (Z)V a
	spawnNewGateway ()V n
	spawnNewGateway (Lnet/minecraft/core/BlockPos;)V a
	tick ()V b
	tryRespawn ()V e
	updateCrystalCount ()V m
	updateDragon (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)V b
	updatePlayers ()V l
net/minecraft/world/level/entity/ChunkEntities cza
	entities b
	pos a
	getEntities ()Ljava/util/stream/Stream; b
	getPos ()Lnet/minecraft/world/level/ChunkPos; a
	isEmpty ()Z c
net/minecraft/world/level/entity/ChunkStatusUpdateListener czb
net/minecraft/world/level/entity/EntityAccess czc
	blockPosition ()Lnet/minecraft/core/BlockPos; da
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; cy
	getId ()I ae
	getPassengersAndSelf ()Ljava/util/stream/Stream; cL
	getSelfAndPassengers ()Ljava/util/stream/Stream; cK
	getUUID ()Ljava/util/UUID; co
	isAlwaysTicking ()Z dx
	setLevelCallback (Lnet/minecraft/world/level/entity/EntityInLevelCallback;)V a
	setRemoved (Lnet/minecraft/world/entity/Entity$RemovalReason;)V b
	shouldBeSaved ()Z dw
net/minecraft/world/level/entity/EntityInLevelCallback czd
	NULL a
	onMove ()V a
	onRemove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
net/minecraft/world/level/entity/EntityLookup cze
	LOGGER a
	byId b
	byUuid c
	add (Lnet/minecraft/world/level/entity/EntityAccess;)V a
	count ()I b
	getAllEntities ()Ljava/lang/Iterable; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Consumer;)V a
	getEntity (I)Lnet/minecraft/world/level/entity/EntityAccess; a
	getEntity (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; a
	remove (Lnet/minecraft/world/level/entity/EntityAccess;)V b
net/minecraft/world/level/entity/EntityPersistentStorage czf
	flush (Z)V a
	loadEntities (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; a
	storeEntities (Lnet/minecraft/world/level/entity/ChunkEntities;)V a
net/minecraft/world/level/entity/EntitySection czg
	LOGGER a
	chunkStatus c
	storage b
	add (Lnet/minecraft/world/level/entity/EntityAccess;)V a
	getEntities ()Ljava/util/stream/Stream; b
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	getEntities (Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	getStatus ()Lnet/minecraft/world/level/entity/Visibility; c
	isEmpty ()Z a
	remove (Lnet/minecraft/world/level/entity/EntityAccess;)Z b
	size ()I d
	updateChunkStatus (Lnet/minecraft/world/level/entity/Visibility;)Lnet/minecraft/world/level/entity/Visibility; a
net/minecraft/world/level/entity/EntitySectionStorage czh
	entityClass a
	intialSectionVisibility b
	sectionIds d
	sections c
	count ()I b
	createSection (J)Lnet/minecraft/world/level/entity/EntitySection; g
	forEachAccessibleNonEmptySection (Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	getAllChunksWithExistingSections ()Lit/unimi/dsi/fastutil/longs/LongSet; a
	getChunkKeyFromSectionKey (J)J f
	getChunkSections (II)Lit/unimi/dsi/fastutil/longs/LongSortedSet; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	getEntities (Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V b
	getExistingSectionPositionsInChunk (J)Ljava/util/stream/LongStream; a
	getExistingSectionsInChunk (J)Ljava/util/stream/Stream; b
	getOrCreateSection (J)Lnet/minecraft/world/level/entity/EntitySection; c
	getSection (J)Lnet/minecraft/world/level/entity/EntitySection; d
	remove (J)V e
net/minecraft/world/level/entity/EntityTickList czi
	active a
	iterated c
	passive b
	add (Lnet/minecraft/world/entity/Entity;)V a
	contains (Lnet/minecraft/world/entity/Entity;)Z c
	ensureActiveIsNotIterated ()V a
	forEach (Ljava/util/function/Consumer;)V a
	remove (Lnet/minecraft/world/entity/Entity;)V b
net/minecraft/world/level/entity/EntityTypeTest czj
	forClass (Ljava/lang/Class;)Lnet/minecraft/world/level/entity/EntityTypeTest; a
	getBaseClass ()Ljava/lang/Class; a
	tryCast (Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/world/level/entity/LevelCallback czk
	onCreated (Ljava/lang/Object;)V g
	onDestroyed (Ljava/lang/Object;)V f
	onSectionChange (Ljava/lang/Object;)V a
	onTickingEnd (Ljava/lang/Object;)V d
	onTickingStart (Ljava/lang/Object;)V e
	onTrackingEnd (Ljava/lang/Object;)V b
	onTrackingStart (Ljava/lang/Object;)V c
net/minecraft/world/level/entity/LevelEntityGetter czl
	get (I)Lnet/minecraft/world/level/entity/EntityAccess; a
	get (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; a
	get (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Consumer;)V a
	get (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	get (Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	getAll ()Ljava/lang/Iterable; a
net/minecraft/world/level/entity/LevelEntityGetterAdapter czm
	sectionStorage b
	visibleEntities a
	get (I)Lnet/minecraft/world/level/entity/EntityAccess; a
	get (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; a
	get (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Consumer;)V a
	get (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	get (Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	getAll ()Ljava/lang/Iterable; a
net/minecraft/world/level/entity/PersistentEntitySectionManager czn
	LOGGER a
	callbacks c
	chunkLoadStatuses i
	chunkVisibility h
	chunksToUnload j
	entityGetter g
	knownUuids b
	loadingInbox k
	permanentStorage d
	sectionStorage f
	visibleEntityStorage e
	addEntity (Lnet/minecraft/world/level/entity/EntityAccess;Z)Z a
	addEntityUuid (Lnet/minecraft/world/level/entity/EntityAccess;)Z b
	addLegacyChunkEntities (Ljava/util/stream/Stream;)V a
	addNewEntity (Lnet/minecraft/world/level/entity/EntityAccess;)Z a
	addWorldGenChunkEntities (Ljava/util/stream/Stream;)V b
	areEntitiesLoaded (J)Z a
	autoSave ()V b
	canPositionTick (Lnet/minecraft/core/BlockPos;)Z a
	canPositionTick (Lnet/minecraft/world/level/ChunkPos;)Z a
	dumpSections (Ljava/io/Writer;)V a
	ensureChunkQueuedForLoad (J)V b
	gatherStats ()Ljava/lang/String; e
	getAllChunksToSave ()Lit/unimi/dsi/fastutil/longs/LongSet; h
	getEffectiveStatus (Lnet/minecraft/world/level/entity/EntityAccess;Lnet/minecraft/world/level/entity/Visibility;)Lnet/minecraft/world/level/entity/Visibility; a
	getEntityGetter ()Lnet/minecraft/world/level/entity/LevelEntityGetter; d
	isLoaded (Ljava/util/UUID;)Z a
	processChunkUnload (J)Z d
	processPendingLoads ()V g
	processUnloads ()V f
	removeSectionIfEmpty (JLnet/minecraft/world/level/entity/EntitySection;)V a
	requestChunkLoad (J)V c
	saveAll ()V c
	startTicking (Lnet/minecraft/world/level/entity/EntityAccess;)V c
	startTracking (Lnet/minecraft/world/level/entity/EntityAccess;)V e
	stopTicking (Lnet/minecraft/world/level/entity/EntityAccess;)V d
	stopTracking (Lnet/minecraft/world/level/entity/EntityAccess;)V f
	storeChunkSections (JLjava/util/function/Consumer;)Z a
	tick ()V a
	unloadEntity (Lnet/minecraft/world/level/entity/EntityAccess;)V g
	updateChunkStatus (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)V a
	updateChunkStatus (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/entity/Visibility;)V a
net/minecraft/world/level/entity/PersistentEntitySectionManager$Callback czn$a
	currentSection e
	currentSectionKey d
	entity c
	onMove ()V a
	onRemove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	updateStatus (Lnet/minecraft/world/level/entity/Visibility;Lnet/minecraft/world/level/entity/Visibility;)V a
net/minecraft/world/level/entity/PersistentEntitySectionManager$ChunkLoadStatus czn$b
	$VALUES d
	FRESH a
	LOADED c
	PENDING b
	$values ()[Lnet/minecraft/world/level/entity/PersistentEntitySectionManager$ChunkLoadStatus; a
net/minecraft/world/level/entity/TransientEntitySectionManager czo
	LOGGER a
	callbacks b
	entityGetter f
	entityStorage c
	sectionStorage d
	tickingChunks e
	addEntity (Lnet/minecraft/world/level/entity/EntityAccess;)V a
	count ()I b
	gatherStats ()Ljava/lang/String; c
	getEntityGetter ()Lnet/minecraft/world/level/entity/LevelEntityGetter; a
	removeSectionIfEmpty (JLnet/minecraft/world/level/entity/EntitySection;)V a
	startTicking (Lnet/minecraft/world/level/ChunkPos;)V a
	stopTicking (Lnet/minecraft/world/level/ChunkPos;)V b
net/minecraft/world/level/entity/TransientEntitySectionManager$Callback czo$a
	currentSection e
	currentSectionKey d
	entity c
	onMove ()V a
	onRemove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
net/minecraft/world/level/entity/Visibility czp
	$VALUES f
	HIDDEN a
	TICKING c
	TRACKED b
	accessible d
	ticking e
	$values ()[Lnet/minecraft/world/level/entity/Visibility; c
	fromFullChunkStatus (Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)Lnet/minecraft/world/level/entity/Visibility; a
	isAccessible ()Z b
	isTicking ()Z a
net/minecraft/world/level/gameevent/BlockPositionSource czr
	CODEC a
	pos c
	getPosition (Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getType ()Lnet/minecraft/world/level/gameevent/PositionSourceType; a
net/minecraft/world/level/gameevent/BlockPositionSource$Type czr$a
	codec ()Lcom/mojang/serialization/Codec; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/BlockPositionSource; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/PositionSource; b
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/BlockPositionSource;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/PositionSource;)V a
net/minecraft/world/level/gameevent/DynamicGameEventListener czs
	lastSection b
	listener a
	add (Lnet/minecraft/server/level/ServerLevel;)V a
	getListener ()Lnet/minecraft/world/level/gameevent/GameEventListener; a
	ifChunkExists (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/SectionPos;Ljava/util/function/Consumer;)V a
	move (Lnet/minecraft/server/level/ServerLevel;)V c
	remove (Lnet/minecraft/server/level/ServerLevel;)V b
	updateListener (Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/world/level/Level;)V a
net/minecraft/world/level/gameevent/EntityPositionSource czt
	CODEC a
	entityOrUuidOrId c
	yOffset d
	getId ()I c
	getPosition (Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getType ()Lnet/minecraft/world/level/gameevent/PositionSourceType; a
	getUuid ()Ljava/util/UUID; b
	resolveEntity (Lnet/minecraft/world/level/Level;)V b
net/minecraft/world/level/gameevent/EntityPositionSource$Type czt$a
	codec ()Lcom/mojang/serialization/Codec; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/EntityPositionSource; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/PositionSource; b
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/EntityPositionSource;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/PositionSource;)V a
net/minecraft/world/level/gameevent/EuclideanGameEventDispatcher czu
	level f
	listeners b
	listenersToAdd d
	listenersToRemove c
	processing e
	getPostableListenerPosition (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEventListener;)Ljava/util/Optional; a
	isEmpty ()Z a
	register (Lnet/minecraft/world/level/gameevent/GameEventListener;)V a
	unregister (Lnet/minecraft/world/level/gameevent/GameEventListener;)V b
	walkListeners (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Ljava/util/function/BiConsumer;)Z a
net/minecraft/world/level/gameevent/GameEvent czv
	BLOCK_ACTIVATE a
	BLOCK_ATTACH b
	BLOCK_CHANGE c
	BLOCK_CLOSE d
	BLOCK_DEACTIVATE e
	BLOCK_DESTROY f
	BLOCK_DETACH g
	BLOCK_OPEN h
	BLOCK_PLACE i
	CONTAINER_CLOSE j
	CONTAINER_OPEN k
	DEFAULT_NOTIFICATION_RADIUS U
	DISPENSE_FAIL l
	DRINK m
	EAT n
	ELYTRA_GLIDE o
	ENTITY_DAMAGE p
	ENTITY_DIE q
	ENTITY_INTERACT r
	ENTITY_PLACE s
	ENTITY_ROAR t
	ENTITY_SHAKE u
	EQUIP v
	EXPLODE w
	FLAP x
	FLUID_PICKUP y
	FLUID_PLACE z
	HIT_GROUND A
	INSTRUMENT_PLAY B
	ITEM_INTERACT_FINISH C
	ITEM_INTERACT_START D
	JUKEBOX_PLAY E
	JUKEBOX_STOP_PLAY F
	LIGHTNING_STRIKE G
	NOTE_BLOCK_PLAY H
	PISTON_CONTRACT I
	PISTON_EXTEND J
	PRIME_FUSE K
	PROJECTILE_LAND L
	PROJECTILE_SHOOT M
	SCULK_SENSOR_TENDRILS_CLICKING N
	SHEAR O
	SHRIEK P
	SPLASH Q
	STEP R
	SWIM S
	TELEPORT T
	builtInRegistryHolder X
	name V
	notificationRadius W
	builtInRegistryHolder ()Lnet/minecraft/core/Holder$Reference; c
	getName ()Ljava/lang/String; a
	getNotificationRadius ()I b
	is (Lnet/minecraft/tags/TagKey;)Z a
	register (Ljava/lang/String;)Lnet/minecraft/world/level/gameevent/GameEvent; a
	register (Ljava/lang/String;I)Lnet/minecraft/world/level/gameevent/GameEvent; a
net/minecraft/world/level/gameevent/GameEvent$Context czv$a
	affectedState b
	sourceEntity a
	affectedState ()Lnet/minecraft/world/level/block/state/BlockState; b
	of (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/gameevent/GameEvent$Context; a
	of (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/gameevent/GameEvent$Context; a
	of (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/gameevent/GameEvent$Context; a
	sourceEntity ()Lnet/minecraft/world/entity/Entity; a
net/minecraft/world/level/gameevent/GameEvent$Message czv$b
	context c
	distanceToRecipient e
	gameEvent a
	recipient d
	source b
	compareTo (Lnet/minecraft/world/level/gameevent/GameEvent$Message;)I a
	context ()Lnet/minecraft/world/level/gameevent/GameEvent$Context; c
	gameEvent ()Lnet/minecraft/world/level/gameevent/GameEvent; a
	recipient ()Lnet/minecraft/world/level/gameevent/GameEventListener; d
	source ()Lnet/minecraft/world/phys/Vec3; b
net/minecraft/world/level/gameevent/GameEventDispatcher czw
	NOOP a
	isEmpty ()Z a
	register (Lnet/minecraft/world/level/gameevent/GameEventListener;)V a
	unregister (Lnet/minecraft/world/level/gameevent/GameEventListener;)V b
	walkListeners (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Ljava/util/function/BiConsumer;)Z a
net/minecraft/world/level/gameevent/GameEventListener czx
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	handleEventsImmediately ()Z c
	handleGameEvent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEvent$Message;)Z a
net/minecraft/world/level/gameevent/PositionSource czy
	CODEC b
	getPosition (Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getType ()Lnet/minecraft/world/level/gameevent/PositionSourceType; a
net/minecraft/world/level/gameevent/PositionSourceType czz
	BLOCK a
	ENTITY b
	codec ()Lcom/mojang/serialization/Codec; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/PositionSource; c
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/PositionSource; b
	register (Ljava/lang/String;Lnet/minecraft/world/level/gameevent/PositionSourceType;)Lnet/minecraft/world/level/gameevent/PositionSourceType; a
	toNetwork (Lnet/minecraft/world/level/gameevent/PositionSource;Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/PositionSource;)V a
net/minecraft/world/level/gameevent/vibrations/VibrationListener dab
	config c
	listenerRange b
	listenerSource a
	receivingDistance e
	receivingEvent d
	travelTimeInTicks f
	codec (Lnet/minecraft/world/level/gameevent/vibrations/VibrationListener$VibrationListenerConfig;)Lcom/mojang/serialization/Codec; a
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	handleGameEvent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEvent$Message;)Z a
	isOccluded (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	scheduleSignal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)V a
	tick (Lnet/minecraft/world/level/Level;)V a
net/minecraft/world/level/gameevent/vibrations/VibrationListener$ReceivingEvent dab$a
	CODEC a
	distance c
	entity g
	gameEvent b
	pos d
	projectileOwnerUuid f
	uuid e
	distance ()F b
	entity ()Lnet/minecraft/world/entity/Entity; f
	gameEvent ()Lnet/minecraft/world/level/gameevent/GameEvent; a
	getEntity (Lnet/minecraft/server/level/ServerLevel;)Ljava/util/Optional; a
	getProjectileOwner (Lnet/minecraft/server/level/ServerLevel;)Ljava/util/Optional; b
	getProjectileOwner (Lnet/minecraft/world/entity/Entity;)Ljava/util/UUID; a
	pos ()Lnet/minecraft/world/phys/Vec3; c
	projectileOwnerUuid ()Ljava/util/UUID; e
	uuid ()Ljava/util/UUID; d
net/minecraft/world/level/gameevent/vibrations/VibrationListener$VibrationListenerConfig dab$b
	canTriggerAvoidVibration ()Z t
	getListenableEvents ()Lnet/minecraft/tags/TagKey; a
	isValidVibration (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)Z a
	onSignalReceive (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V a
	onSignalSchedule ()V f
	shouldListen (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)Z a
net/minecraft/world/level/levelgen/Aquifer dad
	computeSubstance (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;D)Lnet/minecraft/world/level/block/state/BlockState; a
	create (Lnet/minecraft/world/level/levelgen/NoiseChunk;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/NoiseRouter;Lnet/minecraft/world/level/levelgen/PositionalRandomFactory;IILnet/minecraft/world/level/levelgen/Aquifer$FluidPicker;)Lnet/minecraft/world/level/levelgen/Aquifer; a
	createDisabled (Lnet/minecraft/world/level/levelgen/Aquifer$FluidPicker;)Lnet/minecraft/world/level/levelgen/Aquifer; a
	shouldScheduleFluidUpdate ()Z a
net/minecraft/world/level/levelgen/Aquifer$FluidPicker dad$a
net/minecraft/world/level/levelgen/Aquifer$FluidStatus dad$b
	fluidLevel a
	fluidType b
	at (I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/Aquifer$NoiseBasedAquifer dad$c
	FLOWING_UPDATE_SIMULARITY k
	MAX_REASONABLE_DISTANCE_TO_AQUIFER_CENTER j
	SURFACE_SAMPLING_OFFSETS_IN_CHUNKS C
	X_RANGE a
	X_SEPARATION d
	X_SPACING g
	Y_RANGE b
	Y_SEPARATION e
	Y_SPACING h
	Z_RANGE c
	Z_SEPARATION f
	Z_SPACING i
	aquiferCache r
	aquiferLocationCache s
	barrierNoise m
	depth v
	erosion u
	fluidLevelFloodednessNoise n
	fluidLevelSpreadNoise o
	globalFluidPicker t
	gridSizeX A
	gridSizeZ B
	lavaNoise p
	minGridX x
	minGridY y
	minGridZ z
	noiseChunk l
	positionalRandomFactory q
	shouldScheduleFluidUpdate w
	calculatePressure (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;Lorg/apache/commons/lang3/mutable/MutableDouble;Lnet/minecraft/world/level/levelgen/Aquifer$FluidStatus;Lnet/minecraft/world/level/levelgen/Aquifer$FluidStatus;)D a
	computeFluid (III)Lnet/minecraft/world/level/levelgen/Aquifer$FluidStatus; b
	computeFluidType (IIILnet/minecraft/world/level/levelgen/Aquifer$FluidStatus;I)Lnet/minecraft/world/level/block/state/BlockState; a
	computeRandomizedFluidSurfaceLevel (IIII)I a
	computeSubstance (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;D)Lnet/minecraft/world/level/block/state/BlockState; a
	computeSurfaceLevel (IIILnet/minecraft/world/level/levelgen/Aquifer$FluidStatus;IZ)I a
	getAquiferStatus (J)Lnet/minecraft/world/level/levelgen/Aquifer$FluidStatus; a
	getIndex (III)I a
	gridX (I)I a
	gridY (I)I b
	gridZ (I)I c
	shouldScheduleFluidUpdate ()Z a
	similarity (II)D a
net/minecraft/world/level/levelgen/Beardifier dae
	BEARD_KERNEL g
	BEARD_KERNEL_RADIUS a
	BEARD_KERNEL_SIZE f
	junctionIterator i
	pieceIterator h
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	computeBeardContribution (IDI)D a
	computeBeardContribution (III)D b
	forStructuresInChunk (Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/levelgen/Beardifier; a
	getBeardContribution (IIII)D a
	getBuryContribution (III)D a
	isInKernelRange (I)Z a
	maxValue ()D b
	minValue ()D a
net/minecraft/world/level/levelgen/Beardifier$Rigid dae$a
	box a
	groundLevelDelta c
	terrainAdjustment b
	box ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	groundLevelDelta ()I c
	terrainAdjustment ()Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment; b
net/minecraft/world/level/levelgen/BelowZeroRetrogen daf
	BITSET_CODEC d
	CODEC a
	EMPTY c
	NON_EMPTY_CHUNK_STATUS e
	RETAINED_RETROGEN_BIOMES f
	UPGRADE_HEIGHT_ACCESSOR b
	missingBedrock h
	targetStatus g
	applyBedrockMask (Lnet/minecraft/world/level/chunk/ProtoChunk;)V b
	getBiomeResolver (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/world/level/biome/BiomeResolver; a
	hasBedrockHole (II)Z a
	hasBedrockHoles ()Z b
	read (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen; a
	replaceOldBedrock (Lnet/minecraft/world/level/chunk/ProtoChunk;)V a
	targetStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; a
net/minecraft/world/level/levelgen/BitRandomSource dag
	DOUBLE_MULTIPLIER c
	FLOAT_MULTIPLIER b
	next (I)I c
	nextBoolean ()Z h
	nextDouble ()D j
	nextFloat ()F i
	nextInt ()I f
	nextInt (I)I a
	nextLong ()J g
net/minecraft/world/level/levelgen/Column dah
	above (I)Lnet/minecraft/world/level/levelgen/Column; c
	around (II)Lnet/minecraft/world/level/levelgen/Column$Range; a
	below (I)Lnet/minecraft/world/level/levelgen/Column; a
	create (Ljava/util/OptionalInt;Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; a
	fromHighest (I)Lnet/minecraft/world/level/levelgen/Column; b
	fromLowest (I)Lnet/minecraft/world/level/levelgen/Column; d
	getCeiling ()Ljava/util/OptionalInt; b
	getFloor ()Ljava/util/OptionalInt; c
	getHeight ()Ljava/util/OptionalInt; d
	inside (II)Lnet/minecraft/world/level/levelgen/Column$Range; b
	line ()Lnet/minecraft/world/level/levelgen/Column; a
	scan (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;ILjava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/Optional; a
	scanDirection (Lnet/minecraft/world/level/LevelSimulatedReader;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos$MutableBlockPos;ILnet/minecraft/core/Direction;)Ljava/util/OptionalInt; a
	withCeiling (Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; b
	withFloor (Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; a
net/minecraft/world/level/levelgen/Column$Line dah$a
	INSTANCE a
	getCeiling ()Ljava/util/OptionalInt; b
	getFloor ()Ljava/util/OptionalInt; c
	getHeight ()Ljava/util/OptionalInt; d
net/minecraft/world/level/levelgen/Column$Range dah$b
	ceiling b
	floor a
	ceiling ()I e
	floor ()I f
	getCeiling ()Ljava/util/OptionalInt; b
	getFloor ()Ljava/util/OptionalInt; c
	getHeight ()Ljava/util/OptionalInt; d
	height ()I g
net/minecraft/world/level/levelgen/Column$Ray dah$c
	edge a
	pointingUp b
	getCeiling ()Ljava/util/OptionalInt; b
	getFloor ()Ljava/util/OptionalInt; c
	getHeight ()Ljava/util/OptionalInt; d
net/minecraft/world/level/levelgen/DebugLevelSource dai
	AIR f
	ALL_BLOCKS k
	BARRIER g
	BARRIER_HEIGHT i
	BLOCK_MARGIN j
	CODEC e
	GRID_HEIGHT m
	GRID_WIDTH l
	HEIGHT h
	biomes n
	addDebugScreenInfo (Ljava/util/List;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/core/BlockPos;)V a
	applyBiomeDecoration (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/StructureManager;)V a
	applyCarvers (Lnet/minecraft/server/level/WorldGenRegion;JLnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	biomes ()Lnet/minecraft/core/Registry; h
	buildSurface (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; b
	fillFromNoise (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	getBaseColumn (IILnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/NoiseColumn; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I a
	getBlockStateFor (II)Lnet/minecraft/world/level/block/state/BlockState; a
	getGenDepth ()I e
	getMinY ()I g
	getSeaLevel ()I f
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
net/minecraft/world/level/levelgen/Density daj
	SURFACE a
	UNRECOVERABLY_DENSE b
	UNRECOVERABLY_THIN c
net/minecraft/world/level/levelgen/DensityFunction dak
	CODEC c
	DIRECT_CODEC b
	HOLDER_HELPER_CODEC d
	abs ()Lnet/minecraft/world/level/levelgen/DensityFunction; d
	clamp (DD)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	cube ()Lnet/minecraft/world/level/levelgen/DensityFunction; f
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	halfNegative ()Lnet/minecraft/world/level/levelgen/DensityFunction; g
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	quarterNegative ()Lnet/minecraft/world/level/levelgen/DensityFunction; h
	square ()Lnet/minecraft/world/level/levelgen/DensityFunction; e
	squeeze ()Lnet/minecraft/world/level/levelgen/DensityFunction; i
net/minecraft/world/level/levelgen/DensityFunction$ContextProvider dak$a
	fillAllDirectly ([DLnet/minecraft/world/level/levelgen/DensityFunction;)V a
	forIndex (I)Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext; a
net/minecraft/world/level/levelgen/DensityFunction$FunctionContext dak$b
	blockX ()I a
	blockY ()I b
	blockZ ()I c
	getBlender ()Lnet/minecraft/world/level/levelgen/blending/Blender; d
net/minecraft/world/level/levelgen/DensityFunction$NoiseHolder dak$c
	CODEC a
	noise c
	noiseData b
	getValue (DDD)D a
	maxValue ()D a
	noise ()Lnet/minecraft/world/level/levelgen/synth/NormalNoise; c
	noiseData ()Lnet/minecraft/core/Holder; b
net/minecraft/world/level/levelgen/DensityFunction$SimpleFunction dak$d
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
net/minecraft/world/level/levelgen/DensityFunction$SinglePointContext dak$e
	blockX a
	blockY b
	blockZ c
	blockX ()I a
	blockY ()I b
	blockZ ()I c
net/minecraft/world/level/levelgen/DensityFunction$Visitor dak$f
	visitNoise (Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder;)Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; a
net/minecraft/world/level/levelgen/DensityFunctions dal
	CODEC c
	DIRECT_CODEC b
	MAX_REASONABLE_NOISE_VALUE a
	NOISE_VALUE_CODEC d
	add (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	blendAlpha ()Lnet/minecraft/world/level/levelgen/DensityFunction; b
	blendDensity (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; f
	blendOffset ()Lnet/minecraft/world/level/levelgen/DensityFunction; c
	bootstrap (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec; a
	cache2d (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; c
	cacheAllInCell (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; e
	cacheOnce (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; d
	constant (D)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	doubleFunctionArgumentCodec (Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/util/KeyDispatchDataCodec; a
	endIslands (J)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	flatCache (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; b
	interpolated (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	lerp (Lnet/minecraft/world/level/levelgen/DensityFunction;DLnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	lerp (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	makeCodec (Lcom/mojang/serialization/MapCodec;)Lnet/minecraft/util/KeyDispatchDataCodec; a
	map (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	mapFromUnitTo (Lnet/minecraft/world/level/levelgen/DensityFunction;DD)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	mappedNoise (Lnet/minecraft/core/Holder;DD)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	mappedNoise (Lnet/minecraft/core/Holder;DDD)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	mappedNoise (Lnet/minecraft/core/Holder;DDDD)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	max (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; d
	min (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; c
	mul (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; b
	noise (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	noise (Lnet/minecraft/core/Holder;D)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	noise (Lnet/minecraft/core/Holder;DD)Lnet/minecraft/world/level/levelgen/DensityFunction; b
	rangeChoice (Lnet/minecraft/world/level/levelgen/DensityFunction;DDLnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	register (Lnet/minecraft/core/Registry;Ljava/lang/String;Lnet/minecraft/util/KeyDispatchDataCodec;)Lcom/mojang/serialization/Codec; a
	shift (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; d
	shiftA (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; b
	shiftB (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; c
	shiftedNoise2d (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;DLnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	singleArgumentCodec (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/util/KeyDispatchDataCodec; a
	singleFunctionArgumentCodec (Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/util/KeyDispatchDataCodec; a
	spline (Lnet/minecraft/util/CubicSpline;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	weirdScaledSampler (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler$RarityValueMapper;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	yClampedGradient (IIDD)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	zero ()Lnet/minecraft/world/level/levelgen/DensityFunction; a
net/minecraft/world/level/levelgen/DensityFunctions$Ap2 dal$a
	argument1 f
	argument2 g
	maxValue i
	minValue h
	type e
	argument1 ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
	argument2 ()Lnet/minecraft/world/level/levelgen/DensityFunction; l
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type; j
net/minecraft/world/level/levelgen/DensityFunctions$BeardifierMarker dal$b
	$VALUES f
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$BeardifierMarker; j
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	maxValue ()D b
	minValue ()D a
net/minecraft/world/level/levelgen/DensityFunctions$BeardifierOrMarker dal$c
	CODEC e
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
net/minecraft/world/level/levelgen/DensityFunctions$BlendAlpha dal$d
	$VALUES f
	CODEC e
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$BlendAlpha; j
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	maxValue ()D b
	minValue ()D a
net/minecraft/world/level/levelgen/DensityFunctions$BlendDensity dal$e
	CODEC e
	input a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; j
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	transform (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;D)D a
net/minecraft/world/level/levelgen/DensityFunctions$BlendOffset dal$f
	$VALUES f
	CODEC e
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$BlendOffset; j
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	maxValue ()D b
	minValue ()D a
net/minecraft/world/level/levelgen/DensityFunctions$Clamp dal$g
	CODEC a
	DATA_CODEC h
	input e
	maxValue g
	minValue f
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; ac_
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	transform (D)D a
net/minecraft/world/level/levelgen/DensityFunctions$Constant dal$h
	CODEC e
	ZERO f
	value a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	maxValue ()D b
	minValue ()D a
	value ()D j
net/minecraft/world/level/levelgen/DensityFunctions$EndIslandDensityFunction dal$i
	CODEC a
	ISLAND_THRESHOLD e
	islandNoise f
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	getHeightValue (Lnet/minecraft/world/level/levelgen/synth/SimplexNoise;II)F a
	maxValue ()D b
	minValue ()D a
net/minecraft/world/level/levelgen/DensityFunctions$HolderHolder dal$j
	function a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	function ()Lnet/minecraft/core/Holder; j
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
net/minecraft/world/level/levelgen/DensityFunctions$Mapped dal$k
	input e
	maxValue g
	minValue f
	type a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	create (Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped; a
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; ac_
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped; b
	maxValue ()D b
	minValue ()D a
	transform (D)D a
	transform (Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type;D)D a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type; k
net/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type dal$k$a
	$VALUES i
	ABS a
	CUBE c
	HALF_NEGATIVE d
	QUARTER_NEGATIVE e
	SQUARE b
	SQUEEZE f
	codec h
	name g
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/DensityFunctions$Marker dal$l
	type a
	wrapped e
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	maxValue ()D b
	minValue ()D a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/DensityFunctions$Marker$Type dal$l$a
	$VALUES h
	Cache2D c
	CacheAllInCell e
	CacheOnce d
	FlatCache b
	Interpolated a
	codec g
	name f
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/DensityFunctions$MarkerOrMarked dal$m
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd dal$n
	argument i
	input f
	maxValue h
	minValue g
	specificType e
	argument ()D n
	argument1 ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
	argument2 ()Lnet/minecraft/world/level/levelgen/DensityFunction; l
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; ac_
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	specificType ()Lnet/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd$Type; m
	transform (D)D a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type; j
net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd$Type dal$n$a
	$VALUES c
	ADD b
	MUL a
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd$Type; a
net/minecraft/world/level/levelgen/DensityFunctions$Noise dal$o
	CODEC e
	DATA_CODEC a
	noise f
	xzScale g
	yScale h
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	noise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; j
	xzScale ()D k
	yScale ()D l
net/minecraft/world/level/levelgen/DensityFunctions$PureTransformer dal$p
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; ac_
	transform (D)D a
net/minecraft/world/level/levelgen/DensityFunctions$RangeChoice dal$q
	CODEC e
	DATA_CODEC a
	input f
	maxExclusive h
	minInclusive g
	whenInRange i
	whenOutOfRange j
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; j
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxExclusive ()D l
	maxValue ()D b
	minInclusive ()D k
	minValue ()D a
	whenInRange ()Lnet/minecraft/world/level/levelgen/DensityFunction; m
	whenOutOfRange ()Lnet/minecraft/world/level/levelgen/DensityFunction; n
net/minecraft/world/level/levelgen/DensityFunctions$Shift dal$r
	CODEC e
	offsetNoise a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	offsetNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; j
net/minecraft/world/level/levelgen/DensityFunctions$ShiftA dal$s
	CODEC e
	offsetNoise a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	offsetNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; j
net/minecraft/world/level/levelgen/DensityFunctions$ShiftB dal$t
	CODEC e
	offsetNoise a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	offsetNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; j
net/minecraft/world/level/levelgen/DensityFunctions$ShiftNoise dal$u
	compute (DDD)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	maxValue ()D b
	minValue ()D a
	offsetNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; j
net/minecraft/world/level/levelgen/DensityFunctions$ShiftedNoise dal$v
	CODEC a
	DATA_CODEC k
	noise j
	shiftX e
	shiftY f
	shiftZ g
	xzScale h
	yScale i
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	noise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; o
	shiftX ()Lnet/minecraft/world/level/levelgen/DensityFunction; j
	shiftY ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
	shiftZ ()Lnet/minecraft/world/level/levelgen/DensityFunction; l
	xzScale ()D m
	yScale ()D n
net/minecraft/world/level/levelgen/DensityFunctions$Spline dal$w
	CODEC a
	DATA_CODEC g
	SPLINE_CODEC f
	spline e
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	spline ()Lnet/minecraft/util/CubicSpline; j
net/minecraft/world/level/levelgen/DensityFunctions$Spline$Coordinate dal$w$a
	CODEC b
	function c
	apply (Ljava/lang/Object;)F a
	apply (Lnet/minecraft/world/level/levelgen/DensityFunctions$Spline$Point;)F a
	function ()Lnet/minecraft/core/Holder; a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunctions$Spline$Coordinate; a
	maxValue ()F c
	minValue ()F b
net/minecraft/world/level/levelgen/DensityFunctions$Spline$Point dal$w$b
	context a
	context ()Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext; a
net/minecraft/world/level/levelgen/DensityFunctions$TransformerWithContext dal$x
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; j
	transform (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;D)D a
net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction dal$y
	LOGGER a
	argument1 ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
	argument2 ()Lnet/minecraft/world/level/levelgen/DensityFunction; l
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	create (Lnet/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction; a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type; j
net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type dal$y$a
	$VALUES g
	ADD a
	MAX d
	MIN c
	MUL b
	codec e
	name f
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler dal$z
	CODEC a
	DATA_CODEC h
	input e
	noise f
	rarityValueMapper g
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; j
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	noise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; k
	rarityValueMapper ()Lnet/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler$RarityValueMapper; l
	transform (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;D)D a
net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler$RarityValueMapper dal$z$a
	$VALUES g
	CODEC c
	TYPE1 a
	TYPE2 b
	mapper e
	maxRarity f
	name d
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler$RarityValueMapper; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/DensityFunctions$YClampedGradient dal$aa
	CODEC a
	DATA_CODEC i
	fromValue g
	fromY e
	toValue h
	toY f
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fromValue ()D l
	fromY ()I j
	maxValue ()D b
	minValue ()D a
	toValue ()D m
	toY ()I k
net/minecraft/world/level/levelgen/FlatLevelSource dam
	CODEC e
	settings f
	addDebugScreenInfo (Ljava/util/List;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/core/BlockPos;)V a
	applyCarvers (Lnet/minecraft/server/level/WorldGenRegion;JLnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	buildSurface (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; b
	fillFromNoise (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	getBaseColumn (IILnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/NoiseColumn; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I a
	getGenDepth ()I e
	getMinY ()I g
	getSeaLevel ()I f
	getSpawnHeight (Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	settings ()Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; h
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
net/minecraft/world/level/levelgen/GenerationStep dan
net/minecraft/world/level/levelgen/GenerationStep$Carving dan$a
	$VALUES e
	AIR a
	CODEC c
	LIQUID b
	name d
	$values ()[Lnet/minecraft/world/level/levelgen/GenerationStep$Carving; b
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/GenerationStep$Decoration dan$b
	$VALUES n
	CODEC l
	FLUID_SPRINGS i
	LAKES b
	LOCAL_MODIFICATIONS c
	RAW_GENERATION a
	STRONGHOLDS f
	SURFACE_STRUCTURES e
	TOP_LAYER_MODIFICATION k
	UNDERGROUND_DECORATION h
	UNDERGROUND_ORES g
	UNDERGROUND_STRUCTURES d
	VEGETAL_DECORATION j
	name m
	$values ()[Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration; b
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/GeodeBlockSettings dao
	CODEC i
	alternateInnerLayerProvider c
	cannotReplace g
	fillingProvider a
	innerLayerProvider b
	innerPlacements f
	invalidBlocks h
	middleLayerProvider d
	outerLayerProvider e
net/minecraft/world/level/levelgen/GeodeCrackSettings dap
	CODEC a
	baseCrackSize c
	crackPointOffset d
	generateCrackChance b
net/minecraft/world/level/levelgen/GeodeLayerSettings daq
	CODEC a
	LAYER_RANGE f
	filling b
	innerLayer c
	middleLayer d
	outerLayer e
net/minecraft/world/level/levelgen/Heightmap dar
	LOGGER a
	MATERIAL_MOTION_BLOCKING c
	NOT_AIR b
	chunk f
	data d
	isOpaque e
	getFirstAvailable (I)I a
	getFirstAvailable (II)I a
	getHighestTaken (II)I b
	getIndex (II)I c
	getRawData ()[J a
	primeHeightmaps (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/Set;)V a
	setHeight (III)V a
	setRawData (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	update (IIILnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/Heightmap$Types dar$a
	$VALUES k
	CODEC g
	MOTION_BLOCKING e
	MOTION_BLOCKING_NO_LEAVES f
	OCEAN_FLOOR d
	OCEAN_FLOOR_WG c
	WORLD_SURFACE b
	WORLD_SURFACE_WG a
	isOpaque j
	serializationKey h
	usage i
	$values ()[Lnet/minecraft/world/level/levelgen/Heightmap$Types; f
	getSerializationKey ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
	isOpaque ()Ljava/util/function/Predicate; e
	keepAfterWorldgen ()Z d
	sendToClient ()Z b
net/minecraft/world/level/levelgen/Heightmap$Usage dar$b
	$VALUES d
	CLIENT c
	LIVE_WORLD b
	WORLDGEN a
	$values ()[Lnet/minecraft/world/level/levelgen/Heightmap$Usage; a
net/minecraft/world/level/levelgen/LegacyRandomSource das
	INCREMENT g
	MODULUS_BITS d
	MODULUS_MASK e
	MULTIPLIER f
	gaussianSource i
	seed h
	fork ()Lnet/minecraft/util/RandomSource; d
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	next (I)I c
	nextGaussian ()D k
	setSeed (J)V b
net/minecraft/world/level/levelgen/LegacyRandomSource$LegacyPositionalRandomFactory das$a
	seed a
	at (III)Lnet/minecraft/util/RandomSource; a
	fromHashOf (Ljava/lang/String;)Lnet/minecraft/util/RandomSource; a
	parityConfigString (Ljava/lang/StringBuilder;)V a
net/minecraft/world/level/levelgen/MarsagliaPolarGaussian dat
	haveNextNextGaussian c
	nextNextGaussian b
	randomSource a
	nextGaussian ()D b
	reset ()V a
net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator dau
	AIR h
	CODEC e
	defaultBlock f
	globalFluidPicker j
	noises i
	settings g
	addDebugScreenInfo (Ljava/util/List;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/core/BlockPos;)V a
	applyCarvers (Lnet/minecraft/server/level/WorldGenRegion;JLnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	buildSurface (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	buildSurface (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/levelgen/blending/Blender;)V a
	codec ()Lcom/mojang/serialization/Codec; b
	createBiomes (Lnet/minecraft/core/Registry;Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	createNoiseChunk (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/levelgen/NoiseChunk; a
	debugPreliminarySurfaceLevel (Lnet/minecraft/world/level/levelgen/NoiseChunk;IIILnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	doCreateBiomes (Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	doFill (Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/ChunkAccess;II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	fillFromNoise (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	generatorSettings ()Lnet/minecraft/core/Holder; h
	getBaseColumn (IILnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/NoiseColumn; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I a
	getGenDepth ()I e
	getMinY ()I g
	getSeaLevel ()I f
	iterateNoiseColumn (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;IILorg/apache/commons/lang3/mutable/MutableObject;Ljava/util/function/Predicate;)Ljava/util/OptionalInt; a
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
	stable (Lnet/minecraft/resources/ResourceKey;)Z a
net/minecraft/world/level/levelgen/NoiseChunk dav
	aquifer m
	arrayIndex I
	arrayInterpolationCounter H
	beardifier s
	blendAlpha q
	blendOffset r
	blender p
	blockStateRule o
	cellCaches j
	cellCountXZ b
	cellCountY c
	cellHeight x
	cellNoiseMinY d
	cellStartBlockX A
	cellStartBlockY B
	cellStartBlockZ C
	cellWidth w
	fillingCell z
	firstCellX e
	firstCellZ f
	firstNoiseX g
	firstNoiseZ h
	inCellX D
	inCellY E
	inCellZ F
	initialDensityNoJaggedness n
	interpolating y
	interpolationCounter G
	interpolators i
	lastBlendingDataPos t
	lastBlendingOutput u
	noiseSettings a
	noiseSizeXZ v
	preliminarySurfaceLevel l
	sliceFillingContextProvider J
	wrapped k
	advanceCellX (I)V b
	aquifer ()Lnet/minecraft/world/level/levelgen/Aquifer; i
	blockX ()I a
	blockY ()I b
	blockZ ()I c
	cachedClimateSampler (Lnet/minecraft/world/level/levelgen/NoiseRouter;Ljava/util/List;)Lnet/minecraft/world/level/biome/Climate$Sampler; a
	cellHeight ()I k
	cellWidth ()I j
	computePreliminarySurfaceLevel (J)I a
	fillAllDirectly ([DLnet/minecraft/world/level/levelgen/DensityFunction;)V a
	fillSlice (ZI)V a
	forChunk (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/DensityFunctions$BeardifierOrMarker;Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings;Lnet/minecraft/world/level/levelgen/Aquifer$FluidPicker;Lnet/minecraft/world/level/levelgen/blending/Blender;)Lnet/minecraft/world/level/levelgen/NoiseChunk; a
	forIndex (I)Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext; a
	forIndex (I)Lnet/minecraft/world/level/levelgen/NoiseChunk; c
	getBlender ()Lnet/minecraft/world/level/levelgen/blending/Blender; d
	getInterpolatedState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getOrComputeBlendingOutput (II)Lnet/minecraft/world/level/levelgen/blending/Blender$BlendingOutput; c
	initializeForFirstCellX ()V f
	preliminarySurfaceLevel (II)I a
	selectCellYZ (II)V b
	stopInterpolation ()V g
	swapSlices ()V h
	updateForX (ID)V b
	updateForY (ID)V a
	updateForZ (ID)V c
	wrap (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	wrapNew (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; b
net/minecraft/world/level/levelgen/NoiseChunk$BlendAlpha dav$a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$BlendOffset dav$b
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$BlockStateFiller dav$c
net/minecraft/world/level/levelgen/NoiseChunk$Cache2D dav$d
	function a
	lastPos2D e
	lastValue f
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$CacheAllInCell dav$e
	noiseFiller e
	values f
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$CacheOnce dav$f
	function e
	lastArray i
	lastArrayCounter g
	lastCounter f
	lastValue h
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$FlatCache dav$g
	noiseFiller e
	values f
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$NoiseChunkDensityFunction dav$h
	maxValue ()D b
	minValue ()D a
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$NoiseInterpolator dav$i
	noise000 h
	noise001 i
	noise010 l
	noise011 m
	noise100 j
	noise101 k
	noise110 n
	noise111 o
	noiseFiller g
	slice0 e
	slice1 f
	value v
	valueXZ00 p
	valueXZ01 r
	valueXZ10 q
	valueXZ11 s
	valueZ0 t
	valueZ1 u
	allocateSlice (II)[[D a
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	selectCellYZ (II)V b
	swapSlices ()V l
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	updateForX (D)V b
	updateForY (D)V a
	updateForZ (D)V c
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseGeneratorSettings daw
	AMPLIFIED e
	CAVES h
	CODEC b
	DIRECT_CODEC a
	END g
	FLOATING_ISLANDS i
	LARGE_BIOMES d
	NETHER f
	OVERWORLD c
	aquifersEnabled r
	defaultBlock k
	defaultFluid l
	disableMobGeneration q
	noiseRouter m
	noiseSettings j
	oreVeinsEnabled s
	seaLevel p
	spawnTarget o
	surfaceRule n
	useLegacyRandomSource t
	aquifersEnabled ()Z m
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/core/Holder; a
	caves ()Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; q
	defaultBlock ()Lnet/minecraft/world/level/block/state/BlockState; g
	defaultFluid ()Lnet/minecraft/world/level/block/state/BlockState; h
	disableMobGeneration ()Z a
	dummy ()Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; e
	end ()Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; o
	floatingIslands ()Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; r
	getRandomSource ()Lnet/minecraft/world/level/levelgen/WorldgenRandom$Algorithm; d
	isAquifersEnabled ()Z b
	nether ()Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; p
	noiseRouter ()Lnet/minecraft/world/level/levelgen/NoiseRouter; i
	noiseSettings ()Lnet/minecraft/world/level/levelgen/NoiseSettings; f
	oreVeinsEnabled ()Z c
	overworld (ZZ)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings;)Lnet/minecraft/core/Holder; a
	seaLevel ()I l
	spawnTarget ()Ljava/util/List; k
	surfaceRule ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; j
	useLegacyRandomSource ()Z n
net/minecraft/world/level/levelgen/NoiseRouter dax
	CODEC a
	barrierNoise b
	continents h
	depth j
	erosion i
	finalDensity m
	fluidLevelFloodednessNoise c
	fluidLevelSpreadNoise d
	initialDensityWithoutJaggedness l
	lavaNoise e
	ridges k
	temperature f
	vegetation g
	veinGap p
	veinRidged o
	veinToggle n
	barrierNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction; a
	continents ()Lnet/minecraft/world/level/levelgen/DensityFunction; g
	depth ()Lnet/minecraft/world/level/levelgen/DensityFunction; i
	erosion ()Lnet/minecraft/world/level/levelgen/DensityFunction; h
	field (Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; a
	finalDensity ()Lnet/minecraft/world/level/levelgen/DensityFunction; l
	fluidLevelFloodednessNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction; b
	fluidLevelSpreadNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction; c
	initialDensityWithoutJaggedness ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
	lavaNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction; d
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/NoiseRouter; a
	ridges ()Lnet/minecraft/world/level/levelgen/DensityFunction; j
	temperature ()Lnet/minecraft/world/level/levelgen/DensityFunction; e
	vegetation ()Lnet/minecraft/world/level/levelgen/DensityFunction; f
	veinGap ()Lnet/minecraft/world/level/levelgen/DensityFunction; o
	veinRidged ()Lnet/minecraft/world/level/levelgen/DensityFunction; n
	veinToggle ()Lnet/minecraft/world/level/levelgen/DensityFunction; m
net/minecraft/world/level/levelgen/NoiseRouterData day
	BASE_3D_NOISE_END A
	BASE_3D_NOISE_NETHER z
	BASE_3D_NOISE_OVERWORLD y
	BLENDING_FACTOR s
	BLENDING_JAGGEDNESS t
	CHEESE_NOISE_TARGET r
	CONTINENTS d
	CONTINENTS_LARGE l
	DEPTH k
	DEPTH_AMPLIFIED K
	DEPTH_LARGE F
	ENTRANCES O
	EROSION e
	EROSION_LARGE m
	FACTOR i
	FACTOR_AMPLIFIED I
	FACTOR_LARGE D
	GLOBAL_OFFSET a
	ISLAND_CHUNK_DISTANCE b
	ISLAND_CHUNK_DISTANCE_SQR c
	JAGGEDNESS j
	JAGGEDNESS_AMPLIFIED J
	JAGGEDNESS_LARGE E
	NOODLE P
	NOODLE_SPACING_AND_STRAIGHTNESS p
	OFFSET h
	OFFSET_AMPLIFIED H
	OFFSET_LARGE C
	ORE_THICKNESS n
	PILLARS Q
	RIDGES f
	RIDGES_FOLDED g
	SHIFT_X w
	SHIFT_Z x
	SLOPED_CHEESE B
	SLOPED_CHEESE_AMPLIFIED L
	SLOPED_CHEESE_END M
	SLOPED_CHEESE_LARGE G
	SPAGHETTI_2D S
	SPAGHETTI_2D_THICKNESS_MODULATOR R
	SPAGHETTI_ROUGHNESS_FUNCTION N
	SURFACE_DENSITY_THRESHOLD q
	VEININESS_FREQUENCY o
	Y v
	ZERO u
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/core/Holder; a
	caves (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/levelgen/NoiseRouter; c
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	end (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/levelgen/NoiseRouter; e
	entrances (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/levelgen/DensityFunction; f
	floatingIslands (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/levelgen/NoiseRouter; d
	getFunction (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	getNoise (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Holder; a
	nether (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/levelgen/NoiseRouter; b
	noNewCaves (Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/NoiseRouter; b
	noiseGradientDensity (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; b
	none ()Lnet/minecraft/world/level/levelgen/NoiseRouter; a
	noodle (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/levelgen/DensityFunction; g
	overworld (Lnet/minecraft/core/Registry;ZZ)Lnet/minecraft/world/level/levelgen/NoiseRouter; a
	peaksAndValleys (F)F a
	peaksAndValleys (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	pillars ()Lnet/minecraft/world/level/levelgen/DensityFunction; c
	postProcess (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; b
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/core/Holder; b
	registerAndWrap (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	registerTerrainNoises (Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/core/Holder;Lnet/minecraft/core/Holder;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Z)V a
	slide (Lnet/minecraft/world/level/levelgen/DensityFunction;IIIIDIID)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	slideEnd (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; c
	slideEndLike (Lnet/minecraft/world/level/levelgen/DensityFunction;II)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	slideNetherLike (Lnet/minecraft/core/Registry;II)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	slideOverworld (ZLnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	spaghetti2D (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/levelgen/DensityFunction; h
	spaghettiRoughnessFunction ()Lnet/minecraft/world/level/levelgen/DensityFunction; b
	splineWithBlending (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	underground (Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	yLimitedInterpolatable (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;III)Lnet/minecraft/world/level/levelgen/DensityFunction; a
net/minecraft/world/level/levelgen/NoiseRouterData$QuantizedSpaghettiRarity day$a
	getSpaghettiRarity3D (D)D b
	getSphaghettiRarity2D (D)D a
net/minecraft/world/level/levelgen/NoiseSettings daz
	CAVES_NOISE_SETTINGS e
	CODEC a
	END_NOISE_SETTINGS d
	FLOATING_ISLANDS_NOISE_SETTINGS f
	NETHER_NOISE_SETTINGS c
	OVERWORLD_NOISE_SETTINGS b
	height h
	minY g
	noiseSizeHorizontal i
	noiseSizeVertical j
	clampToHeightAccessor (Lnet/minecraft/world/level/LevelHeightAccessor;)Lnet/minecraft/world/level/levelgen/NoiseSettings; a
	create (IIII)Lnet/minecraft/world/level/levelgen/NoiseSettings; a
	getCellHeight ()I a
	getCellWidth ()I b
	guardY (Lnet/minecraft/world/level/levelgen/NoiseSettings;)Lcom/mojang/serialization/DataResult; a
	height ()I d
	minY ()I c
	noiseSizeHorizontal ()I e
	noiseSizeVertical ()I f
net/minecraft/world/level/levelgen/Noises dba
	AQUIFER_BARRIER k
	AQUIFER_FLUID_LEVEL_FLOODEDNESS l
	AQUIFER_FLUID_LEVEL_SPREAD n
	AQUIFER_LAVA m
	BADLANDS_PILLAR Q
	BADLANDS_PILLAR_ROOF R
	BADLANDS_SURFACE S
	CALCITE X
	CAVE_CHEESE D
	CAVE_ENTRANCE B
	CAVE_LAYER C
	CLAY_BANDS_OFFSET P
	CONTINENTALNESS c
	CONTINENTALNESS_LARGE g
	EROSION d
	EROSION_LARGE h
	GRAVEL Y
	GRAVEL_LAYER ad
	ICE ab
	ICEBERG_PILLAR T
	ICEBERG_PILLAR_ROOF U
	ICEBERG_SURFACE V
	JAGGED M
	NETHERRACK af
	NETHER_STATE_SELECTOR ah
	NETHER_WART ag
	NOODLE I
	NOODLE_RIDGE_A K
	NOODLE_RIDGE_B L
	NOODLE_THICKNESS J
	ORE_GAP H
	ORE_VEININESS E
	ORE_VEIN_A F
	ORE_VEIN_B G
	PACKED_ICE aa
	PATCH ae
	PILLAR o
	PILLAR_RARENESS p
	PILLAR_THICKNESS q
	POWDER_SNOW Z
	RIDGE i
	SHIFT j
	SOUL_SAND_LAYER ac
	SPAGHETTI_2D r
	SPAGHETTI_2D_ELEVATION s
	SPAGHETTI_2D_MODULATOR t
	SPAGHETTI_2D_THICKNESS u
	SPAGHETTI_3D_1 v
	SPAGHETTI_3D_2 w
	SPAGHETTI_3D_RARITY x
	SPAGHETTI_3D_THICKNESS y
	SPAGHETTI_ROUGHNESS z
	SPAGHETTI_ROUGHNESS_MODULATOR A
	SURFACE N
	SURFACE_SECONDARY O
	SWAMP W
	TEMPERATURE a
	TEMPERATURE_LARGE e
	VEGETATION b
	VEGETATION_LARGE f
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	instantiate (Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/levelgen/PositionalRandomFactory;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
net/minecraft/world/level/levelgen/OreVeinifier dbb
	CHANCE_OF_RAW_ORE_BLOCK h
	EDGE_ROUNDOFF_BEGIN b
	MAX_EDGE_ROUNDOFF c
	MAX_RICHNESS f
	MAX_RICHNESS_THRESHOLD g
	MIN_RICHNESS e
	SKIP_ORE_IF_GAP_NOISE_IS_BELOW i
	VEININESS_THRESHOLD a
	VEIN_SOLIDNESS d
	create (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/PositionalRandomFactory;)Lnet/minecraft/world/level/levelgen/NoiseChunk$BlockStateFiller; a
net/minecraft/world/level/levelgen/OreVeinifier$VeinType dbb$a
	$VALUES h
	COPPER a
	IRON b
	filler g
	maxY d
	minY c
	ore e
	rawOreBlock f
	$values ()[Lnet/minecraft/world/level/levelgen/OreVeinifier$VeinType; a
net/minecraft/world/level/levelgen/PatrolSpawner dbc
	nextTick a
	spawnPatrolMember (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Z)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/levelgen/PhantomSpawner dbd
	nextTick a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/levelgen/PositionalRandomFactory dbe
	at (III)Lnet/minecraft/util/RandomSource; a
	at (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/util/RandomSource; a
	fromHashOf (Ljava/lang/String;)Lnet/minecraft/util/RandomSource; a
	fromHashOf (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/util/RandomSource; a
	parityConfigString (Ljava/lang/StringBuilder;)V a
net/minecraft/world/level/levelgen/RandomState dbf
	aquiferRandom g
	legacyLevelSeed b
	noiseIntances i
	noises c
	oreRandom h
	positionalRandoms j
	random a
	router d
	sampler e
	surfaceSystem f
	aquiferRandom ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	create (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/resources/ResourceKey;J)Lnet/minecraft/world/level/levelgen/RandomState; a
	create (Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings;Lnet/minecraft/core/Registry;J)Lnet/minecraft/world/level/levelgen/RandomState; a
	getOrCreateNoise (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
	getOrCreateRandomFactory (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; a
	legacyLevelSeed ()J a
	oreRandom ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; f
	router ()Lnet/minecraft/world/level/levelgen/NoiseRouter; b
	sampler ()Lnet/minecraft/world/level/biome/Climate$Sampler; c
	surfaceSystem ()Lnet/minecraft/world/level/levelgen/SurfaceSystem; d
net/minecraft/world/level/levelgen/RandomSupport dbg
	GOLDEN_RATIO_64 a
	SEED_UNIQUIFIER c
	SILVER_RATIO_64 b
	generateUniqueSeed ()J a
	mixStafford13 (J)J a
	upgradeSeedTo128bit (J)Lnet/minecraft/world/level/levelgen/RandomSupport$Seed128bit; b
net/minecraft/world/level/levelgen/RandomSupport$Seed128bit dbg$a
	seedHi b
	seedLo a
	seedHi ()J b
	seedLo ()J a
net/minecraft/world/level/levelgen/SingleThreadedRandomSource dbh
	INCREMENT g
	MODULUS_BITS d
	MODULUS_MASK e
	MULTIPLIER f
	gaussianSource i
	seed h
	fork ()Lnet/minecraft/util/RandomSource; d
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	next (I)I c
	nextGaussian ()D k
	setSeed (J)V b
net/minecraft/world/level/levelgen/SurfaceRules dbi
	DEEP_UNDER_FLOOR c
	ON_CEILING e
	ON_FLOOR a
	UNDER_CEILING f
	UNDER_FLOOR b
	VERY_DEEP_UNDER_FLOOR d
	abovePreliminarySurface ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; c
	bandlands ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; e
	hole ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; b
	ifTrue (Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	isBiome (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource; a
	isBiome ([Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	noiseCondition (Lnet/minecraft/resources/ResourceKey;D)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	noiseCondition (Lnet/minecraft/resources/ResourceKey;DD)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	not (Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	register (Lnet/minecraft/core/Registry;Ljava/lang/String;Lnet/minecraft/util/KeyDispatchDataCodec;)Lcom/mojang/serialization/Codec; a
	sequence ([Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	state (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	steep ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	stoneDepthCheck (IZILnet/minecraft/world/level/levelgen/placement/CaveSurface;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	stoneDepthCheck (IZLnet/minecraft/world/level/levelgen/placement/CaveSurface;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	temperature ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; d
	verticalGradient (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	waterBlockCheck (II)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	waterStartCheck (II)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; b
	yBlockCheck (Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	yStartCheck (Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; b
net/minecraft/world/level/levelgen/SurfaceRules$AbovePreliminarySurface dbi$a
	$VALUES d
	CODEC c
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/SurfaceRules$AbovePreliminarySurface; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$Bandlands dbi$b
	$VALUES d
	CODEC c
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/SurfaceRules$Bandlands; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource dbi$c
	CODEC a
	biomeNameTest d
	biomes c
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$BlockRuleSource dbi$d
	CODEC d
	resultState a
	rule c
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	resultState ()Lnet/minecraft/world/level/block/state/BlockState; b
	rule ()Lnet/minecraft/world/level/levelgen/SurfaceRules$StateRule; c
net/minecraft/world/level/levelgen/SurfaceRules$Condition dbi$e
	test ()Z b
net/minecraft/world/level/levelgen/SurfaceRules$ConditionSource dbi$f
	CODEC b
	bootstrap (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$Context dbi$g
	HOW_FAR_BELOW_PRELIMINARY_SURFACE_LEVEL_TO_BUILD_SURFACE a
	SURFACE_CELL_BITS b
	SURFACE_CELL_MASK d
	SURFACE_CELL_SIZE c
	abovePreliminarySurface i
	biome A
	biomeGetter m
	blockX r
	blockY B
	blockZ s
	chunk k
	context n
	hole h
	lastMinSurfaceLevelUpdate w
	lastPreliminarySurfaceCellOrigin o
	lastSurfaceDepth2Update u
	lastUpdateXZ q
	lastUpdateY y
	minSurfaceLevel x
	noiseChunk l
	pos z
	preliminarySurfaceCache p
	randomState j
	steep g
	stoneDepthAbove E
	stoneDepthBelow D
	surfaceDepth t
	surfaceSecondary v
	system e
	temperature f
	waterHeight C
	blockCoordToSurfaceCell (I)I a
	getMinSurfaceLevel ()I b
	getSurfaceSecondary ()D a
	surfaceCellToBlockCoord (I)I b
	updateXZ (II)V a
	updateY (IIIIII)V a
net/minecraft/world/level/levelgen/SurfaceRules$Context$AbovePreliminarySurfaceCondition dbi$g$a
	test ()Z b
net/minecraft/world/level/levelgen/SurfaceRules$Context$HoleCondition dbi$g$b
	compute ()Z a
net/minecraft/world/level/levelgen/SurfaceRules$Context$SteepMaterialCondition dbi$g$c
	compute ()Z a
net/minecraft/world/level/levelgen/SurfaceRules$Context$TemperatureHelperCondition dbi$g$d
	compute ()Z a
net/minecraft/world/level/levelgen/SurfaceRules$Hole dbi$h
	$VALUES d
	CODEC c
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/SurfaceRules$Hole; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$LazyCondition dbi$i
	context c
	lastUpdate a
	result d
	compute ()Z a
	getContextLastUpdate ()J c
	test ()Z b
net/minecraft/world/level/levelgen/SurfaceRules$LazyXZCondition dbi$j
	getContextLastUpdate ()J c
net/minecraft/world/level/levelgen/SurfaceRules$LazyYCondition dbi$k
	getContextLastUpdate ()J c
net/minecraft/world/level/levelgen/SurfaceRules$NoiseThresholdConditionSource dbi$l
	CODEC e
	maxThreshold d
	minThreshold c
	noise a
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	maxThreshold ()D d
	minThreshold ()D c
	noise ()Lnet/minecraft/resources/ResourceKey; b
net/minecraft/world/level/levelgen/SurfaceRules$NotCondition dbi$m
	target a
	target ()Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	test ()Z b
net/minecraft/world/level/levelgen/SurfaceRules$NotConditionSource dbi$n
	CODEC c
	target a
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	target ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; b
net/minecraft/world/level/levelgen/SurfaceRules$RuleSource dbi$o
	CODEC b
	bootstrap (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$SequenceRule dbi$p
	rules a
	rules ()Ljava/util/List; a
net/minecraft/world/level/levelgen/SurfaceRules$SequenceRuleSource dbi$q
	CODEC c
	sequence a
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	sequence ()Ljava/util/List; b
net/minecraft/world/level/levelgen/SurfaceRules$StateRule dbi$r
	state a
	state ()Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/SurfaceRules$Steep dbi$s
	$VALUES d
	CODEC c
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/SurfaceRules$Steep; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$StoneDepthCheck dbi$t
	CODEC f
	addSurfaceDepth c
	offset a
	secondaryDepthRange d
	surfaceType e
	addSurfaceDepth ()Z c
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	offset ()I b
	secondaryDepthRange ()I d
	surfaceType ()Lnet/minecraft/world/level/levelgen/placement/CaveSurface; e
net/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule dbi$u
net/minecraft/world/level/levelgen/SurfaceRules$Temperature dbi$v
	$VALUES d
	CODEC c
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/SurfaceRules$Temperature; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$TestRule dbi$w
	condition a
	followup b
	condition ()Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	followup ()Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule; b
net/minecraft/world/level/levelgen/SurfaceRules$TestRuleSource dbi$x
	CODEC d
	ifTrue a
	thenRun c
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	ifTrue ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; b
	thenRun ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; c
net/minecraft/world/level/levelgen/SurfaceRules$VerticalGradientConditionSource dbi$y
	CODEC e
	falseAtAndAbove d
	randomName a
	trueAtAndBelow c
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	falseAtAndAbove ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; d
	randomName ()Lnet/minecraft/resources/ResourceLocation; b
	trueAtAndBelow ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; c
net/minecraft/world/level/levelgen/SurfaceRules$WaterConditionSource dbi$z
	CODEC e
	addStoneDepth d
	offset a
	surfaceDepthMultiplier c
	addStoneDepth ()Z d
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	offset ()I b
	surfaceDepthMultiplier ()I c
net/minecraft/world/level/levelgen/SurfaceRules$YConditionSource dbi$aa
	CODEC e
	addStoneDepth d
	anchor a
	surfaceDepthMultiplier c
	addStoneDepth ()Z d
	anchor ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	surfaceDepthMultiplier ()I c
net/minecraft/world/level/levelgen/SurfaceSystem dbj
	BROWN_TERRACOTTA e
	LIGHT_GRAY_TERRACOTTA g
	ORANGE_TERRACOTTA b
	PACKED_ICE h
	RED_TERRACOTTA f
	SNOW_BLOCK i
	TERRACOTTA c
	WHITE_TERRACOTTA a
	YELLOW_TERRACOTTA d
	badlandsPillarNoise n
	badlandsPillarRoofNoise o
	badlandsSurfaceNoise p
	clayBands l
	clayBandsOffsetNoise m
	defaultBlock j
	icebergPillarNoise q
	icebergPillarRoofNoise r
	icebergSurfaceNoise s
	noiseRandom t
	seaLevel k
	surfaceNoise u
	surfaceSecondaryNoise v
	buildSurface (Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/core/Registry;ZLnet/minecraft/world/level/levelgen/WorldGenerationContext;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/NoiseChunk;Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;)V a
	erodedBadlandsExtension (Lnet/minecraft/world/level/chunk/BlockColumn;IIILnet/minecraft/world/level/LevelHeightAccessor;)V a
	frozenOceanExtension (ILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/chunk/BlockColumn;Lnet/minecraft/core/BlockPos$MutableBlockPos;III)V a
	generateBands (Lnet/minecraft/util/RandomSource;)[Lnet/minecraft/world/level/block/state/BlockState; a
	getBand (III)Lnet/minecraft/world/level/block/state/BlockState; a
	getSurfaceDepth (II)I a
	getSurfaceSecondary (II)D b
	isStone (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	makeBands (Lnet/minecraft/util/RandomSource;[Lnet/minecraft/world/level/block/state/BlockState;ILnet/minecraft/world/level/block/state/BlockState;)V a
	topMaterial (Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/NoiseChunk;Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
net/minecraft/world/level/levelgen/ThreadSafeLegacyRandomSource dbk
	INCREMENT g
	MODULUS_BITS d
	MODULUS_MASK e
	MULTIPLIER f
	gaussianSource i
	seed h
	fork ()Lnet/minecraft/util/RandomSource; d
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	next (I)I c
	nextGaussian ()D k
	setSeed (J)V b
net/minecraft/world/level/levelgen/VerticalAnchor dbl
	BOTTOM b
	CODEC a
	TOP c
	aboveBottom (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; b
	absolute (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; a
	belowTop (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; c
	bottom ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; a
	merge (Lcom/mojang/datafixers/util/Either;)Lnet/minecraft/world/level/levelgen/VerticalAnchor; a
	resolveY (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
	split (Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lcom/mojang/datafixers/util/Either; a
	top ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; b
net/minecraft/world/level/levelgen/VerticalAnchor$AboveBottom dbl$a
	CODEC d
	offset e
	offset ()I c
	resolveY (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/VerticalAnchor$Absolute dbl$b
	CODEC d
	y e
	resolveY (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
	y ()I c
net/minecraft/world/level/levelgen/VerticalAnchor$BelowTop dbl$c
	CODEC d
	offset e
	offset ()I c
	resolveY (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/WorldGenSettings dbm
	CODEC a
	dimensions e
	generateBonusChest d
	generateStructures c
	legacyCustomOptions f
	seed b
	dimensions ()Lnet/minecraft/core/Registry; d
	generateBonusChest ()Z c
	generateStructures ()Z b
	guardExperimental ()Lcom/mojang/serialization/DataResult; m
	isDebug ()Z g
	isFlatWorld ()Z h
	isOldCustomizedWorld ()Z i
	levelStemToLevel (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; a
	levelToLevelStem (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; b
	levels ()Lcom/google/common/collect/ImmutableSet; f
	overworld ()Lnet/minecraft/world/level/chunk/ChunkGenerator; e
	parseSeed (Ljava/lang/String;)Ljava/util/OptionalLong; a
	replaceOverworldGenerator (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/levelgen/WorldGenSettings;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	seed ()J a
	stable ()Z n
	withBonusChest ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; j
	withBonusChestToggled ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; l
	withOverworld (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/core/Registry; a
	withOverworld (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/core/Registry; a
	withSeed (ZLjava/util/OptionalLong;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	withStructuresToggled ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; k
net/minecraft/world/level/levelgen/WorldGenerationContext dbn
	height b
	minY a
	getGenDepth ()I b
	getMinGenY ()I a
net/minecraft/world/level/levelgen/WorldgenRandom dbo
	count e
	randomSource d
	fork ()Lnet/minecraft/util/RandomSource; d
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	getCount ()I l
	next (I)I c
	seedSlimeChunk (IIJJ)Lnet/minecraft/util/RandomSource; a
	setDecorationSeed (JII)J a
	setFeatureSeed (JII)V b
	setLargeFeatureSeed (JII)V c
	setLargeFeatureWithSalt (JIII)V a
	setSeed (J)V b
net/minecraft/world/level/levelgen/WorldgenRandom$Algorithm dbo$a
	$VALUES d
	LEGACY a
	XOROSHIRO b
	constructor c
	$values ()[Lnet/minecraft/world/level/levelgen/WorldgenRandom$Algorithm; a
	newInstance (J)Lnet/minecraft/util/RandomSource; a
net/minecraft/world/level/levelgen/Xoroshiro128PlusPlus dbp
	seedHi b
	seedLo a
	nextLong ()J a
net/minecraft/world/level/levelgen/XoroshiroRandomSource dbq
	DOUBLE_UNIT c
	FLOAT_UNIT b
	gaussianSource e
	randomNumberGenerator d
	consumeCount (I)V b
	fork ()Lnet/minecraft/util/RandomSource; d
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	nextBits (I)J c
	nextBoolean ()Z h
	nextDouble ()D j
	nextFloat ()F i
	nextGaussian ()D k
	nextInt ()I f
	nextInt (I)I a
	nextLong ()J g
	setSeed (J)V b
net/minecraft/world/level/levelgen/XoroshiroRandomSource$XoroshiroPositionalRandomFactory dbq$a
	MD5_128 a
	seedHi c
	seedLo b
	at (III)Lnet/minecraft/util/RandomSource; a
	fromHashOf (Ljava/lang/String;)Lnet/minecraft/util/RandomSource; a
	parityConfigString (Ljava/lang/StringBuilder;)V a
net/minecraft/world/level/levelgen/blending/Blender dbr
	DENSITY_BLENDING_RANGE_CELLS e
	DENSITY_BLENDING_RANGE_CHUNKS f
	EMPTY a
	HEIGHT_BLENDING_RANGE_CELLS c
	HEIGHT_BLENDING_RANGE_CHUNKS d
	OLD_CHUNK_XZ_RADIUS g
	SHIFT_NOISE b
	densityBlendingData i
	heightAndBiomeBlendingData h
	addAroundOldChunksCarvingMaskFilter (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ProtoChunk;)V a
	blendBiome (III)Lnet/minecraft/core/Holder; a
	blendDensity (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;D)D a
	blendOffsetAndFactor (II)Lnet/minecraft/world/level/levelgen/blending/Blender$BlendingOutput; a
	distanceToCube (DDDDDD)D a
	empty ()Lnet/minecraft/world/level/levelgen/blending/Blender; a
	generateBorderTick (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos;)V a
	generateBorderTicks (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	getBiomeResolver (Lnet/minecraft/world/level/biome/BiomeResolver;)Lnet/minecraft/world/level/biome/BiomeResolver; a
	getBlendingDataValue (IIILnet/minecraft/world/level/levelgen/blending/Blender$CellValueGetter;)D a
	getBlendingDataValue (Lnet/minecraft/world/level/levelgen/blending/Blender$CellValueGetter;IIIII)D a
	heightToOffset (D)D a
	makeOffsetOldChunkDistanceGetter (Lnet/minecraft/core/Direction8;Lnet/minecraft/world/level/levelgen/blending/BlendingData;)Lnet/minecraft/world/level/levelgen/blending/Blender$DistanceGetter; a
	makeOldChunkDistanceGetter (Lnet/minecraft/world/level/levelgen/blending/BlendingData;Ljava/util/Map;)Lnet/minecraft/world/level/levelgen/blending/Blender$DistanceGetter; a
	of (Lnet/minecraft/server/level/WorldGenRegion;)Lnet/minecraft/world/level/levelgen/blending/Blender; a
net/minecraft/world/level/levelgen/blending/Blender$BlendingOutput dbr$a
	alpha a
	blendingOffset b
	alpha ()D a
	blendingOffset ()D b
net/minecraft/world/level/levelgen/blending/Blender$CellValueGetter dbr$b
net/minecraft/world/level/levelgen/blending/Blender$DistanceGetter dbr$c
net/minecraft/world/level/levelgen/blending/BlendingData dbs
	AIR_DENSITY h
	BLENDING_DENSITY_FACTOR f
	CELLS_PER_SECTION_Y i
	CELL_COLUMN_COUNT o
	CELL_COLUMN_INSIDE_COUNT m
	CELL_COLUMN_OUTSIDE_COUNT n
	CELL_HEIGHT b
	CELL_HORIZONTAL_MAX_INDEX_INSIDE k
	CELL_HORIZONTAL_MAX_INDEX_OUTSIDE l
	CELL_RATIO c
	CELL_WIDTH a
	CODEC e
	DOUBLE_ARRAY_CODEC v
	NO_VALUE d
	QUARTS_PER_SECTION j
	SOLID_DENSITY g
	SURFACE_BLOCKS q
	areaWithOldGeneration p
	biomes t
	densities u
	hasCalculatedData r
	heights s
	addValuesForColumn (ILnet/minecraft/world/level/chunk/ChunkAccess;II)V a
	calculateData (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/Set;)V a
	cellCountPerColumn ()I b
	getAreaWithOldGeneration ()Lnet/minecraft/world/level/LevelHeightAccessor; a
	getBiomeColumn (Lnet/minecraft/world/level/chunk/ChunkAccess;II)Ljava/util/List; b
	getCellYIndex (I)I a
	getColumnMinY ()I d
	getDensity (III)D b
	getDensity ([DI)D a
	getDensityColumn (Lnet/minecraft/world/level/chunk/ChunkAccess;III)[D a
	getHeight (III)D a
	getHeightAtXZ (Lnet/minecraft/world/level/chunk/ChunkAccess;II)I a
	getInsideIndex (II)I a
	getMinY ()I e
	getOrUpdateBlendingData (Lnet/minecraft/server/level/WorldGenRegion;II)Lnet/minecraft/world/level/levelgen/blending/BlendingData; a
	getOutsideIndex (II)I b
	getX (I)I b
	getZ (I)I c
	isGround (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos;)Z a
	iterateBiomes (IIILnet/minecraft/world/level/levelgen/blending/BlendingData$BiomeConsumer;)V a
	iterateDensities (IIIILnet/minecraft/world/level/levelgen/blending/BlendingData$DensityConsumer;)V a
	iterateHeights (IILnet/minecraft/world/level/levelgen/blending/BlendingData$HeightConsumer;)V a
	quartCountPerColumn ()I c
	read1 (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos$MutableBlockPos;)D a
	read7 (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos$MutableBlockPos;)D b
	sideByGenerationAge (Lnet/minecraft/world/level/WorldGenLevel;IIZ)Ljava/util/Set; a
	validateArraySize (Lnet/minecraft/world/level/levelgen/blending/BlendingData;)Lcom/mojang/serialization/DataResult; a
	zeroIfNegative (I)I d
net/minecraft/world/level/levelgen/blending/BlendingData$BiomeConsumer dbs$a
net/minecraft/world/level/levelgen/blending/BlendingData$DensityConsumer dbs$b
net/minecraft/world/level/levelgen/blending/BlendingData$HeightConsumer dbs$c
net/minecraft/world/level/levelgen/blockpredicates/AllOfPredicate dbu
	CODEC a
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/AnyOfPredicate dbv
	CODEC a
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/BlockPredicate dbw
	CODEC b
	ONLY_IN_AIR_OR_WATER_PREDICATE d
	ONLY_IN_AIR_PREDICATE c
	allOf (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	allOf (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	allOf ([Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	alwaysTrue ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; d
	anyOf (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	anyOf (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	anyOf ([Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	hasSturdyFace (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	hasSturdyFace (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	insideWorld (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; c
	matchesBlocks (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; c
	matchesBlocks (Lnet/minecraft/core/Vec3i;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesBlocks (Lnet/minecraft/core/Vec3i;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesBlocks ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesFluids (Lnet/minecraft/core/Vec3i;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	matchesFluids (Lnet/minecraft/core/Vec3i;[Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesFluids ([Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesTag (Lnet/minecraft/core/Vec3i;Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	not (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	replaceable ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	replaceable (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	solid ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; c
	solid (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
	wouldSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
net/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType dbx
	ALL_OF j
	ANY_OF i
	HAS_STURDY_FACE d
	INSIDE_WORLD_BOUNDS h
	MATCHING_BLOCKS a
	MATCHING_BLOCK_TAG b
	MATCHING_FLUIDS c
	NOT k
	REPLACEABLE f
	SOLID e
	TRUE l
	WOULD_SURVIVE g
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/CombiningPredicate dby
	predicates e
	codec (Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/levelgen/blockpredicates/HasSturdyFacePredicate dbz
	CODEC a
	direction f
	offset e
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/InsideWorldBoundsPredicate dca
	CODEC a
	offset e
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/MatchingBlockTagPredicate dcb
	CODEC e
	tag a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/MatchingBlocksPredicate dcc
	CODEC a
	blocks e
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/MatchingFluidsPredicate dcd
	CODEC a
	fluids e
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/NotPredicate dce
	CODEC a
	predicate e
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/ReplaceablePredicate dcf
	CODEC a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/SolidPredicate dcg
	CODEC a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/StateTestingPredicate dch
	offset f
	stateTestingCodec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1; a
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/blockpredicates/TrueBlockPredicate dci
	CODEC e
	INSTANCE a
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/WouldSurvivePredicate dcj
	CODEC a
	offset e
	state f
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration dcl
	CODEC a
	shape c
	verticalRotation b
net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration$CanyonShapeConfiguration dcl$a
	CODEC a
	distanceFactor b
	horizontalRadiusFactor e
	thickness c
	verticalRadiusCenterFactor g
	verticalRadiusDefaultFactor f
	widthSmoothness d
net/minecraft/world/level/levelgen/carver/CanyonWorldCarver dcm
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	doCarve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;JLnet/minecraft/world/level/levelgen/Aquifer;DDDFFFIIDLnet/minecraft/world/level/chunk/CarvingMask;)V a
	initWidthFactors (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/util/RandomSource;)[F a
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/util/RandomSource;)Z a
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/util/RandomSource;)Z a
	shouldSkip (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;[FDDDI)Z a
	updateVerticalRadius (Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/util/RandomSource;DFF)D a
net/minecraft/world/level/levelgen/carver/CarverConfiguration dcn
	CODEC d
	debugSettings h
	lavaLevel g
	replaceable i
	y e
	yScale f
net/minecraft/world/level/levelgen/carver/CarverDebugSettings dco
	CODEC b
	DEFAULT a
	airState d
	barrierState g
	debugMode c
	lavaState f
	waterState e
	getAirState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getBarrierState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getLavaState ()Lnet/minecraft/world/level/block/state/BlockState; d
	getWaterState ()Lnet/minecraft/world/level/block/state/BlockState; c
	isDebugMode ()Z a
	of (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; a
	of (ZLnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; a
	of (ZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; a
net/minecraft/world/level/levelgen/carver/CarvingContext dcp
	noiseChunk b
	randomState c
	registryAccess a
	surfaceRule d
	randomState ()Lnet/minecraft/world/level/levelgen/RandomState; d
	registryAccess ()Lnet/minecraft/core/RegistryAccess; c
	topMaterial (Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
net/minecraft/world/level/levelgen/carver/CaveCarverConfiguration dcq
	CODEC a
	floorLevel j
	horizontalRadiusMultiplier b
	verticalRadiusMultiplier c
net/minecraft/world/level/levelgen/carver/CaveWorldCarver dcr
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	createRoom (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/levelgen/Aquifer;DDDFDLnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker;)V a
	createTunnel (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;JLnet/minecraft/world/level/levelgen/Aquifer;DDDDDFFFIIDLnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker;)V a
	getCaveBound ()I a
	getThickness (Lnet/minecraft/util/RandomSource;)F a
	getYScale ()D b
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/util/RandomSource;)Z a
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/util/RandomSource;)Z a
	shouldSkip (DDDD)Z a
net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver dcs
	CODEC b
	DIRECT_CODEC a
	LIST_CODEC c
	config e
	worldCarver d
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	config ()Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration; b
	isStartChunk (Lnet/minecraft/util/RandomSource;)Z a
	worldCarver ()Lnet/minecraft/world/level/levelgen/carver/WorldCarver; a
net/minecraft/world/level/levelgen/carver/NetherWorldCarver dct
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	getCaveBound ()I a
	getThickness (Lnet/minecraft/util/RandomSource;)F a
	getYScale ()D b
net/minecraft/world/level/levelgen/carver/WorldCarver dcu
	AIR d
	CANYON c
	CAVE a
	CAVE_AIR e
	LAVA g
	NETHER_CAVE b
	WATER f
	configuredCodec i
	liquids h
	canReach (Lnet/minecraft/world/level/ChunkPos;DDIIF)Z a
	canReplaceBlock (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	carveEllipsoid (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/levelgen/Aquifer;DDDDDLnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker;)Z a
	configured (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Lnet/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver; a
	configuredCodec ()Lcom/mojang/serialization/Codec; c
	getCarveState (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;)Lnet/minecraft/world/level/block/state/BlockState; a
	getDebugState (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; b
	getRange ()I d
	isDebugEnabled (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Z b
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/util/RandomSource;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/carver/WorldCarver;)Lnet/minecraft/world/level/levelgen/carver/WorldCarver; a
net/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker dcu$a
net/minecraft/world/level/levelgen/feature/AbstractHugeMushroomFeature dcw
	getTreeHeight (Lnet/minecraft/util/RandomSource;)I a
	getTreeRadiusForHeight (IIII)I a
	isValidPosition (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)Z a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeTrunk (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;ILnet/minecraft/core/BlockPos$MutableBlockPos;)V a
net/minecraft/world/level/levelgen/feature/BambooFeature dcx
	BAMBOO_FINAL_LARGE b
	BAMBOO_TOP_LARGE c
	BAMBOO_TOP_SMALL d
	BAMBOO_TRUNK a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/BasaltColumnsFeature dcy
	CANNOT_PLACE_ON a
	CLUSTERED_REACH b
	CLUSTERED_SIZE c
	UNCLUSTERED_REACH d
	UNCLUSTERED_SIZE e
	canPlaceAt (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	findAir (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;I)Lnet/minecraft/core/BlockPos; a
	findSurface (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos$MutableBlockPos;I)Lnet/minecraft/core/BlockPos; a
	isAirOrLavaOcean (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeColumn (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos;II)Z a
net/minecraft/world/level/levelgen/feature/BasaltPillarFeature dcz
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeBaseHangOff (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)V a
	placeHangOff (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/levelgen/feature/BlockBlobFeature dda
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/BlockColumnFeature ddb
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	truncate ([IIIZ)V a
net/minecraft/world/level/levelgen/feature/BlockPileFeature ddc
	mayPlaceOn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	tryPlaceBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration;)V a
net/minecraft/world/level/levelgen/feature/BlueIceFeature ddd
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/BonusChestFeature dde
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/ChorusPlantFeature ddf
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/ConfiguredFeature ddg
	CODEC b
	DIRECT_CODEC a
	LIST_CODEC c
	config e
	feature d
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration; c
	feature ()Lnet/minecraft/world/level/levelgen/feature/Feature; b
	getFeatures ()Ljava/util/stream/Stream; a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/CoralClawFeature ddh
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralFeature ddi
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeCoralBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralMushroomFeature ddj
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralTreeFeature ddk
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/DeltaFeature ddl
	CANNOT_REPLACE a
	DIRECTIONS b
	RIM_SPAWN_CHANCE c
	isClear (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/DesertWellFeature ddm
	IS_SAND a
	sandSlab b
	sandstone c
	water d
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/DiskFeature ddn
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeColumn (Lnet/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;IILnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
net/minecraft/world/level/levelgen/feature/DripstoneClusterFeature ddo
	canBeAdjacentToWater (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	canPlacePool (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z b
	getChanceOfStalagmiteOrStalactite (IIIILnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)D a
	getDripstoneHeight (Lnet/minecraft/util/RandomSource;IIFILnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)I a
	isLava (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeColumn (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;IIFDIFLnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)V a
	randomBetweenBiased (Lnet/minecraft/util/RandomSource;FFFF)F a
	replaceBlocksWithDripstoneBlocks (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/Direction;)V a
net/minecraft/world/level/levelgen/feature/DripstoneUtils ddp
	buildBaseToTipColumn (Lnet/minecraft/core/Direction;IZLjava/util/function/Consumer;)V a
	createPointedDripstone (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)Lnet/minecraft/world/level/block/state/BlockState; a
	getDripstoneHeight (DDDD)D a
	growPointedDripstone (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;IZ)V a
	isCircleMostlyEmbeddedInStone (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;I)Z a
	isDripstoneBase (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	isDripstoneBaseOrLava (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isEmptyOrWater (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isEmptyOrWater (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	isEmptyOrWaterOrLava (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z b
	isEmptyOrWaterOrLava (Lnet/minecraft/world/level/block/state/BlockState;)Z e
	isNeitherEmptyNorWater (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	placeDripstoneBlockIfPossible (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/levelgen/feature/EndGatewayFeature ddq
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/EndIslandFeature ddr
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/EndPodiumFeature dds
	CORNER_ROUNDING d
	END_PODIUM_LOCATION e
	PODIUM_PILLAR_HEIGHT b
	PODIUM_RADIUS a
	RIM_RADIUS c
	active ao
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/Feature ddt
	BAMBOO U
	BASALT_COLUMNS Z
	BASALT_PILLAR ae
	BLOCK_COLUMN x
	BLOCK_PILE k
	BLUE_ICE E
	BONUS_CHEST ad
	CHORUS_PLANT m
	CORAL_CLAW R
	CORAL_MUSHROOM Q
	CORAL_TREE P
	DELTA_FEATURE aa
	DESERT_WELL p
	DISK H
	DRIPSTONE_CLUSTER ak
	END_GATEWAY M
	END_ISLAND L
	END_SPIKE K
	FILL_LAYER ac
	FLOWER h
	FOREST_ROCK G
	FOSSIL q
	FREEZE_TOP_LAYER v
	GEODE aj
	GLOWSTONE_BLOB u
	HUGE_BROWN_MUSHROOM s
	HUGE_FUNGUS V
	HUGE_RED_MUSHROOM r
	ICEBERG F
	ICE_SPIKE t
	KELP O
	LAKE I
	LARGE_DRIPSTONE al
	MONSTER_ROOM D
	MULTIFACE_GROWTH B
	NETHER_FOREST_VEGETATION W
	NO_BONEMEAL_FLOWER i
	NO_OP f
	ORE J
	POINTED_DRIPSTONE am
	RANDOM_BOOLEAN_SELECTOR ai
	RANDOM_PATCH j
	RANDOM_SELECTOR ag
	REPLACE_BLOBS ab
	REPLACE_SINGLE_BLOCK n
	ROOT_SYSTEM A
	SCATTERED_ORE af
	SCULK_PATCH an
	SEAGRASS N
	SEA_PICKLE S
	SIMPLE_BLOCK T
	SIMPLE_RANDOM_SELECTOR ah
	SPRING l
	TREE g
	TWISTING_VINES Y
	UNDERWATER_MAGMA C
	VEGETATION_PATCH y
	VINES w
	VOID_START_PLATFORM o
	WATERLOGGED_VEGETATION_PATCH z
	WEEPING_VINES X
	configuredCodec a
	checkNeighbors (Ljava/util/function/Function;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	configuredCodec ()Lcom/mojang/serialization/Codec; a
	isAdjacentToAir (Ljava/util/function/Function;Lnet/minecraft/core/BlockPos;)Z a
	isDirt (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	isGrassOrDirt (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
	isReplaceable (Lnet/minecraft/tags/TagKey;)Ljava/util/function/Predicate; a
	isStone (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	markAboveForPostProcessing (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)V a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/Feature;)Lnet/minecraft/world/level/levelgen/feature/Feature; a
	safeSetBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Predicate;)V a
	setBlock (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/levelgen/feature/FeatureCountTracker ddu
	LOGGER a
	data b
	chunkDecorated (Lnet/minecraft/server/level/ServerLevel;)V a
	clearCounts ()V a
	featurePlaced (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;Ljava/util/Optional;)V a
	logCounts ()V b
net/minecraft/world/level/levelgen/feature/FeatureCountTracker$FeatureData ddu$a
	feature a
	topFeature b
	feature ()Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	topFeature ()Ljava/util/Optional; b
net/minecraft/world/level/levelgen/feature/FeatureCountTracker$LevelData ddu$b
	chunksWithFeatures b
	featureData a
	chunksWithFeatures ()Lorg/apache/commons/lang3/mutable/MutableInt; b
	featureData ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; a
net/minecraft/world/level/levelgen/feature/FeaturePlaceContext ddv
	chunkGenerator c
	config f
	level b
	origin e
	random d
	topFeature a
	chunkGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; c
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration; f
	level ()Lnet/minecraft/world/level/WorldGenLevel; b
	origin ()Lnet/minecraft/core/BlockPos; e
	random ()Lnet/minecraft/util/RandomSource; d
	topFeature ()Ljava/util/Optional; a
net/minecraft/world/level/levelgen/feature/FillLayerFeature ddw
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/FossilFeature ddx
	countEmptyCorners (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)I a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/FossilFeatureConfiguration ddy
	CODEC a
	fossilProcessors d
	fossilStructures b
	maxEmptyCornersAllowed f
	overlayProcessors e
	overlayStructures c
net/minecraft/world/level/levelgen/feature/GeodeFeature ddz
	DIRECTIONS a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/GlowstoneFeature dea
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/HugeBrownMushroomFeature deb
	getTreeRadiusForHeight (IIII)I a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/HugeFungusConfiguration dec
	CODEC a
	decorState e
	hatState d
	planted f
	stemState c
	validBaseState b
net/minecraft/world/level/levelgen/feature/HugeFungusFeature ded
	HUGE_PROBABILITY a
	isReplaceable (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Z)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeHat (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos;IZ)V b
	placeHatBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos$MutableBlockPos;FFF)V a
	placeHatDropBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	placeStem (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos;IZ)V a
	tryPlaceWeepingVines (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/levelgen/feature/HugeRedMushroomFeature dee
	getTreeRadiusForHeight (IIII)I a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/IceSpikeFeature def
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/IcebergFeature deg
	belowIsAir (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	carve (IILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;ZDLnet/minecraft/core/BlockPos;II)V a
	generateCutOut (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;IILnet/minecraft/core/BlockPos;ZIDI)V a
	generateIcebergBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;IIIIIIZIDZLnet/minecraft/world/level/block/state/BlockState;)V a
	getEllipseC (III)I a
	heightDependentRadiusEllipse (III)I b
	heightDependentRadiusRound (Lnet/minecraft/util/RandomSource;III)I a
	heightDependentRadiusSteep (Lnet/minecraft/util/RandomSource;III)I b
	isIcebergState (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	removeFloatingSnowLayer (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setIcebergBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;IIZZLnet/minecraft/world/level/block/state/BlockState;)V a
	signedDistanceCircle (IILnet/minecraft/core/BlockPos;ILnet/minecraft/util/RandomSource;)D a
	signedDistanceEllipse (IILnet/minecraft/core/BlockPos;IID)D a
	smooth (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;IIZI)V a
net/minecraft/world/level/levelgen/feature/KelpFeature deh
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/LakeFeature dei
	AIR a
	canReplaceBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/LakeFeature$Configuration dei$a
	CODEC a
	barrier c
	fluid b
	barrier ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; b
	fluid ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; a
net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature dej
	makeDripstone (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/util/RandomSource;ILnet/minecraft/util/valueproviders/FloatProvider;Lnet/minecraft/util/valueproviders/FloatProvider;)Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$LargeDripstone; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeDebugMarkers (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/Column$Range;Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter;)V a
net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$LargeDripstone dej$a
	bluntness d
	pointingUp b
	radius c
	root a
	scale e
	getHeight ()I a
	getHeightAtRadius (F)I a
	getMaxY ()I c
	getMinY ()I b
	isSuitableForWind (Lnet/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration;)Z a
	moveBackUntilBaseIsInsideStoneAndShrinkRadiusIfNecessary (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter;)Z a
	placeBlocks (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter;)V a
net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter dej$b
	originY a
	windSpeed b
	noWind ()Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter; a
	offset (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/levelgen/feature/MonsterRoomFeature dek
	AIR c
	LOGGER a
	MOBS b
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	randomEntityId (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/EntityType; a
net/minecraft/world/level/levelgen/feature/MultifaceGrowthFeature del
	isAirOrWater (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeGrowthIfPossible (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/levelgen/feature/configurations/MultifaceGrowthConfiguration;Lnet/minecraft/util/RandomSource;Ljava/util/List;)Z a
net/minecraft/world/level/levelgen/feature/NetherForestVegetationFeature dem
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/NoOpFeature den
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/OreFeature deo
	canPlaceOre (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	doPlace (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration;DDDDDDIIIII)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	shouldSkipAirCheck (Lnet/minecraft/util/RandomSource;F)Z a
net/minecraft/world/level/levelgen/feature/PointedDripstoneFeature dep
	createPatchOfDripstoneBlocks (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration;)V a
	getTipDirection (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/RandomBooleanSelectorFeature deq
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/RandomPatchFeature der
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/RandomSelectorFeature des
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/ReplaceBlobsFeature det
	findTarget (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/core/BlockPos; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/ReplaceBlockFeature deu
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/RootSystemFeature dev
	isAllowedTreeSpace (Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeDirt (Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/util/RandomSource;)V a
	placeDirtAndTree (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos;)Z a
	placeRootedDirt (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/util/RandomSource;IILnet/minecraft/core/BlockPos$MutableBlockPos;)V a
	placeRoots (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;)V a
	spaceForTree (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/ScatteredOreFeature dew
	MAX_DIST_FROM_ORIGIN a
	getRandomPlacementInOneAxisRelativeToOrigin (Lnet/minecraft/util/RandomSource;I)I a
	offsetTargetPos (Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;I)V a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SculkPatchFeature dex
	canSpreadFrom (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SeaPickleFeature dey
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SeagrassFeature dez
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SimpleBlockFeature dfa
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SimpleRandomSelectorFeature dfb
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SnowAndFreezeFeature dfc
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SpikeFeature dfd
	NUMBER_OF_SPIKES a
	SPIKE_CACHE c
	SPIKE_DISTANCE b
	getSpikesForLevel (Lnet/minecraft/world/level/WorldGenLevel;)Ljava/util/List; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeSpike (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration;Lnet/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike;)V a
net/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike dfd$a
	CODEC a
	centerX b
	centerZ c
	guarded f
	height e
	radius d
	topBoundingBox g
	getCenterX ()I a
	getCenterZ ()I b
	getHeight ()I d
	getRadius ()I c
	getTopBoundingBox ()Lnet/minecraft/world/phys/AABB; f
	isCenterWithinChunk (Lnet/minecraft/core/BlockPos;)Z a
	isGuarded ()Z e
net/minecraft/world/level/levelgen/feature/SpikeFeature$SpikeCacheLoader dfd$b
	load (Ljava/lang/Long;)Ljava/util/List; a
net/minecraft/world/level/levelgen/feature/SpringFeature dfe
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/TreeFeature dff
	BLOCK_UPDATE_FLAGS a
	doPlace (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	getMaxFreeTreeHeight (Lnet/minecraft/world/level/LevelSimulatedReader;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	isAirOrLeaves (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z c
	isBlockWater (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z b
	isReplaceablePlant (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z f
	isVine (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z e
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	setBlock (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setBlockKnownShape (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	updateLeaves (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape; a
	validTreePos (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/levelgen/feature/TwistingVinesFeature dfg
	findFirstAirBlockAboveGround (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	isInvalidPlacementLocation (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeWeepingVinesColumn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos$MutableBlockPos;III)V a
net/minecraft/world/level/levelgen/feature/UnderwaterMagmaFeature dfh
	getFloorY (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration;)Ljava/util/OptionalInt; a
	isValidPlacement (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z b
	isWaterOrAir (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/VegetationPatchFeature dfi
	distributeVegetation (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/util/RandomSource;Ljava/util/Set;II)V a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeGround (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Ljava/util/function/Predicate;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos$MutableBlockPos;I)Z a
	placeGroundPatch (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;II)Ljava/util/Set; a
	placeVegetation (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/VinesFeature dfj
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature dfk
	PLATFORM_OFFSET a
	PLATFORM_ORIGIN_CHUNK b
	PLATFORM_RADIUS c
	PLATFORM_RADIUS_CHUNKS d
	checkerboardDistance (IIII)I a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/WaterloggedVegetationPatchFeature dfl
	isExposed (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Set;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	isExposedDirection (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/Direction;)Z a
	placeGroundPatch (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;II)Ljava/util/Set; a
	placeVegetation (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/WeepingVinesFeature dfm
	DIRECTIONS a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeRoofNetherWart (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)V a
	placeRoofWeepingVines (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)V b
	placeWeepingVinesColumn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos$MutableBlockPos;III)V a
net/minecraft/world/level/levelgen/feature/WeightedPlacedFeature dfn
	CODEC a
	chance c
	feature b
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration dfo
	CODEC a
	allowedPlacement d
	direction c
	layers b
	prioritizeTip e
	allowedPlacement ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; c
	direction ()Lnet/minecraft/core/Direction; b
	layer (Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;)Lnet/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration$Layer; a
	layers ()Ljava/util/List; a
	prioritizeTip ()Z d
	simple (Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;)Lnet/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration; b
net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration$Layer dfo$a
	CODEC a
	height b
	state c
	height ()Lnet/minecraft/util/valueproviders/IntProvider; a
	state ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; b
net/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration dfp
	CODEC a
	stateProvider b
net/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration dfq
	CODEC a
	state b
net/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration dfr
	CODEC a
	height c
	reach b
	height ()Lnet/minecraft/util/valueproviders/IntProvider; b
	reach ()Lnet/minecraft/util/valueproviders/IntProvider; a
net/minecraft/world/level/levelgen/feature/configurations/CountConfiguration dfs
	CODEC a
	count b
	count ()Lnet/minecraft/util/valueproviders/IntProvider; a
net/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration dft
	CODEC a
	contents b
	rim c
	rimSize e
	size d
	contents ()Lnet/minecraft/world/level/block/state/BlockState; a
	rim ()Lnet/minecraft/world/level/block/state/BlockState; b
	rimSize ()Lnet/minecraft/util/valueproviders/IntProvider; d
	size ()Lnet/minecraft/util/valueproviders/IntProvider; c
net/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration dfu
	CODEC a
	halfHeight e
	radius d
	stateProvider b
	target c
	halfHeight ()I d
	radius ()Lnet/minecraft/util/valueproviders/IntProvider; c
	stateProvider ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider; a
	target ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
net/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration dfv
	CODEC a
	chanceOfDripstoneColumnAtMaxDistanceFromCenter j
	density h
	dripstoneBlockLayerThickness g
	floorToCeilingSearchRange b
	height c
	heightDeviation f
	maxDistanceFromCenterAffectingHeightBias l
	maxDistanceFromEdgeAffectingChanceOfDripstoneColumn k
	maxStalagmiteStalactiteHeightDiff e
	radius d
	wetness i
net/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration dfw
	CODEC a
	exact c
	exit b
	delayedExitSearch ()Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration; a
	getExit ()Ljava/util/Optional; b
	isExitExact ()Z c
	knownExit (Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration; a
net/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration dfx
	NONE m
	getFeatures ()Ljava/util/stream/Stream; e
net/minecraft/world/level/levelgen/feature/configurations/GeodeConfiguration dfy
	CHANCE_RANGE a
	CODEC b
	distributionPoints j
	geodeBlockSettings c
	geodeCrackSettings e
	geodeLayerSettings d
	invalidBlocksThreshold p
	maxGenOffset n
	minGenOffset l
	noiseMultiplier o
	outerWallDistance i
	placementsRequireLayer0Alternate h
	pointOffset k
	useAlternateLayer0Chance g
	usePotentialPlacementsChance f
net/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration dfz
	CODEC a
	capProvider b
	foliageRadius d
	stemProvider c
net/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration dga
	CODEC a
	columnRadius c
	floorToCeilingSearchRange b
	heightScale d
	maxColumnRadiusToCaveHeightRatio e
	minBluntnessForWind j
	minRadiusForWind i
	stalactiteBluntness f
	stalagmiteBluntness g
	windSpeed h
net/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration dgb
	CODEC a
	height b
	state c
net/minecraft/world/level/levelgen/feature/configurations/MultifaceGrowthConfiguration dgc
	CODEC a
	canBePlacedOn h
	canPlaceOnCeiling e
	canPlaceOnFloor d
	canPlaceOnWall f
	chanceOfSpreading g
	placeBlock b
	searchRange c
	validDirections i
	apply (Lnet/minecraft/world/level/block/Block;)Lcom/mojang/serialization/DataResult; a
	getShuffledDirections (Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getShuffledDirectionsExcept (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/Direction;)Ljava/util/List; a
net/minecraft/world/level/levelgen/feature/configurations/NetherForestVegetationConfig dgd
	CODEC c
	spreadHeight e
	spreadWidth d
net/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration dge
	CODEC a
	INSTANCE b
net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration dgf
	CODEC a
	discardChanceOnAirExposure d
	size c
	targetStates b
	target (Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTest;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState; a
net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState dgf$a
	CODEC a
	state c
	target b
net/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration dgg
	CODEC a
	chanceOfDirectionalSpread c
	chanceOfSpreadRadius2 d
	chanceOfSpreadRadius3 e
	chanceOfTallerDripstone b
net/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration dgh
	CODEC k
	probability l
net/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration dgi
	CODEC a
	featureFalse c
	featureTrue b
	getFeatures ()Ljava/util/stream/Stream; e
net/minecraft/world/level/levelgen/feature/configurations/RandomFeatureConfiguration dgj
	CODEC a
	defaultFeature c
	features b
	getFeatures ()Ljava/util/stream/Stream; e
net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration dgk
	CODEC a
	feature e
	tries b
	xzSpread c
	ySpread d
	feature ()Lnet/minecraft/core/Holder; d
	tries ()I a
	xzSpread ()I b
	ySpread ()I c
net/minecraft/world/level/levelgen/feature/configurations/ReplaceBlockConfiguration dgl
	CODEC a
	targetStates b
net/minecraft/world/level/levelgen/feature/configurations/ReplaceSphereConfiguration dgm
	CODEC a
	radius d
	replaceState c
	targetState b
	radius ()Lnet/minecraft/util/valueproviders/IntProvider; a
net/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration dgn
	CODEC a
	allowedTreePosition o
	allowedVerticalWaterForTree n
	hangingRootPlacementAttempts l
	hangingRootRadius i
	hangingRootStateProvider k
	hangingRootsVerticalSpan j
	requiredVerticalSpaceForTree c
	rootColumnMaxHeight h
	rootPlacementAttempts g
	rootRadius d
	rootReplaceable e
	rootStateProvider f
	treeFeature b
net/minecraft/world/level/levelgen/feature/configurations/SculkPatchConfiguration dgo
	CODEC a
	amountPerCharge c
	catalystChance h
	chargeCount b
	extraRareGrowths g
	growthRounds e
	spreadAttempts d
	spreadRounds f
	amountPerCharge ()I b
	catalystChance ()F h
	chargeCount ()I a
	extraRareGrowths ()Lnet/minecraft/util/valueproviders/IntProvider; g
	growthRounds ()I d
	spreadAttempts ()I c
	spreadRounds ()I f
net/minecraft/world/level/levelgen/feature/configurations/SimpleBlockConfiguration dgp
	CODEC a
	toPlace b
	toPlace ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; a
net/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration dgq
	CODEC a
	features b
	getFeatures ()Ljava/util/stream/Stream; e
net/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration dgr
	CODEC a
	crystalBeamTarget d
	crystalInvulnerable b
	spikes c
	getCrystalBeamTarget ()Lnet/minecraft/core/BlockPos; c
	getSpikes ()Ljava/util/List; b
	isCrystalInvulnerable ()Z a
net/minecraft/world/level/levelgen/feature/configurations/SpringConfiguration dgs
	CODEC a
	holeCount e
	requiresBlockBelow c
	rockCount d
	state b
	validBlocks f
net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration dgt
	CODEC a
	decorators i
	dirtProvider c
	foliagePlacer f
	foliageProvider e
	forceDirt k
	ignoreVines j
	minimumSize h
	rootPlacer g
	trunkPlacer d
	trunkProvider b
net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder dgt$a
	decorators h
	dirtProvider f
	foliagePlacer d
	foliageProvider b
	forceDirt j
	ignoreVines i
	minimumSize g
	rootPlacer e
	trunkPlacer c
	trunkProvider a
	build ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration; c
	decorators (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	dirt (Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	forceDirt ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; b
	ignoreVines ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
net/minecraft/world/level/levelgen/feature/configurations/TwistingVinesConfig dgu
	CODEC a
	maxHeight d
	spreadHeight c
	spreadWidth b
	maxHeight ()I c
	spreadHeight ()I b
	spreadWidth ()I a
net/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration dgv
	CODEC a
	floorSearchRange b
	placementProbabilityPerValidPosition d
	placementRadiusAroundFloor c
net/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration dgw
	CODEC a
	depth f
	extraBottomBlockChance g
	extraEdgeColumnChance k
	groundState c
	replaceable b
	surface e
	vegetationChance i
	vegetationFeature d
	verticalRange h
	xzRadius j
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize dgy
	CODEC a
	MAX_WIDTH b
	minClippedHeight c
	getSizeAtHeight (II)I a
	minClippedHeight ()Ljava/util/OptionalInt; c
	minClippedHeightCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType dgz
	THREE_LAYERS_FEATURE_SIZE b
	TWO_LAYERS_FEATURE_SIZE a
	codec c
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; a
net/minecraft/world/level/levelgen/feature/featuresize/ThreeLayersFeatureSize dha
	CODEC d
	limit e
	lowerSize g
	middleSize h
	upperLimit f
	upperSize i
	getSizeAtHeight (II)I a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize dhb
	CODEC d
	limit e
	lowerSize f
	upperSize g
	getSizeAtHeight (II)I a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/foliageplacers/AcaciaFoliagePlacer dhd
	CODEC a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/BlobFoliagePlacer dhe
	CODEC a
	height b
	blobParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/BushFoliagePlacer dhf
	CODEC c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/DarkOakFoliagePlacer dhg
	CODEC a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	shouldSkipLocationSigned (Lnet/minecraft/util/RandomSource;IIIIZ)Z b
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FancyFoliagePlacer dhh
	CODEC c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer dhi
	CODEC d
	offset f
	radius e
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;II)V a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	foliagePlacerParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P2; b
	foliageRadius (Lnet/minecraft/util/RandomSource;I)I a
	offset (Lnet/minecraft/util/RandomSource;)I a
	placeLeavesRow (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;IIZ)V a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	shouldSkipLocationSigned (Lnet/minecraft/util/RandomSource;IIIIZ)Z b
	tryPlaceLeaf (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment dhi$a
	doubleTrunk c
	pos a
	radiusOffset b
	doubleTrunk ()Z c
	pos ()Lnet/minecraft/core/BlockPos; a
	radiusOffset ()I b
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType dhj
	ACACIA_FOLIAGE_PLACER d
	BLOB_FOLIAGE_PLACER a
	BUSH_FOLIAGE_PLACER e
	DARK_OAK_FOLIAGE_PLACER i
	FANCY_FOLIAGE_PLACER f
	MEGA_JUNGLE_FOLIAGE_PLACER g
	MEGA_PINE_FOLIAGE_PLACER h
	PINE_FOLIAGE_PLACER c
	RANDOM_SPREAD_FOLIAGE_PLACER j
	SPRUCE_FOLIAGE_PLACER b
	codec k
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/MegaJungleFoliagePlacer dhk
	CODEC a
	height b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/MegaPineFoliagePlacer dhl
	CODEC a
	crownHeight b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/PineFoliagePlacer dhm
	CODEC a
	height b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	foliageRadius (Lnet/minecraft/util/RandomSource;I)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/RandomSpreadFoliagePlacer dhn
	CODEC a
	foliageHeight b
	leafPlacementAttempts c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/SpruceFoliagePlacer dho
	CODEC a
	trunkHeight b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/rootplacers/AboveRootPlacement dhr
	CODEC a
	aboveRootPlacementChance c
	aboveRootProvider b
	aboveRootPlacementChance ()F b
	aboveRootProvider ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; a
net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacement dhs
	CODEC a
	canGrowThrough b
	maxRootLength f
	maxRootWidth e
	muddyRootsIn c
	muddyRootsProvider d
	randomSkewChance g
	canGrowThrough ()Lnet/minecraft/core/HolderSet; a
	maxRootLength ()I e
	maxRootWidth ()I d
	muddyRootsIn ()Lnet/minecraft/core/HolderSet; b
	muddyRootsProvider ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; c
	randomSkewChance ()F f
net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacer dht
	CODEC c
	ROOT_LENGTH_LIMIT b
	ROOT_WIDTH_LIMIT a
	mangroveRootPlacement h
	canPlaceRoot (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
	placeRoot (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	placeRoots (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	potentialRootPositions (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/List; a
	simulateRoots (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Ljava/util/List;I)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType; a
net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacer dhu
	CODEC d
	aboveRootPlacement g
	rootProvider f
	trunkOffsetY e
	canPlaceRoot (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
	getPotentiallyWaterloggedState (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTrunkOrigin (Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/BlockPos; a
	placeRoot (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	placeRoots (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	rootPlacerParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; a
	type ()Lnet/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType; a
net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType dhv
	MANGROVE_ROOT_PLACER a
	codec b
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType; a
net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider dhw
	CODEC a
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	simple (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider; a
	simple (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType dhx
	DUAL_NOISE_PROVIDER e
	NOISE_PROVIDER d
	NOISE_THRESHOLD_PROVIDER c
	RANDOMIZED_INT_STATE_PROVIDER g
	ROTATED_BLOCK_PROVIDER f
	SIMPLE_STATE_PROVIDER a
	WEIGHTED_STATE_PROVIDER b
	codec h
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/DualNoiseProvider dhy
	CODEC b
	slowNoise l
	slowNoiseParameters j
	slowScale k
	variety i
	getSlowNoiseValue (Lnet/minecraft/core/BlockPos;)D a
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/NoiseBasedStateProvider dhz
	noise f
	parameters d
	scale e
	seed c
	getNoiseValue (Lnet/minecraft/core/BlockPos;D)D a
	noiseCodec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; a
net/minecraft/world/level/levelgen/feature/stateproviders/NoiseProvider dia
	CODEC g
	states h
	getRandomState (Ljava/util/List;D)Lnet/minecraft/world/level/block/state/BlockState; a
	getRandomState (Ljava/util/List;Lnet/minecraft/core/BlockPos;D)Lnet/minecraft/world/level/block/state/BlockState; a
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	noiseProviderCodec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P4; b
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/NoiseThresholdProvider dib
	CODEC b
	defaultState i
	highChance h
	highStates k
	lowStates j
	threshold g
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/RandomizedIntStateProvider dic
	CODEC b
	property e
	propertyName d
	source c
	values f
	findProperty (Lnet/minecraft/world/level/block/state/BlockState;Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/IntegerProperty; a
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/RotatedBlockProvider did
	CODEC b
	block c
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider die
	CODEC a
	fallback b
	rules c
	fallback ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; a
	getState (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	rules ()Ljava/util/List; b
	simple (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider; a
	simple (Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider; a
net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider$Rule die$a
	CODEC a
	ifTrue b
	then c
	ifTrue ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	then ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; b
net/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider dif
	CODEC b
	state c
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/WeightedStateProvider dig
	CODEC b
	weightedList c
	create (Lnet/minecraft/util/random/SimpleWeightedRandomList;)Lcom/mojang/serialization/DataResult; a
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/treedecorators/AlterGroundDecorator dii
	CODEC a
	provider b
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	placeBlockAt (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;Lnet/minecraft/core/BlockPos;)V b
	placeCircle (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;Lnet/minecraft/core/BlockPos;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/AttachedToLeavesDecorator dij
	CODEC a
	blockProvider e
	directions g
	exclusionRadiusXZ c
	exclusionRadiusY d
	probability b
	requiredEmptyBlocks f
	hasRequiredEmptyBlocks (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/BeehiveDecorator dik
	CODEC a
	SPAWN_DIRECTIONS c
	WORLDGEN_FACING b
	probability d
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/CocoaDecorator dil
	CODEC a
	probability b
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/LeaveVineDecorator dim
	CODEC a
	probability b
	addHangingVine (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator din
	CODEC h
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context din$a
	decorationSetter b
	leaves e
	level a
	logs d
	random c
	roots f
	isAir (Lnet/minecraft/core/BlockPos;)Z a
	leaves ()Lit/unimi/dsi/fastutil/objects/ObjectArrayList; d
	level ()Lnet/minecraft/world/level/LevelSimulatedReader; a
	logs ()Lit/unimi/dsi/fastutil/objects/ObjectArrayList; c
	placeVine (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;)V a
	random ()Lnet/minecraft/util/RandomSource; b
	roots ()Lit/unimi/dsi/fastutil/objects/ObjectArrayList; e
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType dio
	ALTER_GROUND e
	ATTACHED_TO_LEAVES f
	BEEHIVE d
	COCOA c
	LEAVE_VINE b
	TRUNK_VINE a
	codec g
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TrunkVineDecorator dip
	CODEC a
	INSTANCE b
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/BendingTrunkPlacer dir
	CODEC a
	bendLength h
	minHeightForLeaves b
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/DarkOakTrunkPlacer dis
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer dit
	BRANCH_LENGTH_MAGIC j
	BRANCH_SLOPE i
	CLUSTER_DENSITY_MAGIC h
	CODEC a
	TRUNK_HEIGHT_SCALE b
	getLogAxis (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction$Axis; a
	getSteps (Lnet/minecraft/core/BlockPos;)I a
	makeBranches (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	makeLimb (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	treeShape (II)F b
	trimBranches (II)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer$FoliageCoords dit$a
	attachment a
	branchBase b
	getBranchBase ()I a
net/minecraft/world/level/levelgen/feature/trunkplacers/ForkingTrunkPlacer diu
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/GiantTrunkPlacer div
	CODEC a
	placeLogIfFreeWithOffset (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;III)V a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/MegaJungleTrunkPlacer diw
	CODEC b
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/StraightTrunkPlacer dix
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer diy
	CODEC c
	MAX_BASE_HEIGHT a
	MAX_HEIGHT d
	MAX_RAND b
	baseHeight e
	heightRandA f
	heightRandB g
	getTreeHeight (Lnet/minecraft/util/RandomSource;)I a
	isDirt (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z c
	isFree (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z b
	placeLog (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z b
	placeLog (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Ljava/util/function/Function;)Z a
	placeLogIfFree (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	setDirtAt (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	trunkPlacerParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
	validTreePos (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType diz
	BENDING_TRUNK_PLACER g
	DARK_OAK_TRUNK_PLACER e
	FANCY_TRUNK_PLACER f
	FORKING_TRUNK_PLACER b
	GIANT_TRUNK_PLACER c
	MEGA_JUNGLE_TRUNK_PLACER d
	STRAIGHT_TRUNK_PLACER a
	UPWARDS_BRANCHING_TRUNK_PLACER h
	codec i
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/UpwardsBranchingTrunkPlacer dja
	CODEC a
	canGrowThrough j
	extraBranchLength i
	extraBranchSteps b
	placeBranchPerLogProbability h
	placeBranch (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Ljava/util/List;Lnet/minecraft/core/BlockPos$MutableBlockPos;ILnet/minecraft/core/Direction;II)V a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
	validTreePos (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/flat/FlatLayerInfo djc
	CODEC a
	block b
	height c
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getHeight ()I a
net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPreset djd
	CODEC b
	DIRECT_CODEC a
	displayItem c
	settings d
	displayItem ()Lnet/minecraft/core/Holder; a
	settings ()Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; b
net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets dje
	BOTTOMLESS_PIT f
	CLASSIC_FLAT a
	DESERT g
	OVERWORLD d
	REDSTONE_READY h
	SNOWY_KINGDOM e
	THE_VOID i
	TUNNELERS_DREAM b
	WATER_WORLD c
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/core/Holder; a
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets$Bootstrap dje$a
	biomes b
	presets a
	structureSets c
	register (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/resources/ResourceKey;Ljava/util/Set;ZZ[Lnet/minecraft/world/level/levelgen/flat/FlatLayerInfo;)Lnet/minecraft/core/Holder; a
	run ()Lnet/minecraft/core/Holder; a
net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings djf
	CODEC a
	LOGGER b
	addLakes j
	biome f
	biomes c
	decoration i
	layers g
	layersInfo e
	structureOverrides d
	voidGen h
	adjustGenerationSettings (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings; a
	getBiome ()Lnet/minecraft/core/Holder; d
	getDefault (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
	getLayers ()Ljava/util/List; f
	getLayersInfo ()Ljava/util/List; e
	setAddLakes ()V b
	setBiome (Lnet/minecraft/core/Holder;)V b
	setDecoration ()V a
	structureOverrides ()Ljava/util/Optional; c
	updateLayers ()V g
	validateHeight (Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Lcom/mojang/serialization/DataResult; a
	withLayers (Ljava/util/List;Ljava/util/Optional;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
net/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight djh
	CODEC a
	LOGGER b
	inner f
	maxInclusive e
	minInclusive d
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/ConstantHeight dji
	CODEC b
	ZERO a
	value d
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	getValue ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; b
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/ConstantHeight; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/HeightProvider djj
	CODEC c
	CONSTANT_OR_DISPATCH_CODEC a
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/HeightProviderType djk
	BIASED_TO_BOTTOM c
	CONSTANT a
	TRAPEZOID e
	UNIFORM b
	VERY_BIASED_TO_BOTTOM d
	WEIGHTED_LIST f
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
net/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight djl
	CODEC a
	LOGGER b
	maxInclusive e
	minInclusive d
	plateau f
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/UniformHeight djm
	CODEC a
	LOGGER b
	maxInclusive e
	minInclusive d
	warnedFor f
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/UniformHeight; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight djn
	CODEC a
	LOGGER b
	inner f
	maxInclusive e
	minInclusive d
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/WeightedListHeight djo
	CODEC a
	distribution b
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/material/MaterialRuleList djq
	materialRuleList a
	materialRuleList ()Ljava/util/List; a
net/minecraft/world/level/levelgen/material/WorldGenMaterialRule djr
	apply (Lnet/minecraft/world/level/levelgen/NoiseChunk;III)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/placement/BiomeFilter dju
	CODEC a
	INSTANCE c
	biome ()Lnet/minecraft/world/level/levelgen/placement/BiomeFilter; a
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/BlockPredicateFilter djv
	CODEC a
	predicate c
	forPredicate (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/placement/BlockPredicateFilter; a
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/CarvingMaskPlacement djw
	CODEC a
	step c
	forStep (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/levelgen/placement/CarvingMaskPlacement; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/CaveSurface djx
	$VALUES g
	CEILING a
	CODEC c
	FLOOR b
	direction d
	id f
	y e
	$values ()[Lnet/minecraft/world/level/levelgen/placement/CaveSurface; d
	getDirection ()Lnet/minecraft/core/Direction; a
	getSerializedName ()Ljava/lang/String; c
	getY ()I b
net/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement djy
	CODEC a
	count c
	findOnGroundYPosition (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;IIII)I a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	isEmpty (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	of (I)Lnet/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement; a
	of (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/CountPlacement djz
	CODEC a
	count c
	count (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)I a
	of (I)Lnet/minecraft/world/level/levelgen/placement/CountPlacement; a
	of (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/CountPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement dka
	CODEC a
	allowedSearchCondition e
	directionOfSearch c
	maxSteps f
	targetCondition d
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	scanningFor (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;I)Lnet/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement; a
	scanningFor (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;I)Lnet/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/HeightRangePlacement dkb
	CODEC a
	height c
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	of (Lnet/minecraft/world/level/levelgen/heightproviders/HeightProvider;)Lnet/minecraft/world/level/levelgen/placement/HeightRangePlacement; a
	triangle (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/placement/HeightRangePlacement; b
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
	uniform (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/placement/HeightRangePlacement; a
net/minecraft/world/level/levelgen/placement/HeightmapPlacement dkc
	CODEC a
	heightmap c
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	onHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/placement/HeightmapPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/InSquarePlacement dkd
	CODEC a
	INSTANCE c
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	spread ()Lnet/minecraft/world/level/levelgen/placement/InSquarePlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement dke
	CODEC a
	noiseFactor d
	noiseOffset e
	noiseToCountRatio c
	count (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)I a
	of (IDD)Lnet/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement dkf
	CODEC a
	aboveNoise e
	belowNoise d
	noiseLevel c
	count (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)I a
	of (DII)Lnet/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/PlacedFeature dkg
	CODEC b
	DIRECT_CODEC a
	LIST_CODEC c
	LIST_OF_LISTS_CODEC d
	feature e
	placement f
	feature ()Lnet/minecraft/core/Holder; b
	getFeatures ()Ljava/util/stream/Stream; a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	placeWithBiomeCheck (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z b
	placeWithContext (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	placement ()Ljava/util/List; c
net/minecraft/world/level/levelgen/placement/PlacedFeature$test dkg$a
net/minecraft/world/level/levelgen/placement/PlacementContext dkh
	generator b
	level a
	topFeature c
	generator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; f
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getCarvingMask (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/chunk/CarvingMask; a
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevel ()Lnet/minecraft/world/level/WorldGenLevel; d
	getMinBuildHeight ()I c
	topFeature ()Ljava/util/Optional; e
net/minecraft/world/level/levelgen/placement/PlacementFilter dki
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/placement/PlacementModifier dkj
	CODEC b
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/PlacementModifierType dkk
	BIOME_FILTER e
	BLOCK_PREDICATE_FILTER a
	CARVING_MASK_PLACEMENT o
	COUNT f
	COUNT_ON_EVERY_LAYER i
	ENVIRONMENT_SCAN j
	HEIGHTMAP k
	HEIGHT_RANGE l
	IN_SQUARE m
	NOISE_BASED_COUNT g
	NOISE_THRESHOLD_COUNT h
	RANDOM_OFFSET n
	RARITY_FILTER b
	SURFACE_RELATIVE_THRESHOLD_FILTER c
	SURFACE_WATER_DEPTH_FILTER d
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; a
net/minecraft/world/level/levelgen/placement/RandomOffsetPlacement dkl
	CODEC a
	xzSpread c
	ySpread d
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	horizontal (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/RandomOffsetPlacement; b
	of (Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/RandomOffsetPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
	vertical (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/RandomOffsetPlacement; a
net/minecraft/world/level/levelgen/placement/RarityFilter dkm
	CODEC a
	chance c
	onAverageOnceEvery (I)Lnet/minecraft/world/level/levelgen/placement/RarityFilter; a
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/RepeatingPlacement dkn
	count (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)I a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
net/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter dko
	CODEC a
	heightmap c
	maxInclusive e
	minInclusive d
	of (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)Lnet/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter; a
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter dkp
	CODEC a
	maxWaterDepth c
	forMaxDepth (I)Lnet/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter; a
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/presets/WorldPreset dkr
	CODEC b
	DIRECT_CODEC a
	dimensions c
	createRegistry ()Lnet/minecraft/core/Registry; c
	createWorldGenSettings (JZZ)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	overworld ()Ljava/util/Optional; a
	overworldOrThrow ()Lnet/minecraft/world/level/dimension/LevelStem; b
	recreateWorldGenSettings (Lnet/minecraft/world/level/levelgen/WorldGenSettings;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	requireOverworld (Lnet/minecraft/world/level/levelgen/presets/WorldPreset;)Lcom/mojang/serialization/DataResult; a
net/minecraft/world/level/levelgen/presets/WorldPresets dks
	AMPLIFIED d
	DEBUG f
	FLAT b
	LARGE_BIOMES c
	NORMAL a
	SINGLE_BIOME_SURFACE e
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/core/Holder; a
	createNormalWorldFromPreset (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	createNormalWorldFromPreset (Lnet/minecraft/core/RegistryAccess;J)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	createNormalWorldFromPreset (Lnet/minecraft/core/RegistryAccess;JZZ)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	demoSettings (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; b
	fromSettings (Lnet/minecraft/world/level/levelgen/WorldGenSettings;)Ljava/util/Optional; a
	getNormalOverworld (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/level/dimension/LevelStem; c
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/levelgen/presets/WorldPresets$Bootstrap dks$a
	biomes c
	dimensionTypes b
	endDimensionType k
	endNoiseSettings l
	endStem m
	netherDimensionType h
	netherNoiseSettings i
	netherStem j
	noiseSettings e
	noises f
	overworldDimensionType g
	presets a
	structureSets d
	createPresetWithCustomOverworld (Lnet/minecraft/world/level/dimension/LevelStem;)Lnet/minecraft/world/level/levelgen/presets/WorldPreset; a
	makeNoiseBasedOverworld (Lnet/minecraft/world/level/biome/BiomeSource;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/dimension/LevelStem; a
	makeOverworld (Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/world/level/dimension/LevelStem; a
	registerCustomOverworldPreset (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/dimension/LevelStem;)Lnet/minecraft/core/Holder; a
	run ()Lnet/minecraft/core/Holder; a
net/minecraft/world/level/levelgen/structure/BoundingBox dkt
	CODEC a
	LOGGER b
	maxX f
	maxY g
	maxZ h
	minX c
	minY d
	minZ e
	encapsulate (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	encapsulate (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	encapsulatingBoxes (Ljava/lang/Iterable;)Ljava/util/Optional; b
	encapsulatingPositions (Ljava/lang/Iterable;)Ljava/util/Optional; a
	forAllCorners (Ljava/util/function/Consumer;)V a
	fromCorners (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getCenter ()Lnet/minecraft/core/BlockPos; f
	getLength ()Lnet/minecraft/core/Vec3i; b
	getXSpan ()I c
	getYSpan ()I d
	getZSpan ()I e
	infinite ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	inflatedBy (I)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	intersects (IIII)Z a
	intersects (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	isInside (Lnet/minecraft/core/Vec3i;)Z b
	maxX ()I j
	maxY ()I k
	maxZ ()I l
	minX ()I g
	minY ()I h
	minZ ()I i
	move (III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	move (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	moved (III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	orientBox (IIIIIIIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
net/minecraft/world/level/levelgen/structure/BuiltinStructureSets dku
	ANCIENT_CITIES q
	BURIED_TREASURES i
	DESERT_PYRAMIDS b
	END_CITIES p
	IGLOOS c
	JUNGLE_TEMPLES d
	MINESHAFTS j
	NETHER_COMPLEXES n
	NETHER_FOSSILS o
	OCEAN_MONUMENTS g
	OCEAN_RUINS m
	PILLAGER_OUTPOSTS f
	RUINED_PORTALS k
	SHIPWRECKS l
	STRONGHOLDS r
	SWAMP_HUTS e
	VILLAGES a
	WOODLAND_MANSIONS h
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/levelgen/structure/BuiltinStructures dkv
	ANCIENT_CITY F
	BASTION_REMNANT s
	BURIED_TREASURE r
	DESERT_PYRAMID f
	END_CITY q
	FORTRESS o
	IGLOO g
	JUNGLE_TEMPLE e
	MINESHAFT b
	MINESHAFT_MESA c
	NETHER_FOSSIL p
	OCEAN_MONUMENT l
	OCEAN_RUIN_COLD m
	OCEAN_RUIN_WARM n
	PILLAGER_OUTPOST a
	RUINED_PORTAL_DESERT z
	RUINED_PORTAL_JUNGLE A
	RUINED_PORTAL_MOUNTAIN C
	RUINED_PORTAL_NETHER E
	RUINED_PORTAL_OCEAN D
	RUINED_PORTAL_STANDARD y
	RUINED_PORTAL_SWAMP B
	SHIPWRECK h
	SHIPWRECK_BEACHED i
	STRONGHOLD k
	SWAMP_HUT j
	VILLAGE_DESERT u
	VILLAGE_PLAINS t
	VILLAGE_SAVANNA v
	VILLAGE_SNOWY w
	VILLAGE_TAIGA x
	WOODLAND_MANSION d
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler dkw
	CURRENT_TO_LEGACY_MAP a
	LEGACY_TO_CURRENT_MAP b
	OLD_STRUCTURE_REGISTRY_KEYS c
	currentKeys h
	dataMap e
	hasLegacyData d
	indexMap f
	legacyKeys g
	getLegacyStructureHandler (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/storage/DimensionDataStorage;)Lnet/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler; a
	hasLegacyStart (IILjava/lang/String;)Z a
	isUnhandledStructureStart (II)Z a
	populateCaches (Lnet/minecraft/world/level/storage/DimensionDataStorage;)V a
	removeIndex (J)V a
	updateFromLegacy (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	updateStructureStart (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/levelgen/structure/PoolElementStructurePiece dkx
	LOGGER d
	element a
	groundLevelDelta h
	junctions i
	position b
	rotation c
	structureTemplateManager j
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addJunction (Lnet/minecraft/world/level/levelgen/structure/pools/JigsawJunction;)V a
	getElement ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElement; b
	getGroundLevelDelta ()I d
	getJunctions ()Ljava/util/List; e
	getPosition ()Lnet/minecraft/core/BlockPos; c
	getRotation ()Lnet/minecraft/world/level/block/Rotation; a
	move (III)V a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/BlockPos;Z)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/PostPlacementProcessor dky
	NONE a
net/minecraft/world/level/levelgen/structure/ScatteredFeaturePiece dkz
	depth c
	height b
	heightPosition d
	width a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	updateAverageGroundHeight (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;I)Z a
	updateHeightPositionToLowestGroundHeight (Lnet/minecraft/world/level/LevelAccessor;I)Z a
net/minecraft/world/level/levelgen/structure/SinglePieceStructure dla
	constructor d
	depth f
	width e
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
net/minecraft/world/level/levelgen/structure/SinglePieceStructure$PieceConstructor dla$a
net/minecraft/world/level/levelgen/structure/Structure dlb
	CODEC b
	DIRECT_CODEC a
	settings c
	adjustBoundingBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	afterPlace (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)V a
	biomes ()Lnet/minecraft/core/HolderSet; a
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generate (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;JLnet/minecraft/world/level/ChunkPos;ILnet/minecraft/world/level/LevelHeightAccessor;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getCornerHeights (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;IIII)[I b
	getLowestY (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;II)I a
	getLowestY (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;IIII)I a
	getLowestYIn5by5BoxOffset7Blocks (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	isValidBiome (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationStub;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/RandomState;Ljava/util/function/Predicate;)Z a
	onTopOfChunkCenter (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;Lnet/minecraft/world/level/levelgen/Heightmap$Types;Ljava/util/function/Consumer;)Ljava/util/Optional; a
	settingsCodec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; a
	simpleCodec (Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	spawnOverrides ()Ljava/util/Map; b
	step ()Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration; c
	terrainAdaptation ()Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment; d
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/Structure$GenerationContext dlb$a
	biomeSource c
	chunkGenerator b
	chunkPos h
	heightAccessor i
	random f
	randomState d
	registryAccess a
	seed g
	structureTemplateManager e
	validBiome j
	biomeSource ()Lnet/minecraft/world/level/biome/BiomeSource; c
	chunkGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; b
	chunkPos ()Lnet/minecraft/world/level/ChunkPos; h
	heightAccessor ()Lnet/minecraft/world/level/LevelHeightAccessor; i
	makeRandom (JLnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/levelgen/WorldgenRandom; a
	random ()Lnet/minecraft/world/level/levelgen/WorldgenRandom; f
	randomState ()Lnet/minecraft/world/level/levelgen/RandomState; d
	registryAccess ()Lnet/minecraft/core/RegistryAccess; a
	seed ()J g
	structureTemplateManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; e
	validBiome ()Ljava/util/function/Predicate; j
net/minecraft/world/level/levelgen/structure/Structure$GenerationStub dlb$b
	generator b
	position a
	generator ()Lcom/mojang/datafixers/util/Either; c
	getPiecesBuilder ()Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder; a
	position ()Lnet/minecraft/core/BlockPos; b
net/minecraft/world/level/levelgen/structure/Structure$StructureSettings dlb$c
	CODEC a
	biomes b
	spawnOverrides c
	step d
	terrainAdaptation e
	biomes ()Lnet/minecraft/core/HolderSet; a
	spawnOverrides ()Ljava/util/Map; b
	step ()Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration; c
	terrainAdaptation ()Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment; d
net/minecraft/world/level/levelgen/structure/StructureCheck dlc
	LOGGER a
	NO_STRUCTURE b
	biomeSource l
	biomes e
	chunkGenerator i
	dimension h
	featureChecks p
	fixerUpper n
	heightAccessor k
	loadedChunks o
	randomState j
	registryAccess d
	seed m
	storageAccess c
	structureConfigs f
	structureTemplateManager g
	canCreateStructure (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/Structure;)Z b
	checkStart (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/Structure;Z)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; a
	checkStructureInfo (Lit/unimi/dsi/fastutil/objects/Object2IntMap;Lnet/minecraft/world/level/levelgen/structure/Structure;Z)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; a
	deduplicateEmptyMap (Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; a
	incrementReference (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/Structure;)V a
	loadStructures (Lnet/minecraft/nbt/CompoundTag;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; a
	onStructureLoad (Lnet/minecraft/world/level/ChunkPos;Ljava/util/Map;)V a
	storeFullResults (JLit/unimi/dsi/fastutil/objects/Object2IntMap;)V a
	tryLoadFromStorage (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/Structure;ZJ)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; a
net/minecraft/world/level/levelgen/structure/StructureCheckResult dld
	$VALUES d
	CHUNK_LOAD_NEEDED c
	START_NOT_PRESENT b
	START_PRESENT a
	$values ()[Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; a
net/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData dle
	TAG_All_INDEXES b
	TAG_REMAINING_INDEXES a
	all c
	remaining d
	addIndex (J)V a
	getAll ()Lit/unimi/dsi/fastutil/longs/LongSet; a
	hasStartIndex (J)Z b
	hasUnhandledIndex (J)Z c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData; b
	removeIndex (J)V d
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/levelgen/structure/StructurePiece dlf
	CAVE_AIR e
	LOGGER a
	SHAPE_CHECK_BLOCKS i
	boundingBox f
	genDepth g
	mirror c
	orientation b
	rotation d
	type h
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	canBeReplaced (Lnet/minecraft/world/level/LevelReader;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	createBoundingBox (Ljava/util/stream/Stream;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	createChest (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	createChest (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/resources/ResourceLocation;)Z a
	createDispenser (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;Lnet/minecraft/resources/ResourceLocation;)Z a
	createTag (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;)Lnet/minecraft/nbt/CompoundTag; a
	fillColumnDown (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V b
	findCollisionPiece (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateAirBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIII)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIIZLnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector;)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;ZLnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector;)V a
	generateMaybeBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;FIIIIIILnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;ZZ)V a
	generateUpperHalfSphere (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;Z)V a
	getBlock (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/block/state/BlockState; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; f
	getGenDepth ()I g
	getLocatorPosition ()Lnet/minecraft/core/BlockPos; h
	getMirror ()Lnet/minecraft/world/level/block/Mirror; j
	getOrientation ()Lnet/minecraft/core/Direction; i
	getRandomHorizontalDirection (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/Direction; a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType; k
	getWorldPos (III)Lnet/minecraft/core/BlockPos$MutableBlockPos; b
	getWorldX (II)I a
	getWorldY (I)I b
	getWorldZ (II)I b
	isCloseToChunk (Lnet/minecraft/world/level/ChunkPos;I)Z a
	isInterior (Lnet/minecraft/world/level/LevelReader;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z b
	isReplaceableByStructures (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	makeBoundingBox (IIILnet/minecraft/core/Direction;III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	maybeGenerateBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;FIIILnet/minecraft/world/level/block/state/BlockState;)V a
	move (III)V a
	placeBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
	reorient (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	setGenDepth (I)V a
	setOrientation (Lnet/minecraft/core/Direction;)V a
net/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector dlf$a
	next a
	getNext ()Lnet/minecraft/world/level/block/state/BlockState; a
	next (Lnet/minecraft/util/RandomSource;IIIZ)V a
net/minecraft/world/level/levelgen/structure/StructurePieceAccessor dlg
	addPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;)V a
	findCollisionPiece (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
net/minecraft/world/level/levelgen/structure/StructureSet dlh
	CODEC b
	DIRECT_CODEC a
	placement d
	structures c
	entry (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry; a
	entry (Lnet/minecraft/core/Holder;I)Lnet/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry; a
	placement ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacement; b
	structures ()Ljava/util/List; a
net/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry dlh$a
	CODEC a
	structure b
	weight c
	structure ()Lnet/minecraft/core/Holder; a
	weight ()I b
net/minecraft/world/level/levelgen/structure/StructureSpawnOverride dli
	CODEC a
	boundingBox b
	spawns c
	boundingBox ()Lnet/minecraft/world/level/levelgen/structure/StructureSpawnOverride$BoundingBoxType; a
	spawns ()Lnet/minecraft/util/random/WeightedRandomList; b
net/minecraft/world/level/levelgen/structure/StructureSpawnOverride$BoundingBoxType dli$a
	$VALUES e
	CODEC c
	PIECE a
	STRUCTURE b
	id d
	$values ()[Lnet/minecraft/world/level/levelgen/structure/StructureSpawnOverride$BoundingBoxType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/structure/StructureStart dlj
	INVALID_START b
	INVALID_START_ID a
	LOGGER c
	cachedBoundingBox h
	chunkPos f
	pieceContainer e
	references g
	structure d
	addReference ()V e
	canBeReferenced ()Z d
	createTag (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getChunkPos ()Lnet/minecraft/world/level/ChunkPos; c
	getMaxReferences ()I g
	getPieces ()Ljava/util/List; i
	getReferences ()I f
	getStructure ()Lnet/minecraft/world/level/levelgen/structure/Structure; h
	isValid ()Z b
	loadStaticStart (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;J)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	placeInChunk (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/world/level/levelgen/structure/StructureType dlk
	BURIED_TREASURE a
	DESERT_PYRAMID b
	END_CITY c
	FORTRESS d
	IGLOO e
	JIGSAW f
	JUNGLE_TEMPLE g
	MINESHAFT h
	NETHER_FOSSIL i
	OCEAN_MONUMENT j
	OCEAN_RUIN k
	RUINED_PORTAL l
	SHIPWRECK m
	STRONGHOLD n
	SWAMP_HUT o
	WOODLAND_MANSION p
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/StructureType; a
net/minecraft/world/level/levelgen/structure/TemplateStructurePiece dll
	LOGGER h
	placeSettings c
	template b
	templateName a
	templatePosition d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeTemplateLocation ()Lnet/minecraft/resources/ResourceLocation; b
	move (III)V a
	placeSettings ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; e
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
	template ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; c
	templatePosition ()Lnet/minecraft/core/BlockPos; d
net/minecraft/world/level/levelgen/structure/TerrainAdjustment dlm
	$VALUES g
	BEARD_BOX d
	BEARD_THIN c
	BURY b
	CODEC e
	NONE a
	id f
	$values ()[Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator dlo
net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context dlo$a
	chunkGenerator b
	chunkPos d
	config a
	heightAccessor e
	random f
	seed g
	structureTemplateManager c
	chunkGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; b
	chunkPos ()Lnet/minecraft/world/level/ChunkPos; d
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration; a
	heightAccessor ()Lnet/minecraft/world/level/LevelHeightAccessor; e
	random ()Lnet/minecraft/world/level/levelgen/WorldgenRandom; f
	seed ()J g
	structureTemplateManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; c
net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier dlp
net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context dlp$a
	biomeSource b
	chunkGenerator a
	chunkPos e
	config f
	heightAccessor g
	randomState c
	registryAccess j
	seed d
	structureTemplateManager i
	validBiome h
	biomeSource ()Lnet/minecraft/world/level/biome/BiomeSource; b
	chunkGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; a
	chunkPos ()Lnet/minecraft/world/level/ChunkPos; e
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration; f
	heightAccessor ()Lnet/minecraft/world/level/LevelHeightAccessor; g
	randomState ()Lnet/minecraft/world/level/levelgen/RandomState; c
	registryAccess ()Lnet/minecraft/core/RegistryAccess; j
	seed ()J d
	structureTemplateManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; i
	validBiome ()Ljava/util/function/Predicate; h
	validBiomeOnTop (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Z a
net/minecraft/world/level/levelgen/structure/pieces/PiecesContainer dlq
	JIGSAW_RENAME c
	LOGGER b
	RENAMES d
	pieces a
	calculateBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	isEmpty ()Z a
	isInsidePiece (Lnet/minecraft/core/BlockPos;)Z a
	load (Lnet/minecraft/nbt/ListTag;Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;)Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer; a
	pieces ()Ljava/util/List; c
	save (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;)Lnet/minecraft/nbt/Tag; a
net/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext dlr
	registryAccess b
	resourceManager a
	structureTemplateManager c
	fromLevel (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext; a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; b
	resourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; a
	structureTemplateManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; c
net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType dls
	BURIED_TREASURE_PIECE aa
	DESERT_PYRAMID_PIECE L
	END_CITY_PIECE Y
	IGLOO I
	JIGSAW ad
	JUNGLE_PYRAMID_PIECE G
	MINE_SHAFT_CORRIDOR a
	MINE_SHAFT_CROSSING b
	MINE_SHAFT_ROOM c
	MINE_SHAFT_STAIRS d
	NETHER_FORTRESS_BRIDGE_CROSSING e
	NETHER_FORTRESS_BRIDGE_END_FILLER f
	NETHER_FORTRESS_BRIDGE_STRAIGHT g
	NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS h
	NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY i
	NETHER_FORTRESS_CASTLE_ENTRANCE j
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR m
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING k
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN l
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN n
	NETHER_FORTRESS_CASTLE_STALK_ROOM o
	NETHER_FORTRESS_MONSTER_THRONE p
	NETHER_FORTRESS_ROOM_CROSSING q
	NETHER_FORTRESS_STAIRS_ROOM r
	NETHER_FORTRESS_START s
	NETHER_FOSSIL ac
	OCEAN_MONUMENT_BUILDING M
	OCEAN_MONUMENT_CORE_ROOM N
	OCEAN_MONUMENT_DOUBLE_XY_ROOM P
	OCEAN_MONUMENT_DOUBLE_X_ROOM O
	OCEAN_MONUMENT_DOUBLE_YZ_ROOM R
	OCEAN_MONUMENT_DOUBLE_Y_ROOM Q
	OCEAN_MONUMENT_DOUBLE_Z_ROOM S
	OCEAN_MONUMENT_ENTRY_ROOM T
	OCEAN_MONUMENT_PENTHOUSE U
	OCEAN_MONUMENT_SIMPLE_ROOM V
	OCEAN_MONUMENT_SIMPLE_TOP_ROOM W
	OCEAN_MONUMENT_WING_ROOM X
	OCEAN_RUIN H
	RUINED_PORTAL J
	SHIPWRECK_PIECE ab
	STRONGHOLD_CHEST_CORRIDOR t
	STRONGHOLD_FILLER_CORRIDOR u
	STRONGHOLD_FIVE_CROSSING v
	STRONGHOLD_LEFT_TURN w
	STRONGHOLD_LIBRARY x
	STRONGHOLD_PORTAL_ROOM y
	STRONGHOLD_PRISON_HALL z
	STRONGHOLD_RIGHT_TURN A
	STRONGHOLD_ROOM_CROSSING B
	STRONGHOLD_STAIRS_DOWN C
	STRONGHOLD_START D
	STRONGHOLD_STRAIGHT E
	STRONGHOLD_STRAIGHT_STAIRS_DOWN F
	SWAMPLAND_HUT K
	WOODLAND_MANSION_PIECE Z
	setFullContextPieceId (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType; a
	setPieceId (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$ContextlessType;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType; a
	setTemplatePieceId (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$StructureTemplateType;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType; a
net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$ContextlessType dls$a
net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$StructureTemplateType dls$b
net/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder dlt
	pieces a
	addPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;)V a
	build ()Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer; a
	clear ()V b
	findCollisionPiece (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; d
	isEmpty ()Z c
	moveBelowSeaLevel (IILnet/minecraft/util/RandomSource;I)I a
	moveInsideHeights (Lnet/minecraft/util/RandomSource;II)V a
	offsetPiecesVertically (I)V a
net/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement dlv
	CODEC a
	count e
	distance c
	preferredBiomes f
	spread d
	codec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P9; b
	count ()I c
	distance ()I a
	isPlacementChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/RandomState;JII)Z a
	preferredBiomes ()Lnet/minecraft/core/HolderSet; d
	spread ()I b
	type ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacementType; e
net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement dlw
	CODEC a
	separation d
	spacing c
	spreadType e
	getPotentialStructureChunk (JII)Lnet/minecraft/world/level/ChunkPos; a
	isPlacementChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/RandomState;JII)Z a
	separation ()I b
	spacing ()I a
	spreadType ()Lnet/minecraft/world/level/levelgen/structure/placement/RandomSpreadType; c
	type ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacementType; e
net/minecraft/world/level/levelgen/structure/placement/RandomSpreadType dlx
	$VALUES e
	CODEC c
	LINEAR a
	TRIANGULAR b
	id d
	$values ()[Lnet/minecraft/world/level/levelgen/structure/placement/RandomSpreadType; a
	evaluate (Lnet/minecraft/util/RandomSource;I)I a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/structure/placement/StructurePlacement dly
	CODEC b
	HIGHLY_ARBITRARY_RANDOM_SALT a
	exclusionZone g
	frequency e
	frequencyReductionMethod d
	locateOffset c
	salt f
	exclusionZone ()Ljava/util/Optional; j
	frequency ()F h
	frequencyReductionMethod ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReductionMethod; g
	getLocatePos (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/core/BlockPos; a
	isPlacementChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/RandomState;JII)Z a
	isStructureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/RandomState;JII)Z b
	legacyArbitrarySaltProbabilityReducer (JIIIF)Z c
	legacyPillagerOutpostReducer (JIIIF)Z d
	legacyProbabilityReducerWithDouble (JIIIF)Z b
	locateOffset ()Lnet/minecraft/core/Vec3i; f
	placementCodec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P5; a
	probabilityReducer (JIIIF)Z a
	salt ()I i
	type ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacementType; e
net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$ExclusionZone dly$a
	CODEC a
	chunkCount c
	otherSet b
	chunkCount ()I b
	isPlacementForbidden (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/RandomState;JII)Z a
	otherSet ()Lnet/minecraft/core/Holder; a
net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReducer dly$b
net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReductionMethod dly$c
	$VALUES h
	CODEC e
	DEFAULT a
	LEGACY_TYPE_1 b
	LEGACY_TYPE_2 c
	LEGACY_TYPE_3 d
	name f
	reducer g
	$values ()[Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReductionMethod; a
	getSerializedName ()Ljava/lang/String; c
	shouldGenerate (JIIIF)Z a
net/minecraft/world/level/levelgen/structure/placement/StructurePlacementType dlz
	CONCENTRIC_RINGS b
	RANDOM_SPREAD a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacementType; a
net/minecraft/world/level/levelgen/structure/pools/EmptyPoolElement dmb
	CODEC a
	INSTANCE b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;Z)Z a
net/minecraft/world/level/levelgen/structure/pools/FeaturePoolElement dmc
	CODEC a
	defaultJigsawNBT c
	feature b
	fillDefaultJigsawNBT ()Lnet/minecraft/nbt/CompoundTag; b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;Z)Z a
net/minecraft/world/level/levelgen/structure/pools/JigsawJunction dmd
	deltaY d
	destProjection e
	sourceGroundY b
	sourceX a
	sourceZ c
	deserialize (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/levelgen/structure/pools/JigsawJunction; a
	getDeltaY ()I d
	getDestProjection ()Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection; e
	getSourceGroundY ()I b
	getSourceX ()I a
	getSourceZ ()I c
	serialize (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement dme
	LOGGER a
	addPieces (Lnet/minecraft/world/level/levelgen/RandomState;IZLnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/levelgen/structure/PoolElementStructurePiece;Ljava/util/List;Lnet/minecraft/world/phys/shapes/VoxelShape;)V a
	addPieces (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;Lnet/minecraft/core/Holder;Ljava/util/Optional;ILnet/minecraft/core/BlockPos;ZLjava/util/Optional;I)Ljava/util/Optional; a
	generateJigsaw (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/Holder;Lnet/minecraft/resources/ResourceLocation;ILnet/minecraft/core/BlockPos;Z)Z a
	getRandomNamedJigsaw (Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElement;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/levelgen/WorldgenRandom;)Ljava/util/Optional; a
net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$PieceState dme$a
	depth c
	free b
	piece a
net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$Placer dme$b
	chunkGenerator c
	maxDepth b
	pieces e
	placing g
	pools a
	random f
	structureTemplateManager d
	tryPlacingChildren (Lnet/minecraft/world/level/levelgen/structure/PoolElementStructurePiece;Lorg/apache/commons/lang3/mutable/MutableObject;IZLnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)V a
net/minecraft/world/level/levelgen/structure/pools/LegacySinglePoolElement dmf
	CODEC a
	getSettings (Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
net/minecraft/world/level/levelgen/structure/pools/ListPoolElement dmg
	CODEC a
	elements b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;Z)Z a
	setProjection (Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection;)Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElement; a
	setProjectionOnEachElement (Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection;)V b
net/minecraft/world/level/levelgen/structure/pools/SinglePoolElement dmh
	CODEC b
	TEMPLATE_CODEC a
	processors d
	template c
	encodeTemplate (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getDataMarkers (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Z)Ljava/util/List; a
	getSettings (Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;Z)Z a
	processorsCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; b
	templateCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; c
net/minecraft/world/level/levelgen/structure/pools/StructurePoolElement dmi
	CODEC e
	projection a
	empty ()Ljava/util/function/Function; g
	feature (Lnet/minecraft/core/Holder;)Ljava/util/function/Function; a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getGroundLevelDelta ()I f
	getProjection ()Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection; e
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
	handleDataMarker (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	legacy (Ljava/lang/String;)Ljava/util/function/Function; a
	legacy (Ljava/lang/String;Lnet/minecraft/core/Holder;)Ljava/util/function/Function; a
	list (Ljava/util/List;)Ljava/util/function/Function; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;Z)Z a
	projectionCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; d
	setProjection (Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection;)Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElement; a
	single (Ljava/lang/String;)Ljava/util/function/Function; b
	single (Ljava/lang/String;Lnet/minecraft/core/Holder;)Ljava/util/function/Function; b
net/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType dmj
	EMPTY d
	FEATURE c
	LEGACY e
	LIST b
	SINGLE a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool dmk
	CODEC b
	DIRECT_CODEC a
	LOGGER c
	SIZE_UNSET d
	fallback h
	maxSize i
	name e
	rawTemplates f
	templates g
	getFallback ()Lnet/minecraft/resources/ResourceLocation; a
	getMaxSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;)I a
	getName ()Lnet/minecraft/resources/ResourceLocation; b
	getRandomTemplate (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElement; a
	getShuffledTemplates (Lnet/minecraft/util/RandomSource;)Ljava/util/List; b
	size ()I c
net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection dmk$a
	$VALUES f
	CODEC c
	RIGID b
	TERRAIN_MATCHING a
	name d
	processors e
	$values ()[Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection; d
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection; a
	getName ()Ljava/lang/String; a
	getProcessors ()Lcom/google/common/collect/ImmutableList; b
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/structure/structures/BuriedTreasurePieces dmm
net/minecraft/world/level/levelgen/structure/structures/BuriedTreasurePieces$BuriedTreasurePiece dmm$a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	isLiquid (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/BuriedTreasureStructure dmn
	CODEC d
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/DesertPyramidPiece dmo
	DEPTH i
	WIDTH h
	hasPlacedChest j
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/DesertPyramidStructure dmp
	CODEC d
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/EndCityPieces dmq
	FAT_TOWER_BRIDGES f
	FAT_TOWER_GENERATOR g
	HOUSE_TOWER_GENERATOR b
	MAX_GEN_DEPTH a
	TOWER_BRIDGES c
	TOWER_BRIDGE_GENERATOR e
	TOWER_GENERATOR d
	addHelper (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece;)Lnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece; a
	addPiece (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/lang/String;Lnet/minecraft/world/level/block/Rotation;Z)Lnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece; a
	recursiveChildren (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$SectionGenerator;ILnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/util/RandomSource;)Z a
	startHouseTower (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece dmq$a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeResourceLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	makeSettings (ZLnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	makeTemplateLocation ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$SectionGenerator dmq$b
	generate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;ILnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/util/RandomSource;)Z a
	init ()V a
net/minecraft/world/level/levelgen/structure/structures/EndCityStructure dmr
	CODEC d
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/IglooPieces dms
	GENERATION_HEIGHT a
	OFFSETS f
	PIVOTS e
	STRUCTURE_LOCATION_IGLOO b
	STRUCTURE_LOCATION_LABORATORY d
	STRUCTURE_LOCATION_LADDER c
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/levelgen/structure/structures/IglooPieces$IglooPiece dms$a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makePosition (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/core/BlockPos; a
	makeSettings (Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/IglooStructure dmt
	CODEC d
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/JigsawStructure dmu
	CODEC e
	MAX_TOTAL_STRUCTURE_RANGE d
	maxDepth h
	maxDistanceFromCenter l
	projectStartToHeightmap k
	startHeight i
	startJigsawName g
	startPool f
	useExpansionHack j
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
	verifyRange ()Ljava/util/function/Function; f
net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece dmv
	DEPTH i
	STONE_SELECTOR n
	WIDTH h
	placedHiddenChest k
	placedMainChest j
	placedTrap1 l
	placedTrap2 m
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece$MossStoneSelector dmv$a
	next (Lnet/minecraft/util/RandomSource;IIIZ)V a
net/minecraft/world/level/levelgen/structure/structures/JungleTempleStructure dmw
	CODEC d
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces dmx
	DEFAULT_SHAFT_HEIGHT d
	DEFAULT_SHAFT_LENGTH e
	DEFAULT_SHAFT_WIDTH c
	LOGGER b
	MAGIC_START_Y a
	MAX_CHAIN_HEIGHT g
	MAX_DEPTH h
	MAX_PILLAR_HEIGHT f
	createRandomShaftPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;ILnet/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$Type;)Lnet/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftPiece; a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftPiece; a
net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftCorridor dmx$a
	hasPlacedSpider d
	hasRails b
	numSections h
	spiderCorridor c
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	canHangChainBelow (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	canPlaceColumnOnTopOf (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	createChest (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/resources/ResourceLocation;)Z a
	fillColumnBetween (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos$MutableBlockPos;II)V a
	fillColumnDown (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V b
	fillPillarDownOrChainUp (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V c
	findCorridorSize (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	hasSturdyNeighbours (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)Z a
	maybePlaceCobWeb (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;FIII)V a
	placeDoubleLowerOrUpperSupport (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;III)V a
	placeSupport (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIILnet/minecraft/util/RandomSource;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftCrossing dmx$b
	direction b
	isTwoFloored c
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	findCrossing (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	placeSupportPillar (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftPiece dmx$c
	type a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	canBeReplaced (Lnet/minecraft/world/level/LevelReader;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	isInInvalidLocation (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	isSupportingBox (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)Z a
	setPlanksBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/block/state/BlockState;III)V a
net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftRoom dmx$d
	childEntranceBoxes b
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	move (III)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftStairs dmx$e
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	findStairs (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure dmy
	CODEC d
	type e
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePiecesAndAdjust (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)I a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$Type dmy$a
	$VALUES h
	CODEC c
	MESA b
	NORMAL a
	fenceState g
	name d
	planksState f
	woodState e
	$values ()[Lnet/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$Type; f
	byId (I)Lnet/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$Type; a
	getFenceState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getName ()Ljava/lang/String; a
	getPlanksState ()Lnet/minecraft/world/level/block/state/BlockState; d
	getSerializedName ()Ljava/lang/String; c
	getWoodState ()Lnet/minecraft/world/level/block/state/BlockState; b
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces dmz
	BRIDGE_PIECE_WEIGHTS d
	CASTLE_PIECE_WEIGHTS e
	LOWEST_Y_POSITION c
	MAGIC_START_Y a
	MAX_DEPTH b
	findAndCreateBridgePieceFactory (Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$PieceWeight;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$NetherBridgePiece; a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeCrossing dmz$a
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeEndFiller dmz$b
	DEPTH c
	HEIGHT b
	WIDTH a
	selfSeed d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeEndFiller; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeStraight dmz$c
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeStraight; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorStairsPiece dmz$d
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorStairsPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorTBalconyPiece dmz$e
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorTBalconyPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleEntrance dmz$f
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleEntrance; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorCrossingPiece dmz$g
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorCrossingPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorLeftTurnPiece dmz$h
	DEPTH c
	HEIGHT b
	WIDTH a
	isNeedingChest d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorLeftTurnPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorPiece dmz$i
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorRightTurnPiece dmz$j
	DEPTH c
	HEIGHT b
	WIDTH a
	isNeedingChest d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorRightTurnPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleStalkRoom dmz$k
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleStalkRoom; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$MonsterThrone dmz$l
	DEPTH c
	HEIGHT b
	WIDTH a
	hasPlacedSpawner d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$MonsterThrone; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$NetherBridgePiece dmz$m
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;IZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateChildForward (Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateChildLeft (Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; b
	generateChildRight (Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; c
	generatePiece (Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece;Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$NetherBridgePiece; a
	isOkBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	updatePieceWeight (Ljava/util/List;)I a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$PieceWeight dmz$n
	allowInRow e
	maxPlaceCount d
	pieceClass a
	placeCount c
	weight b
	doPlace (I)Z a
	isValid ()Z a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$RoomCrossing dmz$o
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$RoomCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StairsRoom dmz$p
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StairsRoom; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece dmz$q
	availableBridgePieces b
	availableCastlePieces c
	pendingChildren d
	previousPiece a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressStructure dna
	CODEC e
	FORTRESS_ENEMIES d
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces dnb
	FOSSILS a
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces$NetherFossilPiece dnb$a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeSettings (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFossilStructure dnc
	CODEC d
	height e
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces dnd
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleXRoom dnd$a
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleXYRoom dnd$b
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleYRoom dnd$c
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleYZRoom dnd$d
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleZRoom dnd$e
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitSimpleRoom dnd$f
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitSimpleTopRoom dnd$g
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$MonumentBuilding dnd$h
	BIOME_RANGE_CHECK a
	DEPTH E
	HEIGHT D
	TOP_POSITION F
	WIDTH C
	childPieces I
	coreRoom H
	sourceRoom G
	generateEntranceArchs (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	generateEntranceWall (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V b
	generateLowerWall (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V d
	generateMiddleWall (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V e
	generateRoofPiece (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V c
	generateRoomGraph (Lnet/minecraft/util/RandomSource;)Ljava/util/List; b
	generateUpperWall (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V f
	generateWing (ZILnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$MonumentRoomFitter dnd$i
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentCoreRoom dnd$j
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleXRoom dnd$k
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleXYRoom dnd$l
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleYRoom dnd$m
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleYZRoom dnd$n
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleZRoom dnd$o
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentEntryRoom dnd$p
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPenthouse dnd$q
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece dnd$r
	BASE_BLACK d
	BASE_GRAY b
	BASE_LIGHT c
	DOT_DECO_DATA h
	DO_FILL j
	FILL_BLOCK k
	FILL_KEEP l
	GRIDROOM_DEPTH n
	GRIDROOM_HEIGHT o
	GRIDROOM_LEFTWING_CONNECT_INDEX w
	GRIDROOM_RIGHTWING_CONNECT_INDEX x
	GRIDROOM_SOURCE_INDEX u
	GRIDROOM_TOP_CONNECT_INDEX v
	GRIDROOM_WIDTH m
	GRID_DEPTH q
	GRID_FLOOR_COUNT s
	GRID_HEIGHT r
	GRID_SIZE t
	GRID_WIDTH p
	LAMP_BLOCK i
	LEFTWING_INDEX y
	PENTHOUSE_INDEX A
	RIGHTWING_INDEX z
	roomDefinition B
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	chunkIntersects (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)Z a
	generateBoxOnFillOnly (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;)V a
	generateDefaultFloor (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIZ)V a
	generateWaterBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIII)V b
	getRoomIndex (III)I c
	makeBoundingBox (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	spawnElder (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;III)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentSimpleRoom dnd$s
	mainDesign a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentSimpleTopRoom dnd$t
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentWingRoom dnd$u
	mainDesign a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition dnd$v
	claimed d
	connections b
	hasOpening c
	index a
	isSource e
	scanIndex f
	countOpenings ()I c
	findSource (I)Z a
	isSpecial ()Z b
	setConnection (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)V a
	updateOpenings ()V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentStructure dne
	CODEC d
	createTopPiece (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/WorldgenRandom;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	regeneratePiecesAfterLoad (Lnet/minecraft/world/level/ChunkPos;JLnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer; a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces dnf
	BIG_RUINS_BRICK e
	BIG_RUINS_CRACKED g
	BIG_RUINS_MOSSY f
	BIG_WARM_RUINS h
	RUINS_BRICK b
	RUINS_CRACKED c
	RUINS_MOSSY d
	WARM_RUINS a
	addClusterRuins (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;)V a
	addPiece (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure;ZF)V a
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure;)V a
	allPositions (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/List; a
	getBigWarmRuin (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/ResourceLocation; b
	getSmallWarmRuin (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces$OceanRuinPiece dnf$a
	biomeType h
	integrity i
	isLarge j
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	getHeight (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeSettings (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure dng
	CODEC d
	biomeTemp e
	clusterProbability g
	largeProbability f
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure$Type dng$a
	$VALUES e
	CODEC c
	COLD b
	WARM a
	name d
	$values ()[Lnet/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure$Type; b
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece dnh
	LOGGER h
	PROBABILITY_OF_GOLD_GONE i
	PROBABILITY_OF_MAGMA_INSTEAD_OF_LAVA k
	PROBABILITY_OF_MAGMA_INSTEAD_OF_NETHERRACK j
	properties m
	verticalPlacement l
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addNetherrackDripColumn (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V c
	addNetherrackDripColumnsBelowPortal (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;)V a
	canBlockBeReplacedByNetherrackOrMagma (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	getBlockReplaceRule (Lnet/minecraft/world/level/block/Block;FLnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; a
	getBlockReplaceRule (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; a
	getHeightMapType (Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
	getLavaProcessorRule (Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement;Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$Properties;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; a
	getSurfaceY (Lnet/minecraft/world/level/LevelAccessor;IILnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement;)I a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeSettings (Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$Properties;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	makeSettings (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	maybeAddLeavesAbove (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	maybeAddVines (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	placeNetherrackOrMagma (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V d
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
	spreadNetherrack (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;)V b
net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$Properties dnh$a
	CODEC a
	airPocket d
	cold b
	mossiness c
	overgrown e
	replaceWithBlackstone g
	vines f
net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement dnh$b
	$VALUES i
	CODEC g
	IN_MOUNTAIN d
	IN_NETHER f
	ON_LAND_SURFACE a
	ON_OCEAN_FLOOR c
	PARTLY_BURIED b
	UNDERGROUND e
	name h
	$values ()[Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement; a
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure dni
	CODEC d
	MIN_Y_INDEX h
	PROBABILITY_OF_GIANT_PORTAL g
	STRUCTURE_LOCATION_GIANT_PORTALS f
	STRUCTURE_LOCATION_PORTALS e
	setups i
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	findSuitableY (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement;ZIILnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I a
	getRandomWithinInterval (Lnet/minecraft/util/RandomSource;II)I a
	isCold (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Holder;)Z a
	sample (Lnet/minecraft/world/level/levelgen/WorldgenRandom;F)Z a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure$Setup dni$a
	CODEC a
	airPocketProbability c
	canBeCold g
	mossiness d
	overgrown e
	placement b
	replaceWithBlackstone h
	vines f
	weight i
	airPocketProbability ()F b
	canBeCold ()Z f
	mossiness ()F c
	overgrown ()Z d
	placement ()Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement; a
	replaceWithBlackstone ()Z g
	vines ()Z e
	weight ()F h
net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces dnj
	MARKERS_TO_LOOT d
	PIVOT a
	STRUCTURE_LOCATION_BEACHED b
	STRUCTURE_LOCATION_OCEAN c
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;Z)V a
net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces$ShipwreckPiece dnj$a
	isBeached h
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeSettings (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/ShipwreckStructure dnk
	CODEC d
	isBeached e
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces dnl
	CHECK_AIR f
	LOWEST_Y_POSITION e
	MAGIC_START_Y a
	MAX_DEPTH d
	SMALL_DOOR_HEIGHT c
	SMALL_DOOR_WIDTH b
	SMOOTH_STONE_SELECTOR k
	STRONGHOLD_PIECE_WEIGHTS g
	currentPieces h
	imposedPiece i
	totalWeight j
	findAndCreatePieceFactory (Ljava/lang/Class;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece; a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; b
	generatePieceFromSmallDoor (Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece; a
	resetPieces ()V a
	updatePieceWeight ()Z b
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$ChestCorridor dnl$a
	DEPTH c
	HEIGHT b
	WIDTH a
	hasPlacedChest d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$ChestCorridor; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FillerCorridor dnl$b
	steps a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	findPieceBox (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FiveCrossing dnl$c
	DEPTH c
	HEIGHT b
	WIDTH a
	leftHigh i
	leftLow d
	rightHigh k
	rightLow j
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FiveCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$LeftTurn dnl$d
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$LeftTurn; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Library dnl$e
	DEPTH d
	HEIGHT b
	TALL_HEIGHT c
	WIDTH a
	isTall i
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Library; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PieceWeight dnl$f
	maxPlaceCount d
	pieceClass a
	placeCount c
	weight b
	doPlace (I)Z a
	isValid ()Z a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PortalRoom dnl$g
	DEPTH c
	HEIGHT b
	WIDTH a
	hasPlacedSpawner d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PortalRoom; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PrisonHall dnl$h
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PrisonHall; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RightTurn dnl$i
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RightTurn; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RoomCrossing dnl$j
	DEPTH c
	HEIGHT b
	WIDTH a
	type d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RoomCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$SmoothStoneSelector dnl$k
	next (Lnet/minecraft/util/RandomSource;IIIZ)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StairsDown dnl$l
	DEPTH c
	HEIGHT b
	WIDTH a
	isSource d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StairsDown; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece dnl$m
	pendingChildren c
	portalRoomPiece b
	previousPiece a
	getLocatorPosition ()Lnet/minecraft/core/BlockPos; h
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Straight dnl$n
	DEPTH c
	HEIGHT b
	WIDTH a
	leftChild d
	rightChild i
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Straight; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StraightStairsDown dnl$o
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StraightStairsDown; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece dnl$p
	entryDoor h
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	generateSmallDoor (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece$SmallDoorType;III)V a
	generateSmallDoorChildForward (Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateSmallDoorChildLeft (Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; b
	generateSmallDoorChildRight (Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; c
	isOkBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	randomSmallDoor (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece$SmallDoorType; b
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece$SmallDoorType dnl$p$a
	$VALUES e
	GRATES c
	IRON_DOOR d
	OPENING a
	WOOD_DOOR b
	$values ()[Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece$SmallDoorType; a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Turn dnl$q
	DEPTH c
	HEIGHT b
	WIDTH a
net/minecraft/world/level/levelgen/structure/structures/StrongholdStructure dnm
	CODEC d
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/SwampHutPiece dnn
	spawnedCat i
	spawnedWitch h
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
	spawnCat (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
net/minecraft/world/level/levelgen/structure/structures/SwampHutStructure dno
	CODEC d
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces dnp
	generateMansion (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Lnet/minecraft/util/RandomSource;)V a
	main ([Ljava/lang/String;)V a
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FirstFloorRoomCollection dnp$a
	get1x1 (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; a
	get1x1Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; b
	get1x2FrontEntrance (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; b
	get1x2Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; c
	get1x2SideEntrance (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; a
	get2x2 (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; d
	get2x2Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection dnp$b
	get1x1 (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; a
	get1x1Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; b
	get1x2FrontEntrance (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; b
	get1x2Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; c
	get1x2SideEntrance (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; a
	get2x2 (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; d
	get2x2Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionGrid dnp$c
	BLOCKED g
	CLEAR b
	CORRIDOR c
	DEFAULT_SIZE a
	ROOM d
	ROOM_1x1 h
	ROOM_1x2 i
	ROOM_2x2 j
	ROOM_CORRIDOR_FLAG n
	ROOM_DOOR_FLAG l
	ROOM_ID_MASK p
	ROOM_ORIGIN_FLAG k
	ROOM_STAIRS_FLAG m
	ROOM_TYPE_MASK o
	START_ROOM e
	TEST_ROOM f
	baseGrid r
	entranceX u
	entranceY v
	floorRooms t
	random q
	thirdFloorGrid s
	cleanEdges (Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;)Z a
	get1x2RoomDirection (Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;IIII)Lnet/minecraft/core/Direction; b
	identifyRooms (Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;)V a
	isHouse (Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;II)Z a
	isRoomId (Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;IIII)Z a
	print ()V a
	recursiveCorridor (Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;IILnet/minecraft/core/Direction;I)V a
	setupThirdFloor ()V b
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionPiecePlacer dnp$d
	random b
	startX c
	startY d
	structureTemplateManager a
	addRoom1x1 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection;)V a
	addRoom1x2 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection;Z)V a
	addRoom2x2 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection;)V a
	addRoom2x2Secret (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection;)V a
	createMansion (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionGrid;)V a
	createRoof (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;)V a
	entrance (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData;)V a
	traverseInnerTurn (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData;)V d
	traverseOuterWalls (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/core/Direction;IIII)V a
	traverseTurn (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData;)V c
	traverseWallPiece (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData;)V b
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData dnp$e
	position b
	rotation a
	wallType c
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SecondFloorRoomCollection dnp$f
	get1x1 (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; a
	get1x1Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; b
	get1x2FrontEntrance (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; b
	get1x2Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; c
	get1x2SideEntrance (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; a
	get2x2 (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; d
	get2x2Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid dnp$g
	grid a
	height c
	valueIfOutside d
	width b
	edgesTo (III)Z b
	get (II)I a
	set (III)V a
	set (IIIII)V a
	setif (IIII)V a
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$ThirdFloorRoomCollection dnp$h
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$WoodlandMansionPiece dnp$i
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	makeSettings (Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	makeTemplateLocation ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionStructure dnq
	CODEC d
	afterPlace (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)V a
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/templatesystem/AlwaysTrueTest dns
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/AxisAlignedLinearPosTest dnt
	CODEC a
	axis g
	maxChance d
	maxDist f
	minChance b
	minDist e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/BlackstoneReplaceProcessor dnu
	CODEC a
	INSTANCE b
	replacements c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockAgeProcessor dnv
	CODEC a
	NON_MOSSY_REPLACEMENTS e
	PROBABILITY_OF_REPLACING_FULL_BLOCK b
	PROBABILITY_OF_REPLACING_OBSIDIAN d
	PROBABILITY_OF_REPLACING_STAIRS c
	mossiness f
	getRandomBlock (Lnet/minecraft/util/RandomSource;[Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	getRandomBlock (Lnet/minecraft/util/RandomSource;[Lnet/minecraft/world/level/block/state/BlockState;[Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	getRandomFacingStairs (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockState; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	maybeReplaceFullStoneBlock (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; a
	maybeReplaceObsidian (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; d
	maybeReplaceSlab (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; b
	maybeReplaceStairs (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	maybeReplaceWall (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; c
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockIgnoreProcessor dnw
	AIR c
	CODEC a
	STRUCTURE_AND_AIR d
	STRUCTURE_BLOCK b
	toIgnore e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockMatchTest dnx
	CODEC a
	block b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockRotProcessor dny
	CODEC a
	integrity c
	rottableBlocks b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockStateMatchTest dnz
	CODEC a
	blockState b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/GravityProcessor doa
	CODEC a
	heightmap b
	offset c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/JigsawReplacementProcessor dob
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/LavaSubmergedBlockProcessor doc
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/LinearPosTest dod
	CODEC a
	maxChance d
	maxDist f
	minChance b
	minDist e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/NopProcessor doe
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/PosAlwaysTrueTest dof
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest dog
	CODEC c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType doh
	ALWAYS_TRUE_TEST a
	AXIS_ALIGNED_LINEAR_POS_TEST c
	LINEAR_POS_TEST b
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule doi
	CODEC a
	inputPredicate b
	locPredicate c
	outputState e
	outputTag f
	posPredicate d
	getOutputState ()Lnet/minecraft/world/level/block/state/BlockState; a
	getOutputTag ()Lnet/minecraft/nbt/CompoundTag; b
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/ProtectedBlockProcessor doj
	CODEC b
	cannotReplace a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockMatchTest dok
	CODEC a
	block b
	probability d
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockStateMatchTest dol
	CODEC a
	blockState b
	probability d
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor dom
	CODEC a
	rules b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleTest don
	CODEC c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType doo
	ALWAYS_TRUE_TEST a
	BLOCKSTATE_TEST c
	BLOCK_TEST b
	RANDOM_BLOCKSTATE_TEST f
	RANDOM_BLOCK_TEST e
	TAG_TEST d
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings dop
	boundingBox e
	finalizeEntities k
	ignoreEntities d
	keepLiquids f
	knownShape j
	mirror a
	palette h
	processors i
	random g
	rotation b
	rotationPivot c
	addProcessor (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	clearProcessors ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	copy ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; g
	getKnownShape ()Z h
	getMirror ()Lnet/minecraft/world/level/block/Mirror; c
	getProcessors ()Ljava/util/List; i
	getRandom (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/util/RandomSource; b
	getRandomPalette (Ljava/util/List;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette; a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; d
	getRotationPivot ()Lnet/minecraft/core/BlockPos; e
	isIgnoreEntities ()Z f
	popProcessor (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	setBoundingBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setFinalizeEntities (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; d
	setIgnoreEntities (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setKeepLiquids (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	setKnownShape (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; c
	setMirror (Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRandom (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRotation (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRotationPivot (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	shouldFinalizeEntities ()Z k
	shouldKeepLiquids ()Z j
net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor doq
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList dor
	list a
	list ()Ljava/util/List; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType dos
	BLACKSTONE_REPLACE h
	BLOCK_AGE g
	BLOCK_IGNORE a
	BLOCK_ROT b
	DIRECT_CODEC m
	GRAVITY c
	JIGSAW_REPLACEMENT d
	LAVA_SUBMERGED_BLOCK i
	LIST_CODEC n
	LIST_OBJECT_CODEC l
	NOP f
	PROTECTED_BLOCKS j
	RULE e
	SINGLE_CODEC k
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate dot
	BLOCKS_TAG d
	BLOCK_TAG_NBT g
	BLOCK_TAG_POS e
	BLOCK_TAG_STATE f
	CHUNK_SIZE l
	ENTITIES_TAG c
	ENTITY_TAG_BLOCKPOS i
	ENTITY_TAG_NBT j
	ENTITY_TAG_POS h
	PALETTE_LIST_TAG b
	PALETTE_TAG a
	SIZE_TAG k
	author p
	entityInfoList n
	palettes m
	size o
	addToLists (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V a
	buildInfoList (Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	calculateConnectedPosition (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	calculateRelativePosition (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	createEntityIgnoreException (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; a
	fillEntityList (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)V a
	fillFromWorld (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Vec3i;ZLnet/minecraft/world/level/block/Block;)V a
	filterBlocks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/world/level/block/Block;)Ljava/util/List; a
	filterBlocks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/world/level/block/Block;Z)Lit/unimi/dsi/fastutil/objects/ObjectArrayList; a
	getAuthor ()Ljava/lang/String; b
	getBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	getSize ()Lnet/minecraft/core/Vec3i; a
	getSize (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getZeroPositionWithTransform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	getZeroPositionWithTransform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;II)Lnet/minecraft/core/BlockPos; a
	load (Lnet/minecraft/nbt/CompoundTag;)V b
	loadPalette (Lnet/minecraft/nbt/ListTag;Lnet/minecraft/nbt/ListTag;)V a
	newDoubleList ([D)Lnet/minecraft/nbt/ListTag; a
	newIntegerList ([I)Lnet/minecraft/nbt/ListTag; a
	placeEntities (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)V a
	placeInWorld (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/util/RandomSource;I)Z a
	processBlockInfos (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Ljava/util/List;)Ljava/util/List; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setAuthor (Ljava/lang/String;)V a
	transform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	transform (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; a
	updateShapeAtEdge (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/world/phys/shapes/DiscreteVoxelShape;III)V a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette dot$a
	blocks a
	cache b
	blocks ()Ljava/util/List; a
	blocks (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette dot$b
	DEFAULT_BLOCK_STATE a
	ids b
	lastId c
	addMapping (Lnet/minecraft/world/level/block/state/BlockState;I)V a
	idFor (Lnet/minecraft/world/level/block/state/BlockState;)I a
	stateFor (I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo dot$c
	nbt c
	pos a
	state b
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureEntityInfo dot$d
	blockPos b
	nbt c
	pos a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager dou
	LOGGER a
	STRUCTURE_DIRECTORY_NAME b
	STRUCTURE_FILE_EXTENSION d
	STRUCTURE_TEXT_FILE_EXTENSION e
	TEST_STRUCTURES_DIR c
	fixerUpper g
	generatedDir i
	resourceManager h
	sources j
	structureRepository f
	createAndValidatePathToStructure (Ljava/nio/file/Path;Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Ljava/nio/file/Path; b
	createPathToStructure (Ljava/nio/file/Path;Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Ljava/nio/file/Path; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; b
	getOrCreate (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	getPathToGeneratedStructure (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Ljava/nio/file/Path; a
	listFolderContents (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/util/stream/Stream; a
	listGenerated ()Ljava/util/stream/Stream; d
	listGeneratedInNamespace (Ljava/nio/file/Path;)Ljava/util/stream/Stream; a
	listResources ()Ljava/util/stream/Stream; b
	listTemplates ()Ljava/util/stream/Stream; a
	listTestStructures ()Ljava/util/stream/Stream; c
	load (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$InputStreamOpener;Ljava/util/function/Consumer;)Ljava/util/Optional; a
	loadFromGenerated (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; h
	loadFromResource (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; f
	loadFromSnbt (Lnet/minecraft/resources/ResourceLocation;Ljava/nio/file/Path;)Ljava/util/Optional; a
	loadFromTestStructures (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; g
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	readStructure (Ljava/io/InputStream;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	readStructure (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	relativize (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; a
	remove (Lnet/minecraft/resources/ResourceLocation;)V d
	save (Lnet/minecraft/resources/ResourceLocation;)Z c
	tryLoad (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; e
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$InputStreamOpener dou$a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$Source dou$b
	lister b
	loader a
	lister ()Ljava/util/function/Supplier; b
	loader ()Ljava/util/function/Function; a
net/minecraft/world/level/levelgen/structure/templatesystem/TagMatchTest dov
	CODEC a
	tag b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/synth/BlendedNoise dox
	CODEC a
	DATA_CODEC f
	SCALE_RANGE e
	mainNoise i
	maxLimitNoise h
	maxValue o
	minLimitNoise g
	smearScaleMultiplier n
	xzFactor l
	xzMultiplier j
	xzScale p
	yFactor m
	yMultiplier k
	yScale q
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	createUnseeded (DDDDD)Lnet/minecraft/world/level/levelgen/synth/BlendedNoise; a
	maxValue ()D b
	minValue ()D a
	parityConfigString (Ljava/lang/StringBuilder;)V a
	withNewRandom (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/synth/BlendedNoise; a
net/minecraft/world/level/levelgen/synth/ImprovedNoise doy
	SHIFT_UP_EPSILON d
	p e
	xo a
	yo b
	zo c
	gradDot (IDDD)D a
	noise (DDD)D a
	noise (DDDDD)D a
	noiseWithDerivative (DDD[D)D a
	p (I)I a
	parityConfigString (Ljava/lang/StringBuilder;)V a
	sampleAndLerp (IIIDDDD)D a
	sampleWithDerivative (IIIDDD[D)D a
net/minecraft/world/level/levelgen/synth/NoiseUtils doz
	biasTowardsExtreme (DD)D a
	parityNoiseOctaveConfigString (Ljava/lang/StringBuilder;DDD[B)V a
	parityNoiseOctaveConfigString (Ljava/lang/StringBuilder;DDD[I)V a
net/minecraft/world/level/levelgen/synth/NormalNoise dpa
	INPUT_FACTOR a
	TARGET_DEVIATION b
	first d
	maxValue f
	parameters g
	second e
	valueFactor c
	create (Lnet/minecraft/util/RandomSource;I[D)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
	create (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters;)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; b
	createLegacyNetherBiome (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters;)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
	expectedDeviation (I)D a
	getValue (DDD)D a
	maxValue ()D a
	parameters ()Lnet/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters; b
	parityConfigString (Ljava/lang/StringBuilder;)V a
net/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters dpa$a
	CODEC b
	DIRECT_CODEC a
	amplitudes d
	firstOctave c
	amplitudes ()Lit/unimi/dsi/fastutil/doubles/DoubleList; b
	firstOctave ()I a
net/minecraft/world/level/levelgen/synth/PerlinNoise dpb
	ROUND_OFF a
	amplitudes d
	firstOctave c
	lowestFreqInputFactor f
	lowestFreqValueFactor e
	maxValue g
	noiseLevels b
	amplitudes ()Lit/unimi/dsi/fastutil/doubles/DoubleList; c
	create (Lnet/minecraft/util/RandomSource;ID[D)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; a
	create (Lnet/minecraft/util/RandomSource;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; b
	create (Lnet/minecraft/util/RandomSource;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; a
	create (Lnet/minecraft/util/RandomSource;Ljava/util/stream/IntStream;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; b
	createLegacyForBlendedNoise (Lnet/minecraft/util/RandomSource;Ljava/util/stream/IntStream;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; a
	createLegacyForLegacyNetherBiome (Lnet/minecraft/util/RandomSource;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; a
	edgeValue (D)D c
	firstOctave ()I b
	getOctaveNoise (I)Lnet/minecraft/world/level/levelgen/synth/ImprovedNoise; a
	getValue (DDD)D a
	getValue (DDDDDZ)D a
	makeAmplitudes (Lit/unimi/dsi/fastutil/ints/IntSortedSet;)Lcom/mojang/datafixers/util/Pair; a
	maxBrokenValue (D)D a
	maxValue ()D a
	parityConfigString (Ljava/lang/StringBuilder;)V a
	skipOctave (Lnet/minecraft/util/RandomSource;)V a
	wrap (D)D b
net/minecraft/world/level/levelgen/synth/PerlinSimplexNoise dpc
	highestFreqInputFactor c
	highestFreqValueFactor b
	noiseLevels a
	getValue (DDZ)D a
net/minecraft/world/level/levelgen/synth/SimplexNoise dpd
	F2 f
	G2 g
	GRADIENT a
	SQRT_3 e
	p h
	xo b
	yo c
	zo d
	dot ([IDDD)D a
	getCornerNoise3D (IDDDD)D a
	getValue (DD)D a
	getValue (DDD)D a
	p (I)I a
net/minecraft/world/level/lighting/BlockLightEngine dpf
	DIRECTIONS f
	pos g
	checkNeighborsAfterUpdate (JIZ)V a
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLightEmission (J)I d
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
net/minecraft/world/level/lighting/BlockLightSectionStorage dpg
	getLightValue (J)I d
net/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap dpg$a
	copy ()Lnet/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap; a
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
net/minecraft/world/level/lighting/DataLayerStorageMap dph
	CACHE_SIZE b
	cacheEnabled e
	lastSectionKeys c
	lastSections d
	map a
	clearCache ()V c
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
	copyDataLayer (J)V a
	disableCache ()V d
	getLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; c
	hasLayer (J)Z b
	removeLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; d
	setLayer (JLnet/minecraft/world/level/chunk/DataLayer;)V a
net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint dpi
	NO_COMPUTED_LEVEL a
	computedLevels d
	firstQueuedLevel e
	hasWork f
	levelCount b
	queues c
	checkEdge (JJIIIZ)V a
	checkEdge (JJIZ)V a
	checkFirstQueuedLevel (I)V a
	checkNeighbor (JJIZ)V b
	checkNeighborsAfterUpdate (JIZ)V a
	checkNode (J)V f
	computeLevelFromNeighbor (JJI)I b
	dequeue (JIIZ)V a
	enqueue (JII)V a
	getComputedLevel (JJI)I a
	getKey (II)I a
	getLevel (J)I c
	getQueueSize ()I c
	hasWork ()Z b
	isSource (J)Z a
	removeFromQueue (J)V e
	removeIf (Ljava/util/function/LongPredicate;)V a
	runUpdates (I)I b
	setLevel (JI)V a
net/minecraft/world/level/lighting/LayerLightEngine dpj
	CACHE_SIZE h
	DIRECTIONS f
	SELF_SOURCE a
	chunkSource b
	lastChunk j
	lastChunkPos i
	layer c
	pos e
	runningLightUpdates g
	storage d
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	checkNode (J)V f
	clearCache ()V d
	computeLevelFromNeighbor (JJI)I b
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	getChunk (II)Lnet/minecraft/world/level/BlockGetter; a
	getComputedLevel (JJI)I a
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDebugData (J)Ljava/lang/String; b
	getLevel (J)I c
	getLevel (Lnet/minecraft/world/level/chunk/DataLayer;J)I a
	getLightBlockInto (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;I)I a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;JLnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateAndOpacity (JLorg/apache/commons/lang3/mutable/MutableInt;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasLightWork ()Z A_
	isSource (J)Z a
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	queueSectionData (JLnet/minecraft/world/level/chunk/DataLayer;Z)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	runUpdates (IZZ)I a
	setLevel (JI)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LayerLightEventListener dpk
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
net/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener dpk$a
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener; b
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
	hasLightWork ()Z A_
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	runUpdates (IZZ)I a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LayerLightSectionStorage dpl
	DIRECTIONS n
	EMPTY c
	EMPTY_DATA d
	LIGHT_AND_DATA a
	LIGHT_ONLY b
	changedSections j
	chunkSource p
	columnsToRetainQueuedDataFor r
	dataSectionSet e
	hasToRemove m
	layer o
	queuedSections l
	sectionsAffectedByLightUpdates k
	toMarkData g
	toMarkNoData f
	toRemove s
	untrustedSections q
	updatingSectionData i
	visibleSectionData h
	checkEdgesForSection (Lnet/minecraft/world/level/lighting/LayerLightEngine;J)V b
	clearQueuedSectionBlocks (Lnet/minecraft/world/level/lighting/LayerLightEngine;J)V a
	createDataLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; j
	enableLightSources (JZ)V b
	getDataLayer (JZ)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDataLayer (Lnet/minecraft/world/level/lighting/DataLayerStorageMap;J)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDataLayerData (J)Lnet/minecraft/world/level/chunk/DataLayer; h
	getLevel (J)I c
	getLevelFromSource (J)I b
	getLightValue (J)I d
	getStoredLevel (J)I i
	hasInconsistencies ()Z a
	markNewInconsistencies (Lnet/minecraft/world/level/lighting/LayerLightEngine;ZZ)V a
	onNodeAdded (J)V k
	onNodeRemoved (J)V l
	queueSectionData (JLnet/minecraft/world/level/chunk/DataLayer;Z)V a
	retainData (JZ)V c
	runAllUpdates ()V d
	setLevel (JI)V a
	setStoredLevel (JI)V b
	storingLightForSection (J)Z g
	swapSectionMap ()V e
	updateSectionStatus (JZ)V d
net/minecraft/world/level/lighting/LevelLightEngine dpm
	LIGHT_SECTION_PADDING b
	MAX_SOURCE_LEVEL a
	blockEngine d
	levelHeightAccessor c
	skyEngine e
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	getDebugData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)Ljava/lang/String; a
	getLayerListener (Lnet/minecraft/world/level/LightLayer;)Lnet/minecraft/world/level/lighting/LayerLightEventListener; a
	getLightSectionCount ()I b
	getMaxLightSection ()I d
	getMinLightSection ()I c
	getRawBrightness (Lnet/minecraft/core/BlockPos;I)I b
	hasLightWork ()Z A_
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	queueSectionData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/chunk/DataLayer;Z)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	runUpdates (IZZ)I a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LightEventListener dpn
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	hasLightWork ()Z A_
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	runUpdates (IZZ)I a
	updateSectionStatus (Lnet/minecraft/core/BlockPos;Z)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/SkyLightEngine dpo
	DIRECTIONS f
	HORIZONTALS g
	checkNeighborsAfterUpdate (JIZ)V a
	checkNode (J)V f
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getDebugData (J)Ljava/lang/String; b
net/minecraft/world/level/lighting/SkyLightSectionStorage dpp
	HORIZONTALS n
	columnsWithSkySources r
	hasSourceInconsistencies s
	sectionsToAddSourcesTo p
	sectionsToRemoveSourcesFrom q
	sectionsWithSources o
	createDataLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; j
	enableLightSources (JZ)V b
	getLightValue (J)I d
	getLightValue (JZ)I e
	hasInconsistencies ()Z a
	hasSectionsBelow (I)Z a
	isAboveData (J)Z m
	lightOnInSection (J)Z n
	markNewInconsistencies (Lnet/minecraft/world/level/lighting/LayerLightEngine;ZZ)V a
	onNodeAdded (J)V k
	onNodeRemoved (J)V l
	queueAddSource (J)V p
	queueRemoveSource (J)V o
	recheckInconsistencyFlag ()V f
	repeatFirstLayer (Lnet/minecraft/world/level/chunk/DataLayer;)Lnet/minecraft/world/level/chunk/DataLayer; a
net/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap dpp$a
	currentLowestY b
	topSections c
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
	copy ()Lnet/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap; a
net/minecraft/world/level/lighting/SpatialLongSet dpq
	map a
net/minecraft/world/level/lighting/SpatialLongSet$InternalMap dpq$a
	OUTER_MASK h
	X_BITS a
	X_OFFSET g
	Y_BITS c
	Y_OFFSET d
	Z_BITS b
	Z_OFFSET e
	lastOuterKey j
	lastPos i
	minSize k
	addBit (J)Z c
	getFullKey (JI)J a
	getInnerKey (J)I b
	getOuterKey (J)J a
	removeBit (J)Z d
	removeFirstBit ()J a
	removeFromEntry (IJ)Z b
	removeFromNullEntry (J)Z e
	replaceBit (IJ)Z a
net/minecraft/world/level/material/EmptyFluid dps
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getBucket ()Lnet/minecraft/world/item/Item; a
	getExplosionResistance ()F c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	isEmpty ()Z b
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/FlowingFluid dpt
	CACHE_SIZE e
	FALLING a
	LEVEL b
	OCCLUSION_CACHE f
	shapes g
	affectsFlow (Lnet/minecraft/world/level/material/FluidState;)Z g
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canConvertToSource ()Z f
	canHoldFluid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canPassThrough (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	canPassThroughWall (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canSpreadTo (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/Fluid;)Z a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getCacheKey (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)S a
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getFlowing (IZ)Lnet/minecraft/world/level/material/FluidState; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getLegacyLevel (Lnet/minecraft/world/level/material/FluidState;)I e
	getNewLiquid (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSlopeDistance (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;)I a
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getSource (Z)Lnet/minecraft/world/level/material/FluidState; a
	getSpread (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Map; b
	getSpreadDelay (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)I a
	hasSameAbove (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	isSolidFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	isSourceBlockOfThisType (Lnet/minecraft/world/level/material/FluidState;)Z h
	isWaterHole (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	sourceNeighborCount (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)I a
	spread (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V a
	spreadTo (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)V a
	spreadToSides (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V a
net/minecraft/world/level/material/Fluid dpu
	FLUID_STATE_REGISTRY c
	builtInRegistryHolder b
	defaultFluidState a
	stateDefinition d
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/util/RandomSource;)V a
	builtInRegistryHolder ()Lnet/minecraft/core/Holder$Reference; l
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	defaultFluidState ()Lnet/minecraft/world/level/material/FluidState; h
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	getExplosionResistance ()F c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getPickupSound ()Ljava/util/Optional; k
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; g
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	is (Lnet/minecraft/tags/TagKey;)Z a
	isEmpty ()Z b
	isRandomlyTicking ()Z j
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/util/RandomSource;)V b
	registerDefaultState (Lnet/minecraft/world/level/material/FluidState;)V f
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V a
net/minecraft/world/level/material/FluidState dpv
	AMOUNT_FULL g
	AMOUNT_MAX b
	CODEC a
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createLegacyBlock ()Lnet/minecraft/world/level/block/state/BlockState; g
	getAmount ()I e
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; h
	getExplosionResistance ()F i
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; c
	getHeight (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight ()F d
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; d
	getTags ()Ljava/util/stream/Stream; k
	getType ()Lnet/minecraft/world/level/material/Fluid; a
	holder ()Lnet/minecraft/core/Holder; j
	is (Lnet/minecraft/core/HolderSet;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	is (Lnet/minecraft/world/level/material/Fluid;)Z b
	isEmpty ()Z c
	isRandomlyTicking ()Z f
	isSource ()Z b
	isSourceOfType (Lnet/minecraft/world/level/material/Fluid;)Z a
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	shouldRenderBackwardUpFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/material/Fluids dpw
	EMPTY a
	FLOWING_LAVA d
	FLOWING_WATER b
	LAVA e
	WATER c
	register (Ljava/lang/String;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/material/Fluid; a
net/minecraft/world/level/material/FogType dpx
	$VALUES e
	LAVA a
	NONE d
	POWDER_SNOW c
	WATER b
	$values ()[Lnet/minecraft/world/level/material/FogType; a
net/minecraft/world/level/material/LavaFluid dpy
	MIN_LEVEL_CUTOFF e
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/util/RandomSource;)V a
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	canConvertToSource ()Z f
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	fizz (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getExplosionResistance ()F c
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getPickupSound ()Ljava/util/Optional; k
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getSpreadDelay (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)I a
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	hasFlammableNeighbours (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isFlammable (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	isRandomlyTicking ()Z j
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/util/RandomSource;)V b
	spreadTo (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)V a
net/minecraft/world/level/material/LavaFluid$Flowing dpy$a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/LavaFluid$Source dpy$b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/Material dpz
	AIR a
	AMETHYST T
	BAMBOO C
	BAMBOO_SAPLING B
	BARRIER N
	BUBBLE_COLUMN k
	BUILDABLE_GLASS r
	CACTUS I
	CAKE S
	CLAY s
	CLOTH_DECORATION d
	DECORATION o
	DIRT t
	EGG R
	EXPLOSIVE E
	FIRE n
	FROGLIGHT W
	FROGSPAWN V
	GLASS G
	GRASS u
	HEAVY_METAL M
	ICE H
	ICE_SOLID v
	LAVA l
	LEAVES F
	METAL K
	MOSS P
	NETHER_WOOD A
	PISTON O
	PLANT e
	PORTAL c
	POWDER_SNOW U
	REPLACEABLE_FIREPROOF_PLANT h
	REPLACEABLE_PLANT g
	REPLACEABLE_WATER_PLANT i
	SAND w
	SCULK q
	SHULKER_SHELL y
	SNOW L
	SPONGE x
	STONE J
	STRUCTURAL_AIR b
	TOP_SNOW m
	VEGETABLE Q
	WATER j
	WATER_PLANT f
	WEB p
	WOOD z
	WOOL D
	blocksMotion Z
	color X
	flammable aa
	liquid ab
	pushReaction Y
	replaceable ad
	solid ae
	solidBlocking ac
	blocksMotion ()Z c
	getColor ()Lnet/minecraft/world/level/material/MaterialColor; h
	getPushReaction ()Lnet/minecraft/world/level/material/PushReaction; g
	isFlammable ()Z d
	isLiquid ()Z a
	isReplaceable ()Z e
	isSolid ()Z b
	isSolidBlocking ()Z f
net/minecraft/world/level/material/Material$Builder dpz$a
	blocksMotion b
	color g
	flammable c
	liquid d
	pushReaction a
	replaceable e
	solid f
	solidBlocking h
	build ()Lnet/minecraft/world/level/material/Material; h
	destroyOnPush ()Lnet/minecraft/world/level/material/Material$Builder; f
	flammable ()Lnet/minecraft/world/level/material/Material$Builder; d
	liquid ()Lnet/minecraft/world/level/material/Material$Builder; a
	noCollider ()Lnet/minecraft/world/level/material/Material$Builder; c
	nonSolid ()Lnet/minecraft/world/level/material/Material$Builder; b
	notPushable ()Lnet/minecraft/world/level/material/Material$Builder; g
	notSolidBlocking ()Lnet/minecraft/world/level/material/Material$Builder; i
	replaceable ()Lnet/minecraft/world/level/material/Material$Builder; e
net/minecraft/world/level/material/MaterialColor dqa
	CLAY j
	COLOR_BLACK D
	COLOR_BLUE z
	COLOR_BROWN A
	COLOR_CYAN x
	COLOR_GRAY v
	COLOR_GREEN B
	COLOR_LIGHT_BLUE r
	COLOR_LIGHT_GRAY w
	COLOR_LIGHT_GREEN t
	COLOR_MAGENTA q
	COLOR_ORANGE p
	COLOR_PINK u
	COLOR_PURPLE y
	COLOR_RED C
	COLOR_YELLOW s
	CRIMSON_HYPHAE ac
	CRIMSON_NYLIUM aa
	CRIMSON_STEM ab
	DEEPSLATE ah
	DIAMOND F
	DIRT k
	EMERALD H
	FIRE e
	GLOW_LICHEN aj
	GOLD E
	GRASS b
	ICE f
	LAPIS G
	MATERIAL_COLORS am
	METAL g
	NETHER J
	NONE a
	PLANT h
	PODZOL I
	QUARTZ o
	RAW_IRON ai
	SAND c
	SNOW i
	STONE l
	TERRACOTTA_BLACK Z
	TERRACOTTA_BLUE V
	TERRACOTTA_BROWN W
	TERRACOTTA_CYAN T
	TERRACOTTA_GRAY R
	TERRACOTTA_GREEN X
	TERRACOTTA_LIGHT_BLUE N
	TERRACOTTA_LIGHT_GRAY S
	TERRACOTTA_LIGHT_GREEN P
	TERRACOTTA_MAGENTA M
	TERRACOTTA_ORANGE L
	TERRACOTTA_PINK Q
	TERRACOTTA_PURPLE U
	TERRACOTTA_RED Y
	TERRACOTTA_WHITE K
	TERRACOTTA_YELLOW O
	WARPED_HYPHAE af
	WARPED_NYLIUM ad
	WARPED_STEM ae
	WARPED_WART_BLOCK ag
	WATER m
	WOOD n
	WOOL d
	col ak
	id al
	byId (I)Lnet/minecraft/world/level/material/MaterialColor; a
	byIdUnsafe (I)Lnet/minecraft/world/level/material/MaterialColor; c
	calculateRGBColor (Lnet/minecraft/world/level/material/MaterialColor$Brightness;)I a
	getColorFromPackedId (I)I b
	getPackedId (Lnet/minecraft/world/level/material/MaterialColor$Brightness;)B b
net/minecraft/world/level/material/MaterialColor$Brightness dqa$a
	$VALUES h
	HIGH c
	LOW a
	LOWEST d
	NORMAL b
	VALUES g
	id e
	modifier f
	$values ()[Lnet/minecraft/world/level/material/MaterialColor$Brightness; a
	byId (I)Lnet/minecraft/world/level/material/MaterialColor$Brightness; a
	byIdUnsafe (I)Lnet/minecraft/world/level/material/MaterialColor$Brightness; b
net/minecraft/world/level/material/PushReaction dqb
	$VALUES f
	BLOCK c
	DESTROY b
	IGNORE d
	NORMAL a
	PUSH_ONLY e
	$values ()[Lnet/minecraft/world/level/material/PushReaction; a
net/minecraft/world/level/material/WaterFluid dqc
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/util/RandomSource;)V a
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	canConvertToSource ()Z f
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getExplosionResistance ()F c
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getPickupSound ()Ljava/util/Optional; k
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
net/minecraft/world/level/material/WaterFluid$Flowing dqc$a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/WaterFluid$Source dqc$b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/pathfinder/AmphibiousNodeEvaluator dqf
	oldWalkableCost m
	oldWaterBorderCost n
	prefersShallowSwimming l
	done ()V b
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getFloorLevel (Lnet/minecraft/core/BlockPos;)D a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; a
	isAmphibious ()Z c
	isVerticalNeighborValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z b
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/pathfinder/BinaryHeap dqg
	heap a
	size b
	changeCost (Lnet/minecraft/world/level/pathfinder/Node;F)V a
	clear ()V a
	downHeap (I)V b
	getHeap ()[Lnet/minecraft/world/level/pathfinder/Node; f
	insert (Lnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Node; a
	isEmpty ()Z e
	peek ()Lnet/minecraft/world/level/pathfinder/Node; b
	pop ()Lnet/minecraft/world/level/pathfinder/Node; c
	remove (Lnet/minecraft/world/level/pathfinder/Node;)V b
	size ()I d
	upHeap (I)V a
net/minecraft/world/level/pathfinder/BlockPathTypes dqh
	$VALUES B
	BLOCKED a
	BREACH w
	COCOA z
	DAMAGE_CACTUS q
	DAMAGE_FIRE o
	DAMAGE_OTHER s
	DANGER_CACTUS p
	DANGER_FIRE n
	DANGER_OTHER r
	DANGER_POWDER_SNOW g
	DOOR_IRON_CLOSED v
	DOOR_OPEN t
	DOOR_WOOD_CLOSED u
	FENCE h
	LAVA i
	LEAVES x
	OPEN b
	POWDER_SNOW f
	RAIL l
	STICKY_HONEY y
	TRAPDOOR e
	UNPASSABLE_RAIL m
	WALKABLE c
	WALKABLE_DOOR d
	WATER j
	WATER_BORDER k
	malus A
	$values ()[Lnet/minecraft/world/level/pathfinder/BlockPathTypes; b
	getMalus ()F a
net/minecraft/world/level/pathfinder/FlyNodeEvaluator dqi
	pathTypeByPosCache l
	done ()V b
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getCachedBlockPathType (III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; b
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; a
	hasMalus (Lnet/minecraft/world/level/pathfinder/Node;)Z b
	isOpen (Lnet/minecraft/world/level/pathfinder/Node;)Z c
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/pathfinder/Node dqj
	cameFrom h
	closed i
	costMalus k
	f g
	g e
	h f
	hash m
	heapIdx d
	type l
	walkedDistance j
	x a
	y b
	z c
	asBlockPos ()Lnet/minecraft/core/BlockPos; a
	asVec3 ()Lnet/minecraft/world/phys/Vec3; b
	cloneAndMove (III)Lnet/minecraft/world/level/pathfinder/Node; a
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Node; b
	createHash (III)I b
	distanceManhattan (Lnet/minecraft/core/BlockPos;)F c
	distanceManhattan (Lnet/minecraft/world/level/pathfinder/Node;)F d
	distanceTo (Lnet/minecraft/core/BlockPos;)F a
	distanceTo (Lnet/minecraft/world/level/pathfinder/Node;)F a
	distanceToSqr (Lnet/minecraft/core/BlockPos;)F b
	distanceToSqr (Lnet/minecraft/world/level/pathfinder/Node;)F c
	distanceToXZ (Lnet/minecraft/world/level/pathfinder/Node;)F b
	inOpenSet ()Z c
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/pathfinder/NodeEvaluator dqk
	canFloat i
	canOpenDoors h
	canPassDoors g
	entityDepth f
	entityHeight e
	entityWidth d
	level a
	mob b
	nodes c
	canFloat ()Z f
	canOpenDoors ()Z e
	canPassDoors ()Z d
	done ()V b
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getNode (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/Node; b
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; a
	getTargetFromNode (Lnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Target; a
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
	setCanFloat (Z)V c
	setCanOpenDoors (Z)V b
	setCanPassDoors (Z)V a
net/minecraft/world/level/pathfinder/Path dql
	closedSet c
	distToTarget g
	nextNodeIndex e
	nodes a
	openSet b
	reached h
	target f
	targetNodes d
	advance ()V a
	canReach ()Z j
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Path; b
	getClosedSet ()[Lnet/minecraft/world/level/pathfinder/Node; l
	getDistToTarget ()F n
	getEndNode ()Lnet/minecraft/world/level/pathfinder/Node; d
	getEntityPosAtNode (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/phys/Vec3; a
	getNextEntityPos (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3; a
	getNextNode ()Lnet/minecraft/world/level/pathfinder/Node; h
	getNextNodeIndex ()I f
	getNextNodePos ()Lnet/minecraft/core/BlockPos; g
	getNode (I)Lnet/minecraft/world/level/pathfinder/Node; a
	getNodeCount ()I e
	getNodePos (I)Lnet/minecraft/core/BlockPos; d
	getOpenSet ()[Lnet/minecraft/world/level/pathfinder/Node; k
	getPreviousNode ()Lnet/minecraft/world/level/pathfinder/Node; i
	getTarget ()Lnet/minecraft/core/BlockPos; m
	isDone ()Z c
	notStarted ()Z b
	replaceNode (ILnet/minecraft/world/level/pathfinder/Node;)V a
	sameAs (Lnet/minecraft/world/level/pathfinder/Path;)Z a
	setDebug ([Lnet/minecraft/world/level/pathfinder/Node;[Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Set;)V a
	setNextNodeIndex (I)V c
	truncateNodes (I)V b
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/pathfinder/PathComputationType dqm
	$VALUES d
	AIR c
	LAND a
	WATER b
	$values ()[Lnet/minecraft/world/level/pathfinder/PathComputationType; a
net/minecraft/world/level/pathfinder/PathFinder dqn
	DEBUG e
	FUDGING a
	maxVisitedNodes c
	neighbors b
	nodeEvaluator d
	openSet f
	distance (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)F a
	findPath (Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Map;FIF)Lnet/minecraft/world/level/pathfinder/Path; a
	findPath (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;Ljava/util/Set;FIF)Lnet/minecraft/world/level/pathfinder/Path; a
	getBestH (Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Set;)F a
	reconstructPath (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/pathfinder/Path; a
net/minecraft/world/level/pathfinder/SwimNodeEvaluator dqo
	allowBreaching j
	pathTypesByPosCache k
	done ()V b
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getCachedBlockType (III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; b
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; a
	isDiagonalNodeValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z a
	isNodeValid (Lnet/minecraft/world/level/pathfinder/Node;)Z b
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/pathfinder/Target dqp
	bestHeuristic m
	bestNode n
	reached o
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Target; c
	getBestNode ()Lnet/minecraft/world/level/pathfinder/Node; d
	isReached ()Z f
	setReached ()V e
	updateBest (FLnet/minecraft/world/level/pathfinder/Node;)V a
net/minecraft/world/level/pathfinder/WalkNodeEvaluator dqq
	SPACE_BETWEEN_WALL_POSTS j
	collisionCache m
	oldWaterCost k
	pathTypesByPosCache l
	canReachWithoutCollision (Lnet/minecraft/world/level/pathfinder/Node;)Z b
	checkNeighbourBlocks (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	doesBlockHavePartialCollision (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z a
	done ()V b
	evaluateBlockPathType (Lnet/minecraft/world/level/BlockGetter;ZZLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	findAcceptedNode (IIIIDLnet/minecraft/core/Direction;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/Node; a
	getBlockPathType (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathTypeRaw (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; b
	getBlockPathTypeStatic (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathTypes (Lnet/minecraft/world/level/BlockGetter;IIIIIIZZLjava/util/EnumSet;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockedNode (III)Lnet/minecraft/world/level/pathfinder/Node; b
	getCachedBlockType (Lnet/minecraft/world/entity/Mob;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getFloorLevel (Lnet/minecraft/core/BlockPos;)D a
	getFloorLevel (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)D a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getNodeAndUpdateCostToMax (IIILnet/minecraft/world/level/pathfinder/BlockPathTypes;F)Lnet/minecraft/world/level/pathfinder/Node; a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; a
	getStartNode (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/Node; c
	hasCollisions (Lnet/minecraft/world/phys/AABB;)Z a
	hasPositiveMalus (Lnet/minecraft/core/BlockPos;)Z d
	isAmphibious ()Z c
	isBurningBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isDiagonalValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z a
	isNeighborValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z a
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/portal/PortalForcer dqs
	CREATE_RADIUS c
	FRAME_BOX f
	FRAME_BOX_END l
	FRAME_BOX_START k
	FRAME_HEIGHT d
	FRAME_HEIGHT_END h
	FRAME_HEIGHT_START g
	FRAME_WIDTH e
	FRAME_WIDTH_END j
	FRAME_WIDTH_START i
	NOTHING_FOUND m
	SEARCH_RADIUS b
	TICKET_RADIUS a
	level n
	canHostFrame (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/Direction;I)Z a
	createPortal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$Axis;)Ljava/util/Optional; a
	findPortalAround (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/border/WorldBorder;)Ljava/util/Optional; a
net/minecraft/world/level/portal/PortalInfo dqt
	pos a
	speed b
	xRot d
	yRot c
net/minecraft/world/level/portal/PortalShape dqu
	FRAME e
	MAX_HEIGHT b
	MAX_WIDTH a
	MIN_HEIGHT d
	MIN_WIDTH c
	axis g
	bottomLeft j
	height k
	level f
	numPortalBlocks i
	rightDir h
	width l
	calculateBottomLeft (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	calculateHeight ()I e
	calculateWidth ()I d
	createPortalBlocks ()V b
	createPortalInfo (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/BlockUtil$FoundRectangle;Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/EntityDimensions;Lnet/minecraft/world/phys/Vec3;FF)Lnet/minecraft/world/level/portal/PortalInfo; a
	findEmptyPortalShape (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$Axis;)Ljava/util/Optional; a
	findPortalShape (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Lnet/minecraft/core/Direction$Axis;)Ljava/util/Optional; a
	getDistanceUntilEdgeAboveFrame (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getDistanceUntilTop (Lnet/minecraft/core/BlockPos$MutableBlockPos;)I a
	getRelativePosition (Lnet/minecraft/BlockUtil$FoundRectangle;Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/EntityDimensions;)Lnet/minecraft/world/phys/Vec3; a
	hasTopFrame (Lnet/minecraft/core/BlockPos$MutableBlockPos;I)Z a
	isComplete ()Z c
	isEmpty (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValid ()Z a
net/minecraft/world/level/redstone/CollectingNeighborUpdater dqw
	LOGGER b
	addedThisLayer f
	count g
	level c
	maxChainedNeighborUpdates d
	stack e
	addAndRun (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/redstone/CollectingNeighborUpdater$NeighborUpdates;)V a
	neighborChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	runUpdates ()V a
	shapeUpdate (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II)V a
	updateNeighborsAtExceptFromFacing (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;)V a
net/minecraft/world/level/redstone/CollectingNeighborUpdater$FullNeighborUpdate dqw$a
	block c
	movedByPiston e
	neighborPos d
	pos b
	state a
	block ()Lnet/minecraft/world/level/block/Block; c
	movedByPiston ()Z e
	neighborPos ()Lnet/minecraft/core/BlockPos; d
	pos ()Lnet/minecraft/core/BlockPos; b
	runNext (Lnet/minecraft/world/level/Level;)Z a
	state ()Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/redstone/CollectingNeighborUpdater$MultiNeighborUpdate dqw$b
	idx d
	skipDirection c
	sourceBlock b
	sourcePos a
	runNext (Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/level/redstone/CollectingNeighborUpdater$NeighborUpdates dqw$c
	runNext (Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/level/redstone/CollectingNeighborUpdater$ShapeUpdate dqw$d
	direction a
	neighborPos d
	pos c
	state b
	updateFlags e
	direction ()Lnet/minecraft/core/Direction; a
	neighborPos ()Lnet/minecraft/core/BlockPos; d
	pos ()Lnet/minecraft/core/BlockPos; c
	runNext (Lnet/minecraft/world/level/Level;)Z a
	state ()Lnet/minecraft/world/level/block/state/BlockState; b
	updateFlags ()I e
net/minecraft/world/level/redstone/CollectingNeighborUpdater$SimpleNeighborUpdate dqw$e
	block b
	neighborPos c
	pos a
	block ()Lnet/minecraft/world/level/block/Block; b
	neighborPos ()Lnet/minecraft/core/BlockPos; c
	pos ()Lnet/minecraft/core/BlockPos; a
	runNext (Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/level/redstone/InstantNeighborUpdater dqx
	level b
	neighborChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	shapeUpdate (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II)V a
net/minecraft/world/level/redstone/NeighborUpdater dqy
	UPDATE_ORDER a
	executeShapeUpdate (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II)V a
	executeUpdate (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	neighborChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	shapeUpdate (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II)V a
	updateNeighborsAtExceptFromFacing (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;)V a
net/minecraft/world/level/redstone/Redstone dqz
	SIGNAL_MAX b
	SIGNAL_MIN a
	SIGNAL_NONE c
net/minecraft/world/level/saveddata/SavedData drb
	LOGGER a
	dirty b
	isDirty ()Z c
	save (Ljava/io/File;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setDirty ()V b
	setDirty (Z)V a
net/minecraft/world/level/saveddata/maps/MapBanner drc
	color b
	name c
	pos a
	fromWorld (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/saveddata/maps/MapBanner; a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
	getDecoration ()Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; c
	getId ()Ljava/lang/String; f
	getName ()Lnet/minecraft/network/chat/Component; d
	getPos ()Lnet/minecraft/core/BlockPos; a
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapBanner; a
	save ()Lnet/minecraft/nbt/CompoundTag; e
net/minecraft/world/level/saveddata/maps/MapDecoration drd
	name e
	rot d
	type a
	x b
	y c
	getImage ()B a
	getName ()Lnet/minecraft/network/chat/Component; g
	getRot ()B e
	getType ()Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; b
	getX ()B c
	getY ()B d
	renderOnFrame ()Z f
net/minecraft/world/level/saveddata/maps/MapDecoration$Type drd$a
	$VALUES F
	BANNER_BLACK z
	BANNER_BLUE v
	BANNER_BROWN w
	BANNER_CYAN t
	BANNER_GRAY r
	BANNER_GREEN x
	BANNER_LIGHT_BLUE n
	BANNER_LIGHT_GRAY s
	BANNER_LIME p
	BANNER_MAGENTA m
	BANNER_ORANGE l
	BANNER_PINK q
	BANNER_PURPLE u
	BANNER_RED y
	BANNER_WHITE k
	BANNER_YELLOW o
	BLUE_MARKER d
	FRAME b
	MANSION i
	MONUMENT j
	PLAYER a
	PLAYER_OFF_LIMITS h
	PLAYER_OFF_MAP g
	RED_MARKER c
	RED_X A
	TARGET_POINT f
	TARGET_X e
	icon B
	mapColor D
	renderedOnFrame C
	trackCount E
	$values ()[Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; f
	byIcon (B)Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; a
	getIcon ()B a
	getMapColor ()I d
	hasMapColor ()Z c
	isRenderedOnFrame ()Z b
	shouldTrackCount ()Z e
net/minecraft/world/level/saveddata/maps/MapFrame dre
	entityId c
	pos a
	rotation b
	frameId (Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	getEntityId ()I d
	getId ()Ljava/lang/String; e
	getPos ()Lnet/minecraft/core/BlockPos; b
	getRotation ()I c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapFrame; a
	save ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/saveddata/maps/MapIndex drf
	FILE_NAME a
	usedAuxIds b
	getFreeAuxValueForMap ()I a
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapIndex; b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/saveddata/maps/MapItemSavedData drg
	HALF_MAP_SIZE k
	LOGGER i
	MAP_SIZE j
	MAX_SCALE a
	TRACKED_DECORATION_LIMIT b
	bannerMarkers p
	carriedBy n
	carriedByPlayers o
	colors g
	decorations q
	dimension e
	frameMarkers r
	locked h
	scale f
	trackedDecorationCount s
	trackingPosition l
	unlimitedTracking m
	x c
	z d
	addClientSideDecorations (Ljava/util/List;)V a
	addDecoration (Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;Lnet/minecraft/world/level/LevelAccessor;Ljava/lang/String;DDDLnet/minecraft/network/chat/Component;)V a
	addTargetDecoration (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;)V a
	checkBanners (Lnet/minecraft/world/level/BlockGetter;II)V a
	createForClient (BZLnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	createFresh (DDBZZLnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getBanners ()Ljava/util/Collection; d
	getDecorations ()Ljava/lang/Iterable; f
	getHoldingPlayer (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer; a
	getUpdatePacket (ILnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	isExplorationMap ()Z e
	isTrackedCountOverLimit (I)Z b
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; b
	locked ()Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	removeDecoration (Ljava/lang/String;)V a
	removedFromFrame (Lnet/minecraft/core/BlockPos;I)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	scaled (I)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	setColor (IIB)V b
	setColorsDirty (II)V a
	setDecorationsDirty ()V g
	tickCarriedBy (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	toggleBanner (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	updateColor (IIB)Z a
net/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer drg$a
	dirtyData d
	dirtyDecorations i
	maxDirtyX g
	maxDirtyY h
	minDirtyX e
	minDirtyY f
	player a
	step b
	tick j
	createPatch ()Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData$MapPatch; a
	markColorsDirty (II)V a
	markDecorationsDirty ()V b
	nextUpdatePacket (I)Lnet/minecraft/network/protocol/Packet; a
net/minecraft/world/level/saveddata/maps/MapItemSavedData$MapPatch drg$b
	height d
	mapColors e
	startX a
	startY b
	width c
	applyToMap (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
net/minecraft/world/level/storage/CommandStorage drj
	ID_PREFIX a
	namespaces b
	storage c
	createId (Ljava/lang/String;)Ljava/lang/String; b
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/nbt/CompoundTag; a
	keys ()Ljava/util/stream/Stream; a
	newStorage (Ljava/lang/String;)Lnet/minecraft/world/level/storage/CommandStorage$Container; a
	set (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/storage/CommandStorage$Container drj$a
	TAG_CONTENTS a
	storage b
	get (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	getKeys (Ljava/lang/String;)Ljava/util/stream/Stream; b
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/storage/CommandStorage$Container; b
	put (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/storage/DataVersion drk
	MAIN_SERIES a
	series c
	version b
	getSeries ()Ljava/lang/String; b
	getVersion ()I c
	isCompatible (Lnet/minecraft/world/level/storage/DataVersion;)Z a
	isSideSeries ()Z a
net/minecraft/world/level/storage/DerivedLevelData drl
	worldData a
	wrapped b
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getAllowCommands ()Z o
	getClearWeatherTime ()I h
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getLevelName ()Ljava/lang/String; g
	getRainTime ()I l
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; u
	getSpawnAngle ()F d
	getThunderTime ()I j
	getWanderingTraderId ()Ljava/util/UUID; x
	getWanderingTraderSpawnChance ()I w
	getWanderingTraderSpawnDelay ()I v
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; r
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isInitialized ()Z p
	isRaining ()Z k
	isThundering ()Z i
	setClearWeatherTime (I)V a
	setDayTime (J)V b
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setRainTime (I)V f
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/world/level/storage/DimensionDataStorage drm
	LOGGER a
	cache b
	dataFolder d
	fixerUpper c
	computeIfAbsent (Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; a
	get (Ljava/util/function/Function;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; a
	getDataFile (Ljava/lang/String;)Ljava/io/File; a
	isGzip (Ljava/io/PushbackInputStream;)Z a
	readSavedData (Ljava/util/function/Function;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; b
	readTagFromDisk (Ljava/lang/String;I)Lnet/minecraft/nbt/CompoundTag; a
	save ()V a
	set (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/SavedData;)V a
net/minecraft/world/level/storage/LevelData drn
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getSpawnAngle ()F d
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isRaining ()Z k
	isThundering ()Z i
	setRaining (Z)V b
net/minecraft/world/level/storage/LevelResource dro
	DATAPACK_DIR j
	GENERATED_DIR i
	ICON_FILE g
	LEVEL_DATA_FILE e
	LOCK_FILE h
	MAP_RESOURCE_FILE k
	OLD_LEVEL_DATA_FILE f
	PLAYER_ADVANCEMENTS_DIR a
	PLAYER_DATA_DIR c
	PLAYER_OLD_DATA_DIR d
	PLAYER_STATS_DIR b
	ROOT l
	id m
	getId ()Ljava/lang/String; a
net/minecraft/world/level/storage/LevelStorageException drp
	messageComponent a
	getMessageComponent ()Lnet/minecraft/network/chat/Component; a
net/minecraft/world/level/storage/LevelStorageSource drq
	FORMATTER b
	LOGGER a
	OLD_SETTINGS_KEYS c
	TAG_DATA d
	backupDir f
	baseDir e
	fixerUpper g
	createAccess (Ljava/lang/String;)Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess; c
	createDefault (Ljava/nio/file/Path;)Lnet/minecraft/world/level/storage/LevelStorageSource; a
	findLevelCandidates ()Lnet/minecraft/world/level/storage/LevelStorageSource$LevelCandidates; b
	getBackupPath ()Ljava/nio/file/Path; d
	getBaseDir ()Ljava/nio/file/Path; c
	getDataPacks (Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/world/level/DataPackConfig; a
	getLevelData (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/DataPackConfig;Lcom/mojang/serialization/Lifecycle;)Ljava/util/function/BiFunction; a
	getName ()Ljava/lang/String; a
	getStorageVersion ()I e
	isNewLevelIdAcceptable (Ljava/lang/String;)Z a
	levelExists (Ljava/lang/String;)Z b
	levelSummaryReader (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelDirectory;Z)Ljava/util/function/BiFunction; a
	loadLevelSummaries (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelCandidates;)Ljava/util/concurrent/CompletableFuture; a
	readDataPackConfig (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/DataPackConfig; a
	readLevelData (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelDirectory;Ljava/util/function/BiFunction;)Ljava/lang/Object; a
	readLightweightData (Ljava/nio/file/Path;)Lnet/minecraft/nbt/Tag; b
	readWorldGenSettings (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/world/level/storage/LevelStorageSource$LevelCandidates drq$a
	levels a
	isEmpty ()Z a
	levels ()Ljava/util/List; b
net/minecraft/world/level/storage/LevelStorageSource$LevelDirectory drq$b
	path a
	corruptedDataFile (Ljava/time/LocalDateTime;)Ljava/nio/file/Path; a
	dataFile ()Ljava/nio/file/Path; b
	directoryName ()Ljava/lang/String; a
	iconFile ()Ljava/nio/file/Path; d
	lockFile ()Ljava/nio/file/Path; e
	oldDataFile ()Ljava/nio/file/Path; c
	path ()Ljava/nio/file/Path; f
	resourcePath (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path; a
net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess drq$c
	levelDirectory c
	levelId d
	lock b
	resources e
	checkLock ()V h
	createPlayerStorage ()Lnet/minecraft/world/level/storage/PlayerDataStorage; b
	deleteLevel ()V f
	getDataPacks ()Lnet/minecraft/world/level/DataPackConfig; d
	getDataTag (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/DataPackConfig;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/world/level/storage/WorldData; a
	getDimensionPath (Lnet/minecraft/resources/ResourceKey;)Ljava/nio/file/Path; a
	getIconFile ()Ljava/util/Optional; e
	getLevelId ()Ljava/lang/String; a
	getLevelPath (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path; a
	getSummary ()Lnet/minecraft/world/level/storage/LevelSummary; c
	makeWorldBackup ()J g
	renameLevel (Ljava/lang/String;)V a
	saveDataTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/storage/WorldData;)V a
	saveDataTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/storage/WorldData;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/storage/LevelSummary drr
	icon f
	info g
	levelId c
	levelVersion b
	locked e
	requiresManualConversion d
	settings a
	askToOpenWorld ()Z m
	backupStatus ()Lnet/minecraft/world/level/storage/LevelSummary$BackupStatus; n
	compareTo (Lnet/minecraft/world/level/storage/LevelSummary;)I a
	createInfo ()Lnet/minecraft/network/chat/Component; s
	getGameMode ()Lnet/minecraft/world/level/GameType; g
	getIcon ()Ljava/nio/file/Path; c
	getInfo ()Lnet/minecraft/network/chat/Component; r
	getLastPlayed ()J e
	getLevelId ()Ljava/lang/String; a
	getLevelName ()Ljava/lang/String; b
	getSettings ()Lnet/minecraft/world/level/LevelSettings; f
	getWorldVersionName ()Lnet/minecraft/network/chat/MutableComponent; j
	hasCheats ()Z i
	isCompatible ()Z q
	isDisabled ()Z p
	isHardcore ()Z h
	isLocked ()Z o
	levelVersion ()Lnet/minecraft/world/level/storage/LevelVersion; k
	markVersionInList ()Z l
	requiresManualConversion ()Z d
net/minecraft/world/level/storage/LevelSummary$BackupStatus drr$a
	$VALUES g
	DOWNGRADE b
	NONE a
	UPGRADE_TO_SNAPSHOT c
	severe e
	shouldBackup d
	translationKey f
	$values ()[Lnet/minecraft/world/level/storage/LevelSummary$BackupStatus; d
	getTranslationKey ()Ljava/lang/String; c
	isSevere ()Z b
	shouldBackup ()Z a
net/minecraft/world/level/storage/LevelVersion drs
	lastPlayed b
	levelDataVersion a
	minecraftVersion d
	minecraftVersionName c
	snapshot e
	lastPlayed ()J b
	levelDataVersion ()I a
	minecraftVersion ()Lnet/minecraft/world/level/storage/DataVersion; d
	minecraftVersionName ()Ljava/lang/String; c
	parse (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/storage/LevelVersion; a
	snapshot ()Z e
net/minecraft/world/level/storage/PlayerDataStorage drt
	LOGGER b
	fixerUpper a
	playerDir c
	getSeenPlayers ()[Ljava/lang/String; a
	load (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/nbt/CompoundTag; b
	save (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/storage/PrimaryLevelData dru
	LOGGER e
	PLAYER a
	WORLD_GEN_SETTINGS b
	clearWeatherTime t
	customBossEvents C
	dayTime n
	difficultyLocked z
	endDragonFightData B
	fixerUpper o
	gameTime m
	initialized y
	knownServerBrands G
	loadedPlayerTag r
	playerDataVersion p
	rainTime v
	raining u
	scheduledEvents I
	settings f
	spawnAngle l
	thunderTime x
	thundering w
	upgradedPlayerTag q
	version s
	wanderingTraderId F
	wanderingTraderSpawnChance E
	wanderingTraderSpawnDelay D
	wasModded H
	worldBorder A
	worldGenSettings g
	worldGenSettingsLifecycle h
	xSpawn i
	ySpawn j
	zSpawn k
	createTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	endDragonFightData ()Lnet/minecraft/nbt/CompoundTag; C
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getAllowCommands ()Z o
	getClearWeatherTime ()I h
	getCustomBossEvents ()Lnet/minecraft/nbt/CompoundTag; E
	getDataPackConfig ()Lnet/minecraft/world/level/DataPackConfig; D
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getKnownServerBrands ()Ljava/util/Set; G
	getLevelName ()Ljava/lang/String; g
	getLevelSettings ()Lnet/minecraft/world/level/LevelSettings; I
	getLoadedPlayerTag ()Lnet/minecraft/nbt/CompoundTag; y
	getRainTime ()I l
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; u
	getSpawnAngle ()F d
	getThunderTime ()I j
	getVersion ()I z
	getWanderingTraderId ()Ljava/util/UUID; x
	getWanderingTraderSpawnChance ()I w
	getWanderingTraderSpawnDelay ()I v
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; r
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isInitialized ()Z p
	isRaining ()Z k
	isThundering ()Z i
	overworldData ()Lnet/minecraft/world/level/storage/ServerLevelData; H
	parse (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/LevelSettings;Lnet/minecraft/world/level/storage/LevelVersion;Lnet/minecraft/world/level/levelgen/WorldGenSettings;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/world/level/storage/PrimaryLevelData; a
	setClearWeatherTime (I)V a
	setCustomBossEvents (Lnet/minecraft/nbt/CompoundTag;)V b
	setDataPackConfig (Lnet/minecraft/world/level/DataPackConfig;)V a
	setDayTime (J)V b
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V d
	setEndDragonFightData (Lnet/minecraft/nbt/CompoundTag;)V a
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setModdedInfo (Ljava/lang/String;Z)V a
	setRainTime (I)V f
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setTagData (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/CompoundTag;)V a
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
	updatePlayerTag ()V J
	wasModded ()Z F
	worldGenSettings ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; A
	worldGenSettingsLifecycle ()Lcom/mojang/serialization/Lifecycle; B
net/minecraft/world/level/storage/ServerLevelData drv
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getAllowCommands ()Z o
	getClearWeatherTime ()I h
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getLevelName ()Ljava/lang/String; g
	getRainTime ()I l
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; u
	getThunderTime ()I j
	getWanderingTraderId ()Ljava/util/UUID; x
	getWanderingTraderSpawnChance ()I w
	getWanderingTraderSpawnDelay ()I v
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; r
	isInitialized ()Z p
	setClearWeatherTime (I)V a
	setDayTime (J)V b
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setRainTime (I)V f
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
net/minecraft/world/level/storage/WorldData drw
	ANVIL_VERSION_ID c
	MCREGION_VERSION_ID d
	createTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	endDragonFightData ()Lnet/minecraft/nbt/CompoundTag; C
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getAllowCommands ()Z o
	getCustomBossEvents ()Lnet/minecraft/nbt/CompoundTag; E
	getDataPackConfig ()Lnet/minecraft/world/level/DataPackConfig; D
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getKnownServerBrands ()Ljava/util/Set; G
	getLevelName ()Ljava/lang/String; g
	getLevelSettings ()Lnet/minecraft/world/level/LevelSettings; I
	getLoadedPlayerTag ()Lnet/minecraft/nbt/CompoundTag; y
	getStorageVersionName (I)Ljava/lang/String; i
	getVersion ()I z
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	overworldData ()Lnet/minecraft/world/level/storage/ServerLevelData; H
	setCustomBossEvents (Lnet/minecraft/nbt/CompoundTag;)V b
	setDataPackConfig (Lnet/minecraft/world/level/DataPackConfig;)V a
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V d
	setEndDragonFightData (Lnet/minecraft/nbt/CompoundTag;)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setModdedInfo (Ljava/lang/String;Z)V a
	wasModded ()Z F
	worldGenSettings ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; A
	worldGenSettingsLifecycle ()Lcom/mojang/serialization/Lifecycle; B
net/minecraft/world/level/storage/WritableLevelData drx
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/world/level/storage/loot/BuiltInLootTables dry
	ABANDONED_MINESHAFT u
	ANCIENT_CITY P
	ANCIENT_CITY_ICE_BOX Q
	ARMORER_GIFT an
	BASTION_BRIDGE N
	BASTION_HOGLIN_STABLE O
	BASTION_OTHER M
	BASTION_TREASURE L
	BURIED_TREASURE G
	BUTCHER_GIFT ao
	CARTOGRAPHER_GIFT ap
	CAT_MORNING_GIFT am
	CLERIC_GIFT aq
	DESERT_PYRAMID z
	EMPTY a
	END_CITY_TREASURE c
	FARMER_GIFT ar
	FISHERMAN_GIFT as
	FISHING ai
	FISHING_FISH al
	FISHING_JUNK aj
	FISHING_TREASURE ak
	FLETCHER_GIFT at
	IGLOO_CHEST C
	IMMUTABLE_LOCATIONS aC
	JUNGLE_TEMPLE A
	JUNGLE_TEMPLE_DISPENSER B
	LEATHERWORKER_GIFT au
	LIBRARIAN_GIFT av
	LOCATIONS aB
	MASON_GIFT aw
	NETHER_BRIDGE v
	PIGLIN_BARTERING aA
	PILLAGER_OUTPOST K
	RUINED_PORTAL R
	SHEEP_BLACK ah
	SHEEP_BLUE ad
	SHEEP_BROWN ae
	SHEEP_CYAN ab
	SHEEP_GRAY Z
	SHEEP_GREEN af
	SHEEP_LIGHT_BLUE V
	SHEEP_LIGHT_GRAY aa
	SHEEP_LIME X
	SHEEP_MAGENTA U
	SHEEP_ORANGE T
	SHEEP_PINK Y
	SHEEP_PURPLE ac
	SHEEP_RED ag
	SHEEP_WHITE S
	SHEEP_YELLOW W
	SHEPHERD_GIFT ax
	SHIPWRECK_MAP H
	SHIPWRECK_SUPPLY I
	SHIPWRECK_TREASURE J
	SIMPLE_DUNGEON d
	SPAWN_BONUS_CHEST b
	STRONGHOLD_CORRIDOR y
	STRONGHOLD_CROSSING x
	STRONGHOLD_LIBRARY w
	TOOLSMITH_GIFT ay
	UNDERWATER_RUIN_BIG F
	UNDERWATER_RUIN_SMALL E
	VILLAGE_ARMORER g
	VILLAGE_BUTCHER k
	VILLAGE_CARTOGRAPHER h
	VILLAGE_DESERT_HOUSE p
	VILLAGE_FISHER m
	VILLAGE_FLETCHER l
	VILLAGE_MASON i
	VILLAGE_PLAINS_HOUSE q
	VILLAGE_SAVANNA_HOUSE t
	VILLAGE_SHEPHERD j
	VILLAGE_SNOWY_HOUSE s
	VILLAGE_TAIGA_HOUSE r
	VILLAGE_TANNERY n
	VILLAGE_TEMPLE o
	VILLAGE_TOOLSMITH f
	VILLAGE_WEAPONSMITH e
	WEAPONSMITH_GIFT az
	WOODLAND_MANSION D
	all ()Ljava/util/Set; a
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	register (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/Deserializers drz
	createConditionSerializer ()Lcom/google/gson/GsonBuilder; a
	createFunctionSerializer ()Lcom/google/gson/GsonBuilder; b
	createLootTableSerializer ()Lcom/google/gson/GsonBuilder; c
net/minecraft/world/level/storage/loot/GsonAdapterFactory dsa
	builder (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder; a
net/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder dsa$a
	defaultType f
	elementName b
	inlineType e
	registry a
	typeGetter d
	typeKey c
	build ()Ljava/lang/Object; a
	withDefaultType (Lnet/minecraft/world/level/storage/loot/SerializerType;)Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder; a
	withInlineSerializer (Lnet/minecraft/world/level/storage/loot/SerializerType;Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$InlineSerializer;)Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder; a
net/minecraft/world/level/storage/loot/GsonAdapterFactory$InlineSerializer dsa$b
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	serialize (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/GsonAdapterFactory$JsonAdapter dsa$c
	defaultType e
	elementName b
	inlineType f
	registry a
	typeGetter d
	typeKey c
net/minecraft/world/level/storage/loot/IntRange dsb
	limiter c
	max b
	min a
	predicate d
	clamp (Lnet/minecraft/world/level/storage/loot/LootContext;I)I a
	exact (I)Lnet/minecraft/world/level/storage/loot/IntRange; a
	getReferencedContextParams ()Ljava/util/Set; a
	lowerBound (I)Lnet/minecraft/world/level/storage/loot/IntRange; b
	range (II)Lnet/minecraft/world/level/storage/loot/IntRange; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;I)Z b
	upperBound (I)Lnet/minecraft/world/level/storage/loot/IntRange; c
net/minecraft/world/level/storage/loot/IntRange$IntChecker dsb$a
net/minecraft/world/level/storage/loot/IntRange$IntLimiter dsb$b
net/minecraft/world/level/storage/loot/IntRange$Serializer dsb$c
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/IntRange; a
	serialize (Lnet/minecraft/world/level/storage/loot/IntRange;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/ItemModifierManager dsc
	GSON b
	LOGGER a
	functions e
	lootTables d
	predicateManager c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; a
	get (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; a
	getKeys ()Ljava/util/Set; a
net/minecraft/world/level/storage/loot/ItemModifierManager$FunctionSequence dsc$a
	compositeFunction b
	functions a
	apply (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
net/minecraft/world/level/storage/loot/LootContext dsd
	conditions f
	dynamicDrops i
	level c
	lootTables d
	luck b
	params h
	random a
	visitedConditions g
	visitedTables e
	addDynamicDrops (Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/Consumer;)V a
	addVisitedCondition (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Z a
	addVisitedTable (Lnet/minecraft/world/level/storage/loot/LootTable;)Z a
	getCondition (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; b
	getLevel ()Lnet/minecraft/server/level/ServerLevel; c
	getLootTable (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/LootTable; a
	getLuck ()F b
	getParam (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; b
	getParamOrNull (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; c
	getRandom ()Lnet/minecraft/util/RandomSource; a
	hasParam (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Z a
	removeVisitedCondition (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)V b
	removeVisitedTable (Lnet/minecraft/world/level/storage/loot/LootTable;)V b
net/minecraft/world/level/storage/loot/LootContext$Builder dsd$a
	dynamicDrops c
	level a
	luck e
	params b
	random d
	create (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/LootContext; a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; a
	getOptionalParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; b
	getParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; a
	withDynamicDrop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootContext$DynamicDrop;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withLuck (F)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withOptionalParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;Ljava/lang/Object;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; b
	withOptionalRandomSeed (J)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withOptionalRandomSeed (JLnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;Ljava/lang/Object;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withRandom (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
net/minecraft/world/level/storage/loot/LootContext$DynamicDrop dsd$b
net/minecraft/world/level/storage/loot/LootContext$EntityTarget dsd$c
	$VALUES g
	DIRECT_KILLER c
	KILLER b
	KILLER_PLAYER d
	THIS a
	name e
	param f
	$values ()[Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; b
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; a
	getParam ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam; a
net/minecraft/world/level/storage/loot/LootContext$EntityTarget$Serializer dsd$c$a
	read (Lcom/google/gson/stream/JsonReader;)Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; a
	write (Lcom/google/gson/stream/JsonWriter;Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)V a
net/minecraft/world/level/storage/loot/LootContextUser dse
	getReferencedContextParams ()Ljava/util/Set; b
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootPool dsf
	bonusRolls g
	compositeCondition c
	compositeFunction e
	conditions b
	entries a
	functions d
	rolls f
	addRandomItem (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V b
	addRandomItems (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	lootPool ()Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootPool$Builder dsf$a
	bonusRolls e
	conditions b
	entries a
	functions c
	rolls d
	add (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; b
	build ()Lnet/minecraft/world/level/storage/loot/LootPool; b
	setBonusRolls (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; b
	setRolls (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	unwrap ()Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	unwrap ()Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; d
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; b
net/minecraft/world/level/storage/loot/LootPool$Serializer dsf$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/LootPool; a
	serialize (Lnet/minecraft/world/level/storage/loot/LootPool;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/LootTable dsg
	DEFAULT_PARAM_SET b
	EMPTY a
	LOGGER c
	compositeFunction g
	functions f
	paramSet d
	pools e
	createStackSplitter (Ljava/util/function/Consumer;)Ljava/util/function/Consumer; a
	fill (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getAvailableSlots (Lnet/minecraft/world/Container;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getParamSet ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootContext;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList; a
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)V b
	getRandomItemsRaw (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)V a
	lootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	shuffleAndSplitItems (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;ILnet/minecraft/util/RandomSource;)V a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootTable$Builder dsg$a
	functions b
	paramSet c
	pools a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; b
	build ()Lnet/minecraft/world/level/storage/loot/LootTable; b
	setParamSet (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	unwrap ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	unwrap ()Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; c
	withPool (Lnet/minecraft/world/level/storage/loot/LootPool$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
net/minecraft/world/level/storage/loot/LootTable$Serializer dsg$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/LootTable; a
	serialize (Lnet/minecraft/world/level/storage/loot/LootTable;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/LootTables dsh
	GSON b
	LOGGER a
	predicateManager d
	tables c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/LootTable; a
	getIds ()Ljava/util/Set; a
	serialize (Lnet/minecraft/world/level/storage/loot/LootTable;)Lcom/google/gson/JsonElement; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootTable;)V a
net/minecraft/world/level/storage/loot/PredicateManager dsi
	GSON b
	LOGGER a
	conditions c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; a
	getKeys ()Ljava/util/Set; a
net/minecraft/world/level/storage/loot/PredicateManager$CompositePredicate dsi$a
	composedPredicate b
	terms a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/Serializer dsj
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/SerializerType dsk
	serializer a
	getSerializer ()Lnet/minecraft/world/level/storage/loot/Serializer; a
net/minecraft/world/level/storage/loot/ValidationContext dsl
	conditionResolver d
	context b
	contextCache h
	params c
	problems a
	tableResolver f
	visitedConditions e
	visitedTables g
	enterCondition (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/ValidationContext; b
	enterTable (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/ValidationContext; a
	forChild (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/ValidationContext; b
	getContext ()Ljava/lang/String; b
	getProblems ()Lcom/google/common/collect/Multimap; a
	hasVisitedCondition (Lnet/minecraft/resources/ResourceLocation;)Z b
	hasVisitedTable (Lnet/minecraft/resources/ResourceLocation;)Z a
	reportProblem (Ljava/lang/String;)V a
	resolveCondition (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; d
	resolveLootTable (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/LootTable; c
	setParams (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/ValidationContext; a
	validateUser (Lnet/minecraft/world/level/storage/loot/LootContextUser;)V a
net/minecraft/world/level/storage/loot/entries/AlternativesEntry dsm
	alternatives (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	alternatives ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder dsm$a
	entries a
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; ad_
	otherwise (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer dsn
	ALWAYS_FALSE a
	ALWAYS_TRUE b
net/minecraft/world/level/storage/loot/entries/CompositeEntryBase dso
	children c
	composedChildren e
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	createSerializer (Lnet/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor dso$a
net/minecraft/world/level/storage/loot/entries/DynamicLoot dsp
	name i
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	dynamicEntry (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/DynamicLoot$Serializer dsp$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/DynamicLoot; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/DynamicLoot;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/EmptyLootItem dsq
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	emptyItem ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/EmptyLootItem$Serializer dsq$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/EmptyLootItem; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
net/minecraft/world/level/storage/loot/entries/EntryGroup dsr
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	list ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; a
net/minecraft/world/level/storage/loot/entries/EntryGroup$Builder dsr$a
	entries a
	append (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; b
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; ad_
net/minecraft/world/level/storage/loot/entries/LootItem dss
	item i
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	lootTableItem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
net/minecraft/world/level/storage/loot/entries/LootItem$Serializer dss$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootItem; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootItem;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolEntries dst
	ALTERNATIVES f
	DYNAMIC d
	EMPTY a
	GROUP h
	ITEM b
	REFERENCE c
	SEQUENCE g
	TAG e
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/LootPoolEntry dsu
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getWeight (F)I a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer dsv
	compositeCondition c
	conditions d
	canRun (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder dsv$a
	conditions a
	append (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; b
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getConditions ()[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; f
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; ad_
	otherwise (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	then (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; e
	unwrap ()Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; d
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; a
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; b
net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer dsv$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	deserializeCustom (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V b
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryType dsw
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer dsx
	DEFAULT_QUALITY e
	DEFAULT_WEIGHT c
	compositeFunction i
	entry j
	functions h
	quality g
	weight f
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	simpleBuilder (Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder dsx$a
	functions c
	quality b
	weight a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; b
	getFunctions ()[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; a
	setQuality (I)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	setWeight (I)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	unwrap ()Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; c
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder dsx$b
	constructor c
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; ad_
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder; g
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryBase dsx$c
	getWeight (F)I a
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor dsx$d
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Serializer dsx$e
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	deserializeCustom (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	deserializeCustom (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootTableReference dsy
	name i
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	lootTableReference (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootTableReference$Serializer dsy$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootTableReference; a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootTableReference;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/SequentialEntry dsz
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	sequential ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; a
net/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder dsz$a
	entries a
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; ad_
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; a
	then (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; c
net/minecraft/world/level/storage/loot/entries/TagEntry dta
	expand j
	tag i
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	expandTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	expandTag (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)Z a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	tagContents (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
net/minecraft/world/level/storage/loot/entries/TagEntry$Serializer dta$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/TagEntry; a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/TagEntry;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount dtc
	FORMULAS a
	enchantment b
	formula c
	addBonusBinomialDistributionCount (Lnet/minecraft/world/item/enchantment/Enchantment;FI)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	addOreBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	addUniformBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; b
	addUniformBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;I)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$BinomialWithBonusCount dtc$a
	TYPE a
	extraRounds b
	probability c
	calculateNewCount (Lnet/minecraft/util/RandomSource;II)I a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula; a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula dtc$b
	calculateNewCount (Lnet/minecraft/util/RandomSource;II)I a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaDeserializer dtc$c
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$OreDrops dtc$d
	TYPE a
	calculateNewCount (Lnet/minecraft/util/RandomSource;II)I a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula; a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Serializer dtc$e
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$UniformBonusCount dtc$f
	TYPE a
	bonusMultiplier b
	calculateNewCount (Lnet/minecraft/util/RandomSource;II)I a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula; a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay dtd
	explosionDecay ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay$Serializer dtd$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
net/minecraft/world/level/storage/loot/functions/CopyBlockState dte
	block a
	properties b
	copyState (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	serialize (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/String; a
net/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder dte$a
	block a
	properties b
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	copy (Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/CopyBlockState$Serializer dte$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/CopyNameFunction dtf
	source a
	copyName (Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource dtf$a
	$VALUES g
	BLOCK_ENTITY d
	KILLER b
	KILLER_PLAYER c
	THIS a
	name e
	param f
	$values ()[Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource; a
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource; a
net/minecraft/world/level/storage/loot/functions/CopyNameFunction$Serializer dtf$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction dtg
	operations b
	source a
	compileNbtPath (Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	copyData (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	copyData (Lnet/minecraft/world/level/storage/loot/providers/nbt/NbtProvider;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder dtg$a
	ops b
	source a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	copy (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	copy (Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation dtg$b
	op e
	sourcePath b
	sourcePathText a
	targetPath d
	targetPathText c
	apply (Ljava/util/function/Supplier;Lnet/minecraft/nbt/Tag;)V a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation; a
	toJson ()Lcom/google/gson/JsonObject; a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy dtg$c
	$VALUES e
	APPEND b
	MERGE c
	REPLACE a
	name d
	$values ()[Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy; a
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy; a
	merge (Lnet/minecraft/nbt/Tag;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Ljava/util/List;)V a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Serializer dtg$d
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction dth
	LOGGER a
	enchantments b
	enchantItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/ItemStack; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	randomApplicableEnchantment ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	randomEnchantment ()Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; c
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder dth$a
	enchantments a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	withEnchantment (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Serializer dth$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction dti
	levels a
	treasure b
	enchantWithLevels (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder dti$a
	levels a
	treasure b
	allowTreasure ()Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; e
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Serializer dti$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction dtj
	DEFAULT_DECORATION c
	DEFAULT_DECORATION_NAME b
	DEFAULT_DESTINATION a
	DEFAULT_SEARCH_RADIUS e
	DEFAULT_SKIP_EXISTING f
	DEFAULT_ZOOM d
	LOGGER h
	destination i
	mapDecoration j
	searchRadius l
	skipKnownStructures m
	zoom k
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	makeExplorationMap ()Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; c
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder dtj$a
	destination a
	mapDecoration b
	searchRadius d
	skipKnownStructures e
	zoom c
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	setDestination (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setMapDecoration (Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setSearchRadius (I)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setSkipKnownStructures (Z)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setZoom (B)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Serializer dtj$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	readStructure (Lcom/google/gson/JsonObject;)Lnet/minecraft/tags/TagKey; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/FillPlayerHead dtk
	entityTarget a
	fillPlayerHead (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/FillPlayerHead$Serializer dtk$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/FillPlayerHead; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/FillPlayerHead;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/FunctionUserBuilder dtl
	apply (Ljava/lang/Iterable;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; b
	apply ([Ljava/lang/Object;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; a
	unwrap ()Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; c
net/minecraft/world/level/storage/loot/functions/LimitCount dtm
	limiter a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	limitCount (Lnet/minecraft/world/level/storage/loot/IntRange;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/LimitCount$Serializer dtm$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LimitCount; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LimitCount;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction dtn
	compositePredicates a
	predicates g
	apply (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	simpleBuilder (Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder dtn$a
	conditions a
	getConditions ()[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; g
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; f
	unwrap ()Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; d
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; b
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder dtn$b
	constructor a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder; a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Serializer dtn$c
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/LootItemFunction dto
	decorate (Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/util/function/Consumer; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
net/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder dto$a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
net/minecraft/world/level/storage/loot/functions/LootItemFunctionType dtp
net/minecraft/world/level/storage/loot/functions/LootItemFunctions dtq
	APPLY_BONUS q
	COPY_NAME n
	COPY_NBT v
	COPY_STATE w
	ENCHANT_RANDOMLY d
	ENCHANT_WITH_LEVELS c
	EXPLORATION_MAP l
	EXPLOSION_DECAY s
	FILL_PLAYER_HEAD u
	FURNACE_SMELT g
	IDENTITY a
	LIMIT_COUNT p
	LOOTING_ENCHANT h
	SET_ATTRIBUTES j
	SET_BANNER_PATTERN x
	SET_CONTENTS o
	SET_COUNT b
	SET_DAMAGE i
	SET_ENCHANTMENTS e
	SET_INSTRUMENT z
	SET_LOOT_TABLE r
	SET_LORE t
	SET_NAME k
	SET_NBT f
	SET_POTION y
	SET_STEW_EFFECT m
	compose ([Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction; a
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction dtr
	NO_LIMIT a
	limit c
	value b
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	hasLimit ()Z c
	lootingMultiplier (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder dtr$a
	count a
	limit b
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
	setLimit (I)Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Serializer dtr$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction dts
	modifiers a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	modifier (Ljava/lang/String;Lnet/minecraft/world/entity/ai/attributes/Attribute;Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setAttributes ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder dts$a
	modifiers a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; a
	withModifier (Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier dts$b
	amount d
	attribute b
	id e
	name a
	operation c
	slots f
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier; a
	operationFromString (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; a
	operationToString (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/lang/String; a
	serialize (Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder dts$c
	amount d
	attribute b
	id e
	name a
	operation c
	slots f
	build ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier; a
	forSlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
	withUuid (Ljava/util/UUID;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Serializer dts$d
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction dtt
	append b
	patterns a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setBannerPattern (Z)Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder dtt$a
	append b
	patterns a
	addPattern (Lnet/minecraft/core/Holder;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder; a
	addPattern (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder; a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Serializer dtt$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetContainerContents dtu
	entries a
	type b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setContents (Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder dtu$a
	entries a
	type b
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; a
	withEntry (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; a
net/minecraft/world/level/storage/loot/functions/SetContainerContents$Serializer dtu$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetContainerLootTable dtv
	name a
	seed b
	type c
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
	withLootTable (Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	withLootTable (Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/resources/ResourceLocation;J)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetContainerLootTable$Serializer dtv$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerLootTable; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetContainerLootTable;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction dtw
	add b
	enchantments a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	updateEnchantment (Ljava/util/Map;Lnet/minecraft/world/item/enchantment/Enchantment;I)V a
net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder dtw$a
	add b
	enchantments a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder; a
	withEnchantment (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Serializer dtw$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetInstrumentFunction dtx
	options a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setInstrumentOptions (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetInstrumentFunction$Serializer dtx$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetInstrumentFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetInstrumentFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetItemCountFunction dty
	add b
	value a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setCount (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	setCount (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Z)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetItemCountFunction$Serializer dty$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetItemCountFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetItemCountFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction dtz
	LOGGER a
	add c
	damage b
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setDamage (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	setDamage (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Z)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction$Serializer dtz$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetItemDamageFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetItemDamageFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetLoreFunction dua
	lore b
	replace a
	resolutionContext c
	getLoreTag (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/nbt/ListTag; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setLore ()Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder dua$a
	lore c
	replace a
	resolutionContext b
	addLine (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	setReplace (Z)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	setResolutionContext (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Serializer dua$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetNameFunction dub
	LOGGER a
	name b
	resolutionContext c
	createResolver (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Ljava/util/function/UnaryOperator; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	setName (Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetNameFunction$Serializer dub$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetNameFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetNameFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetNbtFunction duc
	tag a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetNbtFunction$Serializer duc$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetNbtFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetNbtFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetPotionFunction dud
	potion a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setPotion (Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetPotionFunction$Serializer dud$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetPotionFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetPotionFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction due
	effectDurationMap a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	stewEffect ()Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder due$a
	effectDurationMap a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; a
	withEffect (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Serializer due$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SmeltItemFunction duf
	LOGGER a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	smelted ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SmeltItemFunction$Serializer duf$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SmeltItemFunction; a
net/minecraft/world/level/storage/loot/parameters/LootContextParam dui
	name a
	getName ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSet duj
	all b
	required a
	builder ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; c
	getAllowed ()Ljava/util/Set; b
	getRequired ()Ljava/util/Set; a
	isAllowed (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Z a
	validateUser (Lnet/minecraft/world/level/storage/loot/ValidationContext;Lnet/minecraft/world/level/storage/loot/LootContextUser;)V a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder duj$a
	optional b
	required a
	build ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
	optional (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; b
	required (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSets duk
	ADVANCEMENT_ENTITY j
	ADVANCEMENT_REWARD i
	ALL_PARAMS k
	BLOCK l
	CHEST b
	COMMAND c
	EMPTY a
	ENTITY f
	FISHING e
	GIFT g
	PIGLIN_BARTER h
	REGISTRY m
	SELECTOR d
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
	getKey (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/resources/ResourceLocation; a
	register (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
net/minecraft/world/level/storage/loot/parameters/LootContextParams dul
	BLOCK_ENTITY h
	BLOCK_STATE g
	DAMAGE_SOURCE c
	DIRECT_KILLER_ENTITY e
	EXPLOSION_RADIUS j
	KILLER_ENTITY d
	LAST_DAMAGE_PLAYER b
	ORIGIN f
	THIS_ENTITY a
	TOOL i
	create (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam; a
net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition dun
	composedPredicate b
	terms a
	alternative ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder dun$a
	terms a
net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Serializer dun$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition duo
	enchantment a
	values b
	bonusLevelFlatChance (Lnet/minecraft/world/item/enchantment/Enchantment;[F)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition$Serializer duo$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ConditionReference dup
	LOGGER a
	name b
	conditionReference (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ConditionReference$Serializer dup$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionReference; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/ConditionReference;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder duq
	unwrap ()Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; d
	when (Ljava/lang/Iterable;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; a_
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; b
net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition dur
	predicate a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	hasDamageSource (Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition$Serializer dur$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/DamageSourceCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/DamageSourceCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition dus
	entityTarget b
	scores a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	hasScore (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/scores/Scoreboard;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/IntRange;)Z a
	hasScores (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder dus$a
	entityTarget b
	scores a
	withScore (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/IntRange;)Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Serializer dus$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ExplosionCondition dut
	INSTANCE a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	survivesExplosion ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/ExplosionCondition$Serializer dut$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/ExplosionCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/ExplosionCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition duu
	term a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	invert (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition$Serializer duu$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LocationCheck duv
	offset b
	predicate a
	checkLocation (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	checkLocation (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LocationCheck$Serializer duv$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LocationCheck; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LocationCheck;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition duw
	block a
	properties b
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	hasBlockStateProperties (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder duw$a
	block a
	properties b
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Serializer duw$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemCondition dux
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder dux$a
net/minecraft/world/level/storage/loot/predicates/LootItemConditionType duy
net/minecraft/world/level/storage/loot/predicates/LootItemConditions duz
	ALTERNATIVE b
	BLOCK_STATE_PROPERTY h
	DAMAGE_SOURCE_PROPERTIES l
	ENTITY_PROPERTIES e
	ENTITY_SCORES g
	INVERTED a
	KILLED_BY_PLAYER f
	LOCATION_CHECK m
	MATCH_TOOL i
	RANDOM_CHANCE c
	RANDOM_CHANCE_WITH_LOOTING d
	REFERENCE o
	SURVIVES_EXPLOSION k
	TABLE_BONUS j
	TIME_CHECK p
	VALUE_CHECK q
	WEATHER_CHECK n
	andConditions ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; a
	createGsonAdapter ()Ljava/lang/Object; a
	orConditions ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; b
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition dva
	entityTarget b
	predicate a
	entityPresent (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	hasProperties (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	hasProperties (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition$Serializer dva$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition dvb
	INSTANCE a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	killedByPlayer ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition$Serializer dvb$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition dvc
	probability a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	randomChance (F)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition$Serializer dvc$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition dvd
	lootingMultiplier b
	percent a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	randomChanceAndLootingBoost (FF)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition$Serializer dvd$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/MatchTool dve
	predicate a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	toolMatches (Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/MatchTool$Serializer dve$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/MatchTool; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/MatchTool;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/TimeCheck dvf
	period a
	value b
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	time (Lnet/minecraft/world/level/storage/loot/IntRange;)Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder; a
net/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder dvf$a
	period a
	value b
	build ()Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck; a
	setPeriod (J)Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder; a
net/minecraft/world/level/storage/loot/predicates/TimeCheck$Serializer dvf$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition dvg
	provider a
	range b
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	hasValue (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Lnet/minecraft/world/level/storage/loot/IntRange;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition$Serializer dvg$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/ValueCheckCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/ValueCheckCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/WeatherCheck dvh
	isRaining a
	isThundering b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	weather ()Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; c
net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder dvh$a
	isRaining a
	isThundering b
	build ()Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck; a
	setRaining (Ljava/lang/Boolean;)Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; a
	setThundering (Ljava/lang/Boolean;)Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; b
net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Serializer dvh$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider dvj
	BLOCK_ENTITY a
	BLOCK_ENTITY_ID b
	BLOCK_ENTITY_PROVIDER c
	getter d
	createFromContext (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider; a
	forContextEntity (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/providers/nbt/NbtProvider; a
	forEntity (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Getter; b
	get (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/nbt/Tag; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; a
net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Getter dvj$a
	get (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/nbt/Tag; a
	getId ()Ljava/lang/String; a
	getReferencedContextParams ()Ljava/util/Set; b
net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$InlineSerializer dvj$b
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider; b
	serialize (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
	serialize (Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Serializer dvj$c
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType dvk
net/minecraft/world/level/storage/loot/providers/nbt/NbtProvider dvl
	get (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/nbt/Tag; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; a
net/minecraft/world/level/storage/loot/providers/nbt/NbtProviders dvm
	CONTEXT b
	STORAGE a
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; a
net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider dvn
	id a
	get (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/nbt/Tag; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; a
net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider$Serializer dvn$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator dvp
	n a
	p b
	binomial (IF)Lnet/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator; a
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getInt (Lnet/minecraft/world/level/storage/loot/LootContext;)I a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; a
net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator$Serializer dvp$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/number/ConstantValue dvq
	value a
	exactly (F)Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue; a
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; a
net/minecraft/world/level/storage/loot/providers/number/ConstantValue$InlineSerializer dvq$a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue; b
	serialize (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
	serialize (Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/providers/number/ConstantValue$Serializer dvq$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType dvr
net/minecraft/world/level/storage/loot/providers/number/NumberProvider dvs
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getInt (Lnet/minecraft/world/level/storage/loot/LootContext;)I a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; a
net/minecraft/world/level/storage/loot/providers/number/NumberProviders dvt
	BINOMIAL c
	CONSTANT a
	SCORE d
	UNIFORM b
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; a
net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue dvu
	scale c
	score b
	target a
	fromScoreboard (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue; a
	fromScoreboard (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Ljava/lang/String;F)Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue; a
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; a
net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue$Serializer dvu$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/number/UniformGenerator dvv
	max b
	min a
	between (FF)Lnet/minecraft/world/level/storage/loot/providers/number/UniformGenerator; a
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getInt (Lnet/minecraft/world/level/storage/loot/LootContext;)I a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; a
net/minecraft/world/level/storage/loot/providers/number/UniformGenerator$Serializer dvv$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/UniformGenerator; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/number/UniformGenerator;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider dvx
	target a
	forTarget (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider; a
	getReferencedContextParams ()Ljava/util/Set; b
	getScoreboardName (Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/lang/String; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; a
net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider$InlineSerializer dvx$a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider; b
	serialize (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
	serialize (Lnet/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider$Serializer dvx$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider dvy
	name a
	forName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider; a
	getName ()Ljava/lang/String; c
	getReferencedContextParams ()Ljava/util/Set; b
	getScoreboardName (Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/lang/String; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; a
net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider$Serializer dvy$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType dvz
net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider dwa
	getReferencedContextParams ()Ljava/util/Set; b
	getScoreboardName (Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/lang/String; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; a
net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProviders dwb
	CONTEXT b
	FIXED a
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; a
net/minecraft/world/level/timers/FunctionCallback dwe
	functionId a
	handle (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
net/minecraft/world/level/timers/FunctionCallback$Serializer dwe$a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/FunctionCallback; a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/FunctionCallback;)V a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/FunctionTagCallback dwf
	tagId a
	handle (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
net/minecraft/world/level/timers/FunctionTagCallback$Serializer dwf$a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/FunctionTagCallback; a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/FunctionTagCallback;)V a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/TimerCallback dwg
net/minecraft/world/level/timers/TimerCallback$Serializer dwg$a
	cls b
	id a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	getCls ()Ljava/lang/Class; b
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/TimerCallbacks dwh
	LOGGER b
	SERVER_CALLBACKS a
	classToSerializer d
	idToSerializer c
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; a
	getSerializer (Ljava/lang/Class;)Lnet/minecraft/world/level/timers/TimerCallback$Serializer; a
	register (Lnet/minecraft/world/level/timers/TimerCallback$Serializer;)Lnet/minecraft/world/level/timers/TimerCallbacks; a
	serialize (Lnet/minecraft/world/level/timers/TimerCallback;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/timers/TimerQueue dwi
	CALLBACK_DATA_TAG b
	LOGGER a
	TIMER_NAME_TAG c
	TIMER_TRIGGER_TIME_TAG d
	callbacksRegistry e
	events h
	queue f
	sequentialId g
	createComparator ()Ljava/util/Comparator; c
	getEventsIds ()Ljava/util/Set; a
	loadEvent (Lnet/minecraft/nbt/CompoundTag;)V a
	remove (Ljava/lang/String;)I a
	schedule (Ljava/lang/String;JLnet/minecraft/world/level/timers/TimerCallback;)V a
	store ()Lnet/minecraft/nbt/ListTag; b
	storeEvent (Lnet/minecraft/world/level/timers/TimerQueue$Event;)Lnet/minecraft/nbt/CompoundTag; a
	tick (Ljava/lang/Object;J)V a
net/minecraft/world/level/timers/TimerQueue$Event dwi$a
	callback d
	id c
	sequentialId b
	triggerTime a
net/minecraft/world/phys/AABB dwl
	EPSILON g
	maxX d
	maxY e
	maxZ f
	minX a
	minY b
	minZ c
	clip (Ljava/lang/Iterable;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	clip (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Ljava/util/Optional; b
	clipPoint ([DLnet/minecraft/core/Direction;DDDDDDDDLnet/minecraft/core/Direction;DDD)Lnet/minecraft/core/Direction; a
	contains (DDD)Z e
	contains (Lnet/minecraft/world/phys/Vec3;)Z d
	contract (DDD)Lnet/minecraft/world/phys/AABB; a
	deflate (D)Lnet/minecraft/world/phys/AABB; h
	deflate (DDD)Lnet/minecraft/world/phys/AABB; f
	expandTowards (DDD)Lnet/minecraft/world/phys/AABB; b
	expandTowards (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; b
	getCenter ()Lnet/minecraft/world/phys/Vec3; f
	getDirection (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/phys/Vec3;[DLnet/minecraft/core/Direction;DDD)Lnet/minecraft/core/Direction; a
	getSize ()D a
	getXsize ()D b
	getYsize ()D c
	getZsize ()D d
	hasNaN ()Z e
	inflate (D)Lnet/minecraft/world/phys/AABB; g
	inflate (DDD)Lnet/minecraft/world/phys/AABB; c
	intersect (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/AABB; a
	intersects (DDDDDD)Z a
	intersects (Lnet/minecraft/world/phys/AABB;)Z c
	intersects (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	max (Lnet/minecraft/core/Direction$Axis;)D b
	min (Lnet/minecraft/core/Direction$Axis;)D a
	minmax (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/AABB; b
	move (DDD)Lnet/minecraft/world/phys/AABB; d
	move (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; a
	move (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; c
	of (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/phys/AABB; a
	ofSize (Lnet/minecraft/world/phys/Vec3;DDD)Lnet/minecraft/world/phys/AABB; a
	setMaxX (D)Lnet/minecraft/world/phys/AABB; d
	setMaxY (D)Lnet/minecraft/world/phys/AABB; e
	setMaxZ (D)Lnet/minecraft/world/phys/AABB; f
	setMinX (D)Lnet/minecraft/world/phys/AABB; a
	setMinY (D)Lnet/minecraft/world/phys/AABB; b
	setMinZ (D)Lnet/minecraft/world/phys/AABB; c
	unitCubeFromLowerCorner (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/phys/BlockHitResult dwm
	blockPos c
	direction b
	inside e
	miss d
	getBlockPos ()Lnet/minecraft/core/BlockPos; a
	getDirection ()Lnet/minecraft/core/Direction; b
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
	isInside ()Z d
	miss (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	withDirection (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/BlockHitResult; a
	withPosition (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
net/minecraft/world/phys/EntityHitResult dwn
	entity b
	getEntity ()Lnet/minecraft/world/entity/Entity; a
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
net/minecraft/world/phys/HitResult dwo
	location a
	distanceTo (Lnet/minecraft/world/entity/Entity;)D a
	getLocation ()Lnet/minecraft/world/phys/Vec3; e
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
net/minecraft/world/phys/HitResult$Type dwo$a
	$VALUES d
	BLOCK b
	ENTITY c
	MISS a
	$values ()[Lnet/minecraft/world/phys/HitResult$Type; a
net/minecraft/world/phys/Vec2 dwp
	MAX g
	MIN h
	NEG_UNIT_X d
	NEG_UNIT_Y f
	ONE b
	UNIT_X c
	UNIT_Y e
	ZERO a
	x i
	y j
	add (F)Lnet/minecraft/world/phys/Vec2; b
	add (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/world/phys/Vec2; b
	distanceToSqr (Lnet/minecraft/world/phys/Vec2;)F d
	dot (Lnet/minecraft/world/phys/Vec2;)F a
	equals (Lnet/minecraft/world/phys/Vec2;)Z c
	length ()F b
	lengthSquared ()F c
	negated ()Lnet/minecraft/world/phys/Vec2; d
	normalized ()Lnet/minecraft/world/phys/Vec2; a
	scale (F)Lnet/minecraft/world/phys/Vec2; a
net/minecraft/world/phys/Vec3 dwq
	CODEC a
	ZERO b
	x c
	y d
	z e
	add (DDD)Lnet/minecraft/world/phys/Vec3; b
	add (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; e
	align (Ljava/util/EnumSet;)Lnet/minecraft/world/phys/Vec3; a
	atBottomCenterOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; c
	atCenterOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; a
	atLowerCornerOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; b
	closerThan (Lnet/minecraft/core/Position;D)Z a
	cross (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; c
	directionFromRotation (FF)Lnet/minecraft/world/phys/Vec3; a
	directionFromRotation (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/world/phys/Vec3; a
	distanceTo (Lnet/minecraft/world/phys/Vec3;)D f
	distanceToSqr (DDD)D c
	distanceToSqr (Lnet/minecraft/world/phys/Vec3;)D g
	dot (Lnet/minecraft/world/phys/Vec3;)D b
	fromRGB24 (I)Lnet/minecraft/world/phys/Vec3; a
	get (Lnet/minecraft/core/Direction$Axis;)D a
	horizontalDistance ()D h
	horizontalDistanceSqr ()D i
	length ()D f
	lengthSqr ()D g
	lerp (Lnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
	multiply (DDD)Lnet/minecraft/world/phys/Vec3; d
	multiply (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; h
	normalize ()Lnet/minecraft/world/phys/Vec3; d
	relative (Lnet/minecraft/core/Direction;D)Lnet/minecraft/world/phys/Vec3; a
	reverse ()Lnet/minecraft/world/phys/Vec3; e
	scale (D)Lnet/minecraft/world/phys/Vec3; a
	subtract (DDD)Lnet/minecraft/world/phys/Vec3; a
	subtract (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; d
	upFromBottomCenterOf (Lnet/minecraft/core/Vec3i;D)Lnet/minecraft/world/phys/Vec3; a
	vectorTo (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	with (Lnet/minecraft/core/Direction$Axis;D)Lnet/minecraft/world/phys/Vec3; a
	x ()D a
	xRot (F)Lnet/minecraft/world/phys/Vec3; a
	y ()D b
	yRot (F)Lnet/minecraft/world/phys/Vec3; b
	z ()D c
	zRot (F)Lnet/minecraft/world/phys/Vec3; c
net/minecraft/world/phys/shapes/ArrayVoxelShape dws
	xs b
	ys c
	zs d
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape dwt
	storage d
	xMax h
	xMin e
	yMax i
	yMin f
	zMax j
	zMin g
	clearZStrip (IIII)V b
	fill (III)V c
	fillUpdateBounds (IIIZ)V a
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	forAllBoxes (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Z)V a
	getIndex (III)I a
	isEmpty ()Z a
	isFull (III)Z b
	isXZRectangleFull (IIIII)Z a
	isZStripFull (IIII)Z a
	join (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape; a
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
	withFilledBounds (IIIIIIIII)Lnet/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape; a
net/minecraft/world/phys/shapes/BooleanOp dwu
	AND i
	CAUSED_BY n
	CAUSES l
	FALSE a
	FIRST m
	NOT_AND h
	NOT_FIRST d
	NOT_OR b
	NOT_SAME g
	NOT_SECOND f
	ONLY_FIRST e
	ONLY_SECOND c
	OR o
	SAME j
	SECOND k
	TRUE p
net/minecraft/world/phys/shapes/CollisionContext dwv
	canStandOnFluid (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)Z a
	empty ()Lnet/minecraft/world/phys/shapes/CollisionContext; a
	isAbove (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/BlockPos;Z)Z a
	isDescending ()Z b
	isHoldingItem (Lnet/minecraft/world/item/Item;)Z a
	of (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/shapes/CollisionContext; a
net/minecraft/world/phys/shapes/CubePointRange dww
	parts a
net/minecraft/world/phys/shapes/CubeVoxelShape dwx
	findIndex (Lnet/minecraft/core/Direction$Axis;D)I a
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/DiscreteCubeMerger dwy
	firstDiv b
	result a
	secondDiv c
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/DiscreteVoxelShape dwz
	AXIS_VALUES d
	xSize a
	ySize b
	zSize c
	fill (III)V c
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	firstFull (Lnet/minecraft/core/Direction$Axis;II)I a
	forAllAxisEdges (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Lnet/minecraft/core/AxisCycle;Z)V a
	forAllAxisFaces (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer;Lnet/minecraft/core/AxisCycle;)V a
	forAllBoxes (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Z)V b
	forAllEdges (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Z)V a
	forAllFaces (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer;)V a
	getSize (Lnet/minecraft/core/Direction$Axis;)I c
	getXSize ()I b
	getYSize ()I c
	getZSize ()I d
	isEmpty ()Z a
	isFull (III)Z b
	isFull (Lnet/minecraft/core/AxisCycle;III)Z b
	isFullWide (III)Z d
	isFullWide (Lnet/minecraft/core/AxisCycle;III)Z a
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
	lastFull (Lnet/minecraft/core/Direction$Axis;II)I b
net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer dwz$a
net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer dwz$b
net/minecraft/world/phys/shapes/EntityCollisionContext dxa
	EMPTY a
	canStandOnFluid e
	descending b
	entity f
	entityBottom c
	heldItem d
	canStandOnFluid (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)Z a
	getEntity ()Lnet/minecraft/world/entity/Entity; c
	isAbove (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/BlockPos;Z)Z a
	isDescending ()Z b
	isHoldingItem (Lnet/minecraft/world/item/Item;)Z a
net/minecraft/world/phys/shapes/IdenticalMerger dxb
	coords a
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/IndexMerger dxc
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/IndexMerger$IndexConsumer dxc$a
net/minecraft/world/phys/shapes/IndirectMerger dxd
	EMPTY a
	firstIndices c
	result b
	resultLength e
	secondIndices d
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/NonOverlappingMerger dxe
	lower a
	swap c
	upper b
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	forNonSwappedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z b
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/OffsetDoubleList dxf
	delegate a
	offset b
net/minecraft/world/phys/shapes/Shapes dxg
	BIG_EPSILON b
	BLOCK d
	EMPTY e
	EPSILON a
	INFINITY c
	block ()Lnet/minecraft/world/phys/shapes/VoxelShape; b
	blockOccudes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z a
	box (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	collide (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/AABB;Ljava/lang/Iterable;D)D a
	create (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	create (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	createIndexMerger (ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Lnet/minecraft/world/phys/shapes/IndexMerger; a
	empty ()Lnet/minecraft/world/phys/shapes/VoxelShape; a
	faceShapeOccludes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z b
	findBits (DD)I a
	getFaceShape (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	join (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	joinIsNotEmpty (Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Z a
	joinIsNotEmpty (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Z c
	joinUnoptimized (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	lcm (II)J a
	mergedFaceOccludes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z b
	or (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	or (Lnet/minecraft/world/phys/shapes/VoxelShape;[Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer dxg$a
net/minecraft/world/phys/shapes/SliceShape dxh
	SLICE_COORDS d
	axis c
	delegate b
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
	makeSlice (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape; a
net/minecraft/world/phys/shapes/SubShape dxi
	endX h
	endY i
	endZ j
	parent d
	startX e
	startY f
	startZ g
	clampToShape (Lnet/minecraft/core/Direction$Axis;I)I a
	fill (III)V c
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	isFull (III)Z b
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
net/minecraft/world/phys/shapes/VoxelShape dxj
	faces b
	shape a
	bounds ()Lnet/minecraft/world/phys/AABB; a
	calculateFace (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	clip (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	closestPointTo (Lnet/minecraft/world/phys/Vec3;)Ljava/util/Optional; a
	collide (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/AABB;D)D a
	collideX (Lnet/minecraft/core/AxisCycle;Lnet/minecraft/world/phys/AABB;D)D a
	findIndex (Lnet/minecraft/core/Direction$Axis;D)I a
	forAllBoxes (Lnet/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer;)V b
	forAllEdges (Lnet/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer;)V a
	get (Lnet/minecraft/core/Direction$Axis;I)D a
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
	getFaceShape (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isEmpty ()Z b
	max (Lnet/minecraft/core/Direction$Axis;)D c
	max (Lnet/minecraft/core/Direction$Axis;DD)D b
	min (Lnet/minecraft/core/Direction$Axis;)D b
	min (Lnet/minecraft/core/Direction$Axis;DD)D a
	move (DDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	optimize ()Lnet/minecraft/world/phys/shapes/VoxelShape; c
	toAabbs ()Ljava/util/List; d
net/minecraft/world/scores/Objective dxl
	criteria c
	displayName d
	formattedDisplayName e
	name b
	renderType f
	scoreboard a
	createFormattedDisplayName ()Lnet/minecraft/network/chat/Component; g
	getCriteria ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getFormattedDisplayName ()Lnet/minecraft/network/chat/Component; e
	getName ()Ljava/lang/String; b
	getRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; f
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; a
	setDisplayName (Lnet/minecraft/network/chat/Component;)V a
	setRenderType (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)V a
net/minecraft/world/scores/PlayerTeam dxm
	BIT_FRIENDLY_FIRE a
	BIT_SEE_INVISIBLES b
	allowFriendlyFire i
	collisionRule n
	color m
	deathMessageVisibility l
	displayName f
	displayNameStyle o
	name d
	nameTagVisibility k
	playerPrefix g
	playerSuffix h
	players e
	scoreboard c
	seeFriendlyInvisibles j
	canSeeFriendlyInvisibles ()Z i
	formatNameForTeam (Lnet/minecraft/world/scores/Team;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	getCollisionRule ()Lnet/minecraft/world/scores/Team$CollisionRule; l
	getColor ()Lnet/minecraft/ChatFormatting; n
	getDeathMessageVisibility ()Lnet/minecraft/world/scores/Team$Visibility; k
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getFormattedDisplayName ()Lnet/minecraft/network/chat/MutableComponent; d
	getFormattedName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; d
	getName ()Ljava/lang/String; b
	getNameTagVisibility ()Lnet/minecraft/world/scores/Team$Visibility; j
	getPlayerPrefix ()Lnet/minecraft/network/chat/Component; e
	getPlayerSuffix ()Lnet/minecraft/network/chat/Component; f
	getPlayers ()Ljava/util/Collection; g
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; a
	isAllowFriendlyFire ()Z h
	packOptions ()I m
	setAllowFriendlyFire (Z)V a
	setCollisionRule (Lnet/minecraft/world/scores/Team$CollisionRule;)V a
	setColor (Lnet/minecraft/ChatFormatting;)V a
	setDeathMessageVisibility (Lnet/minecraft/world/scores/Team$Visibility;)V b
	setDisplayName (Lnet/minecraft/network/chat/Component;)V a
	setNameTagVisibility (Lnet/minecraft/world/scores/Team$Visibility;)V a
	setPlayerPrefix (Lnet/minecraft/network/chat/Component;)V b
	setPlayerSuffix (Lnet/minecraft/network/chat/Component;)V c
	setSeeFriendlyInvisibles (Z)V b
	unpackOptions (I)V a
net/minecraft/world/scores/Score dxn
	SCORE_COMPARATOR a
	count e
	forceUpdate g
	locked f
	objective c
	owner d
	scoreboard b
	add (I)V a
	getObjective ()Lnet/minecraft/world/scores/Objective; d
	getOwner ()Ljava/lang/String; e
	getScore ()I b
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; f
	increment ()V a
	isLocked ()Z g
	reset ()V c
	setLocked (Z)V a
	setScore (I)V b
net/minecraft/world/scores/Scoreboard dxo
	DISPLAY_SLOTS f
	DISPLAY_SLOT_BELOW_NAME c
	DISPLAY_SLOT_LIST a
	DISPLAY_SLOT_SIDEBAR b
	DISPLAY_SLOT_TEAMS_SIDEBAR_END e
	DISPLAY_SLOT_TEAMS_SIDEBAR_START d
	LOGGER g
	displayObjectives k
	displaySlotNames n
	objectivesByCriteria i
	objectivesByName h
	playerScores j
	teamsByName l
	teamsByPlayer m
	addObjective (Ljava/lang/String;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)Lnet/minecraft/world/scores/Objective; a
	addPlayerTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; g
	addPlayerToTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)Z a
	entityRemoved (Lnet/minecraft/world/entity/Entity;)V a
	forAllObjectives (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Ljava/lang/String;Ljava/util/function/Consumer;)V a
	getDisplayObjective (I)Lnet/minecraft/world/scores/Objective; a
	getDisplaySlotByName (Ljava/lang/String;)I j
	getDisplaySlotName (I)Ljava/lang/String; b
	getDisplaySlotNames ()[Ljava/lang/String; h
	getObjective (Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; d
	getObjectiveNames ()Ljava/util/Collection; d
	getObjectives ()Ljava/util/Collection; c
	getOrCreateObjective (Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; c
	getOrCreatePlayerScore (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)Lnet/minecraft/world/scores/Score; c
	getPlayerScores (Ljava/lang/String;)Ljava/util/Map; e
	getPlayerScores (Lnet/minecraft/world/scores/Objective;)Ljava/util/Collection; i
	getPlayerTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; f
	getPlayerTeams ()Ljava/util/Collection; g
	getPlayersTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; i
	getTeamNames ()Ljava/util/Collection; f
	getTrackedPlayers ()Ljava/util/Collection; e
	hasObjective (Ljava/lang/String;)Z b
	hasPlayerScore (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)Z b
	loadPlayerScores (Lnet/minecraft/nbt/ListTag;)V a
	onObjectiveAdded (Lnet/minecraft/world/scores/Objective;)V a
	onObjectiveChanged (Lnet/minecraft/world/scores/Objective;)V b
	onObjectiveRemoved (Lnet/minecraft/world/scores/Objective;)V c
	onPlayerRemoved (Ljava/lang/String;)V a
	onPlayerScoreRemoved (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)V a
	onScoreChanged (Lnet/minecraft/world/scores/Score;)V a
	onTeamAdded (Lnet/minecraft/world/scores/PlayerTeam;)V a
	onTeamChanged (Lnet/minecraft/world/scores/PlayerTeam;)V b
	onTeamRemoved (Lnet/minecraft/world/scores/PlayerTeam;)V c
	removeObjective (Lnet/minecraft/world/scores/Objective;)V j
	removePlayerFromTeam (Ljava/lang/String;)Z h
	removePlayerFromTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)V b
	removePlayerTeam (Lnet/minecraft/world/scores/PlayerTeam;)V d
	resetPlayerScore (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)V d
	savePlayerScores ()Lnet/minecraft/nbt/ListTag; i
	setDisplayObjective (ILnet/minecraft/world/scores/Objective;)V a
net/minecraft/world/scores/ScoreboardSaveData dxp
	FILE_ID a
	scoreboard b
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/scores/ScoreboardSaveData; b
	loadDisplaySlots (Lnet/minecraft/nbt/CompoundTag;)V c
	loadObjectives (Lnet/minecraft/nbt/ListTag;)V b
	loadTeamPlayers (Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/nbt/ListTag;)V a
	loadTeams (Lnet/minecraft/nbt/ListTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	saveDisplaySlots (Lnet/minecraft/nbt/CompoundTag;)V d
	saveObjectives ()Lnet/minecraft/nbt/ListTag; d
	saveTeams ()Lnet/minecraft/nbt/ListTag; a
net/minecraft/world/scores/Team dxq
	canSeeFriendlyInvisibles ()Z i
	getCollisionRule ()Lnet/minecraft/world/scores/Team$CollisionRule; l
	getColor ()Lnet/minecraft/ChatFormatting; n
	getDeathMessageVisibility ()Lnet/minecraft/world/scores/Team$Visibility; k
	getFormattedName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; d
	getName ()Ljava/lang/String; b
	getNameTagVisibility ()Lnet/minecraft/world/scores/Team$Visibility; j
	getPlayers ()Ljava/util/Collection; g
	isAlliedTo (Lnet/minecraft/world/scores/Team;)Z a
	isAllowFriendlyFire ()Z h
net/minecraft/world/scores/Team$CollisionRule dxq$a
	$VALUES h
	ALWAYS a
	BY_NAME g
	NEVER b
	PUSH_OTHER_TEAMS c
	PUSH_OWN_TEAM d
	id f
	name e
	$values ()[Lnet/minecraft/world/scores/Team$CollisionRule; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/scores/Team$CollisionRule; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/world/scores/Team$Visibility dxq$b
	$VALUES h
	ALWAYS a
	BY_NAME g
	HIDE_FOR_OTHER_TEAMS c
	HIDE_FOR_OWN_TEAM d
	NEVER b
	id f
	name e
	$values ()[Lnet/minecraft/world/scores/Team$Visibility; c
	byName (Ljava/lang/String;)Lnet/minecraft/world/scores/Team$Visibility; a
	getAllNames ()[Ljava/lang/String; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
net/minecraft/world/scores/criteria/ObjectiveCriteria dxr
	AIR h
	ARMOR i
	CRITERIA_CACHE o
	CUSTOM_CRITERIA n
	DEATH_COUNT c
	DUMMY a
	EXPERIENCE j
	FOOD g
	HEALTH f
	KILLED_BY_TEAM m
	KILL_COUNT_ALL e
	KILL_COUNT_PLAYERS d
	LEVEL k
	TEAM_KILL l
	TRIGGER b
	name p
	readOnly q
	renderType r
	byName (Ljava/lang/String;)Ljava/util/Optional; a
	getCustomCriteriaNames ()Ljava/util/Set; c
	getDefaultRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; f
	getName ()Ljava/lang/String; d
	getStat (Lnet/minecraft/stats/StatType;Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	isReadOnly ()Z e
	registerCustom (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; b
	registerCustom (Ljava/lang/String;ZLnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; a
net/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType dxr$a
	$VALUES e
	BY_ID d
	HEARTS b
	INTEGER a
	id c
	$values ()[Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; b
	byId (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; a
	getId ()Ljava/lang/String; a
net/minecraft/world/ticks/BlackholeTickAccess dxu
	CONTAINER_BLACKHOLE a
	LEVEL_BLACKHOLE b
	emptyContainer ()Lnet/minecraft/world/ticks/TickContainerAccess; a
	emptyLevelList ()Lnet/minecraft/world/ticks/LevelTickAccess; b
net/minecraft/world/ticks/LevelChunkTicks dxv
	onTickAdded d
	pendingTicks b
	tickQueue a
	ticksPerPosition c
	count ()I a
	getAll ()Ljava/util/stream/Stream; d
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	load (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Function;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/ticks/LevelChunkTicks; a
	peek ()Lnet/minecraft/world/ticks/ScheduledTick; b
	poll ()Lnet/minecraft/world/ticks/ScheduledTick; c
	removeIf (Ljava/util/function/Predicate;)V a
	save (JLjava/util/function/Function;)Lnet/minecraft/nbt/ListTag; a
	save (JLjava/util/function/Function;)Lnet/minecraft/nbt/Tag; b
	schedule (Lnet/minecraft/world/ticks/ScheduledTick;)V a
	scheduleUnchecked (Lnet/minecraft/world/ticks/ScheduledTick;)V b
	setOnTickAdded (Ljava/util/function/BiConsumer;)V a
	unpack (J)V a
net/minecraft/world/ticks/LevelTickAccess dxw
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/ticks/LevelTicks dxx
	CONTAINER_DRAIN_ORDER a
	allContainers d
	alreadyRunThisTick h
	chunkScheduleUpdater j
	containersToTick f
	nextTickForContainer e
	profiler c
	tickCheck b
	toRunThisTick g
	toRunThisTickSet i
	addContainer (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/ticks/LevelChunkTicks;)V a
	calculateTickSetIfNeeded ()V d
	canScheduleMoreTicks (I)Z a
	cleanupAfterTick ()V c
	clearArea (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	collectTicks (JILnet/minecraft/util/profiling/ProfilerFiller;)V a
	copyArea (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/Vec3i;)V a
	count ()I a
	drainContainers (JI)V a
	drainFromCurrentContainer (Ljava/util/Queue;Lnet/minecraft/world/ticks/LevelChunkTicks;JI)V a
	forContainersInArea (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/ticks/LevelTicks$PosAndContainerConsumer;)V a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	removeContainer (Lnet/minecraft/world/level/ChunkPos;)V a
	rescheduleLeftoverContainers ()V b
	runCollectedTicks (Ljava/util/function/BiConsumer;)V a
	schedule (Lnet/minecraft/world/ticks/ScheduledTick;)V a
	scheduleForThisTick (Lnet/minecraft/world/ticks/ScheduledTick;)V c
	sortContainersToTick (J)V a
	tick (JILjava/util/function/BiConsumer;)V a
	updateContainerScheduling (Lnet/minecraft/world/ticks/ScheduledTick;)V b
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/ticks/LevelTicks$PosAndContainerConsumer dxx$a
net/minecraft/world/ticks/ProtoChunkTicks dxy
	ticks a
	ticksPerPosition b
	count ()I a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	load (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Function;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/ticks/ProtoChunkTicks; a
	save (JLjava/util/function/Function;)Lnet/minecraft/nbt/Tag; b
	schedule (Lnet/minecraft/world/ticks/SavedTick;)V a
	schedule (Lnet/minecraft/world/ticks/ScheduledTick;)V a
	scheduledTicks ()Ljava/util/List; b
net/minecraft/world/ticks/SavedTick dxz
	TAG_DELAY j
	TAG_ID f
	TAG_PRIORITY k
	TAG_X g
	TAG_Y h
	TAG_Z i
	UNIQUE_TICK_HASH a
	delay d
	pos c
	priority e
	type b
	delay ()I c
	loadTick (Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Function;)Ljava/util/Optional; a
	loadTickList (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Function;Lnet/minecraft/world/level/ChunkPos;Ljava/util/function/Consumer;)V a
	pos ()Lnet/minecraft/core/BlockPos; b
	priority ()Lnet/minecraft/world/ticks/TickPriority; d
	probe (Ljava/lang/Object;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/ticks/SavedTick; a
	save (Ljava/util/function/Function;)Lnet/minecraft/nbt/CompoundTag; a
	saveTick (Ljava/lang/String;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/ticks/TickPriority;)Lnet/minecraft/nbt/CompoundTag; a
	saveTick (Lnet/minecraft/world/ticks/ScheduledTick;Ljava/util/function/Function;J)Lnet/minecraft/nbt/CompoundTag; a
	type ()Ljava/lang/Object; a
	unpack (JJ)Lnet/minecraft/world/ticks/ScheduledTick; a
net/minecraft/world/ticks/ScheduledTick dya
	DRAIN_ORDER a
	INTRA_TICK_DRAIN_ORDER b
	UNIQUE_TICK_HASH c
	pos e
	priority g
	subTickOrder h
	triggerTick f
	type d
	pos ()Lnet/minecraft/core/BlockPos; b
	priority ()Lnet/minecraft/world/ticks/TickPriority; d
	probe (Ljava/lang/Object;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/ticks/ScheduledTick; a
	subTickOrder ()J e
	triggerTick ()J c
	type ()Ljava/lang/Object; a
net/minecraft/world/ticks/SerializableTickContainer dyb
	save (JLjava/util/function/Function;)Lnet/minecraft/nbt/Tag; b
net/minecraft/world/ticks/TickAccess dyc
	count ()I a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	schedule (Lnet/minecraft/world/ticks/ScheduledTick;)V a
net/minecraft/world/ticks/TickContainerAccess dyd
net/minecraft/world/ticks/TickPriority dye
	$VALUES i
	EXTREMELY_HIGH a
	EXTREMELY_LOW g
	HIGH c
	LOW e
	NORMAL d
	VERY_HIGH b
	VERY_LOW f
	value h
	$values ()[Lnet/minecraft/world/ticks/TickPriority; b
	byValue (I)Lnet/minecraft/world/ticks/TickPriority; a
	getValue ()I a
net/minecraft/world/ticks/WorldGenTickAccess dyf
	containerGetter a
	count ()I a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	schedule (Lnet/minecraft/world/ticks/ScheduledTick;)V a
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/client/ClientBrandRetriever net/minecraft/client/ClientBrandRetriever
	VANILLA_NAME a
net/minecraft/client/main/Main net/minecraft/client/main/Main
	LOGGER a
	emptyStringToEmptyOptional (Ljava/lang/String;)Ljava/util/Optional; a
	ofNullable (Ljava/lang/Integer;)Ljava/util/OptionalInt; a
	parseArgument (Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;)Ljava/lang/Object; a
	run ([Ljava/lang/String;Z)V a
	stringHasValue (Ljava/lang/String;)Z b
net/minecraft/server/Main net/minecraft/server/Main
	LOGGER a
	forceUpgrade (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lnet/minecraft/world/level/levelgen/WorldGenSettings;)V a
net/minecraft/server/MinecraftServer net/minecraft/server/MinecraftServer
	ABSOLUTE_MAX_WORLD_SIZE e
	ANONYMOUS_PLAYER_PROFILE g
	AUTOSAVE_INTERVAL v
	AVERAGE_TICK_TIME_SMOOTHING o
	DELAYED_TASKS_TICK_EXTENSION x
	DEMO_SETTINGS f
	LOGGER n
	MAX_STATUS_PLAYER_SAMPLE t
	MAX_TICK_LATENCY w
	MS_PER_TICK c
	OVERLOADED_THRESHOLD q
	OVERLOADED_WARNING_INTERVAL r
	START_CHUNK_RADIUS d
	START_TICKING_CHUNK_COUNT u
	STATUS_EXPIRE_TIME_NS s
	TICK_STATS_SPAN p
	VANILLA_BRAND b
	allowFlight W
	averageTickTime aq
	commandStorage al
	connection G
	customBossEvents am
	debugCommandProfiler E
	debugCommandProfilerDelayStart F
	delayedTasksMaxNextTickTime ah
	enforceWhitelist ap
	executor ar
	fixerUpper K
	frameTimer ao
	functionManager an
	isDemo ab
	isReady ac
	isSaving av
	keyPair Z
	lastOverloadWarning ad
	lastServerStatus ae
	levels O
	localIp L
	mayHaveDelayedTasks ai
	metricsRecorder z
	motd X
	nextTickTime ag
	onMetricsRecordingFinished C
	onMetricsRecordingStopped B
	onlineMode T
	packRepository aj
	playerDataStorage i
	playerIdleTimeout Y
	playerList P
	port M
	preventProxyConnections U
	profiler A
	progressListenerFactory H
	proxy j
	pvp V
	random J
	registryHolder N
	resources at
	running Q
	scoreboard ak
	serverId as
	serverThread af
	services l
	singleplayerProfile aa
	status I
	stopped R
	storageSource h
	structureTemplateManager au
	tickCount S
	tickTimes k
	tickables y
	willStartRecordingMetrics D
	worldData m
	acceptsFailure ()Z j_
	acceptsSuccess ()Z i_
	addTickable (Ljava/lang/Runnable;)V b
	areNpcsEnabled ()Z W
	cancelRecordingMetrics ()V aT
	configurePackRepository (Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/world/level/DataPackConfig;Z)Lnet/minecraft/world/level/DataPackConfig; a
	constructOrExtractCrashReport (Ljava/lang/Throwable;)Lnet/minecraft/CrashReport; a
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; aD
	createGameModeForPlayer (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/level/ServerPlayerGameMode; b
	createLevels (Lnet/minecraft/server/level/progress/ChunkProgressListener;)V a
	createTextFilterForPlayer (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/network/TextFilter; a
	doRunTask (Ljava/lang/Runnable;)V d
	doRunTask (Lnet/minecraft/server/TickTask;)V b
	dumpClasspath (Ljava/nio/file/Path;)V e
	dumpGameRules (Ljava/nio/file/Path;)V d
	dumpMiscStats (Ljava/nio/file/Path;)V c
	dumpNativeModules (Ljava/nio/file/Path;)V g
	dumpServerProperties (Ljava/nio/file/Path;)V a
	dumpThreads (Ljava/nio/file/Path;)V f
	endMetricsRecordingTick ()V bk
	enforceSecureProfile ()Z aw
	executeIfPossible (Ljava/lang/Runnable;)V c
	fillServerSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; a
	fillSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; b
	finishRecordingMetrics ()V aS
	forceDifficulty ()V q
	forceSynchronousWrites ()Z aU
	getAbsoluteMaxWorldSize ()I as
	getAdvancements ()Lnet/minecraft/server/ServerAdvancementManager; az
	getAllLevels ()Ljava/lang/Iterable; E
	getAverageTickTime ()F aN
	getChatDecorator ()Lnet/minecraft/network/chat/ChatDecorator; bf
	getCommandStorage ()Lnet/minecraft/world/level/storage/CommandStorage; aG
	getCommands ()Lnet/minecraft/commands/Commands; aC
	getCompressionThreshold ()I av
	getConnection ()Lnet/minecraft/server/network/ServerConnectionListener; ad
	getCustomBossEvents ()Lnet/minecraft/server/bossevents/CustomBossEvents; aL
	getDefaultGameType ()Lnet/minecraft/world/level/GameType; g_
	getFile (Ljava/lang/String;)Ljava/io/File; c
	getFixerUpper ()Lcom/mojang/datafixers/DataFixer; ay
	getForcedGameType ()Lnet/minecraft/world/level/GameType; aY
	getFrameTimer ()Lnet/minecraft/util/FrameTimer; aO
	getFunctionCompilationLevel ()I i
	getFunctions ()Lnet/minecraft/server/ServerFunctionManager; aA
	getGameRules ()Lnet/minecraft/world/level/GameRules; aK
	getItemModifierManager ()Lnet/minecraft/world/level/storage/loot/ItemModifierManager; aJ
	getKeyPair ()Ljava/security/KeyPair; K
	getLevel (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/server/level/ServerLevel; a
	getLocalIp ()Ljava/lang/String; h_
	getLootTables ()Lnet/minecraft/world/level/storage/loot/LootTables; aH
	getMaxChainedNeighborUpdates ()I be
	getMaxPlayers ()I H
	getModdedStatus ()Lnet/minecraft/util/ModCheck; J
	getMotd ()Ljava/lang/String; Z
	getNextTickTime ()J ax
	getOperatorUserPermissionLevel ()I h
	getPackRepository ()Lnet/minecraft/server/packs/repository/PackRepository; aB
	getPlayerCount ()I G
	getPlayerIdleTimeout ()I al
	getPlayerList ()Lnet/minecraft/server/players/PlayerList; ac
	getPlayerNames ()[Ljava/lang/String; I
	getPort ()I L
	getPredicateManager ()Lnet/minecraft/world/level/storage/loot/PredicateManager; aI
	getPreventProxyConnections ()Z U
	getProfileCache ()Lnet/minecraft/server/players/GameProfileCache; ap
	getProfilePermissions (Lcom/mojang/authlib/GameProfile;)I c
	getProfileRepository ()Lcom/mojang/authlib/GameProfileRepository; ao
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; aP
	getProxy ()Ljava/net/Proxy; ak
	getRateLimitPacketsPerSecond ()I l
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; aE
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; aZ
	getRunningThread ()Ljava/lang/Thread; au
	getScaledTrackingDistance (I)I b
	getScoreboard ()Lnet/minecraft/server/ServerScoreboard; aF
	getSelectedPacks (Lnet/minecraft/server/packs/repository/PackRepository;)Lnet/minecraft/world/level/DataPackConfig; a
	getServerDirectory ()Ljava/io/File; z
	getServerResourcePack ()Ljava/util/Optional; R
	getServerVersion ()Ljava/lang/String; F
	getServiceSignatureValidator ()Lnet/minecraft/util/SignatureValidator; an
	getSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; am
	getSingleplayerProfile ()Lcom/mojang/authlib/GameProfile; M
	getSpawnProtectionRadius ()I ah
	getSpawnRadius (Lnet/minecraft/server/level/ServerLevel;)I a
	getStatus ()Lnet/minecraft/network/protocol/status/ServerStatus; aq
	getStructureManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; aV
	getTickCount ()I ag
	getWorldData ()Lnet/minecraft/world/level/storage/WorldData; aW
	getWorldPath (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path; a
	getWorldScreenshotFile ()Ljava/util/Optional; y
	halt (Z)V a
	hasGui ()Z af
	haveTime ()Z bg
	hidesOnlinePlayers ()Z aj
	initServer ()Z e
	initializeKeyPair ()V O
	invalidateStatus ()V ar
	isCommandBlockEnabled ()Z n
	isCurrentlySaving ()Z ba
	isDedicatedServer ()Z k
	isDemo ()Z Q
	isEnforceWhitelist ()Z aM
	isEpollEnabled ()Z m
	isFlightAllowed ()Z Y
	isHardcore ()Z g
	isNetherEnabled ()Z A
	isPublished ()Z o
	isPvpAllowed ()Z X
	isReady ()Z ae
	isRecordingMetrics ()Z aQ
	isResourcePackRequired ()Z S
	isRunning ()Z u
	isShutdown ()Z B
	isSingleplayer ()Z N
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	isSpawningAnimals ()Z V
	isSpawningMonsters ()Z P
	isStopped ()Z ab
	isTimeProfilerRunning ()Z bb
	isUnderSpawnProtection (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	kickUnlistedPlayers (Lnet/minecraft/commands/CommandSourceStack;)V a
	levelKeys ()Ljava/util/Set; D
	loadLevel ()V f_
	logChatMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType$Bound;Ljava/lang/String;)V a
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	onServerExit ()V f
	overworld ()Lnet/minecraft/server/level/ServerLevel; C
	pollTask ()Z x
	pollTaskInternal ()Z bh
	prepareLevels (Lnet/minecraft/server/level/progress/ChunkProgressListener;)V b
	previewsChat ()Z aa
	publishServer (Lnet/minecraft/world/level/GameType;ZI)Z a
	readScoreboard (Lnet/minecraft/world/level/storage/DimensionDataStorage;)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess$Frozen; aX
	reloadResources (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; a
	repliesToStatus ()Z ai
	runServer ()V v
	saveAllChunks (ZZZ)Z a
	saveDebugReport (Ljava/nio/file/Path;)V b
	saveEverything (ZZZ)Z b
	scheduleExecutables ()Z at
	sendDifficultyUpdate (Lnet/minecraft/server/level/ServerPlayer;)V c
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	setDefaultGameType (Lnet/minecraft/world/level/GameType;)V a
	setDemo (Z)V c
	setDifficulty (Lnet/minecraft/world/Difficulty;Z)V a
	setDifficultyLocked (Z)V b
	setEnforceWhitelist (Z)V h
	setFlightAllowed (Z)V g
	setId (Ljava/lang/String;)V b
	setInitialSpawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/storage/ServerLevelData;ZZ)V a
	setLocalIp (Ljava/lang/String;)V a_
	setMotd (Ljava/lang/String;)V d
	setPlayerIdleTimeout (I)V c
	setPlayerList (Lnet/minecraft/server/players/PlayerList;)V a
	setPort (I)V a
	setPreventProxyConnections (Z)V e
	setPvpAllowed (Z)V f
	setSingleplayerProfile (Lcom/mojang/authlib/GameProfile;)V b
	setUsesAuthentication (Z)V d
	setupDebugLevel (Lnet/minecraft/world/level/storage/WorldData;)V a
	shouldInformAdmins ()Z G_
	shouldRconBroadcast ()Z j
	shouldRun (Ljava/lang/Runnable;)Z e
	shouldRun (Lnet/minecraft/server/TickTask;)Z a
	spin (Ljava/util/function/Function;)Lnet/minecraft/server/MinecraftServer; a
	startMetricsRecordingTick ()V bj
	startRecordingMetrics (Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V a
	startTimeProfiler ()V bc
	stopRecordingMetrics ()V aR
	stopServer ()V s
	stopTimeProfiler ()Lnet/minecraft/util/profiling/ProfileResults; bd
	tickChildren (Ljava/util/function/BooleanSupplier;)V b
	tickServer (Ljava/util/function/BooleanSupplier;)V a
	updateMobSpawningFlags ()V bi
	updateStatusIcon (Lnet/minecraft/network/protocol/status/ServerStatus;)V a
	usesAuthentication ()Z T
	waitUntilNextTick ()V w
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; f
	wrapRunnable (Ljava/lang/Runnable;)Lnet/minecraft/server/TickTask; a
net/minecraft/data/Main net/minecraft/data/Main
	createStandardGenerator (Ljava/nio/file/Path;Ljava/util/Collection;ZZZZZLnet/minecraft/WorldVersion;Z)Lnet/minecraft/data/DataGenerator; a

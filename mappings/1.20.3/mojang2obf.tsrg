com/mojang/blaze3d/Blaze3D enr
	getTime ()D b
	process (Lcom/mojang/blaze3d/pipeline/RenderPipeline;F)V a
	render (Lcom/mojang/blaze3d/pipeline/RenderPipeline;F)V b
	youJustLostTheGame ()V a
com/mojang/blaze3d/DontObfuscate ens
com/mojang/blaze3d/FieldsAreNonnullByDefault ent
com/mojang/blaze3d/MethodsReturnNonnullByDefault enu
com/mojang/blaze3d/audio/Channel env
	BUFFER_DURATION_SECONDS a
	LOGGER b
	QUEUED_BUFFER_COUNT c
	initialized e
	source d
	stream g
	streamingBufferSize f
	attachBufferStream (Lnet/minecraft/client/sounds/AudioStream;)V a
	attachStaticBuffer (Lcom/mojang/blaze3d/audio/SoundBuffer;)V a
	calculateBufferSize (Ljavax/sound/sampled/AudioFormat;I)I a
	create ()Lcom/mojang/blaze3d/audio/Channel; a
	destroy ()V b
	disableAttenuation ()V i
	getState ()I k
	linearAttenuation (F)V c
	pause ()V d
	play ()V c
	playing ()Z g
	pumpBuffers (I)V a
	removeProcessedBuffers ()I l
	setLooping (Z)V a
	setPitch (F)V a
	setRelative (Z)V b
	setSelfPosition (Lnet/minecraft/world/phys/Vec3;)V a
	setVolume (F)V b
	stop ()V f
	stopped ()Z h
	unpause ()V e
	updateStream ()V j
com/mojang/blaze3d/audio/Library enw
	DEFAULT_CHANNEL_COUNT c
	EMPTY h
	LOGGER a
	NO_DEVICE b
	context e
	currentDevice d
	defaultDeviceName g
	listener k
	staticChannels i
	streamingChannels j
	supportsDisconnections f
	acquireChannel (Lcom/mojang/blaze3d/audio/Library$Pool;)Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V d
	getAvailableSoundDevices ()Ljava/util/List; g
	getChannelCount ()I i
	getCurrentDeviceName ()Ljava/lang/String; b
	getDebugString ()Ljava/lang/String; f
	getDefaultDeviceName ()Ljava/lang/String; a
	getListener ()Lcom/mojang/blaze3d/audio/Listener; e
	hasDefaultDeviceChanged ()Z c
	init (Ljava/lang/String;Z)V a
	isCurrentDeviceDisconnected ()Z h
	openDeviceOrFallback (Ljava/lang/String;)J a
	releaseChannel (Lcom/mojang/blaze3d/audio/Channel;)V a
	setHrtf (Z)V a
	tryOpenDevice (Ljava/lang/String;)Ljava/util/OptionalLong; b
com/mojang/blaze3d/audio/Library$ChannelPool enw$a
	acquire ()Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V b
	getMaxCount ()I c
	getUsedCount ()I d
	release (Lcom/mojang/blaze3d/audio/Channel;)Z a
com/mojang/blaze3d/audio/Library$CountingChannelPool enw$b
	activeChannels b
	limit a
	acquire ()Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V b
	getMaxCount ()I c
	getUsedCount ()I d
	release (Lcom/mojang/blaze3d/audio/Channel;)Z a
com/mojang/blaze3d/audio/Library$Pool enw$c
	$VALUES c
	STATIC a
	STREAMING b
	$values ()[Lcom/mojang/blaze3d/audio/Library$Pool; a
com/mojang/blaze3d/audio/Listener enx
	gain a
	transform b
	getGain ()F a
	getTransform ()Lcom/mojang/blaze3d/audio/ListenerTransform; c
	reset ()V b
	setGain (F)V a
	setTransform (Lcom/mojang/blaze3d/audio/ListenerTransform;)V a
com/mojang/blaze3d/audio/ListenerTransform eny
	INITIAL a
	forward c
	position b
	up d
	forward ()Lnet/minecraft/world/phys/Vec3; c
	position ()Lnet/minecraft/world/phys/Vec3; b
	right ()Lnet/minecraft/world/phys/Vec3; a
	up ()Lnet/minecraft/world/phys/Vec3; d
com/mojang/blaze3d/audio/OggAudioStream enz
	EXPECTED_MAX_FRAME_SIZE a
	audioFormat c
	buffer e
	handle b
	input d
	convertMono (Ljava/nio/FloatBuffer;Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)V a
	convertStereo (Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)V a
	forwardBuffer ()V d
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
	readAll ()Ljava/nio/ByteBuffer; b
	readFrame (Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)Z a
	refillFromStream ()Z c
com/mojang/blaze3d/audio/OggAudioStream$OutputConcat enz$a
	bufferSize b
	buffers a
	byteCount c
	currentBuffer d
	createNewBuffer ()V b
	get ()Ljava/nio/ByteBuffer; a
	put (F)V a
com/mojang/blaze3d/audio/OpenAlUtil eoa
	LOGGER a
	alErrorToString (I)Ljava/lang/String; a
	alcErrorToString (I)Ljava/lang/String; b
	audioFormatToOpenAl (Ljavax/sound/sampled/AudioFormat;)I a
	checkALCError (JLjava/lang/String;)Z a
	checkALError (Ljava/lang/String;)Z a
com/mojang/blaze3d/audio/SoundBuffer eob
	alBuffer d
	data a
	format b
	hasAlBuffer c
	discardAlBuffer ()V b
	getAlBuffer ()Ljava/util/OptionalInt; a
	releaseAlBuffer ()Ljava/util/OptionalInt; c
com/mojang/blaze3d/font/GlyphInfo eod
	getAdvance (Z)F a
	getBoldOffset ()F a
	getShadowOffset ()F b
com/mojang/blaze3d/font/GlyphInfo$SpaceGlyphInfo eod$a
com/mojang/blaze3d/font/GlyphProvider eoe
	getGlyph (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
com/mojang/blaze3d/font/SheetGlyphInfo eof
	getBearingX ()F i
	getBearingY ()F j
	getDown ()F h
	getLeft ()F e
	getOversample ()F d
	getPixelHeight ()I b
	getPixelWidth ()I a
	getRight ()F f
	getUp ()F g
	isColored ()Z c
	upload (II)V a
com/mojang/blaze3d/font/SpaceProvider eog
	glyphs a
	getGlyph (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
com/mojang/blaze3d/font/SpaceProvider$Definition eog$a
	CODEC a
	advances c
	advances ()Ljava/util/Map; c
	type ()Lnet/minecraft/client/gui/font/providers/GlyphProviderType; a
	unpack ()Lcom/mojang/datafixers/util/Either; b
com/mojang/blaze3d/font/TrueTypeGlyphProvider eoh
	ascent h
	font b
	fontMemory a
	oversample c
	pointScale g
	shiftX e
	shiftY f
	skip d
	getGlyph (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
	validateFontOpen ()Lorg/lwjgl/stb/STBTTFontinfo; b
com/mojang/blaze3d/font/TrueTypeGlyphProvider$Glyph eoh$a
	advance f
	bearingX d
	bearingY e
	height c
	index g
	width b
com/mojang/blaze3d/pipeline/MainTarget eok
	DEFAULT_DIMENSIONS l
	DEFAULT_HEIGHT b
	DEFAULT_WIDTH a
	allocateAttachments (II)Lcom/mojang/blaze3d/pipeline/MainTarget$Dimension; c
	allocateColorAttachment (Lcom/mojang/blaze3d/pipeline/MainTarget$Dimension;)Z a
	allocateDepthAttachment (Lcom/mojang/blaze3d/pipeline/MainTarget$Dimension;)Z b
	createFrameBuffer (II)V b
com/mojang/blaze3d/pipeline/MainTarget$AttachmentState eok$a
	$VALUES f
	COLOR b
	COLOR_DEPTH d
	DEPTH c
	NONE a
	VALUES e
	$values ()[Lcom/mojang/blaze3d/pipeline/MainTarget$AttachmentState; a
	with (Lcom/mojang/blaze3d/pipeline/MainTarget$AttachmentState;)Lcom/mojang/blaze3d/pipeline/MainTarget$AttachmentState; a
com/mojang/blaze3d/pipeline/MainTarget$Dimension eok$b
	height b
	width a
	listWithFallback (II)Ljava/util/List; a
com/mojang/blaze3d/pipeline/RenderCall eol
com/mojang/blaze3d/pipeline/RenderPipeline eom
	isProcessing d
	isRecording b
	processedBuffer e
	recordingBuffer c
	renderCalls a
	renderingBuffer f
	beginProcessing ()Z e
	beginRecording ()Z b
	canBeginProcessing ()Z d
	canBeginRecording ()Z a
	endProcessing ()V g
	endRecording ()V c
	getProcessedQueue ()Ljava/util/concurrent/ConcurrentLinkedQueue; j
	getRecordingQueue ()Ljava/util/concurrent/ConcurrentLinkedQueue; i
	processRecordedQueue ()V f
	recordRenderCall (Lcom/mojang/blaze3d/pipeline/RenderCall;)V a
	startRendering ()Ljava/util/concurrent/ConcurrentLinkedQueue; h
com/mojang/blaze3d/pipeline/RenderTarget eon
	ALPHA_CHANNEL m
	BLUE_CHANNEL l
	GREEN_CHANNEL b
	RED_CHANNEL a
	clearChannels n
	colorTextureId i
	depthBufferId j
	filterMode k
	frameBufferId h
	height d
	useDepth g
	viewHeight f
	viewWidth e
	width c
	_bindWrite (Z)V c
	_blitToScreen (IIZ)V e
	_resize (IIZ)V d
	bindRead ()V c
	bindWrite (Z)V a
	blitToScreen (II)V a
	blitToScreen (IIZ)V c
	checkStatus ()V b
	clear (Z)V b
	copyDepthFrom (Lcom/mojang/blaze3d/pipeline/RenderTarget;)V a
	createBuffers (IIZ)V b
	destroyBuffers ()V a
	getColorTextureId ()I f
	getDepthTextureId ()I g
	resize (IIZ)V a
	setClearColor (FFFF)V a
	setFilterMode (I)V a
	unbindRead ()V d
	unbindWrite ()V e
com/mojang/blaze3d/pipeline/TextureTarget eoo
com/mojang/blaze3d/platform/ClipboardManager eoq
	FORMAT_UNAVAILABLE a
	clipboardScratchBuffer b
	getClipboard (JLorg/lwjgl/glfw/GLFWErrorCallbackI;)Ljava/lang/String; a
	pushClipboard (JLjava/nio/ByteBuffer;[B)V a
	setClipboard (JLjava/lang/String;)V a
com/mojang/blaze3d/platform/DebugMemoryUntracker eor
	UNTRACK a
	untrack (J)V a
	untrack (Lorg/lwjgl/system/Pointer;)V a
com/mojang/blaze3d/platform/DisplayData eos
	fullscreenHeight d
	fullscreenWidth c
	height b
	isFullscreen e
	width a
com/mojang/blaze3d/platform/GlDebug eot
	CIRCULAR_LOG_SIZE b
	DEBUG_LEVELS e
	DEBUG_LEVELS_ARB f
	LOGGER a
	MESSAGE_BUFFER c
	debugEnabled g
	lastEntry d
	enableDebugCallback (IZ)V a
	getLastOpenGlDebugMessages ()Ljava/util/List; a
	isDebugEnabled ()Z b
	printDebugLog (IIIIIJJ)V a
	printUnknownToken (I)Ljava/lang/String; d
	severityToString (I)Ljava/lang/String; c
	sourceToString (I)Ljava/lang/String; a
	typeToString (I)Ljava/lang/String; b
com/mojang/blaze3d/platform/GlDebug$LogEntry eot$a
	count f
	id a
	message e
	severity d
	source b
	type c
	isSame (IIIILjava/lang/String;)Z a
com/mojang/blaze3d/platform/GlStateManager$BlendState com/mojang/blaze3d/platform/GlStateManager$a
	dstAlpha e
	dstRgb c
	mode a
	srcAlpha d
	srcRgb b
com/mojang/blaze3d/platform/GlStateManager$BooleanState com/mojang/blaze3d/platform/GlStateManager$b
	enabled b
	state a
	disable ()V a
	enable ()V b
	setEnabled (Z)V a
com/mojang/blaze3d/platform/GlStateManager$ColorLogicState com/mojang/blaze3d/platform/GlStateManager$c
	enable a
	op b
com/mojang/blaze3d/platform/GlStateManager$ColorMask com/mojang/blaze3d/platform/GlStateManager$d
	alpha d
	blue c
	green b
	red a
com/mojang/blaze3d/platform/GlStateManager$CullState com/mojang/blaze3d/platform/GlStateManager$e
	enable a
	mode b
com/mojang/blaze3d/platform/GlStateManager$DepthState com/mojang/blaze3d/platform/GlStateManager$f
	func c
	mask b
	mode a
com/mojang/blaze3d/platform/GlStateManager$LogicOp com/mojang/blaze3d/platform/GlStateManager$g
	$VALUES r
	AND a
	AND_INVERTED b
	AND_REVERSE c
	CLEAR d
	COPY e
	COPY_INVERTED f
	EQUIV g
	INVERT h
	NAND i
	NOOP j
	NOR k
	OR l
	OR_INVERTED m
	OR_REVERSE n
	SET o
	XOR p
	value q
	$values ()[Lcom/mojang/blaze3d/platform/GlStateManager$LogicOp; a
com/mojang/blaze3d/platform/GlStateManager$PolygonOffsetState com/mojang/blaze3d/platform/GlStateManager$h
	factor c
	fill a
	line b
	units d
com/mojang/blaze3d/platform/GlStateManager$ScissorState com/mojang/blaze3d/platform/GlStateManager$i
	mode a
com/mojang/blaze3d/platform/GlStateManager$StencilFunc com/mojang/blaze3d/platform/GlStateManager$j
	func a
	mask c
	ref b
com/mojang/blaze3d/platform/GlStateManager$StencilState com/mojang/blaze3d/platform/GlStateManager$k
	fail c
	func a
	mask b
	zfail d
	zpass e
com/mojang/blaze3d/platform/GlStateManager$TextureState com/mojang/blaze3d/platform/GlStateManager$l
	binding a
com/mojang/blaze3d/platform/GlStateManager$Viewport com/mojang/blaze3d/platform/GlStateManager$m
	$VALUES f
	INSTANCE a
	height e
	width d
	x b
	y c
	$values ()[Lcom/mojang/blaze3d/platform/GlStateManager$Viewport; e
	height ()I d
	width ()I c
	x ()I a
	y ()I b
com/mojang/blaze3d/platform/GlUtil eou
	allocateMemory (I)Ljava/nio/ByteBuffer; a
	freeMemory (Ljava/nio/Buffer;)V a
	getCpuInfo ()Ljava/lang/String; b
	getOpenGLVersion ()Ljava/lang/String; d
	getRenderer ()Ljava/lang/String; c
	getVendor ()Ljava/lang/String; a
com/mojang/blaze3d/platform/IconSet eov
	$VALUES d
	RELEASE a
	SNAPSHOT b
	path c
	$values ()[Lcom/mojang/blaze3d/platform/IconSet; a
	getFile (Lnet/minecraft/server/packs/PackResources;Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	getMacIcon (Lnet/minecraft/server/packs/PackResources;)Lnet/minecraft/server/packs/resources/IoSupplier; b
	getStandardIcons (Lnet/minecraft/server/packs/PackResources;)Ljava/util/List; a
com/mojang/blaze3d/platform/InputConstants eow
	CURSOR bs
	CURSOR_DISABLED bt
	CURSOR_NORMAL bu
	GLFW_RAW_MOUSE_MOTION bx
	GLFW_RAW_MOUSE_MOTION_SUPPORTED bw
	KEY_0 a
	KEY_1 b
	KEY_2 c
	KEY_3 d
	KEY_4 e
	KEY_5 f
	KEY_6 g
	KEY_7 h
	KEY_8 i
	KEY_9 j
	KEY_A k
	KEY_ADD aB
	KEY_APOSTROPHE aC
	KEY_B l
	KEY_BACKSLASH aD
	KEY_BACKSPACE ba
	KEY_C m
	KEY_CAPSLOCK bh
	KEY_COMMA aE
	KEY_D n
	KEY_DELETE bb
	KEY_DOWN ax
	KEY_E o
	KEY_END bc
	KEY_EQUALS aF
	KEY_ESCAPE aZ
	KEY_F p
	KEY_F1 K
	KEY_F10 T
	KEY_F11 U
	KEY_F12 V
	KEY_F13 W
	KEY_F14 X
	KEY_F15 Y
	KEY_F16 Z
	KEY_F17 aa
	KEY_F18 ab
	KEY_F19 ac
	KEY_F2 L
	KEY_F20 ad
	KEY_F21 ae
	KEY_F22 af
	KEY_F23 ag
	KEY_F24 ah
	KEY_F25 ai
	KEY_F3 M
	KEY_F4 N
	KEY_F5 O
	KEY_F6 P
	KEY_F7 Q
	KEY_F8 R
	KEY_F9 S
	KEY_G q
	KEY_GRAVE aG
	KEY_H r
	KEY_HOME bd
	KEY_I s
	KEY_INSERT be
	KEY_J t
	KEY_K u
	KEY_L v
	KEY_LALT aQ
	KEY_LBRACKET aH
	KEY_LCONTROL aR
	KEY_LEFT ay
	KEY_LSHIFT aS
	KEY_LWIN aT
	KEY_M w
	KEY_MINUS aI
	KEY_MULTIPLY aJ
	KEY_N x
	KEY_NUMLOCK aj
	KEY_NUMPAD0 ak
	KEY_NUMPAD1 al
	KEY_NUMPAD2 am
	KEY_NUMPAD3 an
	KEY_NUMPAD4 ao
	KEY_NUMPAD5 ap
	KEY_NUMPAD6 aq
	KEY_NUMPAD7 ar
	KEY_NUMPAD8 as
	KEY_NUMPAD9 at
	KEY_NUMPADCOMMA au
	KEY_NUMPADENTER av
	KEY_NUMPADEQUALS aw
	KEY_O y
	KEY_P z
	KEY_PAGEDOWN bf
	KEY_PAGEUP bg
	KEY_PAUSE bi
	KEY_PERIOD aK
	KEY_PRINTSCREEN bk
	KEY_Q A
	KEY_R B
	KEY_RALT aU
	KEY_RBRACKET aL
	KEY_RCONTROL aV
	KEY_RETURN aY
	KEY_RIGHT az
	KEY_RSHIFT aW
	KEY_RWIN aX
	KEY_S C
	KEY_SCROLLLOCK bj
	KEY_SEMICOLON aM
	KEY_SLASH aN
	KEY_SPACE aO
	KEY_T D
	KEY_TAB aP
	KEY_U E
	KEY_UP aA
	KEY_V F
	KEY_W G
	KEY_X H
	KEY_Y I
	KEY_Z J
	MOD_CONTROL br
	MOUSE_BUTTON_LEFT bo
	MOUSE_BUTTON_MIDDLE bp
	MOUSE_BUTTON_RIGHT bq
	PRESS bl
	RELEASE bm
	REPEAT bn
	UNKNOWN bv
	getKey (II)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
	getKey (Ljava/lang/String;)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
	grabOrReleaseMouse (JIDD)V a
	isKeyDown (JI)Z a
	isRawMouseInputSupported ()Z a
	setupKeyboardCallbacks (JLorg/lwjgl/glfw/GLFWKeyCallbackI;Lorg/lwjgl/glfw/GLFWCharModsCallbackI;)V a
	setupMouseCallbacks (JLorg/lwjgl/glfw/GLFWCursorPosCallbackI;Lorg/lwjgl/glfw/GLFWMouseButtonCallbackI;Lorg/lwjgl/glfw/GLFWScrollCallbackI;Lorg/lwjgl/glfw/GLFWDropCallbackI;)V a
	updateRawMouseInput (JZ)V a
com/mojang/blaze3d/platform/InputConstants$Key eow$a
	NAME_MAP e
	displayName d
	name a
	type b
	value c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getName ()Ljava/lang/String; c
	getNumericKeyValue ()Ljava/util/OptionalInt; e
	getType ()Lcom/mojang/blaze3d/platform/InputConstants$Type; a
	getValue ()I b
com/mojang/blaze3d/platform/InputConstants$Type eow$b
	$VALUES h
	KEYSYM a
	KEY_KEYBOARD_UNKNOWN d
	MOUSE c
	SCANCODE b
	defaultPrefix f
	displayTextSupplier g
	map e
	$values ()[Lcom/mojang/blaze3d/platform/InputConstants$Type; a
	addKey (Lcom/mojang/blaze3d/platform/InputConstants$Type;Ljava/lang/String;I)V a
	getOrCreate (I)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
com/mojang/blaze3d/platform/Lighting eox
	DIFFUSE_LIGHT_0 a
	DIFFUSE_LIGHT_1 b
	INVENTORY_DIFFUSE_LIGHT_0 e
	INVENTORY_DIFFUSE_LIGHT_1 f
	NETHER_DIFFUSE_LIGHT_0 c
	NETHER_DIFFUSE_LIGHT_1 d
	setupFor3DItems ()V b
	setupForEntityInInventory ()V c
	setupForFlatItems ()V a
	setupLevel (Lorg/joml/Matrix4f;)V b
	setupNetherLevel (Lorg/joml/Matrix4f;)V a
com/mojang/blaze3d/platform/MacosUtil eoy
	NS_FULL_SCREEN_WINDOW_MASK b
	NS_RESIZABLE_WINDOW_MASK a
	clearResizableBit (J)V b
	exitNativeFullscreen (J)V a
	getNsWindow (J)Ljava/util/Optional; c
	getStyleMask (Lca/weblite/objc/NSObject;)J b
	isInNativeFullscreen (Lca/weblite/objc/NSObject;)Z a
	loadIcon (Lnet/minecraft/server/packs/resources/IoSupplier;)V a
	toggleNativeFullscreen (Lca/weblite/objc/NSObject;)V c
com/mojang/blaze3d/platform/MemoryTracker eoz
	ALLOCATOR a
	create (I)Ljava/nio/ByteBuffer; a
	free (Ljava/nio/ByteBuffer;)V a
	resize (Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer; a
com/mojang/blaze3d/platform/Monitor epa
	currentMode c
	monitor a
	videoModes b
	x d
	y e
	getCurrentMode ()Lcom/mojang/blaze3d/platform/VideoMode; b
	getMode (I)Lcom/mojang/blaze3d/platform/VideoMode; a
	getModeCount ()I e
	getMonitor ()J f
	getPreferredVidMode (Ljava/util/Optional;)Lcom/mojang/blaze3d/platform/VideoMode; a
	getVideoModeIndex (Lcom/mojang/blaze3d/platform/VideoMode;)I a
	getX ()I c
	getY ()I d
	refreshVideoModes ()V a
com/mojang/blaze3d/platform/MonitorCreator epb
com/mojang/blaze3d/platform/NativeImage epc
	LOGGER a
	OPEN_OPTIONS b
	format c
	height e
	pixels g
	size h
	useStbFree f
	width d
	_upload (IIIIIIIZZZZ)V b
	applyToAllPixels (Ljava/util/function/IntUnaryOperator;)V b
	asByteArray ()[B g
	blendPixel (III)V b
	checkAllocated ()V j
	copyFrom (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	copyFromFont (Lorg/lwjgl/stb/STBTTFontinfo;IIIFFFFII)V a
	copyRect (IIIIIIZZ)V a
	copyRect (Lcom/mojang/blaze3d/platform/NativeImage;IIIIIIZZ)V a
	downloadDepthBuffer (F)V a
	downloadTexture (IZ)V a
	drawPixels ()V f
	fillRect (IIIII)V a
	flipY ()V h
	format ()Lcom/mojang/blaze3d/platform/NativeImage$Format; c
	getBlueOrLuminance (II)B d
	getGreenOrLuminance (II)B c
	getHeight ()I b
	getLuminanceOrAlpha (II)B e
	getPixelRGBA (II)I a
	getPixelsRGBA ()[I d
	getRedOrLuminance (II)B b
	getWidth ()I a
	isOutsideBounds (II)Z f
	makePixelArray ()[I e
	mappedCopy (Ljava/util/function/IntUnaryOperator;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Lcom/mojang/blaze3d/platform/NativeImage$Format;Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Lcom/mojang/blaze3d/platform/NativeImage$Format;Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read ([B)Lcom/mojang/blaze3d/platform/NativeImage; a
	resizeSubRectTo (IIIILcom/mojang/blaze3d/platform/NativeImage;)V a
	setFilter (ZZ)V a
	setPixelLuminance (IIB)V a
	setPixelRGBA (III)V a
	untrack ()V i
	upload (IIIIIIIZZ)V a
	upload (IIIIIIIZZZZ)V a
	upload (IIIZ)V a
	writeToChannel (Ljava/nio/channels/WritableByteChannel;)Z a
	writeToFile (Ljava/io/File;)V a
	writeToFile (Ljava/nio/file/Path;)V a
com/mojang/blaze3d/platform/NativeImage$Format epc$a
	$VALUES r
	LUMINANCE d
	LUMINANCE_ALPHA c
	RGB b
	RGBA a
	alphaOffset p
	blueOffset n
	components e
	glFormat f
	greenOffset m
	hasAlpha k
	hasBlue i
	hasGreen h
	hasLuminance j
	hasRed g
	luminanceOffset o
	redOffset l
	supportedByStb q
	$values ()[Lcom/mojang/blaze3d/platform/NativeImage$Format; x
	alphaOffset ()I n
	blueOffset ()I l
	components ()I a
	getStbFormat (I)Lcom/mojang/blaze3d/platform/NativeImage$Format; a
	glFormat ()I d
	greenOffset ()I k
	hasAlpha ()Z i
	hasBlue ()Z g
	hasGreen ()Z f
	hasLuminance ()Z h
	hasLuminanceOrAlpha ()Z r
	hasLuminanceOrBlue ()Z q
	hasLuminanceOrGreen ()Z p
	hasLuminanceOrRed ()Z o
	hasRed ()Z e
	luminanceOffset ()I m
	luminanceOrAlphaOffset ()I v
	luminanceOrBlueOffset ()I u
	luminanceOrGreenOffset ()I t
	luminanceOrRedOffset ()I s
	redOffset ()I j
	setPackPixelStoreState ()V b
	setUnpackPixelStoreState ()V c
	supportedByStb ()Z w
com/mojang/blaze3d/platform/NativeImage$InternalGlFormat epc$b
	$VALUES f
	RED d
	RG c
	RGB b
	RGBA a
	glFormat e
	$values ()[Lcom/mojang/blaze3d/platform/NativeImage$InternalGlFormat; b
	glFormat ()I a
com/mojang/blaze3d/platform/NativeImage$WriteCallback epc$c
	exception b
	output a
	throwIfException ()V a
com/mojang/blaze3d/platform/ScreenManager epd
	LOGGER a
	monitorCreator c
	monitors b
	clamp (III)I a
	findBestMonitor (Lcom/mojang/blaze3d/platform/Window;)Lcom/mojang/blaze3d/platform/Monitor; a
	getMonitor (J)Lcom/mojang/blaze3d/platform/Monitor; a
	onMonitorChange (JI)V a
	shutdown ()V a
com/mojang/blaze3d/platform/VideoMode epe
	PATTERN g
	blueBits e
	greenBits d
	height b
	redBits c
	refreshRate f
	width a
	getBlueBits ()I e
	getGreenBits ()I d
	getHeight ()I b
	getRedBits ()I c
	getRefreshRate ()I f
	getWidth ()I a
	read (Ljava/lang/String;)Ljava/util/Optional; a
	write ()Ljava/lang/String; g
com/mojang/blaze3d/platform/Window epf
	LOGGER a
	actuallyFullscreen l
	defaultErrorCallback b
	dirty w
	errorSection v
	eventHandler c
	framebufferHeight r
	framebufferWidth q
	framerateLimit x
	fullscreen k
	guiScale u
	guiScaledHeight t
	guiScaledWidth s
	height p
	preferredFullscreenVideoMode j
	screenManager d
	vsync y
	width o
	window e
	windowedHeight i
	windowedWidth h
	windowedX f
	windowedY g
	x m
	y n
	bootCrash (IJ)V b
	calculateScale (IZ)I a
	changeFullscreenVideoMode ()V g
	checkGlfwError (Ljava/util/function/BiConsumer;)V a
	defaultErrorCallback (IJ)V a
	findBestMonitor ()Lcom/mojang/blaze3d/platform/Monitor; t
	getFramerateLimit ()I d
	getGuiScale ()D s
	getGuiScaledHeight ()I p
	getGuiScaledWidth ()I o
	getHeight ()I l
	getPreferredFullscreenVideoMode ()Ljava/util/Optional; f
	getRefreshRate ()I a
	getScreenHeight ()I n
	getScreenWidth ()I m
	getWidth ()I k
	getWindow ()J i
	getX ()I q
	getY ()I r
	isFullscreen ()Z j
	onEnter (JZ)V b
	onFocus (JZ)V a
	onFramebufferResize (JII)V b
	onMove (JII)V a
	onResize (JII)V c
	refreshFramebufferSize ()V v
	setBootErrorCallback ()V u
	setDefaultErrorCallback ()V c
	setErrorSection (Ljava/lang/String;)V a
	setFramerateLimit (I)V a
	setGuiScale (D)V a
	setHeight (I)V c
	setIcon (Lnet/minecraft/server/packs/PackResources;Lcom/mojang/blaze3d/platform/IconSet;)V a
	setMode ()V w
	setPreferredFullscreenVideoMode (Ljava/util/Optional;)V a
	setTitle (Ljava/lang/String;)V b
	setWidth (I)V b
	setWindowed (II)V a
	shouldClose ()Z b
	toggleFullScreen ()V h
	updateDisplay ()V e
	updateFullscreen (Z)V c
	updateRawMouseInput (Z)V b
	updateVsync (Z)V a
com/mojang/blaze3d/platform/Window$WindowInitFailed epf$a
com/mojang/blaze3d/platform/WindowEventHandler epg
	cursorEntered ()V b
	resizeDisplay ()V a
	setWindowActive (Z)V a
com/mojang/blaze3d/preprocessor/GlslPreprocessor epi
	C_COMMENT a
	LINE_COMMENT b
	REGEX_ENDS_WITH_WHITESPACE e
	REGEX_MOJ_IMPORT c
	REGEX_VERSION d
	applyImport (ZLjava/lang/String;)Ljava/lang/String; a
	isDirectiveDisabled (Ljava/lang/String;Ljava/util/regex/Matcher;I)Z a
	isDirectiveEnabled (Ljava/lang/String;Ljava/util/regex/Matcher;)Z a
	process (Ljava/lang/String;)Ljava/util/List; a
	processImports (Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor$Context;Ljava/lang/String;)Ljava/util/List; a
	processVersions (Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor$Context;)Ljava/lang/String; a
	setVersion (Ljava/lang/String;I)Ljava/lang/String; a
com/mojang/blaze3d/preprocessor/GlslPreprocessor$Context epi$a
	glslVersion a
	sourceId b
com/mojang/blaze3d/shaders/AbstractUniform epk
	set (F)V a
	set (FF)V a
	set (FFF)V a
	set (FFFF)V a
	set (I)V a
	set (II)V a
	set (III)V a
	set (IIII)V b
	set (Lorg/joml/Matrix3f;)V a
	set (Lorg/joml/Matrix4f;)V a
	set (Lorg/joml/Vector3f;)V a
	set (Lorg/joml/Vector4f;)V a
	set ([F)V a
	setMat2x2 (FFFF)V c
	setMat2x3 (FFFFFF)V a
	setMat2x4 (FFFFFFFF)V a
	setMat3x2 (FFFFFF)V b
	setMat3x3 (FFFFFFFFF)V a
	setMat3x4 (FFFFFFFFFFFF)V a
	setMat4x2 (FFFFFFFF)V b
	setMat4x3 (FFFFFFFFFFFF)V b
	setMat4x4 (FFFFFFFFFFFFFFFF)V a
	setSafe (FFFF)V b
	setSafe (IIII)V a
com/mojang/blaze3d/shaders/BlendMode epl
	blendFunc f
	dstAlphaFactor e
	dstColorFactor d
	lastApplied a
	opaque h
	separateBlend g
	srcAlphaFactor c
	srcColorFactor b
	apply ()V a
	isOpaque ()Z b
	stringToBlendFactor (Ljava/lang/String;)I b
	stringToBlendFunc (Ljava/lang/String;)I a
com/mojang/blaze3d/shaders/Effect epm
com/mojang/blaze3d/shaders/EffectProgram epn
	PREPROCESSOR a
	references b
	attachToEffect (Lcom/mojang/blaze3d/shaders/Effect;)V a
	close ()V a
	compileShader (Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/EffectProgram; a
com/mojang/blaze3d/shaders/FogShape epo
	$VALUES d
	CYLINDER b
	SPHERE a
	index c
	$values ()[Lcom/mojang/blaze3d/shaders/FogShape; b
	getIndex ()I a
com/mojang/blaze3d/shaders/Program epp
	MAX_LOG_LENGTH a
	id d
	name c
	type b
	attachToShader (Lcom/mojang/blaze3d/shaders/Shader;)V a
	close ()V a
	compileShader (Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor;)Lcom/mojang/blaze3d/shaders/Program; a
	compileShaderInternal (Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor;)I b
	getId ()I c
	getName ()Ljava/lang/String; b
com/mojang/blaze3d/shaders/Program$Type epp$a
	$VALUES g
	FRAGMENT b
	VERTEX a
	extension d
	glType e
	name c
	programs f
	$values ()[Lcom/mojang/blaze3d/shaders/Program$Type; e
	getExtension ()Ljava/lang/String; b
	getGlType ()I d
	getName ()Ljava/lang/String; a
	getPrograms ()Ljava/util/Map; c
com/mojang/blaze3d/shaders/ProgramManager epq
	LOGGER a
	createProgram ()I a
	glUseProgram (I)V a
	linkShader (Lcom/mojang/blaze3d/shaders/Shader;)V b
	releaseProgram (Lcom/mojang/blaze3d/shaders/Shader;)V a
com/mojang/blaze3d/shaders/Shader epr
	attachToProgram ()V e
	getFragmentProgram ()Lcom/mojang/blaze3d/shaders/Program; d
	getId ()I a
	getVertexProgram ()Lcom/mojang/blaze3d/shaders/Program; c
	markDirty ()V b
com/mojang/blaze3d/shaders/Uniform eps
	LOGGER l
	TRANSPOSE_MATRICIES m
	UT_FLOAT1 e
	UT_FLOAT2 f
	UT_FLOAT3 g
	UT_FLOAT4 h
	UT_INT1 a
	UT_INT2 b
	UT_INT3 c
	UT_INT4 d
	UT_MAT2 i
	UT_MAT3 j
	UT_MAT4 k
	count o
	dirty t
	floatValues r
	intValues q
	location n
	name s
	parent u
	type p
	getCount ()I d
	getFloatBuffer ()Ljava/nio/FloatBuffer; g
	getIntBuffer ()Ljava/nio/IntBuffer; f
	getLocation ()I c
	getName ()Ljava/lang/String; a
	getType ()I e
	getTypeFromString (Ljava/lang/String;)I a
	glBindAttribLocation (IILjava/lang/CharSequence;)V a
	glGetAttribLocation (ILjava/lang/CharSequence;)I b
	glGetUniformLocation (ILjava/lang/CharSequence;)I a
	markDirty ()V h
	set (F)V a
	set (FF)V a
	set (FFF)V a
	set (FFFF)V a
	set (I)V a
	set (IF)V a
	set (II)V a
	set (III)V a
	set (IIII)V b
	set (Lorg/joml/Matrix3f;)V a
	set (Lorg/joml/Matrix4f;)V a
	set (Lorg/joml/Vector3f;)V a
	set (Lorg/joml/Vector4f;)V a
	set ([F)V a
	setLocation (I)V b
	setMat2x2 (FFFF)V c
	setMat2x3 (FFFFFF)V a
	setMat2x4 (FFFFFFFF)V a
	setMat3x2 (FFFFFF)V b
	setMat3x3 (FFFFFFFFF)V a
	setMat3x4 (FFFFFFFFFFFF)V a
	setMat4x2 (FFFFFFFF)V b
	setMat4x3 (FFFFFFFFFFFF)V b
	setMat4x4 (FFFFFFFFFFFFFFFF)V a
	setSafe (FFFF)V b
	setSafe (IIII)V a
	upload ()V b
	uploadAsFloat ()V j
	uploadAsInteger ()V i
	uploadAsMatrix ()V k
	uploadInteger (II)V b
com/mojang/blaze3d/systems/RenderSystem$AutoStorageIndexBuffer com/mojang/blaze3d/systems/RenderSystem$a
	generator c
	indexCount f
	indexStride b
	name d
	type e
	vertexStride a
	bind (I)V b
	ensureStorage (I)V c
	hasStorage (I)Z a
	intConsumer (Ljava/nio/ByteBuffer;)Lit/unimi/dsi/fastutil/ints/IntConsumer; a
	type ()Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; a
com/mojang/blaze3d/systems/RenderSystem$AutoStorageIndexBuffer$IndexGenerator com/mojang/blaze3d/systems/RenderSystem$a$a
com/mojang/blaze3d/systems/TimerQuery epu
	nextQueryName a
	beginProfile ()V b
	endProfile ()Lcom/mojang/blaze3d/systems/TimerQuery$FrameProfile; c
	getInstance ()Ljava/util/Optional; a
com/mojang/blaze3d/systems/TimerQuery$FrameProfile epu$a
	CANCELLED_RESULT b
	NO_RESULT a
	queryName c
	result d
	cancel ()V a
	get ()J c
	isDone ()Z b
com/mojang/blaze3d/systems/TimerQuery$TimerQueryLazyLoader epu$b
	INSTANCE a
	instantiate ()Lcom/mojang/blaze3d/systems/TimerQuery; a
com/mojang/blaze3d/vertex/BufferBuilder epw
	LOGGER g
	MAX_GROWTH_SIZE f
	buffer h
	building t
	closed i
	currentElement n
	elementIndex o
	fastFormat r
	format p
	fullFormat s
	indexOnly w
	mode q
	nextElementByte l
	renderedBufferCount j
	renderedBufferPointer k
	sorting v
	sortingPoints u
	vertices m
	begin (Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;Lcom/mojang/blaze3d/vertex/VertexFormat;)V a
	bufferSlice (II)Ljava/nio/ByteBuffer; c
	building ()Z k
	checkOpen ()V n
	clear ()V g
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	currentElement ()Lcom/mojang/blaze3d/vertex/VertexFormatElement; j
	discard ()V h
	end ()Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer; d
	endOrDiscardIfEmpty ()Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer; c
	endVertex ()V e
	ensureCapacity (I)V d
	ensureDrawing ()V p
	ensureVertexCapacity ()V m
	getSortState ()Lcom/mojang/blaze3d/vertex/BufferBuilder$SortState; a
	intConsumer (ILcom/mojang/blaze3d/vertex/VertexFormat$IndexType;)Lit/unimi/dsi/fastutil/ints/IntConsumer; a
	isCurrentBatchEmpty ()Z b
	makeQuadSortingPoints ()[Lorg/joml/Vector3f; o
	nextElement ()V f
	putByte (IB)V a
	putFloat (IF)V a
	putShort (IS)V a
	putSortedQuadIndices (Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType;)V a
	release ()V i
	releaseRenderedBuffer ()V s
	reset ()V r
	restoreSortState (Lcom/mojang/blaze3d/vertex/BufferBuilder$SortState;)V a
	setQuadSorting (Lcom/mojang/blaze3d/vertex/VertexSorting;)V a
	storeRenderedBuffer ()Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer; q
	switchFormat (Lcom/mojang/blaze3d/vertex/VertexFormat;)V a
	vertex (FFFFFFFFFIIFFF)V a
com/mojang/blaze3d/vertex/BufferBuilder$DrawState epw$a
	format a
	indexCount c
	indexOnly f
	indexType e
	mode d
	sequentialIndex g
	vertexCount b
	bufferSize ()I f
	format ()Lcom/mojang/blaze3d/vertex/VertexFormat; g
	indexBufferEnd ()I e
	indexBufferSize ()I n
	indexBufferStart ()I d
	indexCount ()I i
	indexOnly ()Z l
	indexType ()Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; k
	mode ()Lcom/mojang/blaze3d/vertex/VertexFormat$Mode; j
	sequentialIndex ()Z m
	vertexBufferEnd ()I c
	vertexBufferSize ()I a
	vertexBufferStart ()I b
	vertexCount ()I h
com/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer epw$b
	drawState c
	pointer b
	released d
	drawState ()Lcom/mojang/blaze3d/vertex/BufferBuilder$DrawState; c
	indexBuffer ()Ljava/nio/ByteBuffer; b
	isEmpty ()Z d
	release ()V e
	vertexBuffer ()Ljava/nio/ByteBuffer; a
com/mojang/blaze3d/vertex/BufferBuilder$SortState epw$c
	mode a
	sorting d
	sortingPoints c
	vertices b
com/mojang/blaze3d/vertex/BufferUploader epx
	lastImmediateBuffer a
	_drawWithShader (Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer;)V c
	bindImmediateBuffer (Lcom/mojang/blaze3d/vertex/VertexBuffer;)V a
	bindImmediateBuffer (Lcom/mojang/blaze3d/vertex/VertexFormat;)Lcom/mojang/blaze3d/vertex/VertexBuffer; a
	draw (Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer;)V b
	drawWithShader (Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer;)V a
	invalidate ()V b
	reset ()V a
	upload (Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer;)Lcom/mojang/blaze3d/vertex/VertexBuffer; d
com/mojang/blaze3d/vertex/BufferVertexConsumer epy
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	currentElement ()Lcom/mojang/blaze3d/vertex/VertexFormatElement; j
	nextElement ()V f
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	normalIntValue (F)B a
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	putByte (IB)V a
	putFloat (IF)V a
	putShort (IS)V a
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	uvShort (SSI)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/DefaultVertexFormat epz
	BLIT_SCREEN i
	BLOCK j
	ELEMENT_COLOR b
	ELEMENT_NORMAL f
	ELEMENT_PADDING g
	ELEMENT_POSITION a
	ELEMENT_UV h
	ELEMENT_UV0 c
	ELEMENT_UV1 d
	ELEMENT_UV2 e
	NEW_ENTITY k
	PARTICLE l
	POSITION m
	POSITION_COLOR n
	POSITION_COLOR_LIGHTMAP p
	POSITION_COLOR_NORMAL o
	POSITION_COLOR_TEX r
	POSITION_COLOR_TEX_LIGHTMAP t
	POSITION_TEX q
	POSITION_TEX_COLOR s
	POSITION_TEX_COLOR_NORMAL v
	POSITION_TEX_LIGHTMAP_COLOR u
com/mojang/blaze3d/vertex/DefaultedVertexConsumer eqa
	defaultA e
	defaultB d
	defaultColorSet a
	defaultG c
	defaultR b
	defaultColor (IIII)V b
	unsetDefaultColor ()V l
com/mojang/blaze3d/vertex/PoseStack eqb
	poseStack a
	clear ()Z d
	last ()Lcom/mojang/blaze3d/vertex/PoseStack$Pose; c
	mulPose (Lorg/joml/Quaternionf;)V a
	mulPoseMatrix (Lorg/joml/Matrix4f;)V a
	popPose ()V b
	pushPose ()V a
	rotateAround (Lorg/joml/Quaternionf;FFF)V a
	scale (FFF)V b
	setIdentity ()V e
	translate (DDD)V a
	translate (FFF)V a
com/mojang/blaze3d/vertex/PoseStack$Pose eqb$a
	normal b
	pose a
	normal ()Lorg/joml/Matrix3f; b
	pose ()Lorg/joml/Matrix4f; a
com/mojang/blaze3d/vertex/SheetedDecalTextureGenerator eqc
	cameraInversePose g
	delegate f
	lightCoords o
	normalInversePose h
	nx p
	ny q
	nz r
	overlayU m
	overlayV n
	textureScale i
	x j
	y k
	z l
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	endVertex ()V e
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	resetState ()V a
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/Tesselator eqd
	MAX_BYTES a
	builder b
	instance c
	end ()V c
	getBuilder ()Lcom/mojang/blaze3d/vertex/BufferBuilder; d
	getInstance ()Lcom/mojang/blaze3d/vertex/Tesselator; b
	init ()V a
com/mojang/blaze3d/vertex/VertexBuffer eqe
	arrayObjectId d
	format e
	indexBufferId c
	indexCount h
	indexType g
	mode i
	sequentialIndices f
	usage a
	vertexBufferId b
	_drawWithShader (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lnet/minecraft/client/renderer/ShaderInstance;)V b
	bind ()V a
	draw ()V c
	drawWithShader (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lnet/minecraft/client/renderer/ShaderInstance;)V a
	getFormat ()Lcom/mojang/blaze3d/vertex/VertexFormat; d
	getIndexType ()Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; f
	isInvalid ()Z e
	unbind ()V b
	upload (Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer;)V a
	uploadIndexBuffer (Lcom/mojang/blaze3d/vertex/BufferBuilder$DrawState;Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/systems/RenderSystem$AutoStorageIndexBuffer; b
	uploadVertexBuffer (Lcom/mojang/blaze3d/vertex/BufferBuilder$DrawState;Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/vertex/VertexFormat; a
com/mojang/blaze3d/vertex/VertexBuffer$Usage eqe$a
	$VALUES d
	DYNAMIC b
	STATIC a
	id c
	$values ()[Lcom/mojang/blaze3d/vertex/VertexBuffer$Usage; a
com/mojang/blaze3d/vertex/VertexConsumer eqf
	color (FFFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	color (I)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V e
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	normal (Lorg/joml/Matrix3f;FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	overlayCoords (I)Lcom/mojang/blaze3d/vertex/VertexConsumer; c
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	putBulkData (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;FFFII)V a
	putBulkData (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;[FFFF[IIZ)V a
	unsetDefaultColor ()V l
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (I)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
	vertex (Lorg/joml/Matrix4f;FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/VertexFormat eqg
	elementMapping b
	elements a
	immediateDrawVertexBuffer e
	offsets c
	vertexSize d
	_clearBufferState ()V i
	_setupBufferState ()V h
	clearBufferState ()V f
	getElementAttributeNames ()Lcom/google/common/collect/ImmutableList; d
	getElements ()Lcom/google/common/collect/ImmutableList; c
	getImmediateDrawVertexBuffer ()Lcom/mojang/blaze3d/vertex/VertexBuffer; g
	getIntegerSize ()I a
	getVertexSize ()I b
	setupBufferState ()V e
com/mojang/blaze3d/vertex/VertexFormat$IndexType eqg$a
	$VALUES e
	INT b
	SHORT a
	asGLType c
	bytes d
	$values ()[Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; a
	least (I)Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; a
com/mojang/blaze3d/vertex/VertexFormat$Mode eqg$b
	$VALUES m
	DEBUG_LINES c
	DEBUG_LINE_STRIP d
	LINES a
	LINE_STRIP b
	QUADS h
	TRIANGLES e
	TRIANGLE_FAN g
	TRIANGLE_STRIP f
	asGLMode i
	connectedPrimitives l
	primitiveLength j
	primitiveStride k
	$values ()[Lcom/mojang/blaze3d/vertex/VertexFormat$Mode; a
	indexCount (I)I a
com/mojang/blaze3d/vertex/VertexFormatElement eqh
	byteSize e
	count d
	index c
	type a
	usage b
	clearBufferState (I)V a
	getByteSize ()I e
	getCount ()I c
	getIndex ()I d
	getType ()Lcom/mojang/blaze3d/vertex/VertexFormatElement$Type; a
	getUsage ()Lcom/mojang/blaze3d/vertex/VertexFormatElement$Usage; b
	isPosition ()Z f
	setupBufferState (IJI)V a
	supportsUsage (ILcom/mojang/blaze3d/vertex/VertexFormatElement$Usage;)Z a
com/mojang/blaze3d/vertex/VertexFormatElement$Type eqh$a
	$VALUES k
	BYTE c
	FLOAT a
	INT g
	SHORT e
	UBYTE b
	UINT f
	USHORT d
	glType j
	name i
	size h
	$values ()[Lcom/mojang/blaze3d/vertex/VertexFormatElement$Type; d
	getGlType ()I c
	getName ()Ljava/lang/String; b
	getSize ()I a
com/mojang/blaze3d/vertex/VertexFormatElement$Usage eqh$b
	$VALUES j
	COLOR c
	GENERIC f
	NORMAL b
	PADDING e
	POSITION a
	UV d
	clearState i
	name g
	setupState h
	$values ()[Lcom/mojang/blaze3d/vertex/VertexFormatElement$Usage; b
	clearBufferState (II)V a
	getName ()Ljava/lang/String; a
	setupBufferState (IIIJII)V a
com/mojang/blaze3d/vertex/VertexFormatElement$Usage$ClearState eqh$b$a
com/mojang/blaze3d/vertex/VertexFormatElement$Usage$SetupState eqh$b$b
com/mojang/blaze3d/vertex/VertexMultiConsumer eqi
	create ()Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	create (Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	create (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	create ([Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/VertexMultiConsumer$Double eqi$a
	first a
	second b
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V e
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V l
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
com/mojang/blaze3d/vertex/VertexMultiConsumer$Multiple eqi$b
	delegates a
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V e
	forEach (Ljava/util/function/Consumer;)V a
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V l
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
com/mojang/blaze3d/vertex/VertexSorting eqj
	DISTANCE_TO_ORIGIN a
	ORTHOGRAPHIC_Z b
	byDistance (FFF)Lcom/mojang/blaze3d/vertex/VertexSorting; a
	byDistance (Lcom/mojang/blaze3d/vertex/VertexSorting$DistanceFunction;)Lcom/mojang/blaze3d/vertex/VertexSorting; a
	byDistance (Lorg/joml/Vector3f;)Lcom/mojang/blaze3d/vertex/VertexSorting; a
com/mojang/blaze3d/vertex/VertexSorting$DistanceFunction eqj$a
com/mojang/math/Axis a
	XN a
	XP b
	YN c
	YP d
	ZN e
	ZP f
com/mojang/math/Constants b
	DEG_TO_RAD c
	EPSILON d
	PI a
	RAD_TO_DEG b
com/mojang/math/Divisor c
	denominator a
	mod c
	quotient b
	remainder e
	returnedParts d
	asIterable (II)Ljava/lang/Iterable; a
com/mojang/math/FieldsAreNonnullByDefault d
com/mojang/math/GivensParameters e
	cosHalf b
	sinHalf a
	aroundX (Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f; a
	aroundX (Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf; a
	aroundY (Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f; b
	aroundY (Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf; b
	aroundZ (Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f; c
	aroundZ (Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf; c
	cos ()F b
	cosHalf ()F e
	fromPositiveAngle (F)Lcom/mojang/math/GivensParameters; a
	fromUnnormalized (FF)Lcom/mojang/math/GivensParameters; a
	inverse ()Lcom/mojang/math/GivensParameters; a
	sin ()F c
	sinHalf ()F d
com/mojang/math/MatrixUtil f
	G a
	PI_4 b
	approxGivensQuat (FFF)Lcom/mojang/math/GivensParameters; a
	eigenvalueJacobi (Lorg/joml/Matrix3f;I)Lorg/joml/Quaternionf; a
	mulComponentWise (Lorg/joml/Matrix4f;F)Lorg/joml/Matrix4f; a
	qrGivensQuat (FF)Lcom/mojang/math/GivensParameters; a
	similarityTransform (Lorg/joml/Matrix3f;Lorg/joml/Matrix3f;)V a
	stepJacobi (Lorg/joml/Matrix3f;Lorg/joml/Matrix3f;Lorg/joml/Quaternionf;Lorg/joml/Quaternionf;)V a
	svdDecompose (Lorg/joml/Matrix3f;)Lorg/apache/commons/lang3/tuple/Triple; a
com/mojang/math/MethodsReturnNonnullByDefault g
com/mojang/math/OctahedralGroup h
	$VALUES ag
	IDENTITY a
	INVERSION y
	INVERT_X z
	INVERT_Y A
	INVERT_Z B
	ROT_120_NNN e
	ROT_120_NNP f
	ROT_120_NPN g
	ROT_120_NPP h
	ROT_120_PNN i
	ROT_120_PNP j
	ROT_120_PPN k
	ROT_120_PPP l
	ROT_180_EDGE_XY_NEG m
	ROT_180_EDGE_XY_POS n
	ROT_180_EDGE_XZ_NEG o
	ROT_180_EDGE_XZ_POS p
	ROT_180_EDGE_YZ_NEG q
	ROT_180_EDGE_YZ_POS r
	ROT_180_FACE_XY b
	ROT_180_FACE_XZ c
	ROT_180_FACE_YZ d
	ROT_60_REF_NNN C
	ROT_60_REF_NNP D
	ROT_60_REF_NPN E
	ROT_60_REF_NPP F
	ROT_60_REF_PNN G
	ROT_60_REF_PNP H
	ROT_60_REF_PPN I
	ROT_60_REF_PPP J
	ROT_90_REF_X_NEG Q
	ROT_90_REF_X_POS R
	ROT_90_REF_Y_NEG S
	ROT_90_REF_Y_POS T
	ROT_90_REF_Z_NEG U
	ROT_90_REF_Z_POS V
	ROT_90_X_NEG s
	ROT_90_X_POS t
	ROT_90_Y_NEG u
	ROT_90_Y_POS v
	ROT_90_Z_NEG w
	ROT_90_Z_POS x
	SWAP_NEG_XY N
	SWAP_NEG_XZ P
	SWAP_NEG_YZ O
	SWAP_XY K
	SWAP_XZ M
	SWAP_YZ L
	cayleyTable ae
	inverseTable af
	invertX aa
	invertY ab
	invertZ ac
	name Y
	permutation ad
	rotatedDirections Z
	transformation X
	$values ()[Lcom/mojang/math/OctahedralGroup; e
	compose (Lcom/mojang/math/OctahedralGroup;)Lcom/mojang/math/OctahedralGroup; a
	getSerializedName ()Ljava/lang/String; c
	inverse ()Lcom/mojang/math/OctahedralGroup; a
	inverts (Lnet/minecraft/core/Direction$Axis;)Z a
	packInversions ()Lit/unimi/dsi/fastutil/booleans/BooleanList; d
	rotate (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	rotate (Lnet/minecraft/core/FrontAndTop;)Lnet/minecraft/core/FrontAndTop; a
	transformation ()Lorg/joml/Matrix3f; b
com/mojang/math/SymmetricGroup3 i
	$VALUES k
	ORDER i
	P123 a
	P132 c
	P213 b
	P231 d
	P312 e
	P321 f
	cayleyTable j
	permutation g
	transformation h
	$values ()[Lcom/mojang/math/SymmetricGroup3; b
	compose (Lcom/mojang/math/SymmetricGroup3;)Lcom/mojang/math/SymmetricGroup3; a
	permutation (I)I a
	transformation ()Lorg/joml/Matrix3f; a
com/mojang/math/Transformation j
	CODEC a
	EXTENDED_CODEC b
	IDENTITY i
	decomposed d
	leftRotation f
	matrix c
	rightRotation h
	scale g
	translation e
	compose (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; a
	compose (Lorg/joml/Vector3f;Lorg/joml/Quaternionf;Lorg/joml/Vector3f;Lorg/joml/Quaternionf;)Lorg/joml/Matrix4f; a
	ensureDecomposed ()V h
	getLeftRotation ()Lorg/joml/Quaternionf; e
	getMatrix ()Lorg/joml/Matrix4f; c
	getRightRotation ()Lorg/joml/Quaternionf; g
	getScale ()Lorg/joml/Vector3f; f
	getTranslation ()Lorg/joml/Vector3f; d
	identity ()Lcom/mojang/math/Transformation; a
	inverse ()Lcom/mojang/math/Transformation; b
	slerp (Lcom/mojang/math/Transformation;F)Lcom/mojang/math/Transformation; a
com/mojang/realmsclient/RealmsAvailability eql
	LOGGER a
	future b
	check ()Ljava/util/concurrent/CompletableFuture; b
	get ()Ljava/util/concurrent/CompletableFuture; a
	shouldRefresh (Ljava/util/concurrent/CompletableFuture;)Z a
com/mojang/realmsclient/RealmsAvailability$Result eql$a
	exception b
	type a
	createErrorScreen (Lnet/minecraft/client/gui/screens/Screen;)Lnet/minecraft/client/gui/screens/Screen; a
	exception ()Lcom/mojang/realmsclient/exception/RealmsServiceException; b
	type ()Lcom/mojang/realmsclient/RealmsAvailability$Type; a
com/mojang/realmsclient/RealmsAvailability$Type eql$b
	$VALUES f
	AUTHENTICATION_ERROR d
	INCOMPATIBLE_CLIENT b
	NEEDS_PARENTAL_CONSENT c
	SUCCESS a
	UNEXPECTED_ERROR e
	$values ()[Lcom/mojang/realmsclient/RealmsAvailability$Type; a
com/mojang/realmsclient/RealmsMainScreen eqm
	BUTTON_COLUMNS W
	BUTTON_SPACING X
	BUTTON_WIDTH V
	CLOSED_SPRITE x
	CONFIGURE_SERVER_TEXT L
	CONTENT_WIDTH Y
	ENTRY_WIDTH ai
	EXPIRED_SPRITE c
	EXPIRES_SOON_SPRITE v
	FOOTER_PADDING af
	HEADER_HEIGHT ae
	INFO_SPRITE a
	INVITE_SPRITE y
	ITEM_HEIGHT aj
	LEAVE_SERVER_TEXT K
	LOADING_TEXT E
	LOGGER A
	LOGO_HEIGHT aa
	LOGO_LOCATION B
	LOGO_PADDING ad
	LOGO_TEXTURE_HEIGHT ac
	LOGO_TEXTURE_WIDTH ab
	LOGO_WIDTH Z
	NEWS_SPRITE z
	NEW_REALM_SPRITE b
	NEW_REALM_SPRITE_HEIGHT ah
	NEW_REALM_SPRITE_WIDTH ag
	NO_PENDING_INVITES T
	NO_REALMS_LOCATION C
	NO_REALMS_TEXT S
	OPEN_SPRITE w
	PENDING_INVITES U
	PLAY_TEXT J
	SERVER_CLOSED_TOOLTIP Q
	SERVER_EXPIRED_TOOLTIP M
	SERVER_EXPIRES_IN_DAY_TOOLTIP O
	SERVER_EXPIRES_SOON_TOOLTIP N
	SERVER_OPEN_TOOLTIP P
	SERVER_UNITIALIZED_TEXT F
	SNAPSHOT ak
	SUBSCRIPTION_EXPIRED_TEXT G
	SUBSCRIPTION_RENEW_TEXT H
	TITLE D
	TRIAL_EXPIRED_TEXT I
	UNITIALIZED_WORLD_NARRATION R
	activeLayoutState aH
	addRealmButton aE
	availability am
	availableSnapshotServers az
	backButton at
	configureButton av
	dataSubscription an
	handledSeenNotifications ao
	inviteNarrationLimiter aq
	lastClickTime aC
	lastScreen ar
	layout aI
	leaveButton aw
	newsButton aG
	newsLink aB
	notifications aD
	pendingInvitesButton aF
	playButton as
	realmSelectionList ax
	regionsPinged ap
	renewButton au
	serverList ay
	snapshotToggle al
	trialsAvailable aA
	addListEntriesForNotification (Lcom/mojang/realmsclient/dto/RealmsNotification;)Z a
	callRealmsClient (Lcom/mojang/realmsclient/RealmsMainScreen$RealmsCall;Ljava/util/function/Consumer;)V a
	configureClicked (Lcom/mojang/realmsclient/dto/RealmsServer;)V f
	confirmToPlay (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/client/gui/screens/Screen;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
	createFooter (Lcom/mojang/realmsclient/RealmsMainScreen$LayoutState;)Lnet/minecraft/client/gui/layouts/Layout; c
	createHeader ()Lnet/minecraft/client/gui/layouts/Layout; E
	createLayout (Lcom/mojang/realmsclient/RealmsMainScreen$LayoutState;)Lnet/minecraft/client/gui/layouts/HeaderAndFooterLayout; b
	createNoRealmsContent ()Lnet/minecraft/client/gui/layouts/LinearLayout; H
	debugRefreshDataFetchers ()V J
	dismissNotification (Ljava/util/UUID;)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	getOwnedNonExpiredWorldIds ()Ljava/util/List; M
	getSelectedServer ()Lcom/mojang/realmsclient/dto/RealmsServer; N
	getVersionComponent (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getVersionComponent (Ljava/lang/String;Z)Lnet/minecraft/network/chat/Component; a
	init ()V aN_
	initDataFetcher (Lcom/mojang/realmsclient/gui/RealmsDataFetcher;)Lcom/mojang/realmsclient/gui/task/DataFetcher$Subscription; a
	isSelfOwnedNonExpiredServer (Lcom/mojang/realmsclient/dto/RealmsServer;)Z i
	isSelfOwnedServer (Lcom/mojang/realmsclient/dto/RealmsServer;)Z h
	isSnapshot ()Z b
	leaveClicked (Lcom/mojang/realmsclient/dto/RealmsServer;)V g
	leaveServer (ZLcom/mojang/realmsclient/dto/RealmsServer;)V a
	markNotificationsAsSeen (Ljava/util/Collection;)V a
	onRenew (Lcom/mojang/realmsclient/dto/RealmsServer;)V e
	openTrialAvailablePopup ()V O
	pingRegions ()V L
	play (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/client/gui/screens/Screen;)V a
	play (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/client/gui/screens/Screen;Z)V a
	refreshListAndLayout ()V K
	refreshPendingInvites ()V e
	refreshServerList ()V f
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderEnvironment (Lnet/minecraft/client/gui/GuiGraphics;Ljava/lang/String;I)V a
	repositionElements ()V c
	resetScreen ()V g
	shouldConfigureButtonBeActive (Lcom/mojang/realmsclient/dto/RealmsServer;)Z c
	shouldLeaveButtonBeActive (Lcom/mojang/realmsclient/dto/RealmsServer;)Z d
	shouldPlayButtonBeActive (Lcom/mojang/realmsclient/dto/RealmsServer;)Z a
	shouldRenewButtonBeActive (Lcom/mojang/realmsclient/dto/RealmsServer;)Z b
	tick ()V d
	updateButtonStates ()V I
	updateLayout ()V D
	updateLayout (Lcom/mojang/realmsclient/RealmsMainScreen$LayoutState;)V a
com/mojang/realmsclient/RealmsMainScreen$AvailableSnapshotEntry eqm$a
	START_SNAPSHOT_REALM c
	TEXT_PADDING d
	parent f
	tooltip e
	addSnapshotRealm ()V c
	getNarration ()Lnet/minecraft/network/chat/Component; a
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
com/mojang/realmsclient/RealmsMainScreen$ButtonEntry eqm$b
	button c
	getNarration ()Lnet/minecraft/network/chat/Component; a
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	setFocused (Z)V a
com/mojang/realmsclient/RealmsMainScreen$CrossButton eqm$c
	SPRITES b
com/mojang/realmsclient/RealmsMainScreen$EmptyEntry eqm$d
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
com/mojang/realmsclient/RealmsMainScreen$Entry eqm$e
	PADDING d
	STATUS_LIGHT_HEIGHT c
	STATUS_LIGHT_WIDTH a
	drawRealmStatus (Lnet/minecraft/client/gui/GuiGraphics;IIIILnet/minecraft/resources/ResourceLocation;Ljava/util/function/Supplier;)V a
	firstLineY (I)I a
	lineHeight ()I b
	renderClampedName (Lnet/minecraft/client/gui/GuiGraphics;Ljava/lang/String;IIII)V a
	renderStatusLights (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/client/gui/GuiGraphics;IIII)V a
	renderThirdLine (Lnet/minecraft/client/gui/GuiGraphics;IILcom/mojang/realmsclient/dto/RealmsServer;)V a
	secondLineY (I)I c
	textX (I)I b
	thirdLineY (I)I d
	versionTextX (IILnet/minecraft/network/chat/Component;)I a
com/mojang/realmsclient/RealmsMainScreen$LayoutState eqm$f
	$VALUES d
	LIST c
	LOADING a
	NO_REALMS b
	$values ()[Lcom/mojang/realmsclient/RealmsMainScreen$LayoutState; a
com/mojang/realmsclient/RealmsMainScreen$NotificationButton eqm$g
	NOTIFICATION_ICONS d
	SIZE u
	SPRITE_SIZE v
	UNKNOWN_COUNT t
	notificationCount w
	drawNotificationCounter (Lnet/minecraft/client/gui/GuiGraphics;)V a
	notificationCount ()I a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setNotificationCount (I)V a
com/mojang/realmsclient/RealmsMainScreen$NotificationMessageEntry eqm$h
	OUTLINE_COLOR d
	SIDE_MARGINS c
	children g
	dismissButton h
	frameItemHeight f
	gridLayout j
	lastEntryWidth l
	text e
	textFrame k
	textWidget i
	getNarration ()Lnet/minecraft/network/chat/Component; a
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	refreshLayout (I)V f
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	renderBack (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V b
	updateEntryWidth (I)V e
com/mojang/realmsclient/RealmsMainScreen$ParentEntry eqm$i
	server c
	tooltip d
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
com/mojang/realmsclient/RealmsMainScreen$RealmSelectionList eqm$j
	getMaxPosition ()I a
	getRowWidth ()I b
	setSelected (Lcom/mojang/realmsclient/RealmsMainScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/RealmsMainScreen$RealmsCall eqm$k
com/mojang/realmsclient/RealmsMainScreen$ServerEntry eqm$l
	SKIN_HEAD_LARGE_WIDTH c
	serverData d
	tooltip e
	createUnitializedRealm ()V e
	getNarration ()Lnet/minecraft/network/chat/Component; a
	getServer ()Lcom/mojang/realmsclient/dto/RealmsServer; c
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	playRealm ()V d
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	renderFirstLine (Lnet/minecraft/client/gui/GuiGraphics;III)V a
	renderSecondLine (Lnet/minecraft/client/gui/GuiGraphics;II)V a
com/mojang/realmsclient/Unit eqn
	$VALUES f
	B a
	BASE_UNIT e
	GB d
	KB b
	MB c
	$values ()[Lcom/mojang/realmsclient/Unit; a
	convertTo (JLcom/mojang/realmsclient/Unit;)D a
	getLargest (J)Lcom/mojang/realmsclient/Unit; a
	humanReadable (J)Ljava/lang/String; b
	humanReadable (JLcom/mojang/realmsclient/Unit;)Ljava/lang/String; b
com/mojang/realmsclient/client/FileDownload eqo
	INVALID_FILE_NAMES k
	LOGGER a
	cancelled b
	currentThread i
	error d
	extracting e
	finished c
	request h
	requestConfig j
	resourcePackPath g
	tempFile f
	cancel ()V a
	contentLength (Ljava/lang/String;)J a
	download (Lcom/mojang/realmsclient/dto/WorldDownload;Ljava/lang/String;Lcom/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus;Lnet/minecraft/world/level/storage/LevelStorageSource;)V a
	findAvailableFolderName (Ljava/lang/String;)Ljava/lang/String; b
	isError ()Z c
	isExtracting ()Z d
	isFinished ()Z b
	untarGzipArchive (Ljava/lang/String;Ljava/io/File;Lnet/minecraft/world/level/storage/LevelStorageSource;)V a
com/mojang/realmsclient/client/FileDownload$DownloadCountingOutputStream eqo$a
	listener a
	setListener (Ljava/awt/event/ActionListener;)V a
com/mojang/realmsclient/client/FileDownload$ProgressListener eqo$b
	downloadStatus e
	levelStorageSource d
	tempFile c
	worldName b
com/mojang/realmsclient/client/FileDownload$ResourcePackProgressListener eqo$c
	downloadStatus c
	tempFile b
	worldDownload d
com/mojang/realmsclient/client/FileUpload eqp
	LOGGER a
	MAX_RETRIES b
	UPLOAD_PATH c
	cancelled l
	clientVersion j
	file d
	requestConfig n
	sessionId h
	slotId f
	uploadInfo g
	uploadStatus k
	uploadTask m
	username i
	worldId e
	cancel ()V a
	cleanup (Lorg/apache/http/client/methods/HttpPost;Lorg/apache/http/impl/client/CloseableHttpClient;)V a
	getRetryDelaySeconds (Lorg/apache/http/HttpResponse;)J a
	handleResponse (Lorg/apache/http/HttpResponse;Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder;)V a
	isFinished ()Z b
	requestUpload (I)Lcom/mojang/realmsclient/gui/screens/UploadResult; a
	retryUploadAfter (JI)Lcom/mojang/realmsclient/gui/screens/UploadResult; b
	setupRequest (Lorg/apache/http/client/methods/HttpPost;)V a
	shouldRetry (JI)Z a
	upload (Ljava/util/function/Consumer;)V a
com/mojang/realmsclient/client/FileUpload$CustomInputStreamEntity eqp$a
	content b
	length a
	uploadStatus c
com/mojang/realmsclient/client/Ping eqq
	now ()J b
	ping (Ljava/lang/String;)I a
	ping ([Lcom/mojang/realmsclient/client/Ping$Region;)Ljava/util/List; a
	pingAllRegions ()Ljava/util/List; a
com/mojang/realmsclient/client/Ping$Region eqq$a
	$VALUES k
	AP_NORTHEAST_1 g
	AP_SOUTHEAST_1 e
	AP_SOUTHEAST_2 f
	EU_WEST_1 d
	SA_EAST_1 h
	US_EAST_1 a
	US_WEST_1 c
	US_WEST_2 b
	endpoint j
	name i
	$values ()[Lcom/mojang/realmsclient/client/Ping$Region; a
com/mojang/realmsclient/client/RealmsClient eqr
	ACTIVITIES_RESOURCE j
	ENVIRONMENT a
	GSON W
	INVITES_RESOURCE_PATH g
	LOGGER b
	MCO_RESOURCE_PATH h
	NOTIFICATIONS_RESOURCE n
	OPS_RESOURCE k
	PATH_ACCEPT_INVITE F
	PATH_AVAILABLE x
	PATH_CLIENT_COMPATIBLE R
	PATH_CREATE_SNAPSHOT_REALM p
	PATH_DELETE_WORLD N
	PATH_DISMISS_NOTIFICATIONS V
	PATH_GET_ACTIVTIES s
	PATH_GET_LIVESTATS t
	PATH_GET_SUBSCRIPTION u
	PATH_INITIALIZE r
	PATH_LIST_ALL_REALMS o
	PATH_MARK_NOTIFICATIONS_SEEN U
	PATH_NEWS T
	PATH_OP v
	PATH_PENDING_INVITES E
	PATH_PENDING_INVITES_COUNT D
	PATH_PUT_INTO_MINIGAMES_MODE w
	PATH_REJECT_INVITE G
	PATH_SLOT J
	PATH_SNAPSHOT_ELIGIBLE_REALMS q
	PATH_TEMPLATES y
	PATH_TOS_AGREED S
	PATH_UNINVITE_MYSELF H
	PATH_WORLD_BACKUPS O
	PATH_WORLD_CLOSE L
	PATH_WORLD_DOWNLOAD P
	PATH_WORLD_GET A
	PATH_WORLD_INVITES B
	PATH_WORLD_JOIN z
	PATH_WORLD_OPEN K
	PATH_WORLD_RESET M
	PATH_WORLD_UNINVITE C
	PATH_WORLD_UPDATE I
	PATH_WORLD_UPLOAD Q
	REGIONS_RESOURCE l
	SUBSCRIPTION_RESOURCE i
	TRIALS_RESOURCE m
	WORLDS_RESOURCE_PATH f
	minecraft e
	sessionId c
	username d
	acceptInvitation (Ljava/lang/String;)V a
	agreeToTos ()V j
	backupsFor (J)Lcom/mojang/realmsclient/dto/BackupList; e
	clientCompatible ()Lcom/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse; g
	close (J)Ljava/lang/Boolean; g
	create ()Lcom/mojang/realmsclient/client/RealmsClient; a
	create (Lnet/minecraft/client/Minecraft;)Lcom/mojang/realmsclient/client/RealmsClient; a
	createSnapshotRealm (Ljava/lang/Long;)Lcom/mojang/realmsclient/dto/RealmsServer; a
	deleteWorld (J)V i
	deop (JLjava/util/UUID;)Lcom/mojang/realmsclient/dto/Ops; c
	execute (Lcom/mojang/realmsclient/client/Request;)Ljava/lang/String; a
	fetchWorldTemplates (IILcom/mojang/realmsclient/dto/RealmsServer$WorldType;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; a
	getActivity (J)Lcom/mojang/realmsclient/dto/ServerActivityList; b
	getLiveStats ()Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; e
	getNews ()Lcom/mojang/realmsclient/dto/RealmsNews; k
	getNotifications ()Ljava/util/List; d
	getOwnWorld (J)Lcom/mojang/realmsclient/dto/RealmsServer; a
	hasParentalConsent ()Z f
	initializeWorld (JLjava/lang/String;Ljava/lang/String;)V a
	invite (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer; a
	isBlocked (Lcom/mojang/realmsclient/dto/PendingInvite;)Z a
	join (J)Lcom/mojang/realmsclient/dto/RealmsServerAddress; c
	listSnapshotEligibleRealms ()Ljava/util/List; c
	listWorlds ()Lcom/mojang/realmsclient/dto/RealmsServerList; b
	notificationsDismiss (Ljava/util/List;)V b
	notificationsSeen (Ljava/util/List;)V a
	op (JLjava/util/UUID;)Lcom/mojang/realmsclient/dto/Ops; b
	open (J)Ljava/lang/Boolean; f
	pendingInvites ()Lcom/mojang/realmsclient/dto/PendingInvitesList; i
	pendingInvitesCount ()I h
	putIntoMinigameMode (JLjava/lang/String;)Ljava/lang/Boolean; c
	rejectInvitation (Ljava/lang/String;)V b
	requestDownloadInfo (JI)Lcom/mojang/realmsclient/dto/WorldDownload; b
	requestUploadInfo (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/UploadInfo; e
	resetWorldWithSeed (JLcom/mojang/realmsclient/util/WorldGenerationInfo;)Ljava/lang/Boolean; a
	resetWorldWithTemplate (JLjava/lang/String;)Ljava/lang/Boolean; d
	restoreWorld (JLjava/lang/String;)V b
	sendPingResults (Lcom/mojang/realmsclient/dto/PingResult;)V a
	subscriptionFor (J)Lcom/mojang/realmsclient/dto/Subscription; h
	switchSlot (JI)Z a
	trialAvailable ()Ljava/lang/Boolean; l
	uninvite (JLjava/util/UUID;)V a
	uninviteMyselfFrom (J)V d
	update (JLjava/lang/String;Ljava/lang/String;)V b
	updateSlot (JILcom/mojang/realmsclient/dto/RealmsWorldOptions;)V a
	url (Ljava/lang/String;)Ljava/lang/String; c
	url (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	uuidListToJsonArray (Ljava/util/List;)Lcom/google/gson/JsonArray; c
com/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse eqr$a
	$VALUES d
	COMPATIBLE a
	OTHER c
	OUTDATED b
	$values ()[Lcom/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse; a
com/mojang/realmsclient/client/RealmsClient$Environment eqr$b
	$VALUES f
	LOCAL c
	PRODUCTION a
	STAGE b
	baseUrl d
	protocol e
	$values ()[Lcom/mojang/realmsclient/client/RealmsClient$Environment; a
	byName (Ljava/lang/String;)Ljava/util/Optional; a
com/mojang/realmsclient/client/RealmsClientConfig eqs
	proxy a
	getProxy ()Ljava/net/Proxy; a
	setProxy (Ljava/net/Proxy;)V a
com/mojang/realmsclient/client/RealmsError eqt
	LOGGER b
	NO_MESSAGE a
	errorCode ()I a
	errorMessage ()Lnet/minecraft/network/chat/Component; b
	logMessage ()Ljava/lang/String; c
	parse (ILjava/lang/String;)Lcom/mojang/realmsclient/client/RealmsError; a
com/mojang/realmsclient/client/RealmsError$AuthenticationError eqt$a
	ERROR_CODE c
	message d
	errorCode ()I a
	errorMessage ()Lnet/minecraft/network/chat/Component; b
	logMessage ()Ljava/lang/String; c
	message ()Ljava/lang/String; d
com/mojang/realmsclient/client/RealmsError$CustomError eqt$b
	RETRY_MESSAGE d
	SERVICE_BUSY c
	httpCode e
	payload f
	connectivityError (Lcom/mojang/realmsclient/exception/RealmsHttpException;)Lcom/mojang/realmsclient/client/RealmsError$CustomError; a
	errorCode ()I a
	errorMessage ()Lnet/minecraft/network/chat/Component; b
	httpCode ()I d
	logMessage ()Ljava/lang/String; c
	noPayload (I)Lcom/mojang/realmsclient/client/RealmsError$CustomError; b
	payload ()Lnet/minecraft/network/chat/Component; e
	retry (I)Lcom/mojang/realmsclient/client/RealmsError$CustomError; a
	unknownCompatibilityResponse (Ljava/lang/String;)Lcom/mojang/realmsclient/client/RealmsError$CustomError; a
com/mojang/realmsclient/client/RealmsError$ErrorWithJsonPayload eqt$c
	code d
	httpCode c
	message f
	reason e
	code ()I e
	errorCode ()I a
	errorMessage ()Lnet/minecraft/network/chat/Component; b
	httpCode ()I d
	logMessage ()Ljava/lang/String; c
	message ()Ljava/lang/String; g
	reason ()Ljava/lang/String; f
com/mojang/realmsclient/client/RealmsError$ErrorWithRawPayload eqt$d
	httpCode c
	payload d
	errorCode ()I a
	errorMessage ()Lnet/minecraft/network/chat/Component; b
	httpCode ()I d
	logMessage ()Ljava/lang/String; c
	payload ()Ljava/lang/String; e
com/mojang/realmsclient/client/Request equ
	COOKIE_KEY g
	DEFAULT_CONNECT_TIMEOUT e
	DEFAULT_READ_TIMEOUT d
	IS_SNAPSHOT_KEY f
	connected c
	connection a
	url b
	addSnapshotHeader (Z)V a
	connect ()Lcom/mojang/realmsclient/client/Request; d
	cookie (Ljava/lang/String;Ljava/lang/String;)V a
	cookie (Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V a
	delete (Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; b
	dispose ()V f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
	get (Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; a
	get (Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; a
	getHeader (Ljava/lang/String;)Ljava/lang/String; c
	getHeader (Ljava/net/HttpURLConnection;Ljava/lang/String;)Ljava/lang/String; a
	getRetryAfterHeader ()I a
	getRetryAfterHeader (Ljava/net/HttpURLConnection;)I a
	post (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; b
	post (Ljava/lang/String;Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; a
	put (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; c
	put (Ljava/lang/String;Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; b
	read (Ljava/io/InputStream;)Ljava/lang/String; a
	responseCode ()I b
	text ()Ljava/lang/String; c
com/mojang/realmsclient/client/Request$Delete equ$a
	doConnect ()Lcom/mojang/realmsclient/client/Request$Delete; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Get equ$b
	doConnect ()Lcom/mojang/realmsclient/client/Request$Get; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Post equ$c
	content c
	doConnect ()Lcom/mojang/realmsclient/client/Request$Post; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Put equ$d
	content c
	doConnect ()Lcom/mojang/realmsclient/client/Request$Put; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/UploadStatus eqv
	bytesWritten a
	totalBytes b
com/mojang/realmsclient/dto/Backup eqx
	LOGGER f
	backupId a
	changeList e
	lastModifiedDate b
	metadata d
	size c
	uploadedVersion g
	isUploadedVersion ()Z a
	parse (Lcom/google/gson/JsonElement;)Lcom/mojang/realmsclient/dto/Backup; a
	setUploadedVersion (Z)V a
com/mojang/realmsclient/dto/BackupList eqy
	LOGGER b
	backups a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/BackupList; a
com/mojang/realmsclient/dto/GuardedSerializer eqz
	gson a
	fromJson (Ljava/lang/String;Ljava/lang/Class;)Lcom/mojang/realmsclient/dto/ReflectionBasedSerialization; a
	toJson (Lcom/google/gson/JsonElement;)Ljava/lang/String; a
	toJson (Lcom/mojang/realmsclient/dto/ReflectionBasedSerialization;)Ljava/lang/String; a
com/mojang/realmsclient/dto/Ops era
	ops a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; a
com/mojang/realmsclient/dto/PendingInvite erb
	LOGGER f
	date e
	invitationId a
	worldName b
	worldOwnerName c
	worldOwnerUuid d
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/PendingInvite; a
com/mojang/realmsclient/dto/PendingInvitesList erc
	LOGGER b
	pendingInvites a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/PendingInvitesList; a
com/mojang/realmsclient/dto/PingResult erd
	pingResults a
	worldIds b
com/mojang/realmsclient/dto/PlayerInfo ere
	accepted d
	name a
	online e
	operator c
	uuid b
	getAccepted ()Z d
	getName ()Ljava/lang/String; a
	getOnline ()Z e
	getUuid ()Ljava/util/UUID; b
	isOperator ()Z c
	setAccepted (Z)V b
	setName (Ljava/lang/String;)V a
	setOnline (Z)V c
	setOperator (Z)V a
	setUuid (Ljava/util/UUID;)V a
com/mojang/realmsclient/dto/RealmsDescriptionDto erf
	description b
	name a
com/mojang/realmsclient/dto/RealmsNews erg
	LOGGER b
	newsLink a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsNews; a
com/mojang/realmsclient/dto/RealmsNotification erh
	BUTTON_TEXT_FALLBACK h
	DISMISSABLE c
	INFO_POPUP g
	LOGGER a
	NOTIFICATION_UUID b
	SEEN d
	TYPE e
	VISIT_URL f
	dismissable j
	seen k
	type l
	uuid i
	dismissable ()Z b
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsNotification; a
	parseList (Ljava/lang/String;)Ljava/util/List; a
	seen ()Z a
	uuid ()Ljava/util/UUID; c
com/mojang/realmsclient/dto/RealmsNotification$InfoPopup erh$a
	IMAGE c
	MESSAGE b
	TITLE a
	URL_BUTTON d
	image g
	message f
	title e
	urlButton h
	buildScreen (Lnet/minecraft/client/gui/screens/Screen;Ljava/util/function/Consumer;)Lnet/minecraft/client/gui/components/PopupScreen; a
	parse (Lcom/mojang/realmsclient/dto/RealmsNotification;Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsNotification$InfoPopup; a
com/mojang/realmsclient/dto/RealmsNotification$UrlButton erh$b
	URL c
	URL_TEXT d
	url a
	urlText b
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsNotification$UrlButton; a
	url ()Ljava/lang/String; a
	urlText ()Lcom/mojang/realmsclient/dto/RealmsText; b
com/mojang/realmsclient/dto/RealmsNotification$VisitUrl erh$c
	BUTTON_TEXT b
	MESSAGE c
	URL a
	buttonText e
	message f
	url d
	buildOpenLinkButton (Lnet/minecraft/client/gui/screens/Screen;)Lnet/minecraft/client/gui/components/Button; a
	getMessage ()Lnet/minecraft/network/chat/Component; d
	parse (Lcom/mojang/realmsclient/dto/RealmsNotification;Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsNotification$VisitUrl; a
com/mojang/realmsclient/dto/RealmsServer eri
	LOGGER w
	NO_VALUE x
	activeSlot n
	activeVersion t
	compatibility u
	daysLeft l
	expired j
	expiredTrial k
	id a
	minigameId p
	minigameImage q
	minigameName o
	motd d
	name c
	owner f
	ownerUUID g
	parentWorldId r
	parentWorldName s
	players h
	remoteSubscriptionId b
	serverPing v
	slots i
	state e
	worldType m
	clone ()Lcom/mojang/realmsclient/dto/RealmsServer; g
	cloneSlots (Ljava/util/Map;)Ljava/util/Map; a
	createEmptySlots ()Ljava/util/Map; i
	getCompatibility (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer$Compatibility; d
	getDescription ()Ljava/lang/String; a
	getMinigameName ()Ljava/lang/String; c
	getName ()Ljava/lang/String; b
	getState (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer$State; f
	getWorldName (I)Ljava/lang/String; a
	getWorldType (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer$WorldType; g
	isCompatible ()Z d
	isSnapshotRealm ()Z h
	needsDowngrade ()Z f
	needsUpgrade ()Z e
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsServer; a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer; c
	parseInvited (Lcom/google/gson/JsonArray;)Ljava/util/List; a
	parseSlots (Lcom/google/gson/JsonArray;)Ljava/util/Map; b
	setDescription (Ljava/lang/String;)V b
	setName (Ljava/lang/String;)V a
	sortInvited (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	toServerData (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/ServerData; e
	updateServerPing (Lcom/mojang/realmsclient/dto/RealmsServerPlayerList;)V a
com/mojang/realmsclient/dto/RealmsServer$Compatibility eri$a
	$VALUES f
	COMPATIBLE e
	INCOMPATIBLE b
	NEEDS_DOWNGRADE c
	NEEDS_UPGRADE d
	UNVERIFIABLE a
	$values ()[Lcom/mojang/realmsclient/dto/RealmsServer$Compatibility; d
	isCompatible ()Z a
	needsDowngrade ()Z c
	needsUpgrade ()Z b
com/mojang/realmsclient/dto/RealmsServer$McoServerComparator eri$b
	refOwner a
	compare (Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/realmsclient/dto/RealmsServer;)I a
com/mojang/realmsclient/dto/RealmsServer$State eri$c
	$VALUES d
	CLOSED a
	OPEN b
	UNINITIALIZED c
	$values ()[Lcom/mojang/realmsclient/dto/RealmsServer$State; a
com/mojang/realmsclient/dto/RealmsServer$WorldType eri$d
	$VALUES f
	ADVENTUREMAP c
	EXPERIENCE d
	INSPIRATION e
	MINIGAME b
	NORMAL a
	$values ()[Lcom/mojang/realmsclient/dto/RealmsServer$WorldType; a
com/mojang/realmsclient/dto/RealmsServerAddress erj
	LOGGER d
	address a
	resourcePackHash c
	resourcePackUrl b
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerAddress; a
com/mojang/realmsclient/dto/RealmsServerList erk
	LOGGER b
	servers a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerList; a
com/mojang/realmsclient/dto/RealmsServerPing erl
	nrOfPlayers a
	playerList b
com/mojang/realmsclient/dto/RealmsServerPlayerList erm
	LOGGER c
	players b
	serverId a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsServerPlayerList; a
	parsePlayers (Lcom/google/gson/JsonArray;)Ljava/util/List; a
com/mojang/realmsclient/dto/RealmsServerPlayerLists ern
	LOGGER b
	servers a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; a
com/mojang/realmsclient/dto/RealmsText ero
	ARGS b
	TRANSLATION_KEY a
	args d
	translationKey c
	createComponent ()Lnet/minecraft/network/chat/Component; a
	createComponent (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsText; a
com/mojang/realmsclient/dto/RealmsWorldOptions erp
	DEFAULT_COMMAND_BLOCKS v
	DEFAULT_COMPATIBILITY A
	DEFAULT_DIFFICULTY w
	DEFAULT_FORCE_GAME_MODE p
	DEFAULT_GAME_MODE x
	DEFAULT_PVP q
	DEFAULT_SLOT_NAME y
	DEFAULT_SPAWN_ANIMALS r
	DEFAULT_SPAWN_MONSTERS s
	DEFAULT_SPAWN_NPCS t
	DEFAULT_SPAWN_PROTECTION u
	DEFAULT_TEMPLATE_ID B
	DEFAULT_TEMPLATE_IMAGE C
	DEFAULT_VERSION z
	commandBlocks f
	compatibility k
	difficulty h
	empty n
	forceGameMode g
	gameMode i
	pvp a
	slotName o
	spawnAnimals b
	spawnMonsters c
	spawnNPCs d
	spawnProtection e
	templateId l
	templateImage m
	version j
	clone ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; d
	createDefaults ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; a
	createEmptyDefaults ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; b
	getDefaultSlotName (I)Ljava/lang/String; b
	getSlotName (I)Ljava/lang/String; a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsWorldOptions; a
	setEmpty (Z)V a
	toJson ()Ljava/lang/String; c
com/mojang/realmsclient/dto/RealmsWorldResetDto erq
	experiments e
	generateStructures d
	levelType c
	seed a
	worldTemplateId b
com/mojang/realmsclient/dto/ReflectionBasedSerialization err
com/mojang/realmsclient/dto/RegionPingResult ers
	ping b
	regionName a
	ping ()I a
com/mojang/realmsclient/dto/ServerActivity ert
	joinTime b
	leaveTime c
	profileUuid a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/ServerActivity; a
com/mojang/realmsclient/dto/ServerActivityList eru
	periodInMillis a
	serverActivities b
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/ServerActivityList; a
com/mojang/realmsclient/dto/Subscription erv
	LOGGER d
	daysLeft b
	startDate a
	type c
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Subscription; a
	typeFrom (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Subscription$SubscriptionType; b
com/mojang/realmsclient/dto/Subscription$SubscriptionType erv$a
	$VALUES c
	NORMAL a
	RECURRING b
	$values ()[Lcom/mojang/realmsclient/dto/Subscription$SubscriptionType; a
com/mojang/realmsclient/dto/UploadInfo erw
	DEFAULT_PORT c
	DEFAULT_SCHEMA b
	LOGGER a
	URI_SCHEMA_PATTERN d
	token f
	uploadEndpoint g
	worldClosed e
	assembleUri (Ljava/lang/String;I)Ljava/net/URI; a
	createRequest (Ljava/lang/String;)Ljava/lang/String; b
	ensureEndpointSchema (Ljava/lang/String;Ljava/util/regex/Matcher;)Ljava/lang/String; a
	getToken ()Ljava/lang/String; a
	getUploadEndpoint ()Ljava/net/URI; b
	isWorldClosed ()Z c
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/UploadInfo; a
	selectPortOrDefault (II)I a
com/mojang/realmsclient/dto/ValueObject erx
	getName (Ljava/lang/reflect/Field;)Ljava/lang/String; a
	isStatic (Ljava/lang/reflect/Field;)Z b
com/mojang/realmsclient/dto/WorldDownload ery
	LOGGER d
	downloadLink a
	resourcePackHash c
	resourcePackUrl b
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/WorldDownload; a
com/mojang/realmsclient/dto/WorldTemplate erz
	LOGGER j
	author d
	id a
	image f
	link e
	name b
	recommendedPlayers h
	trailer g
	type i
	version c
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/WorldTemplate; a
com/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType erz$a
	$VALUES f
	ADVENTUREMAP c
	EXPERIENCE d
	INSPIRATION e
	MINIGAME b
	WORLD_TEMPLATE a
	$values ()[Lcom/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType; a
com/mojang/realmsclient/dto/WorldTemplatePaginatedList esa
	LOGGER e
	page b
	size c
	templates a
	total d
	isLastPage ()Z a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; a
com/mojang/realmsclient/exception/RealmsDefaultUncaughtExceptionHandler esc
	logger a
com/mojang/realmsclient/exception/RealmsHttpException esd
com/mojang/realmsclient/exception/RealmsServiceException ese
	realmsError a
com/mojang/realmsclient/exception/RetryCallException esf
	DEFAULT_DELAY b
	delaySeconds c
com/mojang/realmsclient/gui/RealmsDataFetcher esh
	dataFetcher a
	newsManager g
	newsTask f
	notificationsTask b
	pendingInvitesTask d
	serverListUpdateTask c
	tasks h
	trialAvailabilityTask e
	getTasks ()Ljava/util/List; a
com/mojang/realmsclient/gui/RealmsDataFetcher$ServerListData esh$a
	availableSnapshotServers b
	serverList a
	availableSnapshotServers ()Ljava/util/List; b
	serverList ()Ljava/util/List; a
com/mojang/realmsclient/gui/RealmsNewsManager esi
	hasUnreadNews b
	newsLink c
	newsLocalStorage a
	hasUnreadNews ()Z a
	newsLink ()Ljava/lang/String; b
	updateNewsStorage (Lcom/mojang/realmsclient/dto/RealmsNews;)Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData; b
	updateUnreadNews (Lcom/mojang/realmsclient/dto/RealmsNews;)V a
com/mojang/realmsclient/gui/RealmsServerList esj
	minecraft a
	removedServers b
	servers c
	isEmpty ()Z a
	removeItem (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	updateServersList (Ljava/util/List;)V a
com/mojang/realmsclient/gui/RealmsWorldSlotButton esk
	CHECKMARK_SPRITE u
	DEFAULT_WORLD_SLOT_1 b
	DEFAULT_WORLD_SLOT_2 c
	DEFAULT_WORLD_SLOT_3 d
	EMPTY_SLOT_LOCATION a
	MINIGAME y
	SLOT_ACTIVE_TOOLTIP v
	SLOT_FRAME_SPRITE t
	SWITCH_TO_MINIGAME_SLOT_TOOLTIP w
	SWITCH_TO_WORLD_SLOT_TOOLTIP x
	slotIndex z
	state A
	tooltip B
	getAction (Lcom/mojang/realmsclient/dto/RealmsServer;ZZ)Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action; a
	getState ()Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton$State; a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setServerData (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	setTooltipAndNarration (Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton$State;Ljava/lang/String;)V a
com/mojang/realmsclient/gui/RealmsWorldSlotButton$Action esk$a
	$VALUES d
	JOIN c
	NOTHING a
	SWITCH_SLOT b
	$values ()[Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action; a
com/mojang/realmsclient/gui/RealmsWorldSlotButton$State esk$b
	action c
	compatibility g
	empty a
	image i
	imageId h
	isCurrentlyActiveSlot d
	minigame b
	slotName e
	slotVersion f
com/mojang/realmsclient/gui/RowButton esl
	height b
	width a
	xOffset c
	yOffset d
	draw (Lnet/minecraft/client/gui/GuiGraphics;IIZ)V a
	drawButtonsInRow (Lnet/minecraft/client/gui/GuiGraphics;Ljava/util/List;Lnet/minecraft/realms/RealmsObjectSelectionList;IIII)V a
	drawForRowAt (Lnet/minecraft/client/gui/GuiGraphics;IIII)V a
	getBottom ()I b
	getRight ()I a
	onClick (I)V a
	rowButtonMouseClicked (Lnet/minecraft/realms/RealmsObjectSelectionList;Lnet/minecraft/client/gui/components/ObjectSelectionList$Entry;Ljava/util/List;IDD)V a
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen esn
	TITLE a
	UNKNOWN b
	backup v
	backupInfoList x
	lastScreen c
	layout w
	checkForSpecificMetadata (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	gameDifficultyMetadata (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	gameModeMetadata (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; b
	init ()V aN_
	onClose ()V aE_
	repositionElements ()V c
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoList esn$a
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoListEntry esn$b
	DESCRIPTION h
	ENABLED_PACK g
	GAME_DIFFICULTY c
	GAME_MODE i
	GAME_SERVER_VERSION e
	NAME d
	SEED j
	TEMPLATE_NAME b
	UNDEFINED l
	UPLOADED f
	WORLD_TYPE k
	key m
	value n
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	translateKey (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
com/mojang/realmsclient/gui/screens/RealmsBackupScreen eso
	HAS_CHANGES_TOOLTIP c
	LOGGER a
	NO_BACKUPS_LABEL w
	RESTORE_TOOLTIP b
	TITLE v
	UPLOADED_KEY H
	backupObjectSelectionList z
	backups y
	changesButton E
	downloadButton C
	lastScreen x
	noBackups F
	restoreButton D
	selectedBackup A
	serverData G
	slotId B
	downloadClicked ()V I
	downloadWorldData ()V J
	init ()V aN_
	keyPressed (III)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	restore ()V K
	restoreClicked (I)V a
	shouldChangesButtonBeVisible ()Z E
	shouldRestoreButtonBeVisible ()Z H
	updateButtonStates ()V D
com/mojang/realmsclient/gui/screens/RealmsBackupScreen$BackupObjectSelectionList eso$a
	addEntry (Lcom/mojang/realmsclient/dto/Backup;)V a
	getMaxPosition ()I a
	getRowWidth ()I b
	getScrollbarPosition ()I c
	selectInviteListItem (I)V b
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsBackupScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsBackupScreen$Entry eso$b
	CHANGES_BUTTON_SPRITES d
	RESTORE_BUTTON_SPRITES e
	X_PADDING c
	Y_PADDING b
	backup f
	changesButton i
	children g
	restoreButton h
	addChangesButton ()V b
	addRestoreButton ()V c
	addToChangeList (Ljava/lang/String;)V a
	getMediumDatePresentation (Ljava/util/Date;)Ljava/lang/String; a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	populateChangeList (Lcom/mojang/realmsclient/dto/Backup;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen esp
	DEFAULT_BUTTON_WIDTH c
	LOGGER b
	SLOT_FRAME_SPRITE a
	animTick B
	lastScreen v
	leftX z
	message y
	serverData w
	serverId x
	slotsThatHasBeenDownloaded A
	addButtons ()V D
	doSwitchOrReset ()V e
	downloadWorld (I)V b
	drawSlotFrame (Lnet/minecraft/client/gui/GuiGraphics;IIIIZLjava/lang/String;IJLjava/lang/String;Z)V a
	fetchServerData (J)V a
	getFramePositionX (I)I a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	isMinigame ()Z E
	onClose ()V aE_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsClientOutdatedScreen esq
	INCOMPATIBLE_MESSAGES c
	INCOMPATIBLE_MESSAGES_SNAPSHOT b
	INCOMPATIBLE_TITLE a
	lastScreen v
	getMessages ()[Lnet/minecraft/network/chat/Component; D
	init ()V aN_
	keyPressed (III)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen esr
	CLOSED_SPRITE v
	DEFAULT_BUTTON_OFFSET F
	DEFAULT_BUTTON_WIDTH E
	EXPIRED_SPRITE a
	EXPIRES_SOON_SPRITE b
	LOGGER w
	OPEN_SPRITE c
	SERVER_CLOSED_TOOLTIP D
	SERVER_EXPIRED_TOOLTIP z
	SERVER_EXPIRING_IN_DAY_TOOLTIP B
	SERVER_EXPIRING_SOON_TOOLTIP A
	SERVER_OPEN_TOOLTIP C
	TITLE y
	WORLD_LIST_TITLE x
	backupButton Q
	lastScreen H
	leftX K
	optionsButton P
	playersButton M
	resetWorldButton R
	rightX L
	serverData I
	serverId J
	settingsButton N
	slotButtonList U
	stateChanged T
	subscriptionButton O
	switchMinigameButton S
	toolTip G
	addSlotButton (I)Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton; a
	centerButton (II)I a
	closeTheWorld (Lnet/minecraft/client/gui/screens/Screen;)V a
	disableButtons ()V D
	drawRealmStatus (Lnet/minecraft/client/gui/GuiGraphics;IIIILnet/minecraft/resources/ResourceLocation;Ljava/util/function/Supplier;)V a
	drawServerStatus (Lnet/minecraft/client/gui/GuiGraphics;IIII)V a
	fetchServerData (J)V a
	frame (I)I h
	getNewScreen ()Lcom/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen; f
	hide (Lnet/minecraft/client/gui/components/Button;)V a
	hideMinigameButtons ()V J
	hideRegularButtons ()V I
	init ()V aN_
	isMinigame ()Z H
	joinRealm (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	leftButton (I)I b
	onClose ()V aE_
	openTheWorld (ZLnet/minecraft/client/gui/screens/Screen;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	saveSettings (Ljava/lang/String;Ljava/lang/String;)V a
	saveSlotSettings (Lcom/mojang/realmsclient/dto/RealmsWorldOptions;)V a
	show (Lnet/minecraft/client/gui/components/Button;)V b
	stateChanged ()V e
	switchToEmptySlot (ILcom/mojang/realmsclient/dto/RealmsServer;)V b
	switchToFullSlot (ILcom/mojang/realmsclient/dto/RealmsServer;)V a
	switchToMinigame ()V E
	templateSelectionCallback (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
com/mojang/realmsclient/gui/screens/RealmsConfirmScreen ess
	callback a
	title1 b
	title2 c
	init ()V aN_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsCreateRealmScreen est
	BUTTON_SPACING v
	CONTENT_WIDTH w
	CREATE_REALM_TEXT a
	DESCRIPTION_LABEL c
	NAME_LABEL b
	createWorldRunnable B
	descriptionBox A
	lastScreen x
	layout y
	nameBox z
	createSnapshotWorld (J)V a
	createWorld (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	init ()V aN_
	onClose ()V aE_
	repositionElements ()V c
com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen esu
	BAR_BORDER x
	BAR_BOTTOM w
	BAR_TOP v
	BAR_WIDTH c
	DOTS Q
	DOWNLOAD_LOCK b
	LOGGER a
	animTick P
	bytesPersSecond O
	callback T
	cancelButton C
	cancelled I
	checked S
	dotIndex R
	downloadStatus E
	downloadTitle A
	errorMessage F
	extracting L
	finished K
	lastScreen y
	narrationRateLimiter B
	previousTimeSnapshot N
	previousWrittenBytes M
	progress H
	showDots J
	status G
	worldDownload z
	worldName D
	backButtonClicked ()V H
	checkDownloadSize ()V D
	createProgressNarrationMessage ()Lnet/minecraft/network/chat/Component; E
	downloadCancelled ()V J
	downloadSave ()V I
	drawDots (Lnet/minecraft/client/gui/GuiGraphics;)V c
	drawDownloadSpeed (Lnet/minecraft/client/gui/GuiGraphics;)V e
	drawDownloadSpeed0 (Lnet/minecraft/client/gui/GuiGraphics;J)V a
	drawProgressBar (Lnet/minecraft/client/gui/GuiGraphics;)V d
	getContentLength (Ljava/lang/String;)J a
	init ()V aN_
	keyPressed (III)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus esu$a
	bytesWritten a
	totalBytes b
com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen esv
	line2Split c
	lines b
	nextScreen a
	errorMessage (Lcom/mojang/realmsclient/exception/RealmsServiceException;)Lcom/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen$ErrorMessage; a
	errorMessage (Lnet/minecraft/network/chat/Component;)Lcom/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen$ErrorMessage; a
	errorMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lcom/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen$ErrorMessage; a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen$ErrorMessage esv$a
	detail b
	title a
	detail ()Lnet/minecraft/network/chat/Component; b
	title ()Lnet/minecraft/network/chat/Component; a
com/mojang/realmsclient/gui/screens/RealmsInviteScreen esw
	INVITING_PLAYER_TEXT c
	LOGGER a
	NAME_LABEL b
	NO_SUCH_PLAYER_ERROR_TEXT v
	configureScreen z
	inviteButton x
	lastScreen A
	message B
	profileName w
	serverData y
	init ()V aN_
	keyPressed (III)Z a
	onInvite ()V D
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	showMessage (Lnet/minecraft/network/chat/Component;)V a
com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen esx
	INFO c
	WARNING b
	callback a
	line2 w
	line3 x
	type v
	yesNoQuestion y
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	keyPressed (III)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type esx$a
	$VALUES e
	INFO b
	WARNING a
	colorCode c
	text d
	$values ()[Lcom/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type; a
com/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen esy
	LOGGER a
	REPEATED_NARRATOR b
	lastScreen v
	layout w
	loadingDotsWidget y
	queuedTasks c
	title x
	cancel ()V e
	init ()V aN_
	keyPressed (III)Z a
	repositionElements ()V c
	setTitle (Lnet/minecraft/network/chat/Component;)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTickTaskScreen esz
	task a
	cancel ()V e
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen eta
	INVITE_SPRITE c
	NEWS_SPRITE b
	TRIAL_AVAILABLE_SPRITE v
	UNSEEN_NOTIFICATION_SPRITE a
	currentConfiguration y
	hasUnreadNews B
	hasUnseenNotifications C
	numberOfPendingInvites z
	onlyNotifications E
	realmsDataSubscription x
	showAll D
	trialAvailable A
	validClient w
	addNewsAndInvitesSubscriptions (Lcom/mojang/realmsclient/gui/RealmsDataFetcher;Lcom/mojang/realmsclient/gui/task/DataFetcher$Subscription;)V a
	addNotificationsSubscriptions (Lcom/mojang/realmsclient/gui/RealmsDataFetcher;Lcom/mojang/realmsclient/gui/task/DataFetcher$Subscription;)V b
	added ()V aF_
	drawIcons (Lnet/minecraft/client/gui/GuiGraphics;)V c
	getConfiguration ()Lcom/mojang/realmsclient/gui/screens/RealmsNotificationsScreen$DataFetcherConfiguration; D
	getRealmsNotificationsEnabled ()Z E
	inTitleScreen ()Z H
	init ()V aN_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen$DataFetcherConfiguration eta$a
	initDataFetcher (Lcom/mojang/realmsclient/gui/RealmsDataFetcher;)Lcom/mojang/realmsclient/gui/task/DataFetcher$Subscription; a
	showOldNotifications ()Z a
com/mojang/realmsclient/gui/screens/RealmsParentalConsentScreen etb
	MESSAGE a
	SPACING b
	lastScreen v
	layout c
	textWidget w
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	onClose ()V aE_
	repositionElements ()V c
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen etc
	ACCEPT_HIGHLIGHTED_SPRITE a
	ACCEPT_INVITE y
	ACCEPT_SPRITE b
	LOGGER w
	NO_PENDING_INVITES_TEXT x
	REJECT_HIGHLIGHTED_SPRITE c
	REJECT_INVITE z
	REJECT_SPRITE v
	acceptButton F
	lastScreen A
	pendingInvitationSelectionList D
	pendingInvites B
	rejectButton G
	selectedInvite E
	toolTip C
	handleInvitation (IZ)V a
	init ()V aN_
	onClose ()V aE_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldAcceptAndRejectButtonBeVisible (I)Z a
	updateButtonStates ()V D
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry etc$a
	TEXT_LEFT b
	pendingInvite c
	rowButtons d
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	renderPendingInvitationItem (Lnet/minecraft/client/gui/GuiGraphics;Lcom/mojang/realmsclient/dto/PendingInvite;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$AcceptRowButton etc$a$a
	draw (Lnet/minecraft/client/gui/GuiGraphics;IIZ)V a
	onClick (I)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$RejectRowButton etc$a$b
	draw (Lnet/minecraft/client/gui/GuiGraphics;IIZ)V a
	onClick (I)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionList etc$b
	getMaxPosition ()I a
	getRowWidth ()I b
	removeAtIndex (I)V b
	selectInviteListItem (I)V c
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen etd
	LOGGER a
	NORMAL_USER_TOOLTIP v
	NO_ENTRY_SELECTED y
	OPTIONS_BACKGROUND b
	OP_TOOLTIP w
	QUESTION_TITLE c
	REMOVE_ENTRY_TOOLTIP x
	column1X C
	columnWidth D
	invitedObjectSelectionList B
	lastScreen z
	opdeopButton F
	playerIndex G
	removeButton E
	serverData A
	stateChanged H
	backButtonClicked ()V E
	deop (I)V j
	init ()V aN_
	keyPressed (III)Z a
	op (I)V i
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldRemoveAndOpdeopButtonBeVisible (I)Z h
	uninvite (I)V k
	updateButtonStates ()V D
	updateOps (Lcom/mojang/realmsclient/dto/Ops;)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$Entry etd$a
	BUTTON_HEIGHT e
	BUTTON_WIDTH d
	MAKE_OP_BUTTON_SPRITES g
	REMOVE_BUTTON_SPRITES f
	REMOVE_OP_BUTTON_SPRITES h
	X_OFFSET b
	Y_PADDING c
	children j
	makeOpButton l
	playerInfo i
	removeButton k
	removeOpButton m
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	updateButtons ()V b
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$InvitedObjectSelectionList etd$b
	addEntry (Lcom/mojang/realmsclient/dto/PlayerInfo;)V a
	getMaxPosition ()I a
	getRowWidth ()I b
	getScrollbarPosition ()I c
	selectInviteListItem (I)V b
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsPlayerScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	updateButtons ()V d
com/mojang/realmsclient/gui/screens/RealmsPopupScreen ete
	BACKGROUND_SPRITE c
	BG_BORDER_SIZE z
	BG_TEXTURE_HEIGHT y
	BG_TEXTURE_WIDTH x
	BUTTON_SPACING C
	BUTTON_WIDTH H
	CAROUSEL_SWITCH_INTERVAL I
	CLOSE_TEXT b
	CROSS_BUTTON_SPRITES w
	HEIGHT F
	IMAGE_HEIGHT B
	IMAGE_WIDTH A
	PADDING D
	POPUP_TEXT a
	TEXT_WIDTH G
	TRIAL_AVAILABLE_SPRITE v
	WIDTH E
	backgroundScreen K
	carouselImages J
	carouselIndex N
	carouselTick O
	createTrialButton M
	trialAvailable L
	bottom ()I I
	init ()V aN_
	left ()I D
	onClose ()V aE_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	renderDiamond (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/components/Button;)V a
	right ()I H
	tick ()V d
	top ()I E
	updateCarouselImages (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
com/mojang/realmsclient/gui/screens/RealmsResetNormalWorldScreen etf
	BUTTON_SPACING c
	CONTENT_WIDTH v
	SEED_LABEL b
	TITLE a
	buttonTitle C
	callback x
	experiments B
	generateStructures A
	layout w
	levelType z
	seedEdit y
	createExperimentsButton (Lnet/minecraft/client/gui/layouts/LinearLayout;)V a
	createWorldGenerationInfo ()Lcom/mojang/realmsclient/util/WorldGenerationInfo; D
	init ()V aN_
	onClose ()V aE_
	repositionElements ()V c
com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen etg
	ADVENTURES_TITLE E
	ADVENTURE_MAP_LOCATION N
	CREATE_REALM_SUBTITLE x
	CREATE_REALM_TITLE w
	CREATE_WORLD_RESET_TASK_TITLE a
	CREATE_WORLD_SUBTITLE z
	CREATE_WORLD_TITLE y
	EXPERIENCES_TITLE F
	EXPERIENCE_LOCATION Q
	INSPIRATION_LOCATION R
	INSPIRATION_TITLE G
	LOGGER c
	NEW_WORLD_LOCATION P
	RESET_WORLD_RESET_TASK_TITLE C
	RESET_WORLD_SUBTITLE B
	RESET_WORLD_TITLE A
	SLOT_FRAME_SPRITE v
	SURVIVAL_SPAWN_LOCATION O
	UPLOAD_LOCATION M
	WORLD_TEMPLATES_TITLE D
	adventuremaps T
	experiences U
	inspirations V
	lastScreen H
	layout Y
	resetTaskTitle L
	resetWorldRunnable X
	serverData I
	slot b
	subtitle J
	subtitleColor K
	templates S
	worldCreationTask W
	forEmptySlot (Lnet/minecraft/client/gui/screens/Screen;ILcom/mojang/realmsclient/dto/RealmsServer;Ljava/lang/Runnable;)Lcom/mojang/realmsclient/gui/screens/RealmsResetWorldScreen; a
	forNewRealm (Lnet/minecraft/client/gui/screens/Screen;Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/realmsclient/util/task/WorldCreationTask;Ljava/lang/Runnable;)Lcom/mojang/realmsclient/gui/screens/RealmsResetWorldScreen; a
	forResetSlot (Lnet/minecraft/client/gui/screens/Screen;Lcom/mojang/realmsclient/dto/RealmsServer;Ljava/lang/Runnable;)Lcom/mojang/realmsclient/gui/screens/RealmsResetWorldScreen; a
	frame (I)I a
	generationSelectionCallback (Lcom/mojang/realmsclient/util/WorldGenerationInfo;)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	onClose ()V aE_
	runResetTasks (Lcom/mojang/realmsclient/util/task/LongRunningTask;)V a
	switchSlot (Ljava/lang/Runnable;)V a
	templateSelectionCallback (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$FrameButton etg$a
	HEIGHT c
	IMAGE_SIZE d
	WIDTH b
	image t
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen eth
	CHEATS_TEXT x
	DATE_FORMAT y
	HARDCORE_TEXT w
	LOGGER b
	TITLE a
	UNABLE_TO_LOAD_WORLD c
	WORLD_TEXT v
	lastScreen z
	levelList D
	selectedWorld E
	slotId B
	uploadButton C
	worldId A
	worldSelectionList F
	formatLastPlayed (Lnet/minecraft/world/level/storage/LevelSummary;)Ljava/lang/String; b
	gameModeName (Lnet/minecraft/world/level/storage/LevelSummary;)Lnet/minecraft/network/chat/Component; a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	keyPressed (III)Z a
	loadLevelList ()V D
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	upload ()V E
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$Entry eth$a
	id d
	info e
	levelSummary b
	name c
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	renderItem (Lnet/minecraft/client/gui/GuiGraphics;III)V a
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$WorldSelectionList eth$b
	addEntry (Lnet/minecraft/world/level/storage/LevelSummary;)V a
	getMaxPosition ()I a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen eti
	BUTTON_SPACING y
	BUTTON_WIDTH x
	LOGGER a
	PUBLISHER_BUTTON_NAME w
	SELECT_BUTTON_NAME c
	SLOT_FRAME_SPRITE b
	TRAILER_BUTTON_NAME v
	callback A
	currentLink H
	layout z
	noTemplatesMessage J
	publisherButton F
	selectButton D
	selectedTemplate G
	trailerButton E
	warning I
	worldTemplateList B
	worldType C
	fetchTemplates (Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;Lcom/mojang/realmsclient/client/RealmsClient;)Lcom/mojang/datafixers/util/Either; a
	fetchTemplatesAsync (Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;)V a
	getHeaderHeight ()I J
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	onClose ()V aE_
	onPublish ()V I
	onTrailer ()V H
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderMultilineMessage (Lnet/minecraft/client/gui/GuiGraphics;IILjava/util/List;)V a
	repositionElements ()V c
	selectTemplate ()V E
	setWarning ([Lnet/minecraft/network/chat/Component;)V a
	updateButtonStates ()V D
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$Entry eti$a
	PUBLISHER_LINK_TOOLTIP e
	TRAILER_LINK_SPRITES d
	TRAILER_LINK_TOOLTIP f
	WEBSITE_LINK_SPRITES c
	lastClickTime g
	template a
	trailerButton i
	websiteButton h
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$WorldTemplateList eti$b
	addEntry (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
	getMaxPosition ()I a
	getRowWidth ()I b
	getTemplates ()Ljava/util/List; e
	isEmpty ()Z d
	mouseClicked (DDI)Z a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsSettingsScreen etj
	COMPONENT_WIDTH a
	DESCRIPTION_LABEL c
	NAME_LABEL b
	configureWorldScreen v
	descEdit x
	nameEdit y
	serverData w
	init ()V aN_
	onClose ()V aE_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	save ()V f
com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen etk
	DEFAULT_DIFFICULTY v
	DEFAULT_GAME_MODE w
	DIFFICULTIES a
	GAME_MODES b
	NAME_LABEL x
	SPAWN_PROTECTION_TEXT y
	SPAWN_WARNING_TITLE z
	column1X B
	columnWidth C
	commandBlocks O
	defaultSlotName H
	difficulty F
	forceGameMode P
	gameMode G
	nameEdit A
	options D
	parent c
	pvp J
	spawnAnimals L
	spawnMonsters M
	spawnNPCs K
	spawnProtection N
	spawnProtectionButton Q
	worldName I
	worldType E
	confirmDangerousOption (Lnet/minecraft/network/chat/Component;Ljava/util/function/Consumer;)Lnet/minecraft/client/gui/components/CycleButton$OnValueChange; a
	findByIndex (Ljava/util/List;II)Ljava/lang/Object; a
	findIndex (Ljava/util/List;Ljava/lang/Object;I)I a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	keyPressed (III)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	saveSettings ()V D
	setWorldName (Ljava/lang/String;)V a
com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$SettingsSlider etk$a
	maxValue e
	minValue d
	applyValue ()V a
	updateMessage ()V b
com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen etl
	DAYS_LEFT_LABEL w
	LOGGER a
	RECURRING_INFO A
	SUBSCRIPTION_EXPIRED_TEXT x
	SUBSCRIPTION_LESS_THAN_A_DAY_TEXT y
	SUBSCRIPTION_START_LABEL c
	SUBSCRIPTION_TITLE b
	TIME_LEFT_LABEL v
	UNKNOWN z
	daysLeft E
	lastScreen B
	mainScreen D
	serverData C
	startDate F
	type G
	daysLeftPresentation (I)Lnet/minecraft/network/chat/Component; a
	deleteRealm (Z)V c
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	getSubscription (J)V a
	init ()V aN_
	localPresentation (J)Lnet/minecraft/network/chat/Component; b
	onClose ()V aE_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsTermsScreen etm
	LOGGER a
	TERMS_LINK_TEXT v
	TERMS_STATIC_TEXT c
	TITLE b
	lastScreen w
	onLink y
	realmsServer x
	agreedToTos ()V D
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsUploadScreen etn
	BAR_BORDER x
	BAR_BOTTOM w
	BAR_TOP v
	BAR_WIDTH c
	DOTS y
	LOGGER a
	UPLOAD_LOCK b
	VERIFYING_TEXT z
	backButton N
	bytesPersSecond S
	cancelButton O
	cancelled J
	errorMessage G
	lastScreen A
	narrationRateLimiter F
	previousTimeSnapshot R
	previousWrittenBytes Q
	progress I
	selectedLevel B
	showDots L
	slotId D
	status H
	tickCount P
	uploadFinished K
	uploadStarted M
	uploadStatus E
	worldId C
	addFileToTarGz (Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;Ljava/lang/String;Z)V a
	createProgressNarrationMessage ()Lnet/minecraft/network/chat/Component; H
	drawDots (Lnet/minecraft/client/gui/GuiGraphics;)V c
	drawProgressBar (Lnet/minecraft/client/gui/GuiGraphics;)V d
	drawUploadSpeed (Lnet/minecraft/client/gui/GuiGraphics;)V e
	drawUploadSpeed0 (Lnet/minecraft/client/gui/GuiGraphics;J)V a
	init ()V aN_
	keyPressed (III)Z a
	onBack ()V D
	onCancel ()V E
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	setErrorMessage ([Lnet/minecraft/network/chat/Component;)V a
	tarGzipArchive (Ljava/io/File;)Ljava/io/File; b
	tick ()V d
	upload ()V I
	uploadCancelled ()V J
	verify (Ljava/io/File;)Z a
com/mojang/realmsclient/gui/screens/UploadResult eto
	errorMessage b
	statusCode a
com/mojang/realmsclient/gui/screens/UploadResult$Builder eto$a
	errorMessage b
	statusCode a
	build ()Lcom/mojang/realmsclient/gui/screens/UploadResult; a
	withErrorMessage (Ljava/lang/String;)Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder; a
	withStatusCode (I)Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder; a
com/mojang/realmsclient/gui/task/DataFetcher etq
	LOGGER a
	executor b
	resolution c
	timeSource d
	createSubscription ()Lcom/mojang/realmsclient/gui/task/DataFetcher$Subscription; a
	createTask (Ljava/lang/String;Ljava/util/concurrent/Callable;Ljava/time/Duration;Lcom/mojang/realmsclient/gui/task/RepeatedDelayStrategy;)Lcom/mojang/realmsclient/gui/task/DataFetcher$Task; a
com/mojang/realmsclient/gui/task/DataFetcher$ComputationResult etq$a
	time b
	value a
	time ()J b
	value ()Lcom/mojang/datafixers/util/Either; a
com/mojang/realmsclient/gui/task/DataFetcher$SubscribedTask etq$b
	lastCheckTime d
	output c
	task b
	reset ()V c
	runCallback ()V b
	runCallbackIfNeeded ()V a
	update (J)V a
com/mojang/realmsclient/gui/task/DataFetcher$Subscription etq$c
	subscriptions b
	forceUpdate ()V a
	reset ()V c
	subscribe (Lcom/mojang/realmsclient/gui/task/DataFetcher$Task;Ljava/util/function/Consumer;)V a
	tick ()V b
com/mojang/realmsclient/gui/task/DataFetcher$SuccessfulComputationResult etq$d
	time b
	value a
	time ()J b
	value ()Ljava/lang/Object; a
com/mojang/realmsclient/gui/task/DataFetcher$Task etq$e
	id b
	lastResult g
	nextUpdate h
	pendingTask f
	period d
	repeatStrategy e
	updater c
	reset ()V a
	updateIfNeeded (J)V a
com/mojang/realmsclient/gui/task/RepeatedDelayStrategy etr
	CONSTANT a
	delayCyclesAfterFailure ()J b
	delayCyclesAfterSuccess ()J a
	exponentialBackoff (I)Lcom/mojang/realmsclient/gui/task/RepeatedDelayStrategy; a
com/mojang/realmsclient/util/JsonUtils etu
	getBooleanOr (Ljava/lang/String;Lcom/google/gson/JsonObject;Z)Z a
	getDateOr (Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/util/Date; b
	getIntOr (Ljava/lang/String;Lcom/google/gson/JsonObject;I)I a
	getLongOr (Ljava/lang/String;Lcom/google/gson/JsonObject;J)J a
	getOptional (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/util/function/Function;)Ljava/lang/Object; b
	getRequired (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/util/function/Function;)Ljava/lang/Object; a
	getRequiredString (Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/lang/String; a
	getRequiredStringOr (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; a
	getStringOr (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; b
	getUuidOr (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/util/UUID;)Ljava/util/UUID; a
com/mojang/realmsclient/util/LevelType etv
	$VALUES g
	AMPLIFIED d
	DEFAULT a
	FLAT b
	LARGE_BIOMES c
	index e
	name f
	$values ()[Lcom/mojang/realmsclient/util/LevelType; c
	getDtoIndex ()I b
	getName ()Lnet/minecraft/network/chat/Component; a
com/mojang/realmsclient/util/RealmsPersistence etw
	FILE_NAME a
	GSON b
	LOGGER c
	getPathToData ()Ljava/nio/file/Path; c
	read ()Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData; a
	readFile ()Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData; b
	save (Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData;)V a
	writeFile (Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData;)V b
com/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData etw$a
	hasUnreadNews b
	newsLink a
com/mojang/realmsclient/util/RealmsTextureManager etx
	LOGGER b
	TEMPLATE_ICON_LOCATION c
	TEXTURES a
	getTexture (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; b
	loadImage (Ljava/lang/String;)Lcom/mojang/blaze3d/platform/NativeImage; a
	worldTemplate (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
com/mojang/realmsclient/util/RealmsTextureManager$RealmsTexture etx$a
	image a
	textureId b
	image ()Ljava/lang/String; a
	textureId ()Lnet/minecraft/resources/ResourceLocation; b
com/mojang/realmsclient/util/RealmsUtil ety
	DAYS d
	HOURS c
	MINUTES b
	RIGHT_NOW a
	convertToAgePresentation (J)Lnet/minecraft/network/chat/Component; a
	convertToAgePresentationFromInstant (Ljava/util/Date;)Lnet/minecraft/network/chat/Component; a
	renderPlayerFace (Lnet/minecraft/client/gui/GuiGraphics;IIILjava/util/UUID;)V a
com/mojang/realmsclient/util/TextRenderingUtils etz
	decompose (Ljava/lang/String;Ljava/util/List;)Ljava/util/List; a
	decompose (Ljava/lang/String;[Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment;)Ljava/util/List; a
	insertLinks (Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	lineBreak (Ljava/lang/String;)Ljava/util/List; a
	split (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; a
com/mojang/realmsclient/util/TextRenderingUtils$Line etz$a
	segments a
com/mojang/realmsclient/util/TextRenderingUtils$LineSegment etz$b
	fullText a
	linkTitle b
	linkUrl c
	getLinkUrl ()Ljava/lang/String; c
	isLink ()Z b
	link (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment; a
	renderedText ()Ljava/lang/String; a
	text (Ljava/lang/String;)Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment; a
com/mojang/realmsclient/util/UploadTokenCache eua
	TOKEN_CACHE a
	get (J)Ljava/lang/String; a
	invalidate (J)V b
	put (JLjava/lang/String;)V a
com/mojang/realmsclient/util/WorldGenerationInfo eub
	experiments d
	generateStructures c
	levelType b
	seed a
	experiments ()Ljava/util/Set; d
	generateStructures ()Z c
	levelType ()Lcom/mojang/realmsclient/util/LevelType; b
	seed ()Ljava/lang/String; a
com/mojang/realmsclient/util/task/CloseServerTask eud
	LOGGER b
	TITLE c
	configureScreen e
	serverData d
	getTitle ()Lnet/minecraft/network/chat/Component; a
com/mojang/realmsclient/util/task/ConnectTask eue
	TITLE b
	address e
	realmsConnect c
	server d
	abortTask ()V b
	getTitle ()Lnet/minecraft/network/chat/Component; a
	tick ()V c
com/mojang/realmsclient/util/task/CreateSnapshotRealmTask euf
	LOGGER b
	TITLE c
	creationTask i
	description g
	generateWorldTask j
	generationInfo e
	name f
	parentId d
	realmsMainScreen h
	abortTask ()V b
	getTitle ()Lnet/minecraft/network/chat/Component; a
com/mojang/realmsclient/util/task/DownloadTask eug
	LOGGER b
	TITLE c
	downloadName g
	lastScreen f
	slot e
	worldId d
	getTitle ()Lnet/minecraft/network/chat/Component; a
com/mojang/realmsclient/util/task/GetServerDetailsTask euh
	APPLYING_PACK_TEXT b
	LOGGER c
	TITLE d
	lastScreen f
	server e
	connectScreen (Lcom/mojang/realmsclient/dto/RealmsServerAddress;)Lcom/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen; a
	fetchServerAddress ()Lcom/mojang/realmsclient/dto/RealmsServerAddress; f
	generatePackId (Lcom/mojang/realmsclient/dto/RealmsServer;)Ljava/util/UUID; a
	getTitle ()Lnet/minecraft/network/chat/Component; a
	resourcePackDownloadConfirmationScreen (Lcom/mojang/realmsclient/dto/RealmsServerAddress;Ljava/util/UUID;Ljava/util/function/Function;)Lcom/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen; a
	scheduleResourcePackDownload (Lcom/mojang/realmsclient/dto/RealmsServerAddress;Ljava/util/UUID;)Ljava/util/concurrent/CompletableFuture; a
com/mojang/realmsclient/util/task/LongRunningTask eui
	LOGGER b
	NUMBER_OF_RETRIES a
	aborted c
	abortTask ()V b
	aborted ()Z d
	error (Lcom/mojang/realmsclient/exception/RealmsServiceException;)V a
	error (Ljava/lang/Exception;)V a
	error (Lnet/minecraft/network/chat/Component;)V a
	getTitle ()Lnet/minecraft/network/chat/Component; a
	init ()V e
	pause (J)V a
	setScreen (Lnet/minecraft/client/gui/screens/Screen;)V a
	tick ()V c
com/mojang/realmsclient/util/task/OpenServerTask euj
	LOGGER b
	TITLE c
	join f
	minecraft g
	returnScreen e
	serverData d
	getTitle ()Lnet/minecraft/network/chat/Component; a
com/mojang/realmsclient/util/task/ResettingGeneratedWorldTask euk
	generationInfo b
	sendResetRequest (Lcom/mojang/realmsclient/client/RealmsClient;J)V a
com/mojang/realmsclient/util/task/ResettingTemplateWorldTask eul
	template b
	sendResetRequest (Lcom/mojang/realmsclient/client/RealmsClient;J)V a
com/mojang/realmsclient/util/task/ResettingWorldTask eum
	LOGGER b
	callback e
	serverId c
	title d
	getTitle ()Lnet/minecraft/network/chat/Component; a
	sendResetRequest (Lcom/mojang/realmsclient/client/RealmsClient;J)V a
com/mojang/realmsclient/util/task/RestoreTask eun
	LOGGER b
	TITLE c
	backup d
	lastScreen f
	worldId e
	getTitle ()Lnet/minecraft/network/chat/Component; a
com/mojang/realmsclient/util/task/SwitchMinigameTask euo
	LOGGER b
	TITLE c
	lastScreen f
	worldId d
	worldTemplate e
	getTitle ()Lnet/minecraft/network/chat/Component; a
com/mojang/realmsclient/util/task/SwitchSlotTask eup
	LOGGER b
	TITLE c
	callback f
	slot e
	worldId d
	getTitle ()Lnet/minecraft/network/chat/Component; a
com/mojang/realmsclient/util/task/WorldCreationTask euq
	LOGGER b
	TITLE c
	motd e
	name d
	worldId f
	getTitle ()Lnet/minecraft/network/chat/Component; a
net/minecraft/BlockUtil l
	getLargestRectangleAround (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$Axis;ILnet/minecraft/core/Direction$Axis;ILjava/util/function/Predicate;)Lnet/minecraft/BlockUtil$FoundRectangle; a
	getLimit (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/Direction;I)I a
	getMaxRectangleLocation ([I)Lcom/mojang/datafixers/util/Pair; a
	getTopConnectedBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; a
net/minecraft/BlockUtil$FoundRectangle l$a
	axis1Size b
	axis2Size c
	minCorner a
net/minecraft/BlockUtil$IntBounds l$b
	max b
	min a
net/minecraft/CharPredicate m
net/minecraft/ChatFormatting n
	$VALUES G
	AQUA l
	BLACK a
	BLUE j
	BOLD r
	CODEC w
	DARK_AQUA d
	DARK_BLUE b
	DARK_GRAY i
	DARK_GREEN c
	DARK_PURPLE f
	DARK_RED e
	FORMATTING_BY_NAME y
	GOLD g
	GRAY h
	GREEN k
	ITALIC u
	LIGHT_PURPLE n
	OBFUSCATED q
	PREFIX_CODE x
	RED m
	RESET v
	STRIKETHROUGH s
	STRIP_FORMATTING_PATTERN z
	UNDERLINE t
	WHITE p
	YELLOW o
	code B
	color F
	id E
	isFormat C
	name A
	toString D
	$values ()[Lnet/minecraft/ChatFormatting; h
	cleanName (Ljava/lang/String;)Ljava/lang/String; c
	getByCode (C)Lnet/minecraft/ChatFormatting; a
	getById (I)Lnet/minecraft/ChatFormatting; a
	getByName (Ljava/lang/String;)Lnet/minecraft/ChatFormatting; b
	getChar ()C a
	getColor ()Ljava/lang/Integer; f
	getId ()I b
	getName ()Ljava/lang/String; g
	getNames (ZZ)Ljava/util/Collection; a
	getSerializedName ()Ljava/lang/String; c
	isColor ()Z e
	isFormat ()Z d
	stripFormatting (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/CrashReport o
	DATE_TIME_FORMATTER b
	LOGGER a
	details e
	exception d
	saveFile f
	systemReport i
	title c
	trackingStackTrace g
	uncategorizedStackTrace h
	addCategory (Ljava/lang/String;)Lnet/minecraft/CrashReportCategory; a
	addCategory (Ljava/lang/String;I)Lnet/minecraft/CrashReportCategory; a
	forThrowable (Ljava/lang/Throwable;Ljava/lang/String;)Lnet/minecraft/CrashReport; a
	getDetails ()Ljava/lang/String; c
	getDetails (Ljava/lang/StringBuilder;)V a
	getErrorComment ()Ljava/lang/String; i
	getException ()Ljava/lang/Throwable; b
	getExceptionMessage ()Ljava/lang/String; d
	getFriendlyReport ()Ljava/lang/String; e
	getSaveFile ()Ljava/io/File; f
	getSystemReport ()Lnet/minecraft/SystemReport; g
	getTitle ()Ljava/lang/String; a
	preload ()V h
	saveToFile (Ljava/io/File;)Z a
net/minecraft/CrashReportCategory p
	entries b
	stackTrace c
	title a
	fillInStackTrace (I)I a
	formatLocation (Lnet/minecraft/world/level/LevelHeightAccessor;DDD)Ljava/lang/String; a
	formatLocation (Lnet/minecraft/world/level/LevelHeightAccessor;III)Ljava/lang/String; a
	formatLocation (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	getDetails (Ljava/lang/StringBuilder;)V a
	getStacktrace ()[Ljava/lang/StackTraceElement; a
	populateBlockDetails (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setDetail (Ljava/lang/String;Ljava/lang/Object;)Lnet/minecraft/CrashReportCategory; a
	setDetail (Ljava/lang/String;Lnet/minecraft/CrashReportDetail;)Lnet/minecraft/CrashReportCategory; a
	setDetailError (Ljava/lang/String;Ljava/lang/Throwable;)V a
	trimStacktrace (I)V b
	validateStackTrace (Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z a
net/minecraft/CrashReportCategory$Entry p$a
	key a
	value b
	getKey ()Ljava/lang/String; a
	getValue ()Ljava/lang/String; b
net/minecraft/CrashReportDetail q
net/minecraft/DefaultUncaughtExceptionHandler r
	logger a
net/minecraft/DefaultUncaughtExceptionHandlerWithName s
	logger a
net/minecraft/DetectedVersion t
	BUILT_IN a
	LOGGER b
	buildTime j
	dataPackVersion i
	id c
	name d
	protocolVersion g
	resourcePackVersion h
	stable e
	worldVersion f
	getBuildTime ()Ljava/util/Date; f
	getDataVersion ()Lnet/minecraft/world/level/storage/DataVersion; d
	getId ()Ljava/lang/String; b
	getName ()Ljava/lang/String; c
	getPackVersion (Lnet/minecraft/server/packs/PackType;)I a
	getProtocolVersion ()I e
	isStable ()Z g
	tryDetectVersion ()Lnet/minecraft/WorldVersion; a
net/minecraft/FieldsAreNonnullByDefault u
net/minecraft/FileUtil v
	COPY_COUNTER_PATTERN a
	MAX_FILE_NAME b
	RESERVED_WINDOWS_FILENAMES c
	STRICT_PATH_SEGMENT_CHECK d
	createDirectoriesSafe (Ljava/nio/file/Path;)V c
	createPathToResource (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path; b
	decomposePath (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; c
	findAvailableName (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	getFullResourcePath (Ljava/lang/String;)Ljava/lang/String; a
	isPathNormalized (Ljava/nio/file/Path;)Z a
	isPathPortable (Ljava/nio/file/Path;)Z b
	isValidStrictPathSegment (Ljava/lang/String;)Z d
	normalizeResourcePath (Ljava/lang/String;)Ljava/lang/String; b
	resolvePath (Ljava/nio/file/Path;Ljava/util/List;)Ljava/nio/file/Path; a
	validatePath ([Ljava/lang/String;)V a
net/minecraft/MethodsReturnNonnullByDefault w
net/minecraft/Optionull x
	first (Ljava/util/Collection;)Ljava/lang/Object; a
	firstOrDefault (Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object; a
	firstOrElse (Ljava/util/Collection;Ljava/util/function/Supplier;)Ljava/lang/Object; a
	isNullOrEmpty ([B)Z a
	isNullOrEmpty ([C)Z a
	isNullOrEmpty ([D)Z a
	isNullOrEmpty ([F)Z a
	isNullOrEmpty ([I)Z a
	isNullOrEmpty ([J)Z a
	isNullOrEmpty ([Ljava/lang/Object;)Z a
	isNullOrEmpty ([S)Z a
	isNullOrEmpty ([Z)Z a
	map (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object; a
	mapOrDefault (Ljava/lang/Object;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	mapOrElse (Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Object; a
net/minecraft/ReportedException y
	report a
	getReport ()Lnet/minecraft/CrashReport; a
net/minecraft/ResourceLocationException z
net/minecraft/SharedConstants aa
	AVERAGE_GAME_TICKS_PER_RANDOM_TICK_PER_BLOCK bi
	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_GAME_DAY bk
	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_MINUTE bj
	CHECK_DATA_FIXER_SCHEMA aV
	COMMAND_STACK_TRACES aL
	CURRENT_VERSION bn
	DATA_FIX_TYPES_TO_OPTIMIZE aX
	DATA_PACK_FORMAT j
	DATA_VERSION_TAG m
	DEBUG_ALLOW_LOW_SIM_DISTANCE t
	DEBUG_AQUIFERS ar
	DEBUG_BEES V
	DEBUG_BLOCK_BREAK X
	DEBUG_BRAIN U
	DEBUG_BREEZE_MOB al
	DEBUG_BYPASS_REALMS_VERSION_CHECK ah
	DEBUG_CARVERS ae
	DEBUG_CHUNKS J
	DEBUG_COLLISION A
	DEBUG_DISABLE_AQUIFERS ax
	DEBUG_DISABLE_BELOW_ZERO_RETROGENERATION aE
	DEBUG_DISABLE_BLENDING aD
	DEBUG_DISABLE_CARVERS az
	DEBUG_DISABLE_FEATURES aB
	DEBUG_DISABLE_FLUID_GENERATION aw
	DEBUG_DISABLE_LIQUID_SPREADING aq
	DEBUG_DISABLE_ORE_VEINS aC
	DEBUG_DISABLE_STRUCTURES aA
	DEBUG_DISABLE_SURFACE ay
	DEBUG_DONT_SAVE_WORLD ab
	DEBUG_DONT_SEND_TELEMETRY_TO_BACKEND aS
	DEBUG_DUMP_INTERPOLATED_TEXTURE_FRAMES M
	DEBUG_DUMP_TEXTURE_ATLAS L
	DEBUG_FEATURE_COUNT aP
	DEBUG_FORCE_ONBOARDING_SCREEN an
	DEBUG_FORCE_TELEMETRY aR
	DEBUG_GAME_EVENT_LISTENERS K
	DEBUG_GOAL_SELECTOR S
	DEBUG_HEIGHTMAP z
	DEBUG_HOTKEYS u
	DEBUG_IGNORE_LOCAL_MOB_CAP ao
	DEBUG_JFR_PROFILING_ENABLE_LEVEL_LOADING as
	DEBUG_KEEP_JIGSAW_BLOCKS_DURING_STRUCTURE_GEN aa
	DEBUG_LARGE_DRIPSTONE ac
	DEBUG_LIGHT F
	DEBUG_MONITOR_TICK_TIMES Z
	DEBUG_NAMED_RUNNABLES R
	DEBUG_NEIGHBORSUPDATE D
	DEBUG_ONLY_GENERATE_HALF_THE_WORLD av
	DEBUG_OPEN_INCOMPATIBLE_WORLDS s
	DEBUG_ORE_VEINS af
	DEBUG_PACKET_SERIALIZATION ad
	DEBUG_PATHFINDING x
	DEBUG_RAIDS W
	DEBUG_RENDER w
	DEBUG_RESOURCE_GENERATION_OVERRIDE aQ
	DEBUG_RESOURCE_LOAD_TIMES Y
	DEBUG_SAVE_STRUCTURES_AS_SNBT O
	DEBUG_SCULK_CATALYST ag
	DEBUG_SHAPES C
	DEBUG_SHOW_SERVER_DEBUG_VALUES aN
	DEBUG_SKY_LIGHT_SECTIONS G
	DEBUG_SMALL_SPAWN ap
	DEBUG_SOCIAL_INTERACTIONS ai
	DEBUG_SOLID_FACE I
	DEBUG_STORE_CHUNK_STACKTRACES aO
	DEBUG_STRUCTURES E
	DEBUG_STRUCTURE_EDIT_MODE N
	DEBUG_SUBTITLES aH
	DEBUG_SUPPORT_BLOCKS B
	DEBUG_SYNCHRONOUS_GL_LOGS P
	DEBUG_TRIAL_SPAWNER_DETECTS_SHEEP_AS_PLAYERS am
	DEBUG_UI_NARRATION v
	DEBUG_UNLOCK_ALL_TRADES ak
	DEBUG_VALIDATE_RESOURCE_PATH_CASE aj
	DEBUG_VERBOSE_SERVER_EVENTS Q
	DEBUG_VILLAGE_SECTIONS T
	DEBUG_WATER y
	DEBUG_WORLDGENATTEMPT H
	DEBUG_WORLD_RECREATE aM
	DEFAULT_MINECRAFT_PORT aF
	FAKE_MS_JITTER aJ
	FAKE_MS_LATENCY aI
	FIX_SAND_DUPE q
	FIX_TNT_DUPE p
	ILLEGAL_FILE_CHARACTERS bd
	INGAME_DEBUG_OUTPUT aG
	IS_RUNNING_IN_IDE aW
	LANGUAGE_FORMAT k
	MAXIMUM_TICK_TIME_NANOS aT
	MAX_CHAINED_NEIGHBOR_UPDATES bb
	MAX_CHAT_LENGTH aZ
	MAX_COMMAND_LENGTH ba
	MAX_RENDER_DISTANCE bc
	MILLIS_PER_TICK bf
	MULTITHREADED_RENDERING o
	NETTY_LEAK_DETECTION aK
	RELEASE_NETWORK_PROTOCOL_VERSION e
	REPORT_FORMAT_VERSION l
	RESOURCE_PACK_FORMAT i
	SERIES c
	SNAPSHOT a
	SNAPSHOT_NETWORK_PROTOCOL_VERSION f
	SNAPSHOT_PROTOCOL_BIT bm
	SNBT_NAG_VERSION g
	THROW_ON_TASK_FAILURE h
	TICKS_PER_GAME_DAY bh
	TICKS_PER_MINUTE bg
	TICKS_PER_SECOND be
	USE_DEBUG_FEATURES r
	USE_NEW_RENDERSYSTEM n
	USE_WORKFLOWS_HOOKS aU
	VERSION_STRING d
	WORLD_ICON_SIZE bl
	WORLD_RESOLUTION aY
	WORLD_VERSION b
	debugGenerateSquareTerrainWithoutNoise at
	debugGenerateStripedTerrainWithoutNoise au
	debugVoidTerrain (Lnet/minecraft/world/level/ChunkPos;)Z a
	enableDataFixerOptimizations ()V d
	filterText (Ljava/lang/String;)Ljava/lang/String; a
	filterText (Ljava/lang/String;Z)Ljava/lang/String; a
	getCurrentVersion ()Lnet/minecraft/WorldVersion; b
	getProtocolVersion ()I c
	isAllowedChatCharacter (C)Z a
	setVersion (Lnet/minecraft/WorldVersion;)V a
	tryDetectVersion ()V a
net/minecraft/SystemReport ab
	BYTES_PER_MEBIBYTE a
	JAVA_VERSION e
	JAVA_VM_VERSION f
	LOGGER c
	ONE_GIGA b
	OPERATING_SYSTEM d
	entries g
	appendToCrashReportString (Ljava/lang/StringBuilder;)V a
	ignoreErrors (Ljava/lang/String;Ljava/lang/Runnable;)V a
	putGraphics (Ljava/util/List;)V b
	putHardware (Loshi/SystemInfo;)V a
	putMemory (Loshi/hardware/GlobalMemory;)V a
	putPhysicalMemory (Ljava/util/List;)V a
	putProcessor (Loshi/hardware/CentralProcessor;)V a
	putVirtualMemory (Loshi/hardware/VirtualMemory;)V a
	setDetail (Ljava/lang/String;Ljava/lang/String;)V a
	setDetail (Ljava/lang/String;Ljava/util/function/Supplier;)V a
	toLineSeparatedString ()Ljava/lang/String; a
net/minecraft/Util ac
	BACKGROUND_EXECUTOR j
	DEFAULT_MAX_THREADS g
	DEFAULT_SAFE_FILE_OPERATION_RETRIES h
	DOWNLOAD_POOL l
	FILENAME_DATE_TIME_FORMATTER m
	IO_POOL k
	LINEAR_LOOKUP_THRESHOLD n
	LOGGER f
	MAX_THREADS_SYSTEM_PROPERTY i
	NANOS_PER_MILLI a
	NIL_UUID d
	TICKER c
	ZIP_FILE_SYSTEM_PROVIDER e
	thePauser o
	timeSource b
	backgroundExecutor ()Ljava/util/concurrent/ExecutorService; f
	blockUntilDone (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; c
	blockUntilDone (Ljava/util/function/Function;Ljava/util/function/Predicate;)Ljava/lang/Object; a
	copyBetweenDirs (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V b
	createDeleter (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; a
	createFileCreatedCheck (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; c
	createFileDeletedCheck (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; b
	createIndexIdentityLookup (Ljava/util/List;)Ljava/util/function/ToIntFunction; f
	createIndexLookup (Ljava/util/List;)Ljava/util/function/ToIntFunction; e
	createRenamer (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; a
	describeError (Ljava/lang/Throwable;)Ljava/lang/String; c
	doFetchChoiceType (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; b
	doPause (Ljava/lang/String;)V d
	executeInSequence ([Ljava/util/function/BooleanSupplier;)Z a
	fallibleSequence (Ljava/util/List;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; a
	fetchChoiceType (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; a
	findNextInIterable (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; a
	findPreviousInIterable (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; b
	fixedSize (Ljava/util/List;I)Lcom/mojang/serialization/DataResult; a
	fixedSize (Ljava/util/stream/IntStream;I)Lcom/mojang/serialization/DataResult; a
	fixedSize (Ljava/util/stream/LongStream;I)Lcom/mojang/serialization/DataResult; a
	getEpochMillis ()J d
	getFilenameFormattedDateTime ()Ljava/lang/String; e
	getMaxThreads ()I m
	getMillis ()J b
	getNanos ()J c
	getOrThrow (Lcom/mojang/serialization/DataResult;Ljava/util/function/Function;)Ljava/lang/Object; a
	getPartialOrThrow (Lcom/mojang/serialization/DataResult;Ljava/util/function/Function;)Ljava/lang/Object; b
	getPlatform ()Lnet/minecraft/Util$OS; j
	getPropertyName (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Object;)Ljava/lang/String; a
	getRandom (Ljava/util/List;Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; a
	getRandom ([ILnet/minecraft/util/RandomSource;)I a
	getRandom ([Ljava/lang/Object;Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; a
	getRandomSafe (Ljava/util/List;Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; b
	getVmArguments ()Ljava/util/stream/Stream; k
	ifElse (Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional; a
	ioPool ()Ljava/util/concurrent/ExecutorService; g
	isBlank (Ljava/lang/String;)Z b
	isWhitespace (I)Z a
	lastOf (Ljava/util/List;)Ljava/lang/Object; a
	logAndPauseIfInIde (Ljava/lang/String;)V a
	logAndPauseIfInIde (Ljava/lang/String;Ljava/lang/Throwable;)V a
	make (Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object; a
	make (Ljava/util/function/Supplier;)Ljava/lang/Object; a
	makeDescriptionId (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; a
	makeExecutor (Ljava/lang/String;)Ljava/util/concurrent/ExecutorService; c
	makeIoExecutor (Ljava/lang/String;Z)Ljava/util/concurrent/ExecutorService; a
	memoize (Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction; a
	memoize (Ljava/util/function/Function;)Ljava/util/function/Function; b
	name (Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable; a
	name (Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/util/function/Supplier; a
	nonCriticalIoPool ()Ljava/util/concurrent/ExecutorService; h
	offsetByCodepoints (Ljava/lang/String;II)I a
	onThreadException (Ljava/lang/Thread;Ljava/lang/Throwable;)V a
	pauseInIde (Ljava/lang/Throwable;)Ljava/lang/Throwable; b
	prefix (Ljava/lang/String;Ljava/util/function/Consumer;)Ljava/util/function/Consumer; a
	readTypedOrThrow (Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/Typed; a
	readTypedOrThrow (Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;Z)Lcom/mojang/datafixers/Typed; a
	runWithRetries (ILjava/lang/String;[Ljava/util/function/BooleanSupplier;)Z a
	safeReplaceFile (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V a
	safeReplaceOrMoveFile (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;Z)Z a
	sanitizeName (Ljava/lang/String;Lnet/minecraft/CharPredicate;)Ljava/lang/String; a
	sequence (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; b
	sequenceFailFast (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; c
	sequenceFailFastAndCancel (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; d
	setPause (Ljava/util/function/Consumer;)V a
	shuffle (Ljava/util/List;Lnet/minecraft/util/RandomSource;)V c
	shuffledCopy (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	shuffledCopy ([Ljava/lang/Object;Lnet/minecraft/util/RandomSource;)Ljava/util/List; b
	shutdownExecutor (Ljava/util/concurrent/ExecutorService;)V a
	shutdownExecutors ()V i
	singleKeyCache (Ljava/util/function/Function;)Lnet/minecraft/util/SingleKeyCache; a
	startTimerHackThread ()V l
	throwAsRuntime (Ljava/lang/Throwable;)V a
	toMap ()Ljava/util/stream/Collector; a
	toShuffledList (Ljava/util/stream/IntStream;Lnet/minecraft/util/RandomSource;)Lit/unimi/dsi/fastutil/ints/IntArrayList; a
	toShuffledList (Ljava/util/stream/Stream;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	wrapThreadWithTaskName (Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Runnable; a
	wrapThreadWithTaskName (Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/function/Supplier; a
	writeAndReadTypedOrThrow (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/Type;Ljava/util/function/UnaryOperator;)Lcom/mojang/datafixers/Typed; a
net/minecraft/Util$OS ac$a
	$VALUES g
	LINUX a
	OSX d
	SOLARIS b
	UNKNOWN e
	WINDOWS c
	telemetryName f
	$values ()[Lnet/minecraft/Util$OS; b
	getOpenUrlArguments (Ljava/net/URL;)[Ljava/lang/String; b
	openFile (Ljava/io/File;)V a
	openUri (Ljava/lang/String;)V a
	openUri (Ljava/net/URI;)V a
	openUrl (Ljava/net/URL;)V a
	telemetryName ()Ljava/lang/String; a
net/minecraft/WorldVersion ad
	getBuildTime ()Ljava/util/Date; f
	getDataVersion ()Lnet/minecraft/world/level/storage/DataVersion; d
	getId ()Ljava/lang/String; b
	getName ()Ljava/lang/String; c
	getPackVersion (Lnet/minecraft/server/packs/PackType;)I a
	getProtocolVersion ()I e
	isStable ()Z g
net/minecraft/advancements/Advancement ae
	CODEC a
	CRITERIA_CODEC i
	criteria e
	display c
	name h
	parent b
	requirements f
	rewards d
	sendsTelemetryEvent g
	criteria ()Ljava/util/Map; e
	decorateName (Lnet/minecraft/advancements/DisplayInfo;)Lnet/minecraft/network/chat/Component; a
	display ()Ljava/util/Optional; c
	isRoot ()Z a
	name ()Ljava/util/Optional; h
	name (Lnet/minecraft/advancements/AdvancementHolder;)Lnet/minecraft/network/chat/Component; a
	parent ()Ljava/util/Optional; b
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/Advancement; b
	requirements ()Lnet/minecraft/advancements/AdvancementRequirements; f
	rewards ()Lnet/minecraft/advancements/AdvancementRewards; d
	sendsTelemetryEvent ()Z g
	validate (Lnet/minecraft/advancements/Advancement;)Lcom/mojang/serialization/DataResult; a
	validate (Lnet/minecraft/util/ProblemReporter;Lnet/minecraft/world/level/storage/loot/LootDataResolver;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/Advancement$Builder ae$a
	criteria d
	display b
	parent a
	requirements e
	requirementsStrategy f
	rewards c
	sendsTelemetryEvent g
	addCriterion (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lnet/minecraft/advancements/Advancement$Builder; a
	advancement ()Lnet/minecraft/advancements/Advancement$Builder; a
	build (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementHolder; b
	display (Lnet/minecraft/advancements/DisplayInfo;)Lnet/minecraft/advancements/Advancement$Builder; a
	display (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/advancements/AdvancementType;ZZZ)Lnet/minecraft/advancements/Advancement$Builder; a
	display (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/advancements/AdvancementType;ZZZ)Lnet/minecraft/advancements/Advancement$Builder; a
	parent (Lnet/minecraft/advancements/AdvancementHolder;)Lnet/minecraft/advancements/Advancement$Builder; a
	parent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement$Builder; a
	recipeAdvancement ()Lnet/minecraft/advancements/Advancement$Builder; b
	requirements (Lnet/minecraft/advancements/AdvancementRequirements$Strategy;)Lnet/minecraft/advancements/Advancement$Builder; a
	requirements (Lnet/minecraft/advancements/AdvancementRequirements;)Lnet/minecraft/advancements/Advancement$Builder; a
	rewards (Lnet/minecraft/advancements/AdvancementRewards$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
	rewards (Lnet/minecraft/advancements/AdvancementRewards;)Lnet/minecraft/advancements/Advancement$Builder; a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)Lnet/minecraft/advancements/AdvancementHolder; a
	sendsTelemetryEvent ()Lnet/minecraft/advancements/Advancement$Builder; c
net/minecraft/advancements/AdvancementHolder af
	id a
	value b
	id ()Lnet/minecraft/resources/ResourceLocation; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/AdvancementHolder; b
	value ()Lnet/minecraft/advancements/Advancement; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/AdvancementNode ag
	children c
	holder a
	parent b
	addChild (Lnet/minecraft/advancements/AdvancementNode;)V b
	advancement ()Lnet/minecraft/advancements/Advancement; a
	children ()Ljava/lang/Iterable; e
	getRoot (Lnet/minecraft/advancements/AdvancementNode;)Lnet/minecraft/advancements/AdvancementNode; a
	holder ()Lnet/minecraft/advancements/AdvancementHolder; b
	parent ()Lnet/minecraft/advancements/AdvancementNode; c
	root ()Lnet/minecraft/advancements/AdvancementNode; d
net/minecraft/advancements/AdvancementProgress ah
	CODEC a
	CRITERIA_CODEC d
	OBTAINED_TIME_CODEC c
	OBTAINED_TIME_FORMAT b
	criteria e
	requirements f
	compareTo (Lnet/minecraft/advancements/AdvancementProgress;)I a
	countCompletedRequirements ()I h
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/AdvancementProgress; b
	getCompletedCriteria ()Ljava/lang/Iterable; f
	getCriterion (Ljava/lang/String;)Lnet/minecraft/advancements/CriterionProgress; c
	getFirstProgressDate ()Ljava/time/Instant; g
	getPercent ()F c
	getProgressText ()Lnet/minecraft/network/chat/Component; d
	getRemainingCriteria ()Ljava/lang/Iterable; e
	grantProgress (Ljava/lang/String;)Z a
	hasProgress ()Z b
	isCriterionDone (Ljava/lang/String;)Z d
	isDone ()Z a
	revokeProgress (Ljava/lang/String;)Z b
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	update (Lnet/minecraft/advancements/AdvancementRequirements;)V a
net/minecraft/advancements/AdvancementRequirements ai
	CODEC a
	EMPTY b
	requirements c
	allOf (Ljava/util/Collection;)Lnet/minecraft/advancements/AdvancementRequirements; a
	anyMatch (Ljava/util/List;Ljava/util/function/Predicate;)Z a
	anyOf (Ljava/util/Collection;)Lnet/minecraft/advancements/AdvancementRequirements; b
	count (Ljava/util/function/Predicate;)I b
	isEmpty ()Z b
	names ()Ljava/util/Set; c
	requirements ()Ljava/util/List; d
	size ()I a
	test (Ljava/util/function/Predicate;)Z a
	validate (Ljava/util/Set;)Lcom/mojang/serialization/DataResult; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/AdvancementRequirements$Strategy ai$a
	AND a
	OR b
net/minecraft/advancements/AdvancementRewards aj
	CODEC a
	EMPTY b
	experience c
	function f
	loot d
	recipes e
	experience ()I a
	function ()Ljava/util/Optional; d
	grant (Lnet/minecraft/server/level/ServerPlayer;)V a
	loot ()Ljava/util/List; b
	recipes ()Ljava/util/List; c
net/minecraft/advancements/AdvancementRewards$Builder aj$a
	experience a
	function d
	loot b
	recipes c
	addExperience (I)Lnet/minecraft/advancements/AdvancementRewards$Builder; b
	addLootTable (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; b
	addRecipe (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; d
	build ()Lnet/minecraft/advancements/AdvancementRewards; a
	experience (I)Lnet/minecraft/advancements/AdvancementRewards$Builder; a
	function (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; e
	loot (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; a
	recipe (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; c
	runs (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; f
net/minecraft/advancements/AdvancementTree ak
	LOGGER a
	listener e
	nodes b
	roots c
	tasks d
	addAll (Ljava/util/Collection;)V a
	clear ()V a
	get (Lnet/minecraft/advancements/AdvancementHolder;)Lnet/minecraft/advancements/AdvancementNode; a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementNode; a
	nodes ()Ljava/util/Collection; c
	remove (Ljava/util/Set;)V a
	remove (Lnet/minecraft/advancements/AdvancementNode;)V a
	roots ()Ljava/lang/Iterable; b
	setListener (Lnet/minecraft/advancements/AdvancementTree$Listener;)V a
	tryInsert (Lnet/minecraft/advancements/AdvancementHolder;)Z b
net/minecraft/advancements/AdvancementTree$Listener ak$a
	onAddAdvancementRoot (Lnet/minecraft/advancements/AdvancementNode;)V a
	onAddAdvancementTask (Lnet/minecraft/advancements/AdvancementNode;)V c
	onAdvancementsCleared ()V a
	onRemoveAdvancementRoot (Lnet/minecraft/advancements/AdvancementNode;)V b
	onRemoveAdvancementTask (Lnet/minecraft/advancements/AdvancementNode;)V d
net/minecraft/advancements/AdvancementType al
	$VALUES h
	CHALLENGE b
	CODEC d
	GOAL c
	TASK a
	chatColor f
	displayName g
	name e
	$values ()[Lnet/minecraft/advancements/AdvancementType; d
	createAnnouncement (Lnet/minecraft/advancements/AdvancementHolder;Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/network/chat/MutableComponent; a
	getChatColor ()Lnet/minecraft/ChatFormatting; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
	getSerializedName ()Ljava/lang/String; c
net/minecraft/advancements/CriteriaTriggers am
	ALLAY_DROP_ITEM_ON_BLOCK Y
	AVOID_VIBRATION Z
	BAD_OMEN J
	BEE_NEST_DESTROYED L
	BRED_ANIMALS p
	BREWED_POTION l
	CHANGED_DIMENSION w
	CHANNELED_LIGHTNING F
	CODEC a
	CONSTRUCT_BEACON m
	CONSUME_ITEM A
	CURED_ZOMBIE_VILLAGER s
	EFFECTS_CHANGED B
	ENCHANTED_ITEM j
	ENTER_BLOCK e
	ENTITY_HURT_PLAYER i
	ENTITY_KILLED_PLAYER d
	FALL_FROM_HEIGHT V
	FILLED_BUCKET k
	FISHING_ROD_HOOKED E
	GENERATE_LOOT O
	HONEY_BLOCK_SLIDE K
	IMPOSSIBLE b
	INVENTORY_CHANGED f
	ITEM_DURABILITY_CHANGED u
	ITEM_USED_ON_BLOCK N
	KILLED_BY_CROSSBOW H
	KILL_MOB_NEAR_SCULK_CATALYST X
	LEVITATION v
	LIGHTNING_STRIKE T
	LOCATION q
	NETHER_TRAVEL D
	PLACED_BLOCK z
	PLAYER_HURT_ENTITY h
	PLAYER_INTERACTED_WITH_ENTITY R
	PLAYER_KILLED_ENTITY c
	RAID_WIN I
	RECIPE_CRAFTED aa
	RECIPE_UNLOCKED g
	RIDE_ENTITY_IN_LAVA_TRIGGER W
	SHOT_CROSSBOW G
	SLEPT_IN_BED r
	START_RIDING_TRIGGER S
	SUMMONED_ENTITY o
	TAME_ANIMAL y
	TARGET_BLOCK_HIT M
	THROWN_ITEM_PICKED_UP_BY_ENTITY P
	THROWN_ITEM_PICKED_UP_BY_PLAYER Q
	TICK x
	TRADE t
	USED_ENDER_EYE n
	USED_TOTEM C
	USING_ITEM U
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/advancements/CriterionTrigger; a
	register (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTrigger;)Lnet/minecraft/advancements/CriterionTrigger; a
net/minecraft/advancements/Criterion an
	CODEC a
	MAP_CODEC d
	trigger b
	triggerInstance c
	criterionCodec (Lnet/minecraft/advancements/CriterionTrigger;)Lcom/mojang/serialization/Codec; a
	trigger ()Lnet/minecraft/advancements/CriterionTrigger; a
	triggerInstance ()Lnet/minecraft/advancements/CriterionTriggerInstance; b
net/minecraft/advancements/CriterionProgress ao
	obtained a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/CriterionProgress; b
	getObtained ()Ljava/time/Instant; d
	grant ()V b
	isDone ()Z a
	revoke ()V c
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/CriterionTrigger ap
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	createCriterion (Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/advancements/Criterion; a
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
net/minecraft/advancements/CriterionTrigger$Listener ap$a
	advancement b
	criterion c
	trigger a
	advancement ()Lnet/minecraft/advancements/AdvancementHolder; b
	criterion ()Ljava/lang/String; c
	run (Lnet/minecraft/server/PlayerAdvancements;)V a
	trigger ()Lnet/minecraft/advancements/CriterionTriggerInstance; a
net/minecraft/advancements/CriterionTriggerInstance aq
	validate (Lnet/minecraft/advancements/critereon/CriterionValidator;)V a
net/minecraft/advancements/DisplayInfo ar
	CODEC a
	announceChat h
	background e
	description c
	hidden i
	icon d
	showToast g
	title b
	type f
	x j
	y k
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/DisplayInfo; b
	getBackground ()Ljava/util/Optional; d
	getDescription ()Lnet/minecraft/network/chat/Component; b
	getIcon ()Lnet/minecraft/world/item/ItemStack; c
	getTitle ()Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/advancements/AdvancementType; e
	getX ()F f
	getY ()F g
	isHidden ()Z j
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	setLocation (FF)V a
	shouldAnnounceChat ()Z i
	shouldShowToast ()Z h
net/minecraft/advancements/TreeNodePosition as
	ancestor f
	change k
	childIndex d
	children e
	mod j
	node a
	parent b
	previousSibling c
	shift l
	thread g
	x h
	y i
	addChild (Lnet/minecraft/advancements/AdvancementNode;Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	apportion (Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	executeShifts ()V b
	finalizePosition ()V e
	firstWalk ()V a
	getAncestor (Lnet/minecraft/advancements/TreeNodePosition;Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	moveSubtree (Lnet/minecraft/advancements/TreeNodePosition;F)V a
	nextOrThread ()Lnet/minecraft/advancements/TreeNodePosition; d
	previousOrThread ()Lnet/minecraft/advancements/TreeNodePosition; c
	run (Lnet/minecraft/advancements/AdvancementNode;)V a
	secondWalk (FIF)F a
	thirdWalk (F)V a
net/minecraft/advancements/critereon/BeeNestDestroyedTrigger at
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance at$a
	CODEC a
	beesInside e
	block c
	item d
	player b
	beesInside ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; d
	block ()Ljava/util/Optional; b
	destroyedBeeNest (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/Criterion; a
	item ()Ljava/util/Optional; c
	matches (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;I)Z a
	player ()Ljava/util/Optional; a
net/minecraft/advancements/critereon/BlockPredicate au
	BLOCKS_CODEC f
	CODEC a
	blocks c
	nbt e
	properties d
	tag b
	blocks ()Ljava/util/Optional; b
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	nbt ()Ljava/util/Optional; d
	properties ()Ljava/util/Optional; c
	tag ()Ljava/util/Optional; a
net/minecraft/advancements/critereon/BlockPredicate$Builder au$a
	blocks a
	nbt d
	properties c
	tag b
	block ()Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/BlockPredicate; b
	hasNbt (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	of (Ljava/util/Collection;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	of (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	of ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
net/minecraft/advancements/critereon/BredAnimalsTrigger av
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/AgeableMob;)V a
net/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance av$a
	CODEC a
	child e
	parent c
	partner d
	player b
	bredAnimals ()Lnet/minecraft/advancements/Criterion; b
	bredAnimals (Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; a
	bredAnimals (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	child ()Ljava/util/Optional; e
	matches (Ljava/util/Optional;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	parent ()Ljava/util/Optional; c
	partner ()Ljava/util/Optional; d
	player ()Ljava/util/Optional; a
	validate (Lnet/minecraft/advancements/critereon/CriterionValidator;)V a
net/minecraft/advancements/critereon/BrewedPotionTrigger aw
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/Holder;)V a
net/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance aw$a
	CODEC a
	player b
	potion c
	brewedPotion ()Lnet/minecraft/advancements/Criterion; b
	matches (Lnet/minecraft/core/Holder;)Z a
	player ()Ljava/util/Optional; a
	potion ()Ljava/util/Optional; c
net/minecraft/advancements/critereon/ChangeDimensionTrigger ax
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)V a
net/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance ax$a
	CODEC a
	from c
	player b
	to d
	changedDimension ()Lnet/minecraft/advancements/Criterion; b
	changedDimension (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/Criterion; a
	changedDimensionFrom (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/Criterion; b
	changedDimensionTo (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/Criterion; a
	from ()Ljava/util/Optional; c
	matches (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)Z b
	player ()Ljava/util/Optional; a
	to ()Ljava/util/Optional; d
net/minecraft/advancements/critereon/ChanneledLightningTrigger ay
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance ay$a
	CODEC a
	player b
	victims c
	channeledLightning ([Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	matches (Ljava/util/Collection;)Z a
	player ()Ljava/util/Optional; a
	validate (Lnet/minecraft/advancements/critereon/CriterionValidator;)V a
	victims ()Ljava/util/List; b
net/minecraft/advancements/critereon/ConstructBeaconTrigger az
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;I)V a
net/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance az$a
	CODEC a
	level c
	player b
	constructedBeacon ()Lnet/minecraft/advancements/Criterion; b
	constructedBeacon (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/Criterion; a
	level ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; c
	matches (I)Z a
	player ()Ljava/util/Optional; a
net/minecraft/advancements/critereon/ConsumeItemTrigger ba
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance ba$a
	CODEC a
	item c
	player b
	item ()Ljava/util/Optional; c
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	player ()Ljava/util/Optional; a
	usedItem ()Lnet/minecraft/advancements/Criterion; b
	usedItem (Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	usedItem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/Criterion; a
net/minecraft/advancements/critereon/ContextAwarePredicate bb
	CODEC a
	compositePredicates c
	conditions b
	create ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/advancements/critereon/ContextAwarePredicate; a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/advancements/critereon/CriterionValidator bc
	lootData b
	reporter a
	validate (Ljava/util/List;Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;Ljava/lang/String;)V a
	validate (Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;Ljava/lang/String;)V a
	validateEntities (Ljava/util/List;Ljava/lang/String;)V a
	validateEntity (Ljava/util/Optional;Ljava/lang/String;)V a
	validateEntity (Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Ljava/lang/String;)V a
net/minecraft/advancements/critereon/CuredZombieVillagerTrigger bd
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/monster/Zombie;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance bd$a
	CODEC a
	player b
	villager d
	zombie c
	curedZombieVillager ()Lnet/minecraft/advancements/Criterion; b
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	player ()Ljava/util/Optional; a
	validate (Lnet/minecraft/advancements/critereon/CriterionValidator;)V a
	villager ()Ljava/util/Optional; d
	zombie ()Ljava/util/Optional; c
net/minecraft/advancements/critereon/DamagePredicate be
	CODEC a
	blocked e
	dealtDamage b
	sourceEntity d
	takenDamage c
	type f
	blocked ()Ljava/util/Optional; d
	dealtDamage ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	sourceEntity ()Ljava/util/Optional; c
	takenDamage ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; b
	type ()Ljava/util/Optional; e
net/minecraft/advancements/critereon/DamagePredicate$Builder be$a
	blocked d
	dealtDamage a
	sourceEntity c
	takenDamage b
	type e
	blocked (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/DamagePredicate; b
	damageInstance ()Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	dealtDamage (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	sourceEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	takenDamage (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; b
	type (Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	type (Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
net/minecraft/advancements/critereon/DamageSourcePredicate bf
	CODEC a
	directEntity c
	sourceEntity d
	tags b
	directEntity ()Ljava/util/Optional; b
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	sourceEntity ()Ljava/util/Optional; c
	tags ()Ljava/util/List; a
net/minecraft/advancements/critereon/DamageSourcePredicate$Builder bf$a
	directEntity b
	sourceEntity c
	tags a
	build ()Lnet/minecraft/advancements/critereon/DamageSourcePredicate; b
	damageType ()Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	direct (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	source (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; b
	tag (Lnet/minecraft/advancements/critereon/TagPredicate;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
net/minecraft/advancements/critereon/DistancePredicate bg
	CODEC a
	absolute f
	horizontal e
	x b
	y c
	z d
	absolute ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; e
	absolute (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DistancePredicate; c
	horizontal ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; d
	horizontal (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DistancePredicate; a
	matches (DDDDDD)Z a
	vertical (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DistancePredicate; b
	x ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	y ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; b
	z ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; c
net/minecraft/advancements/critereon/DistanceTrigger bh
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance bh$a
	CODEC a
	distance d
	player b
	startPosition c
	distance ()Ljava/util/Optional; c
	fallFromHeight (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DistancePredicate;Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	player ()Ljava/util/Optional; a
	rideEntityInLava (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/Criterion; a
	startPosition ()Ljava/util/Optional; b
	travelledThroughNether (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/Criterion; a
net/minecraft/advancements/critereon/EffectsChangedTrigger bi
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance bi$a
	CODEC a
	effects c
	player b
	source d
	effects ()Ljava/util/Optional; b
	gotEffectsFrom (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	hasEffects (Lnet/minecraft/advancements/critereon/MobEffectsPredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	player ()Ljava/util/Optional; a
	source ()Ljava/util/Optional; c
	validate (Lnet/minecraft/advancements/critereon/CriterionValidator;)V a
net/minecraft/advancements/critereon/EnchantedItemTrigger bj
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance bj$a
	CODEC a
	item c
	levels d
	player b
	enchantedItem ()Lnet/minecraft/advancements/Criterion; b
	item ()Ljava/util/Optional; c
	levels ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; d
	matches (Lnet/minecraft/world/item/ItemStack;I)Z a
	player ()Ljava/util/Optional; a
net/minecraft/advancements/critereon/EnchantmentPredicate bk
	CODEC a
	enchantment b
	level c
	containedIn (Ljava/util/Map;)Z a
	enchantment ()Ljava/util/Optional; a
	level ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; b
net/minecraft/advancements/critereon/EnterBlockTrigger bl
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance bl$a
	CODEC a
	block c
	player b
	state d
	block ()Ljava/util/Optional; b
	entersBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/Criterion; a
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	player ()Ljava/util/Optional; a
	state ()Ljava/util/Optional; c
	validate (Lnet/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance;)Lcom/mojang/serialization/DataResult; a
net/minecraft/advancements/critereon/EntityEquipmentPredicate bm
	CAPTAIN b
	CODEC a
	chest d
	feet f
	head c
	legs e
	mainhand g
	offhand h
	chest ()Ljava/util/Optional; b
	feet ()Ljava/util/Optional; d
	head ()Ljava/util/Optional; a
	legs ()Ljava/util/Optional; c
	mainhand ()Ljava/util/Optional; e
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	offhand ()Ljava/util/Optional; f
net/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder bm$a
	chest b
	feet d
	head a
	legs c
	mainhand e
	offhand f
	build ()Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate; b
	chest (Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; b
	equipment ()Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; a
	feet (Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; d
	head (Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; a
	legs (Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; c
	mainhand (Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; e
	offhand (Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; f
net/minecraft/advancements/critereon/EntityFlagsPredicate bn
	CODEC a
	isBaby f
	isCrouching c
	isOnFire b
	isSprinting d
	isSwimming e
	isBaby ()Ljava/util/Optional; e
	isCrouching ()Ljava/util/Optional; b
	isOnFire ()Ljava/util/Optional; a
	isSprinting ()Ljava/util/Optional; c
	isSwimming ()Ljava/util/Optional; d
	matches (Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/advancements/critereon/EntityFlagsPredicate$Builder bn$a
	isBaby e
	isCrouching b
	isOnFire a
	isSprinting c
	isSwimming d
	build ()Lnet/minecraft/advancements/critereon/EntityFlagsPredicate; b
	flags ()Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; a
	setCrouching (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; b
	setIsBaby (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; e
	setOnFire (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; a
	setSprinting (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; c
	setSwimming (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; d
net/minecraft/advancements/critereon/EntityHurtPlayerTrigger bo
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)V a
net/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance bo$a
	CODEC a
	damage c
	player b
	damage ()Ljava/util/Optional; c
	entityHurtPlayer ()Lnet/minecraft/advancements/Criterion; b
	entityHurtPlayer (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	entityHurtPlayer (Lnet/minecraft/advancements/critereon/DamagePredicate;)Lnet/minecraft/advancements/Criterion; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	player ()Ljava/util/Optional; a
net/minecraft/advancements/critereon/EntityPredicate bp
	ADVANCEMENT_CODEC b
	CODEC a
	distanceToPlayer d
	effects g
	entityType c
	equipment j
	flags i
	location e
	nbt h
	passenger m
	steppingOnLocation f
	subPredicate k
	targetedEntity n
	team o
	vehicle l
	createContext (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/storage/loot/LootContext; b
	distanceToPlayer ()Ljava/util/Optional; b
	effects ()Ljava/util/Optional; e
	entityType ()Ljava/util/Optional; a
	equipment ()Ljava/util/Optional; h
	flags ()Ljava/util/Optional; g
	location ()Ljava/util/Optional; c
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)Z a
	nbt ()Ljava/util/Optional; f
	passenger ()Ljava/util/Optional; k
	steppingOnLocation ()Ljava/util/Optional; d
	subPredicate ()Ljava/util/Optional; i
	targetedEntity ()Ljava/util/Optional; l
	team ()Ljava/util/Optional; m
	vehicle ()Ljava/util/Optional; j
	wrap (Ljava/util/Optional;)Ljava/util/Optional; a
	wrap (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/ContextAwarePredicate; a
	wrap (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/ContextAwarePredicate; a
	wrap ([Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Ljava/util/List; a
net/minecraft/advancements/critereon/EntityPredicate$Builder bp$a
	distanceToPlayer b
	effects e
	entityType a
	equipment h
	flags g
	location c
	nbt f
	passenger k
	steppingOnLocation d
	subPredicate i
	targetedEntity l
	team m
	vehicle j
	build ()Lnet/minecraft/advancements/critereon/EntityPredicate; b
	distance (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	effects (Lnet/minecraft/advancements/critereon/MobEffectsPredicate$Builder;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	entity ()Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	entityType (Lnet/minecraft/advancements/critereon/EntityTypePredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	equipment (Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	equipment (Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	flags (Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	located (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	nbt (Lnet/minecraft/advancements/critereon/NbtPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	of (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	of (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	passenger (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; b
	steppingOn (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; b
	subPredicate (Lnet/minecraft/advancements/critereon/EntitySubPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	targetedEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; c
	team (Ljava/lang/String;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	vehicle (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
net/minecraft/advancements/critereon/EntitySubPredicate bq
	CODEC a
	matches (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	type ()Lnet/minecraft/advancements/critereon/EntitySubPredicate$Type; a
	variant (Lnet/minecraft/world/entity/animal/CatVariant;)Lnet/minecraft/advancements/critereon/EntitySubPredicate; a
	variant (Lnet/minecraft/world/entity/animal/FrogVariant;)Lnet/minecraft/advancements/critereon/EntitySubPredicate; a
net/minecraft/advancements/critereon/EntitySubPredicate$Type bq$a
	codec a
	codec ()Lcom/mojang/serialization/MapCodec; a
net/minecraft/advancements/critereon/EntitySubPredicate$Types bq$b
	ANY a
	AXOLOTL h
	BOAT i
	CAT f
	FISHING_HOOK c
	FOX j
	FROG g
	HORSE n
	LIGHTNING b
	LLAMA o
	MOOSHROOM k
	PAINTING l
	PARROT q
	PLAYER d
	RABBIT m
	SLIME e
	TROPICAL_FISH r
	TYPES s
	TYPE_CODEC t
	VILLAGER p
net/minecraft/advancements/critereon/EntityTypePredicate br
	CODEC a
	types b
	matches (Lnet/minecraft/world/entity/EntityType;)Z b
	of (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/EntityTypePredicate; a
	of (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/advancements/critereon/EntityTypePredicate; a
	types ()Lnet/minecraft/core/HolderSet; a
net/minecraft/advancements/critereon/EntityVariantPredicate bs
	getter a
	type b
	create (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/EntityVariantPredicate; a
	create (Lnet/minecraft/core/Registry;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/EntityVariantPredicate; a
	createPredicate (Ljava/lang/Object;)Lnet/minecraft/advancements/critereon/EntityVariantPredicate$SubPredicate; a
	type ()Lnet/minecraft/advancements/critereon/EntitySubPredicate$Type; a
net/minecraft/advancements/critereon/EntityVariantPredicate$SubPredicate bs$a
	getter c
	type b
	variant d
	getter ()Ljava/util/function/Function; b
	matches (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	type ()Lnet/minecraft/advancements/critereon/EntitySubPredicate$Type; a
	variant ()Ljava/lang/Object; c
net/minecraft/advancements/critereon/FilledBucketTrigger bt
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance bt$a
	CODEC a
	item c
	player b
	filledBucket (Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	item ()Ljava/util/Optional; b
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	player ()Ljava/util/Optional; a
net/minecraft/advancements/critereon/FishingHookPredicate bu
	ANY b
	CODEC c
	inOpenWater d
	inOpenWater ()Ljava/util/Optional; b
	inOpenWater (Z)Lnet/minecraft/advancements/critereon/FishingHookPredicate; a
	matches (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	type ()Lnet/minecraft/advancements/critereon/EntitySubPredicate$Type; a
net/minecraft/advancements/critereon/FishingRodHookedTrigger bv
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/FishingHook;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance bv$a
	CODEC a
	entity d
	item e
	player b
	rod c
	entity ()Ljava/util/Optional; c
	fishedItem (Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; a
	item ()Ljava/util/Optional; d
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/Collection;)Z a
	player ()Ljava/util/Optional; a
	rod ()Ljava/util/Optional; b
	validate (Lnet/minecraft/advancements/critereon/CriterionValidator;)V a
net/minecraft/advancements/critereon/FluidPredicate bw
	CODEC a
	fluid c
	properties d
	tag b
	fluid ()Ljava/util/Optional; b
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	properties ()Ljava/util/Optional; c
	tag ()Ljava/util/Optional; a
net/minecraft/advancements/critereon/FluidPredicate$Builder bw$a
	fluid a
	fluids b
	properties c
	build ()Lnet/minecraft/advancements/critereon/FluidPredicate; b
	fluid ()Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	of (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	of (Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
net/minecraft/advancements/critereon/ImpossibleTrigger bx
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
net/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance bx$a
	CODEC a
	validate (Lnet/minecraft/advancements/critereon/CriterionValidator;)V a
net/minecraft/advancements/critereon/InventoryChangeTrigger by
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;)V a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;III)V a
net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance by$a
	CODEC a
	items d
	player b
	slots c
	hasItems ([Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	hasItems ([Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/Criterion; a
	hasItems ([Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/Criterion; a
	items ()Ljava/util/List; c
	matches (Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;III)Z a
	player ()Ljava/util/Optional; a
	slots ()Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance$Slots; b
net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance$Slots by$a$a
	ANY b
	CODEC a
	empty e
	full d
	occupied c
	empty ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; c
	full ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; b
	matches (III)Z a
	occupied ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
net/minecraft/advancements/critereon/ItemDurabilityTrigger bz
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance bz$a
	CODEC a
	delta e
	durability d
	item c
	player b
	changedDurability (Ljava/util/Optional;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/Criterion; a
	changedDurability (Ljava/util/Optional;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/Criterion; a
	delta ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; d
	durability ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; c
	item ()Ljava/util/Optional; b
	matches (Lnet/minecraft/world/item/ItemStack;I)Z a
	player ()Ljava/util/Optional; a
net/minecraft/advancements/critereon/ItemPredicate ca
	CODEC a
	ITEMS_CODEC j
	count d
	durability e
	enchantments f
	items c
	nbt i
	potion h
	storedEnchantments g
	tag b
	count ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; c
	durability ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; d
	enchantments ()Ljava/util/List; e
	items ()Ljava/util/Optional; b
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	nbt ()Ljava/util/Optional; h
	potion ()Ljava/util/Optional; g
	storedEnchantments ()Ljava/util/List; f
	tag ()Ljava/util/Optional; a
net/minecraft/advancements/critereon/ItemPredicate$Builder ca$a
	count e
	durability f
	enchantments a
	items c
	nbt h
	potion g
	storedEnchantments b
	tag d
	build ()Lnet/minecraft/advancements/critereon/ItemPredicate; b
	hasDurability (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; b
	hasEnchantment (Lnet/minecraft/advancements/critereon/EnchantmentPredicate;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	hasNbt (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	hasStoredEnchantment (Lnet/minecraft/advancements/critereon/EnchantmentPredicate;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; b
	isPotion (Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	item ()Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	of (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	of ([Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	withCount (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
net/minecraft/advancements/critereon/ItemUsedOnLocationTrigger cb
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ItemUsedOnLocationTrigger$TriggerInstance cb$a
	CODEC a
	location c
	player b
	allayDropItemOnBlock (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/Criterion; b
	itemUsedOnBlock (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	itemUsedOnLocation (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/critereon/ItemUsedOnLocationTrigger$TriggerInstance; c
	location ()Ljava/util/Optional; b
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	placedBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/Criterion; a
	placedBlock ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/advancements/Criterion; a
	player ()Ljava/util/Optional; a
	validate (Lnet/minecraft/advancements/critereon/CriterionValidator;)V a
net/minecraft/advancements/critereon/KilledByCrossbowTrigger cc
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance cc$a
	CODEC a
	player b
	uniqueEntityTypes d
	victims c
	crossbowKilled (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/Criterion; a
	crossbowKilled ([Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	matches (Ljava/util/Collection;I)Z a
	player ()Ljava/util/Optional; a
	uniqueEntityTypes ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; c
	validate (Lnet/minecraft/advancements/critereon/CriterionValidator;)V a
	victims ()Ljava/util/List; b
net/minecraft/advancements/critereon/KilledTrigger cd
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;)V a
net/minecraft/advancements/critereon/KilledTrigger$TriggerInstance cd$a
	CODEC a
	entityPredicate c
	killingBlow d
	player b
	entityKilledPlayer ()Lnet/minecraft/advancements/Criterion; d
	entityKilledPlayer (Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; b
	entityKilledPlayer (Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; b
	entityKilledPlayer (Ljava/util/Optional;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/Criterion; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/Criterion; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/Criterion; b
	entityPredicate ()Ljava/util/Optional; e
	killingBlow ()Ljava/util/Optional; f
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	player ()Ljava/util/Optional; a
	playerKilledEntity ()Lnet/minecraft/advancements/Criterion; b
	playerKilledEntity (Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; a
	playerKilledEntity (Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; a
	playerKilledEntity (Ljava/util/Optional;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	playerKilledEntityNearSculkCatalyst ()Lnet/minecraft/advancements/Criterion; c
	validate (Lnet/minecraft/advancements/critereon/CriterionValidator;)V a
net/minecraft/advancements/critereon/LevitationTrigger ce
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;I)V a
net/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance ce$a
	CODEC a
	distance c
	duration d
	player b
	distance ()Ljava/util/Optional; b
	duration ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; c
	levitated (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/Criterion; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;I)Z a
	player ()Ljava/util/Optional; a
net/minecraft/advancements/critereon/LightPredicate cf
	CODEC a
	composite b
	composite ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/advancements/critereon/LightPredicate$Builder cf$a
	composite a
	build ()Lnet/minecraft/advancements/critereon/LightPredicate; b
	light ()Lnet/minecraft/advancements/critereon/LightPredicate$Builder; a
	setComposite (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/LightPredicate$Builder; a
net/minecraft/advancements/critereon/LightningBoltPredicate cg
	CODEC b
	blocksSetOnFire c
	entityStruck d
	blockSetOnFire (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/LightningBoltPredicate; a
	blocksSetOnFire ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; b
	entityStruck ()Ljava/util/Optional; c
	matches (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	type ()Lnet/minecraft/advancements/critereon/EntitySubPredicate$Type; a
net/minecraft/advancements/critereon/LightningStrikeTrigger ch
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/LightningBolt;Ljava/util/List;)V a
net/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance ch$a
	CODEC a
	bystander d
	lightning c
	player b
	bystander ()Ljava/util/Optional; c
	lightning ()Ljava/util/Optional; b
	lightningStrike (Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/List;)Z a
	player ()Ljava/util/Optional; a
	validate (Lnet/minecraft/advancements/critereon/CriterionValidator;)V a
net/minecraft/advancements/critereon/LocationPredicate ci
	CODEC a
	biome c
	block h
	dimension e
	fluid i
	light g
	position b
	smokey f
	structure d
	biome ()Ljava/util/Optional; b
	block ()Ljava/util/Optional; g
	dimension ()Ljava/util/Optional; d
	fluid ()Ljava/util/Optional; h
	light ()Ljava/util/Optional; f
	matches (Lnet/minecraft/server/level/ServerLevel;DDD)Z a
	of (Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Ljava/util/Optional; a
	position ()Ljava/util/Optional; a
	smokey ()Ljava/util/Optional; e
	structure ()Ljava/util/Optional; c
net/minecraft/advancements/critereon/LocationPredicate$Builder ci$a
	biome d
	block i
	dimension f
	fluid j
	light h
	smokey g
	structure e
	x a
	y b
	z c
	atYLocation (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/LocationPredicate; b
	inBiome (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	inDimension (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; b
	inStructure (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; c
	location ()Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setBiome (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; d
	setBlock (Lnet/minecraft/advancements/critereon/BlockPredicate$Builder;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setDimension (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; f
	setFluid (Lnet/minecraft/advancements/critereon/FluidPredicate$Builder;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setLight (Lnet/minecraft/advancements/critereon/LightPredicate$Builder;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setSmokey (Z)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setStructure (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; e
	setX (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; b
	setY (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; c
	setZ (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; d
net/minecraft/advancements/critereon/LocationPredicate$PositionPredicate ci$b
	CODEC a
	x b
	y c
	z d
	matches (DDD)Z a
	of (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Ljava/util/Optional; a
	x ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	y ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; b
	z ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; c
net/minecraft/advancements/critereon/LootTableTrigger cj
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/resources/ResourceLocation;)V a
net/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance cj$a
	CODEC a
	lootTable c
	player b
	lootTable ()Lnet/minecraft/resources/ResourceLocation; b
	lootTableUsed (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Criterion; a
	matches (Lnet/minecraft/resources/ResourceLocation;)Z b
	player ()Ljava/util/Optional; a
net/minecraft/advancements/critereon/MinMaxBounds ck
	ERROR_EMPTY a
	ERROR_SWAPPED b
	createCodec (Lcom/mojang/serialization/Codec;Lnet/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory;)Lcom/mojang/serialization/Codec; a
	fromReader (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds; a
	isAllowedInputChat (Lcom/mojang/brigadier/StringReader;)Z a
	isAny ()Z c
	max ()Ljava/util/Optional; b
	min ()Ljava/util/Optional; a
	readNumber (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/util/Optional; a
	unwrapPoint ()Ljava/util/Optional; d
net/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory ck$a
net/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory ck$b
net/minecraft/advancements/critereon/MinMaxBounds$Doubles ck$c
	ANY c
	CODEC d
	max f
	maxSq h
	min e
	minSq g
	atLeast (D)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; b
	atMost (D)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; c
	between (DD)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	create (Lcom/mojang/brigadier/StringReader;Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	exactly (D)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	fromReader (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	fromReader (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	matches (D)Z d
	matchesSqr (D)Z e
	max ()Ljava/util/Optional; b
	maxSq ()Ljava/util/Optional; f
	min ()Ljava/util/Optional; a
	minSq ()Ljava/util/Optional; e
	squareOpt (Ljava/util/Optional;)Ljava/util/Optional; a
net/minecraft/advancements/critereon/MinMaxBounds$Ints ck$d
	ANY c
	CODEC d
	max f
	maxSq h
	min e
	minSq g
	atLeast (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; b
	atMost (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; c
	between (II)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	create (Lcom/mojang/brigadier/StringReader;Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	exactly (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	fromReader (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	fromReader (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	matches (I)Z d
	matchesSqr (J)Z a
	max ()Ljava/util/Optional; b
	maxSq ()Ljava/util/Optional; f
	min ()Ljava/util/Optional; a
	minSq ()Ljava/util/Optional; e
	squareOpt (Ljava/util/Optional;)Ljava/util/Optional; a
net/minecraft/advancements/critereon/MobEffectsPredicate cl
	CODEC a
	effectMap b
	effectMap ()Ljava/util/Map; a
	matches (Ljava/util/Map;)Z a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/advancements/critereon/MobEffectsPredicate$Builder cl$a
	effectMap a
	and (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate$Builder; a
	and (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate$Builder; a
	build ()Ljava/util/Optional; b
	effects ()Lnet/minecraft/advancements/critereon/MobEffectsPredicate$Builder; a
net/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate cl$b
	CODEC a
	ambient d
	amplifier b
	duration c
	visible e
	ambient ()Ljava/util/Optional; c
	amplifier ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	duration ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; b
	matches (Lnet/minecraft/world/effect/MobEffectInstance;)Z a
	visible ()Ljava/util/Optional; d
net/minecraft/advancements/critereon/NbtPredicate cm
	CODEC a
	tag b
	getEntityTagToCompare (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/nbt/CompoundTag; b
	matches (Lnet/minecraft/nbt/Tag;)Z a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	tag ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/advancements/critereon/PickedUpItemTrigger cn
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/PickedUpItemTrigger$TriggerInstance cn$a
	CODEC a
	entity d
	item c
	player b
	entity ()Ljava/util/Optional; c
	item ()Ljava/util/Optional; b
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	player ()Ljava/util/Optional; a
	thrownItemPickedUpByEntity (Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; a
	thrownItemPickedUpByPlayer (Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; a
	validate (Lnet/minecraft/advancements/critereon/CriterionValidator;)V a
net/minecraft/advancements/critereon/PlayerHurtEntityTrigger co
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;FFZ)V a
net/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance co$a
	CODEC a
	damage c
	entity d
	player b
	damage ()Ljava/util/Optional; c
	entity ()Ljava/util/Optional; d
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	player ()Ljava/util/Optional; a
	playerHurtEntity ()Lnet/minecraft/advancements/Criterion; b
	playerHurtEntity (Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; b
	playerHurtEntity (Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; a
	playerHurtEntityWithDamage (Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; a
	playerHurtEntityWithDamage (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	validate (Lnet/minecraft/advancements/critereon/CriterionValidator;)V a
net/minecraft/advancements/critereon/PlayerInteractTrigger cp
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance cp$a
	CODEC a
	entity d
	item c
	player b
	entity ()Ljava/util/Optional; c
	item ()Ljava/util/Optional; b
	itemUsedOnEntity (Ljava/util/Optional;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; a
	itemUsedOnEntity (Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; a
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	player ()Ljava/util/Optional; a
	validate (Lnet/minecraft/advancements/critereon/CriterionValidator;)V a
net/minecraft/advancements/critereon/PlayerPredicate cq
	CODEC c
	LOOKING_AT_RANGE b
	advancements h
	gameType e
	level d
	lookingAt i
	recipes g
	stats f
	advancements ()Ljava/util/Map; f
	gameType ()Ljava/util/Optional; c
	level ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; b
	lookingAt ()Ljava/util/Optional; g
	matches (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	recipes ()Lit/unimi/dsi/fastutil/objects/Object2BooleanMap; e
	stats ()Ljava/util/List; d
	type ()Lnet/minecraft/advancements/critereon/EntitySubPredicate$Type; a
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementCriterionsPredicate cq$a
	CODEC a
	criterions c
	criterions ()Lit/unimi/dsi/fastutil/objects/Object2BooleanMap; a
	test (Lnet/minecraft/advancements/AdvancementProgress;)Z a
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementDonePredicate cq$b
	CODEC a
	state c
	state ()Z a
	test (Lnet/minecraft/advancements/AdvancementProgress;)Z a
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate cq$c
	CODEC b
net/minecraft/advancements/critereon/PlayerPredicate$Builder cq$d
	advancements e
	gameType b
	level a
	lookingAt f
	recipes d
	stats c
	addRecipe (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	addStat (Lnet/minecraft/stats/StatType;Lnet/minecraft/core/Holder$Reference;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/PlayerPredicate; b
	checkAdvancementCriterions (Lnet/minecraft/resources/ResourceLocation;Ljava/util/Map;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	checkAdvancementDone (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; b
	player ()Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	setGameType (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	setLevel (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	setLookingAt (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
net/minecraft/advancements/critereon/PlayerPredicate$StatMatcher cq$e
	CODEC a
	range d
	stat e
	type b
	value c
	createTypedCodec (Lnet/minecraft/stats/StatType;)Lcom/mojang/serialization/Codec; a
	matches (Lnet/minecraft/stats/StatsCounter;)Z a
	range ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; c
	stat ()Ljava/util/function/Supplier; d
	type ()Lnet/minecraft/stats/StatType; a
	value ()Lnet/minecraft/core/Holder; b
net/minecraft/advancements/critereon/PlayerTrigger cr
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance cr$a
	CODEC a
	player b
	avoidVibration ()Lnet/minecraft/advancements/Criterion; d
	located (Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; a
	located (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	located (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	player ()Ljava/util/Optional; a
	raidWon ()Lnet/minecraft/advancements/Criterion; c
	sleptInBed ()Lnet/minecraft/advancements/Criterion; b
	tick ()Lnet/minecraft/advancements/Criterion; e
	walkOnBlockWithEquipment (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/advancements/Criterion; a
net/minecraft/advancements/critereon/RecipeCraftedTrigger cs
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/resources/ResourceLocation;Ljava/util/List;)V a
net/minecraft/advancements/critereon/RecipeCraftedTrigger$TriggerInstance cs$a
	CODEC a
	ingredients d
	player b
	recipeId c
	craftedItem (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Criterion; a
	craftedItem (Lnet/minecraft/resources/ResourceLocation;Ljava/util/List;)Lnet/minecraft/advancements/Criterion; a
	ingredients ()Ljava/util/List; c
	matches (Lnet/minecraft/resources/ResourceLocation;Ljava/util/List;)Z b
	player ()Ljava/util/Optional; a
	recipeId ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/advancements/critereon/RecipeUnlockedTrigger ct
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/RecipeHolder;)V a
	unlocked (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Criterion; a
net/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance ct$a
	CODEC a
	player b
	recipe c
	matches (Lnet/minecraft/world/item/crafting/RecipeHolder;)Z a
	player ()Ljava/util/Optional; a
	recipe ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/advancements/critereon/ShotCrossbowTrigger cu
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance cu$a
	CODEC a
	item c
	player b
	item ()Ljava/util/Optional; b
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	player ()Ljava/util/Optional; a
	shotCrossbow (Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; a
	shotCrossbow (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/Criterion; a
net/minecraft/advancements/critereon/SimpleCriterionTrigger cv
	players a
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/function/Predicate;)V a
net/minecraft/advancements/critereon/SimpleCriterionTrigger$SimpleInstance cv$a
	player ()Ljava/util/Optional; a
	validate (Lnet/minecraft/advancements/critereon/CriterionValidator;)V a
net/minecraft/advancements/critereon/SlideDownBlockTrigger cw
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance cw$a
	CODEC a
	block c
	player b
	state d
	block ()Ljava/util/Optional; b
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	player ()Ljava/util/Optional; a
	slidesDownBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/Criterion; a
	state ()Ljava/util/Optional; c
	validate (Lnet/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance;)Lcom/mojang/serialization/DataResult; a
net/minecraft/advancements/critereon/SlimePredicate cx
	CODEC b
	size c
	matches (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	size ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; b
	sized (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/SlimePredicate; a
	type ()Lnet/minecraft/advancements/critereon/EntitySubPredicate$Type; a
net/minecraft/advancements/critereon/StartRidingTrigger cy
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance cy$a
	CODEC a
	player b
	player ()Ljava/util/Optional; a
	playerStartsRiding (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
net/minecraft/advancements/critereon/StatePropertiesPredicate cz
	CODEC a
	PROPERTIES_CODEC c
	properties b
	checkState (Lnet/minecraft/world/level/block/state/StateDefinition;)Ljava/util/Optional; a
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	matches (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/StateHolder;)Z a
	matches (Lnet/minecraft/world/level/material/FluidState;)Z a
	properties ()Ljava/util/List; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$Builder cz$a
	matchers a
	build ()Ljava/util/Optional; b
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;I)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Z)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	properties ()Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$ExactMatcher cz$b
	CODEC a
	value c
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	value ()Ljava/lang/String; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher cz$c
	name a
	valueMatcher b
	checkState (Lnet/minecraft/world/level/block/state/StateDefinition;)Ljava/util/Optional; a
	match (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/StateHolder;)Z a
	name ()Ljava/lang/String; a
	valueMatcher ()Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$ValueMatcher; b
net/minecraft/advancements/critereon/StatePropertiesPredicate$RangedMatcher cz$d
	CODEC a
	maxValue d
	minValue c
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	maxValue ()Ljava/util/Optional; b
	minValue ()Ljava/util/Optional; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$ValueMatcher cz$e
	CODEC b
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
net/minecraft/advancements/critereon/SummonedEntityTrigger da
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance da$a
	CODEC a
	entity c
	player b
	entity ()Ljava/util/Optional; b
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	player ()Ljava/util/Optional; a
	summonedEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	validate (Lnet/minecraft/advancements/critereon/CriterionValidator;)V a
net/minecraft/advancements/critereon/TagPredicate db
	expected b
	tag a
	codec (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; a
	expected ()Z b
	is (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/TagPredicate; a
	isNot (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/TagPredicate; b
	matches (Lnet/minecraft/core/Holder;)Z a
	tag ()Lnet/minecraft/tags/TagKey; a
net/minecraft/advancements/critereon/TameAnimalTrigger dc
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/animal/Animal;)V a
net/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance dc$a
	CODEC a
	entity c
	player b
	entity ()Ljava/util/Optional; c
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	player ()Ljava/util/Optional; a
	tamedAnimal ()Lnet/minecraft/advancements/Criterion; b
	tamedAnimal (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	validate (Lnet/minecraft/advancements/critereon/CriterionValidator;)V a
net/minecraft/advancements/critereon/TargetBlockTrigger dd
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;I)V a
net/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance dd$a
	CODEC a
	player b
	projectile d
	signalStrength c
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/phys/Vec3;I)Z a
	player ()Ljava/util/Optional; a
	projectile ()Ljava/util/Optional; c
	signalStrength ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; b
	targetHit (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; a
	validate (Lnet/minecraft/advancements/critereon/CriterionValidator;)V a
net/minecraft/advancements/critereon/TradeTrigger de
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/npc/AbstractVillager;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance de$a
	CODEC a
	item d
	player b
	villager c
	item ()Ljava/util/Optional; d
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/item/ItemStack;)Z a
	player ()Ljava/util/Optional; a
	tradedWithVillager ()Lnet/minecraft/advancements/Criterion; b
	tradedWithVillager (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	validate (Lnet/minecraft/advancements/critereon/CriterionValidator;)V a
	villager ()Ljava/util/Optional; c
net/minecraft/advancements/critereon/UsedEnderEyeTrigger df
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance df$a
	CODEC a
	distance c
	player b
	distance ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; b
	matches (D)Z a
	player ()Ljava/util/Optional; a
net/minecraft/advancements/critereon/UsedTotemTrigger dg
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance dg$a
	CODEC a
	item c
	player b
	item ()Ljava/util/Optional; b
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	player ()Ljava/util/Optional; a
	usedTotem (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/Criterion; a
	usedTotem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/Criterion; a
net/minecraft/advancements/critereon/UsingItemTrigger dh
	codec ()Lcom/mojang/serialization/Codec; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance dh$a
	CODEC a
	item c
	player b
	item ()Ljava/util/Optional; b
	lookingAt (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	player ()Ljava/util/Optional; a
net/minecraft/advancements/critereon/WrappedMinMaxBounds di
	ANY a
	ERROR_INTS_ONLY b
	max d
	min c
	atLeast (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; b
	atMost (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; c
	between (FF)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	exactly (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromReader (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromReader (Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	isAllowedNumber (Lcom/mojang/brigadier/StringReader;Z)Z c
	matches (F)Z d
	matchesSqr (D)Z a
	max ()Ljava/lang/Float; c
	min ()Ljava/lang/Float; b
	optionallyFormat (Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float; a
	readNumber (Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float; b
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/client/AttackIndicatorStatus eus
	$VALUES g
	BY_ID d
	CROSSHAIR b
	HOTBAR c
	OFF a
	id e
	key f
	$values ()[Lnet/minecraft/client/AttackIndicatorStatus; c
	byId (I)Lnet/minecraft/client/AttackIndicatorStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/Camera eut
	FOG_DISTANCE_SCALE a
	blockPosition f
	detached m
	entity d
	eyeHeight n
	eyeHeightOld o
	forwards g
	initialized b
	left i
	level c
	partialTickTime p
	position e
	rotation l
	up h
	xRot j
	yRot k
	getBlockPosition ()Lnet/minecraft/core/BlockPos; c
	getEntity ()Lnet/minecraft/world/entity/Entity; g
	getFluidInCamera ()Lnet/minecraft/world/level/material/FogType; k
	getLeftVector ()Lorg/joml/Vector3f; n
	getLookVector ()Lorg/joml/Vector3f; l
	getMaxZoom (D)D a
	getNearPlane ()Lnet/minecraft/client/Camera$NearPlane; j
	getPartialTickTime ()F p
	getPosition ()Lnet/minecraft/world/phys/Vec3; b
	getUpVector ()Lorg/joml/Vector3f; m
	getXRot ()F d
	getYRot ()F e
	isDetached ()Z i
	isInitialized ()Z h
	move (DDD)V a
	reset ()V o
	rotation ()Lorg/joml/Quaternionf; f
	setPosition (DDD)V b
	setPosition (Lnet/minecraft/world/phys/Vec3;)V a
	setRotation (FF)V a
	setup (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;ZZF)V a
	tick ()V a
net/minecraft/client/Camera$NearPlane eut$a
	forward a
	left b
	up c
	getBottomLeft ()Lnet/minecraft/world/phys/Vec3; c
	getBottomRight ()Lnet/minecraft/world/phys/Vec3; d
	getPointOnPlane (FF)Lnet/minecraft/world/phys/Vec3; a
	getTopLeft ()Lnet/minecraft/world/phys/Vec3; a
	getTopRight ()Lnet/minecraft/world/phys/Vec3; b
net/minecraft/client/CameraType euu
	$VALUES g
	FIRST_PERSON a
	THIRD_PERSON_BACK b
	THIRD_PERSON_FRONT c
	VALUES d
	firstPerson e
	mirrored f
	$values ()[Lnet/minecraft/client/CameraType; d
	cycle ()Lnet/minecraft/client/CameraType; c
	isFirstPerson ()Z a
	isMirrored ()Z b
net/minecraft/client/ClientRecipeBook euv
	LOGGER c
	allCollections e
	collectionsByTab d
	categorizeAndGroupRecipes (Ljava/lang/Iterable;)Ljava/util/Map; a
	getCategory (Lnet/minecraft/world/item/crafting/RecipeHolder;)Lnet/minecraft/client/RecipeBookCategories; g
	getCollection (Lnet/minecraft/client/RecipeBookCategories;)Ljava/util/List; a
	getCollections ()Ljava/util/List; b
	setupCollections (Ljava/lang/Iterable;Lnet/minecraft/core/RegistryAccess;)V a
net/minecraft/client/CloudStatus euw
	$VALUES h
	CODEC d
	FANCY c
	FAST b
	OFF a
	id e
	key g
	legacyName f
	$values ()[Lnet/minecraft/client/CloudStatus; e
	getId ()I a
	getKey ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; c
net/minecraft/client/CommandHistory eux
	LOGGER a
	MAX_PERSISTED_COMMAND_HISTORY b
	PERSISTED_COMMANDS_FILE_NAME c
	commandsPath d
	lastCommands e
	addCommand (Ljava/lang/String;)V a
	history ()Ljava/util/Collection; a
	save ()V b
net/minecraft/client/ComponentCollector euy
	parts a
	append (Lnet/minecraft/network/chat/FormattedText;)V a
	getResult ()Lnet/minecraft/network/chat/FormattedText; a
	getResultOrEmpty ()Lnet/minecraft/network/chat/FormattedText; b
	reset ()V c
net/minecraft/client/DebugQueryHandler euz
	callback c
	connection a
	transactionId b
	handleResponse (ILnet/minecraft/nbt/CompoundTag;)Z a
	queryBlockEntityTag (Lnet/minecraft/core/BlockPos;Ljava/util/function/Consumer;)V a
	queryEntityTag (ILjava/util/function/Consumer;)V a
	startTransaction (Ljava/util/function/Consumer;)I a
net/minecraft/client/GameNarrator eva
	LOGGER b
	NO_TITLE a
	minecraft c
	narrator d
	checkStatus (Z)V a
	clear ()V b
	destroy ()V c
	getStatus ()Lnet/minecraft/client/NarratorStatus; d
	isActive ()Z a
	logNarratedMessage (Ljava/lang/String;)V b
	say (Lnet/minecraft/network/chat/Component;)V b
	sayChat (Lnet/minecraft/network/chat/Component;)V a
	sayNow (Ljava/lang/String;)V a
	sayNow (Lnet/minecraft/network/chat/Component;)V c
	updateNarratorStatus (Lnet/minecraft/client/NarratorStatus;)V a
net/minecraft/client/GameNarrator$NarratorInitException eva$a
net/minecraft/client/GraphicsStatus evb
	$VALUES g
	BY_ID d
	FABULOUS c
	FANCY b
	FAST a
	id e
	key f
	$values ()[Lnet/minecraft/client/GraphicsStatus; c
	byId (I)Lnet/minecraft/client/GraphicsStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/GuiMessage evc
	addedTime a
	content b
	signature c
	tag d
	addedTime ()I a
	content ()Lnet/minecraft/network/chat/Component; b
	signature ()Lnet/minecraft/network/chat/MessageSignature; c
	tag ()Lnet/minecraft/client/GuiMessageTag; d
net/minecraft/client/GuiMessage$Line evc$a
	addedTime a
	content b
	endOfEntry d
	tag c
	addedTime ()I a
	content ()Lnet/minecraft/util/FormattedCharSequence; b
	endOfEntry ()Z d
	tag ()Lnet/minecraft/client/GuiMessageTag; c
net/minecraft/client/GuiMessageTag evd
	CHAT_ERROR o
	CHAT_ERROR_TEXT i
	CHAT_MODIFIED_INDICATOR_COLOR k
	CHAT_MODIFIED_TEXT h
	CHAT_NOT_SECURE n
	CHAT_NOT_SECURE_INDICATOR_COLOR j
	CHAT_NOT_SECURE_TEXT g
	SYSTEM l
	SYSTEM_SINGLE_PLAYER m
	SYSTEM_TEXT e
	SYSTEM_TEXT_SINGLE_PLAYER f
	icon b
	indicatorColor a
	logTag d
	text c
	chatError ()Lnet/minecraft/client/GuiMessageTag; d
	chatModified (Ljava/lang/String;)Lnet/minecraft/client/GuiMessageTag; a
	chatNotSecure ()Lnet/minecraft/client/GuiMessageTag; c
	icon ()Lnet/minecraft/client/GuiMessageTag$Icon; f
	indicatorColor ()I e
	logTag ()Ljava/lang/String; h
	system ()Lnet/minecraft/client/GuiMessageTag; a
	systemSinglePlayer ()Lnet/minecraft/client/GuiMessageTag; b
	text ()Lnet/minecraft/network/chat/Component; g
net/minecraft/client/GuiMessageTag$Icon evd$a
	$VALUES e
	CHAT_MODIFIED a
	height d
	sprite b
	width c
	$values ()[Lnet/minecraft/client/GuiMessageTag$Icon; a
	draw (Lnet/minecraft/client/gui/GuiGraphics;II)V a
net/minecraft/client/HotbarManager eve
	LOGGER b
	NUM_HOTBAR_GROUPS a
	fixerUpper d
	hotbars e
	loaded f
	optionsFile c
	get (I)Lnet/minecraft/client/player/inventory/Hotbar; a
	load ()V b
	save ()V a
net/minecraft/client/InputType evf
	$VALUES e
	KEYBOARD_ARROW c
	KEYBOARD_TAB d
	MOUSE b
	NONE a
	$values ()[Lnet/minecraft/client/InputType; c
	isKeyboard ()Z b
	isMouse ()Z a
net/minecraft/client/KeyMapping evg
	ALL h
	CATEGORIES j
	CATEGORY_CREATIVE g
	CATEGORY_GAMEPLAY d
	CATEGORY_INTERFACE f
	CATEGORY_INVENTORY e
	CATEGORY_MISC b
	CATEGORY_MOVEMENT a
	CATEGORY_MULTIPLAYER c
	CATEGORY_SORT_ORDER k
	MAP i
	category n
	clickCount q
	defaultKey m
	isDown p
	key o
	name l
	click (Lcom/mojang/blaze3d/platform/InputConstants$Key;)V a
	compareTo (Lnet/minecraft/client/KeyMapping;)I a
	consumeClick ()Z g
	createNameSupplier (Ljava/lang/String;)Ljava/util/function/Supplier; a
	getCategory ()Ljava/lang/String; f
	getDefaultKey ()Lcom/mojang/blaze3d/platform/InputConstants$Key; i
	getName ()Ljava/lang/String; h
	getTranslatedKeyMessage ()Lnet/minecraft/network/chat/Component; k
	isDefault ()Z l
	isDown ()Z e
	isUnbound ()Z j
	matches (II)Z a
	matchesMouse (I)Z a
	release ()V n
	releaseAll ()V b
	resetMapping ()V d
	resetToggleKeys ()V c
	same (Lnet/minecraft/client/KeyMapping;)Z b
	saveString ()Ljava/lang/String; m
	set (Lcom/mojang/blaze3d/platform/InputConstants$Key;Z)V a
	setAll ()V a
	setDown (Z)V a
	setKey (Lcom/mojang/blaze3d/platform/InputConstants$Key;)V b
net/minecraft/client/KeyboardHandler evh
	DEBUG_CRASH_TIME a
	clipboardManager c
	debugCrashKeyReportedCount f
	debugCrashKeyReportedTime e
	debugCrashKeyTime d
	handledDebugKey g
	minecraft b
	charTyped (JII)V a
	copyCreateBlockCommand (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)V a
	copyCreateEntityCommand (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/nbt/CompoundTag;)V a
	copyRecreateCommand (ZZ)V a
	debugComponent (Lnet/minecraft/ChatFormatting;Lnet/minecraft/network/chat/Component;)V a
	debugFeedback (Ljava/lang/String;[Ljava/lang/Object;)V c
	debugFeedbackComponent (Lnet/minecraft/network/chat/Component;)V a
	debugFeedbackTranslated (Ljava/lang/String;[Ljava/lang/Object;)V a
	debugWarningTranslated (Ljava/lang/String;[Ljava/lang/Object;)V b
	getClipboard ()Ljava/lang/String; a
	handleChunkDebugKeys (I)Z a
	handleDebugKeys (I)Z b
	keyPress (JIIII)V a
	setClipboard (Ljava/lang/String;)V a
	setup (J)V a
	tick ()V b
net/minecraft/client/Minecraft evi
	ALT_FONT d
	DEFAULT_FONT b
	LOGGER F
	MAX_TICKS_PER_UPDATE G
	ON_OSX a
	REGIONAL_COMPLIANCIES H
	RESOURCE_RELOAD_INITIAL_TASK I
	SOCIAL_INTERACTIONS_NOT_AVAILABLE J
	UNIFORM_FONT c
	UPDATE_DRIVERS_ADVICE e
	allowsChat ah
	allowsMultiplayer ag
	authenticationService aw
	blockColors an
	blockEntityRenderDispatcher aK
	blockRenderer aC
	cameraEntity t
	canary K
	chatListener bu
	clientLevelTeardownInProgress aZ
	clientStartTimeMs bz
	clientTickCount bA
	commandHistory bw
	crosshairPickEntity u
	currentFrameProfile br
	debugPath bB
	debugRenderer k
	delayedCrash bc
	demo af
	directoryValidator bx
	downloadedPackSource ak
	entityModels aJ
	entityRenderDispatcher T
	fixerUpper O
	font h
	fontFilterFishy i
	fontManager as
	fps bd
	fpsPieProfiler bl
	fpsPieRenderTicks bk
	fpsPieResults bm
	fpsString z
	frameTimeNs be
	frames aX
	gameDirectory p
	gameLoadFinished by
	gameMode q
	gameRenderer j
	gameThread ba
	gpuUtilization bq
	gpuWarnlistManager au
	gui l
	guiSprites aF
	hitResult v
	hotbarManager Y
	instance E
	is64bit ae
	isLocalServer aR
	itemColors ao
	itemRenderer U
	keyboardHandler o
	languageManager am
	lastInputType Z
	lastNanoTime aV
	lastTime aW
	launchedVersion aa
	level r
	levelRenderer f
	levelSource ad
	mainRenderTarget ap
	metricsRecorder bn
	minecraftSessionService ax
	missTime w
	mobEffectTextures aE
	modelManager aB
	mouseHandler n
	musicManager ar
	narrator bt
	noRender x
	options m
	overlay aY
	paintingTextures aD
	particleEngine g
	pause aT
	pausePartialTick aU
	pendingConnection aQ
	pendingReload bh
	player s
	playerSocialManager aI
	profileFuture M
	profileKeyPairManager aM
	profiler bj
	progressListener X
	progressTasks bg
	proxy ac
	quickPlayLog aO
	realms32BitWarningStatus bs
	realmsDataFetcher aN
	regionalCompliancies av
	reloadStateTracker bo
	renderBuffers S
	reportingContext bv
	resourceManager ai
	resourcePackDirectory L
	resourcePackRepository al
	rightClickDelay aS
	running bb
	savedCpuDuration bp
	screen y
	searchRegistry V
	sectionPath B
	sectionVisibility C
	singleplayerServer aP
	skinManager aA
	smartCull D
	socialInteractionsToast bi
	soundManager aq
	splashManager at
	telemetryManager aL
	textureManager N
	timer R
	toast aG
	tutorial aH
	user W
	userApiService ay
	userPropertiesFuture az
	vanillaPackResources aj
	versionType ab
	virtualScreen P
	window Q
	windowActive bf
	wireframe A
	abortResourcePackRecovery ()V bf
	addCustomNbtData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	addInitialScreens (Ljava/util/List;)V a
	addResourcePackLoadFailToast (Lnet/minecraft/network/chat/Component;)V a
	allowsMultiplayer ()Z D
	allowsRealms ()Z E
	allowsTelemetry ()Z C
	archiveProfilingReport (Lnet/minecraft/SystemReport;Ljava/util/List;)Ljava/nio/file/Path; a
	buildInitialScreens (Lnet/minecraft/client/Minecraft$GameLoadCookie;)Ljava/lang/Runnable; c
	canValidateProfileKeys ()Z aU
	checkIs64Bit ()Z bh
	checkModStatus ()Lnet/minecraft/util/ModCheck; e
	clearClientLevel (Lnet/minecraft/client/gui/screens/Screen;)V c
	clearDownloadedResourcePacks ()V z
	clearResourcePacksOnError (Ljava/lang/Throwable;Lnet/minecraft/network/chat/Component;Lnet/minecraft/client/Minecraft$GameLoadCookie;)V a
	commandHistory ()Lnet/minecraft/client/CommandHistory; bb
	constructProfiler (ZLnet/minecraft/util/profiling/SingleTickProfiler;)Lnet/minecraft/util/profiling/ProfilerFiller; a
	continueAttack (Z)V e
	countryEqualsISO3 (Ljava/lang/Object;)Z b
	crash (Lnet/minecraft/client/Minecraft;Ljava/io/File;Lnet/minecraft/CrashReport;)V a
	createSearchTrees ()V bg
	createTitle ()Ljava/lang/String; be
	createUserApiService (Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Lnet/minecraft/client/main/GameConfig;)Lcom/mojang/authlib/minecraft/UserApiService; a
	createWorldOpenFlows ()Lnet/minecraft/client/gui/screens/worldselection/WorldOpenFlows; w
	cursorEntered ()V b
	debugClientMetricsCancel ()V bn
	debugClientMetricsStart (Ljava/util/function/Consumer;)Z a
	debugClientMetricsStop ()V bm
	debugFpsMeterKeyPress (I)V a
	delayCrash (Lnet/minecraft/CrashReport;)V a
	delayCrashRaw (Lnet/minecraft/CrashReport;)V b
	delayTextureReload ()Ljava/util/concurrent/CompletableFuture; P
	destroy ()V m
	directoryValidator ()Lnet/minecraft/world/level/validation/DirectoryValidator; bc
	disconnect ()V y
	disconnect (Lnet/minecraft/client/gui/screens/Screen;)V b
	doWorldLoad (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/server/WorldStem;Z)V a
	emergencySave ()V bl
	emergencySaveAndCrash (Lnet/minecraft/CrashReport;)V c
	extraTelemetryAvailable ()Z B
	fillReport (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReport; d
	fillReport (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/resources/language/LanguageManager;Ljava/lang/String;Lnet/minecraft/client/Options;Lnet/minecraft/CrashReport;)V a
	fillSystemReport (Lnet/minecraft/SystemReport;Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/resources/language/LanguageManager;Ljava/lang/String;Lnet/minecraft/client/Options;)Lnet/minecraft/SystemReport; a
	fillUptime (Lnet/minecraft/CrashReportCategory;)V a
	finishProfilers (ZLnet/minecraft/util/profiling/SingleTickProfiler;)V b
	forceSetScreen (Lnet/minecraft/client/gui/screens/Screen;)V d
	formatSeconds (D)Ljava/lang/String; a
	getBlockColors ()Lnet/minecraft/client/color/block/BlockColors; au
	getBlockEntityRenderDispatcher ()Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher; ap
	getBlockRenderer ()Lnet/minecraft/client/renderer/block/BlockRenderDispatcher; an
	getCameraEntity ()Lnet/minecraft/world/entity/Entity; am
	getChatListener ()Lnet/minecraft/client/multiplayer/chat/ChatListener; aX
	getChatStatus ()Lnet/minecraft/client/Minecraft$ChatStatus; H
	getConnection ()Lnet/minecraft/client/multiplayer/ClientPacketListener; J
	getCurrentServer ()Lnet/minecraft/client/multiplayer/ServerData; Q
	getDebugOverlay ()Lnet/minecraft/client/gui/components/DebugScreenOverlay; aN
	getDeltaFrameTime ()F at
	getDownloadedPackSource ()Lnet/minecraft/client/resources/server/DownloadedPackSource; ac
	getEntityModels ()Lnet/minecraft/client/model/geom/EntityModelSet; aP
	getEntityRenderDispatcher ()Lnet/minecraft/client/renderer/entity/EntityRenderDispatcher; ao
	getFixerUpper ()Lcom/mojang/datafixers/DataFixer; ar
	getFps ()I n
	getFrameTime ()F as
	getFrameTimeNs ()J o
	getFramerateLimit ()I bk
	getGameProfile ()Lcom/mojang/authlib/GameProfile; W
	getGpuUtilization ()D u
	getGpuWarnlistManager ()Lnet/minecraft/client/renderer/GpuWarnlistManager; ah
	getGuiSprites ()Lnet/minecraft/client/gui/GuiSpriteManager; aF
	getHotbarManager ()Lnet/minecraft/client/HotbarManager; aB
	getInstance ()Lnet/minecraft/client/Minecraft; O
	getItemRenderer ()Lnet/minecraft/client/renderer/entity/ItemRenderer; aq
	getLanguageManager ()Lnet/minecraft/client/resources/language/LanguageManager; ae
	getLastInputType ()Lnet/minecraft/client/InputType; aV
	getLaunchedVersion ()Ljava/lang/String; h
	getLauncherBrand ()Ljava/lang/String; bd
	getLevelSource ()Lnet/minecraft/world/level/storage/LevelStorageSource; l
	getMainRenderTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; g
	getMinecraftSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; ak
	getMobEffectTextures ()Lnet/minecraft/client/resources/MobEffectTextureManager; aE
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; aC
	getMusicManager ()Lnet/minecraft/client/sounds/MusicManager; r
	getNarrator ()Lnet/minecraft/client/GameNarrator; aW
	getOverlay ()Lnet/minecraft/client/gui/screens/Overlay; aJ
	getPaintingTextures ()Lnet/minecraft/client/resources/PaintingTextureManager; aD
	getPlayerSocialManager ()Lnet/minecraft/client/gui/screens/social/PlayerSocialManager; aK
	getProfileKeyPairManager ()Lnet/minecraft/client/multiplayer/ProfileKeyPairManager; v
	getProfileKeySignatureValidator ()Lnet/minecraft/util/SignatureValidator; aT
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; aG
	getProgressListener ()Lnet/minecraft/server/level/progress/StoringChunkProgressListener; aH
	getProxy ()Ljava/net/Proxy; X
	getRealms32BitWarningStatus ()Lnet/minecraft/client/Realms32BitWarningStatus; aS
	getReportingContext ()Lnet/minecraft/client/multiplayer/chat/report/ReportingContext; aY
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; Z
	getResourcePackDirectory ()Ljava/nio/file/Path; ad
	getResourcePackRepository ()Lnet/minecraft/server/packs/repository/PackRepository; aa
	getRunningThread ()Ljava/lang/Thread; aw
	getSearchTree (Lnet/minecraft/client/searchtree/SearchRegistry$Key;)Lnet/minecraft/client/searchtree/SearchTree; a
	getSingleplayerServer ()Lnet/minecraft/client/server/IntegratedServer; T
	getSituationalMusic ()Lnet/minecraft/sounds/Music; aj
	getSkinManager ()Lnet/minecraft/client/resources/SkinManager; al
	getSoundManager ()Lnet/minecraft/client/sounds/SoundManager; ai
	getSplashManager ()Lnet/minecraft/client/resources/SplashManager; aI
	getTelemetryManager ()Lnet/minecraft/client/telemetry/ClientTelemetryManager; t
	getTextureAtlas (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/function/Function; a
	getTextureManager ()Lnet/minecraft/client/renderer/texture/TextureManager; Y
	getTickTargetMillis (F)F a
	getToasts ()Lnet/minecraft/client/gui/components/toasts/ToastComponent; ay
	getTutorial ()Lnet/minecraft/client/tutorial/Tutorial; az
	getUser ()Lnet/minecraft/client/User; V
	getVanillaPackResources ()Lnet/minecraft/server/packs/VanillaPackResources; ab
	getVersionType ()Ljava/lang/String; i
	getWindow ()Lcom/mojang/blaze3d/platform/Window; aM
	grabHugeScreenshot (Ljava/io/File;IIII)Lnet/minecraft/network/chat/Component; a
	grabPanoramixScreenshot (Ljava/io/File;II)Lnet/minecraft/network/chat/Component; a
	handleDelayedCrash ()V bi
	handleKeybinds ()V bz
	hasSingleplayerServer ()Z S
	is64Bit ()Z af
	isBlocked (Ljava/util/UUID;)Z a
	isDemo ()Z I
	isEnforceUnicode ()Z j
	isGameLoadFinished ()Z c
	isLocalPlayer (Ljava/util/UUID;)Z b
	isLocalServer ()Z R
	isMultiplayerServer ()Z by
	isNameBanned ()Z G
	isPaused ()Z ag
	isRunning ()Z q
	isSingleplayer ()Z U
	isTextFilteringEnabled ()Z aQ
	isWindowActive ()Z aA
	multiplayerBan ()Lcom/mojang/authlib/minecraft/BanDetails; F
	onFullscreenError (IJ)V a
	onGameLoadFinished (Lnet/minecraft/client/Minecraft$GameLoadCookie;)V b
	onResourceLoadFinished (Lnet/minecraft/client/Minecraft$GameLoadCookie;)V a
	openChatScreen (Ljava/lang/String;)V a
	pauseGame (Z)V c
	pickBlock ()V bB
	populateSearchTree (Lnet/minecraft/client/searchtree/SearchRegistry$Key;Ljava/util/List;)V a
	prepareForMultiplayer ()V aR
	quickPlayLog ()Lnet/minecraft/client/quickplay/QuickPlayLog; ba
	realmsDataFetcher ()Lcom/mojang/realmsclient/gui/RealmsDataFetcher; aZ
	reloadResourcePacks ()Ljava/util/concurrent/CompletableFuture; k
	reloadResourcePacks (ZLnet/minecraft/client/Minecraft$GameLoadCookie;)Ljava/util/concurrent/CompletableFuture; a
	renderBuffers ()Lnet/minecraft/client/renderer/RenderBuffers; aO
	renderFpsMeter (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/util/profiling/ProfileResults;)V a
	renderNames ()Z K
	renderOnThread ()Z aL
	resizeDisplay ()V a
	rollbackResourcePacks (Ljava/lang/Throwable;Lnet/minecraft/client/Minecraft$GameLoadCookie;)V a
	run ()V f
	runTick (Z)V d
	selectMainFont (Z)V b
	selfTest ()V bj
	setCameraEntity (Lnet/minecraft/world/entity/Entity;)V a
	setLastInputType (Lnet/minecraft/client/InputType;)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	setOverlay (Lnet/minecraft/client/gui/screens/Overlay;)V a
	setScreen (Lnet/minecraft/client/gui/screens/Screen;)V a
	setWindowActive (Z)V a
	shouldEntityAppearGlowing (Lnet/minecraft/world/entity/Entity;)Z b
	shouldRun (Ljava/lang/Runnable;)Z e
	showOnlyReducedInfo ()Z ax
	startAttack ()Z bo
	startUseItem ()V bx
	stop ()V p
	telemetryOptInExtra ()Z A
	tick ()V s
	updateLevelInEngines (Lnet/minecraft/client/multiplayer/ClientLevel;)V b
	updateMaxMipLevel (I)V b
	updateReportEnvironment (Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment;)V a
	updateScreenAndTick (Lnet/minecraft/client/gui/screens/Screen;)V e
	updateTitle ()V d
	useAmbientOcclusion ()Z N
	useFancyGraphics ()Z L
	useShaderTransparency ()Z M
	userProperties ()Lcom/mojang/authlib/minecraft/UserApiService$UserProperties; bA
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; f
net/minecraft/client/Minecraft$ChatStatus evi$a
	$VALUES g
	DISABLED_BY_LAUNCHER c
	DISABLED_BY_OPTIONS b
	DISABLED_BY_PROFILE d
	ENABLED a
	INFO_DISABLED_BY_PROFILE e
	message f
	$values ()[Lnet/minecraft/client/Minecraft$ChatStatus; b
	getMessage ()Lnet/minecraft/network/chat/Component; a
	isChatAllowed (Z)Z a
net/minecraft/client/Minecraft$GameLoadCookie evi$b
	quickPlayData b
	realmsClient a
	quickPlayData ()Lnet/minecraft/client/main/GameConfig$QuickPlayData; b
	realmsClient ()Lcom/mojang/realmsclient/client/RealmsClient; a
net/minecraft/client/MouseHandler evj
	accumulatedDX n
	accumulatedDY o
	accumulatedScrollX p
	accumulatedScrollY q
	activeButton h
	clickDepth j
	fakeRightMouse g
	ignoreFirstMove i
	isLeftPressed b
	isMiddlePressed c
	isRightPressed d
	lastMouseEventTime r
	minecraft a
	mouseGrabbed s
	mousePressedTime k
	smoothTurnX l
	smoothTurnY m
	xpos e
	ypos f
	cursorEntered ()V k
	grabMouse ()V i
	isLeftPressed ()Z b
	isMiddlePressed ()Z c
	isMouseGrabbed ()Z h
	isRightPressed ()Z d
	onDrop (JLjava/util/List;)V a
	onMove (JDD)V b
	onPress (JIII)V a
	onScroll (JDD)V a
	releaseMouse ()V j
	setIgnoreFirstMove ()V g
	setup (J)V a
	turnPlayer ()V a
	xpos ()D e
	ypos ()D f
net/minecraft/client/NarratorStatus evk
	$VALUES h
	ALL b
	BY_ID e
	CHAT c
	OFF a
	SYSTEM d
	id f
	name g
	$values ()[Lnet/minecraft/client/NarratorStatus; e
	byId (I)Lnet/minecraft/client/NarratorStatus; a
	getId ()I a
	getName ()Lnet/minecraft/network/chat/Component; b
	shouldNarrateChat ()Z c
	shouldNarrateSystem ()Z d
net/minecraft/client/OptionInstance evl
	BOOLEAN_TO_STRING b
	BOOLEAN_VALUES a
	LOGGER c
	caption j
	codec g
	initialValue h
	onValueUpdate i
	toString e
	tooltip d
	value k
	values f
	cachedConstantTooltip (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/OptionInstance$TooltipSupplier; a
	codec ()Lcom/mojang/serialization/Codec; d
	createBoolean (Ljava/lang/String;Lnet/minecraft/client/OptionInstance$TooltipSupplier;Lnet/minecraft/client/OptionInstance$CaptionBasedToString;ZLjava/util/function/Consumer;)Lnet/minecraft/client/OptionInstance; a
	createBoolean (Ljava/lang/String;Lnet/minecraft/client/OptionInstance$TooltipSupplier;Z)Lnet/minecraft/client/OptionInstance; a
	createBoolean (Ljava/lang/String;Lnet/minecraft/client/OptionInstance$TooltipSupplier;ZLjava/util/function/Consumer;)Lnet/minecraft/client/OptionInstance; a
	createBoolean (Ljava/lang/String;Z)Lnet/minecraft/client/OptionInstance; a
	createBoolean (Ljava/lang/String;ZLjava/util/function/Consumer;)Lnet/minecraft/client/OptionInstance; a
	createButton (Lnet/minecraft/client/Options;III)Lnet/minecraft/client/gui/components/AbstractWidget; a
	createButton (Lnet/minecraft/client/Options;IIILjava/util/function/Consumer;)Lnet/minecraft/client/gui/components/AbstractWidget; a
	forOptionEnum ()Lnet/minecraft/client/OptionInstance$CaptionBasedToString; b
	get ()Ljava/lang/Object; c
	noTooltip ()Lnet/minecraft/client/OptionInstance$TooltipSupplier; a
	set (Ljava/lang/Object;)V a
	values ()Lnet/minecraft/client/OptionInstance$ValueSet; e
net/minecraft/client/OptionInstance$AltEnum evl$a
	altCondition c
	altValues b
	codec e
	valueSetter d
	values a
	altCondition ()Ljava/util/function/BooleanSupplier; d
	altValues ()Ljava/util/List; c
	codec ()Lcom/mojang/serialization/Codec; f
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
	valueListSupplier ()Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	valueSetter ()Lnet/minecraft/client/OptionInstance$CycleableValueSet$ValueSetter; e
	values ()Ljava/util/List; b
net/minecraft/client/OptionInstance$CaptionBasedToString evl$b
net/minecraft/client/OptionInstance$ClampingLazyMaxIntRange evl$c
	encodableMaxInclusive c
	maxSupplier b
	minInclusive a
	codec ()Lcom/mojang/serialization/Codec; f
	createCycleButton ()Z c
	encodableMaxInclusive ()I h
	maxInclusive ()I b
	maxSupplier ()Ljava/util/function/IntSupplier; g
	minInclusive ()I d
	validateValue (Ljava/lang/Integer;)Ljava/util/Optional; a
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
	valueListSupplier ()Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
net/minecraft/client/OptionInstance$CycleableValueSet evl$d
	createButton (Lnet/minecraft/client/OptionInstance$TooltipSupplier;Lnet/minecraft/client/Options;IIILjava/util/function/Consumer;)Ljava/util/function/Function; a
	valueListSupplier ()Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	valueSetter ()Lnet/minecraft/client/OptionInstance$CycleableValueSet$ValueSetter; e
net/minecraft/client/OptionInstance$CycleableValueSet$ValueSetter evl$d$a
net/minecraft/client/OptionInstance$Enum evl$e
	codec b
	values a
	codec ()Lcom/mojang/serialization/Codec; f
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
	valueListSupplier ()Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	values ()Ljava/util/List; b
net/minecraft/client/OptionInstance$IntRange evl$f
	maxInclusive b
	minInclusive a
	codec ()Lcom/mojang/serialization/Codec; f
	maxInclusive ()I b
	minInclusive ()I d
	validateValue (Ljava/lang/Integer;)Ljava/util/Optional; a
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
net/minecraft/client/OptionInstance$IntRangeBase evl$g
	fromSliderValue (D)Ljava/lang/Integer; a
	fromSliderValue (D)Ljava/lang/Object; b
	maxInclusive ()I b
	minInclusive ()I d
	toSliderValue (Ljava/lang/Integer;)D b
	toSliderValue (Ljava/lang/Object;)D b
	xmap (Ljava/util/function/IntFunction;Ljava/util/function/ToIntFunction;)Lnet/minecraft/client/OptionInstance$SliderableValueSet; a
net/minecraft/client/OptionInstance$LazyEnum evl$h
	codec c
	validateValue b
	values a
	codec ()Lcom/mojang/serialization/Codec; f
	validateValue ()Ljava/util/function/Function; c
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
	valueListSupplier ()Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	values ()Ljava/util/function/Supplier; b
net/minecraft/client/OptionInstance$OptionInstanceSliderButton evl$i
	instance d
	onValueChanged m
	tooltipSupplier f
	values e
	applyValue ()V a
	updateMessage ()V b
net/minecraft/client/OptionInstance$SliderableOrCyclableValueSet evl$j
	createButton (Lnet/minecraft/client/OptionInstance$TooltipSupplier;Lnet/minecraft/client/Options;IIILjava/util/function/Consumer;)Ljava/util/function/Function; a
	createCycleButton ()Z c
net/minecraft/client/OptionInstance$SliderableValueSet evl$k
	createButton (Lnet/minecraft/client/OptionInstance$TooltipSupplier;Lnet/minecraft/client/Options;IIILjava/util/function/Consumer;)Ljava/util/function/Function; a
	fromSliderValue (D)Ljava/lang/Object; b
	toSliderValue (Ljava/lang/Object;)D b
net/minecraft/client/OptionInstance$TooltipSupplier evl$l
net/minecraft/client/OptionInstance$UnitDouble evl$m
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/client/OptionInstance$UnitDouble; a
	codec ()Lcom/mojang/serialization/Codec; f
	fromSliderValue (D)Ljava/lang/Double; a
	fromSliderValue (D)Ljava/lang/Object; b
	toSliderValue (Ljava/lang/Double;)D b
	toSliderValue (Ljava/lang/Object;)D b
	validateValue (Ljava/lang/Double;)Ljava/util/Optional; a
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
	xmap (Ljava/util/function/DoubleFunction;Ljava/util/function/ToDoubleFunction;)Lnet/minecraft/client/OptionInstance$SliderableValueSet; a
net/minecraft/client/OptionInstance$ValueSet evl$n
	codec ()Lcom/mojang/serialization/Codec; f
	createButton (Lnet/minecraft/client/OptionInstance$TooltipSupplier;Lnet/minecraft/client/Options;IIILjava/util/function/Consumer;)Ljava/util/function/Function; a
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
net/minecraft/client/Options evm
	ACCESSIBILITY_TOOLTIP_CONTRAST_MODE aM
	ACCESSIBILITY_TOOLTIP_DAMAGE_TILT_STRENGTH bZ
	ACCESSIBILITY_TOOLTIP_DARKNESS_EFFECT bT
	ACCESSIBILITY_TOOLTIP_DARK_MOJANG_BACKGROUND al
	ACCESSIBILITY_TOOLTIP_FOV_EFFECT bR
	ACCESSIBILITY_TOOLTIP_GLINT_SPEED bV
	ACCESSIBILITY_TOOLTIP_GLINT_STRENGTH bX
	ACCESSIBILITY_TOOLTIP_HIDE_LIGHTNING_FLASHES an
	ACCESSIBILITY_TOOLTIP_HIDE_SPLASH_TEXTS ap
	ACCESSIBILITY_TOOLTIP_NOTIFICATION_DISPLAY_TIME aW
	ACCESSIBILITY_TOOLTIP_SCREEN_EFFECT bP
	ALLOW_SERVER_LISTING_TOOLTIP bp
	AUTO_GUI_SCALE ac
	CHAT_TOOLTIP_HIDE_MATCHED_NAMES bF
	CHAT_TOOLTIP_ONLY_SHOW_SECURE bI
	DEFAULT_SOUND_DEVICE g
	DEFAULT_VOLUME ak
	DIRECTIONAL_AUDIO_TOOLTIP_OFF bv
	DIRECTIONAL_AUDIO_TOOLTIP_ON bu
	GRAPHICS_TOOLTIP_FABULOUS az
	GRAPHICS_TOOLTIP_FANCY aA
	GRAPHICS_TOOLTIP_FAST ay
	GSON ah
	LIST_OF_STRINGS_TYPE ai
	LOGGER ag
	MAX_GUI_SCALE_INCLUSIVE cc
	MOVEMENT_HOLD bC
	MOVEMENT_TOGGLE bB
	OPTION_SPLITTER aj
	PRIORITIZE_CHUNK_TOOLTIP_NEARBY aF
	PRIORITIZE_CHUNK_TOOLTIP_NONE aD
	PRIORITIZE_CHUNK_TOOLTIP_PLAYER_AFFECTED aE
	RENDER_DISTANCE_EXTREME f
	RENDER_DISTANCE_FAR d
	RENDER_DISTANCE_NORMAL c
	RENDER_DISTANCE_REALLY_FAR e
	RENDER_DISTANCE_SHORT b
	RENDER_DISTANCE_TINY a
	TELEMETRY_TOOLTIP bN
	UNLIMITED_FRAMERATE_CUTOFF h
	advancedItemTooltips m
	allowServerListing bq
	ambientOcclusion aC
	attackIndicator aZ
	autoJump bd
	autoSuggestions bf
	backgroundForChatOnly bx
	biomeBlendRadius ba
	bobView bA
	cameraType bL
	chatColors bg
	chatDelay aV
	chatHeightFocused aU
	chatHeightUnfocused aT
	chatLineSpacing aJ
	chatLinks bh
	chatLinksPrompt bi
	chatOpacity aI
	chatScale aR
	chatVisibility aH
	chatWidth aS
	cloudStatus ax
	damageTiltStrength ca
	darkMojangStudiosBackground am
	darknessEffectScale bU
	directionalAudio bw
	discreteMouseScroll bn
	enableVsync bj
	entityDistanceScaling av
	entityShadows bk
	forceUnicodeFont bl
	fov bM
	fovEffectScale bS
	framerateLimit aw
	fullscreen bz
	fullscreenVideoModeString k
	gamma cb
	glDebugVerbosity u
	glintSpeed bW
	glintStrength bY
	graphicsMode aB
	guiScale cd
	hideBundleTutorial t
	hideGui Z
	hideLightningFlash ao
	hideMatchedNames bG
	hideServerAddress l
	hideSplashTexts aq
	highContrast aN
	incompatibleResourcePacks j
	invertYMouse bm
	joinedFirstServer s
	keyAdvancements T
	keyAttack I
	keyChat K
	keyCommand M
	keyDown z
	keyDrop G
	keyFullscreen R
	keyHotbarSlots U
	keyInventory E
	keyJump B
	keyLeft y
	keyLoadHotbarActivator W
	keyMappings X
	keyPickItem J
	keyPlayerList L
	keyRight A
	keySaveHotbarActivator V
	keyScreenshot O
	keyShift C
	keySmoothCamera Q
	keySocialInteractions N
	keySpectatorOutlines S
	keySprint D
	keySwapOffhand F
	keyTogglePerspective P
	keyUp x
	keyUse H
	languageCode ad
	lastMpIp aa
	mainHand aQ
	minecraft Y
	mipmapLevels aY
	modelParts aP
	mouseWheelSensitivity bb
	narrator cf
	narratorHotkey aO
	notificationDisplayTime aX
	onboardAccessibility ae
	onlyShowSecureChat bJ
	operatorItemsTab be
	optionsFile bK
	overrideHeight p
	overrideWidth o
	panoramaSpeed aL
	particles ce
	pauseOnLostFocus n
	prioritizeChunkUpdates aG
	rawMouseInput bc
	realmsNotifications bo
	reducedDebugInfo br
	renderDistance as
	resourcePacks i
	screenEffectScale bQ
	sensitivity ar
	serverRenderDistance au
	showAutosaveIndicator bH
	showSubtitles bt
	simulationDistance at
	skipMultiplayerWarning v
	skipRealms32bitWarning w
	smoothCamera ab
	soundDevice cg
	soundSourceVolumes bs
	syncWrites af
	telemetryOptInExtra bO
	textBackgroundOpacity aK
	toggleCrouch bD
	toggleSprint bE
	touchscreen by
	tutorialStep r
	useNativeTransport q
	allowServerListing ()Lnet/minecraft/client/OptionInstance; R
	ambientOcclusion ()Lnet/minecraft/client/OptionInstance; k
	attackIndicator ()Lnet/minecraft/client/OptionInstance; B
	autoJump ()Lnet/minecraft/client/OptionInstance; F
	autoSuggestions ()Lnet/minecraft/client/OptionInstance; H
	backgroundForChatOnly ()Lnet/minecraft/client/OptionInstance; V
	biomeBlendRadius ()Lnet/minecraft/client/OptionInstance; C
	bobView ()Lnet/minecraft/client/OptionInstance; Y
	broadcastOptions ()V au
	buildPlayerInformation ()Lnet/minecraft/server/level/ClientInformation; at
	chatColors ()Lnet/minecraft/client/OptionInstance; I
	chatDelay ()Lnet/minecraft/client/OptionInstance; y
	chatHeightFocused ()Lnet/minecraft/client/OptionInstance; x
	chatHeightUnfocused ()Lnet/minecraft/client/OptionInstance; w
	chatLineSpacing ()Lnet/minecraft/client/OptionInstance; o
	chatLinks ()Lnet/minecraft/client/OptionInstance; J
	chatLinksPrompt ()Lnet/minecraft/client/OptionInstance; K
	chatOpacity ()Lnet/minecraft/client/OptionInstance; n
	chatScale ()Lnet/minecraft/client/OptionInstance; u
	chatVisibility ()Lnet/minecraft/client/OptionInstance; m
	chatWidth ()Lnet/minecraft/client/OptionInstance; v
	cloudStatus ()Lnet/minecraft/client/OptionInstance; i
	createSoundSliderOptionInstance (Ljava/lang/String;Lnet/minecraft/sounds/SoundSource;)Lnet/minecraft/client/OptionInstance; a
	damageTiltStrength ()Lnet/minecraft/client/OptionInstance; al
	darkMojangStudiosBackground ()Lnet/minecraft/client/OptionInstance; a
	darknessEffectScale ()Lnet/minecraft/client/OptionInstance; ai
	dataFix (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	directionalAudio ()Lnet/minecraft/client/OptionInstance; U
	discreteMouseScroll ()Lnet/minecraft/client/OptionInstance; P
	dumpOptionsForReport ()Ljava/lang/String; az
	enableVsync ()Lnet/minecraft/client/OptionInstance; L
	entityDistanceScaling ()Lnet/minecraft/client/OptionInstance; g
	entityShadows ()Lnet/minecraft/client/OptionInstance; M
	forceUnicodeFont ()Lnet/minecraft/client/OptionInstance; N
	fov ()Lnet/minecraft/client/OptionInstance; ae
	fovEffectScale ()Lnet/minecraft/client/OptionInstance; ah
	framerateLimit ()Lnet/minecraft/client/OptionInstance; h
	fullscreen ()Lnet/minecraft/client/OptionInstance; X
	gamma ()Lnet/minecraft/client/OptionInstance; am
	genericValueLabel (Lnet/minecraft/network/chat/Component;I)Lnet/minecraft/network/chat/Component; a
	genericValueLabel (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	getBackgroundColor (F)I b
	getBackgroundColor (I)I a
	getBackgroundOpacity (F)F a
	getCameraType ()Lnet/minecraft/client/CameraType; ax
	getCloudsType ()Lnet/minecraft/client/CloudStatus; av
	getEffectiveRenderDistance ()I aA
	getFile ()Ljava/io/File; ay
	getSoundSourceOptionInstance (Lnet/minecraft/sounds/SoundSource;)Lnet/minecraft/client/OptionInstance; b
	getSoundSourceVolume (Lnet/minecraft/sounds/SoundSource;)F a
	glintSpeed ()Lnet/minecraft/client/OptionInstance; aj
	glintStrength ()Lnet/minecraft/client/OptionInstance; ak
	graphicsMode ()Lnet/minecraft/client/OptionInstance; j
	guiScale ()Lnet/minecraft/client/OptionInstance; an
	hideLightningFlash ()Lnet/minecraft/client/OptionInstance; b
	hideMatchedNames ()Lnet/minecraft/client/OptionInstance; ab
	hideSplashTexts ()Lnet/minecraft/client/OptionInstance; c
	highContrast ()Lnet/minecraft/client/OptionInstance; r
	invertYMouse ()Lnet/minecraft/client/OptionInstance; O
	isFalse (Ljava/lang/String;)Z b
	isModelPartEnabled (Lnet/minecraft/world/entity/player/PlayerModelPart;)Z a
	isTrue (Ljava/lang/String;)Z a
	load ()V ar
	loadSelectedResourcePacks (Lnet/minecraft/server/packs/repository/PackRepository;)V b
	logMouse (I)D c
	mainHand ()Lnet/minecraft/client/OptionInstance; t
	mipmapLevels ()Lnet/minecraft/client/OptionInstance; A
	mouseWheelSensitivity ()Lnet/minecraft/client/OptionInstance; D
	narrator ()Lnet/minecraft/client/OptionInstance; ap
	narratorHotkey ()Lnet/minecraft/client/OptionInstance; s
	notificationDisplayTime ()Lnet/minecraft/client/OptionInstance; z
	onlyShowSecureChat ()Lnet/minecraft/client/OptionInstance; ad
	operatorItemsTab ()Lnet/minecraft/client/OptionInstance; G
	panoramaSpeed ()Lnet/minecraft/client/OptionInstance; q
	particles ()Lnet/minecraft/client/OptionInstance; ao
	percentValueLabel (Lnet/minecraft/network/chat/Component;D)Lnet/minecraft/network/chat/Component; a
	pixelValueLabel (Lnet/minecraft/network/chat/Component;I)Lnet/minecraft/network/chat/Component; b
	prioritizeChunkUpdates ()Lnet/minecraft/client/OptionInstance; l
	processOptions (Lnet/minecraft/client/Options$FieldAccess;)V a
	rawMouseInput ()Lnet/minecraft/client/OptionInstance; E
	readListOfStrings (Ljava/lang/String;)Ljava/util/List; c
	realmsNotifications ()Lnet/minecraft/client/OptionInstance; Q
	reducedDebugInfo ()Lnet/minecraft/client/OptionInstance; S
	renderDistance ()Lnet/minecraft/client/OptionInstance; e
	save ()V as
	screenEffectScale ()Lnet/minecraft/client/OptionInstance; ag
	sensitivity ()Lnet/minecraft/client/OptionInstance; d
	setCameraType (Lnet/minecraft/client/CameraType;)V a
	setKey (Lnet/minecraft/client/KeyMapping;Lcom/mojang/blaze3d/platform/InputConstants$Key;)V a
	setModelPart (Lnet/minecraft/world/entity/player/PlayerModelPart;Z)V b
	setServerRenderDistance (I)V b
	showAutosaveIndicator ()Lnet/minecraft/client/OptionInstance; ac
	showSubtitles ()Lnet/minecraft/client/OptionInstance; T
	simulationDistance ()Lnet/minecraft/client/OptionInstance; f
	soundDevice ()Lnet/minecraft/client/OptionInstance; aq
	telemetryOptInExtra ()Lnet/minecraft/client/OptionInstance; af
	textBackgroundOpacity ()Lnet/minecraft/client/OptionInstance; p
	toggleCrouch ()Lnet/minecraft/client/OptionInstance; Z
	toggleModelPart (Lnet/minecraft/world/entity/player/PlayerModelPart;Z)V a
	toggleSprint ()Lnet/minecraft/client/OptionInstance; aa
	touchscreen ()Lnet/minecraft/client/OptionInstance; W
	unlogMouse (D)I a
	updateResourcePacks (Lnet/minecraft/server/packs/repository/PackRepository;)V a
	useNativeTransport ()Z aw
net/minecraft/client/Options$FieldAccess evm$a
	process (Ljava/lang/String;F)F a
	process (Ljava/lang/String;I)I a
	process (Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/lang/Object; a
	process (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	process (Ljava/lang/String;Lnet/minecraft/client/OptionInstance;)V a
	process (Ljava/lang/String;Z)Z a
net/minecraft/client/ParticleStatus evn
	$VALUES g
	ALL a
	BY_ID d
	DECREASED b
	MINIMAL c
	id e
	key f
	$values ()[Lnet/minecraft/client/ParticleStatus; c
	byId (I)Lnet/minecraft/client/ParticleStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/PeriodicNotificationManager evo
	CODEC a
	LOGGER b
	notificationTask f
	notifications c
	selector d
	timer e
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	calculateInitialDelay (Ljava/util/List;)J a
	calculateOptimalPeriod (Ljava/util/List;J)J a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/util/Map; a
	stopTimer ()V a
net/minecraft/client/PeriodicNotificationManager$Notification evo$a
	delay a
	message d
	period b
	title c
	delay ()J a
	message ()Ljava/lang/String; d
	period ()J b
	title ()Ljava/lang/String; c
net/minecraft/client/PeriodicNotificationManager$NotificationTask evo$b
	elapsed d
	minecraft a
	notifications b
	period c
	reset (Ljava/util/List;J)Lnet/minecraft/client/PeriodicNotificationManager$NotificationTask; a
net/minecraft/client/PrioritizeChunkUpdates evp
	$VALUES g
	BY_ID d
	NEARBY c
	NONE a
	PLAYER_AFFECTED b
	id e
	key f
	$values ()[Lnet/minecraft/client/PrioritizeChunkUpdates; c
	byId (I)Lnet/minecraft/client/PrioritizeChunkUpdates; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/Realms32BitWarningStatus evq
	LOGGER a
	minecraft b
	subscriptionCheck c
	warningScreenShown d
	checkForRealmsSubscription ()Ljava/lang/Boolean; a
	hasRealmsSubscription ()Z b
	showRealms32BitWarningIfNeeded (Lnet/minecraft/client/gui/screens/Screen;)V a
net/minecraft/client/RecipeBookCategories evr
	$VALUES y
	AGGREGATE_CATEGORIES w
	BLAST_FURNACE_BLOCKS k
	BLAST_FURNACE_CATEGORIES t
	BLAST_FURNACE_MISC l
	BLAST_FURNACE_SEARCH j
	CAMPFIRE q
	CRAFTING_BUILDING_BLOCKS b
	CRAFTING_CATEGORIES v
	CRAFTING_EQUIPMENT d
	CRAFTING_MISC e
	CRAFTING_REDSTONE c
	CRAFTING_SEARCH a
	FURNACE_BLOCKS h
	FURNACE_CATEGORIES u
	FURNACE_FOOD g
	FURNACE_MISC i
	FURNACE_SEARCH f
	SMITHING p
	SMOKER_CATEGORIES s
	SMOKER_FOOD n
	SMOKER_SEARCH m
	STONECUTTER o
	UNKNOWN r
	itemIcons x
	$values ()[Lnet/minecraft/client/RecipeBookCategories; b
	getCategories (Lnet/minecraft/world/inventory/RecipeBookType;)Ljava/util/List; a
	getIconItems ()Ljava/util/List; a
net/minecraft/client/ResourceLoadStateTracker evs
	LOGGER a
	reloadCount c
	reloadState b
	fillCrashReport (Lnet/minecraft/CrashReport;)V a
	finishReload ()V a
	startRecovery (Ljava/lang/Throwable;)V a
	startReload (Lnet/minecraft/client/ResourceLoadStateTracker$ReloadReason;Ljava/util/List;)V a
net/minecraft/client/ResourceLoadStateTracker$RecoveryInfo evs$a
	error a
	fillCrashInfo (Lnet/minecraft/CrashReportCategory;)V a
net/minecraft/client/ResourceLoadStateTracker$ReloadReason evs$b
	$VALUES e
	INITIAL a
	MANUAL b
	UNKNOWN c
	name d
	$values ()[Lnet/minecraft/client/ResourceLoadStateTracker$ReloadReason; a
net/minecraft/client/ResourceLoadStateTracker$ReloadState evs$c
	finished d
	packs b
	recoveryReloadInfo c
	reloadReason a
	fillCrashInfo (Lnet/minecraft/CrashReportCategory;)V a
net/minecraft/client/Screenshot evt
	LOGGER b
	SCREENSHOT_DIR a
	bytes e
	file h
	height g
	outputStream d
	rowHeight c
	width f
	_grab (Ljava/io/File;Ljava/lang/String;Lcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V b
	addRegion (Ljava/nio/ByteBuffer;IIII)V a
	close ()Ljava/io/File; b
	getFile (Ljava/io/File;)Ljava/io/File; a
	grab (Ljava/io/File;Lcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V a
	grab (Ljava/io/File;Ljava/lang/String;Lcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V a
	saveRow ()V a
	takeScreenshot (Lcom/mojang/blaze3d/pipeline/RenderTarget;)Lcom/mojang/blaze3d/platform/NativeImage; a
net/minecraft/client/StringSplitter evu
	widthProvider a
	componentStyleAtWidth (Lnet/minecraft/network/chat/FormattedText;I)Lnet/minecraft/network/chat/Style; a
	componentStyleAtWidth (Lnet/minecraft/util/FormattedCharSequence;I)Lnet/minecraft/network/chat/Style; a
	findLineBreak (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I f
	formattedHeadByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; e
	formattedIndexByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I d
	getWordPosition (Ljava/lang/String;IIZ)I a
	headByWidth (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
	plainHeadByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; b
	plainIndexAtWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I a
	plainTailByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; c
	splitLines (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/util/List; g
	splitLines (Ljava/lang/String;ILnet/minecraft/network/chat/Style;ZLnet/minecraft/client/StringSplitter$LinePosConsumer;)V a
	splitLines (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;)Ljava/util/List; b
	splitLines (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;Ljava/util/function/BiConsumer;)V a
	splitLines (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;Lnet/minecraft/network/chat/FormattedText;)Ljava/util/List; a
	stringWidth (Ljava/lang/String;)F a
	stringWidth (Lnet/minecraft/network/chat/FormattedText;)F a
	stringWidth (Lnet/minecraft/util/FormattedCharSequence;)F a
net/minecraft/client/StringSplitter$FlatComponents evu$a
	flatParts b
	parts a
	charAt (I)C a
	getRemainder ()Lnet/minecraft/network/chat/FormattedText; a
	splitAt (IILnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
net/minecraft/client/StringSplitter$LineBreakFinder evu$b
	hadNonZeroWidthChar e
	lastSpace g
	lastSpaceStyle h
	lineBreak c
	lineBreakStyle d
	maxWidth b
	nextChar i
	offset j
	width f
	addToOffset (I)V a
	finishIteration (ILnet/minecraft/network/chat/Style;)Z a
	getSplitPosition ()I a
	getSplitStyle ()Lnet/minecraft/network/chat/Style; b
	lineBreakFound ()Z c
net/minecraft/client/StringSplitter$LineComponent evu$c
	contents c
	style d
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/client/StringSplitter$LinePosConsumer evu$d
net/minecraft/client/StringSplitter$WidthLimitedCharSink evu$e
	maxWidth b
	position c
	getPosition ()I a
	resetPosition ()V b
net/minecraft/client/StringSplitter$WidthProvider evu$f
net/minecraft/client/Timer evv
	lastMs c
	msPerTick d
	partialTick a
	targetMsptProvider e
	tickDelta b
	advanceTime (J)I a
net/minecraft/client/ToggleKeyMapping evw
	needsToggle h
	reset ()V n
	setDown (Z)V a
net/minecraft/client/User evx
	accessToken c
	clientId e
	name a
	type f
	uuid b
	xuid d
	getAccessToken ()Ljava/lang/String; d
	getClientId ()Ljava/util/Optional; e
	getName ()Ljava/lang/String; c
	getProfileId ()Ljava/util/UUID; b
	getSessionId ()Ljava/lang/String; a
	getType ()Lnet/minecraft/client/User$Type; g
	getXuid ()Ljava/util/Optional; f
net/minecraft/client/User$Type evx$a
	$VALUES f
	BY_NAME d
	LEGACY a
	MOJANG b
	MSA c
	name e
	$values ()[Lnet/minecraft/client/User$Type; b
	byName (Ljava/lang/String;)Lnet/minecraft/client/User$Type; a
	getName ()Ljava/lang/String; a
net/minecraft/client/animation/AnimationChannel evy
	keyframes b
	target a
	keyframes ()[Lnet/minecraft/client/animation/Keyframe; b
	target ()Lnet/minecraft/client/animation/AnimationChannel$Target; a
net/minecraft/client/animation/AnimationChannel$Interpolation evy$a
net/minecraft/client/animation/AnimationChannel$Interpolations evy$b
	CATMULLROM b
	LINEAR a
net/minecraft/client/animation/AnimationChannel$Target evy$c
net/minecraft/client/animation/AnimationChannel$Targets evy$d
	POSITION a
	ROTATION b
	SCALE c
net/minecraft/client/animation/AnimationDefinition evz
	boneAnimations c
	lengthInSeconds a
	looping b
	boneAnimations ()Ljava/util/Map; c
	lengthInSeconds ()F a
	looping ()Z b
net/minecraft/client/animation/AnimationDefinition$Builder evz$a
	animationByBone b
	length a
	looping c
	addAnimation (Ljava/lang/String;Lnet/minecraft/client/animation/AnimationChannel;)Lnet/minecraft/client/animation/AnimationDefinition$Builder; a
	build ()Lnet/minecraft/client/animation/AnimationDefinition; b
	looping ()Lnet/minecraft/client/animation/AnimationDefinition$Builder; a
	withLength (F)Lnet/minecraft/client/animation/AnimationDefinition$Builder; a
net/minecraft/client/animation/Keyframe ewa
	interpolation c
	target b
	timestamp a
	interpolation ()Lnet/minecraft/client/animation/AnimationChannel$Interpolation; c
	target ()Lorg/joml/Vector3f; b
	timestamp ()F a
net/minecraft/client/animation/KeyframeAnimations ewb
	animate (Lnet/minecraft/client/model/HierarchicalModel;Lnet/minecraft/client/animation/AnimationDefinition;JFLorg/joml/Vector3f;)V a
	degreeVec (FFF)Lorg/joml/Vector3f; b
	getElapsedSeconds (Lnet/minecraft/client/animation/AnimationDefinition;J)F a
	posVec (FFF)Lorg/joml/Vector3f; a
	scaleVec (DDD)Lorg/joml/Vector3f; a
net/minecraft/client/animation/definitions/BatAnimation ewc
	BAT_FLYING b
	BAT_RESTING a
net/minecraft/client/animation/definitions/BreezeAnimation ewd
	JUMP b
	SHOOT a
	SLIDE c
net/minecraft/client/animation/definitions/CamelAnimation ewe
	CAMEL_DASH e
	CAMEL_IDLE f
	CAMEL_SIT b
	CAMEL_SIT_POSE c
	CAMEL_STANDUP d
	CAMEL_WALK a
net/minecraft/client/animation/definitions/FrogAnimation ewf
	FROG_CROAK a
	FROG_IDLE_WATER f
	FROG_JUMP c
	FROG_SWIM e
	FROG_TONGUE d
	FROG_WALK b
net/minecraft/client/animation/definitions/SnifferAnimation ewg
	BABY_TRANSFORM a
	SNIFFER_BABY_FALL h
	SNIFFER_DIG f
	SNIFFER_HAPPY i
	SNIFFER_LONGSNIFF c
	SNIFFER_SNIFFSNIFF b
	SNIFFER_SNIFF_SEARCH e
	SNIFFER_STAND_UP g
	SNIFFER_WALK d
net/minecraft/client/animation/definitions/WardenAnimation ewh
	WARDEN_ATTACK e
	WARDEN_DIG b
	WARDEN_EMERGE a
	WARDEN_ROAR c
	WARDEN_SNIFF d
	WARDEN_SONIC_BOOM f
net/minecraft/client/color/block/BlockColor ewk
net/minecraft/client/color/block/BlockColors ewl
	DEFAULT a
	blockColors b
	coloringStates c
	addColoringState (Lnet/minecraft/world/level/block/state/properties/Property;[Lnet/minecraft/world/level/block/Block;)V a
	addColoringStates (Ljava/util/Set;[Lnet/minecraft/world/level/block/Block;)V a
	createDefault ()Lnet/minecraft/client/color/block/BlockColors; a
	getColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;I)I a
	getColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getColoringProperties (Lnet/minecraft/world/level/block/Block;)Ljava/util/Set; a
	register (Lnet/minecraft/client/color/block/BlockColor;[Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/client/color/block/BlockTintCache ewm
	MAX_CACHE_ENTRIES a
	cache c
	latestChunkOnThread b
	lock d
	source e
	findOrCreateChunkCache (II)Lnet/minecraft/client/color/block/BlockTintCache$CacheData; b
	getColor (Lnet/minecraft/core/BlockPos;)I a
	invalidateAll ()V a
	invalidateForChunk (II)V a
net/minecraft/client/color/block/BlockTintCache$CacheData ewm$a
	BLOCKS_PER_LAYER c
	cache a
	invalidated d
	lock b
	allocateLayer ()[I c
	getLayer (I)[I a
	invalidate ()V b
	isInvalidated ()Z a
net/minecraft/client/color/block/BlockTintCache$LatestCacheInfo ewm$b
	cache c
	x a
	z b
net/minecraft/client/color/item/ItemColor ewo
net/minecraft/client/color/item/ItemColors ewp
	DEFAULT a
	itemColors b
	createDefault (Lnet/minecraft/client/color/block/BlockColors;)Lnet/minecraft/client/color/item/ItemColors; a
	getColor (Lnet/minecraft/world/item/ItemStack;I)I a
	register (Lnet/minecraft/client/color/item/ItemColor;[Lnet/minecraft/world/level/ItemLike;)V a
net/minecraft/client/gui/ComponentPath ewr
	applyFocus (Z)V a
	component ()Lnet/minecraft/client/gui/components/events/GuiEventListener; a
	leaf (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/ComponentPath; a
	path (Lnet/minecraft/client/gui/components/events/ContainerEventHandler;Lnet/minecraft/client/gui/ComponentPath;)Lnet/minecraft/client/gui/ComponentPath; a
	path (Lnet/minecraft/client/gui/components/events/GuiEventListener;[Lnet/minecraft/client/gui/components/events/ContainerEventHandler;)Lnet/minecraft/client/gui/ComponentPath; a
net/minecraft/client/gui/ComponentPath$Leaf ewr$a
	component a
	applyFocus (Z)V a
	component ()Lnet/minecraft/client/gui/components/events/GuiEventListener; a
net/minecraft/client/gui/ComponentPath$Path ewr$b
	childPath b
	component a
	applyFocus (Z)V a
	childPath ()Lnet/minecraft/client/gui/ComponentPath; c
	component ()Lnet/minecraft/client/gui/components/events/ContainerEventHandler; b
	component ()Lnet/minecraft/client/gui/components/events/GuiEventListener; a
net/minecraft/client/gui/Font ews
	ALPHA_CUTOFF a
	EFFECT_DEPTH d
	SHADOW_OFFSET e
	filterFishyGlyphs g
	fonts f
	lineHeight b
	random c
	splitter h
	adjustColor (I)I a
	bidirectionalShaping (Ljava/lang/String;)Ljava/lang/String; a
	drawInBatch (Ljava/lang/String;FFIZLorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/gui/Font$DisplayMode;II)I a
	drawInBatch (Ljava/lang/String;FFIZLorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/gui/Font$DisplayMode;IIZ)I a
	drawInBatch (Lnet/minecraft/network/chat/Component;FFIZLorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/gui/Font$DisplayMode;II)I a
	drawInBatch (Lnet/minecraft/util/FormattedCharSequence;FFIZLorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/gui/Font$DisplayMode;II)I a
	drawInBatch8xOutline (Lnet/minecraft/util/FormattedCharSequence;FFIILorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	drawInternal (Ljava/lang/String;FFIZLorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/gui/Font$DisplayMode;IIZ)I b
	drawInternal (Lnet/minecraft/util/FormattedCharSequence;FFIZLorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/gui/Font$DisplayMode;II)I b
	getFontSet (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/gui/font/FontSet; a
	getSplitter ()Lnet/minecraft/client/StringSplitter; b
	isBidirectional ()Z a
	plainSubstrByWidth (Ljava/lang/String;I)Ljava/lang/String; a
	plainSubstrByWidth (Ljava/lang/String;IZ)Ljava/lang/String; a
	renderChar (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph;ZZFFFLorg/joml/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
	renderText (Ljava/lang/String;FFIZLorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/gui/Font$DisplayMode;II)F b
	renderText (Lnet/minecraft/util/FormattedCharSequence;FFIZLorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/gui/Font$DisplayMode;II)F c
	split (Lnet/minecraft/network/chat/FormattedText;I)Ljava/util/List; c
	substrByWidth (Lnet/minecraft/network/chat/FormattedText;I)Lnet/minecraft/network/chat/FormattedText; a
	width (Ljava/lang/String;)I b
	width (Lnet/minecraft/network/chat/FormattedText;)I a
	width (Lnet/minecraft/util/FormattedCharSequence;)I a
	wordWrapHeight (Ljava/lang/String;I)I b
	wordWrapHeight (Lnet/minecraft/network/chat/FormattedText;I)I b
net/minecraft/client/gui/Font$DisplayMode ews$a
	$VALUES d
	NORMAL a
	POLYGON_OFFSET c
	SEE_THROUGH b
	$values ()[Lnet/minecraft/client/gui/Font$DisplayMode; a
net/minecraft/client/gui/Font$StringRenderOutput ews$b
	a h
	b g
	bufferSource a
	dimFactor d
	dropShadow c
	effects n
	g f
	mode j
	packedLightCoords k
	pose i
	r e
	x l
	y m
	addEffect (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph$Effect;)V a
	finish (IF)F a
net/minecraft/client/gui/Gui ewt
	AIR_BURSTING_SPRITE C
	AIR_SPRITE B
	ARMOR_EMPTY_SPRITE s
	ARMOR_FULL_SPRITE u
	ARMOR_HALF_SPRITE t
	AUTOSAVE_FADE_SPEED_FACTOR V
	COLOR_WHITE N
	CROSSHAIR_ATTACK_INDICATOR_BACKGROUND_SPRITE d
	CROSSHAIR_ATTACK_INDICATOR_FULL_SPRITE c
	CROSSHAIR_ATTACK_INDICATOR_PROGRESS_SPRITE e
	CROSSHAIR_SPRITE b
	DEMO_EXPIRED_TEXT L
	EFFECT_BACKGROUND_AMBIENT_SPRITE f
	EFFECT_BACKGROUND_SPRITE g
	EXPERIENCE_BAR_BACKGROUND_SPRITE q
	EXPERIENCE_BAR_PROGRESS_SPRITE r
	FOOD_EMPTY_HUNGER_SPRITE v
	FOOD_EMPTY_SPRITE y
	FOOD_FULL_HUNGER_SPRITE x
	FOOD_FULL_SPRITE A
	FOOD_HALF_HUNGER_SPRITE w
	FOOD_HALF_SPRITE z
	HEART_SEPARATION U
	HEART_SIZE T
	HEART_VEHICLE_CONTAINER_SPRITE D
	HEART_VEHICLE_FULL_SPRITE E
	HEART_VEHICLE_HALF_SPRITE F
	HOTBAR_ATTACK_INDICATOR_BACKGROUND_SPRITE l
	HOTBAR_ATTACK_INDICATOR_PROGRESS_SPRITE m
	HOTBAR_OFFHAND_LEFT_SPRITE j
	HOTBAR_OFFHAND_RIGHT_SPRITE k
	HOTBAR_SELECTION_SPRITE i
	HOTBAR_SPRITE h
	JUMP_BAR_BACKGROUND_SPRITE n
	JUMP_BAR_COOLDOWN_SPRITE o
	JUMP_BAR_PROGRESS_SPRITE p
	LINE_HEIGHT Q
	MIN_CROSSHAIR_ATTACK_SPEED O
	NUM_HEARTS_PER_ROW P
	PORTAL_OVERLAY_ALPHA_MIN S
	POWDER_SNOW_OUTLINE_LOCATION J
	PUMPKIN_BLUR_LOCATION H
	SAVING_TEXT M
	SCORE_DISPLAY_ORDER K
	SPACER R
	SPYGLASS_SCOPE_LOCATION I
	VIGNETTE_LOCATION G
	animateOverlayMessageColor ad
	autosaveIndicatorValue ay
	bossOverlay al
	chat Z
	chatDisabledByPlayerShown ae
	debugOverlay ah
	displayHealth at
	healthBlinkTime av
	itemRenderer Y
	lastAutosaveIndicatorValue az
	lastHealth as
	lastHealthTime au
	lastToolHighlight ag
	minecraft X
	overlayMessageString ab
	overlayMessageTime ac
	random W
	scopeScale aA
	screenHeight ax
	screenWidth aw
	spectatorGui aj
	subtitle ao
	subtitleOverlay ai
	tabList ak
	tickCount aa
	title an
	titleFadeInTime ap
	titleFadeOutTime ar
	titleStayTime aq
	titleTime am
	toolHighlightTimer af
	vignetteBrightness a
	canRenderCrosshairForSpectator (Lnet/minecraft/world/phys/HitResult;)Z a
	clear ()V c
	clearCache ()V l
	displayScoreboardSidebar (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/scores/Objective;)V a
	drawBackdrop (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;III)V a
	getBossOverlay ()Lnet/minecraft/client/gui/components/BossHealthOverlay; j
	getCameraPlayer ()Lnet/minecraft/world/entity/player/Player; m
	getChat ()Lnet/minecraft/client/gui/components/ChatComponent; d
	getDebugOverlay ()Lnet/minecraft/client/gui/components/DebugScreenOverlay; k
	getFont ()Lnet/minecraft/client/gui/Font; f
	getGuiTicks ()I e
	getPlayerVehicleWithHealth ()Lnet/minecraft/world/entity/LivingEntity; n
	getSpectatorGui ()Lnet/minecraft/client/gui/components/spectator/SpectatorGui; g
	getTabList ()Lnet/minecraft/client/gui/components/PlayerTabOverlay; h
	getVehicleMaxHearts (Lnet/minecraft/world/entity/LivingEntity;)I a
	getVisibleVehicleHeartRows (I)I a
	isShowingChatDisabledByPlayer ()Z b
	onDisconnected ()V i
	render (Lnet/minecraft/client/gui/GuiGraphics;F)V a
	renderCrosshair (Lnet/minecraft/client/gui/GuiGraphics;)V d
	renderDemoOverlay (Lnet/minecraft/client/gui/GuiGraphics;)V c
	renderEffects (Lnet/minecraft/client/gui/GuiGraphics;)V a
	renderExperienceBar (Lnet/minecraft/client/gui/GuiGraphics;I)V a
	renderHeart (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Gui$HeartType;IIZZZ)V a
	renderHearts (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/entity/player/Player;IIIIFIIIZ)V a
	renderHotbar (FLnet/minecraft/client/gui/GuiGraphics;)V a
	renderJumpMeter (Lnet/minecraft/world/entity/PlayerRideableJumping;Lnet/minecraft/client/gui/GuiGraphics;I)V a
	renderPlayerHealth (Lnet/minecraft/client/gui/GuiGraphics;)V e
	renderPortalOverlay (Lnet/minecraft/client/gui/GuiGraphics;F)V c
	renderSavingIndicator (Lnet/minecraft/client/gui/GuiGraphics;)V g
	renderSelectedItemName (Lnet/minecraft/client/gui/GuiGraphics;)V b
	renderSlot (Lnet/minecraft/client/gui/GuiGraphics;IIFLnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;I)V a
	renderSpyglassOverlay (Lnet/minecraft/client/gui/GuiGraphics;F)V b
	renderTextureOverlay (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/resources/ResourceLocation;F)V a
	renderVehicleHealth (Lnet/minecraft/client/gui/GuiGraphics;)V f
	renderVignette (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/entity/Entity;)V a
	resetTitleTimes ()V a
	setChatDisabledByPlayerShown (Z)V b
	setNowPlaying (Lnet/minecraft/network/chat/Component;)V a
	setOverlayMessage (Lnet/minecraft/network/chat/Component;Z)V a
	setSubtitle (Lnet/minecraft/network/chat/Component;)V b
	setTimes (III)V a
	setTitle (Lnet/minecraft/network/chat/Component;)V c
	tick ()V o
	tick (Z)V a
	tickAutosaveIndicator ()V p
	updateVignetteBrightness (Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/client/gui/Gui$HeartType ewt$b
	$VALUES o
	ABSORBING e
	CONTAINER a
	FROZEN f
	NORMAL b
	POISIONED c
	WITHERED d
	full g
	fullBlinking h
	half i
	halfBlinking j
	hardcoreFull k
	hardcoreFullBlinking l
	hardcoreHalf m
	hardcoreHalfBlinking n
	$values ()[Lnet/minecraft/client/gui/Gui$HeartType; a
	forPlayer (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/client/gui/Gui$HeartType; a
	getSprite (ZZZ)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/gui/GuiGraphics ewu
	EXTRA_SPACE_AFTER_FIRST_TOOLTIP_LINE c
	MAX_GUI_Z a
	MIN_GUI_Z b
	bufferSource f
	managed i
	minecraft d
	pose e
	scissorStack g
	sprites h
	applyScissor (Lnet/minecraft/client/gui/navigation/ScreenRectangle;)V a
	blit (IIIIILnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	blit (IIIIILnet/minecraft/client/renderer/texture/TextureAtlasSprite;FFFF)V a
	blit (Lnet/minecraft/resources/ResourceLocation;IIFFIIII)V a
	blit (Lnet/minecraft/resources/ResourceLocation;IIIFFIIII)V a
	blit (Lnet/minecraft/resources/ResourceLocation;IIIIFFIIII)V a
	blit (Lnet/minecraft/resources/ResourceLocation;IIIIII)V a
	blit (Lnet/minecraft/resources/ResourceLocation;IIIIIIIFFII)V a
	blitNineSlicedSprite (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/client/resources/metadata/gui/GuiSpriteScaling$NineSlice;IIIII)V a
	blitSprite (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;IIIII)V a
	blitSprite (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;IIIIIIIII)V a
	blitSprite (Lnet/minecraft/resources/ResourceLocation;IIII)V a
	blitSprite (Lnet/minecraft/resources/ResourceLocation;IIIII)V a
	blitSprite (Lnet/minecraft/resources/ResourceLocation;IIIIIIII)V a
	blitSprite (Lnet/minecraft/resources/ResourceLocation;IIIIIIIII)V a
	blitTiledSprite (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;IIIIIIIIIII)V a
	bufferSource ()Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; d
	disableScissor ()V f
	drawCenteredString (Lnet/minecraft/client/gui/Font;Ljava/lang/String;III)V a
	drawCenteredString (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;III)V a
	drawCenteredString (Lnet/minecraft/client/gui/Font;Lnet/minecraft/util/FormattedCharSequence;III)V a
	drawManaged (Ljava/lang/Runnable;)V a
	drawString (Lnet/minecraft/client/gui/Font;Ljava/lang/String;III)I b
	drawString (Lnet/minecraft/client/gui/Font;Ljava/lang/String;IIIZ)I a
	drawString (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;III)I b
	drawString (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;IIIZ)I a
	drawString (Lnet/minecraft/client/gui/Font;Lnet/minecraft/util/FormattedCharSequence;III)I b
	drawString (Lnet/minecraft/client/gui/Font;Lnet/minecraft/util/FormattedCharSequence;IIIZ)I a
	drawWordWrap (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/FormattedText;IIII)V a
	enableScissor (IIII)V c
	fill (IIIII)V a
	fill (IIIIII)V a
	fill (Lnet/minecraft/client/renderer/RenderType;IIIII)V a
	fill (Lnet/minecraft/client/renderer/RenderType;IIIIII)V a
	fillGradient (IIIIII)V b
	fillGradient (IIIIIII)V a
	fillGradient (Lcom/mojang/blaze3d/vertex/VertexConsumer;IIIIIII)V a
	fillGradient (Lnet/minecraft/client/renderer/RenderType;IIIIIII)V a
	flush ()V e
	flushIfManaged ()V h
	flushIfUnmanaged ()V g
	guiHeight ()I b
	guiWidth ()I a
	hLine (IIII)V a
	hLine (Lnet/minecraft/client/renderer/RenderType;IIII)V a
	innerBlit (Lnet/minecraft/resources/ResourceLocation;IIIIIFFFF)V a
	innerBlit (Lnet/minecraft/resources/ResourceLocation;IIIIIFFFFFFFF)V a
	pose ()Lcom/mojang/blaze3d/vertex/PoseStack; c
	renderComponentHoverEffect (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Style;II)V a
	renderComponentTooltip (Lnet/minecraft/client/gui/Font;Ljava/util/List;II)V a
	renderFakeItem (Lnet/minecraft/world/item/ItemStack;II)V b
	renderFakeItem (Lnet/minecraft/world/item/ItemStack;III)V b
	renderItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;III)V a
	renderItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;III)V a
	renderItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;IIII)V a
	renderItem (Lnet/minecraft/world/item/ItemStack;II)V a
	renderItem (Lnet/minecraft/world/item/ItemStack;III)V a
	renderItem (Lnet/minecraft/world/item/ItemStack;IIII)V a
	renderItemDecorations (Lnet/minecraft/client/gui/Font;Lnet/minecraft/world/item/ItemStack;II)V a
	renderItemDecorations (Lnet/minecraft/client/gui/Font;Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;)V a
	renderOutline (IIIII)V b
	renderTooltip (Lnet/minecraft/client/gui/Font;Ljava/util/List;II)V b
	renderTooltip (Lnet/minecraft/client/gui/Font;Ljava/util/List;Ljava/util/Optional;II)V a
	renderTooltip (Lnet/minecraft/client/gui/Font;Ljava/util/List;Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner;II)V a
	renderTooltip (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;II)V a
	renderTooltip (Lnet/minecraft/client/gui/Font;Lnet/minecraft/world/item/ItemStack;II)V b
	renderTooltipInternal (Lnet/minecraft/client/gui/Font;Ljava/util/List;IILnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner;)V a
	setColor (FFFF)V a
	vLine (IIII)V b
	vLine (Lnet/minecraft/client/renderer/RenderType;IIII)V b
net/minecraft/client/gui/GuiGraphics$ScissorStack ewu$a
	stack a
	pop ()Lnet/minecraft/client/gui/navigation/ScreenRectangle; a
	push (Lnet/minecraft/client/gui/navigation/ScreenRectangle;)Lnet/minecraft/client/gui/navigation/ScreenRectangle; a
net/minecraft/client/gui/GuiSpriteManager ewv
	METADATA_SECTIONS a
	getMetadata (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)Lnet/minecraft/client/resources/metadata/gui/GuiMetadataSection; b
	getSprite (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getSpriteScaling (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)Lnet/minecraft/client/resources/metadata/gui/GuiSpriteScaling; a
net/minecraft/client/gui/MapRenderer eww
	HEIGHT d
	MAP_ICONS b
	MAP_ICONS_LOCATION a
	WIDTH c
	maps f
	textureManager e
	getOrCreateMapInstance (ILnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)Lnet/minecraft/client/gui/MapRenderer$MapInstance; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/level/saveddata/maps/MapItemSavedData;ZI)V a
	resetData ()V a
	update (ILnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
net/minecraft/client/gui/MapRenderer$MapInstance eww$a
	data b
	renderType d
	requiresUpload e
	texture c
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ZI)V a
	forceUpload ()V a
	replaceMapData (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	updateTexture ()V b
net/minecraft/client/gui/components/AbstractButton ewx
	SPRITES a
	TEXT_MARGIN e
	keyPressed (III)Z a
	onClick (DD)V a
	onPress ()V b
	renderString (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;I)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/components/AbstractContainerWidget ewy
	focused a
	isDragging b
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; aH_
	isDragging ()Z aG_
	isFocused ()Z aI_
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z b
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	setDragging (Z)V b
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
	setFocused (Z)V a
net/minecraft/client/gui/components/AbstractOptionSliderButton ewz
	options a
net/minecraft/client/gui/components/AbstractScrollWidget exa
	BACKGROUND_SPRITES a
	INNER_PADDING c
	SCROLLER_SPRITE b
	SCROLL_BAR_WIDTH d
	scrollAmount e
	scrolling f
	getContentHeight ()I k
	getInnerHeight ()I g
	getMaxScrollAmount ()I d
	getScrollBarHeight ()I j
	innerPadding ()I a
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z b
	mouseScrolled (DDDD)Z a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;)V b
	renderBorder (Lnet/minecraft/client/gui/GuiGraphics;IIII)V a
	renderContents (Lnet/minecraft/client/gui/GuiGraphics;IIF)V c
	renderDecorations (Lnet/minecraft/client/gui/GuiGraphics;)V a
	renderScrollBar (Lnet/minecraft/client/gui/GuiGraphics;)V c
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	scrollAmount ()D c
	scrollRate ()D i
	scrollbarVisible ()Z e
	scrollbarWidth ()I f
	setScrollAmount (D)V a
	totalInnerPadding ()I b
	withinContentAreaPoint (DD)Z b
	withinContentAreaTopBottom (II)Z a
net/minecraft/client/gui/components/AbstractSelectionList exb
	SCROLLBAR_WIDTH b
	SCROLLER_SPRITE a
	centerListVertically e
	children m
	headerHeight f
	hovered t
	itemHeight d
	minecraft c
	renderBackground r
	renderHeader o
	scrollAmount n
	scrolling p
	selected q
	addEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)I b
	addEntryToTop (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V c
	bindEntryToSelf (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V h
	centerScrollOn (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V e
	children ()Ljava/util/List; l
	clearEntries ()V m
	clickedHeader (II)Z a
	enableScissor (Lnet/minecraft/client/gui/GuiGraphics;)V a
	ensureVisible (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V f
	getEntry (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; d
	getEntryAtPosition (DD)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; b
	getFirstElement ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; j
	getFocused ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; k
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; aH_
	getHovered ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; t
	getItemCount ()I n
	getMaxPosition ()I a
	getMaxScroll ()I p
	getRowBottom (I)I h
	getRowLeft ()I q
	getRowRight ()I r
	getRowTop (I)I g
	getRowWidth ()I b
	getScrollAmount ()D o
	getScrollbarPosition ()I c
	getSelected ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; i
	isMouseOver (DD)Z c
	isSelectedItem (I)Z e
	isValidMouseClick (I)Z f
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z b
	mouseScrolled (DDDD)Z a
	narrateListElementPosition (Lnet/minecraft/client/gui/narration/NarrationElementOutput;Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; s
	nextEntry (Lnet/minecraft/client/gui/navigation/ScreenDirection;)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	nextEntry (Lnet/minecraft/client/gui/navigation/ScreenDirection;Ljava/util/function/Predicate;)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	nextEntry (Lnet/minecraft/client/gui/navigation/ScreenDirection;Ljava/util/function/Predicate;Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	remove (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; i
	removeEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)Z g
	removeEntryFromTop (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)Z d
	renderDecorations (Lnet/minecraft/client/gui/GuiGraphics;II)V b
	renderHeader (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	renderItem (Lnet/minecraft/client/gui/GuiGraphics;IIFIIIII)V a
	renderList (Lnet/minecraft/client/gui/GuiGraphics;IIF)V c
	renderSelection (Lnet/minecraft/client/gui/GuiGraphics;IIIII)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	replaceEntries (Ljava/util/Collection;)V a
	scroll (I)V a
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
	setRenderBackground (Z)V c
	setRenderHeader (ZI)V a
	setScrollAmount (D)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	updateScrollingState (DDI)V c
net/minecraft/client/gui/components/AbstractSelectionList$Entry exb$a
	list a
	isFocused ()Z aI_
	isMouseOver (DD)Z c
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	renderBack (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V b
	setFocused (Z)V a
net/minecraft/client/gui/components/AbstractSelectionList$TrackedList exb$b
	delegate b
	add (ILnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V b
	get (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	remove (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; b
	set (ILnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
net/minecraft/client/gui/components/AbstractSliderButton exc
	HANDLE_HALF_WIDTH n
	HANDLE_WIDTH m
	HIGHLIGHTED_SPRITE d
	SLIDER_HANDLE_HIGHLIGHTED_SPRITE f
	SLIDER_HANDLE_SPRITE e
	SLIDER_SPRITE a
	TEXT_MARGIN b
	canChangeValue o
	value c
	applyValue ()V a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; aK_
	getHandleSprite ()Lnet/minecraft/resources/ResourceLocation; e
	getSprite ()Lnet/minecraft/resources/ResourceLocation; d
	keyPressed (III)Z a
	onClick (DD)V a
	onDrag (DDDD)V b
	onRelease (DD)V a_
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setFocused (Z)V a
	setValue (D)V b
	setValueFromMouse (D)V a
	updateMessage ()V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/AbstractStringWidget exd
	color b
	font a
	getColor ()I b
	getFont ()Lnet/minecraft/client/gui/Font; a
	setColor (I)Lnet/minecraft/client/gui/components/AbstractStringWidget; a
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/AbstractWidget exe
	MIN_SCROLL_PERIOD b
	PERIOD_PER_SCROLLED_PIXEL a
	active j
	alpha l
	focused m
	height h
	isHovered i
	message e
	tabOrderGroup f
	tooltip n
	visible k
	width g
	x c
	y d
	clicked (DD)Z d
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; aK_
	defaultButtonNarrationText (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V c
	getBottom ()I E
	getHeight ()I u
	getMessage ()Lnet/minecraft/network/chat/Component; x
	getRectangle ()Lnet/minecraft/client/gui/navigation/ScreenRectangle; F
	getRight ()I D
	getTabOrderGroup ()I G
	getTooltip ()Lnet/minecraft/client/gui/components/Tooltip; v
	getWidth ()I w
	getX ()I B
	getY ()I C
	isActive ()Z A
	isFocused ()Z aI_
	isHovered ()Z y
	isHoveredOrFocused ()Z z
	isMouseOver (DD)Z c
	isValidClickButton (I)Z k
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z b
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; s
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	onClick (DD)V a
	onDrag (DDDD)V b
	onRelease (DD)V a_
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderScrollingString (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;II)V a
	renderScrollingString (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;IIIII)V a
	renderScrollingString (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;IIIIII)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setAlpha (F)V a
	setFocused (Z)V a
	setHeight (I)V m
	setMessage (Lnet/minecraft/network/chat/Component;)V b
	setRectangle (IIII)V a
	setSize (II)V b
	setTabOrderGroup (I)V p
	setTooltip (Lnet/minecraft/client/gui/components/Tooltip;)V a
	setTooltipDelay (I)V j
	setWidth (I)V l
	setX (I)V n
	setY (I)V o
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
	visitWidgets (Ljava/util/function/Consumer;)V a
	wrapDefaultNarrationMessage (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a_
net/minecraft/client/gui/components/BossHealthOverlay exf
	BAR_BACKGROUND_SPRITES c
	BAR_HEIGHT b
	BAR_PROGRESS_SPRITES d
	BAR_WIDTH a
	OVERLAY_BACKGROUND_SPRITES e
	OVERLAY_PROGRESS_SPRITES f
	events h
	minecraft g
	drawBar (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/world/BossEvent;)V a
	drawBar (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/world/BossEvent;I[Lnet/minecraft/resources/ResourceLocation;[Lnet/minecraft/resources/ResourceLocation;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;)V a
	reset ()V a
	shouldCreateWorldFog ()Z d
	shouldDarkenScreen ()Z c
	shouldPlayMusic ()Z b
	update (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
net/minecraft/client/gui/components/Button exg
	DEFAULT_HEIGHT n
	DEFAULT_NARRATION p
	DEFAULT_SPACING o
	DEFAULT_WIDTH m
	SMALL_WIDTH f
	createNarration r
	onPress q
	builder (Lnet/minecraft/network/chat/Component;Lnet/minecraft/client/gui/components/Button$OnPress;)Lnet/minecraft/client/gui/components/Button$Builder; a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; aK_
	onPress ()V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/Button$Builder exg$a
	createNarration h
	height g
	message a
	onPress b
	tooltip c
	width f
	x d
	y e
	bounds (IIII)Lnet/minecraft/client/gui/components/Button$Builder; a
	build ()Lnet/minecraft/client/gui/components/Button; a
	createNarration (Lnet/minecraft/client/gui/components/Button$CreateNarration;)Lnet/minecraft/client/gui/components/Button$Builder; a
	pos (II)Lnet/minecraft/client/gui/components/Button$Builder; a
	size (II)Lnet/minecraft/client/gui/components/Button$Builder; b
	tooltip (Lnet/minecraft/client/gui/components/Tooltip;)Lnet/minecraft/client/gui/components/Button$Builder; a
	width (I)Lnet/minecraft/client/gui/components/Button$Builder; a
net/minecraft/client/gui/components/Button$CreateNarration exg$b
net/minecraft/client/gui/components/Button$OnPress exg$c
net/minecraft/client/gui/components/ChatComponent exh
	BOTTOM_MARGIN f
	DELETED_CHAT_MESSAGE h
	LOGGER a
	MAX_CHAT_HISTORY b
	MESSAGE_INDENT d
	MESSAGE_NOT_FOUND c
	MESSAGE_TAG_MARGIN_LEFT e
	TIME_BEFORE_MESSAGE_DELETION g
	allMessages k
	chatScrollbarPos m
	messageDeletionQueue o
	minecraft i
	newMessageSinceScroll n
	recentChat j
	trimmedMessages l
	addMessage (Lnet/minecraft/network/chat/Component;)V a
	addMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/MessageSignature;ILnet/minecraft/client/GuiMessageTag;Z)V a
	addMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/MessageSignature;Lnet/minecraft/client/GuiMessageTag;)V a
	addRecentChat (Ljava/lang/String;)V a
	clearMessages (Z)V a
	createDeletedMarker (Lnet/minecraft/client/GuiMessage;)Lnet/minecraft/client/GuiMessage; a
	defaultUnfocusedPct ()D h
	deleteMessage (Lnet/minecraft/network/chat/MessageSignature;)V a
	deleteMessageOrDelay (Lnet/minecraft/network/chat/MessageSignature;)Lnet/minecraft/client/gui/components/ChatComponent$DelayedMessageDeletion; b
	drawTagIcon (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/client/GuiMessageTag$Icon;)V a
	getClickedComponentStyleAt (DD)Lnet/minecraft/network/chat/Style; b
	getHeight ()I f
	getHeight (D)I b
	getLineHeight ()I n
	getLinesPerPage ()I i
	getMessageEndIndexAt (DD)I d
	getMessageLineIndexAt (DD)I e
	getMessageTagAt (DD)Lnet/minecraft/client/GuiMessageTag; c
	getRecentChat ()Lnet/minecraft/util/ArrayListDeque; c
	getScale ()D g
	getTagIconLeft (Lnet/minecraft/client/GuiMessage$Line;)I a
	getTimeFactor (I)D b
	getWidth ()I e
	getWidth (D)I a
	handleChatQueueClicked (DD)Z a
	hasSelectedMessageTag (DLnet/minecraft/client/GuiMessage$Line;Lnet/minecraft/client/GuiMessageTag;)Z a
	isChatFocused ()Z m
	isChatHidden ()Z j
	logChatMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/client/GuiMessageTag;)V a
	processMessageDeletionQueue ()V k
	refreshTrimmedMessage ()V l
	render (Lnet/minecraft/client/gui/GuiGraphics;III)V a
	rescaleChat ()V b
	resetChatScroll ()V d
	screenToChatX (D)D c
	screenToChatY (D)D d
	scrollChat (I)V a
	tick ()V a
net/minecraft/client/gui/components/ChatComponent$DelayedMessageDeletion exh$a
	deletableAfter b
	signature a
	deletableAfter ()I b
	signature ()Lnet/minecraft/network/chat/MessageSignature; a
net/minecraft/client/gui/components/Checkbox exi
	BOX_PADDING n
	CHECKBOX_HIGHLIGHTED_SPRITE c
	CHECKBOX_SELECTED_HIGHLIGHTED_SPRITE a
	CHECKBOX_SELECTED_SPRITE b
	CHECKBOX_SPRITE d
	SPACING m
	TEXT_COLOR f
	onValueChange p
	selected o
	boxSize (Lnet/minecraft/client/gui/Font;)I a
	builder (Lnet/minecraft/network/chat/Component;Lnet/minecraft/client/gui/Font;)Lnet/minecraft/client/gui/components/Checkbox$Builder; a
	onPress ()V b
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	selected ()Z a
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/Checkbox$Builder exi$a
	font b
	message a
	onValueChange e
	option g
	selected f
	tooltip h
	x c
	y d
	build ()Lnet/minecraft/client/gui/components/Checkbox; a
	onValueChange (Lnet/minecraft/client/gui/components/Checkbox$OnValueChange;)Lnet/minecraft/client/gui/components/Checkbox$Builder; a
	pos (II)Lnet/minecraft/client/gui/components/Checkbox$Builder; a
	selected (Lnet/minecraft/client/OptionInstance;)Lnet/minecraft/client/gui/components/Checkbox$Builder; a
	selected (Z)Lnet/minecraft/client/gui/components/Checkbox$Builder; a
	tooltip (Lnet/minecraft/client/gui/components/Tooltip;)Lnet/minecraft/client/gui/components/Checkbox$Builder; a
net/minecraft/client/gui/components/Checkbox$OnValueChange exi$b
	NOP a
net/minecraft/client/gui/components/CommandSuggestions exj
	ARGUMENT_STYLES d
	LITERAL_STYLE c
	UNPARSED_STYLE b
	WHITESPACE_PATTERN a
	allowHiding w
	allowSuggestions u
	anchorToBottom m
	commandUsage o
	commandUsagePosition p
	commandUsageWidth q
	commandsOnly i
	currentParse r
	fillColor n
	font h
	input g
	keepSuggestions v
	lineStartOffset k
	minecraft e
	onlyShowIfCursorPastError j
	pendingSuggestions s
	screen f
	suggestionLineLimit l
	suggestions t
	calculateSuggestionSuffix (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	fillNodeUsage (Lnet/minecraft/ChatFormatting;)Z a
	formatChat (Ljava/lang/String;I)Lnet/minecraft/util/FormattedCharSequence; a
	formatText (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;I)Lnet/minecraft/util/FormattedCharSequence; a
	getExceptionMessage (Lcom/mojang/brigadier/exceptions/CommandSyntaxException;)Lnet/minecraft/util/FormattedCharSequence; a
	getLastWordIndex (Ljava/lang/String;)I a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; e
	getUsageNarration ()Lnet/minecraft/network/chat/Component; b
	hide ()V c
	isVisible ()Z a
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (D)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	renderSuggestions (Lnet/minecraft/client/gui/GuiGraphics;II)Z b
	renderUsage (Lnet/minecraft/client/gui/GuiGraphics;)V a
	setAllowHiding (Z)V b
	setAllowSuggestions (Z)V a
	showSuggestions (Z)V c
	sortSuggestions (Lcom/mojang/brigadier/suggestion/Suggestions;)Ljava/util/List; a
	updateCommandInfo ()V d
	updateUsageInfo ()V f
net/minecraft/client/gui/components/CommandSuggestions$SuggestionsList exj$a
	current f
	lastMouse g
	lastNarratedEntry i
	offset e
	originalContents c
	rect b
	suggestionList d
	tabCycles h
	cycle (I)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; b
	keyPressed (III)Z b
	mouseClicked (III)Z a
	mouseScrolled (D)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	select (I)V b
	useSuggestion ()V a
net/minecraft/client/gui/components/CommonButtons exk
	accessibility (ILnet/minecraft/client/gui/components/Button$OnPress;Z)Lnet/minecraft/client/gui/components/SpriteIconButton; b
	language (ILnet/minecraft/client/gui/components/Button$OnPress;Z)Lnet/minecraft/client/gui/components/SpriteIconButton; a
net/minecraft/client/gui/components/ComponentRenderUtils exl
	INDENT a
	stripColor (Ljava/lang/String;)Ljava/lang/String; a
	wrapComponents (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/client/gui/Font;)Ljava/util/List; a
net/minecraft/client/gui/components/ContainerObjectSelectionList exm
	isSelectedItem (I)Z e
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; s
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/ContainerObjectSelectionList$Entry exm$a
	dragging c
	focused a
	lastNarratable b
	focusPathAtIndex (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;I)Lnet/minecraft/client/gui/ComponentPath; a
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; aH_
	isDragging ()Z aG_
	isFocused ()Z aI_
	isMouseOver (DD)Z c
	mouseClicked (DDI)Z a
	narratables ()Ljava/util/List; a
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	renderBack (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V b
	setDragging (Z)V b
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
	setFocused (Z)V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/CycleButton exn
	BOOLEAN_OPTIONS b
	DEFAULT_ALT_LIST_SELECTOR a
	displayOnlyValue q
	index d
	name c
	narrationProvider o
	onValueChange p
	tooltipSupplier r
	value f
	valueStringifier n
	values m
	booleanBuilder (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	builder (Ljava/util/function/Function;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	createDefaultNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; d
	createFullName (Ljava/lang/Object;)Lnet/minecraft/network/chat/MutableComponent; d
	createLabelForValue (Ljava/lang/Object;)Lnet/minecraft/network/chat/Component; c
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; aK_
	cycleValue (I)V a
	getCycledValue (I)Ljava/lang/Object; b
	getValue ()Ljava/lang/Object; a
	mouseScrolled (DDDD)Z a
	onOffBuilder ()Lnet/minecraft/client/gui/components/CycleButton$Builder; e
	onOffBuilder (Z)Lnet/minecraft/client/gui/components/CycleButton$Builder; b
	onPress ()V b
	setValue (Ljava/lang/Object;)V a
	updateTooltip ()V f
	updateValue (Ljava/lang/Object;)V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/CycleButton$Builder exn$a
	displayOnlyValue g
	initialIndex a
	initialValue b
	narrationProvider e
	tooltipSupplier d
	valueStringifier c
	values f
	create (IIIILnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/CycleButton; a
	create (IIIILnet/minecraft/network/chat/Component;Lnet/minecraft/client/gui/components/CycleButton$OnValueChange;)Lnet/minecraft/client/gui/components/CycleButton; a
	displayOnlyValue ()Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withCustomNarration (Ljava/util/function/Function;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withInitialValue (Ljava/lang/Object;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withTooltip (Lnet/minecraft/client/OptionInstance$TooltipSupplier;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues (Ljava/util/Collection;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues (Ljava/util/List;Ljava/util/List;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues (Ljava/util/function/BooleanSupplier;Ljava/util/List;Ljava/util/List;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues (Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues ([Ljava/lang/Object;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
net/minecraft/client/gui/components/CycleButton$OnValueChange exn$b
net/minecraft/client/gui/components/CycleButton$ValueListSupplier exn$c
	create (Ljava/util/Collection;)Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	create (Ljava/util/function/BooleanSupplier;Ljava/util/List;Ljava/util/List;)Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	getDefaultList ()Ljava/util/List; b
	getSelectedList ()Ljava/util/List; a
net/minecraft/client/gui/components/DebugScreenOverlay exo
	COLOR_GREY a
	HEIGHTMAP_NAMES e
	MARGIN_LEFT c
	MARGIN_RIGHT b
	MARGIN_TOP d
	allocationRateCalculator g
	bandwidthChart y
	bandwidthLogger u
	block i
	clientChunk l
	font h
	fpsChart v
	frameTimeLogger r
	lastPos k
	liquid j
	minecraft f
	pingChart x
	pingLogger t
	renderDebug n
	renderFpsCharts p
	renderNetworkCharts q
	renderProfilerChart o
	serverChunk m
	tickTimeLogger s
	tpsChart w
	bytesToMegabytes (J)J c
	clearChunkCache ()V a
	drawGameInformation (Lnet/minecraft/client/gui/GuiGraphics;)V b
	drawSystemInformation (Lnet/minecraft/client/gui/GuiGraphics;)V c
	getBandwidthLogger ()Lnet/minecraft/util/SampleLogger; l
	getClientChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; r
	getGameInformation ()Ljava/util/List; b
	getLevel ()Lnet/minecraft/world/level/Level; p
	getPingLogger ()Lnet/minecraft/util/SampleLogger; k
	getPropertyValueString (Ljava/util/Map$Entry;)Ljava/lang/String; a
	getServerChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; q
	getServerChunkStats ()Ljava/lang/String; o
	getServerLevel ()Lnet/minecraft/server/level/ServerLevel; n
	getSystemInformation ()Ljava/util/List; c
	logFrameDuration (J)V a
	logTickDuration (J)V b
	printBiome (Lnet/minecraft/core/Holder;)Ljava/lang/String; a
	render (Lnet/minecraft/client/gui/GuiGraphics;)V a
	renderLines (Lnet/minecraft/client/gui/GuiGraphics;Ljava/util/List;Z)V a
	reset ()V m
	showDebugScreen ()Z d
	showNetworkCharts ()Z f
	showProfilerChart ()Z e
	toggleFpsCharts ()V i
	toggleNetworkCharts ()V h
	toggleOverlay ()V g
	toggleProfilerChart ()V j
net/minecraft/client/gui/components/DebugScreenOverlay$AllocationRateCalculator exo$a
	GC_MBEANS b
	UPDATE_INTERVAL_MS a
	lastGcCounts e
	lastHeapUsage d
	lastRate f
	lastTime c
	bytesAllocatedPerSecond (J)J a
	gcCounts ()J a
net/minecraft/client/gui/components/EditBox exp
	BACKWARDS a
	CURSOR_APPEND_CHARACTER m
	CURSOR_BLINK_INTERVAL_MS n
	CURSOR_INSERT_COLOR f
	CURSOR_INSERT_WIDTH e
	DEFAULT_TEXT_COLOR c
	FORWARDS b
	SPRITES d
	bordered r
	canLoseFocus t
	cursorPos w
	displayPos v
	filter C
	focusedTime F
	font o
	formatter D
	highlightPos x
	hint E
	isEditable u
	maxLength q
	responder B
	suggestion A
	textColor y
	textColorUneditable z
	value p
	canConsumeInput ()Z d
	charTyped (CI)Z a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; aK_
	deleteChars (I)V b
	deleteCharsToPos (I)V c
	deleteText (I)V r
	deleteWords (I)V a
	getCursorPos (I)I s
	getCursorPosition ()I e
	getHighlighted ()Ljava/lang/String; b
	getInnerWidth ()I g
	getMaxLength ()I j
	getScreenX (I)I q
	getValue ()Ljava/lang/String; a
	getWordPosition (I)I d
	getWordPosition (II)I a
	getWordPosition (IIZ)I a
	insertText (Ljava/lang/String;)V b
	isBordered ()Z f
	isEditable ()Z k
	isVisible ()Z i
	keyPressed (III)Z a
	moveCursor (IZ)V a
	moveCursorTo (IZ)V b
	moveCursorToEnd (Z)V c
	moveCursorToStart (Z)V b
	onClick (DD)V a
	onValueChange (Ljava/lang/String;)V d
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderHighlight (Lnet/minecraft/client/gui/GuiGraphics;IIII)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	scrollTo (I)V t
	setBordered (Z)V d
	setCanLoseFocus (Z)V f
	setCursorPosition (I)V e
	setEditable (Z)V e
	setFilter (Ljava/util/function/Predicate;)V a
	setFocused (Z)V a
	setFormatter (Ljava/util/function/BiFunction;)V a
	setHighlightPos (I)V i
	setHint (Lnet/minecraft/network/chat/Component;)V c
	setMaxLength (I)V f
	setResponder (Ljava/util/function/Consumer;)V b
	setSuggestion (Ljava/lang/String;)V c
	setTextColor (I)V g
	setTextColorUneditable (I)V h
	setValue (Ljava/lang/String;)V a
	setVisible (Z)V g
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/FittingMultiLineTextWidget exq
	font a
	multilineWidget b
	getInnerHeight ()I g
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;)V b
	renderContents (Lnet/minecraft/client/gui/GuiGraphics;IIF)V c
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	scrollRate ()D i
	setColor (I)Lnet/minecraft/client/gui/components/FittingMultiLineTextWidget; a
	setWidth (I)V l
	showingScrollBar ()Z j
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/FocusableTextWidget exr
	BACKGROUND_COLOR a
	PADDING b
	alwaysShowBorder c
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/ImageButton exs
	sprites a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/components/ImageWidget ext
	isActive ()Z A
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	sprite (IILnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/gui/components/ImageWidget; a
	texture (IILnet/minecraft/resources/ResourceLocation;II)Lnet/minecraft/client/gui/components/ImageWidget; a
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/ImageWidget$Sprite ext$a
	sprite a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/components/ImageWidget$Texture ext$b
	texture a
	textureHeight c
	textureWidth b
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/components/LerpingBossEvent exu
	LERP_MILLISECONDS j
	setTime i
	targetPercent h
	getProgress ()F k
	setProgress (F)V a
net/minecraft/client/gui/components/LoadingDotsWidget exv
	font a
	isActive ()Z A
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/LockIconButton exw
	locked a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; aK_
	isLocked ()Z a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setLocked (Z)V b
net/minecraft/client/gui/components/LockIconButton$Icon exw$a
	$VALUES h
	LOCKED a
	LOCKED_DISABLED c
	LOCKED_HOVER b
	UNLOCKED d
	UNLOCKED_DISABLED f
	UNLOCKED_HOVER e
	sprite g
	$values ()[Lnet/minecraft/client/gui/components/LockIconButton$Icon; a
net/minecraft/client/gui/components/LogoRenderer exx
	DEFAULT_HEIGHT_OFFSET f
	EASTER_EGG_LOGO b
	EDITION_HEIGHT j
	EDITION_LOGO_OVERLAP m
	EDITION_TEXTURE_HEIGHT l
	EDITION_TEXTURE_WIDTH k
	EDITION_WIDTH i
	LOGO_HEIGHT e
	LOGO_TEXTURE_HEIGHT h
	LOGO_TEXTURE_WIDTH g
	LOGO_WIDTH d
	MINECRAFT_EDITION c
	MINECRAFT_LOGO a
	keepLogoThroughFade o
	showEasterEgg n
	renderLogo (Lnet/minecraft/client/gui/GuiGraphics;IF)V a
	renderLogo (Lnet/minecraft/client/gui/GuiGraphics;IFI)V a
net/minecraft/client/gui/components/MultiLineEditBox exy
	CURSOR_APPEND_CHARACTER c
	CURSOR_BLINK_INTERVAL_MS f
	CURSOR_INSERT_COLOR b
	CURSOR_INSERT_WIDTH a
	PLACEHOLDER_TEXT_COLOR e
	TEXT_COLOR d
	focusedTime p
	font m
	placeholder n
	textField o
	charTyped (CI)Z a
	getDisplayableLineCount ()D l
	getInnerHeight ()I g
	getValue ()Ljava/lang/String; j
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	renderContents (Lnet/minecraft/client/gui/GuiGraphics;IIF)V c
	renderDecorations (Lnet/minecraft/client/gui/GuiGraphics;)V a
	renderHighlight (Lnet/minecraft/client/gui/GuiGraphics;IIII)V b
	scrollRate ()D i
	scrollToCursor ()V k
	scrollbarVisible ()Z e
	seekCursorScreen (DD)V e
	setCharacterLimit (I)V a
	setFocused (Z)V a
	setValue (Ljava/lang/String;)V a
	setValueListener (Ljava/util/function/Consumer;)V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/MultiLineLabel exz
	EMPTY a
	create (Lnet/minecraft/client/gui/Font;Ljava/util/List;)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	create (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/FormattedText;I)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	create (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/FormattedText;II)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	create (Lnet/minecraft/client/gui/Font;[Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	createFixed (Lnet/minecraft/client/gui/Font;Ljava/util/List;)Lnet/minecraft/client/gui/components/MultiLineLabel; b
	getLineCount ()I a
	getWidth ()I b
	renderBackgroundCentered (Lnet/minecraft/client/gui/GuiGraphics;IIIII)V a
	renderCentered (Lnet/minecraft/client/gui/GuiGraphics;II)I a
	renderCentered (Lnet/minecraft/client/gui/GuiGraphics;IIII)I a
	renderLeftAligned (Lnet/minecraft/client/gui/GuiGraphics;IIII)I b
	renderLeftAlignedNoShadow (Lnet/minecraft/client/gui/GuiGraphics;IIII)I c
net/minecraft/client/gui/components/MultiLineLabel$TextWithWidth exz$a
	text a
	width b
net/minecraft/client/gui/components/MultiLineTextWidget eya
	cache c
	centered d
	maxRows b
	maxWidth a
	getFreshCacheKey ()Lnet/minecraft/client/gui/components/MultiLineTextWidget$CacheKey; d
	getHeight ()I u
	getWidth ()I w
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setCentered (Z)Lnet/minecraft/client/gui/components/MultiLineTextWidget; b
	setColor (I)Lnet/minecraft/client/gui/components/AbstractStringWidget; a
	setColor (I)Lnet/minecraft/client/gui/components/MultiLineTextWidget; b
	setMaxRows (I)Lnet/minecraft/client/gui/components/MultiLineTextWidget; d
	setMaxWidth (I)Lnet/minecraft/client/gui/components/MultiLineTextWidget; c
net/minecraft/client/gui/components/MultiLineTextWidget$CacheKey eya$a
	maxRows c
	maxWidth b
	message a
	maxRows ()Ljava/util/OptionalInt; c
	maxWidth ()I b
	message ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/gui/components/MultilineTextField eyb
	LINE_SEEK_PIXEL_BIAS b
	NO_CHARACTER_LIMIT a
	characterLimit i
	cursor f
	cursorListener l
	displayLines d
	font c
	selectCursor g
	selecting h
	value e
	valueListener k
	width j
	characterLimit ()I a
	cursor ()I d
	deleteText (I)V b
	getCursorLineView ()Lnet/minecraft/client/gui/components/MultilineTextField$StringView; m
	getCursorLineView (I)Lnet/minecraft/client/gui/components/MultilineTextField$StringView; f
	getLineAtCursor ()I g
	getLineCount ()I f
	getLineView (I)Lnet/minecraft/client/gui/components/MultilineTextField$StringView; c
	getNextWord ()Lnet/minecraft/client/gui/components/MultilineTextField$StringView; l
	getPreviousWord ()Lnet/minecraft/client/gui/components/MultilineTextField$StringView; k
	getSelected ()Lnet/minecraft/client/gui/components/MultilineTextField$StringView; e
	getSelectedText ()Ljava/lang/String; j
	getWordEndPosition (I)I g
	hasCharacterLimit ()Z b
	hasSelection ()Z i
	insertText (Ljava/lang/String;)V b
	iterateLines ()Ljava/lang/Iterable; h
	keyPressed (I)Z e
	onValueChange ()V n
	reflowDisplayLines ()V o
	seekCursor (Lnet/minecraft/client/gui/components/Whence;I)V a
	seekCursorLine (I)V d
	seekCursorToPoint (DD)V a
	setCharacterLimit (I)V a
	setCursorListener (Ljava/lang/Runnable;)V a
	setSelecting (Z)V a
	setValue (Ljava/lang/String;)V a
	setValueListener (Ljava/util/function/Consumer;)V a
	truncateFullText (Ljava/lang/String;)Ljava/lang/String; c
	truncateInsertionText (Ljava/lang/String;)Ljava/lang/String; d
	value ()Ljava/lang/String; c
net/minecraft/client/gui/components/MultilineTextField$StringView eyb$a
	EMPTY c
	beginIndex a
	endIndex b
	beginIndex ()I a
	endIndex ()I b
net/minecraft/client/gui/components/ObjectSelectionList eyc
	USAGE_NARRATION a
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/ObjectSelectionList$Entry eyc$a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	isFocused ()Z aI_
	isMouseOver (DD)Z c
	renderBack (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V b
	setFocused (Z)V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
net/minecraft/client/gui/components/OptionsList eyd
	addBig (Lnet/minecraft/client/OptionInstance;)I a
	addSmall (Lnet/minecraft/client/OptionInstance;Lnet/minecraft/client/OptionInstance;)V a
	addSmall ([Lnet/minecraft/client/OptionInstance;)V a
	findOption (Lnet/minecraft/client/OptionInstance;)Lnet/minecraft/client/gui/components/AbstractWidget; b
	getMouseOver (DD)Ljava/util/Optional; e
	getRowWidth ()I b
	getScrollbarPosition ()I c
net/minecraft/client/gui/components/OptionsList$Entry eyd$a
	children b
	options a
	big (Lnet/minecraft/client/Options;ILnet/minecraft/client/OptionInstance;)Lnet/minecraft/client/gui/components/OptionsList$Entry; a
	children ()Ljava/util/List; l
	narratables ()Ljava/util/List; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	small (Lnet/minecraft/client/Options;ILnet/minecraft/client/OptionInstance;Lnet/minecraft/client/OptionInstance;)Lnet/minecraft/client/gui/components/OptionsList$Entry; a
net/minecraft/client/gui/components/PlainTextButton eye
	font a
	message b
	underlinedMessage c
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/components/PlayerFaceRenderer eyf
	SKIN_HAT_HEIGHT h
	SKIN_HAT_U e
	SKIN_HAT_V f
	SKIN_HAT_WIDTH g
	SKIN_HEAD_HEIGHT d
	SKIN_HEAD_U a
	SKIN_HEAD_V b
	SKIN_HEAD_WIDTH c
	SKIN_TEX_HEIGHT j
	SKIN_TEX_WIDTH i
	draw (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/resources/PlayerSkin;III)V a
	draw (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/resources/ResourceLocation;III)V a
	draw (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/resources/ResourceLocation;IIIZZ)V a
	drawHat (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/resources/ResourceLocation;IIIZ)V a
net/minecraft/client/gui/components/PlayerSkinWidget eyg
	DEFAULT_ROTATION_X e
	DEFAULT_ROTATION_Y f
	MODEL_HEIGHT b
	MODEL_OFFSET a
	ROTATION_SENSITIVITY d
	ROTATION_X_LIMIT m
	Z_OFFSET c
	model n
	rotationX p
	rotationY q
	skin o
	isActive ()Z A
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	onDrag (DDDD)V b
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/PlayerSkinWidget$Model eyg$a
	slimModel b
	wideModel a
	bake (Lnet/minecraft/client/model/geom/EntityModelSet;)Lnet/minecraft/client/gui/components/PlayerSkinWidget$Model; a
	render (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/resources/PlayerSkin;)V a
	slimModel ()Lnet/minecraft/client/model/PlayerModel; b
	wideModel ()Lnet/minecraft/client/model/PlayerModel; a
net/minecraft/client/gui/components/PlayerTabOverlay eyh
	HEART_ABSORBING_FULL_BLINKING_SPRITE l
	HEART_ABSORBING_HALF_BLINKING_SPRITE n
	HEART_CONTAINER_BLINKING_SPRITE h
	HEART_CONTAINER_SPRITE i
	HEART_FULL_BLINKING_SPRITE j
	HEART_FULL_SPRITE m
	HEART_HALF_BLINKING_SPRITE k
	HEART_HALF_SPRITE o
	MAX_ROWS_PER_COL a
	PING_1_SPRITE c
	PING_2_SPRITE d
	PING_3_SPRITE e
	PING_4_SPRITE f
	PING_5_SPRITE g
	PING_UNKNOWN_SPRITE b
	PLAYER_COMPARATOR p
	footer s
	gui r
	header t
	healthStates v
	minecraft q
	visible u
	decorateName (Lnet/minecraft/client/multiplayer/PlayerInfo;Lnet/minecraft/network/chat/MutableComponent;)Lnet/minecraft/network/chat/Component; a
	getNameForDisplay (Lnet/minecraft/client/multiplayer/PlayerInfo;)Lnet/minecraft/network/chat/Component; a
	getPlayerInfos ()Ljava/util/List; b
	render (Lnet/minecraft/client/gui/GuiGraphics;ILnet/minecraft/world/scores/Scoreboard;Lnet/minecraft/world/scores/Objective;)V a
	renderPingIcon (Lnet/minecraft/client/gui/GuiGraphics;IIILnet/minecraft/client/multiplayer/PlayerInfo;)V a
	renderTablistHearts (IIILjava/util/UUID;Lnet/minecraft/client/gui/GuiGraphics;I)V a
	renderTablistScore (Lnet/minecraft/world/scores/Objective;ILnet/minecraft/client/gui/components/PlayerTabOverlay$ScoreDisplayEntry;IILjava/util/UUID;Lnet/minecraft/client/gui/GuiGraphics;)V a
	reset ()V a
	setFooter (Lnet/minecraft/network/chat/Component;)V a
	setHeader (Lnet/minecraft/network/chat/Component;)V b
	setVisible (Z)V a
net/minecraft/client/gui/components/PlayerTabOverlay$HealthState eyh$a
	DECREASE_BLINK_DURATION b
	DISPLAY_UPDATE_DELAY a
	INCREASE_BLINK_DURATION c
	blinkUntilTick g
	displayedValue e
	lastUpdateTick f
	lastValue d
	displayedValue ()I a
	isBlinking (J)Z a
	update (IJ)V a
net/minecraft/client/gui/components/PlayerTabOverlay$ScoreDisplayEntry eyh$b
	formattedScore c
	name a
	score b
	scoreWidth d
	formattedScore ()Lnet/minecraft/network/chat/Component; c
	name ()Lnet/minecraft/network/chat/Component; a
	score ()I b
	scoreWidth ()I d
net/minecraft/client/gui/components/PopupScreen eyi
	BACKGROUND_SPRITE a
	BG_BORDER_WITH_SPACING c
	BUTTON_SPACING k
	IMAGE_SIZE_X l
	IMAGE_SIZE_Y m
	POPUP_DEFAULT_WIDTH n
	SPACING b
	backgroundScreen o
	buttons r
	contentWidth u
	image p
	layout v
	message q
	onClose t
	added ()V aF_
	buildButtonRow ()Lnet/minecraft/client/gui/layouts/LinearLayout; n
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	onClose ()V aE_
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	repositionElements ()V c
net/minecraft/client/gui/components/PopupScreen$Builder eyi$a
	backgroundScreen a
	buttons f
	image e
	message c
	onClose g
	title b
	width d
	addButton (Lnet/minecraft/network/chat/Component;Ljava/util/function/Consumer;)Lnet/minecraft/client/gui/components/PopupScreen$Builder; a
	build ()Lnet/minecraft/client/gui/components/PopupScreen; a
	onClose (Ljava/lang/Runnable;)Lnet/minecraft/client/gui/components/PopupScreen$Builder; a
	setImage (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/gui/components/PopupScreen$Builder; a
	setMessage (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/PopupScreen$Builder; a
	setWidth (I)Lnet/minecraft/client/gui/components/PopupScreen$Builder; a
net/minecraft/client/gui/components/PopupScreen$ButtonOption eyi$b
	action b
	message a
	action ()Ljava/util/function/Consumer; b
	message ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/gui/components/Renderable eyj
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/client/gui/components/SplashRenderer eyk
	CHRISTMAS a
	HALLOWEEN c
	HEIGH_OFFSET e
	NEW_YEAR b
	WIDTH_OFFSET d
	splash f
	render (Lnet/minecraft/client/gui/GuiGraphics;ILnet/minecraft/client/gui/Font;I)V a
net/minecraft/client/gui/components/SpriteIconButton eyl
	sprite a
	spriteHeight c
	spriteWidth b
	builder (Lnet/minecraft/network/chat/Component;Lnet/minecraft/client/gui/components/Button$OnPress;Z)Lnet/minecraft/client/gui/components/SpriteIconButton$Builder; a
net/minecraft/client/gui/components/SpriteIconButton$Builder eyl$a
	height e
	iconOnly c
	message a
	onPress b
	sprite f
	spriteHeight h
	spriteWidth g
	width d
	build ()Lnet/minecraft/client/gui/components/SpriteIconButton; a
	size (II)Lnet/minecraft/client/gui/components/SpriteIconButton$Builder; a
	sprite (Lnet/minecraft/resources/ResourceLocation;II)Lnet/minecraft/client/gui/components/SpriteIconButton$Builder; a
	width (I)Lnet/minecraft/client/gui/components/SpriteIconButton$Builder; a
net/minecraft/client/gui/components/SpriteIconButton$CenteredIcon eyl$b
	renderString (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;I)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/components/SpriteIconButton$TextAndIcon eyl$c
	renderString (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;I)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/components/StateSwitchingButton eym
	isStateTriggered b
	sprites a
	initTextureValues (Lnet/minecraft/client/gui/components/WidgetSprites;)V a
	isStateTriggered ()Z a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setStateTriggered (Z)V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/StringWidget eyn
	alignX a
	alignCenter ()Lnet/minecraft/client/gui/components/StringWidget; e
	alignLeft ()Lnet/minecraft/client/gui/components/StringWidget; d
	alignRight ()Lnet/minecraft/client/gui/components/StringWidget; f
	clipText (Lnet/minecraft/network/chat/Component;I)Lnet/minecraft/util/FormattedCharSequence; a
	horizontalAlignment (F)Lnet/minecraft/client/gui/components/StringWidget; b
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setColor (I)Lnet/minecraft/client/gui/components/AbstractStringWidget; a
	setColor (I)Lnet/minecraft/client/gui/components/StringWidget; b
net/minecraft/client/gui/components/SubtitleOverlay eyo
	DISPLAY_TIME a
	audibleSubtitles e
	isListening d
	minecraft b
	subtitles c
	onPlaySound (Lnet/minecraft/client/resources/sounds/SoundInstance;Lnet/minecraft/client/sounds/WeighedSoundEvents;F)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;)V a
net/minecraft/client/gui/components/SubtitleOverlay$Subtitle eyo$a
	location d
	range b
	text a
	time c
	getLocation ()Lnet/minecraft/world/phys/Vec3; c
	getText ()Lnet/minecraft/network/chat/Component; a
	getTime ()J b
	isAudibleFrom (Lnet/minecraft/world/phys/Vec3;)Z b
	refresh (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/client/gui/components/TabButton eyp
	SELECTED_OFFSET b
	SPRITES a
	TEXT_MARGIN c
	UNDERLINE_HEIGHT d
	UNDERLINE_MARGIN_BOTTOM f
	UNDERLINE_MARGIN_X e
	tab n
	tabManager m
	isSelected ()Z b
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderFocusUnderline (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;I)V b
	renderString (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;I)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	tab ()Lnet/minecraft/client/gui/components/tabs/Tab; a
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/TabOrderedElement eyq
	getTabOrderGroup ()I G
net/minecraft/client/gui/components/Tooltip eyr
	MAX_WIDTH a
	cachedTooltip c
	hoverOrFocusedStartTime f
	message b
	msDelay e
	narration d
	wasHoveredOrFocused g
	create (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/Tooltip; a
	create (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/Tooltip; a
	createTooltipPositioner (ZZLnet/minecraft/client/gui/navigation/ScreenRectangle;)Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner; b
	refreshTooltipForNextRenderPass (ZZLnet/minecraft/client/gui/navigation/ScreenRectangle;)V a
	setDelay (I)V a
	splitTooltip (Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/chat/Component;)Ljava/util/List; a
	toCharSequence (Lnet/minecraft/client/Minecraft;)Ljava/util/List; a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
net/minecraft/client/gui/components/Whence eys
	$VALUES d
	ABSOLUTE a
	END c
	RELATIVE b
	$values ()[Lnet/minecraft/client/gui/components/Whence; a
net/minecraft/client/gui/components/WidgetSprites eyt
	disabled b
	disabledFocused d
	enabled a
	enabledFocused c
	disabled ()Lnet/minecraft/resources/ResourceLocation; b
	disabledFocused ()Lnet/minecraft/resources/ResourceLocation; d
	enabled ()Lnet/minecraft/resources/ResourceLocation; a
	enabledFocused ()Lnet/minecraft/resources/ResourceLocation; c
	get (ZZ)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/gui/components/debugchart/AbstractDebugChart eyu
	CHART_HEIGHT b
	COLOR_GREY a
	LINE_WIDTH c
	font d
	logger e
	drawChart (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	drawStringWithShade (Lnet/minecraft/client/gui/GuiGraphics;Ljava/lang/String;II)V a
	getSampleColor (DDIDIDI)I a
	getSampleColor (J)I a
	getSampleHeight (D)I b
	getWidth (I)I a
	renderAdditionalLinesAndLabels (Lnet/minecraft/client/gui/GuiGraphics;III)V a
	toDisplayString (D)Ljava/lang/String; a
net/minecraft/client/gui/components/debugchart/BandwidthDebugChart eyv
	CHART_TOP_VALUE k
	KILOBYTE i
	MAX_COLOR h
	MEGABYTE j
	MID_COLOR g
	MIN_COLOR f
	drawLabeledLineAtValue (Lnet/minecraft/client/gui/GuiGraphics;IIII)V a
	drawLineWithLabel (Lnet/minecraft/client/gui/GuiGraphics;IIILjava/lang/String;)V a
	getSampleColor (J)I a
	getSampleHeight (D)I b
	getSampleHeightInternal (D)I d
	renderAdditionalLinesAndLabels (Lnet/minecraft/client/gui/GuiGraphics;III)V a
	toBytesPerSecond (D)D e
	toDisplayString (D)Ljava/lang/String; a
	toDisplayStringInternal (D)Ljava/lang/String; c
net/minecraft/client/gui/components/debugchart/FpsDebugChart eyw
	CHART_TOP_FPS i
	CHART_TOP_VALUE j
	GREEN h
	RED f
	YELLOW g
	getSampleColor (J)I a
	getSampleHeight (D)I b
	renderAdditionalLinesAndLabels (Lnet/minecraft/client/gui/GuiGraphics;III)V a
	toDisplayString (D)Ljava/lang/String; a
	toMilliseconds (D)D c
net/minecraft/client/gui/components/debugchart/PingDebugChart eyx
	CHART_TOP_VALUE i
	GREEN h
	RED f
	YELLOW g
	getSampleColor (J)I a
	getSampleHeight (D)I b
	renderAdditionalLinesAndLabels (Lnet/minecraft/client/gui/GuiGraphics;III)V a
	toDisplayString (D)Ljava/lang/String; a
net/minecraft/client/gui/components/debugchart/TpsDebugChart eyy
	GREEN h
	RED f
	YELLOW g
	msptSupplier i
	getSampleColor (J)I a
	getSampleHeight (D)I b
	renderAdditionalLinesAndLabels (Lnet/minecraft/client/gui/GuiGraphics;III)V a
	toDisplayString (D)Ljava/lang/String; a
	toMilliseconds (D)D c
net/minecraft/client/gui/components/events/AbstractContainerEventHandler eyz
	focused a
	isDragging b
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; aH_
	isDragging ()Z aG_
	setDragging (Z)V b
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
net/minecraft/client/gui/components/events/ContainerEventHandler eza
	charTyped (CI)Z a
	children ()Ljava/util/List; l
	getChildAt (DD)Ljava/util/Optional; b_
	getCurrentFocusPath ()Lnet/minecraft/client/gui/ComponentPath; aJ_
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; aH_
	handleArrowNavigation (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent$ArrowNavigation;)Lnet/minecraft/client/gui/ComponentPath; a
	handleTabNavigation (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent$TabNavigation;)Lnet/minecraft/client/gui/ComponentPath; a
	isDragging ()Z aG_
	isFocused ()Z aI_
	keyPressed (III)Z a
	keyReleased (III)Z b
	magicalSpecialHackyFocus (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z b
	mouseScrolled (DDDD)Z a
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	nextFocusPathInDirection (Lnet/minecraft/client/gui/navigation/ScreenRectangle;Lnet/minecraft/client/gui/navigation/ScreenDirection;Lnet/minecraft/client/gui/components/events/GuiEventListener;Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	nextFocusPathVaguelyInDirection (Lnet/minecraft/client/gui/navigation/ScreenRectangle;Lnet/minecraft/client/gui/navigation/ScreenDirection;Lnet/minecraft/client/gui/components/events/GuiEventListener;Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; b
	setDragging (Z)V b
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
	setFocused (Z)V a
net/minecraft/client/gui/components/events/GuiEventListener ezb
	DOUBLE_CLICK_THRESHOLD_MS s
	charTyped (CI)Z a
	getCurrentFocusPath ()Lnet/minecraft/client/gui/ComponentPath; aJ_
	getRectangle ()Lnet/minecraft/client/gui/navigation/ScreenRectangle; F
	isFocused ()Z aI_
	isMouseOver (DD)Z c
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseMoved (DD)V f
	mouseReleased (DDI)Z b
	mouseScrolled (DDDD)Z a
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	setFocused (Z)V a
net/minecraft/client/gui/components/spectator/SpectatorGui eze
	FADE_OUT_DELAY c
	FADE_OUT_TIME d
	HOTBAR_SELECTION_SPRITE b
	HOTBAR_SPRITE a
	lastSelectionTime f
	menu g
	minecraft e
	getHotbarAlpha ()F c
	isMenuActive ()Z a
	onHotbarSelected (I)V a
	onMouseMiddleClick ()V b
	onMouseScrolled (I)V b
	onSpectatorMenuClosed (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
	renderHotbar (Lnet/minecraft/client/gui/GuiGraphics;)V a
	renderPage (Lnet/minecraft/client/gui/GuiGraphics;FIILnet/minecraft/client/gui/spectator/categories/SpectatorPage;)V a
	renderSlot (Lnet/minecraft/client/gui/GuiGraphics;IIFFLnet/minecraft/client/gui/spectator/SpectatorMenuItem;)V a
	renderTooltip (Lnet/minecraft/client/gui/GuiGraphics;)V b
net/minecraft/client/gui/components/tabs/GridLayoutTab ezg
	layout a
	title b
	doLayout (Lnet/minecraft/client/gui/navigation/ScreenRectangle;)V a
	getTabTitle ()Lnet/minecraft/network/chat/Component; a
	visitChildren (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/components/tabs/Tab ezh
	doLayout (Lnet/minecraft/client/gui/navigation/ScreenRectangle;)V a
	getTabTitle ()Lnet/minecraft/network/chat/Component; a
	visitChildren (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/components/tabs/TabManager ezi
	addWidget a
	currentTab c
	removeWidget b
	tabArea d
	getCurrentTab ()Lnet/minecraft/client/gui/components/tabs/Tab; a
	setCurrentTab (Lnet/minecraft/client/gui/components/tabs/Tab;Z)V a
	setTabArea (Lnet/minecraft/client/gui/navigation/ScreenRectangle;)V a
net/minecraft/client/gui/components/tabs/TabNavigationBar ezj
	HEIGHT c
	MARGIN d
	MAX_WIDTH b
	NO_TAB a
	USAGE_NARRATION e
	layout f
	tabButtons j
	tabManager h
	tabs i
	width g
	arrangeElements ()V a
	builder (Lnet/minecraft/client/gui/components/tabs/TabManager;I)Lnet/minecraft/client/gui/components/tabs/TabNavigationBar$Builder; a
	children ()Ljava/util/List; l
	currentTabButton ()Lnet/minecraft/client/gui/components/TabButton; c
	currentTabIndex ()I b
	getNextTabIndex (I)I c
	getRectangle ()Lnet/minecraft/client/gui/navigation/ScreenRectangle; F
	keyPressed (I)Z b
	narrateListElementPosition (Lnet/minecraft/client/gui/narration/NarrationElementOutput;Lnet/minecraft/client/gui/components/TabButton;)V a
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; s
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	selectTab (IZ)V a
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
	setFocused (Z)V a
	setWidth (I)V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
net/minecraft/client/gui/components/tabs/TabNavigationBar$Builder ezj$a
	tabManager b
	tabs c
	width a
	addTabs ([Lnet/minecraft/client/gui/components/tabs/Tab;)Lnet/minecraft/client/gui/components/tabs/TabNavigationBar$Builder; a
	build ()Lnet/minecraft/client/gui/components/tabs/TabNavigationBar; a
net/minecraft/client/gui/components/toasts/AdvancementToast ezl
	BACKGROUND_SPRITE d
	DISPLAY_TIME a
	advancement e
	playedSound f
	render (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
net/minecraft/client/gui/components/toasts/RecipeToast ezm
	BACKGROUND_SPRITE a
	DESCRIPTION_TEXT f
	DISPLAY_TIME d
	TITLE_TEXT e
	changed i
	lastChanged h
	recipes g
	addItem (Lnet/minecraft/world/item/crafting/RecipeHolder;)V a
	addOrUpdate (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/world/item/crafting/RecipeHolder;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
net/minecraft/client/gui/components/toasts/SystemToast ezn
	BACKGROUND_SPRITE a
	LINE_SPACING e
	MARGIN f
	MAX_LINE_SIZE d
	changed k
	forceHide m
	id g
	lastChanged j
	messageLines i
	title h
	width l
	add (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastId;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
	addOrUpdate (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastId;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V b
	forceHide ()V c
	forceHide (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastId;)V a
	getToken ()Ljava/lang/Object; e
	getToken ()Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastId; d
	height ()I b
	multiline (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastId;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/toasts/SystemToast; a
	nullToEmpty (Lnet/minecraft/network/chat/Component;)Lcom/google/common/collect/ImmutableList; a
	onPackCopyFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V c
	onWorldAccessFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V a
	onWorldDeleteFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V b
	render (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	renderBackgroundRow (Lnet/minecraft/client/gui/GuiGraphics;IIII)V a
	reset (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
	width ()I a
net/minecraft/client/gui/components/toasts/SystemToast$SystemToastId ezn$a
	NARRATOR_TOGGLE a
	PACK_COPY_FAILURE e
	PACK_LOAD_FAILURE c
	PERIODIC_NOTIFICATION f
	UNSECURE_SERVER_WARNING g
	WORLD_ACCESS_FAILURE d
	WORLD_BACKUP b
	displayTime h
net/minecraft/client/gui/components/toasts/Toast ezo
	NO_TOKEN b
	SLOT_HEIGHT c
	getToken ()Ljava/lang/Object; e
	height ()I b
	render (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	slotCount ()I f
	width ()I a
net/minecraft/client/gui/components/toasts/Toast$Visibility ezo$a
	$VALUES d
	HIDE b
	SHOW a
	soundEvent c
	$values ()[Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	playSound (Lnet/minecraft/client/sounds/SoundManager;)V a
net/minecraft/client/gui/components/toasts/ToastComponent ezp
	NO_SPACE b
	SLOT_COUNT a
	minecraft c
	occupiedSlots e
	queued f
	visible d
	addToast (Lnet/minecraft/client/gui/components/toasts/Toast;)V a
	clear ()V a
	findFreeIndex (I)I a
	freeSlots ()I d
	getMinecraft ()Lnet/minecraft/client/Minecraft; b
	getNotificationDisplayTimeMultiplier ()D c
	getToast (Ljava/lang/Class;Ljava/lang/Object;)Lnet/minecraft/client/gui/components/toasts/Toast; a
	render (Lnet/minecraft/client/gui/GuiGraphics;)V a
net/minecraft/client/gui/components/toasts/ToastComponent$ToastInstance ezp$a
	ANIMATION_TIME b
	animationTime f
	index d
	slotCount e
	toast c
	visibility h
	visibleTime g
	getToast ()Lnet/minecraft/client/gui/components/toasts/Toast; a
	getVisibility (J)F a
	render (ILnet/minecraft/client/gui/GuiGraphics;)Z a
net/minecraft/client/gui/components/toasts/TutorialToast ezq
	BACKGROUND_SPRITE g
	PROGRESS_BAR_HEIGHT d
	PROGRESS_BAR_WIDTH a
	PROGRESS_BAR_X e
	PROGRESS_BAR_Y f
	icon h
	lastProgress m
	lastProgressTime l
	message j
	progress n
	progressable o
	title i
	visibility k
	hide ()V c
	render (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	updateProgress (F)V a
net/minecraft/client/gui/components/toasts/TutorialToast$Icons ezq$a
	$VALUES i
	MOUSE b
	MOVEMENT_KEYS a
	RECIPE_BOOK d
	RIGHT_CLICK g
	SOCIAL_INTERACTIONS f
	TREE c
	WOODEN_PLANKS e
	sprite h
	$values ()[Lnet/minecraft/client/gui/components/toasts/TutorialToast$Icons; a
	render (Lnet/minecraft/client/gui/GuiGraphics;II)V a
net/minecraft/client/gui/font/AllMissingGlyphProvider ezs
	getGlyph (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/client/gui/font/CodepointMap ezt
	BLOCK_BITS a
	BLOCK_COUNT e
	BLOCK_SIZE b
	IN_BLOCK_MASK c
	MAX_BLOCK d
	blockConstructor h
	blockMap g
	empty f
	clear ()V a
	computeIfAbsent (ILjava/util/function/IntFunction;)Ljava/lang/Object; a
	forEach (Lnet/minecraft/client/gui/font/CodepointMap$Output;)V a
	get (I)Ljava/lang/Object; a
	keySet ()Lit/unimi/dsi/fastutil/ints/IntSet; b
	put (ILjava/lang/Object;)Ljava/lang/Object; a
	remove (I)Ljava/lang/Object; b
net/minecraft/client/gui/font/CodepointMap$Output ezt$a
net/minecraft/client/gui/font/FontManager ezu
	FONTS_PATH c
	FONT_DEFINITIONS d
	GSON e
	LOGGER b
	MISSING_FONT a
	fontSets h
	missingFontSet f
	providersToClose g
	renames j
	textureManager i
	apply (Lnet/minecraft/client/gui/font/FontManager$Preparation;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	createFont ()Lnet/minecraft/client/gui/Font; a
	createFontFilterFishy ()Lnet/minecraft/client/gui/Font; b
	finalizeProviderLoading (Ljava/util/List;Lcom/mojang/blaze3d/font/GlyphProvider;)V a
	getActualId (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
	loadResourceStack (Ljava/util/List;Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	resolveProviders (Ljava/util/List;)Ljava/util/Map; a
	safeLoad (Lnet/minecraft/client/gui/font/FontManager$BuilderId;Lnet/minecraft/client/gui/font/providers/GlyphProviderDefinition$Loader;Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	setRenames (Ljava/util/Map;)V a
net/minecraft/client/gui/font/FontManager$BuilderId ezu$a
	fontId a
	index c
	pack b
	fontId ()Lnet/minecraft/resources/ResourceLocation; a
	index ()I c
	pack ()Ljava/lang/String; b
net/minecraft/client/gui/font/FontManager$BuilderResult ezu$b
	id a
	result b
	id ()Lnet/minecraft/client/gui/font/FontManager$BuilderId; a
	resolve (Ljava/util/function/Function;)Ljava/util/Optional; a
	result ()Lcom/mojang/datafixers/util/Either; b
net/minecraft/client/gui/font/FontManager$FontDefinitionFile ezu$c
	CODEC a
	providers b
	providers ()Ljava/util/List; a
net/minecraft/client/gui/font/FontManager$Preparation ezu$d
	allProviders b
	providers a
	allProviders ()Ljava/util/List; b
	providers ()Ljava/util/Map; a
net/minecraft/client/gui/font/FontManager$UnresolvedBuilderBundle ezu$e
	builders b
	dependencies c
	fontId a
	add (Lnet/minecraft/client/gui/font/FontManager$BuilderId;Ljava/util/concurrent/CompletableFuture;)V a
	add (Lnet/minecraft/client/gui/font/FontManager$BuilderId;Lnet/minecraft/client/gui/font/providers/GlyphProviderDefinition$Reference;)V a
	builders ()Ljava/util/List; b
	dependencies ()Ljava/util/Set; c
	fontId ()Lnet/minecraft/resources/ResourceLocation; a
	listBuilders ()Ljava/util/stream/Stream; d
	resolve (Ljava/util/function/Function;)Ljava/util/Optional; a
	visitOptionalDependencies (Ljava/util/function/Consumer;)V b
	visitRequiredDependencies (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/font/FontSet ezv
	LARGE_FORWARD_ADVANCE b
	RANDOM a
	glyphInfos i
	glyphs h
	glyphsByWidth j
	missingGlyph e
	name d
	providers g
	textureManager c
	textures k
	whiteGlyph f
	closeProviders ()V b
	closeTextures ()V c
	computeBakedGlyph (I)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; c
	computeGlyphInfo (I)Lnet/minecraft/client/gui/font/FontSet$GlyphInfoFilter; b
	getGlyph (I)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	getGlyphInfo (IZ)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getRandomGlyph (Lcom/mojang/blaze3d/font/GlyphInfo;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	hasFishyAdvance (Lcom/mojang/blaze3d/font/GlyphInfo;)Z b
	reload (Ljava/util/List;)V a
	stitch (Lcom/mojang/blaze3d/font/SheetGlyphInfo;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	whiteGlyph ()Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
net/minecraft/client/gui/font/FontSet$GlyphInfoFilter ezv$a
	MISSING c
	glyphInfo a
	glyphInfoNotFishy b
	glyphInfo ()Lcom/mojang/blaze3d/font/GlyphInfo; a
	glyphInfoNotFishy ()Lcom/mojang/blaze3d/font/GlyphInfo; b
	select (Z)Lcom/mojang/blaze3d/font/GlyphInfo; a
net/minecraft/client/gui/font/FontTexture ezw
	SIZE e
	colored g
	renderTypes f
	root h
	add (Lcom/mojang/blaze3d/font/SheetGlyphInfo;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	dumpContents (Lnet/minecraft/resources/ResourceLocation;Ljava/nio/file/Path;)V a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/gui/font/FontTexture$Node ezw$a
	height d
	left e
	occupied g
	right f
	width c
	x a
	y b
	insert (Lcom/mojang/blaze3d/font/SheetGlyphInfo;)Lnet/minecraft/client/gui/font/FontTexture$Node; a
net/minecraft/client/gui/font/GlyphRenderTypes ezx
	normal a
	polygonOffset c
	seeThrough b
	createForColorTexture (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/gui/font/GlyphRenderTypes; b
	createForIntensityTexture (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/gui/font/GlyphRenderTypes; a
	normal ()Lnet/minecraft/client/renderer/RenderType; a
	polygonOffset ()Lnet/minecraft/client/renderer/RenderType; c
	seeThrough ()Lnet/minecraft/client/renderer/RenderType; b
	select (Lnet/minecraft/client/gui/Font$DisplayMode;)Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/gui/font/TextFieldHelper ezy
	cursorPos f
	getClipboardFn c
	getMessageFn a
	selectionPos g
	setClipboardFn d
	setMessageFn b
	stringValidator e
	charTyped (C)Z a
	clampToMsgLength (I)I h
	copy ()V c
	createClipboardGetter (Lnet/minecraft/client/Minecraft;)Ljava/util/function/Supplier; a
	createClipboardSetter (Lnet/minecraft/client/Minecraft;)Ljava/util/function/Consumer; c
	cut ()V a
	deleteSelection (Ljava/lang/String;)Ljava/lang/String; c
	getClipboardContents (Lnet/minecraft/client/Minecraft;)Ljava/lang/String; b
	getCursorPos ()I g
	getSelected (Ljava/lang/String;)Ljava/lang/String; b
	getSelectionPos ()I h
	insertText (Ljava/lang/String;)V a
	insertText (Ljava/lang/String;Ljava/lang/String;)V a
	isSelecting ()Z i
	keyPressed (I)Z a
	moveBy (IZLnet/minecraft/client/gui/font/TextFieldHelper$CursorStep;)V a
	moveByChars (I)V b
	moveByChars (IZ)V a
	moveByWords (I)V c
	moveByWords (IZ)V b
	paste ()V b
	removeCharsFromCursor (I)V e
	removeFromCursor (ILnet/minecraft/client/gui/font/TextFieldHelper$CursorStep;)V a
	removeWordsFromCursor (I)V d
	resetSelectionIfNeeded (Z)V c
	selectAll ()V d
	setClipboardContents (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V a
	setCursorPos (I)V f
	setCursorPos (IZ)V c
	setCursorToEnd ()V f
	setCursorToEnd (Z)V b
	setCursorToStart ()V e
	setCursorToStart (Z)V a
	setSelectionPos (I)V g
	setSelectionRange (II)V a
net/minecraft/client/gui/font/TextFieldHelper$CursorStep ezy$a
	$VALUES c
	CHARACTER a
	WORD b
	$values ()[Lnet/minecraft/client/gui/font/TextFieldHelper$CursorStep; a
net/minecraft/client/gui/font/glyphs/BakedGlyph ezz
	down i
	left f
	renderTypes a
	right g
	u0 b
	u1 c
	up h
	v0 d
	v1 e
	render (ZFFLorg/joml/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
	renderEffect (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph$Effect;Lorg/joml/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;I)V a
	renderType (Lnet/minecraft/client/gui/Font$DisplayMode;)Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/gui/font/glyphs/BakedGlyph$Effect ezz$a
	a i
	b h
	depth e
	r f
	x0 a
	x1 c
	y0 b
	y1 d
net/minecraft/client/gui/font/glyphs/EmptyGlyph faa
	INSTANCE a
	render (ZFFLorg/joml/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
net/minecraft/client/gui/font/glyphs/SpecialGlyphs fab
	$VALUES d
	MISSING b
	WHITE a
	image c
	$values ()[Lnet/minecraft/client/gui/font/glyphs/SpecialGlyphs; e
	generate (IILnet/minecraft/client/gui/font/glyphs/SpecialGlyphs$PixelProvider;)Lcom/mojang/blaze3d/platform/NativeImage; a
net/minecraft/client/gui/font/glyphs/SpecialGlyphs$PixelProvider fab$a
net/minecraft/client/gui/font/providers/BitmapProvider fae
	LOGGER a
	glyphs c
	image b
	getGlyph (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/client/gui/font/providers/BitmapProvider$Definition fae$a
	CODEC a
	CODEPOINT_GRID_CODEC g
	ascent e
	codepointGrid f
	file c
	height d
	ascent ()I e
	codepointGrid ()[[I f
	file ()Lnet/minecraft/resources/ResourceLocation; c
	getActualGlyphWidth (Lcom/mojang/blaze3d/platform/NativeImage;IIII)I a
	height ()I d
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
	type ()Lnet/minecraft/client/gui/font/providers/GlyphProviderType; a
	unpack ()Lcom/mojang/datafixers/util/Either; b
	validate (Lnet/minecraft/client/gui/font/providers/BitmapProvider$Definition;)Lcom/mojang/serialization/DataResult; a
	validateDimensions ([[I)Lcom/mojang/serialization/DataResult; a
net/minecraft/client/gui/font/providers/BitmapProvider$Glyph fae$b
	advance g
	ascent h
	height f
	image b
	offsetX c
	offsetY d
	scale a
	width e
	advance ()I i
	ascent ()I j
	height ()I h
	image ()Lcom/mojang/blaze3d/platform/NativeImage; d
	offsetX ()I e
	offsetY ()I f
	scale ()F c
	width ()I g
net/minecraft/client/gui/font/providers/GlyphProviderDefinition faf
	CODEC b
	type ()Lnet/minecraft/client/gui/font/providers/GlyphProviderType; a
	unpack ()Lcom/mojang/datafixers/util/Either; b
net/minecraft/client/gui/font/providers/GlyphProviderDefinition$Loader faf$a
net/minecraft/client/gui/font/providers/GlyphProviderDefinition$Reference faf$b
	id a
	id ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/gui/font/providers/GlyphProviderType fag
	$VALUES i
	BITMAP a
	CODEC f
	REFERENCE e
	SPACE c
	TTF b
	UNIHEX d
	codec h
	name g
	$values ()[Lnet/minecraft/client/gui/font/providers/GlyphProviderType; b
	getSerializedName ()Ljava/lang/String; c
	mapCodec ()Lcom/mojang/serialization/MapCodec; a
net/minecraft/client/gui/font/providers/ProviderReferenceDefinition fah
	CODEC a
	id c
	id ()Lnet/minecraft/resources/ResourceLocation; c
	type ()Lnet/minecraft/client/gui/font/providers/GlyphProviderType; a
	unpack ()Lcom/mojang/datafixers/util/Either; b
net/minecraft/client/gui/font/providers/TrueTypeGlyphProviderDefinition fai
	CODEC a
	SKIP_LIST_CODEC h
	location c
	oversample e
	shift f
	size d
	skip g
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
	location ()Lnet/minecraft/resources/ResourceLocation; c
	oversample ()F e
	shift ()Lnet/minecraft/client/gui/font/providers/TrueTypeGlyphProviderDefinition$Shift; f
	size ()F d
	skip ()Ljava/lang/String; g
	type ()Lnet/minecraft/client/gui/font/providers/GlyphProviderType; a
	unpack ()Lcom/mojang/datafixers/util/Either; b
net/minecraft/client/gui/font/providers/TrueTypeGlyphProviderDefinition$Shift fai$a
	CODEC b
	NONE a
	x c
	y d
	x ()F a
	y ()F b
net/minecraft/client/gui/font/providers/UnihexProvider faj
	DIGITS_FOR_WIDTH_16 e
	DIGITS_FOR_WIDTH_24 f
	DIGITS_FOR_WIDTH_32 g
	DIGITS_FOR_WIDTH_8 d
	DIGITS_PER_BYTE c
	GLYPH_HEIGHT b
	LOGGER a
	glyphs h
	copyUntil (Ljava/io/InputStream;Lit/unimi/dsi/fastutil/bytes/ByteList;I)Z a
	decodeHex (IB)I a
	decodeHex (ILit/unimi/dsi/fastutil/bytes/ByteList;I)I a
	getGlyph (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
	readFromStream (Ljava/io/InputStream;Lnet/minecraft/client/gui/font/providers/UnihexProvider$ReaderOutput;)V a
	unpackBitsToBytes (Ljava/nio/IntBuffer;III)V a
	unpackBitsToBytes (Ljava/nio/IntBuffer;Lnet/minecraft/client/gui/font/providers/UnihexProvider$LineData;II)V a
net/minecraft/client/gui/font/providers/UnihexProvider$ByteContents faj$a
	contents a
	bitWidth ()I a
	contents ()[B b
	line (I)I a
	read (ILit/unimi/dsi/fastutil/bytes/ByteList;)Lnet/minecraft/client/gui/font/providers/UnihexProvider$LineData; a
net/minecraft/client/gui/font/providers/UnihexProvider$Definition faj$b
	CODEC a
	hexFile c
	sizeOverrides d
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
	loadData (Ljava/io/InputStream;)Lnet/minecraft/client/gui/font/providers/UnihexProvider; a
	type ()Lnet/minecraft/client/gui/font/providers/GlyphProviderType; a
	unpack ()Lcom/mojang/datafixers/util/Either; b
net/minecraft/client/gui/font/providers/UnihexProvider$Dimensions faj$c
	CODEC b
	MAP_CODEC a
	left c
	right d
	left ()I b
	left (I)I a
	pack ()I a
	pack (II)I a
	right ()I c
	right (I)I b
net/minecraft/client/gui/font/providers/UnihexProvider$Glyph faj$d
	contents a
	left b
	right c
	contents ()Lnet/minecraft/client/gui/font/providers/UnihexProvider$LineData; d
	getBoldOffset ()F a
	getShadowOffset ()F b
	left ()I e
	right ()I f
	width ()I c
net/minecraft/client/gui/font/providers/UnihexProvider$IntContents faj$e
	SIZE_24 c
	bitWidth b
	contents a
	bitWidth ()I a
	contents ()[I b
	line (I)I a
	read24 (ILit/unimi/dsi/fastutil/bytes/ByteList;)Lnet/minecraft/client/gui/font/providers/UnihexProvider$LineData; b
	read32 (ILit/unimi/dsi/fastutil/bytes/ByteList;)Lnet/minecraft/client/gui/font/providers/UnihexProvider$LineData; a
net/minecraft/client/gui/font/providers/UnihexProvider$LineData faj$f
	bitWidth ()I a
	calculateWidth ()I d
	line (I)I a
	mask ()I c
net/minecraft/client/gui/font/providers/UnihexProvider$OverrideRange faj$g
	CODEC a
	RAW_CODEC e
	dimensions d
	from b
	to c
	dimensions ()Lnet/minecraft/client/gui/font/providers/UnihexProvider$Dimensions; c
	from ()I a
	to ()I b
net/minecraft/client/gui/font/providers/UnihexProvider$ReaderOutput faj$h
net/minecraft/client/gui/font/providers/UnihexProvider$ShortContents faj$i
	contents a
	bitWidth ()I a
	contents ()[S b
	line (I)I a
	read (ILit/unimi/dsi/fastutil/bytes/ByteList;)Lnet/minecraft/client/gui/font/providers/UnihexProvider$LineData; a
net/minecraft/client/gui/layouts/AbstractLayout fal
	height b
	width a
	x c
	y d
	getHeight ()I u
	getWidth ()I w
	getX ()I B
	getY ()I C
	setX (I)V n
	setY (I)V o
net/minecraft/client/gui/layouts/AbstractLayout$AbstractChildWrapper fal$a
	child a
	layoutSettings b
	getHeight ()I a
	getWidth ()I b
	setX (II)V a
	setY (II)V b
net/minecraft/client/gui/layouts/CommonLayouts fam
	LABEL_SPACING a
	labeledElement (Lnet/minecraft/client/gui/Font;Lnet/minecraft/client/gui/layouts/LayoutElement;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/layouts/Layout; a
	labeledElement (Lnet/minecraft/client/gui/Font;Lnet/minecraft/client/gui/layouts/LayoutElement;Lnet/minecraft/network/chat/Component;Ljava/util/function/Consumer;)Lnet/minecraft/client/gui/layouts/Layout; a
net/minecraft/client/gui/layouts/EqualSpacingLayout fan
	children d
	defaultChildLayoutSettings e
	orientation c
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;Ljava/util/function/Consumer;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;Lnet/minecraft/client/gui/layouts/LayoutSettings;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	arrangeElements ()V a
	defaultChildLayoutSetting ()Lnet/minecraft/client/gui/layouts/LayoutSettings; c
	newChildLayoutSettings ()Lnet/minecraft/client/gui/layouts/LayoutSettings; b
	visitChildren (Ljava/util/function/Consumer;)V b
net/minecraft/client/gui/layouts/EqualSpacingLayout$ChildContainer fan$a
net/minecraft/client/gui/layouts/EqualSpacingLayout$Orientation fan$b
	$VALUES c
	HORIZONTAL a
	VERTICAL b
	$values ()[Lnet/minecraft/client/gui/layouts/EqualSpacingLayout$Orientation; a
	getPrimaryLength (Lnet/minecraft/client/gui/layouts/EqualSpacingLayout$ChildContainer;)I a
	getPrimaryLength (Lnet/minecraft/client/gui/layouts/LayoutElement;)I a
	getPrimaryPosition (Lnet/minecraft/client/gui/layouts/LayoutElement;)I c
	getSecondaryLength (Lnet/minecraft/client/gui/layouts/EqualSpacingLayout$ChildContainer;)I b
	getSecondaryLength (Lnet/minecraft/client/gui/layouts/LayoutElement;)I b
	getSecondaryPosition (Lnet/minecraft/client/gui/layouts/LayoutElement;)I d
	setPrimaryPosition (Lnet/minecraft/client/gui/layouts/EqualSpacingLayout$ChildContainer;I)V a
	setSecondaryPosition (Lnet/minecraft/client/gui/layouts/EqualSpacingLayout$ChildContainer;II)V a
net/minecraft/client/gui/layouts/FrameLayout fao
	children c
	defaultChildLayoutSettings f
	minHeight e
	minWidth d
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;Ljava/util/function/Consumer;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;Lnet/minecraft/client/gui/layouts/LayoutSettings;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	alignInDimension (IIILjava/util/function/Consumer;F)V a
	alignInRectangle (Lnet/minecraft/client/gui/layouts/LayoutElement;IIIIFF)V a
	alignInRectangle (Lnet/minecraft/client/gui/layouts/LayoutElement;Lnet/minecraft/client/gui/navigation/ScreenRectangle;FF)V a
	arrangeElements ()V a
	centerInRectangle (Lnet/minecraft/client/gui/layouts/LayoutElement;IIII)V a
	centerInRectangle (Lnet/minecraft/client/gui/layouts/LayoutElement;Lnet/minecraft/client/gui/navigation/ScreenRectangle;)V a
	defaultChildLayoutSetting ()Lnet/minecraft/client/gui/layouts/LayoutSettings; c
	newChildLayoutSettings ()Lnet/minecraft/client/gui/layouts/LayoutSettings; b
	setMinDimensions (II)Lnet/minecraft/client/gui/layouts/FrameLayout; a
	setMinHeight (I)Lnet/minecraft/client/gui/layouts/FrameLayout; a
	setMinWidth (I)Lnet/minecraft/client/gui/layouts/FrameLayout; b
	visitChildren (Ljava/util/function/Consumer;)V b
net/minecraft/client/gui/layouts/FrameLayout$ChildContainer fao$a
net/minecraft/client/gui/layouts/GridLayout fap
	cellInhabitants d
	children c
	columnSpacing g
	defaultCellSettings e
	rowSpacing f
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;II)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;IIII)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;IIIILjava/util/function/Consumer;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;IIIILnet/minecraft/client/gui/layouts/LayoutSettings;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;IILjava/util/function/Consumer;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;IILnet/minecraft/client/gui/layouts/LayoutSettings;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	arrangeElements ()V a
	columnSpacing (I)Lnet/minecraft/client/gui/layouts/GridLayout; a
	createRowHelper (I)Lnet/minecraft/client/gui/layouts/GridLayout$RowHelper; d
	defaultCellSetting ()Lnet/minecraft/client/gui/layouts/LayoutSettings; c
	newCellSettings ()Lnet/minecraft/client/gui/layouts/LayoutSettings; b
	rowSpacing (I)Lnet/minecraft/client/gui/layouts/GridLayout; b
	spacing (I)Lnet/minecraft/client/gui/layouts/GridLayout; c
	visitChildren (Ljava/util/function/Consumer;)V b
net/minecraft/client/gui/layouts/GridLayout$CellInhabitant fap$a
	column d
	occupiedColumns f
	occupiedRows e
	row c
	getLastOccupiedColumn ()I d
	getLastOccupiedRow ()I c
net/minecraft/client/gui/layouts/GridLayout$RowHelper fap$b
	columns b
	index c
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;I)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;ILnet/minecraft/client/gui/layouts/LayoutSettings;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;Lnet/minecraft/client/gui/layouts/LayoutSettings;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	defaultCellSetting ()Lnet/minecraft/client/gui/layouts/LayoutSettings; c
	getGrid ()Lnet/minecraft/client/gui/layouts/GridLayout; a
	newCellSettings ()Lnet/minecraft/client/gui/layouts/LayoutSettings; b
net/minecraft/client/gui/layouts/HeaderAndFooterLayout faq
	CONTENT_MARGIN_TOP b
	DEFAULT_HEADER_AND_FOOTER_HEIGHT a
	contentsFrame e
	footerFrame d
	footerHeight h
	headerFrame c
	headerHeight g
	screen f
	addToContents (Lnet/minecraft/client/gui/layouts/LayoutElement;)Lnet/minecraft/client/gui/layouts/LayoutElement; c
	addToContents (Lnet/minecraft/client/gui/layouts/LayoutElement;Ljava/util/function/Consumer;)Lnet/minecraft/client/gui/layouts/LayoutElement; c
	addToFooter (Lnet/minecraft/client/gui/layouts/LayoutElement;)Lnet/minecraft/client/gui/layouts/LayoutElement; b
	addToFooter (Lnet/minecraft/client/gui/layouts/LayoutElement;Ljava/util/function/Consumer;)Lnet/minecraft/client/gui/layouts/LayoutElement; b
	addToHeader (Lnet/minecraft/client/gui/layouts/LayoutElement;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addToHeader (Lnet/minecraft/client/gui/layouts/LayoutElement;Ljava/util/function/Consumer;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	arrangeElements ()V a
	getFooterHeight ()I b
	getHeaderHeight ()I c
	getHeight ()I u
	getWidth ()I w
	getX ()I B
	getY ()I C
	setFooterHeight (I)V a
	setHeaderHeight (I)V b
	setX (I)V n
	setY (I)V o
	visitChildren (Ljava/util/function/Consumer;)V b
net/minecraft/client/gui/layouts/Layout far
	arrangeElements ()V a
	visitChildren (Ljava/util/function/Consumer;)V b
	visitWidgets (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/layouts/LayoutElement fas
	getHeight ()I u
	getRectangle ()Lnet/minecraft/client/gui/navigation/ScreenRectangle; F
	getWidth ()I w
	getX ()I B
	getY ()I C
	setPosition (II)V c
	setX (I)V n
	setY (I)V o
	visitWidgets (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/layouts/LayoutSettings fat
	align (FF)Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	alignHorizontally (F)Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	alignHorizontallyCenter ()Lnet/minecraft/client/gui/layouts/LayoutSettings; b
	alignHorizontallyLeft ()Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	alignHorizontallyRight ()Lnet/minecraft/client/gui/layouts/LayoutSettings; c
	alignVertically (F)Lnet/minecraft/client/gui/layouts/LayoutSettings; b
	alignVerticallyBottom ()Lnet/minecraft/client/gui/layouts/LayoutSettings; f
	alignVerticallyMiddle ()Lnet/minecraft/client/gui/layouts/LayoutSettings; e
	alignVerticallyTop ()Lnet/minecraft/client/gui/layouts/LayoutSettings; d
	copy ()Lnet/minecraft/client/gui/layouts/LayoutSettings; g
	defaults ()Lnet/minecraft/client/gui/layouts/LayoutSettings; i
	getExposed ()Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; h
	padding (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	padding (II)Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	padding (IIII)Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	paddingBottom (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; e
	paddingHorizontal (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; f
	paddingLeft (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; b
	paddingRight (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; d
	paddingTop (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; c
	paddingVertical (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; g
net/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl fat$a
	paddingBottom d
	paddingLeft a
	paddingRight c
	paddingTop b
	xAlignment e
	yAlignment f
	align (FF)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; b
	align (FF)Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	alignHorizontally (F)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; c
	alignHorizontally (F)Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	alignVertically (F)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; d
	alignVertically (F)Lnet/minecraft/client/gui/layouts/LayoutSettings; b
	copy ()Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; j
	copy ()Lnet/minecraft/client/gui/layouts/LayoutSettings; g
	getExposed ()Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; h
	padding (I)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; h
	padding (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	padding (II)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; b
	padding (II)Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	padding (IIII)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; b
	padding (IIII)Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	paddingBottom (I)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; l
	paddingBottom (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; e
	paddingHorizontal (I)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; m
	paddingHorizontal (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; f
	paddingLeft (I)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; i
	paddingLeft (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; b
	paddingRight (I)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; k
	paddingRight (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; d
	paddingTop (I)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; j
	paddingTop (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; c
	paddingVertical (I)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; n
	paddingVertical (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; g
net/minecraft/client/gui/layouts/LinearLayout fau
	nextChildIndex c
	orientation b
	wrapped a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;Ljava/util/function/Consumer;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;Lnet/minecraft/client/gui/layouts/LayoutSettings;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	arrangeElements ()V a
	defaultCellSetting ()Lnet/minecraft/client/gui/layouts/LayoutSettings; c
	getHeight ()I u
	getWidth ()I w
	getX ()I B
	getY ()I C
	horizontal ()Lnet/minecraft/client/gui/layouts/LinearLayout; e
	newCellSettings ()Lnet/minecraft/client/gui/layouts/LayoutSettings; b
	setX (I)V n
	setY (I)V o
	spacing (I)Lnet/minecraft/client/gui/layouts/LinearLayout; a
	vertical ()Lnet/minecraft/client/gui/layouts/LinearLayout; d
	visitChildren (Ljava/util/function/Consumer;)V b
net/minecraft/client/gui/layouts/LinearLayout$Orientation fau$a
	$VALUES c
	HORIZONTAL a
	VERTICAL b
	$values ()[Lnet/minecraft/client/gui/layouts/LinearLayout$Orientation; a
	addChild (Lnet/minecraft/client/gui/layouts/GridLayout;Lnet/minecraft/client/gui/layouts/LayoutElement;ILnet/minecraft/client/gui/layouts/LayoutSettings;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	setSpacing (Lnet/minecraft/client/gui/layouts/GridLayout;I)V a
net/minecraft/client/gui/layouts/SpacerElement fav
	height d
	width c
	x a
	y b
	getHeight ()I u
	getWidth ()I w
	getX ()I B
	getY ()I C
	height (I)Lnet/minecraft/client/gui/layouts/SpacerElement; b
	setX (I)V n
	setY (I)V o
	visitWidgets (Ljava/util/function/Consumer;)V a
	width (I)Lnet/minecraft/client/gui/layouts/SpacerElement; a
net/minecraft/client/gui/narration/NarratableEntry fax
	isActive ()Z A
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; s
net/minecraft/client/gui/narration/NarratableEntry$NarrationPriority fax$a
	$VALUES d
	FOCUSED c
	HOVERED b
	NONE a
	$values ()[Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; b
	isTerminal ()Z a
net/minecraft/client/gui/narration/NarratedElementType fay
	$VALUES e
	HINT c
	POSITION b
	TITLE a
	USAGE d
	$values ()[Lnet/minecraft/client/gui/narration/NarratedElementType; a
net/minecraft/client/gui/narration/NarrationElementOutput faz
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;Ljava/lang/String;)V a
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;Lnet/minecraft/client/gui/narration/NarrationThunk;)V a
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;Lnet/minecraft/network/chat/Component;)V a
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;[Lnet/minecraft/network/chat/Component;)V a
	nest ()Lnet/minecraft/client/gui/narration/NarrationElementOutput; a
net/minecraft/client/gui/narration/NarrationSupplier fba
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
net/minecraft/client/gui/narration/NarrationThunk fbb
	EMPTY a
	contents b
	converter c
	from (Ljava/lang/String;)Lnet/minecraft/client/gui/narration/NarrationThunk; a
	from (Ljava/util/List;)Lnet/minecraft/client/gui/narration/NarrationThunk; a
	from (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/narration/NarrationThunk; a
	getText (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/narration/ScreenNarrationCollector fbc
	entries b
	generation a
	collectNarrationText (Z)Ljava/lang/String; a
	update (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/narration/ScreenNarrationCollector$EntryKey fbc$a
	depth b
	type a
net/minecraft/client/gui/narration/ScreenNarrationCollector$NarrationEntry fbc$b
	alreadyNarrated c
	contents a
	generation b
	update (ILnet/minecraft/client/gui/narration/NarrationThunk;)Lnet/minecraft/client/gui/narration/ScreenNarrationCollector$NarrationEntry; a
net/minecraft/client/gui/narration/ScreenNarrationCollector$Output fbc$c
	depth b
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;Lnet/minecraft/client/gui/narration/NarrationThunk;)V a
	nest ()Lnet/minecraft/client/gui/narration/NarrationElementOutput; a
net/minecraft/client/gui/navigation/CommonInputs fbe
	selected (I)Z a
net/minecraft/client/gui/navigation/FocusNavigationEvent fbf
	getVerticalDirectionForInitialFocus ()Lnet/minecraft/client/gui/navigation/ScreenDirection; a
net/minecraft/client/gui/navigation/FocusNavigationEvent$ArrowNavigation fbf$a
	direction a
	direction ()Lnet/minecraft/client/gui/navigation/ScreenDirection; b
	getVerticalDirectionForInitialFocus ()Lnet/minecraft/client/gui/navigation/ScreenDirection; a
net/minecraft/client/gui/navigation/FocusNavigationEvent$InitialFocus fbf$b
	getVerticalDirectionForInitialFocus ()Lnet/minecraft/client/gui/navigation/ScreenDirection; a
net/minecraft/client/gui/navigation/FocusNavigationEvent$TabNavigation fbf$c
	forward a
	forward ()Z b
	getVerticalDirectionForInitialFocus ()Lnet/minecraft/client/gui/navigation/ScreenDirection; a
net/minecraft/client/gui/navigation/ScreenAxis fbg
	$VALUES c
	HORIZONTAL a
	VERTICAL b
	$values ()[Lnet/minecraft/client/gui/navigation/ScreenAxis; d
	getDirection (Z)Lnet/minecraft/client/gui/navigation/ScreenDirection; a
	getNegative ()Lnet/minecraft/client/gui/navigation/ScreenDirection; c
	getPositive ()Lnet/minecraft/client/gui/navigation/ScreenDirection; b
	orthogonal ()Lnet/minecraft/client/gui/navigation/ScreenAxis; a
net/minecraft/client/gui/navigation/ScreenDirection fbh
	$VALUES f
	DOWN b
	LEFT c
	RIGHT d
	UP a
	coordinateValueComparator e
	$values ()[Lnet/minecraft/client/gui/navigation/ScreenDirection; e
	coordinateValueComparator ()Lit/unimi/dsi/fastutil/ints/IntComparator; d
	getAxis ()Lnet/minecraft/client/gui/navigation/ScreenAxis; a
	getOpposite ()Lnet/minecraft/client/gui/navigation/ScreenDirection; b
	isAfter (II)Z a
	isBefore (II)Z b
	isPositive ()Z c
net/minecraft/client/gui/navigation/ScreenPosition fbi
	x a
	y b
	getCoordinate (Lnet/minecraft/client/gui/navigation/ScreenAxis;)I a
	of (Lnet/minecraft/client/gui/navigation/ScreenAxis;II)Lnet/minecraft/client/gui/navigation/ScreenPosition; a
	step (Lnet/minecraft/client/gui/navigation/ScreenDirection;)Lnet/minecraft/client/gui/navigation/ScreenPosition; a
	x ()I a
	y ()I b
net/minecraft/client/gui/navigation/ScreenRectangle fbj
	EMPTY d
	height c
	position a
	width b
	bottom ()I c
	empty ()Lnet/minecraft/client/gui/navigation/ScreenRectangle; a
	getBorder (Lnet/minecraft/client/gui/navigation/ScreenDirection;)Lnet/minecraft/client/gui/navigation/ScreenRectangle; c
	getBoundInDirection (Lnet/minecraft/client/gui/navigation/ScreenDirection;)I b
	getCenterInAxis (Lnet/minecraft/client/gui/navigation/ScreenAxis;)I b
	getLength (Lnet/minecraft/client/gui/navigation/ScreenAxis;)I a
	height ()I h
	intersection (Lnet/minecraft/client/gui/navigation/ScreenRectangle;)Lnet/minecraft/client/gui/navigation/ScreenRectangle; b
	left ()I d
	of (Lnet/minecraft/client/gui/navigation/ScreenAxis;IIII)Lnet/minecraft/client/gui/navigation/ScreenRectangle; a
	overlaps (Lnet/minecraft/client/gui/navigation/ScreenRectangle;)Z a
	overlapsInAxis (Lnet/minecraft/client/gui/navigation/ScreenRectangle;Lnet/minecraft/client/gui/navigation/ScreenAxis;)Z a
	position ()Lnet/minecraft/client/gui/navigation/ScreenPosition; f
	right ()I e
	step (Lnet/minecraft/client/gui/navigation/ScreenDirection;)Lnet/minecraft/client/gui/navigation/ScreenRectangle; a
	top ()I b
	width ()I g
net/minecraft/client/gui/screens/AccessibilityOnboardingScreen fbm
	ONBOARDING_NARRATOR_MESSAGE a
	PADDING b
	TITLE_PADDING c
	hasNarrated o
	logoRenderer l
	narratorAvailable n
	onClose q
	options m
	panorama k
	textWidget r
	timer p
	close (Ljava/lang/Runnable;)V a
	closeAndSetScreen (Lnet/minecraft/client/gui/screens/Screen;)V a
	handleInitialNarrationDelay ()V D
	init ()V aN_
	initTitleYPos ()I n
	onClose ()V aE_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/screens/AccessibilityOptionsScreen fbn
	createFooter ()V i
	init ()V aN_
	options (Lnet/minecraft/client/Options;)[Lnet/minecraft/client/OptionInstance; a
net/minecraft/client/gui/screens/AlertScreen fbo
	LABEL_Y a
	callback k
	message c
	messageText b
	okButton l
	shouldCloseOnEsc m
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldCloseOnEsc ()Z aL_
net/minecraft/client/gui/screens/BackupConfirmScreen fbp
	description k
	eraseCache n
	id b
	message m
	onCancel c
	onProceed a
	promptForCacheErase l
	init ()V aN_
	keyPressed (III)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldCloseOnEsc ()Z aL_
net/minecraft/client/gui/screens/BackupConfirmScreen$Listener fbp$a
net/minecraft/client/gui/screens/BanNoticeScreens fbq
	NAME_BAN_TITLE a
	PERMANENT_BAN_TITLE c
	SKIN_BAN_DESCRIPTION e
	SKIN_BAN_TITLE d
	TEMPORARY_BAN_TITLE b
	create (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/client/gui/screens/ConfirmLinkScreen; a
	createNameBan (Ljava/lang/String;Ljava/lang/Runnable;)Lnet/minecraft/client/gui/screens/ConfirmLinkScreen; a
	createSkinBan (Ljava/lang/Runnable;)Lnet/minecraft/client/gui/screens/ConfirmLinkScreen; a
	getBanDurationText (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/Component; e
	getBanReasonText (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/Component; c
	getBanStatusText (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/Component; d
	getBannedScreenText (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/Component; b
	getBannedTitle (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/Component; a
	isTemporaryBan (Lcom/mojang/authlib/minecraft/BanDetails;)Z f
net/minecraft/client/gui/screens/ChatOptionsScreen fbr
net/minecraft/client/gui/screens/ChatScreen fbs
	MOUSE_SCROLL_SPEED a
	TOOLTIP_MAX_WIDTH k
	USAGE_TEXT c
	commandSuggestions o
	historyBuffer l
	historyPos m
	initial n
	input b
	getComponentStyleAt (DD)Lnet/minecraft/network/chat/Style; b
	handleChatInput (Ljava/lang/String;Z)Z b
	init ()V aN_
	insertText (Ljava/lang/String;Z)V a_
	isPauseScreen ()Z k
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (DDDD)Z a
	moveInHistory (I)V a
	normalizeChatMessage (Ljava/lang/String;)Ljava/lang/String; a
	onEdited (Ljava/lang/String;)V b
	removed ()V j
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	resize (Lnet/minecraft/client/Minecraft;II)V a
	setChatLine (Ljava/lang/String;)V c
	updateNarrationState (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/ConfirmLinkScreen fbt
	COPY_BUTTON_TEXT k
	WARNING_TEXT l
	showWarning n
	url m
	addButtons (I)V a
	confirmLink (Lnet/minecraft/client/gui/screens/Screen;Ljava/lang/String;)Lnet/minecraft/client/gui/components/Button$OnPress; b
	confirmLinkNow (Lnet/minecraft/client/gui/screens/Screen;Ljava/lang/String;)V a
	confirmMessage (Z)Lnet/minecraft/network/chat/MutableComponent; c
	confirmMessage (ZLjava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; a
	copyToClipboard ()V m
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/client/gui/screens/ConfirmScreen fbu
	MARGIN k
	callback c
	delayTicker n
	exitButtons o
	message l
	multilineMessage m
	noButton b
	yesButton a
	addButtons (I)V a
	addExitButton (Lnet/minecraft/client/gui/components/Button;)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	keyPressed (III)Z a
	messageHeight ()I E
	messageTop ()I D
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	setDelay (I)V b
	shouldCloseOnEsc ()Z aL_
	tick ()V d
	titleTop ()I n
net/minecraft/client/gui/screens/ConnectScreen fbv
	ABORT_CONNECTION a
	LOGGER k
	NARRATION_DELAY_MS l
	UNIQUE_THREAD_ID c
	UNKNOWN_HOST_MESSAGE b
	aborted o
	channelFuture n
	connectFailedTitle t
	connection m
	lastNarration r
	parent p
	status q
	connect (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/multiplayer/resolver/ServerAddress;Lnet/minecraft/client/multiplayer/ServerData;)V a
	init ()V aN_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldCloseOnEsc ()Z aL_
	startConnecting (Lnet/minecraft/client/gui/screens/Screen;Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/multiplayer/resolver/ServerAddress;Lnet/minecraft/client/multiplayer/ServerData;Z)V a
	tick ()V d
	updateStatus (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/client/gui/screens/CreateBuffetWorldScreen fbw
	BIOME_SELECT_INFO a
	applySettings c
	biome m
	biomes k
	doneButton n
	list l
	parent b
	init ()V aN_
	onClose ()V aE_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	updateButtonValidity ()V n
net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList fbw$a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry;)V a
net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry fbw$a$a
	biome b
	name c
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/CreateFlatWorldScreen fbx
	SLOT_BG_SIZE c
	SLOT_BG_X l
	SLOT_BG_Y m
	SLOT_FG_X n
	SLOT_FG_Y o
	SLOT_SPRITE b
	SLOT_STAT_HEIGHT k
	applySettings p
	columnHeight t
	columnType r
	deleteLayerButton v
	generator q
	list u
	parent a
	hasValidSelection ()Z D
	init ()V aN_
	onClose ()V aE_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	setConfig (Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)V a
	settings ()Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; m
	updateButtonValidity ()V n
net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList fbx$a
	getScrollbarPosition ()I c
	resetRows ()V d
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry;)V a
net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry fbx$a$a
	blitSlot (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/world/item/ItemStack;)V a
	blitSlotBg (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	getDisplayItem (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/CreditsAndAttributionScreen fby
	ATTRIBUTION_BUTTON l
	BUTTON_SPACING a
	BUTTON_WIDTH b
	CREDITS_BUTTON k
	LICENSES_BUTTON m
	TITLE c
	lastScreen n
	layout o
	init ()V aN_
	onClose ()V aE_
	openCreditsScreen ()V n
	repositionElements ()V c
net/minecraft/client/gui/screens/DatapackLoadFailureScreen fbz
	cancelCallback b
	message a
	safeModeCallback c
	init ()V aN_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldCloseOnEsc ()Z aL_
net/minecraft/client/gui/screens/DeathScreen fca
	DRAFT_REPORT_SPRITE a
	causeOfDeath c
	deathScore l
	delayTicker b
	exitButtons m
	exitToTitleButton n
	hardcore k
	exitToTitleScreen ()V D
	getClickedComponentStyleAt (I)Lnet/minecraft/network/chat/Style; a
	handleExitToTitleScreen ()V n
	init ()V aN_
	isPauseScreen ()Z k
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setButtonsActive (Z)V c
	shouldCloseOnEsc ()Z aL_
	tick ()V d
net/minecraft/client/gui/screens/DeathScreen$TitleConfirmScreen fca$a
net/minecraft/client/gui/screens/DemoIntroScreen fcb
	DEMO_BACKGROUND_LOCATION a
	durationMessage c
	movementMessage b
	init ()V aN_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/screens/DirectJoinServerScreen fcc
	ENTER_IP_LABEL a
	callback l
	ipEdit k
	lastScreen m
	selectButton b
	serverData c
	init ()V aN_
	keyPressed (III)Z a
	onClose ()V aE_
	onSelect ()V n
	removed ()V j
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	updateSelectButtonStatus ()V D
net/minecraft/client/gui/screens/DisconnectedScreen fcd
	TO_SERVER_LIST a
	TO_TITLE b
	buttonText l
	layout m
	parent c
	reason k
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	repositionElements ()V c
	shouldCloseOnEsc ()Z aL_
net/minecraft/client/gui/screens/EditServerScreen fce
	IP_LABEL b
	NAME_LABEL a
	addButton c
	callback k
	ipEdit m
	lastScreen o
	nameEdit n
	serverData l
	init ()V aN_
	onAdd ()V n
	onClose ()V aE_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	updateAddButtonStatus ()V D
net/minecraft/client/gui/screens/ErrorScreen fcf
	message a
	init ()V aN_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	shouldCloseOnEsc ()Z aL_
net/minecraft/client/gui/screens/FaviconTexture fcg
	HEIGHT c
	MISSING_LOCATION a
	WIDTH b
	closed g
	texture f
	textureLocation e
	textureManager d
	checkOpen ()V c
	clear ()V a
	forServer (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/lang/String;)Lnet/minecraft/client/gui/screens/FaviconTexture; b
	forWorld (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/lang/String;)Lnet/minecraft/client/gui/screens/FaviconTexture; a
	textureLocation ()Lnet/minecraft/resources/ResourceLocation; b
	upload (Lcom/mojang/blaze3d/platform/NativeImage;)V a
net/minecraft/client/gui/screens/GenericDirtMessageScreen fch
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	shouldCloseOnEsc ()Z aL_
	shouldNarrateNavigation ()Z aM_
net/minecraft/client/gui/screens/GenericWaitingScreen fci
	MESSAGE_MAX_WIDTH c
	MESSAGE_Y b
	TITLE_Y a
	button o
	buttonCallback m
	buttonLabel l
	disableButtonTicks p
	message n
	messageText k
	createCompleted (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Ljava/lang/Runnable;)Lnet/minecraft/client/gui/screens/GenericWaitingScreen; a
	createWaiting (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Ljava/lang/Runnable;)Lnet/minecraft/client/gui/screens/GenericWaitingScreen; a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	onClose ()V aE_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldCloseOnEsc ()Z aL_
	tick ()V d
net/minecraft/client/gui/screens/InBedChatScreen fcj
	leaveBedButton c
	charTyped (CI)Z a
	init ()V aN_
	keyPressed (III)Z a
	onClose ()V aE_
	onPlayerWokeUp ()V n
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	sendWakeUp ()V D
net/minecraft/client/gui/screens/LanguageSelectScreen fck
	WARNING_LABEL c
	languageManager l
	packSelectionList k
	init ()V aN_
	keyPressed (III)Z a
	onDone ()V n
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList fck$a
	getRowWidth ()I b
	getScrollbarPosition ()I c
net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList$Entry fck$a$a
	code b
	language c
	lastClickTime d
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	select ()V b
net/minecraft/client/gui/screens/LevelLoadingScreen fcl
	COLORS l
	NARRATION_DELAY_MS a
	done k
	lastNarration c
	progressListener b
	getFormattedProgress ()Lnet/minecraft/network/chat/Component; n
	removed ()V j
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderChunks (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/server/level/progress/StoringChunkProgressListener;IIII)V a
	shouldCloseOnEsc ()Z aL_
	shouldNarrateNavigation ()Z aM_
	updateNarratedWidget (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
net/minecraft/client/gui/screens/LoadingDotsText fcm
	FRAMES a
	INTERVAL_MS b
	get (J)Ljava/lang/String; a
net/minecraft/client/gui/screens/LoadingOverlay fcn
	BRAND_BACKGROUND f
	FADE_IN_TIME b
	FADE_OUT_TIME a
	LOGO_BACKGROUND_COLOR d
	LOGO_BACKGROUND_COLOR_DARK e
	LOGO_HALF j
	LOGO_OVERLAP k
	LOGO_QUARTER i
	LOGO_QUARTER_FLOAT h
	LOGO_SCALE g
	MOJANG_STUDIOS_LOGO_LOCATION c
	SMOOTHING l
	currentProgress q
	fadeIn p
	fadeInStart s
	fadeOutStart r
	minecraft m
	onFinish o
	reload n
	drawProgressBar (Lnet/minecraft/client/gui/GuiGraphics;IIIIF)V a
	isPauseScreen ()Z a
	registerTextures (Lnet/minecraft/client/Minecraft;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	replaceAlpha (II)I a
net/minecraft/client/gui/screens/LoadingOverlay$LogoTexture fcn$a
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
net/minecraft/client/gui/screens/MenuScreens fco
	LOGGER a
	SCREENS b
	create (Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/Minecraft;ILnet/minecraft/network/chat/Component;)V a
	getConstructor (Lnet/minecraft/world/inventory/MenuType;)Lnet/minecraft/client/gui/screens/MenuScreens$ScreenConstructor; a
	register (Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/gui/screens/MenuScreens$ScreenConstructor;)V a
	selfTest ()Z a
net/minecraft/client/gui/screens/MenuScreens$ScreenConstructor fco$a
	fromPacket (Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/Minecraft;I)V a
net/minecraft/client/gui/screens/MouseSettingsScreen fcp
	list c
	init ()V aN_
	options (Lnet/minecraft/client/Options;)[Lnet/minecraft/client/OptionInstance; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/screens/NoticeWithLinkScreen fcq
	SYMLINK_PACK_MESSAGE_TEXT k
	SYMLINK_PACK_TITLE c
	SYMLINK_WORLD_MESSAGE_TEXT b
	SYMLINK_WORLD_TITLE a
	layout o
	message l
	onClose n
	url m
	createPackSymlinkWarningScreen (Ljava/lang/Runnable;)Lnet/minecraft/client/gui/screens/Screen; b
	createWorldSymlinkWarningScreen (Ljava/lang/Runnable;)Lnet/minecraft/client/gui/screens/Screen; a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	onClose ()V aE_
	repositionElements ()V c
net/minecraft/client/gui/screens/OnlineOptionsScreen fcr
	difficultyDisplay l
	createOnlineOptionsScreen (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/Screen;Lnet/minecraft/client/Options;)Lnet/minecraft/client/gui/screens/OnlineOptionsScreen; a
	init ()V aN_
net/minecraft/client/gui/screens/OptionsScreen fcs
	ACCESSIBILITY o
	CHAT m
	COLUMNS r
	CONTROLS k
	CREDITS_AND_ATTRIBUTION q
	LANGUAGE l
	RESOURCEPACK n
	SKIN_CUSTOMIZATION a
	SOUNDS b
	TELEMETRY p
	VIDEO c
	difficultyButton v
	lastScreen t
	lockButton w
	options u
	applyPacks (Lnet/minecraft/server/packs/repository/PackRepository;)V a
	createDifficultyButton (IILjava/lang/String;Lnet/minecraft/client/Minecraft;)Lnet/minecraft/client/gui/components/CycleButton; a
	createOnlineButton ()Lnet/minecraft/client/gui/layouts/LayoutElement; n
	init ()V aN_
	lockCallback (Z)V c
	openScreenButton (Lnet/minecraft/network/chat/Component;Ljava/util/function/Supplier;)Lnet/minecraft/client/gui/components/Button; a
	removed ()V j
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/client/gui/screens/OptionsSubScreen fct
	lastScreen a
	options b
	onClose ()V aE_
	removed ()V j
net/minecraft/client/gui/screens/OutOfMemoryScreen fcu
	message a
	init ()V aN_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldCloseOnEsc ()Z aL_
net/minecraft/client/gui/screens/Overlay fcv
	isPauseScreen ()Z a
net/minecraft/client/gui/screens/PauseScreen fcw
	ADVANCEMENTS o
	BUTTON_PADDING k
	BUTTON_WIDTH_FULL l
	BUTTON_WIDTH_HALF m
	COLUMNS b
	DRAFT_REPORT_SPRITE a
	GAME y
	MENU_PADDING_TOP c
	OPTIONS t
	PAUSED z
	PLAYER_REPORTING v
	REPORT_BUGS r
	RETURN_TO_GAME n
	RETURN_TO_MENU w
	SAVING_LEVEL x
	SEND_FEEDBACK q
	SHARE_TO_LAN u
	STATS p
	disconnectButton B
	showPauseMenu A
	createPauseMenu ()V D
	init ()V aN_
	onDisconnect ()V E
	openLinkButton (Lnet/minecraft/network/chat/Component;Ljava/lang/String;)Lnet/minecraft/client/gui/components/Button; a
	openScreenButton (Lnet/minecraft/network/chat/Component;Ljava/util/function/Supplier;)Lnet/minecraft/client/gui/components/Button; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	showsPauseMenu ()Z n
	tick ()V d
net/minecraft/client/gui/screens/PresetFlatWorldScreen fcx
	DEFAULT_BIOME q
	LOGGER c
	SLOT_BG_SIZE k
	SLOT_BG_X m
	SLOT_BG_Y n
	SLOT_FG_X o
	SLOT_FG_Y p
	SLOT_SPRITE b
	SLOT_STAT_HEIGHT l
	UNKNOWN_PRESET a
	export x
	list v
	listText u
	parent r
	selectButton w
	settings y
	shareText t
	fromString (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Ljava/lang/String;Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
	getLayerInfoFromString (Lnet/minecraft/core/HolderGetter;Ljava/lang/String;I)Lnet/minecraft/world/level/levelgen/flat/FlatLayerInfo; a
	getLayersInfoFromString (Lnet/minecraft/core/HolderGetter;Ljava/lang/String;)Ljava/util/List; a
	init ()V aN_
	mouseScrolled (DDDD)Z a
	onClose ()V aE_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	save (Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Ljava/lang/String; a
	updateButtonValidity (Z)V c
net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList fcx$a
	keyPressed (III)Z a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry;)V a
net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry fcx$a$a
	STATS_ICON_LOCATION b
	name d
	preset c
	blitSlot (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/world/item/Item;)V a
	blitSlotBg (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	select ()V b
net/minecraft/client/gui/screens/ProgressScreen fcy
	clearScreenAfterStop l
	header a
	progress c
	stage b
	stop k
	progressStage (Lnet/minecraft/network/chat/Component;)V c
	progressStagePercentage (I)V a
	progressStart (Lnet/minecraft/network/chat/Component;)V b
	progressStartNoAbort (Lnet/minecraft/network/chat/Component;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldCloseOnEsc ()Z aL_
	shouldNarrateNavigation ()Z aM_
	stop ()V a
net/minecraft/client/gui/screens/ReceivingLevelScreen fcz
	CHUNK_LOADING_START_WAIT_LIMIT_MS b
	DOWNLOADING_TERRAIN_TEXT a
	createdAt c
	levelReceived k
	isPauseScreen ()Z k
	onClose ()V aE_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	shouldCloseOnEsc ()Z aL_
	shouldNarrateNavigation ()Z aM_
	tick ()V d
net/minecraft/client/gui/screens/RecoverWorldDataScreen fda
	BUGTRACKER_BUTTON k
	DONE_FAILED p
	DONE_SUCCESS o
	DONE_TITLE n
	LOGGER a
	MISSING_FILE r
	NO_FALLBACK_TOOLTIP m
	NO_ISSUES q
	RESTORE_BUTTON l
	SCREEN_SIDE_MARGIN b
	TITLE c
	callback t
	issuesWidget x
	layout u
	message v
	messageWidget w
	storageAccess y
	attemptRestore (Lnet/minecraft/client/Minecraft;)V a
	buildInfo (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;ZLjava/lang/Exception;)Lnet/minecraft/network/chat/Component; a
	collectIssue (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Z)Ljava/lang/Exception; a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	onClose ()V aE_
	repositionElements ()V c
net/minecraft/client/gui/screens/Screen fdb
	ALLOWED_PROTOCOLS b
	BACKGROUND_LOCATION d
	LOGGER a
	NARRATE_DELAY_KEYBOARD_ACTION u
	NARRATE_DELAY_MOUSE_ACTION t
	NARRATE_DELAY_MOUSE_MOVE r
	NARRATE_DELAY_NARRATOR_ENABLED q
	NARRATE_SUPPRESS_AFTER_INIT_TIME p
	USAGE_NARRATION c
	children k
	clickedLink o
	deferredTooltipRendering z
	font i
	height h
	initialized m
	lastNarratable y
	minecraft f
	narratables l
	narrationState v
	narrationSuppressTime w
	nextNarrationTime x
	renderables n
	screenExecutor j
	title e
	width g
	addRenderableOnly (Lnet/minecraft/client/gui/components/Renderable;)Lnet/minecraft/client/gui/components/Renderable; a
	addRenderableWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; d
	addWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; e
	added ()V aF_
	afterKeyboardAction ()V y
	afterMouseAction ()V x
	afterMouseMove ()V w
	changeFocus (Lnet/minecraft/client/gui/ComponentPath;)V a
	children ()Ljava/util/List; l
	clearFocus ()V p
	clearWidgets ()V q
	confirmLink (Z)V c
	createArrowEvent (Lnet/minecraft/client/gui/navigation/ScreenDirection;)Lnet/minecraft/client/gui/navigation/FocusNavigationEvent$ArrowNavigation; a
	createTabEvent ()Lnet/minecraft/client/gui/navigation/FocusNavigationEvent$TabNavigation; n
	findNarratableWidget (Ljava/util/List;Lnet/minecraft/client/gui/narration/NarratableEntry;)Lnet/minecraft/client/gui/screens/Screen$NarratableSearchResult; a
	getBackgroundMusic ()Lnet/minecraft/sounds/Music; C
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	getRectangle ()Lnet/minecraft/client/gui/navigation/ScreenRectangle; F
	getTitle ()Lnet/minecraft/network/chat/Component; o
	getTooltipFromItem (Lnet/minecraft/client/Minecraft;Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	getUsageNarration ()Lnet/minecraft/network/chat/Component; A
	handleComponentClicked (Lnet/minecraft/network/chat/Style;)Z a
	handleDelayedNarration ()V z
	hasAltDown ()Z v
	hasControlDown ()Z s
	hasShiftDown ()Z t
	hideWidgets ([Lnet/minecraft/client/gui/components/AbstractWidget;)V a
	init ()V aN_
	init (Lnet/minecraft/client/Minecraft;II)V b
	insertText (Ljava/lang/String;Z)V a_
	isCopy (I)Z e
	isCut (I)Z c
	isMouseOver (DD)Z c
	isPaste (I)Z d
	isPauseScreen ()Z k
	isSelectAll (I)Z f
	isValidCharacterForName (Ljava/lang/String;CI)Z a
	keyPressed (III)Z a
	narrationEnabled ()V B
	onClose ()V aE_
	onFilesDrop (Ljava/util/List;)V a
	openLink (Ljava/net/URI;)V a
	rebuildWidgets ()V r
	removeWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V f
	removed ()V j
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	renderDirtBackground (Lnet/minecraft/client/gui/GuiGraphics;)V b
	renderTransparentBackground (Lnet/minecraft/client/gui/GuiGraphics;)V a
	renderWithTooltip (Lnet/minecraft/client/gui/GuiGraphics;IIF)V c
	repositionElements ()V c
	resize (Lnet/minecraft/client/Minecraft;II)V a
	runNarration (Z)V e
	scheduleNarration (JZ)V a
	setInitialFocus (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V c
	setTooltipForNextRenderPass (Ljava/util/List;)V b
	setTooltipForNextRenderPass (Ljava/util/List;Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner;Z)V a
	setTooltipForNextRenderPass (Lnet/minecraft/client/gui/components/Tooltip;Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner;Z)V a
	setTooltipForNextRenderPass (Lnet/minecraft/network/chat/Component;)V d
	shouldCloseOnEsc ()Z aL_
	shouldNarrateNavigation ()Z aM_
	shouldRunNarration ()Z D
	suppressNarration (J)V a
	tick ()V d
	triggerImmediateNarration (Z)V d
	updateNarratedWidget (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
	updateNarrationState (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
	wrapScreenError (Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/String;)V a
net/minecraft/client/gui/screens/Screen$DeferredTooltipRendering fdb$a
	positioner b
	tooltip a
	positioner ()Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner; b
	tooltip ()Ljava/util/List; a
net/minecraft/client/gui/screens/Screen$NarratableSearchResult fdb$b
	entry a
	index b
	priority c
net/minecraft/client/gui/screens/ShareToLanScreen fdc
	ALLOW_COMMANDS_LABEL c
	GAME_MODE_LABEL k
	INFO_TEXT l
	INVALID_PORT o
	INVALID_PORT_COLOR p
	PORT_HIGHER_BOUND b
	PORT_INFO_TEXT m
	PORT_LOWER_BOUND a
	PORT_UNAVAILABLE n
	commands t
	gameMode r
	lastScreen q
	port u
	portEdit v
	init ()V aN_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	tryParsePort (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
net/minecraft/client/gui/screens/SimpleOptionsSubScreen fdd
	list k
	narratorButton l
	smallOptions c
	createFooter ()V i
	init ()V aN_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	updateNarratorButton ()V n
net/minecraft/client/gui/screens/SkinCustomizationScreen fde
	init ()V aN_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/client/gui/screens/SoundOptionsScreen fdf
	list c
	buttonOptions (Lnet/minecraft/client/Options;)[Lnet/minecraft/client/OptionInstance; a
	getAllSoundOptionsExceptMaster ()[Lnet/minecraft/client/OptionInstance; n
	init ()V aN_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/screens/TitleScreen fdg
	COPYRIGHT_TEXT a
	CUBE_MAP b
	DEMO_LEVEL_ID k
	LOGGER c
	PANORAMA_OVERLAY l
	fadeInStart r
	fading q
	logoRenderer u
	panorama p
	realmsNotificationsScreen o
	resetDemoButton n
	splash m
	warningLabel t
	added ()V aF_
	checkDemoWorldPresence ()Z E
	confirmDemo (Z)V c
	createDemoMenuOptions (II)V b
	createNormalMenuOptions (II)V a
	getMultiplayerDisabledReason ()Lnet/minecraft/network/chat/Component; D
	init ()V aN_
	isPauseScreen ()Z k
	mouseClicked (DDI)Z a
	preloadResources (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	realmsButtonClicked ()V H
	realmsNotificationsEnabled ()Z n
	removed ()V j
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	shouldCloseOnEsc ()Z aL_
	tick ()V d
net/minecraft/client/gui/screens/TitleScreen$WarningLabel fdg$a
	font a
	label b
	x c
	y d
	font ()Lnet/minecraft/client/gui/Font; a
	label ()Lnet/minecraft/client/gui/components/MultiLineLabel; b
	render (Lnet/minecraft/client/gui/GuiGraphics;I)V a
	x ()I c
	y ()I d
net/minecraft/client/gui/screens/UnsupportedGraphicsWarningScreen fdh
	BUTTON_HEIGHT c
	BUTTON_MARGIN b
	BUTTON_PADDING a
	buttonOptions m
	buttonWidth p
	contentTop o
	message l
	messageLines n
	narrationMessage k
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	shouldCloseOnEsc ()Z aL_
net/minecraft/client/gui/screens/UnsupportedGraphicsWarningScreen$ButtonOption fdh$a
	message a
	onPress b
net/minecraft/client/gui/screens/VideoSettingsScreen fdi
	BUTTON_ACCEPT m
	BUTTON_CANCEL n
	FABULOUS c
	WARNING_MESSAGE k
	WARNING_TITLE l
	gpuWarnlistManager p
	list o
	oldMipmaps q
	init ()V aN_
	mouseClicked (DDI)Z a
	mouseScrolled (DDDD)Z a
	options (Lnet/minecraft/client/Options;)[Lnet/minecraft/client/OptionInstance; a
	removed ()V j
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/screens/WinScreen fdj
	LOGGER a
	NAME_PREFIX k
	OBFUSCATE_TOKEN l
	SECTION_HEADING c
	SPEEDUP_FACTOR m
	SPEEDUP_FACTOR_FAST n
	VIGNETTE_LOCATION b
	centeredLines t
	direction z
	lines r
	logoRenderer A
	onFinished p
	poem o
	scroll q
	scrollSpeed x
	speedupActive v
	speedupModifiers w
	totalScrollLength u
	unmodifiedScrollSpeed y
	addCreditsFile (Ljava/io/Reader;)V b
	addCreditsLine (Lnet/minecraft/network/chat/Component;Z)V a
	addEmptyLine ()V E
	addPoemFile (Ljava/io/Reader;)V a
	addPoemLines (Ljava/lang/String;)V a
	calculateScrollSpeed ()F n
	getBackgroundMusic ()Lnet/minecraft/sounds/Music; C
	init ()V aN_
	keyPressed (III)Z a
	keyReleased (III)Z b
	onClose ()V aE_
	removed ()V j
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	respawn ()V D
	tick ()V d
	wrapCreditsIO (Ljava/lang/String;Lnet/minecraft/client/gui/screens/WinScreen$CreditsReader;)V a
net/minecraft/client/gui/screens/WinScreen$CreditsReader fdj$a
net/minecraft/client/gui/screens/achievement/StatsScreen fdk
	HEADER_SPRITE k
	NO_VALUE_DISPLAY o
	PENDING_TEXT n
	SLOT_BG_SIZE w
	SLOT_BG_X y
	SLOT_BG_Y z
	SLOT_FG_X A
	SLOT_FG_Y B
	SLOT_LEFT_INSERT C
	SLOT_SPRITE c
	SLOT_STAT_HEIGHT x
	SLOT_TEXT_OFFSET D
	SORT_DOWN F
	SORT_DOWN_SPRITE m
	SORT_NONE E
	SORT_UP G
	SORT_UP_SPRITE l
	activeList u
	isLoading v
	itemStatsList q
	lastScreen a
	mobsStatsList r
	stats t
	statsList p
	blitSlot (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/world/item/Item;)V a
	blitSlotIcon (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/resources/ResourceLocation;)V a
	getColumnX (I)I a
	getTranslationKey (Lnet/minecraft/stats/Stat;)Ljava/lang/String; a
	init ()V aN_
	initButtons ()V D
	initLists ()V n
	isPauseScreen ()Z k
	onStatsUpdated ()V E
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setActiveList (Lnet/minecraft/client/gui/components/ObjectSelectionList;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList fdk$a
net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList$Entry fdk$a$a
	stat b
	statDisplay c
	getNarration ()Lnet/minecraft/network/chat/Component; a
	getValueText ()Ljava/lang/String; b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList fdk$b
	blockColumns a
	headerPressed n
	iconSprites t
	itemColumns m
	itemStatSorter o
	sortColumn p
	sortOrder q
	clickedHeader (II)Z a
	getColumn (I)Lnet/minecraft/stats/StatType; a
	getColumnIndex (Lnet/minecraft/stats/StatType;)I b
	getRowWidth ()I b
	getScrollbarPosition ()I c
	getString (Lnet/minecraft/world/item/Item;)Lnet/minecraft/network/chat/Component; a
	renderDecorations (Lnet/minecraft/client/gui/GuiGraphics;II)V b
	renderHeader (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	sortByColumn (Lnet/minecraft/stats/StatType;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow fdk$b$a
	item b
	getItem ()Lnet/minecraft/world/item/Item; b
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	renderStat (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/stats/Stat;IIZ)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRowComparator fdk$b$b
	compare (Lnet/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow;Lnet/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow;)I a
net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList fdk$c
net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList$MobRow fdk$c$a
	hasKills d
	killedBy e
	kills c
	mobName b
	wasKilledBy f
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/achievement/StatsUpdateListener fdl
	LOADING_SYMBOLS b
	onStatsUpdated ()V E
net/minecraft/client/gui/screens/advancements/AdvancementTab fdn
	centered r
	display f
	fade q
	icon g
	index d
	maxX o
	maxY p
	minX m
	minY n
	minecraft a
	root i
	rootNode e
	screen b
	scrollX k
	scrollY l
	title h
	type c
	widgets j
	addAdvancement (Lnet/minecraft/advancements/AdvancementNode;)V a
	addWidget (Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget;Lnet/minecraft/advancements/AdvancementHolder;)V a
	create (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/advancements/AdvancementsScreen;ILnet/minecraft/advancements/AdvancementNode;)Lnet/minecraft/client/gui/screens/advancements/AdvancementTab; a
	drawContents (Lnet/minecraft/client/gui/GuiGraphics;II)V b
	drawIcon (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	drawTab (Lnet/minecraft/client/gui/GuiGraphics;IIZ)V a
	drawTooltips (Lnet/minecraft/client/gui/GuiGraphics;IIII)V a
	getDisplay ()Lnet/minecraft/advancements/DisplayInfo; e
	getIndex ()I b
	getRootNode ()Lnet/minecraft/advancements/AdvancementNode; c
	getScreen ()Lnet/minecraft/client/gui/screens/advancements/AdvancementsScreen; f
	getTitle ()Lnet/minecraft/network/chat/Component; d
	getType ()Lnet/minecraft/client/gui/screens/advancements/AdvancementTabType; a
	getWidget (Lnet/minecraft/advancements/AdvancementHolder;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; a
	isMouseOver (IIDD)Z a
	scroll (DD)V a
net/minecraft/client/gui/screens/advancements/AdvancementTabType fdo
	$VALUES j
	ABOVE a
	BELOW b
	LEFT c
	RIGHT d
	height h
	max i
	selectedSprites e
	unselectedSprites f
	width g
	$values ()[Lnet/minecraft/client/gui/screens/advancements/AdvancementTabType; b
	draw (Lnet/minecraft/client/gui/GuiGraphics;IIZI)V a
	drawIcon (Lnet/minecraft/client/gui/GuiGraphics;IIILnet/minecraft/world/item/ItemStack;)V a
	getMax ()I a
	getX (I)I a
	getY (I)I b
	isMouseOver (IIIDD)Z a
net/minecraft/client/gui/screens/advancements/AdvancementTabType$Sprites fdo$a
	first a
	last c
	middle b
	first ()Lnet/minecraft/resources/ResourceLocation; a
	last ()Lnet/minecraft/resources/ResourceLocation; c
	middle ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/gui/screens/advancements/AdvancementWidget fdp
	BOX_WIDTH d
	BOX_X c
	FRAME_WIDTH e
	HEIGHT b
	ICON_WIDTH h
	ICON_X f
	ICON_Y g
	TEST_SPLIT_OFFSETS n
	TITLE_BOX_SPRITE a
	TITLE_MAX_WIDTH m
	TITLE_PADDING_LEFT i
	TITLE_PADDING_RIGHT j
	TITLE_X k
	TITLE_Y l
	advancementNode p
	children w
	description t
	display q
	minecraft u
	parent v
	progress x
	tab o
	title r
	width s
	x y
	y z
	addChild (Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget;)V a
	attachToParent ()V b
	draw (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	drawConnectivity (Lnet/minecraft/client/gui/GuiGraphics;IIZ)V a
	drawHover (Lnet/minecraft/client/gui/GuiGraphics;IIFII)V a
	findOptimalLines (Lnet/minecraft/network/chat/Component;I)Ljava/util/List; a
	getFirstVisibleParent (Lnet/minecraft/advancements/AdvancementNode;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; a
	getMaxWidth (Lnet/minecraft/client/StringSplitter;Ljava/util/List;)F a
	getWidth ()I a
	getX ()I d
	getY ()I c
	isMouseOver (IIII)Z a
	setProgress (Lnet/minecraft/advancements/AdvancementProgress;)V a
net/minecraft/client/gui/screens/advancements/AdvancementWidgetType fdq
	$VALUES g
	OBTAINED a
	UNOBTAINED b
	boxSprite c
	challengeFrameSprite e
	goalFrameSprite f
	taskFrameSprite d
	$values ()[Lnet/minecraft/client/gui/screens/advancements/AdvancementWidgetType; b
	boxSprite ()Lnet/minecraft/resources/ResourceLocation; a
	frameSprite (Lnet/minecraft/advancements/AdvancementType;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/gui/screens/advancements/AdvancementsScreen fdr
	BACKGROUND_TILE_COUNT_X n
	BACKGROUND_TILE_COUNT_Y o
	BACKGROUND_TILE_HEIGHT m
	BACKGROUND_TILE_WIDTH l
	NO_ADVANCEMENTS_LABEL x
	SCROLL_SPEED v
	TITLE y
	VERY_SAD_LABEL w
	WINDOW_HEIGHT b
	WINDOW_INSIDE_HEIGHT k
	WINDOW_INSIDE_WIDTH c
	WINDOW_INSIDE_X q
	WINDOW_INSIDE_Y r
	WINDOW_LOCATION p
	WINDOW_TITLE_X t
	WINDOW_TITLE_Y u
	WINDOW_WIDTH a
	advancements z
	isScrolling C
	selectedTab B
	tabs A
	getAdvancementWidget (Lnet/minecraft/advancements/AdvancementNode;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; e
	getTab (Lnet/minecraft/advancements/AdvancementNode;)Lnet/minecraft/client/gui/screens/advancements/AdvancementTab; f
	init ()V aN_
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDDD)Z a
	onAddAdvancementRoot (Lnet/minecraft/advancements/AdvancementNode;)V a
	onAddAdvancementTask (Lnet/minecraft/advancements/AdvancementNode;)V c
	onAdvancementsCleared ()V a
	onRemoveAdvancementRoot (Lnet/minecraft/advancements/AdvancementNode;)V b
	onRemoveAdvancementTask (Lnet/minecraft/advancements/AdvancementNode;)V d
	onSelectedTabChanged (Lnet/minecraft/advancements/AdvancementHolder;)V a
	onUpdateAdvancementProgress (Lnet/minecraft/advancements/AdvancementNode;Lnet/minecraft/advancements/AdvancementProgress;)V a
	removed ()V j
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderInside (Lnet/minecraft/client/gui/GuiGraphics;IIII)V a
	renderTooltips (Lnet/minecraft/client/gui/GuiGraphics;IIII)V b
	renderWindow (Lnet/minecraft/client/gui/GuiGraphics;II)V a
net/minecraft/client/gui/screens/controls/ControlsScreen fdt
	ROW_SPACING c
	init ()V aN_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/client/gui/screens/controls/KeyBindsList fdu
	keyBindsScreen a
	maxNameWidth m
	getRowWidth ()I b
	getScrollbarPosition ()I c
	refreshEntries ()V e
	resetMappingAndUpdateButtons ()V d
net/minecraft/client/gui/screens/controls/KeyBindsList$CategoryEntry fdu$a
	name b
	width c
	children ()Ljava/util/List; l
	narratables ()Ljava/util/List; a
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	refreshEntry ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/controls/KeyBindsList$Entry fdu$b
	refreshEntry ()V b
net/minecraft/client/gui/screens/controls/KeyBindsList$KeyEntry fdu$c
	changeButton d
	hasCollision f
	key b
	name c
	resetButton e
	children ()Ljava/util/List; l
	narratables ()Ljava/util/List; a
	refreshEntry ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/controls/KeyBindsScreen fdv
	keyBindsList l
	lastKeySelection k
	resetButton m
	selectedKey c
	init ()V aN_
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen fdx
	ALL_SLOTS_WIDTH q
	GAMEMODE_SWITCHER_LOCATION c
	HELP_TIPS_OFFSET_Y p
	SELECTION_SPRITE b
	SELECT_KEY r
	SLOT_AREA m
	SLOT_AREA_PADDED o
	SLOT_PADDING n
	SLOT_SPRITE a
	SPRITE_SHEET_HEIGHT l
	SPRITE_SHEET_WIDTH k
	currentlyHovered u
	firstMouseX v
	firstMouseY w
	previousHovered t
	setFirstMousePos x
	slots y
	checkToClose ()Z E
	getDefaultSelected ()Lnet/minecraft/world/level/GameType; n
	init ()V aN_
	isPauseScreen ()Z k
	keyPressed (III)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	switchToHoveredGameMode ()V D
	switchToHoveredGameMode (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon;)V a
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon fdx$a
	$VALUES k
	ADVENTURE c
	CREATIVE a
	ICON_AREA j
	ICON_TOP_LEFT f
	SPECTATOR d
	SURVIVAL b
	VALUES e
	command h
	name g
	renderStack i
	$values ()[Lnet/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon; d
	drawIcon (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	getCommand ()Ljava/lang/String; b
	getFromGameType (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon; a
	getName ()Lnet/minecraft/network/chat/Component; a
	getNext ()Lnet/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon; c
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeSlot fdx$b
	icon b
	isSelected c
	drawSelection (Lnet/minecraft/client/gui/GuiGraphics;)V b
	drawSlot (Lnet/minecraft/client/gui/GuiGraphics;)V a
	isHoveredOrFocused ()Z z
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setSelected (Z)V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen fdz
	COMMAND_LABEL n
	PREVIOUS_OUTPUT_LABEL o
	SET_COMMAND_LABEL m
	cancelButton k
	commandEdit a
	commandSuggestions p
	doneButton c
	outputButton l
	previousEdit b
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; n
	getPreviousY ()I D
	getUsageNarration ()Lnet/minecraft/network/chat/Component; A
	init ()V aN_
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (DDDD)Z a
	onDone ()V E
	onEdited (Ljava/lang/String;)V a
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
	updatePreviousOutput (Z)V c
net/minecraft/client/gui/screens/inventory/AbstractContainerScreen fea
	HOVER_ITEM_BLIT_OFFSET z
	INVENTORY_LOCATION a
	QUICKDROP_DELAY y
	SLOT_ITEM_BLIT_OFFSET b
	SNAPBACK_SPEED x
	clickedSlot A
	doubleclick R
	draggingItem F
	hoveredSlot r
	imageHeight k
	imageWidth c
	inventoryLabelX n
	inventoryLabelY o
	isQuickCrafting w
	isSplittingStack E
	lastClickButton Q
	lastClickSlot D
	lastClickTime P
	lastQuickMoved S
	leftPos t
	menu p
	playerInventoryTitle q
	quickCraftSlots v
	quickCraftingButton M
	quickCraftingRemainder O
	quickCraftingType L
	quickdropSlot C
	quickdropTime K
	skipNextRelease N
	snapbackEnd B
	snapbackItem J
	snapbackStartX G
	snapbackStartY H
	snapbackTime I
	titleLabelX l
	titleLabelY m
	topPos u
	checkHotbarKeyPressed (II)Z a
	checkHotbarMouseClicked (I)V a
	clearDraggingState ()V n
	containerTick ()V D
	findSlot (DD)Lnet/minecraft/world/inventory/Slot; b
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; E
	getTooltipFromContainerItem (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	handleSlotStateChanged (IIZ)V a
	hasClickedOutside (DDIII)Z a
	init ()V aN_
	isHovering (IIIIDD)Z a
	isHovering (Lnet/minecraft/world/inventory/Slot;DD)Z a
	isPauseScreen ()Z k
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z b
	onClose ()V aE_
	recalculateQuickCraftRemaining ()V J
	removed ()V j
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderFloatingItem (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;)V a
	renderLabels (Lnet/minecraft/client/gui/GuiGraphics;II)V b
	renderSlot (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/inventory/Slot;)V a
	renderSlotHighlight (Lnet/minecraft/client/gui/GuiGraphics;III)V a
	renderTooltip (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/AbstractFurnaceScreen feb
	burnProgressSprite B
	litProgressSprite A
	recipeBookComponent x
	texture z
	widthTooNarrow y
	charTyped (CI)Z a
	containerTick ()V D
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; I
	hasClickedOutside (DDIII)Z a
	init ()V aN_
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	recipesUpdated ()V H
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
net/minecraft/client/gui/screens/inventory/AbstractSignEditScreen fec
	frame m
	isFrontText l
	line n
	messages k
	sign b
	signField o
	text c
	woodType a
	charTyped (CI)Z a
	getSignTextScale ()Lorg/joml/Vector3f; n
	init ()V aN_
	isPauseScreen ()Z k
	isValid ()Z D
	keyPressed (III)Z a
	offsetSign (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/level/block/state/BlockState;)V b
	onClose ()V aE_
	onDone ()V E
	removed ()V j
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderSign (Lnet/minecraft/client/gui/GuiGraphics;)V c
	renderSignBackground (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/level/block/state/BlockState;)V a
	renderSignText (Lnet/minecraft/client/gui/GuiGraphics;)V d
	setMessage (Ljava/lang/String;)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/AnvilScreen fed
	ANVIL_LOCATION A
	ERROR_SPRITE z
	TEXT_FIELD_DISABLED_SPRITE y
	TEXT_FIELD_SPRITE x
	TOO_EXPENSIVE_TEXT B
	name C
	player D
	keyPressed (III)Z a
	onNameChanged (Ljava/lang/String;)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderErrorIcon (Lnet/minecraft/client/gui/GuiGraphics;II)V c
	renderFg (Lnet/minecraft/client/gui/GuiGraphics;IIF)V d
	renderLabels (Lnet/minecraft/client/gui/GuiGraphics;II)V b
	resize (Lnet/minecraft/client/Minecraft;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
	subInit ()V H
net/minecraft/client/gui/screens/inventory/BeaconScreen fee
	BEACON_LOCATION x
	BUTTON_DISABLED_SPRITE y
	BUTTON_HIGHLIGHTED_SPRITE A
	BUTTON_SELECTED_SPRITE z
	BUTTON_SPRITE B
	CANCEL_SPRITE D
	CONFIRM_SPRITE C
	PRIMARY_EFFECT_LABEL E
	SECONDARY_EFFECT_LABEL F
	beaconButtons G
	primary H
	secondary I
	addBeaconButton (Lnet/minecraft/client/gui/components/AbstractWidget;)V a
	containerTick ()V D
	init ()V aN_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderLabels (Lnet/minecraft/client/gui/GuiGraphics;II)V b
	updateButtons ()V H
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconButton fee$a
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconCancelButton fee$b
	onPress ()V b
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconConfirmButton fee$c
	onPress ()V b
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconPowerButton fee$d
	effect d
	isPrimary c
	sprite f
	tier a
	createEffectDescription (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/network/chat/MutableComponent; b
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; aK_
	onPress ()V b
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;)V a
	setEffect (Lnet/minecraft/world/effect/MobEffect;)V a
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconScreenButton fee$e
	selected a
	isSelected ()Z a
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setSelected (Z)V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconSpriteScreenButton fee$f
	sprite a
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconUpgradePowerButton fee$g
	createEffectDescription (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/network/chat/MutableComponent; b
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BlastFurnaceScreen fef
	BURN_PROGRESS_SPRITE z
	LIT_PROGRESS_SPRITE y
	TEXTURE A
net/minecraft/client/gui/screens/inventory/BookEditScreen feg
	BLACK_CURSOR n
	EDIT_TITLE_LABEL l
	FINALIZE_WARNING_LABEL m
	GRAY_CURSOR o
	IMAGE_HEIGHT k
	IMAGE_WIDTH c
	TEXT_HEIGHT b
	TEXT_WIDTH a
	backButton D
	book q
	cancelButton H
	currentPage v
	displayCache J
	doneButton E
	finalizeButton G
	forwardButton C
	frameTick u
	hand I
	isModified r
	isSigning t
	lastClickTime A
	lastIndex B
	owner p
	ownerText L
	pageEdit y
	pageMsg K
	pages w
	signButton F
	title x
	titleEdit z
	appendPageToBook ()V K
	bookKeyPressed (III)Z c
	changeLine (I)V a
	charTyped (CI)Z a
	clearDisplayCache ()V R
	clearDisplayCacheAfterPageChange ()V S
	convertLocalToScreen (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i; b
	convertScreenToLocal (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i; a
	createPartialLineSelection (Ljava/lang/String;Lnet/minecraft/client/StringSplitter;IIII)Lnet/minecraft/client/renderer/Rect2i; a
	createSelection (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/renderer/Rect2i; a
	eraseEmptyTrailingPages ()V J
	findLineFromPos ([II)I a
	getClipboard ()Ljava/lang/String; n
	getCurrentPageText ()Ljava/lang/String; P
	getDisplayCache ()Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache; Q
	getNumPages ()I D
	init ()V aN_
	keyDown ()V M
	keyEnd ()V O
	keyHome ()V N
	keyPressed (III)Z a
	keyUp ()V L
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	pageBack ()V E
	pageForward ()V H
	rebuildDisplayCache ()Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache; T
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	renderCursor (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;Z)V a
	renderHighlight (Lnet/minecraft/client/gui/GuiGraphics;[Lnet/minecraft/client/renderer/Rect2i;)V a
	saveChanges (Z)V c
	selectWord (I)V b
	setClipboard (Ljava/lang/String;)V a
	setCurrentPageText (Ljava/lang/String;)V b
	tick ()V d
	titleKeyPressed (III)Z d
	updateButtonVisibility ()V I
	updateLocalCopy (Z)V e
net/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache feg$a
	EMPTY a
	cursor c
	cursorAtEnd d
	fullText b
	lineStarts e
	lines f
	selection g
	changeLine (II)I a
	findLineEnd (I)I b
	findLineStart (I)I a
	getIndexAtPosition (Lnet/minecraft/client/gui/Font;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)I a
net/minecraft/client/gui/screens/inventory/BookEditScreen$LineInfo feg$b
	asComponent c
	contents b
	style a
	x d
	y e
net/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i feg$c
	x a
	y b
net/minecraft/client/gui/screens/inventory/BookViewScreen feh
	BOOK_LOCATION l
	EMPTY_ACCESS k
	IMAGE_HEIGHT p
	IMAGE_WIDTH o
	PAGE_INDICATOR_TEXT_Y_OFFSET a
	PAGE_TEXT_X_OFFSET b
	PAGE_TEXT_Y_OFFSET c
	TEXT_HEIGHT n
	TEXT_WIDTH m
	backButton x
	bookAccess q
	cachedPage u
	cachedPageComponents t
	currentPage r
	forwardButton w
	pageMsg v
	playTurnSound y
	closeScreen ()V J
	createMenuControls ()V n
	createPageControlButtons ()V D
	forcePage (I)Z b
	getClickedComponentStyleAt (DD)Lnet/minecraft/network/chat/Style; b
	getNumPages ()I E
	handleComponentClicked (Lnet/minecraft/network/chat/Style;)Z a
	init ()V aN_
	keyPressed (III)Z a
	loadPages (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; a
	loadPages (Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Consumer;)V a
	mouseClicked (DDI)Z a
	pageBack ()V H
	pageForward ()V I
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setBookAccess (Lnet/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess;)V a
	setPage (I)Z a
	updateButtonVisibility ()V K
net/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess feh$a
	fromItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess; a
	getPage (I)Lnet/minecraft/network/chat/FormattedText; b
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
net/minecraft/client/gui/screens/inventory/BookViewScreen$WritableBookAccess feh$b
	pages a
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
	readPages (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
net/minecraft/client/gui/screens/inventory/BookViewScreen$WrittenBookAccess feh$c
	pages a
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
	readPages (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
net/minecraft/client/gui/screens/inventory/BrewingStandScreen fei
	BREWING_STAND_LOCATION A
	BREW_PROGRESS_SPRITE y
	BUBBLELENGTHS B
	BUBBLES_SPRITE z
	FUEL_LENGTH_SPRITE x
	init ()V aN_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
net/minecraft/client/gui/screens/inventory/CartographyTableScreen fej
	BG_LOCATION C
	DUPLICATED_MAP_SPRITE z
	ERROR_SPRITE x
	LOCKED_SPRITE B
	MAP_SPRITE A
	SCALED_MAP_SPRITE y
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderMap (Lnet/minecraft/client/gui/GuiGraphics;Ljava/lang/Integer;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;IIF)V a
	renderResultingMap (Lnet/minecraft/client/gui/GuiGraphics;Ljava/lang/Integer;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;ZZZZ)V a
net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen fek
	autoCommandBlock m
	autoexec t
	autoexecButton p
	conditional r
	conditionalButton o
	mode q
	modeButton n
	enableControls (Z)V e
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; n
	getPreviousY ()I D
	init ()V aN_
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	updateGui ()V H
net/minecraft/client/gui/screens/inventory/ContainerScreen fel
	CONTAINER_BACKGROUND x
	containerRows y
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
net/minecraft/client/gui/screens/inventory/CrafterScreen fem
	CONTAINER_LOCATION A
	DISABLED_SLOT_LOCATION_SPRITE x
	DISABLED_SLOT_TOOLTIP B
	POWERED_REDSTONE_LOCATION_SPRITE y
	UNPOWERED_REDSTONE_LOCATION_SPRITE z
	player C
	disableSlot (I)V b
	enableSlot (I)V a
	init ()V aN_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderDisabledSlot (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/inventory/CrafterSlot;)V a
	renderRedstone (Lnet/minecraft/client/gui/GuiGraphics;)V c
	renderSlot (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/inventory/Slot;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	updateSlotState (IZ)V a
net/minecraft/client/gui/screens/inventory/CraftingScreen fen
	CRAFTING_TABLE_LOCATION x
	recipeBookComponent y
	widthTooNarrow z
	containerTick ()V D
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; I
	hasClickedOutside (DDIII)Z a
	init ()V aN_
	isHovering (IIIIDD)Z a
	mouseClicked (DDI)Z a
	recipesUpdated ()V H
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
net/minecraft/client/gui/screens/inventory/CreativeInventoryListener feo
	minecraft a
	dataChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen fep
	CONTAINER L
	CUSTOM_SLOT_LOCK E
	GUI_CREATIVE_TAB_PREFIX D
	NUM_COLS G
	NUM_ROWS F
	SCROLLER_DISABLED_SPRITE y
	SCROLLER_HEIGHT K
	SCROLLER_SPRITE x
	SCROLLER_WIDTH J
	SELECTED_BOTTOM_TABS C
	SELECTED_TOP_TABS A
	TAB_HEIGHT I
	TAB_WIDTH H
	TEXT_COLOR N
	TRASH_SLOT_TOOLTIP M
	UNSELECTED_BOTTOM_TABS B
	UNSELECTED_TOP_TABS z
	destroyItemSlot T
	displayOperatorCreativeTab Y
	hasClickedOutside W
	ignoreTextInput V
	listener U
	originalSlots S
	scrollOffs P
	scrolling Q
	searchBox R
	selectedTab O
	visibleTags X
	canScroll ()Z K
	charTyped (CI)Z a
	checkTabClicked (Lnet/minecraft/world/item/CreativeModeTab;DD)Z a
	checkTabHovering (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/item/CreativeModeTab;II)Z a
	containerTick ()V D
	getTabX (Lnet/minecraft/world/item/CreativeModeTab;)I b
	getTabY (Lnet/minecraft/world/item/CreativeModeTab;)I c
	getTooltipFromContainerItem (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	handleHotbarLoadOrSave (Lnet/minecraft/client/Minecraft;IZZ)V a
	hasClickedOutside (DDIII)Z a
	hasPermissions (Lnet/minecraft/world/entity/player/Player;)Z a
	init ()V aN_
	insideScrollbar (DD)Z b
	isCreativeSlot (Lnet/minecraft/world/inventory/Slot;)Z a
	isInventoryOpen ()Z H
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z b
	mouseScrolled (DDDD)Z a
	refreshCurrentTabContents (Ljava/util/Collection;)V a
	refreshSearchResults ()V I
	removed ()V j
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderLabels (Lnet/minecraft/client/gui/GuiGraphics;II)V b
	renderTabButton (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/item/CreativeModeTab;)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	selectTab (Lnet/minecraft/world/item/CreativeModeTab;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tryRefreshInvalidatedTabs (Lnet/minecraft/world/flag/FeatureFlagSet;ZLnet/minecraft/core/HolderLookup$Provider;)V a
	updateVisibleTags (Ljava/lang/String;)V a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$CustomCreativeSlot fep$a
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$ItemPickerMenu fep$b
	inventoryMenu l
	items k
	calculateRowCount ()I l
	canDragTo (Lnet/minecraft/world/inventory/Slot;)Z b
	canScroll ()Z m
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	getCarried ()Lnet/minecraft/world/item/ItemStack; g
	getRowIndexForScroll (F)I a
	getScrollForRowIndex (I)F e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	scrollTo (F)V b
	setCarried (Lnet/minecraft/world/item/ItemStack;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	subtractInputFromScroll (FD)F a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$SlotWrapper fep$c
	target a
	getItem ()Lnet/minecraft/world/item/ItemStack; g
	getMaxStackSize ()I a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I a_
	getNoItemIcon ()Lcom/mojang/datafixers/util/Pair; c
	hasItem ()Z h
	isActive ()Z d
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
	set (Lnet/minecraft/world/item/ItemStack;)V f
	setByPlayer (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	setChanged ()V b
net/minecraft/client/gui/screens/inventory/CyclingSlotBackground feq
	ICON_CHANGE_TICK_RATE a
	ICON_SIZE b
	ICON_TRANSITION_TICK_DURATION c
	iconIndex g
	icons e
	slotIndex d
	tick f
	getIconTransitionTransparency (F)F a
	render (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderIcon (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/resources/ResourceLocation;FLnet/minecraft/client/gui/GuiGraphics;II)V a
	tick (Ljava/util/List;)V a
net/minecraft/client/gui/screens/inventory/DispenserScreen fer
	CONTAINER_LOCATION x
	init ()V aN_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
net/minecraft/client/gui/screens/inventory/EffectRenderingInventoryScreen fes
	EFFECT_BACKGROUND_LARGE_SPRITE x
	EFFECT_BACKGROUND_SMALL_SPRITE y
	canSeeEffects ()Z J
	getEffectName (Lnet/minecraft/world/effect/MobEffectInstance;)Lnet/minecraft/network/chat/Component; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackgrounds (Lnet/minecraft/client/gui/GuiGraphics;IILjava/lang/Iterable;Z)V a
	renderEffects (Lnet/minecraft/client/gui/GuiGraphics;II)V c
	renderIcons (Lnet/minecraft/client/gui/GuiGraphics;IILjava/lang/Iterable;Z)V b
	renderLabels (Lnet/minecraft/client/gui/GuiGraphics;IILjava/lang/Iterable;)V a
net/minecraft/client/gui/screens/inventory/EnchantmentNames fet
	ALT_FONT a
	INSTANCE c
	ROOT_STYLE b
	random d
	words e
	getInstance ()Lnet/minecraft/client/gui/screens/inventory/EnchantmentNames; a
	getRandomName (Lnet/minecraft/client/gui/Font;I)Lnet/minecraft/network/chat/FormattedText; a
	initSeed (J)V a
net/minecraft/client/gui/screens/inventory/EnchantmentScreen feu
	DISABLED_LEVEL_SPRITES F
	ENABLED_LEVEL_SPRITES E
	ENCHANTING_BOOK_LOCATION K
	ENCHANTING_TABLE_LOCATION J
	ENCHANTMENT_SLOT_DISABLED_SPRITE G
	ENCHANTMENT_SLOT_HIGHLIGHTED_SPRITE H
	ENCHANTMENT_SLOT_SPRITE I
	bookModel M
	flip y
	flipA B
	flipT A
	last N
	oFlip z
	oOpen D
	open C
	random L
	time x
	containerTick ()V D
	init ()V aN_
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderBook (Lnet/minecraft/client/gui/GuiGraphics;IIF)V d
	tickBook ()V H
net/minecraft/client/gui/screens/inventory/FurnaceScreen fev
	BURN_PROGRESS_SPRITE z
	LIT_PROGRESS_SPRITE y
	TEXTURE A
net/minecraft/client/gui/screens/inventory/GrindstoneScreen few
	ERROR_SPRITE x
	GRINDSTONE_LOCATION y
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
net/minecraft/client/gui/screens/inventory/HangingSignEditScreen fex
	MAGIC_BACKGROUND_SCALE b
	TEXTURE_HEIGHT l
	TEXTURE_WIDTH k
	TEXT_SCALE c
	texture m
	getSignTextScale ()Lorg/joml/Vector3f; n
	offsetSign (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/level/block/state/BlockState;)V b
	renderSignBackground (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/client/gui/screens/inventory/HopperScreen fey
	HOPPER_LOCATION x
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
net/minecraft/client/gui/screens/inventory/HorseInventoryScreen fez
	ARMOR_SLOT_SPRITE A
	CHEST_SLOTS_SPRITE x
	HORSE_INVENTORY_LOCATION B
	LLAMA_ARMOR_SLOT_SPRITE z
	SADDLE_SLOT_SPRITE y
	horse C
	xMouse D
	yMouse E
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
net/minecraft/client/gui/screens/inventory/InventoryScreen ffa
	buttonClicked B
	recipeBookComponent z
	widthTooNarrow A
	xMouse x
	yMouse y
	containerTick ()V D
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; I
	hasClickedOutside (DDIII)Z a
	init ()V aN_
	isHovering (IIIIDD)Z a
	mouseClicked (DDI)Z a
	mouseReleased (DDI)Z b
	recipesUpdated ()V H
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderEntityInInventory (Lnet/minecraft/client/gui/GuiGraphics;FFILorg/joml/Vector3f;Lorg/joml/Quaternionf;Lorg/joml/Quaternionf;Lnet/minecraft/world/entity/LivingEntity;)V a
	renderEntityInInventoryFollowsMouse (Lnet/minecraft/client/gui/GuiGraphics;IIIIIFFFLnet/minecraft/world/entity/LivingEntity;)V a
	renderLabels (Lnet/minecraft/client/gui/GuiGraphics;II)V b
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
net/minecraft/client/gui/screens/inventory/ItemCombinerScreen ffb
	menuResource x
	dataChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	init ()V aN_
	removed ()V j
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderErrorIcon (Lnet/minecraft/client/gui/GuiGraphics;II)V c
	renderFg (Lnet/minecraft/client/gui/GuiGraphics;IIF)V d
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
	subInit ()V H
net/minecraft/client/gui/screens/inventory/JigsawBlockEditScreen ffc
	FINAL_STATE_LABEL l
	JOINT_LABEL a
	NAME_LABEL c
	PLACEMENT_PRIORITY_LABEL m
	PLACEMENT_PRIORITY_TOOLTIP n
	POOL_LABEL b
	SELECTION_PRIORITY_LABEL o
	SELECTION_PRIORITY_TOOLTIP p
	TARGET_LABEL k
	doneButton B
	finalStateEdit v
	generateButton C
	jigsawEntity q
	joint D
	jointButton A
	keepJigsaws z
	levels y
	nameEdit r
	placementPriorityEdit x
	poolEdit u
	selectionPriorityEdit w
	targetEdit t
	init ()V aN_
	keyPressed (III)Z a
	onCancel ()V D
	onClose ()V aE_
	onDone ()V n
	parseAsInt (Ljava/lang/String;)I a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	sendGenerate ()V H
	sendToServer ()V E
	updateValidity ()V I
net/minecraft/client/gui/screens/inventory/LecternScreen ffd
	listener r
	menu q
	bookChanged ()V L
	closeScreen ()V J
	createMenuControls ()V n
	forcePage (I)Z b
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; E
	getMenu ()Lnet/minecraft/world/inventory/LecternMenu; K
	init ()V aN_
	isPauseScreen ()Z k
	onClose ()V aE_
	pageBack ()V H
	pageChanged ()V M
	pageForward ()V I
	removed ()V j
	sendButtonClick (I)V g
net/minecraft/client/gui/screens/inventory/LoomScreen ffe
	BANNER_SLOT_SPRITE x
	BG_LOCATION G
	DYE_SLOT_SPRITE y
	ERROR_SPRITE F
	PATTERNS_X N
	PATTERNS_Y O
	PATTERN_COLUMNS H
	PATTERN_HIGHLIGHTED_SPRITE D
	PATTERN_IMAGE_SIZE L
	PATTERN_ROWS I
	PATTERN_SELECTED_SPRITE C
	PATTERN_SLOT_SPRITE z
	PATTERN_SPRITE E
	SCROLLER_DISABLED_SPRITE B
	SCROLLER_FULL_HEIGHT M
	SCROLLER_HEIGHT K
	SCROLLER_SPRITE A
	SCROLLER_WIDTH J
	bannerStack R
	displayPatterns U
	dyeStack S
	flag P
	hasMaxPatterns V
	patternStack T
	resultBannerPatterns Q
	scrollOffs W
	scrolling X
	startRow Y
	containerChanged ()V I
	hasClickedOutside (DDIII)Z a
	init ()V aN_
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDDD)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderPattern (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/core/Holder;II)V a
	totalRowCount ()I H
net/minecraft/client/gui/screens/inventory/MenuAccess fff
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; E
net/minecraft/client/gui/screens/inventory/MerchantScreen ffg
	BUY_ITEM_X O
	DEPRECATED_TOOLTIP aa
	DISCOUNT_STRIKETHRUOGH_SPRITE F
	EXPERIENCE_BAR_BACKGROUND_SPRITE y
	EXPERIENCE_BAR_CURRENT_SPRITE z
	EXPERIENCE_BAR_RESULT_SPRITE A
	LABEL_Y P
	MERCHANT_MENU_PART_X J
	NUMBER_OF_OFFER_BUTTONS Q
	OUT_OF_STOCK_SPRITE x
	PROGRESS_BAR_X K
	PROGRESS_BAR_Y L
	SCROLLER_DISABLED_SPRITE C
	SCROLLER_HEIGHT U
	SCROLLER_SPRITE B
	SCROLLER_WIDTH V
	SCROLL_BAR_HEIGHT W
	SCROLL_BAR_START_X Y
	SCROLL_BAR_TOP_POS_Y X
	SELL_ITEM_1_X M
	SELL_ITEM_2_X N
	TEXTURE_HEIGHT I
	TEXTURE_WIDTH H
	TRADES_LABEL Z
	TRADE_ARROW_OUT_OF_STOCK_SPRITE D
	TRADE_ARROW_SPRITE E
	TRADE_BUTTON_HEIGHT S
	TRADE_BUTTON_WIDTH T
	TRADE_BUTTON_X R
	VILLAGER_LOCATION G
	isDragging ae
	scrollOff ad
	shopItem ab
	tradeOfferButtons ac
	canScroll (I)Z a
	init ()V aN_
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDDD)Z a
	postButtonClick ()V H
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderAndDecorateCostA (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;II)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderButtonArrows (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/item/trading/MerchantOffer;II)V a
	renderLabels (Lnet/minecraft/client/gui/GuiGraphics;II)V b
	renderProgressBar (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/world/item/trading/MerchantOffer;)V a
	renderScroller (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/world/item/trading/MerchantOffers;)V a
net/minecraft/client/gui/screens/inventory/MerchantScreen$TradeOfferButton ffg$a
	index a
	getIndex ()I a
	renderToolTip (Lnet/minecraft/client/gui/GuiGraphics;II)V a
net/minecraft/client/gui/screens/inventory/MinecartCommandBlockEditScreen ffh
	commandBlock m
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; n
	getPreviousY ()I D
	init ()V aN_
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
net/minecraft/client/gui/screens/inventory/PageButton ffi
	PAGE_BACKWARD_HIGHLIGHTED_SPRITE c
	PAGE_BACKWARD_SPRITE d
	PAGE_FORWARD_HIGHLIGHTED_SPRITE a
	PAGE_FORWARD_SPRITE b
	isForward t
	playTurnSound u
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/screens/inventory/ShulkerBoxScreen ffj
	CONTAINER_TEXTURE x
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
net/minecraft/client/gui/screens/inventory/SignEditScreen ffk
	MAGIC_SCALE_NUMBER b
	MAGIC_TEXT_SCALE c
	TEXT_SCALE k
	signModel l
	getSignTextScale ()Lorg/joml/Vector3f; n
	init ()V aN_
	offsetSign (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/level/block/state/BlockState;)V b
	renderSignBackground (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/client/gui/screens/inventory/SmithingScreen ffl
	ARMOR_STAND_ANGLE N
	ARMOR_STAND_OFFSET_X Q
	ARMOR_STAND_OFFSET_Y P
	ARMOR_STAND_SCALE O
	ARMOR_STAND_TRANSLATION M
	ARMOR_STAND_X_ROT L
	ARMOR_STAND_Y_ROT K
	EMPTY_SLOT_SMITHING_TEMPLATES C
	EMPTY_SLOT_SMITHING_TEMPLATE_ARMOR_TRIM y
	EMPTY_SLOT_SMITHING_TEMPLATE_NETHERITE_UPGRADE z
	ERROR_ICON_HEIGHT G
	ERROR_ICON_WIDTH F
	ERROR_ICON_X H
	ERROR_ICON_Y I
	ERROR_SPRITE x
	ERROR_TOOLTIP B
	MISSING_TEMPLATE_TOOLTIP A
	TITLE_LABEL_X D
	TITLE_LABEL_Y E
	TOOLTIP_WIDTH J
	additionalIcon T
	armorStandPreview U
	baseIcon S
	templateIcon R
	containerTick ()V D
	getTemplateItem ()Ljava/util/Optional; I
	hasRecipeError ()Z J
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderErrorIcon (Lnet/minecraft/client/gui/GuiGraphics;II)V c
	renderOnboardingTooltips (Lnet/minecraft/client/gui/GuiGraphics;II)V d
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
	subInit ()V H
	updateArmorStandPreview (Lnet/minecraft/world/item/ItemStack;)V b
net/minecraft/client/gui/screens/inventory/SmokerScreen ffm
	BURN_PROGRESS_SPRITE z
	LIT_PROGRESS_SPRITE y
	TEXTURE A
net/minecraft/client/gui/screens/inventory/StonecutterScreen ffn
	BG_LOCATION C
	RECIPES_COLUMNS F
	RECIPES_IMAGE_SIZE_HEIGHT I
	RECIPES_IMAGE_SIZE_WIDTH H
	RECIPES_ROWS G
	RECIPES_X K
	RECIPES_Y L
	RECIPE_HIGHLIGHTED_SPRITE A
	RECIPE_SELECTED_SPRITE z
	RECIPE_SPRITE B
	SCROLLER_DISABLED_SPRITE y
	SCROLLER_FULL_HEIGHT J
	SCROLLER_HEIGHT E
	SCROLLER_SPRITE x
	SCROLLER_WIDTH D
	displayRecipes P
	scrollOffs M
	scrolling N
	startIndex O
	containerChanged ()V J
	getOffscreenRows ()I H
	isScrollBarActive ()Z I
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDDD)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderButtons (Lnet/minecraft/client/gui/GuiGraphics;IIIII)V a
	renderRecipes (Lnet/minecraft/client/gui/GuiGraphics;III)V b
	renderTooltip (Lnet/minecraft/client/gui/GuiGraphics;II)V a
net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen ffo
	ALL_MODES q
	CUSTOM_DATA_LABEL l
	DEFAULT_MODES r
	DETECT_SIZE_LABEL n
	INCLUDE_ENTITIES_LABEL m
	INTEGRITY_LABEL k
	NAME_LABEL a
	POSITION_LABEL b
	SHOW_AIR_LABEL o
	SHOW_BOUNDING_BOX_LABEL p
	SIZE_LABEL c
	dataEdit J
	decimalFormat V
	detectButton Q
	includeEntitiesButton R
	initialEntityIgnoring x
	initialMirror u
	initialMode w
	initialRotation v
	initialShowAir y
	initialShowBoundingBox z
	integrityEdit H
	loadButton L
	mirrorButton S
	nameEdit A
	posXEdit B
	posYEdit C
	posZEdit D
	rot0Button M
	rot180Button O
	rot270Button P
	rot90Button N
	saveButton K
	seedEdit I
	sizeXEdit E
	sizeYEdit F
	sizeZEdit G
	structure t
	toggleAirButton T
	toggleBoundingBox U
	init ()V aN_
	isPauseScreen ()Z k
	keyPressed (III)Z a
	onCancel ()V D
	onClose ()V aE_
	onDone ()V n
	parseCoordinate (Ljava/lang/String;)I c
	parseIntegrity (Ljava/lang/String;)F b
	parseSeed (Ljava/lang/String;)J a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	sendToServer (Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType;)Z a
	updateDirectionButtons ()V E
	updateMode (Lnet/minecraft/world/level/block/state/properties/StructureMode;)V a
net/minecraft/client/gui/screens/inventory/tooltip/BelowOrAboveWidgetTooltipPositioner ffq
	screenRectangle a
	positionTooltip (IIIIII)Lorg/joml/Vector2ic; a
net/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip ffr
	BACKGROUND_SPRITE a
	BORDER_WIDTH c
	MARGIN_Y b
	SLOT_SIZE_X d
	SLOT_SIZE_Y e
	items f
	weight g
	backgroundHeight ()I c
	backgroundWidth ()I b
	blit (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip$Texture;)V a
	getHeight ()I a
	getWidth (Lnet/minecraft/client/gui/Font;)I a
	gridSizeX ()I d
	gridSizeY ()I e
	renderImage (Lnet/minecraft/client/gui/Font;IILnet/minecraft/client/gui/GuiGraphics;)V a
	renderSlot (IIIZLnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;)V a
net/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip$Texture ffr$a
	$VALUES f
	BLOCKED_SLOT a
	SLOT b
	h e
	sprite c
	w d
	$values ()[Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip$Texture; a
net/minecraft/client/gui/screens/inventory/tooltip/ClientTextTooltip ffs
	text a
	getHeight ()I a
	getWidth (Lnet/minecraft/client/gui/Font;)I a
	renderText (Lnet/minecraft/client/gui/Font;IILorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;)V a
net/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipComponent fft
	create (Lnet/minecraft/util/FormattedCharSequence;)Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipComponent; a
	create (Lnet/minecraft/world/inventory/tooltip/TooltipComponent;)Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipComponent; a
	getHeight ()I a
	getWidth (Lnet/minecraft/client/gui/Font;)I a
	renderImage (Lnet/minecraft/client/gui/Font;IILnet/minecraft/client/gui/GuiGraphics;)V a
	renderText (Lnet/minecraft/client/gui/Font;IILorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;)V a
net/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner ffu
	positionTooltip (IIIIII)Lorg/joml/Vector2ic; a
net/minecraft/client/gui/screens/inventory/tooltip/DefaultTooltipPositioner ffv
	INSTANCE a
	positionTooltip (IIIIII)Lorg/joml/Vector2ic; a
	positionTooltip (IILorg/joml/Vector2i;II)V a
net/minecraft/client/gui/screens/inventory/tooltip/MenuTooltipPositioner ffw
	MARGIN c
	MAX_DISTANCE_TO_WIDGET b
	MAX_OVERLAP_WITH_WIDGET a
	MOUSE_OFFSET_X d
	screenRectangle e
	getOffset (III)I a
	positionTooltip (IIIIII)Lorg/joml/Vector2ic; a
net/minecraft/client/gui/screens/inventory/tooltip/TooltipRenderUtil ffx
	BACKGROUND_COLOR g
	BORDER_COLOR_BOTTOM i
	BORDER_COLOR_TOP h
	MOUSE_OFFSET a
	PADDING f
	PADDING_BOTTOM e
	PADDING_LEFT b
	PADDING_RIGHT c
	PADDING_TOP d
	renderFrameGradient (Lnet/minecraft/client/gui/GuiGraphics;IIIIIII)V a
	renderHorizontalLine (Lnet/minecraft/client/gui/GuiGraphics;IIIII)V c
	renderRectangle (Lnet/minecraft/client/gui/GuiGraphics;IIIIII)V b
	renderTooltipBackground (Lnet/minecraft/client/gui/GuiGraphics;IIIII)V a
	renderVerticalLine (Lnet/minecraft/client/gui/GuiGraphics;IIIII)V b
	renderVerticalLineGradient (Lnet/minecraft/client/gui/GuiGraphics;IIIIII)V a
net/minecraft/client/gui/screens/multiplayer/JoinMultiplayerScreen ffz
	BUTTON_ROW_WIDTH a
	FOOTER_HEIGHT k
	LOGGER m
	LOWER_ROW_BUTTON_WIDTH c
	TOP_ROW_BUTTON_WIDTH b
	deleteButton t
	editButton q
	editingServer v
	initedOnce y
	lanServerDetector x
	lanServerList w
	lastScreen o
	pinger n
	selectButton r
	serverSelectionList l
	servers p
	toolTip u
	addServerCallback (Z)V f
	deleteCallback (Z)V c
	directJoinCallback (Z)V g
	editServerCallback (Z)V e
	getPinger ()Lnet/minecraft/client/multiplayer/ServerStatusPinger; E
	getServers ()Lnet/minecraft/client/multiplayer/ServerList; H
	init ()V aN_
	join (Lnet/minecraft/client/multiplayer/ServerData;)V a
	joinSelectedServer ()V n
	keyPressed (III)Z a
	onSelectedChange ()V D
	refreshServerList ()V I
	removed ()V j
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	setSelected (Lnet/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry;)V a
	setToolTip (Ljava/util/List;)V c
	tick ()V d
net/minecraft/client/gui/screens/multiplayer/Realms32bitWarningScreen fga
	CHECK k
	CONTENT c
	NARRATION l
	TITLE b
	previous m
	initButtons (I)V a
net/minecraft/client/gui/screens/multiplayer/SafetyScreen fgb
	CHECK k
	CONTENT c
	NARRATION l
	TITLE b
	previous m
	initButtons (I)V a
net/minecraft/client/gui/screens/multiplayer/ServerReconfigScreen fgc
	DISCONNECT_TIME a
	connection b
	delayTicker k
	disconnectButton c
	layout l
	init ()V aN_
	repositionElements ()V c
	shouldCloseOnEsc ()Z aL_
	tick ()V d
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList fgd
	CANT_CONNECT_TEXT J
	CANT_RESOLVE_TEXT I
	ICON_MISSING G
	INCOMPATIBLE_SPRITE a
	INCOMPATIBLE_STATUS K
	JOIN_HIGHLIGHTED_SPRITE y
	JOIN_SPRITE z
	LOGGER E
	MOVE_DOWN_HIGHLIGHTED_SPRITE C
	MOVE_DOWN_SPRITE D
	MOVE_UP_HIGHLIGHTED_SPRITE A
	MOVE_UP_SPRITE B
	NO_CONNECTION_STATUS L
	ONLINE_STATUS N
	PINGING_1_SPRITE t
	PINGING_2_SPRITE u
	PINGING_3_SPRITE v
	PINGING_4_SPRITE w
	PINGING_5_SPRITE x
	PINGING_STATUS M
	PING_1_SPRITE n
	PING_2_SPRITE o
	PING_3_SPRITE p
	PING_4_SPRITE q
	PING_5_SPRITE r
	SCANNING_LABEL H
	THREAD_POOL F
	UNREACHABLE_SPRITE m
	lanHeader Q
	networkServers R
	onlineServers P
	screen O
	getRowWidth ()I b
	getScrollbarPosition ()I c
	keyPressed (III)Z a
	refreshEntries ()V e
	removed ()V d
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry;)V a
	updateNetworkServers (Ljava/util/List;)V a
	updateOnlineServers (Lnet/minecraft/client/multiplayer/ServerList;)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry fgd$a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$LANHeader fgd$b
	minecraft a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$NetworkServerEntry fgd$c
	HIDDEN_ADDRESS_TEXT e
	ICON_WIDTH c
	LAN_SERVER_HEADER d
	lastClickTime g
	minecraft a
	screen f
	serverData b
	getNarration ()Lnet/minecraft/network/chat/Component; a
	getServerData ()Lnet/minecraft/client/server/LanServer; b
	getServerNarration ()Lnet/minecraft/network/chat/Component; c
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$OnlineServerEntry fgd$d
	ICON_HEIGHT c
	ICON_OVERLAY_X_MOVE_LEFT d
	ICON_WIDTH b
	icon h
	lastClickTime j
	lastIconBytes i
	minecraft f
	screen e
	serverData g
	canJoin ()Z f
	drawIcon (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/resources/ResourceLocation;)V a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	getServerData ()Lnet/minecraft/client/multiplayer/ServerData; c
	isCompatible ()Z e
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	pingCompleted ()Z d
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	swap (II)V a
	updateServerList ()V b
	uploadServerIcon ([B)Z a
net/minecraft/client/gui/screens/multiplayer/WarningScreen fge
	check c
	content b
	message l
	narration k
	stopShowing a
	getLineHeight ()I n
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	initButtons (I)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderTitle (Lnet/minecraft/client/gui/GuiGraphics;)V c
net/minecraft/client/gui/screens/packs/PackSelectionModel fgh
	iconGetter d
	onListChanged e
	output f
	repository a
	selected b
	unselected c
	commit ()V c
	findNewPacks ()V d
	getSelected ()Ljava/util/stream/Stream; b
	getUnselected ()Ljava/util/stream/Stream; a
	updateRepoSelectedList ()V e
net/minecraft/client/gui/screens/packs/PackSelectionModel$Entry fgh$a
	canMoveDown ()Z r
	canMoveUp ()Z q
	canSelect ()Z o
	canUnselect ()Z p
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; b
	getDescription ()Lnet/minecraft/network/chat/Component; e
	getExtendedDescription ()Lnet/minecraft/network/chat/Component; g
	getIconTexture ()Lnet/minecraft/resources/ResourceLocation; a
	getId ()Ljava/lang/String; c
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; f
	getTitle ()Lnet/minecraft/network/chat/Component; d
	isFixedPosition ()Z h
	isRequired ()Z i
	isSelected ()Z n
	moveDown ()V m
	moveUp ()V l
	select ()V j
	unselect ()V k
net/minecraft/client/gui/screens/packs/PackSelectionModel$EntryBase fgh$b
	pack b
	canMoveDown ()Z r
	canMoveUp ()Z q
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; b
	getDescription ()Lnet/minecraft/network/chat/Component; e
	getIconTexture ()Lnet/minecraft/resources/ResourceLocation; a
	getId ()Ljava/lang/String; c
	getOtherList ()Ljava/util/List; t
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; f
	getSelfList ()Ljava/util/List; s
	getTitle ()Lnet/minecraft/network/chat/Component; d
	isFixedPosition ()Z h
	isRequired ()Z i
	move (I)V a
	moveDown ()V m
	moveUp ()V l
	toggleSelection ()V u
	updateHighContrastOptionInstance ()V v
net/minecraft/client/gui/screens/packs/PackSelectionModel$SelectedPackEntry fgh$c
	getOtherList ()Ljava/util/List; t
	getSelfList ()Ljava/util/List; s
	isSelected ()Z n
	select ()V j
	unselect ()V k
net/minecraft/client/gui/screens/packs/PackSelectionModel$UnselectedPackEntry fgh$d
	getOtherList ()Ljava/util/List; t
	getSelfList ()Ljava/util/List; s
	isSelected ()Z n
	select ()V j
	unselect ()V k
net/minecraft/client/gui/screens/packs/PackSelectionScreen fgi
	DEFAULT_ICON m
	DIRECTORY_BUTTON_TOOLTIP k
	DRAG_AND_DROP c
	LIST_WIDTH b
	LOGGER a
	RELOAD_COOLDOWN l
	availablePackList q
	doneButton u
	model n
	packDir t
	packIcons v
	selectedPackList r
	ticksToReload p
	watcher o
	clearSelected ()V n
	closeWatcher ()V D
	copyPacks (Lnet/minecraft/client/Minecraft;Ljava/util/List;Ljava/nio/file/Path;)V a
	extractPackNames (Ljava/util/Collection;)Ljava/util/stream/Stream; a
	getPackIcon (Lnet/minecraft/server/packs/repository/Pack;)Lnet/minecraft/resources/ResourceLocation; a
	init ()V aN_
	loadPackIcon (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/server/packs/repository/Pack;)Lnet/minecraft/resources/ResourceLocation; a
	onClose ()V aE_
	onFilesDrop (Ljava/util/List;)V a
	populateLists ()V E
	reload ()V H
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	tick ()V d
	updateFocus (Lnet/minecraft/client/gui/screens/packs/TransferableSelectionList;)V a
	updateList (Lnet/minecraft/client/gui/screens/packs/TransferableSelectionList;Ljava/util/stream/Stream;)V a
net/minecraft/client/gui/screens/packs/PackSelectionScreen$Watcher fgi$a
	packPath b
	watcher a
	create (Ljava/nio/file/Path;)Lnet/minecraft/client/gui/screens/packs/PackSelectionScreen$Watcher; a
	pollForChanges ()Z a
	watchDir (Ljava/nio/file/Path;)V b
net/minecraft/client/gui/screens/packs/TransferableSelectionList fgj
	INCOMPATIBLE_CONFIRM_TITLE v
	INCOMPATIBLE_TITLE u
	MOVE_DOWN_HIGHLIGHTED_SPRITE r
	MOVE_DOWN_SPRITE t
	MOVE_UP_HIGHLIGHTED_SPRITE p
	MOVE_UP_SPRITE q
	SELECT_HIGHLIGHTED_SPRITE a
	SELECT_SPRITE m
	UNSELECT_HIGHLIGHTED_SPRITE n
	UNSELECT_SPRITE o
	screen x
	title w
	getRowWidth ()I b
	getScrollbarPosition ()I c
	keyPressed (III)Z a
	renderHeader (Lnet/minecraft/client/gui/GuiGraphics;II)V a
net/minecraft/client/gui/screens/packs/TransferableSelectionList$PackEntry fgj$a
	MAX_DESCRIPTION_WIDTH_PIXELS b
	MAX_NAME_WIDTH_PIXELS c
	TOO_LONG_NAME_SUFFIX d
	descriptionDisplayCache h
	incompatibleDescriptionDisplayCache j
	incompatibleNameDisplayCache i
	minecraft a
	nameDisplayCache g
	pack f
	parent e
	cacheDescription (Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/MultiLineLabel; b
	cacheName (Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/util/FormattedCharSequence; a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	getPackId ()Ljava/lang/String; b
	handlePackSelection ()Z g
	keyboardMoveDown ()V f
	keyboardMoveUp ()V e
	keyboardSelection ()V c
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	showHoverOverlay ()Z d
net/minecraft/client/gui/screens/recipebook/AbstractFurnaceRecipeBookComponent fgl
	FILTER_SPRITES i
	fuels j
	getFuelItems ()Ljava/util/Set; b
	initFilterButtonTextures ()V a
	setupGhostRecipe (Lnet/minecraft/world/item/crafting/RecipeHolder;Ljava/util/List;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;)V a
net/minecraft/client/gui/screens/recipebook/BlastingRecipeBookComponent fgm
	FILTER_NAME i
	getFuelItems ()Ljava/util/Set; b
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; c
net/minecraft/client/gui/screens/recipebook/GhostRecipe fgn
	ingredients b
	recipe a
	time c
	addIngredient (Lnet/minecraft/world/item/crafting/Ingredient;II)V a
	clear ()V a
	get (I)Lnet/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient; a
	getRecipe ()Lnet/minecraft/world/item/crafting/RecipeHolder; c
	render (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/Minecraft;IIZF)V a
	setRecipe (Lnet/minecraft/world/item/crafting/RecipeHolder;)V a
	size ()I b
net/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient fgn$a
	ingredient b
	x c
	y d
	getItem ()Lnet/minecraft/world/item/ItemStack; c
	getX ()I a
	getY ()I b
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent fgo
	BUTTON_SIZE a
	CRAFTING_OVERLAY_DISABLED_HIGHLIGHTED_SPRITE i
	CRAFTING_OVERLAY_DISABLED_SPRITE j
	CRAFTING_OVERLAY_HIGHLIGHTED_SPRITE e
	CRAFTING_OVERLAY_SPRITE f
	FURNACE_OVERLAY_DISABLED_HIGHLIGHTED_SPRITE g
	FURNACE_OVERLAY_DISABLED_SPRITE h
	FURNACE_OVERLAY_HIGHLIGHTED_SPRITE c
	FURNACE_OVERLAY_SPRITE d
	ITEM_RENDER_SCALE m
	MAX_ROW k
	MAX_ROW_LARGE l
	OVERLAY_RECIPE_SPRITE b
	collection t
	isFurnaceMenu w
	isVisible o
	lastRecipeClicked u
	minecraft r
	recipeButtons n
	time v
	x p
	y q
	getLastRecipeClicked ()Lnet/minecraft/world/item/crafting/RecipeHolder; b
	getRecipeCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; a
	init (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection;IIIIF)V a
	isFocused ()Z aI_
	isMouseOver (DD)Z c
	isVisible ()Z c
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	setFocused (Z)V a
	setVisible (Z)V b
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton fgo$a
	ingredientPos a
	isCraftable d
	recipe c
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	calculateIngredientsPositions (Lnet/minecraft/world/item/crafting/RecipeHolder;)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton$Pos fgo$a$a
	ingredients a
	x b
	y c
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlaySmeltingRecipeButton fgo$b
	calculateIngredientsPositions (Lnet/minecraft/world/item/crafting/RecipeHolder;)V a
net/minecraft/client/gui/screens/recipebook/RecipeBookComponent fgp
	ALL_RECIPES_TOOLTIP m
	FILTER_BUTTON_SPRITES i
	IMAGE_HEIGHT d
	IMAGE_WIDTH c
	OFFSET_X_POSITION k
	ONLY_CRAFTABLES_TOOLTIP l
	RECIPE_BOOK_LOCATION b
	RECIPE_BUTTON_SPRITES a
	SEARCH_HINT j
	book v
	filterButton f
	ghostRecipe e
	height p
	ignoreTextInput z
	lastSearch u
	menu g
	minecraft h
	recipeBookPage w
	searchBox t
	selectedTab r
	stackedContents x
	tabButtons q
	timesInventoryChanged y
	visible A
	width o
	widthTooNarrow B
	xOffset n
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	charTyped (CI)Z a
	checkSearchStringUpdate ()V o
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; c
	hasClickedOutside (DDIIIII)Z a
	init (IILnet/minecraft/client/Minecraft;ZLnet/minecraft/world/inventory/RecipeBookMenu;)V a
	initFilterButtonTextures ()V a
	initVisuals ()V d
	isFocused ()Z aI_
	isMouseOver (DD)Z c
	isOffsetNextToMainGUI ()Z p
	isVisible ()Z f
	isVisibleAccordingToBookData ()Z k
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; s
	pirateSpeechForThePeople (Ljava/lang/String;)V a
	recipesShown (Ljava/util/List;)V a
	recipesUpdated ()V i
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderGhostRecipe (Lnet/minecraft/client/gui/GuiGraphics;IIZF)V a
	renderGhostRecipeTooltip (Lnet/minecraft/client/gui/GuiGraphics;IIII)V b
	renderTooltip (Lnet/minecraft/client/gui/GuiGraphics;IIII)V a
	sendUpdateSettings ()V j
	setFocused (Z)V a
	setVisible (Z)V b
	setupGhostRecipe (Lnet/minecraft/world/item/crafting/RecipeHolder;Ljava/util/List;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;)V a
	tick ()V g
	toggleFiltering ()Z n
	toggleVisibility ()V e
	updateCollections (Z)V c
	updateFilterButtonTooltip ()V b
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
	updateScreenPosition (II)I a
	updateStackedContents ()V m
	updateTabs ()V l
net/minecraft/client/gui/screens/recipebook/RecipeBookPage fgq
	ITEMS_PER_PAGE a
	PAGE_BACKWARD_SPRITES c
	PAGE_FORWARD_SPRITES b
	backButton k
	buttons d
	currentPage m
	forwardButton j
	hoveredButton e
	lastClickedRecipe o
	lastClickedRecipeCollection p
	minecraft g
	overlay f
	recipeBook n
	recipeCollections i
	showListeners h
	totalPages l
	addListener (Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent;)V a
	getLastClickedRecipe ()Lnet/minecraft/world/item/crafting/RecipeHolder; a
	getLastClickedRecipeCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; b
	getMinecraft ()Lnet/minecraft/client/Minecraft; d
	getRecipeBook ()Lnet/minecraft/stats/RecipeBook; e
	init (Lnet/minecraft/client/Minecraft;II)V a
	listButtons (Ljava/util/function/Consumer;)V a
	mouseClicked (DDIIIII)Z a
	recipesShown (Ljava/util/List;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIF)V a
	renderTooltip (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	setInvisible ()V c
	updateArrowButtons ()V g
	updateButtonsForPage ()V f
	updateCollections (Ljava/util/List;Z)V a
net/minecraft/client/gui/screens/recipebook/RecipeBookTabButton fgr
	ANIMATION_TIME e
	SPRITES c
	animationTime f
	category d
	getCategory ()Lnet/minecraft/client/RecipeBookCategories; b
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/renderer/entity/ItemRenderer;)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	startAnimation (Lnet/minecraft/client/Minecraft;)V a
	updateVisibility (Lnet/minecraft/client/ClientRecipeBook;)Z a
net/minecraft/client/gui/screens/recipebook/RecipeButton fgs
	ANIMATION_TIME f
	BACKGROUND_SIZE m
	MORE_RECIPES_TOOLTIP n
	SLOT_CRAFTABLE_SPRITE c
	SLOT_MANY_CRAFTABLE_SPRITE b
	SLOT_MANY_UNCRAFTABLE_SPRITE d
	SLOT_UNCRAFTABLE_SPRITE e
	TICKS_TO_SWAP a
	animationTime t
	book p
	collection q
	currentIndex u
	menu o
	time r
	getCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; a
	getOrderedRecipes ()Ljava/util/List; f
	getRecipe ()Lnet/minecraft/world/item/crafting/RecipeHolder; d
	getTooltipText ()Ljava/util/List; e
	getWidth ()I w
	init (Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection;Lnet/minecraft/client/gui/screens/recipebook/RecipeBookPage;)V a
	isOnlyOption ()Z b
	isValidClickButton (I)Z k
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/recipebook/RecipeCollection fgt
	craftable d
	fitsDimensions e
	known f
	recipes b
	registryAccess a
	singleResultItem c
	allRecipesHaveSameResult (Lnet/minecraft/core/RegistryAccess;Ljava/util/List;)Z a
	canCraft (Lnet/minecraft/world/entity/player/StackedContents;IILnet/minecraft/stats/RecipeBook;)V a
	getDisplayRecipes (Z)Ljava/util/List; b
	getRecipes ()Ljava/util/List; e
	getRecipes (Z)Ljava/util/List; a
	hasCraftable ()Z c
	hasFitting ()Z d
	hasKnownRecipes ()Z b
	hasSingleResultItem ()Z f
	isCraftable (Lnet/minecraft/world/item/crafting/RecipeHolder;)Z a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; a
	updateKnownRecipes (Lnet/minecraft/stats/RecipeBook;)V a
net/minecraft/client/gui/screens/recipebook/RecipeShownListener fgu
	recipesShown (Ljava/util/List;)V a
net/minecraft/client/gui/screens/recipebook/RecipeUpdateListener fgv
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; I
	recipesUpdated ()V H
net/minecraft/client/gui/screens/recipebook/SmeltingRecipeBookComponent fgw
	FILTER_NAME i
	getFuelItems ()Ljava/util/Set; b
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; c
net/minecraft/client/gui/screens/recipebook/SmokingRecipeBookComponent fgx
	FILTER_NAME i
	getFuelItems ()Ljava/util/Set; b
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; c
net/minecraft/client/gui/screens/reporting/AbstractReportScreen fgz
	DESCRIBE_PLACEHOLDER x
	LOGGER z
	MARGIN l
	MORE_COMMENTS_LABEL k
	MORE_COMMENTS_NARRATION y
	OBSERVED_WHAT_LABEL b
	REPORT_ERROR_TITLE v
	REPORT_SENDING_TITLE t
	REPORT_SEND_GENERIC_ERROR w
	REPORT_SENT_MESSAGE r
	REPORT_SENT_TITLE u
	SCREEN_WIDTH m
	SELECT_REASON c
	SEND_REPORT a
	SPACING n
	lastScreen o
	reportBuilder q
	reportingContext p
	clearDraft ()V H
	createCommentBox (IILjava/util/function/Consumer;)Lnet/minecraft/client/gui/components/MultiLineEditBox; a
	displayReportSendError (Lnet/minecraft/network/chat/Component;)V a
	onClose ()V aE_
	onReportSendError (Ljava/lang/Throwable;)V a
	onReportSendSuccess ()V D
	removed ()V j
	saveDraft ()V E
	sendReport ()V n
net/minecraft/client/gui/screens/reporting/AbstractReportScreen$DiscardReportWarningScreen fgz$a
	BUTTON_MARGIN c
	DISCARD o
	DRAFT n
	MESSAGE l
	RETURN m
	TITLE k
	initButtons (I)V a
	onClose ()V aE_
	renderTitle (Lnet/minecraft/client/gui/GuiGraphics;)V c
	shouldCloseOnEsc ()Z aL_
net/minecraft/client/gui/screens/reporting/ChatReportScreen fha
	BUTTON_WIDTH r
	SELECT_CHAT_MESSAGE u
	TITLE t
	commentBox w
	layout v
	selectMessagesButton y
	selectReasonButton z
	sendButton x
	init ()V aN_
	mouseReleased (DDI)Z b
	onReportChanged ()V D
	repositionElements ()V c
net/minecraft/client/gui/screens/reporting/ChatSelectionLogFiller fhb
	canReport c
	contextBuilder b
	eventId e
	lastMessage g
	log a
	missedCount f
	previousLink d
	acceptMessage (Lnet/minecraft/client/gui/screens/reporting/ChatSelectionLogFiller$Output;Lnet/minecraft/client/multiplayer/chat/LoggedChatMessage$Player;)Z a
	fillNextPage (ILnet/minecraft/client/gui/screens/reporting/ChatSelectionLogFiller$Output;)V a
net/minecraft/client/gui/screens/reporting/ChatSelectionLogFiller$Output fhb$a
	acceptDivider (Lnet/minecraft/network/chat/Component;)V a
	acceptMessage (ILnet/minecraft/client/multiplayer/chat/LoggedChatMessage$Player;)V a
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen fhc
	CHECKMARK_SPRITE a
	CONTEXT_INFO c
	TITLE b
	chatLogFiller r
	chatSelectionList o
	confirmSelectedButton m
	contextInfoLabel n
	lastScreen k
	onSelected q
	report p
	reportingContext l
	canReport (Lnet/minecraft/client/multiplayer/chat/LoggedChatMessage;)Z a
	extendLog ()V n
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	onClose ()V aE_
	onReachedScrollTop ()V D
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	updateConfirmSelectedButton ()V E
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList fhc$a
	previousHeading m
	acceptDivider (Lnet/minecraft/network/chat/Component;)V a
	acceptMessage (ILnet/minecraft/client/multiplayer/chat/LoggedChatMessage$Player;)V a
	getFooterTop ()I e
	getMaxVisibleEntries ()I d
	getRowWidth ()I b
	getScrollbarPosition ()I c
	keyPressed (III)Z a
	nextEntry (Lnet/minecraft/client/gui/navigation/ScreenDirection;)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	nextEntry (Lnet/minecraft/client/gui/navigation/ScreenDirection;)Lnet/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Entry; b
	renderItem (Lnet/minecraft/client/gui/GuiGraphics;IIFIIIII)V a
	setScrollAmount (D)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Entry;)V a
	shouldHighlightEntry (Lnet/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Entry;)Z b
	updateHeading (Lnet/minecraft/client/multiplayer/chat/LoggedChatMessage$Player;Z)V a
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$DividerEntry fhc$a$a
	COLOR c
	text d
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Entry fhc$a$b
	canReport ()Z d
	canSelect ()Z c
	getNarration ()Lnet/minecraft/network/chat/Component; a
	isSelected ()Z b
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Heading fhc$a$c
	entry b
	sender a
	canCombine (Lnet/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Heading;)Z a
	entry ()Lnet/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Entry; b
	sender ()Ljava/util/UUID; a
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$MessageEntry fhc$a$d
	CHECKMARK_HEIGHT d
	CHECKMARK_WIDTH c
	INDENT_AMOUNT e
	TAG_MARGIN_LEFT f
	canReport m
	chatId g
	hoverText j
	narration i
	playerMessage n
	tagHoverText l
	tagIcon k
	text h
	canReport ()Z d
	canSelect ()Z c
	getMaximumTextWidth ()I e
	getNarration ()Lnet/minecraft/network/chat/Component; a
	getTextIndent ()I f
	isSelected ()Z b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	renderSelectedCheckmark (Lnet/minecraft/client/gui/GuiGraphics;III)V a
	renderTag (Lnet/minecraft/client/gui/GuiGraphics;IIIII)V a
	toggleReport ()Z g
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$MessageHeadingEntry fhc$a$e
	FACE_SIZE c
	canReport f
	heading d
	skin e
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$PaddingEntry fhc$a$f
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/reporting/NameReportScreen fhd
	BUTTON_WIDTH r
	TITLE t
	commentBox v
	layout u
	sendButton w
	init ()V aN_
	mouseReleased (DDI)Z b
	onReportChanged ()V D
	repositionElements ()V c
net/minecraft/client/gui/screens/reporting/ReportPlayerScreen fhe
	MESSAGE b
	REPORT_CHAT c
	REPORT_NAME l
	REPORT_SKIN k
	SPACING m
	TITLE a
	context o
	lastScreen n
	layout q
	player p
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	onClose ()V aE_
	repositionElements ()V c
net/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen fhf
	BUTTON_HEIGHT m
	BUTTON_WIDTH l
	CONTENT_WIDTH n
	FOOTER_HEIGHT k
	PADDING o
	READ_INFO_LABEL c
	REASON_DESCRIPTION b
	REASON_TITLE a
	currentlySelectedReason r
	lastScreen p
	onSelectedReason t
	reasonSelectionList q
	buttonTop ()I n
	contentLeft ()I D
	contentRight ()I E
	descriptionBottom ()I I
	descriptionTop ()I H
	init ()V aN_
	onClose ()V aE_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen$ReasonSelectionList fhf$a
	findEntry (Lnet/minecraft/client/multiplayer/chat/report/ReportReason;)Lnet/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen$ReasonSelectionList$Entry; a
	getRowWidth ()I b
	getScrollbarPosition ()I c
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen$ReasonSelectionList$Entry;)V a
net/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen$ReasonSelectionList$Entry fhf$a$a
	reason b
	getNarration ()Lnet/minecraft/network/chat/Component; a
	getReason ()Lnet/minecraft/client/multiplayer/chat/report/ReportReason; b
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/reporting/SkinReportScreen fhg
	BUTTON_WIDTH r
	FORM_WIDTH u
	SKIN_WIDTH t
	TITLE v
	commentBox x
	layout w
	selectReasonButton z
	sendButton y
	init ()V aN_
	mouseReleased (DDI)Z b
	onReportChanged ()V D
	repositionElements ()V c
net/minecraft/client/gui/screens/social/PlayerEntry fhi
	BG_FILL b
	BG_FILL_REMOVED c
	BLOCKED A
	BLOCKED_OFFLINE D
	CHAT_TOGGLE_ICON_SIZE K
	DRAFT_REPORT_SPRITE f
	HIDDEN z
	HIDDEN_OFFLINE C
	HIDE_TEXT_TOOLTIP F
	MUTE_BUTTON_SPRITES i
	OFFLINE B
	PADDING J
	PLAYERNAME_COLOR d
	PLAYER_STATUS_COLOR e
	REPORT_BUTTON_SPRITES h
	REPORT_DISABLED_TOOLTIP E
	REPORT_PLAYER_TOOLTIP H
	SHOW_TEXT_TOOLTIP G
	SKIN_SHADE a
	SKIN_SIZE I
	TOOLTIP_DELAY g
	UNMUTE_BUTTON_SPRITES j
	chatReportable u
	children l
	hasDraftReport t
	hasRecentMessages q
	hideButton v
	id m
	isRemoved p
	minecraft k
	playerName n
	reportButton x
	reportingEnabled r
	showButton w
	skinGetter o
	tooltipHoverTime y
	children ()Ljava/util/List; l
	createReportButtonTooltip ()Lnet/minecraft/client/gui/components/Tooltip; k
	getEntryNarationMessage (Lnet/minecraft/network/chat/MutableComponent;)Lnet/minecraft/network/chat/MutableComponent; a
	getPlayerId ()Ljava/util/UUID; c
	getPlayerName ()Ljava/lang/String; b
	getSkinGetter ()Ljava/util/function/Supplier; d
	getStatusComponent ()Lnet/minecraft/network/chat/Component; m
	hasRecentMessages ()Z i
	isChatReportable ()Z j
	isRemoved ()Z e
	narratables ()Ljava/util/List; a
	onHiddenOrShown (ZLnet/minecraft/network/chat/Component;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	setHasRecentMessages (Z)V d
	setRemoved (Z)V c
	updateHideAndShowButton (Z)V e
net/minecraft/client/gui/screens/social/PlayerSocialManager fhj
	discoveredNamesToUUID d
	hiddenPlayers b
	minecraft a
	onlineMode e
	pendingBlockListRefresh f
	service c
	addPlayer (Lnet/minecraft/client/multiplayer/PlayerInfo;)V a
	getDiscoveredUUID (Ljava/lang/String;)Ljava/util/UUID; a
	getHiddenPlayers ()Ljava/util/Set; c
	hidePlayer (Ljava/util/UUID;)V a
	isBlocked (Ljava/util/UUID;)Z e
	isHidden (Ljava/util/UUID;)Z d
	removePlayer (Ljava/util/UUID;)V f
	shouldHideMessageFrom (Ljava/util/UUID;)Z c
	showPlayer (Ljava/util/UUID;)V b
	startOnlineMode ()V a
	stopOnlineMode ()V b
net/minecraft/client/gui/screens/social/SocialInteractionsPlayerList fhk
	filter n
	players m
	socialInteractionsScreen a
	addOnlinePlayers (Ljava/util/Collection;Ljava/util/Map;)V a
	addPlayer (Lnet/minecraft/client/multiplayer/PlayerInfo;Lnet/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page;)V a
	collectProfilesFromChatLog (Lnet/minecraft/client/multiplayer/chat/ChatLog;)Ljava/util/Collection; a
	enableScissor (Lnet/minecraft/client/gui/GuiGraphics;)V a
	isEmpty ()Z d
	removePlayer (Ljava/util/UUID;)V a
	setFilter (Ljava/lang/String;)V a
	sortPlayerEntries ()V e
	updateFilteredPlayers ()V H
	updateFiltersAndScroll (Ljava/util/Collection;D)V a
	updatePlayerList (Ljava/util/Collection;DZ)V a
	updatePlayersFromChatLog (Ljava/util/Map;Z)V a
net/minecraft/client/gui/screens/social/SocialInteractionsScreen fhl
	BACKGROUND_SPRITE c
	BG_BORDER_SIZE x
	BG_WIDTH y
	BLOCKING_HINT w
	BUTTON_HEIGHT C
	EMPTY_BLOCKED v
	EMPTY_HIDDEN u
	EMPTY_SEARCH t
	IMAGE_WIDTH B
	ITEM_HEIGHT D
	LIST_START b
	MARGIN_Y A
	SEARCH_HEIGHT z
	SEARCH_HINT r
	SEARCH_SPRITE k
	SEARCH_START a
	TAB_ALL l
	TAB_ALL_SELECTED o
	TAB_BLOCKED n
	TAB_BLOCKED_SELECTED q
	TAB_HIDDEN m
	TAB_HIDDEN_SELECTED p
	allButton I
	blockedButton K
	blockingHintButton L
	hiddenButton J
	initialized O
	lastSearch G
	page H
	playerCount N
	searchBox F
	serverLabel M
	socialInteractionsPlayerList E
	checkSearchStringUpdate (Ljava/lang/String;)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	isPauseScreen ()Z k
	keyPressed (III)Z a
	listEnd ()I D
	marginX ()I E
	onAddPlayer (Lnet/minecraft/client/multiplayer/PlayerInfo;)V a
	onRemovePlayer (Ljava/util/UUID;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	showPage (Lnet/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page;)V a
	updateServerLabel (Lnet/minecraft/client/Minecraft;)V a
	windowHeight ()I n
net/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page fhl$a
	$VALUES d
	ALL a
	BLOCKED c
	HIDDEN b
	$values ()[Lnet/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page; a
net/minecraft/client/gui/screens/telemetry/TelemetryEventWidget fhn
	HEADER_HORIZONTAL_PADDING a
	PROPERTY_TITLE e
	TELEMETRY_OPTIONAL_DISABLED_TRANSLATION_KEY d
	TELEMETRY_OPTIONAL_TRANSLATION_KEY c
	TELEMETRY_REQUIRED_TRANSLATION_KEY b
	content m
	font f
	onScrolledListener n
	addEventType (Lnet/minecraft/client/gui/screens/telemetry/TelemetryEventWidget$ContentBuilder;Lnet/minecraft/client/telemetry/TelemetryEventType;Z)V a
	addEventTypeProperties (Lnet/minecraft/client/telemetry/TelemetryEventType;Lnet/minecraft/client/gui/screens/telemetry/TelemetryEventWidget$ContentBuilder;Z)V a
	buildContent (Z)Lnet/minecraft/client/gui/screens/telemetry/TelemetryEventWidget$Content; c
	containerWidth ()I j
	getInnerHeight ()I g
	grayOutIfDisabled (Lnet/minecraft/network/chat/Component;Z)Lnet/minecraft/network/chat/Component; a
	onOptInChanged (Z)V b
	renderContents (Lnet/minecraft/client/gui/GuiGraphics;IIF)V c
	scrollRate ()D i
	setOnScrolledListener (Ljava/util/function/DoubleConsumer;)V a
	setScrollAmount (D)V a
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/telemetry/TelemetryEventWidget$Content fhn$a
	container a
	narration b
	container ()Lnet/minecraft/client/gui/layouts/Layout; a
	narration ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/gui/screens/telemetry/TelemetryEventWidget$ContentBuilder fhn$b
	layout b
	narration c
	width a
	addHeader (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;)V b
	addLine (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;)V a
	addLine (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;I)V a
	addSpacer (I)V a
	build ()Lnet/minecraft/client/gui/screens/telemetry/TelemetryEventWidget$Content; a
net/minecraft/client/gui/screens/telemetry/TelemetryInfoScreen fho
	BUTTON_GIVE_FEEDBACK l
	BUTTON_PRIVACY_STATEMENT k
	BUTTON_SHOW_DATA m
	CHECKBOX_OPT_IN n
	DESCRIPTION c
	PADDING a
	TITLE b
	lastScreen o
	options p
	savedScroll r
	telemetryEventWidget q
	createLowerSection ()Lnet/minecraft/client/gui/layouts/Layout; n
	createTelemetryCheckbox ()Lnet/minecraft/client/gui/components/AbstractWidget; D
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	onClose ()V aE_
	onOptInChanged (Lnet/minecraft/client/gui/components/AbstractWidget;Z)V a
	openDataFolder (Lnet/minecraft/client/gui/components/Button;)V d
	openFeedbackLink (Lnet/minecraft/client/gui/components/Button;)V c
	openLastScreen (Lnet/minecraft/client/gui/components/Button;)V a
	openPrivacyStatementLink (Lnet/minecraft/client/gui/components/Button;)V b
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	twoButtonContainer (Lnet/minecraft/client/gui/components/AbstractWidget;Lnet/minecraft/client/gui/components/AbstractWidget;)Lnet/minecraft/client/gui/layouts/GridLayout; a
net/minecraft/client/gui/screens/worldselection/ConfirmExperimentalFeaturesScreen fhq
	COLUMN_SPACING k
	DETAILS_BUTTON c
	DETAILS_BUTTON_WIDTH l
	MESSAGE b
	TITLE a
	callback m
	enabledPacks n
	layout o
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	onClose ()V aE_
	repositionElements ()V c
net/minecraft/client/gui/screens/worldselection/ConfirmExperimentalFeaturesScreen$DetailsScreen fhq$a
	packList b
	init ()V aN_
	onClose ()V aE_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/client/gui/screens/worldselection/ConfirmExperimentalFeaturesScreen$DetailsScreen$PackList fhq$a$a
	getRowWidth ()I b
net/minecraft/client/gui/screens/worldselection/ConfirmExperimentalFeaturesScreen$DetailsScreen$PackListEntry fhq$a$b
	message c
	packId b
	splitMessage d
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen fhr
	ALLOW_CHEATS_INFO t
	EXPERIMENTS_LABEL r
	FOOTER_HEIGHT m
	FOOTER_SEPERATOR b
	GAME_MODEL_LABEL p
	GROUP_BOTTOM k
	HEADER_SEPERATOR a
	HORIZONTAL_BUTTON_SPACING v
	LIGHT_DIRT_BACKGROUND c
	LOGGER n
	NAME_LABEL q
	PREPARING_WORLD_DATA u
	TAB_COLUMN_WIDTH l
	TEMP_WORLD_PREFIX o
	VERTICAL_BUTTON_SPACING w
	bottomButtons E
	lastScreen B
	packValidator A
	recreated z
	tabManager y
	tabNavigationBar F
	tempDataPackDir C
	tempDataPackRepository D
	uiState x
	addRenderableWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; d
	addWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; e
	applyNewPackConfig (Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/world/level/WorldDataConfiguration;Ljava/util/function/Consumer;)V a
	copyBetweenDirs (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V a
	createDefaultLoadConfig (Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/world/level/WorldDataConfiguration;)Lnet/minecraft/server/WorldLoader$InitConfig; a
	createFromExisting (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/Screen;Lnet/minecraft/world/level/LevelSettings;Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext;Ljava/nio/file/Path;)Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen; a
	createLevelSettings (Z)Lnet/minecraft/world/level/LevelSettings; c
	createNewWorld (Lnet/minecraft/world/level/storage/PrimaryLevelData$SpecialWorldProperty;Lnet/minecraft/core/LayeredRegistryAccess;Lcom/mojang/serialization/Lifecycle;)V a
	createNewWorldDirectory ()Ljava/util/Optional; J
	createTempDataPackDirFromExistingWorld (Ljava/nio/file/Path;Lnet/minecraft/client/Minecraft;)Ljava/nio/file/Path; a
	getDataPackSelectionSettings (Lnet/minecraft/world/level/WorldDataConfiguration;)Lcom/mojang/datafixers/util/Pair; c
	getTempDataPackDir ()Ljava/nio/file/Path; H
	getUiState ()Lnet/minecraft/client/gui/screens/worldselection/WorldCreationUiState; n
	init ()V aN_
	keyPressed (III)Z a
	onClose ()V aE_
	onCreate ()V E
	openDataPackSelectionScreen (Lnet/minecraft/world/level/WorldDataConfiguration;)V b
	openExperimentsScreen (Lnet/minecraft/world/level/WorldDataConfiguration;)V a
	openFresh (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/Screen;)V a
	popScreen ()V D
	queueLoadScreen (Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/chat/Component;)V a
	removeTempDataPackDir ()V I
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderDirtBackground (Lnet/minecraft/client/gui/GuiGraphics;)V b
	repositionElements ()V c
	tryApplyNewDataPacks (Lnet/minecraft/server/packs/repository/PackRepository;ZLjava/util/function/Consumer;)V a
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$DataPackReloadCookie fhr$a
	dataConfiguration b
	worldGenSettings a
	dataConfiguration ()Lnet/minecraft/world/level/WorldDataConfiguration; b
	worldGenSettings ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$GameTab fhr$b
	ALLOW_CHEATS d
	TITLE c
	nameEdit e
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$MoreTab fhr$c
	DATA_PACKS_LABEL e
	GAME_RULES_LABEL d
	TITLE c
	openGameRulesScreen ()V b
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$WorldTab fhr$d
	AMPLIFIED_HELP_TEXT d
	BONUS_CHEST g
	GENERATE_STRUCTURES e
	GENERATE_STRUCTURES_INFO f
	SEED_EMPTY_HINT i
	SEED_LABEL h
	TITLE c
	WORLD_TAB_WIDTH j
	customizeTypeButton l
	seedEdit k
	createTypeButtonNarration (Lnet/minecraft/client/gui/components/CycleButton;)Lnet/minecraft/network/chat/MutableComponent; a
	createWorldTypeValueSupplier ()Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; c
	openPresetEditor ()V b
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen fhs
	doneButton k
	exitCallback a
	gameRules m
	invalidEntries c
	rules b
	tooltip l
	clearInvalid (Lnet/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry;)V b
	init ()V aN_
	markInvalid (Lnet/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry;)V a
	onClose ()V aE_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	updateDoneButton ()V n
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$BooleanRuleEntry fhs$a
	checkbox d
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$CategoryRuleEntry fhs$b
	label b
	children ()Ljava/util/List; l
	narratables ()Ljava/util/List; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$EntryFactory fhs$c
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$GameRuleEntry fhs$d
	children b
	label a
	children ()Ljava/util/List; l
	narratables ()Ljava/util/List; a
	renderLabel (Lnet/minecraft/client/gui/GuiGraphics;II)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$IntegerRuleEntry fhs$e
	input d
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry fhs$f
	tooltip a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleList fhs$g
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/screens/worldselection/EditWorldScreen fht
	BACKUP_BUTTON l
	BACKUP_FOLDER_BUTTON m
	DEFAULT_WIDTH r
	FOLDER_BUTTON k
	HALF_WIDTH u
	LOGGER a
	NAME_LABEL b
	OPTIMIIZE_DESCRIPTION p
	OPTIMIZE_BUTTON n
	OPTIMIZE_TITLE o
	RESET_ICON_BUTTON c
	SAVE_BUTTON q
	VERTICAL_SPACING t
	callback w
	layout v
	levelAccess x
	create (Lnet/minecraft/client/Minecraft;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;)Lnet/minecraft/client/gui/screens/worldselection/EditWorldScreen; a
	init ()V aN_
	makeBackupAndShowToast (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Z a
	onClose ()V aE_
	onRename (Ljava/lang/String;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	repositionElements ()V c
net/minecraft/client/gui/screens/worldselection/ExperimentsScreen fhu
	MAIN_CONTENT_WIDTH a
	layout b
	output l
	packRepository k
	packs m
	parent c
	getHumanReadableTitle (Lnet/minecraft/server/packs/repository/Pack;)Lnet/minecraft/network/chat/Component; a
	init ()V aN_
	onClose ()V aE_
	onDone ()V n
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	repositionElements ()V c
net/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen fhv
	DIMENSION_COLORS b
	LOGGER a
	callback c
	upgrader k
	create (Lnet/minecraft/client/Minecraft;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Z)Lnet/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen; a
	init ()V aN_
	onClose ()V aE_
	removed ()V j
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	tick ()V d
net/minecraft/client/gui/screens/worldselection/PresetEditor fhw
	EDITORS a
	fixedBiomeConfigurator (Lnet/minecraft/core/Holder;)Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext$DimensionsUpdater; a
	flatWorldConfigurator (Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext$DimensionsUpdater; a
net/minecraft/client/gui/screens/worldselection/SelectWorldScreen fhx
	LOGGER k
	TEST_OPTIONS a
	copyButton o
	deleteButton l
	lastScreen b
	list p
	renameButton n
	searchBox c
	selectButton m
	init ()V aN_
	onClose ()V aE_
	removed ()V j
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	updateButtonStatus (Lnet/minecraft/world/level/storage/LevelSummary;)V a
net/minecraft/client/gui/screens/worldselection/SwitchGrid fhy
	DEFAULT_SWITCH_BUTTON_WIDTH a
	switches b
	builder (I)Lnet/minecraft/client/gui/screens/worldselection/SwitchGrid$Builder; a
	refreshStates ()V a
net/minecraft/client/gui/screens/worldselection/SwitchGrid$Builder fhy$a
	infoUnderneath f
	paddingLeft c
	rowCount e
	rowSpacing d
	switchBuilders b
	width a
	addSwitch (Lnet/minecraft/network/chat/Component;Ljava/util/function/BooleanSupplier;Ljava/util/function/Consumer;)Lnet/minecraft/client/gui/screens/worldselection/SwitchGrid$SwitchBuilder; a
	build (Ljava/util/function/Consumer;)Lnet/minecraft/client/gui/screens/worldselection/SwitchGrid; a
	increaseRow ()V a
	withInfoUnderneath (IZ)Lnet/minecraft/client/gui/screens/worldselection/SwitchGrid$Builder; a
	withPaddingLeft (I)Lnet/minecraft/client/gui/screens/worldselection/SwitchGrid$Builder; a
	withRowSpacing (I)Lnet/minecraft/client/gui/screens/worldselection/SwitchGrid$Builder; b
net/minecraft/client/gui/screens/worldselection/SwitchGrid$InfoUnderneathSettings fhy$b
	alwaysMaxHeight b
	maxInfoRows a
	alwaysMaxHeight ()Z b
	maxInfoRows ()I a
net/minecraft/client/gui/screens/worldselection/SwitchGrid$LabeledSwitch fhy$c
	button a
	isActiveCondition c
	stateSupplier b
	button ()Lnet/minecraft/client/gui/components/CycleButton; b
	isActiveCondition ()Ljava/util/function/BooleanSupplier; d
	refreshState ()V a
	stateSupplier ()Ljava/util/function/BooleanSupplier; c
net/minecraft/client/gui/screens/worldselection/SwitchGrid$SwitchBuilder fhy$d
	buttonWidth f
	info d
	isActiveCondition e
	label a
	onClicked c
	stateSupplier b
	build (Lnet/minecraft/client/gui/screens/worldselection/SwitchGrid$Builder;Lnet/minecraft/client/gui/layouts/GridLayout;I)Lnet/minecraft/client/gui/screens/worldselection/SwitchGrid$LabeledSwitch; a
	withInfo (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/screens/worldselection/SwitchGrid$SwitchBuilder; a
	withIsActiveCondition (Ljava/util/function/BooleanSupplier;)Lnet/minecraft/client/gui/screens/worldselection/SwitchGrid$SwitchBuilder; a
net/minecraft/client/gui/screens/worldselection/WorldCreationContext fhz
	dataConfiguration f
	dataPackResources e
	datapackDimensions b
	options a
	selectedDimensions c
	worldgenRegistries d
	dataConfiguration ()Lnet/minecraft/world/level/WorldDataConfiguration; g
	dataPackResources ()Lnet/minecraft/server/ReloadableServerResources; f
	datapackDimensions ()Lnet/minecraft/core/Registry; c
	options ()Lnet/minecraft/world/level/levelgen/WorldOptions; b
	selectedDimensions ()Lnet/minecraft/world/level/levelgen/WorldDimensions; d
	withDimensions (Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext$DimensionsUpdater;)Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext; a
	withOptions (Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext$OptionsModifier;)Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext; a
	withSettings (Lnet/minecraft/world/level/levelgen/WorldOptions;Lnet/minecraft/world/level/levelgen/WorldDimensions;)Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext; a
	worldgenLoadContext ()Lnet/minecraft/core/RegistryAccess$Frozen; a
	worldgenRegistries ()Lnet/minecraft/core/LayeredRegistryAccess; e
net/minecraft/client/gui/screens/worldselection/WorldCreationContext$DimensionsUpdater fhz$a
net/minecraft/client/gui/screens/worldselection/WorldCreationContext$OptionsModifier fhz$b
net/minecraft/client/gui/screens/worldselection/WorldCreationUiState fia
	DEFAULT_WORLD_NAME a
	allowCheats f
	altPresetList o
	bonusChest i
	difficulty e
	gameMode d
	gameRules p
	generateStructures h
	listeners b
	name c
	normalPresetList n
	savesFolder j
	seed g
	settings l
	targetFolder k
	worldType m
	addListener (Ljava/util/function/Consumer;)V a
	findPreset (Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext;Ljava/util/Optional;)Ljava/util/Optional; a
	findResultFolder (Ljava/lang/String;)Ljava/lang/String; c
	getAltPresetList ()Ljava/util/List; p
	getDifficulty ()Lnet/minecraft/world/Difficulty; e
	getGameMode ()Lnet/minecraft/client/gui/screens/worldselection/WorldCreationUiState$SelectedGameMode; d
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getName ()Ljava/lang/String; b
	getNonEmptyList (Lnet/minecraft/core/Registry;Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; a
	getNormalPresetList ()Ljava/util/List; o
	getPresetEditor ()Lnet/minecraft/client/gui/screens/worldselection/PresetEditor; n
	getSeed ()Ljava/lang/String; h
	getSettings ()Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext; k
	getTargetFolder ()Ljava/lang/String; c
	getWorldType ()Lnet/minecraft/client/gui/screens/worldselection/WorldCreationUiState$WorldTypeEntry; m
	isAllowCheats ()Z g
	isBonusChest ()Z j
	isDebug ()Z l
	isGenerateStructures ()Z i
	isHardcore ()Z f
	onChanged ()V a
	setAllowCheats (Z)V a
	setBonusChest (Z)V c
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setGameMode (Lnet/minecraft/client/gui/screens/worldselection/WorldCreationUiState$SelectedGameMode;)V a
	setGameRules (Lnet/minecraft/world/level/GameRules;)V a
	setGenerateStructures (Z)V b
	setName (Ljava/lang/String;)V a
	setSeed (Ljava/lang/String;)V b
	setSettings (Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext;)V a
	setWorldType (Lnet/minecraft/client/gui/screens/worldselection/WorldCreationUiState$WorldTypeEntry;)V a
	tryUpdateDataConfiguration (Lnet/minecraft/world/level/WorldDataConfiguration;)Z a
	updateDimensions (Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext$DimensionsUpdater;)V a
	updatePresetLists ()V r
net/minecraft/client/gui/screens/worldselection/WorldCreationUiState$SelectedGameMode fia$a
	$VALUES h
	CREATIVE c
	DEBUG d
	HARDCORE b
	SURVIVAL a
	displayName f
	gameType e
	info g
	$values ()[Lnet/minecraft/client/gui/screens/worldselection/WorldCreationUiState$SelectedGameMode; b
	getInfo ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/gui/screens/worldselection/WorldCreationUiState$WorldTypeEntry fia$b
	CUSTOM_WORLD_DESCRIPTION b
	preset a
	describePreset ()Lnet/minecraft/network/chat/Component; a
	isAmplified ()Z b
	preset ()Lnet/minecraft/core/Holder; c
net/minecraft/client/gui/screens/worldselection/WorldOpenFlows fib
	LOGGER a
	WORLD_PACK_ID b
	levelSource d
	minecraft c
	askForBackup (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;ZLjava/lang/Runnable;Ljava/lang/Runnable;)V a
	checkForBackupAndLoad (Ljava/lang/String;Ljava/lang/Runnable;)V a
	checkForBackupAndLoad (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Ljava/lang/Runnable;)V a
	confirmWorldCreation (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen;Lcom/mojang/serialization/Lifecycle;Ljava/lang/Runnable;Z)V a
	createFreshLevel (Ljava/lang/String;Lnet/minecraft/world/level/LevelSettings;Lnet/minecraft/world/level/levelgen/WorldOptions;Ljava/util/function/Function;Lnet/minecraft/client/gui/screens/Screen;)V a
	createLevelFromExistingSettings (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/server/ReloadableServerResources;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/world/level/storage/WorldData;)V a
	createWorldAccess (Ljava/lang/String;)Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess; a
	loadBundledResourcePack (Lnet/minecraft/client/resources/server/DownloadedPackSource;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Ljava/util/concurrent/CompletableFuture; a
	loadLevel (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lcom/mojang/serialization/Dynamic;ZZLjava/lang/Runnable;)V a
	loadWorldDataBlocking (Lnet/minecraft/server/WorldLoader$PackConfig;Lnet/minecraft/server/WorldLoader$WorldDataSupplier;Lnet/minecraft/server/WorldLoader$ResultFactory;)Ljava/lang/Object; a
	loadWorldStem (Lcom/mojang/serialization/Dynamic;ZLnet/minecraft/server/packs/repository/PackRepository;)Lnet/minecraft/server/WorldStem; a
	promptBundledPackLoadFailure ()Ljava/util/concurrent/CompletableFuture; a
	recreateWorldData (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/client/gui/screens/worldselection/WorldSelectionList fic
	DATE_FORMAT a
	ERROR_HIGHLIGHTED_SPRITE m
	ERROR_SPRITE n
	FROM_NEWER_TOOLTIP_1 x
	FROM_NEWER_TOOLTIP_2 y
	ICON_MISSING w
	INCOMPATIBLE_VERSION_TOOLTIP D
	JOIN_HIGHLIGHTED_SPRITE t
	JOIN_SPRITE u
	LOGGER v
	MARKED_JOIN_HIGHLIGHTED_SPRITE o
	MARKED_JOIN_SPRITE p
	SNAPSHOT_TOOLTIP_1 z
	SNAPSHOT_TOOLTIP_2 A
	WARNING_HIGHLIGHTED_SPRITE q
	WARNING_SPRITE r
	WORLD_EXPERIMENTAL E
	WORLD_LOCKED_TOOLTIP B
	WORLD_REQUIRES_CONVERSION C
	currentlyDisplayedLevels H
	filter I
	loadingHeader J
	pendingLevels G
	screen F
	clearEntries ()V m
	fillLevels (Ljava/lang/String;Ljava/util/List;)V a
	fillLoadingLevels ()V K
	filterAccepts (Ljava/lang/String;Lnet/minecraft/world/level/storage/LevelSummary;)Z a
	getRowWidth ()I b
	getScreen ()Lnet/minecraft/client/gui/screens/worldselection/SelectWorldScreen; e
	getScrollbarPosition ()I c
	getSelectedOpt ()Ljava/util/Optional; d
	handleLevelLoadFailure (Lnet/minecraft/network/chat/Component;)V c
	handleNewLevels (Ljava/util/List;)V a
	keyPressed (III)Z a
	loadLevels ()Ljava/util/concurrent/CompletableFuture; J
	notifyListUpdated ()V L
	pollLevelsIgnoreErrors ()Ljava/util/List; H
	reloadWorldList ()V I
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/worldselection/WorldSelectionList$Entry;)V a
	updateFilter (Ljava/lang/String;)V a
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/worldselection/WorldSelectionList$Entry fic$a
net/minecraft/client/gui/screens/worldselection/WorldSelectionList$LoadingHeader fic$b
	LOADING_LABEL a
	minecraft b
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/WorldSelectionList$WorldListEntry fic$c
	ICON_HEIGHT c
	ICON_WIDTH b
	icon g
	iconFile h
	lastClickTime i
	minecraft d
	screen e
	summary f
	canJoin ()Z b
	deleteWorld ()V d
	doDeleteWorld ()V e
	editWorld ()V f
	getLevelName ()Ljava/lang/String; i
	getNarration ()Lnet/minecraft/network/chat/Component; a
	joinWorld ()V c
	loadIcon ()V l
	mouseClicked (DDI)Z a
	queueLoadScreen ()V k
	recreateWorld ()V g
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	validateIconFile ()V j
net/minecraft/client/gui/spectator/PlayerMenuItem fie
	name c
	profile a
	skin b
	getName ()Lnet/minecraft/network/chat/Component; aO_
	isEnabled ()Z aP_
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/RootSpectatorMenuCategory fif
	PROMPT_TEXT a
	items b
	getItems ()Ljava/util/List; a
	getPrompt ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/gui/spectator/SpectatorMenu fig
	CLOSE_ITEM e
	CLOSE_MENU_TEXT j
	CLOSE_SPRITE b
	EMPTY_SLOT a
	MAX_PER_PAGE i
	NEXT_PAGE_TEXT l
	PREVIOUS_PAGE_TEXT k
	SCROLL_LEFT f
	SCROLL_LEFT_SPRITE c
	SCROLL_RIGHT_DISABLED h
	SCROLL_RIGHT_ENABLED g
	SCROLL_RIGHT_SPRITE d
	category n
	listener m
	page p
	selectedSlot o
	exit ()V d
	getCurrentPage ()Lnet/minecraft/client/gui/spectator/categories/SpectatorPage; f
	getItem (I)Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; a
	getItems ()Ljava/util/List; a
	getSelectedCategory ()Lnet/minecraft/client/gui/spectator/SpectatorMenuCategory; c
	getSelectedItem ()Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; b
	getSelectedSlot ()I e
	selectCategory (Lnet/minecraft/client/gui/spectator/SpectatorMenuCategory;)V a
	selectSlot (I)V b
net/minecraft/client/gui/spectator/SpectatorMenu$CloseSpectatorItem fig$a
	getName ()Lnet/minecraft/network/chat/Component; aO_
	isEnabled ()Z aP_
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenu$ScrollMenuItem fig$b
	direction a
	enabled b
	getName ()Lnet/minecraft/network/chat/Component; aO_
	isEnabled ()Z aP_
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenuCategory fih
	getItems ()Ljava/util/List; a
	getPrompt ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/gui/spectator/SpectatorMenuItem fii
	getName ()Lnet/minecraft/network/chat/Component; aO_
	isEnabled ()Z aP_
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenuListener fij
	onSpectatorMenuClosed (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/SpectatorPage fik
	NO_SELECTION a
	items b
	selection c
	getItem (I)Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; a
	getSelectedSlot ()I a
net/minecraft/client/gui/spectator/categories/TeleportToPlayerMenuCategory fil
	PROFILE_ORDER b
	TELEPORT_PROMPT d
	TELEPORT_TEXT c
	TELEPORT_TO_PLAYER_SPRITE a
	items e
	getItems ()Ljava/util/List; a
	getName ()Lnet/minecraft/network/chat/Component; aO_
	getPrompt ()Lnet/minecraft/network/chat/Component; b
	isEnabled ()Z aP_
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory fim
	TELEPORT_PROMPT c
	TELEPORT_TEXT b
	TELEPORT_TO_TEAM_SPRITE a
	items d
	createTeamEntries (Lnet/minecraft/client/Minecraft;Lnet/minecraft/world/scores/Scoreboard;)Ljava/util/List; a
	getItems ()Ljava/util/List; a
	getName ()Lnet/minecraft/network/chat/Component; aO_
	getPrompt ()Lnet/minecraft/network/chat/Component; b
	isEnabled ()Z aP_
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory$TeamSelectionItem fim$a
	iconSkin b
	players c
	team a
	create (Lnet/minecraft/client/Minecraft;Lnet/minecraft/world/scores/PlayerTeam;)Ljava/util/Optional; a
	getName ()Lnet/minecraft/network/chat/Component; aO_
	isEnabled ()Z aP_
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/main/GameConfig fip
	display b
	game d
	location c
	quickPlay e
	user a
net/minecraft/client/main/GameConfig$FolderData fip$a
	assetDirectory c
	assetIndex d
	gameDirectory a
	resourcePackDirectory b
	getExternalAssetSource ()Ljava/nio/file/Path; a
net/minecraft/client/main/GameConfig$GameData fip$b
	demo a
	disableChat e
	disableMultiplayer d
	launchVersion b
	versionType c
net/minecraft/client/main/GameConfig$QuickPlayData fip$c
	multiplayer c
	path a
	realms d
	singleplayer b
	isEnabled ()Z a
	multiplayer ()Ljava/lang/String; d
	path ()Ljava/lang/String; b
	realms ()Ljava/lang/String; e
	singleplayer ()Ljava/lang/String; c
net/minecraft/client/main/GameConfig$UserData fip$d
	profileProperties c
	proxy d
	user a
	userProperties b
net/minecraft/client/main/SilentInitException fiq
net/minecraft/client/model/AbstractZombieModel fis
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Monster;FFFFF)V a
net/minecraft/client/model/AgeableHierarchicalModel fit
	bodyYOffset b
	youngScaleFactor a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/AgeableListModel fiu
	babyBodyScale h
	babyHeadScale g
	babyYHeadOffset b
	babyZHeadOffset f
	bodyYOffset i
	scaleHead a
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/AllayModel fiv
	FLYING_ANIMATION_X_ROT k
	MAX_HAND_HOLDING_ITEM_X_ROT_RAD l
	MIN_HAND_HOLDING_ITEM_X_ROT_RAD m
	body f
	head b
	left_arm h
	left_wing j
	right_arm g
	right_wing i
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/allay/Allay;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/AnimationUtils fiw
	animateCrossbowCharge (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/world/entity/LivingEntity;Z)V a
	animateCrossbowHold (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Z)V a
	animateZombieArms (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;ZFF)V a
	bobArms (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;F)V a
	bobModelPart (Lnet/minecraft/client/model/geom/ModelPart;FF)V a
	swingWeaponDown (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/world/entity/Mob;FF)V a
net/minecraft/client/model/ArmedModel fix
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/ArmorStandArmorModel fiy
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/decoration/ArmorStand;FFFFF)V a
net/minecraft/client/model/ArmorStandModel fiz
	BASE_PLATE x
	LEFT_BODY_STICK b
	RIGHT_BODY_STICK a
	SHOULDER_STICK w
	basePlate B
	leftBodyStick z
	rightBodyStick y
	shoulderStick A
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/decoration/ArmorStand;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/decoration/ArmorStand;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/AxolotlModel fja
	SWIMMING_LEG_XROT a
	body j
	head k
	leftFrontLeg h
	leftGills m
	leftHindLeg f
	rightFrontLeg i
	rightGills n
	rightHindLeg g
	tail b
	topGills l
	applyMirrorLegRotations ()V d
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	getRotationVector (Lnet/minecraft/client/model/geom/ModelPart;)Lorg/joml/Vector3f; a
	headParts ()Ljava/lang/Iterable; a
	lerpPart (Lnet/minecraft/client/model/geom/ModelPart;FFF)V a
	lerpTo (FF)F a
	lerpTo (FFF)F a
	saveAnimationValues (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)V a
	setRotationFromVector (Lnet/minecraft/client/model/geom/ModelPart;Lorg/joml/Vector3f;)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;FFFFF)V a
	setupGroundCrawlingAnimation (FF)V c
	setupInitialAnimationValues (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;FF)V a
	setupLayStillOnGroundAnimation (FF)V b
	setupPlayDeadAnimation (F)V b
	setupSwimmingAnimation (FF)V d
	setupWaterHoveringAnimation (F)V a
net/minecraft/client/model/BatModel fjb
	body f
	feet k
	head b
	leftWing h
	leftWingTip j
	rightWing g
	rightWingTip i
	root a
	applyHeadRotation (F)V a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/ambient/Bat;FFFFF)V a
net/minecraft/client/model/BeeModel fjc
	BACK_LEGS k
	BEE_Y_BASE a
	BONE b
	FRONT_LEGS i
	LEFT_ANTENNA g
	MIDDLE_LEGS j
	RIGHT_ANTENNA h
	STINGER f
	backLeg q
	bone l
	frontLeg o
	leftAntenna s
	leftWing n
	midLeg p
	rightAntenna t
	rightWing m
	rollAmount u
	stinger r
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Bee;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Bee;FFFFF)V a
net/minecraft/client/model/BlazeModel fjd
	head f
	root a
	upperBodyParts b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getPartName (I)Ljava/lang/String; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/BoatModel fje
	BACK h
	BOTTOM g
	FRONT i
	LEFT k
	LEFT_PADDLE a
	RIGHT j
	RIGHT_PADDLE b
	WATER_PATCH f
	leftPaddle l
	parts o
	rightPaddle m
	waterPatch n
	animatePaddle (Lnet/minecraft/world/entity/vehicle/Boat;ILnet/minecraft/client/model/geom/ModelPart;F)V a
	createBodyModel ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	createChildren (Lnet/minecraft/client/model/geom/builders/PartDefinition;)V a
	createPartsBuilder (Lnet/minecraft/client/model/geom/ModelPart;)Lcom/google/common/collect/ImmutableList$Builder; a
	parts ()Lcom/google/common/collect/ImmutableList; b
	parts ()Ljava/lang/Iterable; d
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/vehicle/Boat;FFFFF)V a
	waterPatch ()Lnet/minecraft/client/model/geom/ModelPart; c
net/minecraft/client/model/BookModel fjf
	FLIP_PAGE_1 c
	FLIP_PAGE_2 d
	LEFT_PAGES a
	RIGHT_PAGES b
	flipPage1 j
	flipPage2 k
	leftLid f
	leftPages h
	rightLid g
	rightPages i
	root e
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFFF)V a
net/minecraft/client/model/BreezeModel fjg
	WIND_BOTTOM_SPEED f
	WIND_MIDDLE_SPEED b
	WIND_TOP_SPEED a
	head h
	rods m
	root g
	windBody i
	windBottom l
	windMid k
	windTop j
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createEyesLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	createWindBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; d
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/breeze/Breeze;FFFFF)V a
	windBottom ()Lnet/minecraft/client/model/geom/ModelPart; g
	windMiddle ()Lnet/minecraft/client/model/geom/ModelPart; f
	windTop ()Lnet/minecraft/client/model/geom/ModelPart; e
net/minecraft/client/model/CamelModel fjh
	BABY_SCALE f
	BABY_Y_OFFSET g
	BRIDLE i
	MAX_WALK_ANIMATION_SPEED a
	REINS j
	SADDLE h
	WALK_ANIMATION_SCALE_FACTOR b
	head l
	ridingParts n
	root k
	saddleParts m
	applyHeadRotation (Lnet/minecraft/world/entity/animal/camel/Camel;FFF)V a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/camel/Camel;FFFFF)V a
	toggleInvisibleParts (Lnet/minecraft/world/entity/animal/camel/Camel;)V a
net/minecraft/client/model/CatModel fji
	lieDownAmount q
	lieDownAmountTail r
	relaxStateOneAmount s
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Cat;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Cat;FFFFF)V a
net/minecraft/client/model/ChestBoatModel fjj
	CHEST_BOTTOM a
	CHEST_LID b
	CHEST_LOCK f
	createBodyModel ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; e
	createPartsBuilder (Lnet/minecraft/client/model/geom/ModelPart;)Lcom/google/common/collect/ImmutableList$Builder; a
net/minecraft/client/model/ChestRaftModel fjk
	CHEST_BOTTOM a
	CHEST_LID b
	CHEST_LOCK f
	createBodyModel ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	createPartsBuilder (Lnet/minecraft/client/model/geom/ModelPart;)Lcom/google/common/collect/ImmutableList$Builder; a
net/minecraft/client/model/ChestedHorseModel fjl
	leftChest g
	rightChest h
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFFFF)V a
net/minecraft/client/model/ChickenModel fjm
	RED_THING a
	beak k
	body f
	head b
	leftLeg h
	leftWing j
	redThing l
	rightLeg g
	rightWing i
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/CodModel fjn
	root a
	tailFin b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ColorableAgeableListModel fjo
	b f
	g b
	r a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setColor (FFF)V a
net/minecraft/client/model/ColorableHierarchicalModel fjp
	b f
	g b
	r a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setColor (FFF)V a
net/minecraft/client/model/CowModel fjq
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
net/minecraft/client/model/CreeperModel fjr
	Y_OFFSET j
	head b
	leftFrontLeg i
	leftHindLeg g
	rightFrontLeg h
	rightHindLeg f
	root a
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/DolphinModel fjs
	body b
	root a
	tail f
	tailFin g
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/DrownedModel fjt
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Zombie;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Monster;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Zombie;FFFFF)V a
net/minecraft/client/model/ElytraModel fju
	leftWing b
	rightWing a
	bodyParts ()Ljava/lang/Iterable; b
	createLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
net/minecraft/client/model/EndermanModel fjv
	carrying a
	creepy b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
net/minecraft/client/model/EndermiteModel fjw
	BODY_COUNT a
	BODY_SIZES b
	BODY_TEXS f
	bodyParts h
	root g
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createSegmentName (I)Ljava/lang/String; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/EntityModel fjx
	attackTime c
	riding d
	young e
	copyPropertiesTo (Lnet/minecraft/client/model/EntityModel;)V a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/EvokerFangsModel fjy
	BASE a
	LOWER_JAW f
	UPPER_JAW b
	base h
	lowerJaw j
	root g
	upperJaw i
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/FoxModel fjz
	HEAD_HEIGHT l
	LEG_POS m
	LEG_SIZE k
	body b
	head a
	leftFrontLeg i
	leftHindLeg g
	legMotionPos n
	rightFrontLeg h
	rightHindLeg f
	tail j
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Fox;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Fox;FFFFF)V a
net/minecraft/client/model/FrogModel fka
	MAX_SWIM_ANIMATION_SPEED b
	MAX_WALK_ANIMATION_SPEED a
	WALK_ANIMATION_SCALE_FACTOR f
	body h
	croakingBody p
	eyes j
	head i
	leftArm l
	leftLeg n
	rightArm m
	rightLeg o
	root g
	tongue k
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/frog/Frog;FFFFF)V a
net/minecraft/client/model/GhastModel fkb
	root a
	tentacles b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createTentacleName (I)Ljava/lang/String; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/GiantZombieModel fkc
	isAggressive (Lnet/minecraft/world/entity/monster/Giant;)Z a
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
net/minecraft/client/model/GoatModel fkd
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/goat/Goat;FFFFF)V a
net/minecraft/client/model/GuardianModel fke
	EYE j
	SPIKE_X g
	SPIKE_X_ROT a
	SPIKE_Y h
	SPIKE_Y_ROT b
	SPIKE_Z i
	SPIKE_Z_ROT f
	TAIL_0 k
	TAIL_1 l
	TAIL_2 m
	eye p
	head o
	root n
	spikeParts q
	tailParts r
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createSpikeName (I)Ljava/lang/String; a
	getSpikeOffset (IFF)F a
	getSpikeX (IFF)F b
	getSpikeY (IFF)F c
	getSpikeZ (IFF)F d
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Guardian;FFFFF)V a
	setupSpikes (FF)V a
net/minecraft/client/model/HeadedModel fkf
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
net/minecraft/client/model/HierarchicalModel fkg
	ANIMATION_VECTOR_CACHE a
	animate (Lnet/minecraft/world/entity/AnimationState;Lnet/minecraft/client/animation/AnimationDefinition;F)V a
	animate (Lnet/minecraft/world/entity/AnimationState;Lnet/minecraft/client/animation/AnimationDefinition;FF)V a
	animateWalk (Lnet/minecraft/client/animation/AnimationDefinition;FFFF)V a
	applyStatic (Lnet/minecraft/client/animation/AnimationDefinition;)V a
	getAnyDescendantWithName (Ljava/lang/String;)Ljava/util/Optional; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
net/minecraft/client/model/HoglinModel fkh
	ATTACK_HEAD_X_ROT_END b
	DEFAULT_HEAD_X_ROT a
	body i
	head f
	leftEar h
	leftFrontLeg k
	leftHindLeg m
	mane n
	rightEar g
	rightFrontLeg j
	rightHindLeg l
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
net/minecraft/client/model/HorseModel fki
	DEG_125 g
	DEG_15 k
	DEG_30 j
	DEG_45 i
	DEG_60 h
	HEAD_PARTS a
	HEAD_SADDLE u
	LEFT_FRONT_BABY_LEG n
	LEFT_HIND_BABY_LEG l
	LEFT_SADDLE_LINE r
	LEFT_SADDLE_MOUTH q
	MOUTH_SADDLE_WRAP w
	RIGHT_FRONT_BABY_LEG o
	RIGHT_HIND_BABY_LEG m
	RIGHT_SADDLE_LINE t
	RIGHT_SADDLE_MOUTH s
	SADDLE p
	body b
	headParts f
	leftFrontBabyLeg E
	leftFrontLeg A
	leftHindBabyLeg C
	leftHindLeg y
	ridingParts H
	rightFrontBabyLeg D
	rightFrontLeg z
	rightHindBabyLeg B
	rightHindLeg x
	saddleParts G
	tail F
	bodyParts ()Ljava/lang/Iterable; b
	createBodyMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFFFF)V a
net/minecraft/client/model/HumanoidArmorModel fkj
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
net/minecraft/client/model/HumanoidModel fkk
	DUCK_WALK_ROTATION a
	HAT_OVERLAY_SCALE g
	HIGHEST_SHIELD_BLOCKING_ANGLE y
	HORIZONTAL_SHIELD_MOVEMENT_LIMIT A
	LEGGINGS_OVERLAY_SCALE h
	LOWEST_SHIELD_BLOCKING_ANGLE z
	OVERLAY_SCALE f
	SPYGLASS_ARM_CROUCH_ROT_X x
	SPYGLASS_ARM_ROT_X w
	SPYGLASS_ARM_ROT_Y b
	TOOT_HORN_XROT_BASE i
	TOOT_HORN_YROT_BASE j
	body m
	crouching t
	hat l
	head k
	leftArm o
	leftArmPose r
	leftLeg q
	rightArm n
	rightArmPose s
	rightLeg p
	swimAmount u
	bodyParts ()Ljava/lang/Iterable; b
	copyPropertiesTo (Lnet/minecraft/client/model/HumanoidModel;)V a
	createMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;F)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	getArm (Lnet/minecraft/world/entity/HumanoidArm;)Lnet/minecraft/client/model/geom/ModelPart; a
	getAttackArm (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/HumanoidArm; c
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
	headParts ()Ljava/lang/Iterable; a
	poseBlockingArm (Lnet/minecraft/client/model/geom/ModelPart;Z)V a
	poseLeftArm (Lnet/minecraft/world/entity/LivingEntity;)V b
	poseRightArm (Lnet/minecraft/world/entity/LivingEntity;)V a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	quadraticArmUpdate (F)F a
	rotlerpRad (FFF)F a
	setAllVisible (Z)V b_
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/LivingEntity;F)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/HumanoidModel$ArmPose fkk$a
	$VALUES l
	BLOCK c
	BOW_AND_ARROW d
	BRUSH j
	CROSSBOW_CHARGE f
	CROSSBOW_HOLD g
	EMPTY a
	ITEM b
	SPYGLASS h
	THROW_SPEAR e
	TOOT_HORN i
	twoHanded k
	$values ()[Lnet/minecraft/client/model/HumanoidModel$ArmPose; b
	isTwoHanded ()Z a
net/minecraft/client/model/IllagerModel fkl
	arms g
	hat f
	head b
	leftArm k
	leftLeg h
	rightArm j
	rightLeg i
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getArm (Lnet/minecraft/world/entity/HumanoidArm;)Lnet/minecraft/client/model/geom/ModelPart; a
	getHat ()Lnet/minecraft/client/model/geom/ModelPart; c
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/AbstractIllager;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/IronGolemModel fkm
	head b
	leftArm g
	leftLeg i
	rightArm f
	rightLeg h
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getFlowerHoldingArm ()Lnet/minecraft/client/model/geom/ModelPart; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/IronGolem;FFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/IronGolem;FFFFF)V a
net/minecraft/client/model/LavaSlimeModel fkn
	SEGMENT_COUNT a
	bodyCubes f
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getSegmentName (I)Ljava/lang/String; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Slime;FFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Slime;FFFFF)V a
net/minecraft/client/model/LeashKnotModel fko
	KNOT a
	knot f
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ListModel fkp
	parts ()Ljava/lang/Iterable; d
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/LlamaModel fkq
	body b
	head a
	leftChest k
	leftFrontLeg i
	leftHindLeg g
	rightChest j
	rightFrontLeg h
	rightHindLeg f
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;FFFFF)V a
net/minecraft/client/model/LlamaSpitModel fkr
	MAIN a
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/MinecartModel fks
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/Model fkt
	renderType v
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	renderType (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/model/ModelUtils fku
	rotlerpRad (FFF)F a
net/minecraft/client/model/OcelotModel fkv
	BACK_LEG_Y b
	BACK_LEG_Z f
	BODY_WALK_Y z
	BODY_WALK_Z A
	CROUCH_STATE q
	FRONT_LEG_Y g
	FRONT_LEG_Z F
	HEAD_WALK_Y x
	HEAD_WALK_Z y
	SITTING_STATE a
	SPRINT_STATE s
	TAIL_1 G
	TAIL_1_WALK_Y B
	TAIL_1_WALK_Z C
	TAIL_2 H
	TAIL_2_WALK_Y D
	TAIL_2_WALK_Z E
	WALK_STATE r
	XO t
	YO u
	ZO w
	body o
	head n
	leftFrontLeg j
	leftHindLeg h
	rightFrontLeg k
	rightHindLeg i
	state p
	tail1 l
	tail2 m
	bodyParts ()Ljava/lang/Iterable; b
	createBodyMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PandaModel fkw
	lieOnBackAmount k
	rollAmount l
	sitAmount j
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Panda;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Panda;FFFFF)V a
net/minecraft/client/model/ParrotModel fkx
	FEATHER a
	body f
	feather k
	head j
	leftLeg l
	leftWing h
	rightLeg m
	rightWing i
	root b
	tail g
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getState (Lnet/minecraft/world/entity/animal/Parrot;)Lnet/minecraft/client/model/ParrotModel$State; a
	prepare (Lnet/minecraft/client/model/ParrotModel$State;)V a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Parrot;FFF)V a
	renderOnShoulder (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFFI)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/client/model/ParrotModel$State;IFFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Parrot;FFFFF)V a
net/minecraft/client/model/ParrotModel$State fkx$a
	$VALUES f
	FLYING a
	ON_SHOULDER e
	PARTY d
	SITTING c
	STANDING b
	$values ()[Lnet/minecraft/client/model/ParrotModel$State; a
net/minecraft/client/model/PhantomModel fky
	TAIL_BASE a
	TAIL_TIP b
	leftWingBase g
	leftWingTip h
	rightWingBase i
	rightWingTip j
	root f
	tailBase k
	tailTip l
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Phantom;FFFFF)V a
net/minecraft/client/model/PigModel fkz
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
net/minecraft/client/model/PiglinHeadModel fla
	head a
	leftEar b
	rightEar c
	createHeadModel ()Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFF)V a
net/minecraft/client/model/PiglinModel flb
	bodyDefault B
	headDefault C
	leftArmDefault D
	leftEar A
	rightArmDefault E
	rightEar a
	addHead (Lnet/minecraft/client/model/geom/builders/CubeDeformation;Lnet/minecraft/client/model/geom/builders/MeshDefinition;)V a
	createMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	holdWeaponHigh (Lnet/minecraft/world/entity/Mob;)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/LivingEntity;F)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/Mob;F)V a
net/minecraft/client/model/PlayerModel flc
	CLOAK A
	EAR a
	LEFT_PANTS D
	LEFT_SLEEVE B
	RIGHT_PANTS E
	RIGHT_SLEEVE C
	cloak G
	ear H
	jacket z
	leftPants x
	leftSleeve b
	parts F
	rightPants y
	rightSleeve w
	slim I
	bodyParts ()Ljava/lang/Iterable; b
	createMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;Z)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	getRandomModelPart (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/client/model/geom/ModelPart; a
	renderCloak (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V b
	renderEars (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V a
	setAllVisible (Z)V b_
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/PolarBearModel fld
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/PolarBear;FFFFF)V a
net/minecraft/client/model/PufferfishBigModel fle
	leftBlueFin b
	rightBlueFin f
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PufferfishMidModel flf
	leftBlueFin b
	rightBlueFin f
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PufferfishSmallModel flg
	leftFin b
	rightFin f
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/QuadrupedModel flh
	body b
	head a
	leftFrontLeg i
	leftHindLeg g
	rightFrontLeg h
	rightHindLeg f
	bodyParts ()Ljava/lang/Iterable; b
	createBodyMesh (ILnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/RabbitModel fli
	FRONT_JUMP_ANGLE b
	LEFT_HAUNCH f
	NEW_SCALE u
	REAR_JUMP_ANGLE a
	RIGHT_HAUNCH g
	body l
	head o
	jumpRotation t
	leftEar q
	leftFrontLeg m
	leftHaunch j
	leftRearFoot h
	nose s
	rightEar p
	rightFrontLeg n
	rightHaunch k
	rightRearFoot i
	tail r
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Rabbit;FFF)V a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Rabbit;FFFFF)V a
net/minecraft/client/model/RaftModel flj
	BOTTOM f
	LEFT_PADDLE a
	RIGHT_PADDLE b
	leftPaddle g
	parts i
	rightPaddle h
	animatePaddle (Lnet/minecraft/world/entity/vehicle/Boat;ILnet/minecraft/client/model/geom/ModelPart;F)V a
	createBodyModel ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createChildren (Lnet/minecraft/client/model/geom/builders/PartDefinition;)V a
	createPartsBuilder (Lnet/minecraft/client/model/geom/ModelPart;)Lcom/google/common/collect/ImmutableList$Builder; a
	parts ()Lcom/google/common/collect/ImmutableList; c
	parts ()Ljava/lang/Iterable; d
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/vehicle/Boat;FFFFF)V a
net/minecraft/client/model/RavagerModel flk
	head b
	leftFrontLeg j
	leftHindLeg h
	mouth f
	neck k
	rightFrontLeg i
	rightHindLeg g
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Ravager;FFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Ravager;FFFFF)V a
net/minecraft/client/model/SalmonModel fll
	BODY_BACK b
	BODY_FRONT a
	bodyBack g
	root f
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SheepFurModel flm
	headXRot j
	createFurLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Sheep;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Sheep;FFFFF)V a
net/minecraft/client/model/SheepModel fln
	headXRot j
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Sheep;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Sheep;FFFFF)V a
net/minecraft/client/model/ShieldModel flo
	HANDLE b
	PLATE a
	SHIELD_HEIGHT d
	SHIELD_WIDTH c
	handle g
	plate f
	root e
	createLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	handle ()Lnet/minecraft/client/model/geom/ModelPart; c
	plate ()Lnet/minecraft/client/model/geom/ModelPart; b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/ShulkerBulletModel flp
	MAIN a
	main f
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ShulkerModel flq
	BASE b
	LID a
	base f
	head h
	lid g
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; c
	getLid ()Lnet/minecraft/client/model/geom/ModelPart; b
	parts ()Ljava/lang/Iterable; d
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Shulker;FFFFF)V a
net/minecraft/client/model/SilverfishModel flr
	BODY_COUNT a
	BODY_SIZES h
	BODY_TEXS i
	bodyLayers g
	bodyParts f
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getLayerName (I)Ljava/lang/String; a
	getSegmentName (I)Ljava/lang/String; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SkeletonModel fls
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/Mob;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/SkullModel flt
	head a
	root b
	createHeadModel ()Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	createHumanoidHeadLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createMobHeadLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFF)V a
net/minecraft/client/model/SkullModelBase flu
	setupAnim (FFF)V a
net/minecraft/client/model/SlimeModel flv
	root a
	createInnerBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	createOuterBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SnifferModel flw
	WALK_ANIMATION_SCALE_FACTOR b
	WALK_ANIMATION_SPEED_MAX a
	head g
	root f
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/sniffer/Sniffer;FFFFF)V a
net/minecraft/client/model/SnowGolemModel flx
	UPPER_BODY a
	head g
	leftArm h
	rightArm i
	root b
	upperBody f
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; c
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SpiderModel fly
	BODY_0 a
	BODY_1 b
	LEFT_MIDDLE_FRONT_LEG g
	LEFT_MIDDLE_HIND_LEG i
	RIGHT_MIDDLE_FRONT_LEG f
	RIGHT_MIDDLE_HIND_LEG h
	head k
	leftFrontLeg s
	leftHindLeg m
	leftMiddleFrontLeg q
	leftMiddleHindLeg o
	rightFrontLeg r
	rightHindLeg l
	rightMiddleFrontLeg p
	rightMiddleHindLeg n
	root j
	createSpiderBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SquidModel flz
	root b
	tentacles a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createTentacleName (I)Ljava/lang/String; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/StriderModel fma
	LEFT_BOTTOM_BRISTLE i
	LEFT_MIDDLE_BRISTLE h
	LEFT_TOP_BRISTLE g
	RIGHT_BOTTOM_BRISTLE a
	RIGHT_MIDDLE_BRISTLE b
	RIGHT_TOP_BRISTLE f
	body m
	leftBottomBristle s
	leftLeg l
	leftMiddleBristle r
	leftTopBristle q
	rightBottomBristle n
	rightLeg k
	rightMiddleBristle o
	rightTopBristle p
	root j
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Strider;FFFFF)V a
net/minecraft/client/model/TadpoleModel fmb
	root a
	tail b
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/frog/Tadpole;FFFFF)V a
net/minecraft/client/model/TridentModel fmc
	TEXTURE a
	root b
	createLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/TropicalFishModelA fmd
	root a
	tail b
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/TropicalFishModelB fme
	root a
	tail b
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/TurtleModel fmf
	EGG_BELLY j
	eggBelly k
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Turtle;FFFFF)V a
net/minecraft/client/model/VexModel fmg
	body b
	head j
	leftArm g
	leftWing i
	rightArm f
	rightWing h
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	offsetStackPosition (Lcom/mojang/blaze3d/vertex/PoseStack;Z)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setArmsCharging (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;F)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Vex;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/VillagerHeadModel fmh
	hatVisible (Z)V a
net/minecraft/client/model/VillagerModel fmi
	hat g
	hatRim h
	head f
	leftLeg j
	nose a
	rightLeg i
	root b
	createBodyModel ()Lnet/minecraft/client/model/geom/builders/MeshDefinition; b
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
	hatVisible (Z)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/WardenModel fmj
	DEFAULT_ARM_X_Y o
	DEFAULT_ARM_Z p
	bioluminescentLayerModelParts t
	body b
	bone a
	head f
	heartLayerModelParts s
	leftArm j
	leftLeg i
	leftRibcage k
	leftTendril h
	pulsatingSpotsLayerModelParts u
	rightArm l
	rightLeg m
	rightRibcage n
	rightTendril g
	root q
	tendrilsLayerModelParts r
	animateHeadLookTarget (FF)V a
	animateIdlePose (F)V a
	animateTendrils (Lnet/minecraft/world/entity/monster/warden/Warden;FF)V a
	animateWalk (FF)V b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getBioluminescentLayerModelParts ()Ljava/util/List; e
	getHeartLayerModelParts ()Ljava/util/List; d
	getPulsatingSpotsLayerModelParts ()Ljava/util/List; f
	getTendrilsLayerModelParts ()Ljava/util/List; c
	resetArmPoses ()V g
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/warden/Warden;FFFFF)V a
net/minecraft/client/model/WaterPatchModel fmk
	waterPatch ()Lnet/minecraft/client/model/geom/ModelPart; c
net/minecraft/client/model/WindChargeModel fml
	bone a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/projectile/WindCharge;FFFFF)V a
net/minecraft/client/model/WitchModel fmm
	holdingItem b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	getNose ()Lnet/minecraft/client/model/geom/ModelPart; e
	setHoldingItem (Z)V b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/WitherBossModel fmn
	CENTER_HEAD b
	LEFT_HEAD g
	RIBCAGE a
	RIBCAGE_X_ROT_OFFSET h
	RIGHT_HEAD f
	TAIL_X_ROT_OFFSET i
	centerHead k
	leftHead m
	ribcage n
	rightHead l
	root j
	tail o
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/boss/wither/WitherBoss;FFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/boss/wither/WitherBoss;FFFFF)V a
	setupHeadRotation (Lnet/minecraft/world/entity/boss/wither/WitherBoss;Lnet/minecraft/client/model/geom/ModelPart;I)V a
net/minecraft/client/model/WolfModel fmo
	LEG_SIZE q
	REAL_HEAD a
	REAL_TAIL f
	UPPER_BODY b
	body i
	head g
	leftFrontLeg m
	leftHindLeg k
	realHead h
	realTail o
	rightFrontLeg l
	rightHindLeg j
	tail n
	upperBody p
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Wolf;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Wolf;FFFFF)V a
net/minecraft/client/model/ZombieModel fmp
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
	isAggressive (Lnet/minecraft/world/entity/monster/Zombie;)Z a
net/minecraft/client/model/ZombieVillagerModel fmq
	hatRim a
	createArmorLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	hatVisible (Z)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Zombie;FFFFF)V a
net/minecraft/client/model/dragon/DragonHeadModel fmr
	head a
	jaw b
	createHeadLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFF)V a
net/minecraft/client/model/geom/EntityModelSet fmt
	roots a
	bakeLayer (Lnet/minecraft/client/model/geom/ModelLayerLocation;)Lnet/minecraft/client/model/geom/ModelPart; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/model/geom/LayerDefinitions fmu
	FISH_PATTERN_DEFORMATION a
	INNER_ARMOR_DEFORMATION c
	OUTER_ARMOR_DEFORMATION b
	createRoots ()Ljava/util/Map; a
net/minecraft/client/model/geom/ModelLayerLocation fmv
	layer b
	model a
	getLayer ()Ljava/lang/String; b
	getModel ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/model/geom/ModelLayers fmw
	ALLAY a
	ALL_MODELS cn
	ARMOR_STAND b
	ARMOR_STAND_INNER_ARMOR c
	ARMOR_STAND_OUTER_ARMOR d
	AXOLOTL e
	BANNER f
	BAT g
	BED_FOOT h
	BED_HEAD i
	BEE j
	BELL k
	BLAZE l
	BOOK m
	BREEZE n
	BREEZE_EYES p
	BREEZE_WIND o
	CAMEL s
	CAT q
	CAT_COLLAR r
	CAVE_SPIDER t
	CHEST u
	CHEST_MINECART v
	CHICKEN w
	COD x
	COMMAND_BLOCK_MINECART y
	CONDUIT_CAGE z
	CONDUIT_EYE A
	CONDUIT_SHELL B
	CONDUIT_WIND C
	COW D
	CREEPER E
	CREEPER_ARMOR F
	CREEPER_HEAD G
	DECORATED_POT_BASE H
	DECORATED_POT_SIDES I
	DEFAULT_LAYER cm
	DOLPHIN J
	DONKEY K
	DOUBLE_CHEST_LEFT L
	DOUBLE_CHEST_RIGHT M
	DRAGON_SKULL N
	DROWNED O
	DROWNED_INNER_ARMOR P
	DROWNED_OUTER_ARMOR Q
	DROWNED_OUTER_LAYER R
	ELDER_GUARDIAN S
	ELYTRA T
	ENDERMAN U
	ENDERMITE V
	ENDER_DRAGON W
	END_CRYSTAL X
	EVOKER Y
	EVOKER_FANGS Z
	FOX aa
	FROG ab
	FURNACE_MINECART ac
	GHAST ad
	GIANT ae
	GIANT_INNER_ARMOR af
	GIANT_OUTER_ARMOR ag
	GLOW_SQUID ah
	GOAT ai
	GUARDIAN aj
	HOGLIN ak
	HOPPER_MINECART al
	HORSE am
	HORSE_ARMOR an
	HUSK ao
	HUSK_INNER_ARMOR ap
	HUSK_OUTER_ARMOR aq
	ILLUSIONER ar
	IRON_GOLEM as
	LEASH_KNOT at
	LLAMA au
	LLAMA_DECOR av
	LLAMA_SPIT aw
	MAGMA_CUBE ax
	MINECART ay
	MOOSHROOM az
	MULE aA
	OCELOT aB
	PANDA aC
	PARROT aD
	PHANTOM aE
	PIG aF
	PIGLIN aG
	PIGLIN_BRUTE aH
	PIGLIN_BRUTE_INNER_ARMOR aI
	PIGLIN_BRUTE_OUTER_ARMOR aJ
	PIGLIN_HEAD aK
	PIGLIN_INNER_ARMOR aL
	PIGLIN_OUTER_ARMOR aM
	PIG_SADDLE aN
	PILLAGER aO
	PLAYER aP
	PLAYER_HEAD aQ
	PLAYER_INNER_ARMOR aR
	PLAYER_OUTER_ARMOR aS
	PLAYER_SLIM aT
	PLAYER_SLIM_INNER_ARMOR aU
	PLAYER_SLIM_OUTER_ARMOR aV
	PLAYER_SPIN_ATTACK aW
	POLAR_BEAR aX
	PUFFERFISH_BIG aY
	PUFFERFISH_MEDIUM aZ
	PUFFERFISH_SMALL ba
	RABBIT bb
	RAVAGER bc
	SALMON bd
	SHEEP be
	SHEEP_FUR bf
	SHIELD bg
	SHULKER bh
	SHULKER_BULLET bi
	SILVERFISH bj
	SKELETON bk
	SKELETON_HORSE bl
	SKELETON_INNER_ARMOR bm
	SKELETON_OUTER_ARMOR bn
	SKELETON_SKULL bo
	SLIME bp
	SLIME_OUTER bq
	SNIFFER br
	SNOW_GOLEM bs
	SPAWNER_MINECART bt
	SPIDER bu
	SQUID bv
	STRAY bw
	STRAY_INNER_ARMOR bx
	STRAY_OUTER_ARMOR by
	STRAY_OUTER_LAYER bz
	STRIDER bA
	STRIDER_SADDLE bB
	TADPOLE bC
	TNT_MINECART bD
	TRADER_LLAMA bE
	TRIDENT bF
	TROPICAL_FISH_LARGE bG
	TROPICAL_FISH_LARGE_PATTERN bH
	TROPICAL_FISH_SMALL bI
	TROPICAL_FISH_SMALL_PATTERN bJ
	TURTLE bK
	VEX bL
	VILLAGER bM
	VINDICATOR bN
	WANDERING_TRADER bP
	WARDEN bO
	WIND_CHARGE bQ
	WITCH bR
	WITHER bS
	WITHER_ARMOR bT
	WITHER_SKELETON bU
	WITHER_SKELETON_INNER_ARMOR bV
	WITHER_SKELETON_OUTER_ARMOR bW
	WITHER_SKELETON_SKULL bX
	WITHER_SKULL bY
	WOLF bZ
	ZOGLIN ca
	ZOMBIE cb
	ZOMBIE_HEAD cc
	ZOMBIE_HORSE cd
	ZOMBIE_INNER_ARMOR ce
	ZOMBIE_OUTER_ARMOR cf
	ZOMBIE_VILLAGER cg
	ZOMBIE_VILLAGER_INNER_ARMOR ch
	ZOMBIE_VILLAGER_OUTER_ARMOR ci
	ZOMBIFIED_PIGLIN cj
	ZOMBIFIED_PIGLIN_INNER_ARMOR ck
	ZOMBIFIED_PIGLIN_OUTER_ARMOR cl
	createBoatModelName (Lnet/minecraft/world/entity/vehicle/Boat$Type;)Lnet/minecraft/client/model/geom/ModelLayerLocation; c
	createChestBoatModelName (Lnet/minecraft/world/entity/vehicle/Boat$Type;)Lnet/minecraft/client/model/geom/ModelLayerLocation; d
	createChestRaftModelName (Lnet/minecraft/world/entity/vehicle/Boat$Type;)Lnet/minecraft/client/model/geom/ModelLayerLocation; b
	createHangingSignModelName (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/model/geom/ModelLayerLocation; b
	createLocation (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; b
	createRaftModelName (Lnet/minecraft/world/entity/vehicle/Boat$Type;)Lnet/minecraft/client/model/geom/ModelLayerLocation; a
	createSignModelName (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/model/geom/ModelLayerLocation; a
	getKnownLocations ()Ljava/util/stream/Stream; a
	register (Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; a
	register (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; a
	registerInnerArmor (Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; b
	registerOuterArmor (Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; c
net/minecraft/client/model/geom/ModelPart fmx
	DEFAULT_SCALE a
	children n
	cubes m
	initialPose o
	skipDraw l
	visible k
	x b
	xRot e
	xScale h
	y c
	yRot f
	yScale i
	z d
	zRot g
	zScale j
	compile (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	copyFrom (Lnet/minecraft/client/model/geom/ModelPart;)V a
	getAllParts ()Ljava/util/stream/Stream; e
	getChild (Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelPart; b
	getInitialPose ()Lnet/minecraft/client/model/geom/PartPose; b
	getRandomCube (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/client/model/geom/ModelPart$Cube; a
	hasChild (Ljava/lang/String;)Z a
	isEmpty ()Z d
	loadPose (Lnet/minecraft/client/model/geom/PartPose;)V b
	offsetPos (Lorg/joml/Vector3f;)V a
	offsetRotation (Lorg/joml/Vector3f;)V b
	offsetScale (Lorg/joml/Vector3f;)V c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	resetPose ()V c
	setInitialPose (Lnet/minecraft/client/model/geom/PartPose;)V a
	setPos (FFF)V a
	setRotation (FFF)V b
	storePose ()Lnet/minecraft/client/model/geom/PartPose; a
	translateAndRotate (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	visit (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/model/geom/ModelPart$Visitor;)V a
	visit (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/model/geom/ModelPart$Visitor;Ljava/lang/String;)V a
net/minecraft/client/model/geom/ModelPart$Cube fmx$a
	maxX d
	maxY e
	maxZ f
	minX a
	minY b
	minZ c
	polygons g
	compile (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/geom/ModelPart$Polygon fmx$b
	normal b
	vertices a
net/minecraft/client/model/geom/ModelPart$Vertex fmx$c
	pos a
	u b
	v c
	remap (FF)Lnet/minecraft/client/model/geom/ModelPart$Vertex; a
net/minecraft/client/model/geom/ModelPart$Visitor fmx$d
net/minecraft/client/model/geom/PartNames fmy
	ARMS S
	BACK_FIN W
	BEAK V
	BODY ac
	BONE aA
	BOTTOM_FIN d
	CROAKING_BODY aj
	CUBE U
	EYES aq
	FEET D
	HAT ab
	HAT_RIM ad
	HEAD aa
	JACKET ae
	JAW Q
	LEFT_ARM h
	LEFT_BLUE_FIN f
	LEFT_CHEST K
	LEFT_EAR p
	LEFT_EYE O
	LEFT_FIN a
	LEFT_FOOT ao
	LEFT_FRONT_FOOT B
	LEFT_FRONT_LEG x
	LEFT_FRONT_LEG_TIP G
	LEFT_GILLS ag
	LEFT_HAND am
	LEFT_HIND_FOOT z
	LEFT_HIND_LEG t
	LEFT_HIND_LEG_TIP E
	LEFT_HORN M
	LEFT_LEG r
	LEFT_LID I
	LEFT_MID_LEG v
	LEFT_RIBCAGE au
	LEFT_TENDRIL as
	LEFT_WING j
	LEFT_WING_BASE l
	LEFT_WING_TIP n
	MANE X
	MOUTH Z
	NECK Y
	NOSE R
	RIGHT_ARM i
	RIGHT_BLUE_FIN g
	RIGHT_CHEST L
	RIGHT_EAR q
	RIGHT_EYE P
	RIGHT_FIN b
	RIGHT_FOOT ap
	RIGHT_FRONT_FOOT C
	RIGHT_FRONT_LEG y
	RIGHT_FRONT_LEG_TIP H
	RIGHT_GILLS ah
	RIGHT_HAND an
	RIGHT_HIND_FOOT A
	RIGHT_HIND_LEG u
	RIGHT_HIND_LEG_TIP F
	RIGHT_HORN N
	RIGHT_LEG s
	RIGHT_LID J
	RIGHT_MID_LEG w
	RIGHT_RIBCAGE at
	RIGHT_TENDRIL ar
	RIGHT_WING k
	RIGHT_WING_BASE m
	RIGHT_WING_TIP o
	RODS az
	ROOT ai
	TAIL T
	TAIL_FIN e
	TONGUE ak
	TONGUE_R1 al
	TOP_FIN c
	TOP_GILLS af
	WIND_BODY av
	WIND_BOTTOM ay
	WIND_MID ax
	WIND_TOP aw
net/minecraft/client/model/geom/PartPose fmz
	ZERO a
	x b
	xRot e
	y c
	yRot f
	z d
	zRot g
	offset (FFF)Lnet/minecraft/client/model/geom/PartPose; a
	offsetAndRotation (FFFFFF)Lnet/minecraft/client/model/geom/PartPose; a
	rotation (FFF)Lnet/minecraft/client/model/geom/PartPose; b
net/minecraft/client/model/geom/builders/CubeDefinition fna
	comment a
	dimensions c
	grow d
	mirror e
	origin b
	texCoord f
	texScale g
	visibleFaces h
	bake (II)Lnet/minecraft/client/model/geom/ModelPart$Cube; a
net/minecraft/client/model/geom/builders/CubeDeformation fnb
	NONE a
	growX b
	growY c
	growZ d
	extend (F)Lnet/minecraft/client/model/geom/builders/CubeDeformation; a
	extend (FFF)Lnet/minecraft/client/model/geom/builders/CubeDeformation; a
net/minecraft/client/model/geom/builders/CubeListBuilder fnc
	ALL_VISIBLE a
	cubes b
	mirror e
	xTexOffs c
	yTexOffs d
	addBox (FFFFFF)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (FFFFFFLjava/util/Set;)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (FFFFFFLnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (FFFFFFLnet/minecraft/client/model/geom/builders/CubeDeformation;FF)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (FFFFFFZ)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (Ljava/lang/String;FFFFFF)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (Ljava/lang/String;FFFFFFLnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (Ljava/lang/String;FFFIIIII)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (Ljava/lang/String;FFFIIILnet/minecraft/client/model/geom/builders/CubeDeformation;II)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	create ()Lnet/minecraft/client/model/geom/builders/CubeListBuilder; c
	getCubes ()Ljava/util/List; b
	mirror ()Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	mirror (Z)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	texOffs (II)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
net/minecraft/client/model/geom/builders/LayerDefinition fnd
	material b
	mesh a
	bakeRoot ()Lnet/minecraft/client/model/geom/ModelPart; a
	create (Lnet/minecraft/client/model/geom/builders/MeshDefinition;II)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
net/minecraft/client/model/geom/builders/MaterialDefinition fne
	xTexSize a
	yTexSize b
net/minecraft/client/model/geom/builders/MeshDefinition fnf
	root a
	getRoot ()Lnet/minecraft/client/model/geom/builders/PartDefinition; a
net/minecraft/client/model/geom/builders/PartDefinition fng
	children c
	cubes a
	partPose b
	addOrReplaceChild (Ljava/lang/String;Lnet/minecraft/client/model/geom/builders/CubeListBuilder;Lnet/minecraft/client/model/geom/PartPose;)Lnet/minecraft/client/model/geom/builders/PartDefinition; a
	bake (II)Lnet/minecraft/client/model/geom/ModelPart; a
	getChild (Ljava/lang/String;)Lnet/minecraft/client/model/geom/builders/PartDefinition; a
net/minecraft/client/model/geom/builders/UVPair fnh
	u a
	v b
	u ()F a
	v ()F b
net/minecraft/client/multiplayer/AccountProfileKeyPairManager fnl
	LOGGER b
	MINIMUM_PROFILE_KEY_REFRESH_INTERVAL c
	PROFILE_KEY_PAIR_DIR d
	keyPair g
	nextProfileKeyRefreshTime h
	profileKeyPairPath f
	userApiService e
	fetchProfileKeyPair (Lcom/mojang/authlib/minecraft/UserApiService;)Lnet/minecraft/world/entity/player/ProfileKeyPair; a
	parsePublicKey (Lcom/mojang/authlib/yggdrasil/response/KeyPairResponse;)Lnet/minecraft/world/entity/player/ProfilePublicKey$Data; a
	prepareKeyPair ()Ljava/util/concurrent/CompletableFuture; a
	readOrFetchProfileKeyPair (Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture; a
	readProfileKeyPair ()Ljava/util/Optional; c
	shouldRefreshKeyPair ()Z b
	writeProfileKeyPair (Lnet/minecraft/world/entity/player/ProfileKeyPair;)V a
net/minecraft/client/multiplayer/ChunkBatchSizeCalculator fnm
	CLAMP_COEFFICIENT b
	MAX_OLD_SAMPLES_WEIGHT a
	aggregatedNanosPerChunk c
	chunkBatchStartTime e
	oldSamplesWeight d
	getDesiredChunksPerTick ()F b
	onBatchFinished (I)V a
	onBatchStart ()V a
net/minecraft/client/multiplayer/ClientAdvancements fnn
	LOGGER a
	listener f
	minecraft b
	progress e
	selectedTab g
	telemetryManager c
	tree d
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementHolder; a
	getTree ()Lnet/minecraft/advancements/AdvancementTree; a
	setListener (Lnet/minecraft/client/multiplayer/ClientAdvancements$Listener;)V a
	setSelectedTab (Lnet/minecraft/advancements/AdvancementHolder;Z)V a
	update (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
net/minecraft/client/multiplayer/ClientAdvancements$Listener fnn$a
	onSelectedTabChanged (Lnet/minecraft/advancements/AdvancementHolder;)V a
	onUpdateAdvancementProgress (Lnet/minecraft/advancements/AdvancementNode;Lnet/minecraft/advancements/AdvancementProgress;)V a
net/minecraft/client/multiplayer/ClientChunkCache fno
	LOGGER a
	emptyChunk b
	level e
	lightEngine c
	storage d
	calculateStorageRange (I)I b
	drop (Lnet/minecraft/world/level/ChunkPos;)V a
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/LevelChunk; b
	getLevel ()Lnet/minecraft/world/level/BlockGetter; q
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; p
	getLoadedChunksCount ()I j
	isValidChunk (Lnet/minecraft/world/level/chunk/LevelChunk;II)Z a
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
	replaceBiomes (IILnet/minecraft/network/FriendlyByteBuf;)V a
	replaceWithPacketData (IILnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Consumer;)Lnet/minecraft/world/level/chunk/LevelChunk; a
	tick (Ljava/util/function/BooleanSupplier;Z)V a
	updateViewCenter (II)V d
	updateViewRadius (I)V a
net/minecraft/client/multiplayer/ClientChunkCache$Storage fno$a
	chunkCount g
	chunkRadius c
	chunks b
	viewCenterX e
	viewCenterZ f
	viewRange d
	dumpChunks (Ljava/lang/String;)V a
	getChunk (I)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getIndex (II)I a
	inRange (II)Z b
	replace (ILnet/minecraft/world/level/chunk/LevelChunk;)V a
	replace (ILnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/world/level/chunk/LevelChunk; a
net/minecraft/client/multiplayer/ClientCommonPacketListenerImpl fnp
	GENERIC_DISCONNECT_MESSAGE g
	LOGGER h
	connection b
	deferredPackets i
	minecraft a
	postDisconnectScreen f
	serverBrand d
	serverData c
	telemetryManager e
	addOrUpdatePackPrompt (Ljava/util/UUID;Ljava/net/URL;Ljava/lang/String;ZLnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/screens/Screen; a
	createDisconnectScreen (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/screens/Screen; b
	fillListenerSpecificCrashDetails (Lnet/minecraft/CrashReportCategory;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/common/ClientboundCustomPayloadPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/common/ClientboundDisconnectPacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/common/ClientboundKeepAlivePacket;)V a
	handlePing (Lnet/minecraft/network/protocol/common/ClientboundPingPacket;)V a
	handleResourcePackPop (Lnet/minecraft/network/protocol/common/ClientboundResourcePackPopPacket;)V a
	handleResourcePackPush (Lnet/minecraft/network/protocol/common/ClientboundResourcePackPushPacket;)V a
	handleUpdateTags (Lnet/minecraft/network/protocol/common/ClientboundUpdateTagsPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	parseResourcePackUrl (Ljava/lang/String;)Ljava/net/URL; a
	preparePackPrompt (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	registryAccess ()Lnet/minecraft/core/RegistryAccess$Frozen; f
	send (Lnet/minecraft/network/protocol/Packet;)V b
	sendDeferredPackets ()V g
	sendWhen (Lnet/minecraft/network/protocol/Packet;Ljava/util/function/BooleanSupplier;Ljava/time/Duration;)V a
	serverBrand ()Ljava/lang/String; h
	updateTagsForRegistry (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/tags/TagNetworkSerialization$NetworkPayload;)V a
net/minecraft/client/multiplayer/ClientCommonPacketListenerImpl$DeferredPacket fnp$a
	expirationTime c
	packet a
	sendCondition b
	expirationTime ()J c
	packet ()Lnet/minecraft/network/protocol/Packet; a
	sendCondition ()Ljava/util/function/BooleanSupplier; b
net/minecraft/client/multiplayer/ClientCommonPacketListenerImpl$PackConfirmScreen fnp$b
	parentScreen m
	requests l
	update (Lnet/minecraft/client/Minecraft;Ljava/util/UUID;Ljava/net/URL;Ljava/lang/String;ZLnet/minecraft/network/chat/Component;)Lnet/minecraft/client/multiplayer/ClientCommonPacketListenerImpl$PackConfirmScreen; a
net/minecraft/client/multiplayer/ClientCommonPacketListenerImpl$PackConfirmScreen$PendingRequest fnp$b$a
	hash c
	id a
	url b
	hash ()Ljava/lang/String; c
	id ()Ljava/util/UUID; a
	url ()Ljava/net/URL; b
net/minecraft/client/multiplayer/ClientConfigurationPacketListenerImpl fnq
	LOGGER g
	enabledFeatures j
	localGameProfile h
	receivedRegistries i
	handleConfigurationFinished (Lnet/minecraft/network/protocol/configuration/ClientboundFinishConfigurationPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload;)V a
	handleEnabledFeatures (Lnet/minecraft/network/protocol/configuration/ClientboundUpdateEnabledFeaturesPacket;)V a
	handleRegistryData (Lnet/minecraft/network/protocol/configuration/ClientboundRegistryDataPacket;)V a
	handleUnknownCustomPayload (Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload;)V b
	isAcceptingMessages ()Z c
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess$Frozen; f
	tick ()V e
net/minecraft/client/multiplayer/ClientHandshakePacketListenerImpl fnr
	LOGGER a
	connection f
	minecraft b
	minigameName i
	newWorld g
	parent d
	serverData c
	state j
	updateStatus e
	worldLoadDuration h
	authenticateServer (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; b
	fillListenerSpecificCrashDetails (Lnet/minecraft/CrashReportCategory;)V a
	getMinecraftSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; e
	handleCompression (Lnet/minecraft/network/protocol/login/ClientboundLoginCompressionPacket;)V a
	handleCustomQuery (Lnet/minecraft/network/protocol/login/ClientboundCustomQueryPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket;)V a
	handleGameProfile (Lnet/minecraft/network/protocol/login/ClientboundGameProfilePacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ClientboundHelloPacket;)V a
	isAcceptingMessages ()Z c
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	setMinigameName (Ljava/lang/String;)V a
	switchState (Lnet/minecraft/client/multiplayer/ClientHandshakePacketListenerImpl$State;)V a
net/minecraft/client/multiplayer/ClientHandshakePacketListenerImpl$State fnr$a
	$VALUES g
	AUTHORIZING b
	CONNECTING a
	ENCRYPTING c
	JOINING d
	fromStates f
	message e
	$values ()[Lnet/minecraft/client/multiplayer/ClientHandshakePacketListenerImpl$State; a
net/minecraft/client/multiplayer/ClientLevel fns
	CLOUD_COLOR M
	FLUID_PARTICLE_SPAWN_OFFSET b
	LIGHT_UPDATE_QUEUE_SIZE_THRESHOLD d
	LOGGER a
	MARKER_PARTICLE_ITEMS T
	NORMAL_LIGHT_UPDATES_PER_FRAME c
	blockStatePredictionHandler S
	chunkSource P
	clientLevelData F
	connection D
	effects G
	entityStorage f
	levelRenderer E
	lightUpdateQueue Q
	mapData L
	minecraft I
	players J
	scoreboard K
	serverSimulationDistance R
	skyFlashTime N
	tickRateManager H
	tickingEntities e
	tintCaches O
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V b
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V b
	addDestroyBlockEffect (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	addEntity (Lnet/minecraft/world/entity/Entity;)V c
	addMapData (Ljava/util/Map;)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	animateTick (III)V b
	calculateBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I b
	clearTintCaches ()V g
	createFireworks (DDDDDDLnet/minecraft/nbt/CompoundTag;)V a
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	disconnect ()V W
	doAnimateTick (IIIILnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos$MutableBlockPos;)V a
	effects ()Lnet/minecraft/client/renderer/DimensionSpecialEffects; d
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; I
	entitiesForRendering ()Ljava/lang/Iterable; e
	fillReportDetails (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReportCategory; a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)V a
	gatherChunkSourceStats ()Ljava/lang/String; H
	getAllMapData ()Ljava/util/Map; l
	getBlockStatePredictionHandler ()Lnet/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler; a
	getBlockTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; N
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getChunkSource ()Lnet/minecraft/client/multiplayer/ClientChunkCache; i
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; L
	getCloudColor (F)Lnet/minecraft/world/phys/Vec3; h
	getEntities ()Lnet/minecraft/world/level/entity/LevelEntityGetter; G
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getEntityCount ()I h
	getFluidTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; M
	getFreeMapId ()I v
	getLevelData ()Lnet/minecraft/client/multiplayer/ClientLevel$ClientLevelData; k
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; B_
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getMarkerParticleTarget ()Lnet/minecraft/world/level/block/Block; p
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; r
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; K
	getServerSimulationDistance ()I m
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getSkyColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	getSkyDarken (F)F g
	getSkyFlashTime ()I j
	getStarBrightness (F)F i
	getUncachedNoiseBiome (III)Lnet/minecraft/core/Holder; a
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	handleBlockChangedAck (I)V b
	hasChunk (II)Z b
	isLightUpdateQueueEmpty ()Z c
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	onChunkLoaded (Lnet/minecraft/world/level/ChunkPos;)V a
	overrideMapData (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V b
	playLocalSound (DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playLocalSound (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSeededSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundSource;FFJ)V a
	playSeededSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundSource;FFJ)V a
	playSound (DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZJ)V a
	players ()Ljava/util/List; x
	pollLightUpdates ()V b
	queueLightUpdate (Ljava/lang/Runnable;)V a
	removeEntity (ILnet/minecraft/world/entity/Entity$RemovalReason;)V a
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendPacketToServer (Lnet/minecraft/network/protocol/Packet;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	setBlocksDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V b
	setDayTime (J)V c
	setDefaultSpawnPos (Lnet/minecraft/core/BlockPos;F)V a
	setGameTime (J)V b
	setMapData (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setScoreboard (Lnet/minecraft/world/scores/Scoreboard;)V a
	setSectionDirtyWithNeighbors (III)V c
	setServerSimulationDistance (I)V h
	setServerVerifiedBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)V b
	setSkyFlashTime (I)V c
	shouldTickDeath (Lnet/minecraft/world/entity/Entity;)Z h
	spawnFluidParticle (DDDDDLnet/minecraft/core/particles/ParticleOptions;)V a
	spawnParticle (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/world/phys/shapes/VoxelShape;D)V a
	syncBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tickEntities ()V f
	tickNonPassenger (Lnet/minecraft/world/entity/Entity;)V a
	tickPassenger (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)V a
	tickRateManager ()Lnet/minecraft/world/TickRateManager; s
	tickTime ()V n
	trySpawnDripParticles (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/particles/ParticleOptions;Z)V a
	unload (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
net/minecraft/client/multiplayer/ClientLevel$ClientLevelData fns$a
	dayTime i
	difficulty k
	difficultyLocked l
	gameRules b
	gameTime h
	hardcore a
	isFlat c
	raining j
	spawnAngle g
	xSpawn d
	ySpawn e
	zSpawn f
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getClearColorScale ()F g
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getHorizonHeight (Lnet/minecraft/world/level/LevelHeightAccessor;)D a
	getSpawnAngle ()F d
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isRaining ()Z k
	isThundering ()Z i
	setDayTime (J)V b
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V a
	setGameTime (J)V a
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/client/multiplayer/ClientLevel$EntityCallbacks fns$b
	onCreated (Ljava/lang/Object;)V g
	onCreated (Lnet/minecraft/world/entity/Entity;)V a
	onDestroyed (Ljava/lang/Object;)V f
	onDestroyed (Lnet/minecraft/world/entity/Entity;)V b
	onSectionChange (Ljava/lang/Object;)V a
	onSectionChange (Lnet/minecraft/world/entity/Entity;)V g
	onTickingEnd (Ljava/lang/Object;)V d
	onTickingEnd (Lnet/minecraft/world/entity/Entity;)V d
	onTickingStart (Ljava/lang/Object;)V e
	onTickingStart (Lnet/minecraft/world/entity/Entity;)V c
	onTrackingEnd (Ljava/lang/Object;)V b
	onTrackingEnd (Lnet/minecraft/world/entity/Entity;)V f
	onTrackingStart (Ljava/lang/Object;)V c
	onTrackingStart (Lnet/minecraft/world/entity/Entity;)V e
net/minecraft/client/multiplayer/ClientPacketListener fnt
	CHAT_VALIDATION_FAILED_ERROR k
	INVALID_PACKET j
	LOGGER g
	PENDING_OFFSET_THRESHOLD m
	RECONFIGURE_SCREEN_MESSAGE l
	UNSECURE_SERVER_TOAST_TITLE h
	UNSERURE_SERVER_TOAST i
	advancements s
	chatSession E
	chunkBatchSizeCalculator I
	closed M
	commands y
	debugQueryHandler u
	enabledFeatures D
	id A
	lastSeenMessages G
	level o
	levelData p
	levelLoadStatusManager K
	levels B
	listedPlayers r
	localGameProfile n
	messageSignatureCache H
	pingDebugMonitor J
	playerInfoMap q
	random x
	recipeManager z
	registryAccess C
	seenInsecureChatWarning L
	serverChunkRadius v
	serverSimulationDistance w
	signedMessageEncoder F
	suggestionsProvider t
	applyLightData (IILnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData;)V a
	applyPlayerInfoUpdate (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action;Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Entry;Lnet/minecraft/client/multiplayer/PlayerInfo;)V a
	clearLevel ()V k
	close ()V j
	createEntityFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)Lnet/minecraft/world/entity/Entity; b
	enableChunkLight (Lnet/minecraft/world/level/chunk/LevelChunk;II)V a
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; y
	enforcesSecureChat ()Z A
	findTotem (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; a
	getAdvancements ()Lnet/minecraft/client/multiplayer/ClientAdvancements; r
	getCommands ()Lcom/mojang/brigadier/CommandDispatcher; s
	getConnection ()Lnet/minecraft/network/Connection; m
	getDebugQueryHandler ()Lnet/minecraft/client/DebugQueryHandler; u
	getId ()Ljava/util/UUID; v
	getLevel ()Lnet/minecraft/client/multiplayer/ClientLevel; t
	getListedOnlinePlayers ()Ljava/util/Collection; n
	getLocalGameProfile ()Lcom/mojang/authlib/GameProfile; q
	getOnlinePlayerIds ()Ljava/util/Collection; p
	getOnlinePlayers ()Ljava/util/Collection; o
	getPlayerInfo (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/PlayerInfo; a
	getPlayerInfo (Ljava/util/UUID;)Lnet/minecraft/client/multiplayer/PlayerInfo; a
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; l
	getServerData ()Lnet/minecraft/client/multiplayer/ServerData; x
	getSuggestionsProvider ()Lnet/minecraft/client/multiplayer/ClientSuggestionProvider; i
	handleAddEntity (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	handleAddExperienceOrb (Lnet/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket;)V a
	handleAddObjective (Lnet/minecraft/network/protocol/game/ClientboundSetObjectivePacket;)V a
	handleAddOrRemoveRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ClientboundAnimatePacket;)V a
	handleAwardStats (Lnet/minecraft/network/protocol/game/ClientboundAwardStatsPacket;)V a
	handleBlockChangedAck (Lnet/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket;)V a
	handleBlockDestruction (Lnet/minecraft/network/protocol/game/ClientboundBlockDestructionPacket;)V a
	handleBlockEntityData (Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket;)V a
	handleBlockEvent (Lnet/minecraft/network/protocol/game/ClientboundBlockEventPacket;)V a
	handleBlockUpdate (Lnet/minecraft/network/protocol/game/ClientboundBlockUpdatePacket;)V a
	handleBossUpdate (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
	handleBundlePacket (Lnet/minecraft/network/protocol/game/ClientboundBundlePacket;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket;)V a
	handleChunkBatchFinished (Lnet/minecraft/network/protocol/game/ClientboundChunkBatchFinishedPacket;)V a
	handleChunkBatchStart (Lnet/minecraft/network/protocol/game/ClientboundChunkBatchStartPacket;)V a
	handleChunkBlocksUpdate (Lnet/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket;)V a
	handleChunksBiomes (Lnet/minecraft/network/protocol/game/ClientboundChunksBiomesPacket;)V a
	handleCommandSuggestions (Lnet/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket;)V a
	handleCommands (Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket;)V a
	handleConfigurationStart (Lnet/minecraft/network/protocol/game/ClientboundStartConfigurationPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ClientboundContainerClosePacket;)V a
	handleContainerContent (Lnet/minecraft/network/protocol/game/ClientboundContainerSetContentPacket;)V a
	handleContainerSetData (Lnet/minecraft/network/protocol/game/ClientboundContainerSetDataPacket;)V a
	handleContainerSetSlot (Lnet/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket;)V a
	handleCustomChatCompletions (Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload;)V a
	handleDamageEvent (Lnet/minecraft/network/protocol/game/ClientboundDamageEventPacket;)V a
	handleDeleteChat (Lnet/minecraft/network/protocol/game/ClientboundDeleteChatPacket;)V a
	handleDisguisedChat (Lnet/minecraft/network/protocol/game/ClientboundDisguisedChatPacket;)V a
	handleEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundEntityEventPacket;)V a
	handleEntityLinkPacket (Lnet/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket;)V a
	handleExplosion (Lnet/minecraft/network/protocol/game/ClientboundExplodePacket;)V a
	handleForgetLevelChunk (Lnet/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket;)V a
	handleGameEvent (Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket;)V a
	handleHorseScreenOpen (Lnet/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket;)V a
	handleHurtAnimation (Lnet/minecraft/network/protocol/game/ClientboundHurtAnimationPacket;)V a
	handleInitializeBorder (Lnet/minecraft/network/protocol/game/ClientboundInitializeBorderPacket;)V a
	handleItemCooldown (Lnet/minecraft/network/protocol/game/ClientboundCooldownPacket;)V a
	handleLevelChunkWithLight (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket;)V a
	handleLevelEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelEventPacket;)V a
	handleLightUpdatePacket (Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacket;)V a
	handleLogin (Lnet/minecraft/network/protocol/game/ClientboundLoginPacket;)V a
	handleLookAt (Lnet/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket;)V a
	handleMapItemData (Lnet/minecraft/network/protocol/game/ClientboundMapItemDataPacket;)V a
	handleMerchantOffers (Lnet/minecraft/network/protocol/game/ClientboundMerchantOffersPacket;)V a
	handleMoveEntity (Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ClientboundPlayerPositionPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ClientboundMoveVehiclePacket;)V a
	handleOpenBook (Lnet/minecraft/network/protocol/game/ClientboundOpenBookPacket;)V a
	handleOpenScreen (Lnet/minecraft/network/protocol/game/ClientboundOpenScreenPacket;)V a
	handleOpenSignEditor (Lnet/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket;)V a
	handleParticleEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelParticlesPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket;)V a
	handlePlayerChat (Lnet/minecraft/network/protocol/game/ClientboundPlayerChatPacket;)V a
	handlePlayerCombatEnd (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket;)V a
	handlePlayerCombatEnter (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket;)V a
	handlePlayerCombatKill (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket;)V a
	handlePlayerInfoRemove (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoRemovePacket;)V a
	handlePlayerInfoUpdate (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket;)V a
	handlePongResponse (Lnet/minecraft/network/protocol/status/ClientboundPongResponsePacket;)V a
	handleRemoveEntities (Lnet/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket;)V a
	handleRemoveMobEffect (Lnet/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket;)V a
	handleResetScore (Lnet/minecraft/network/protocol/game/ClientboundResetScorePacket;)V a
	handleRespawn (Lnet/minecraft/network/protocol/game/ClientboundRespawnPacket;)V a
	handleRotateMob (Lnet/minecraft/network/protocol/game/ClientboundRotateHeadPacket;)V a
	handleSelectAdvancementsTab (Lnet/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket;)V a
	handleServerData (Lnet/minecraft/network/protocol/game/ClientboundServerDataPacket;)V a
	handleSetBorderCenter (Lnet/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket;)V a
	handleSetBorderLerpSize (Lnet/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket;)V a
	handleSetBorderSize (Lnet/minecraft/network/protocol/game/ClientboundSetBorderSizePacket;)V a
	handleSetBorderWarningDelay (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket;)V a
	handleSetBorderWarningDistance (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket;)V a
	handleSetCamera (Lnet/minecraft/network/protocol/game/ClientboundSetCameraPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket;)V a
	handleSetChunkCacheCenter (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket;)V a
	handleSetChunkCacheRadius (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket;)V a
	handleSetDisplayObjective (Lnet/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket;)V a
	handleSetEntityData (Lnet/minecraft/network/protocol/game/ClientboundSetEntityDataPacket;)V a
	handleSetEntityMotion (Lnet/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket;)V a
	handleSetEntityPassengersPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPassengersPacket;)V a
	handleSetEquipment (Lnet/minecraft/network/protocol/game/ClientboundSetEquipmentPacket;)V a
	handleSetExperience (Lnet/minecraft/network/protocol/game/ClientboundSetExperiencePacket;)V a
	handleSetHealth (Lnet/minecraft/network/protocol/game/ClientboundSetHealthPacket;)V a
	handleSetPlayerTeamPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket;)V a
	handleSetScore (Lnet/minecraft/network/protocol/game/ClientboundSetScorePacket;)V a
	handleSetSimulationDistance (Lnet/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket;)V a
	handleSetSpawn (Lnet/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket;)V a
	handleSetTime (Lnet/minecraft/network/protocol/game/ClientboundSetTimePacket;)V a
	handleSoundEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundEntityPacket;)V a
	handleSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundPacket;)V a
	handleStopSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundStopSoundPacket;)V a
	handleSystemChat (Lnet/minecraft/network/protocol/game/ClientboundSystemChatPacket;)V a
	handleTabListCustomisation (Lnet/minecraft/network/protocol/game/ClientboundTabListPacket;)V a
	handleTagQueryPacket (Lnet/minecraft/network/protocol/game/ClientboundTagQueryPacket;)V a
	handleTakeItemEntity (Lnet/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket;)V a
	handleTeleportEntity (Lnet/minecraft/network/protocol/game/ClientboundTeleportEntityPacket;)V a
	handleTickingState (Lnet/minecraft/network/protocol/game/ClientboundTickingStatePacket;)V a
	handleTickingStep (Lnet/minecraft/network/protocol/game/ClientboundTickingStepPacket;)V a
	handleTitlesClear (Lnet/minecraft/network/protocol/game/ClientboundClearTitlesPacket;)V a
	handleUnknownCustomPayload (Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload;)V b
	handleUpdateAdvancementsPacket (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
	handleUpdateAttributes (Lnet/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket;)V a
	handleUpdateMobEffect (Lnet/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket;)V a
	handleUpdateRecipes (Lnet/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket;)V a
	handleUpdateTags (Lnet/minecraft/network/protocol/common/ClientboundUpdateTagsPacket;)V a
	initializeChatSession (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Entry;Lnet/minecraft/client/multiplayer/PlayerInfo;)V a
	isAcceptingMessages ()Z c
	isFeatureEnabled (Lnet/minecraft/world/flag/FeatureFlagSet;)Z a
	levels ()Ljava/util/Set; w
	markMessageAsProcessed (Lnet/minecraft/network/chat/PlayerChatMessage;Z)V a
	parseCommand (Ljava/lang/String;)Lcom/mojang/brigadier/ParseResults; e
	postAddEntitySoundInstance (Lnet/minecraft/world/entity/Entity;)V a
	queueLightRemoval (Lnet/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket;)V b
	readSectionList (IILnet/minecraft/world/level/lighting/LevelLightEngine;Lnet/minecraft/world/level/LightLayer;Ljava/util/BitSet;Ljava/util/BitSet;Ljava/util/Iterator;)V a
	refreshTagDependentData ()V z
	registryAccess ()Lnet/minecraft/core/RegistryAccess$Frozen; f
	sendChat (Ljava/lang/String;)V b
	sendChatAcknowledgement ()V B
	sendCommand (Ljava/lang/String;)V c
	sendUnsignedCommand (Ljava/lang/String;)Z d
	setActionBarText (Lnet/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket;)V a
	setKeyPair (Lnet/minecraft/world/entity/player/ProfileKeyPair;)V a
	setSubtitleText (Lnet/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket;)V a
	setTitleText (Lnet/minecraft/network/protocol/game/ClientboundSetTitleTextPacket;)V a
	setTitlesAnimation (Lnet/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket;)V a
	startWaitingForNewLevel (Lnet/minecraft/client/player/LocalPlayer;Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	tick ()V e
	updateLevelChunk (IILnet/minecraft/network/protocol/game/ClientboundLevelChunkPacketData;)V a
net/minecraft/client/multiplayer/ClientRegistryLayer fnu
	$VALUES e
	REMOTE b
	STATIC a
	STATIC_ACCESS d
	VALUES c
	$values ()[Lnet/minecraft/client/multiplayer/ClientRegistryLayer; b
	createRegistryAccess ()Lnet/minecraft/core/LayeredRegistryAccess; a
net/minecraft/client/multiplayer/ClientSuggestionProvider fnv
	connection a
	customCompletionSuggestions e
	minecraft b
	pendingSuggestionsFuture d
	pendingSuggestionsId c
	completeCustomSuggestions (ILcom/mojang/brigadier/suggestion/Suggestions;)V a
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; a
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; w
	getAbsoluteCoordinates ()Ljava/util/Collection; C
	getAllTeams ()Ljava/util/Collection; r
	getAvailableSounds ()Ljava/util/stream/Stream; s
	getCustomTabSugggestions ()Ljava/util/Collection; z
	getOnlinePlayerNames ()Ljava/util/Collection; q
	getRecipeNames ()Ljava/util/stream/Stream; t
	getRelevantCoordinates ()Ljava/util/Collection; B
	getSelectedEntities ()Ljava/util/Collection; A
	hasPermission (I)Z c
	levels ()Ljava/util/Set; u
	modifyCustomCompletions (Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action;Ljava/util/List;)V a
	prettyPrint (D)Ljava/lang/String; a
	prettyPrint (I)Ljava/lang/String; a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; v
	suggestRegistryElements (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/multiplayer/CommonListenerCookie fnw
	enabledFeatures d
	localGameProfile a
	postDisconnectScreen g
	receivedRegistries c
	serverBrand e
	serverData f
	telemetryManager b
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; d
	localGameProfile ()Lcom/mojang/authlib/GameProfile; a
	postDisconnectScreen ()Lnet/minecraft/client/gui/screens/Screen; g
	receivedRegistries ()Lnet/minecraft/core/RegistryAccess$Frozen; c
	serverBrand ()Ljava/lang/String; e
	serverData ()Lnet/minecraft/client/multiplayer/ServerData; f
	telemetryManager ()Lnet/minecraft/client/telemetry/WorldSessionTelemetryManager; b
net/minecraft/client/multiplayer/LegacyServerPinger fnx
	SPLITTER a
	address b
	output c
	channelRead0 (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/client/multiplayer/LegacyServerPinger$Output fnx$a
net/minecraft/client/multiplayer/LevelLoadStatusManager fny
	level b
	levelRenderer c
	player a
	status d
	levelReady ()Z b
	loadingPacketsReceived ()V c
	tick ()V a
net/minecraft/client/multiplayer/LevelLoadStatusManager$Status fny$a
	$VALUES d
	LEVEL_READY c
	WAITING_FOR_PLAYER_CHUNK b
	WAITING_FOR_SERVER a
	$values ()[Lnet/minecraft/client/multiplayer/LevelLoadStatusManager$Status; a
net/minecraft/client/multiplayer/MultiPlayerGameMode fnz
	LOGGER a
	carriedIndex l
	connection c
	destroyBlockPos d
	destroyDelay h
	destroyProgress f
	destroyTicks g
	destroyingItem e
	isDestroying i
	localPlayerMode j
	minecraft b
	previousLocalPlayerMode k
	adjustPlayer (Lnet/minecraft/world/entity/player/Player;)V a
	attack (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;)V a
	canHurtPlayer ()Z a
	continueDestroyBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	createPlayer (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/stats/StatsCounter;Lnet/minecraft/client/ClientRecipeBook;)Lnet/minecraft/client/player/LocalPlayer; a
	createPlayer (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/stats/StatsCounter;Lnet/minecraft/client/ClientRecipeBook;ZZ)Lnet/minecraft/client/player/LocalPlayer; a
	destroyBlock (Lnet/minecraft/core/BlockPos;)Z a
	ensureHasSentCarriedItem ()V o
	getDestroyStage ()I n
	getPickRange ()F c
	getPlayerMode ()Lnet/minecraft/world/level/GameType; l
	getPreviousPlayerMode ()Lnet/minecraft/world/level/GameType; k
	handleCreativeModeItemAdd (Lnet/minecraft/world/item/ItemStack;I)V a
	handleCreativeModeItemDrop (Lnet/minecraft/world/item/ItemStack;)V a
	handleInventoryButtonClick (II)V a
	handleInventoryMouseClick (IIILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)V a
	handlePickItem (I)V a
	handlePlaceRecipe (ILnet/minecraft/world/item/crafting/RecipeHolder;Z)V a
	handleSlotStateChanged (IIZ)V a
	hasExperience ()Z e
	hasFarPickRange ()Z h
	hasInfiniteItems ()Z g
	hasMissTime ()Z f
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/EntityHitResult;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAlwaysFlying ()Z j
	isDestroying ()Z m
	isServerControlledInventory ()Z i
	performUseItemOn (Lnet/minecraft/client/player/LocalPlayer;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; b
	releaseUsingItem (Lnet/minecraft/world/entity/player/Player;)V b
	sameDestroyTarget (Lnet/minecraft/core/BlockPos;)Z b
	setLocalMode (Lnet/minecraft/world/level/GameType;)V a
	setLocalMode (Lnet/minecraft/world/level/GameType;Lnet/minecraft/world/level/GameType;)V a
	startDestroyBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	startPrediction (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/client/multiplayer/prediction/PredictiveAction;)V a
	stopDestroyBlock ()V b
	tick ()V d
	useItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/client/player/LocalPlayer;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/client/multiplayer/PingDebugMonitor foa
	connection a
	delayTimer b
	onPongReceived (Lnet/minecraft/network/protocol/status/ClientboundPongResponsePacket;)V a
	tick ()V a
net/minecraft/client/multiplayer/PlayerInfo fob
	chatSession f
	gameMode c
	latency d
	messageValidator g
	profile a
	skinLookup b
	tabListDisplayName e
	clearChatSession (Z)V a
	createSkinLookup (Lcom/mojang/authlib/GameProfile;)Ljava/util/function/Supplier; a
	fallbackMessageValidator (Z)Lnet/minecraft/network/chat/SignedMessageValidator; b
	getChatSession ()Lnet/minecraft/network/chat/RemoteChatSession; b
	getGameMode ()Lnet/minecraft/world/level/GameType; e
	getLatency ()I f
	getMessageValidator ()Lnet/minecraft/network/chat/SignedMessageValidator; c
	getProfile ()Lcom/mojang/authlib/GameProfile; a
	getSkin ()Lnet/minecraft/client/resources/PlayerSkin; g
	getTabListDisplayName ()Lnet/minecraft/network/chat/Component; i
	getTeam ()Lnet/minecraft/world/scores/PlayerTeam; h
	hasVerifiableChat ()Z d
	setChatSession (Lnet/minecraft/network/chat/RemoteChatSession;)V a
	setGameMode (Lnet/minecraft/world/level/GameType;)V a
	setLatency (I)V a
	setTabListDisplayName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/client/multiplayer/ProfileKeyPairManager foc
	EMPTY_KEY_MANAGER a
	create (Lcom/mojang/authlib/minecraft/UserApiService;Lnet/minecraft/client/User;Ljava/nio/file/Path;)Lnet/minecraft/client/multiplayer/ProfileKeyPairManager; a
	prepareKeyPair ()Ljava/util/concurrent/CompletableFuture; a
	shouldRefreshKeyPair ()Z b
net/minecraft/client/multiplayer/ServerData fod
	LOGGER k
	MAX_ICON_SIZE l
	enforcesSecureChat p
	iconBytes n
	ip b
	motd d
	name a
	packStatus m
	ping f
	pinged i
	playerList j
	players e
	protocol g
	status c
	type o
	version h
	copyFrom (Lnet/minecraft/client/multiplayer/ServerData;)V b
	copyNameIconFrom (Lnet/minecraft/client/multiplayer/ServerData;)V a
	enforcesSecureChat ()Z g
	getIconBytes ()[B c
	getResourcePackStatus ()Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus; b
	isLan ()Z d
	isRealm ()Z e
	read (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/client/multiplayer/ServerData; a
	setEnforcesSecureChat (Z)V a
	setIconBytes ([B)V a
	setResourcePackStatus (Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus;)V a
	type ()Lnet/minecraft/client/multiplayer/ServerData$Type; f
	validateIcon ([B)[B b
	write ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/client/multiplayer/ServerData$ServerPackStatus fod$a
	$VALUES e
	DISABLED b
	ENABLED a
	PROMPT c
	name d
	$values ()[Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus; b
	getName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/multiplayer/ServerData$Type fod$b
	$VALUES d
	LAN a
	OTHER c
	REALM b
	$values ()[Lnet/minecraft/client/multiplayer/ServerData$Type; a
net/minecraft/client/multiplayer/ServerList foe
	IO_MAILBOX b
	LOGGER a
	MAX_HIDDEN_SERVERS c
	hiddenServerList f
	minecraft d
	serverList e
	add (Lnet/minecraft/client/multiplayer/ServerData;Z)V a
	get (I)Lnet/minecraft/client/multiplayer/ServerData; a
	get (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/ServerData; a
	load ()V a
	remove (Lnet/minecraft/client/multiplayer/ServerData;)V a
	replace (ILnet/minecraft/client/multiplayer/ServerData;)V a
	save ()V b
	saveSingleServer (Lnet/minecraft/client/multiplayer/ServerData;)V b
	set (Lnet/minecraft/client/multiplayer/ServerData;Ljava/util/List;)Z a
	size ()I c
	swap (II)V a
	unhide (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/ServerData; b
net/minecraft/client/multiplayer/ServerStatusPinger fof
	CANT_CONNECT_MESSAGE b
	LOGGER a
	connections c
	formatPlayerCount (II)Lnet/minecraft/network/chat/Component; a
	onPingFailed (Lnet/minecraft/network/chat/Component;Lnet/minecraft/client/multiplayer/ServerData;)V a
	pingLegacyServer (Ljava/net/InetSocketAddress;Lnet/minecraft/client/multiplayer/resolver/ServerAddress;Lnet/minecraft/client/multiplayer/ServerData;)V a
	pingServer (Lnet/minecraft/client/multiplayer/ServerData;Ljava/lang/Runnable;)V a
	removeAll ()V b
	tick ()V a
net/minecraft/client/multiplayer/chat/ChatListener fog
	CHAT_VALIDATION_ERROR a
	delayedMessageQueue c
	messageDelay d
	minecraft b
	previousMessageTime e
	acceptNextDelayedMessage ()V b
	clearQueue ()V d
	evaluateTrustLevel (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/Component;Ljava/time/Instant;)Lnet/minecraft/client/multiplayer/chat/ChatTrustLevel; a
	guessChatUUID (Lnet/minecraft/network/chat/Component;)Ljava/util/UUID; a
	handleChatMessageError (Ljava/util/UUID;Lnet/minecraft/network/chat/ChatType$Bound;)V a
	handleDisguisedChatMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType$Bound;)V a
	handleMessage (Lnet/minecraft/network/chat/MessageSignature;Ljava/util/function/BooleanSupplier;)V a
	handlePlayerChatMessage (Lnet/minecraft/network/chat/PlayerChatMessage;Lcom/mojang/authlib/GameProfile;Lnet/minecraft/network/chat/ChatType$Bound;)V a
	handleSystemMessage (Lnet/minecraft/network/chat/Component;Z)V a
	isSenderLocalPlayer (Ljava/util/UUID;)Z a
	logPlayerMessage (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/ChatType$Bound;Lcom/mojang/authlib/GameProfile;Lnet/minecraft/client/multiplayer/chat/ChatTrustLevel;)V a
	logSystemMessage (Lnet/minecraft/network/chat/Component;Ljava/time/Instant;)V a
	narrateChatMessage (Lnet/minecraft/network/chat/ChatType$Bound;Lnet/minecraft/network/chat/Component;)V a
	queueSize ()J c
	removeFromDelayedMessageQueue (Lnet/minecraft/network/chat/MessageSignature;)Z a
	setMessageDelay (D)V a
	showMessageToPlayer (Lnet/minecraft/network/chat/ChatType$Bound;Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/Component;Lcom/mojang/authlib/GameProfile;ZLjava/time/Instant;)Z a
	tick ()V a
	willDelayMessages ()Z e
net/minecraft/client/multiplayer/chat/ChatListener$Message fog$a
	handler b
	signature a
	accept ()Z a
	handler ()Ljava/util/function/BooleanSupplier; c
	signature ()Lnet/minecraft/network/chat/MessageSignature; b
net/minecraft/client/multiplayer/chat/ChatLog foh
	buffer a
	nextId b
	codec (I)Lcom/mojang/serialization/Codec; a
	end ()I b
	index (I)I c
	loggedChatEvents ()Ljava/util/List; c
	lookup (I)Lnet/minecraft/client/multiplayer/chat/LoggedChatEvent; b
	push (Lnet/minecraft/client/multiplayer/chat/LoggedChatEvent;)V a
	size ()I d
	start ()I a
net/minecraft/client/multiplayer/chat/ChatTrustLevel foi
	$VALUES f
	CODEC d
	MODIFIED b
	NOT_SECURE c
	SECURE a
	serializedName e
	$values ()[Lnet/minecraft/client/multiplayer/chat/ChatTrustLevel; b
	containsModifiedStyle (Lnet/minecraft/network/chat/Component;)Z a
	createTag (Lnet/minecraft/network/chat/PlayerChatMessage;)Lnet/minecraft/client/GuiMessageTag; a
	evaluate (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/Component;Ljava/time/Instant;)Lnet/minecraft/client/multiplayer/chat/ChatTrustLevel; a
	getSerializedName ()Ljava/lang/String; c
	isModified (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/Component;)Z a
	isModifiedStyle (Lnet/minecraft/network/chat/Style;)Z a
	isNotSecure ()Z a
net/minecraft/client/multiplayer/chat/LoggedChatEvent foj
	CODEC a
	type ()Lnet/minecraft/client/multiplayer/chat/LoggedChatEvent$Type; a
net/minecraft/client/multiplayer/chat/LoggedChatEvent$Type foj$a
	$VALUES e
	PLAYER a
	SYSTEM b
	codec d
	serializedName c
	$values ()[Lnet/minecraft/client/multiplayer/chat/LoggedChatEvent$Type; e
	codec ()Lcom/mojang/serialization/Codec; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/client/multiplayer/chat/LoggedChatMessage fok
	canReport (Ljava/util/UUID;)Z a
	player (Lcom/mojang/authlib/GameProfile;Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/client/multiplayer/chat/ChatTrustLevel;)Lnet/minecraft/client/multiplayer/chat/LoggedChatMessage$Player; a
	system (Lnet/minecraft/network/chat/Component;Ljava/time/Instant;)Lnet/minecraft/client/multiplayer/chat/LoggedChatMessage$System; a
	toContentComponent ()Lnet/minecraft/network/chat/Component; b
	toNarrationComponent ()Lnet/minecraft/network/chat/Component; c
net/minecraft/client/multiplayer/chat/LoggedChatMessage$Player fok$a
	CODEC b
	TIME_FORMATTER f
	message d
	profile c
	trustLevel e
	canReport (Ljava/util/UUID;)Z a
	getTimeComponent ()Lnet/minecraft/network/chat/Component; i
	message ()Lnet/minecraft/network/chat/PlayerChatMessage; g
	profile ()Lcom/mojang/authlib/GameProfile; f
	profileId ()Ljava/util/UUID; e
	toContentComponent ()Lnet/minecraft/network/chat/Component; b
	toHeadingComponent ()Lnet/minecraft/network/chat/Component; d
	toNarrationComponent ()Lnet/minecraft/network/chat/Component; c
	trustLevel ()Lnet/minecraft/client/multiplayer/chat/ChatTrustLevel; h
	type ()Lnet/minecraft/client/multiplayer/chat/LoggedChatEvent$Type; a
net/minecraft/client/multiplayer/chat/LoggedChatMessage$System fok$b
	CODEC b
	message c
	timeStamp d
	canReport (Ljava/util/UUID;)Z a
	message ()Lnet/minecraft/network/chat/Component; d
	timeStamp ()Ljava/time/Instant; e
	toContentComponent ()Lnet/minecraft/network/chat/Component; b
	type ()Lnet/minecraft/client/multiplayer/chat/LoggedChatEvent$Type; a
net/minecraft/client/multiplayer/chat/report/AbuseReportSender fom
	create (Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment;Lcom/mojang/authlib/minecraft/UserApiService;)Lnet/minecraft/client/multiplayer/chat/report/AbuseReportSender; a
	isEnabled ()Z a
	reportLimits ()Lcom/mojang/authlib/minecraft/report/AbuseReportLimits; b
	send (Ljava/util/UUID;Lnet/minecraft/client/multiplayer/chat/report/ReportType;Lcom/mojang/authlib/minecraft/report/AbuseReport;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/multiplayer/chat/report/AbuseReportSender$SendException fom$a
net/minecraft/client/multiplayer/chat/report/AbuseReportSender$Services fom$b
	HTTP_ERROR_TEXT d
	JSON_ERROR_TEXT e
	SERVICE_UNAVAILABLE_TEXT c
	environment a
	userApiService b
	environment ()Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment; c
	getErrorDescription (Lcom/mojang/authlib/exceptions/MinecraftClientException;)Lnet/minecraft/network/chat/Component; a
	getHttpErrorDescription (Lcom/mojang/authlib/exceptions/MinecraftClientHttpException;)Lnet/minecraft/network/chat/Component; a
	isEnabled ()Z a
	reportLimits ()Lcom/mojang/authlib/minecraft/report/AbuseReportLimits; b
	send (Ljava/util/UUID;Lnet/minecraft/client/multiplayer/chat/report/ReportType;Lcom/mojang/authlib/minecraft/report/AbuseReport;)Ljava/util/concurrent/CompletableFuture; a
	userApiService ()Lcom/mojang/authlib/minecraft/UserApiService; d
net/minecraft/client/multiplayer/chat/report/BanReason fon
	$VALUES o
	DEFAMATION_IMPERSONATION_FALSE_INFORMATION f
	DRUGS g
	EXTREME_VIOLENCE_OR_GORE l
	FALSE_REPORTING b
	FRAUD h
	GENERIC_VIOLATION a
	HARASSMENT_OR_BULLYING e
	HATE_SPEECH c
	HATE_TERRORISM_NOTORIOUS_FIGURE d
	IMMINENT_HARM_TO_PERSON_OR_PROPERTY m
	NUDITY_OR_PORNOGRAPHY j
	SEXUALLY_INAPPROPRIATE k
	SPAM_OR_ADVERTISING i
	title n
	$values ()[Lnet/minecraft/client/multiplayer/chat/report/BanReason; b
	byId (I)Lnet/minecraft/client/multiplayer/chat/report/BanReason; a
	title ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/multiplayer/chat/report/ChatReport foo
	reportedMessages f
	copy ()Lnet/minecraft/client/multiplayer/chat/report/ChatReport; a
	copy ()Lnet/minecraft/client/multiplayer/chat/report/Report; b
	createScreen (Lnet/minecraft/client/gui/screens/Screen;Lnet/minecraft/client/multiplayer/chat/report/ReportingContext;)Lnet/minecraft/client/gui/screens/Screen; a
	toggleReported (ILcom/mojang/authlib/minecraft/report/AbuseReportLimits;)V a
net/minecraft/client/multiplayer/chat/report/ChatReport$Builder foo$a
	build (Lnet/minecraft/client/multiplayer/chat/report/ReportingContext;)Lcom/mojang/datafixers/util/Either; a
	buildEvidence (Lnet/minecraft/client/multiplayer/chat/report/ReportingContext;)Lcom/mojang/authlib/minecraft/report/ReportEvidence; b
	buildReportedChatMessage (Lnet/minecraft/client/multiplayer/chat/LoggedChatMessage$Player;Z)Lcom/mojang/authlib/minecraft/report/ReportChatMessage; a
	checkBuildable ()Lnet/minecraft/client/multiplayer/chat/report/Report$CannotBuildReason; c
	copy ()Lnet/minecraft/client/multiplayer/chat/report/ChatReport$Builder; d
	hasContent ()Z b
	isReported (I)Z b
	reportedMessages ()Lit/unimi/dsi/fastutil/ints/IntSet; a
	toggleReported (I)V a
net/minecraft/client/multiplayer/chat/report/ChatReportContextBuilder fop
	activeCollectors b
	leadingCount a
	acceptContext (Lnet/minecraft/network/chat/PlayerChatMessage;)Z b
	collectAllContext (Lnet/minecraft/client/multiplayer/chat/ChatLog;Lit/unimi/dsi/fastutil/ints/IntCollection;Lnet/minecraft/client/multiplayer/chat/report/ChatReportContextBuilder$Handler;)V a
	isActive ()Z a
	trackContext (Lnet/minecraft/network/chat/PlayerChatMessage;)V a
net/minecraft/client/multiplayer/chat/report/ChatReportContextBuilder$Collector fop$a
	collectingChain d
	count e
	lastChainMessage c
	lastSeenSignatures b
	accept (Lnet/minecraft/network/chat/PlayerChatMessage;)Z a
	isComplete ()Z a
net/minecraft/client/multiplayer/chat/report/ChatReportContextBuilder$Handler fop$b
net/minecraft/client/multiplayer/chat/report/NameReport foq
	reportedName f
	copy ()Lnet/minecraft/client/multiplayer/chat/report/NameReport; c
	copy ()Lnet/minecraft/client/multiplayer/chat/report/Report; b
	createScreen (Lnet/minecraft/client/gui/screens/Screen;Lnet/minecraft/client/multiplayer/chat/report/ReportingContext;)Lnet/minecraft/client/gui/screens/Screen; a
	getReportedName ()Ljava/lang/String; a
net/minecraft/client/multiplayer/chat/report/NameReport$Builder foq$a
	build (Lnet/minecraft/client/multiplayer/chat/report/ReportingContext;)Lcom/mojang/datafixers/util/Either; a
	checkBuildable ()Lnet/minecraft/client/multiplayer/chat/report/Report$CannotBuildReason; c
	hasContent ()Z b
net/minecraft/client/multiplayer/chat/report/Report fos
	comments d
	createdAt b
	reason e
	reportId a
	reportedProfileId c
	copy ()Lnet/minecraft/client/multiplayer/chat/report/Report; b
	createScreen (Lnet/minecraft/client/gui/screens/Screen;Lnet/minecraft/client/multiplayer/chat/report/ReportingContext;)Lnet/minecraft/client/gui/screens/Screen; a
	isReportedPlayer (Ljava/util/UUID;)Z a
net/minecraft/client/multiplayer/chat/report/Report$Builder fos$a
	limits b
	report a
	build (Lnet/minecraft/client/multiplayer/chat/report/ReportingContext;)Lcom/mojang/datafixers/util/Either; a
	checkBuildable ()Lnet/minecraft/client/multiplayer/chat/report/Report$CannotBuildReason; c
	comments ()Ljava/lang/String; g
	hasContent ()Z b
	reason ()Lnet/minecraft/client/multiplayer/chat/report/ReportReason; h
	report ()Lnet/minecraft/client/multiplayer/chat/report/Report; e
	reportedProfileId ()Ljava/util/UUID; f
	setComments (Ljava/lang/String;)V a
	setReason (Lnet/minecraft/client/multiplayer/chat/report/ReportReason;)V a
net/minecraft/client/multiplayer/chat/report/Report$CannotBuildReason fos$b
	COMMENT_TOO_LONG d
	NO_REASON a
	NO_REPORTED_MESSAGES b
	TOO_MANY_MESSAGES c
	message e
	message ()Lnet/minecraft/network/chat/Component; b
	tooltip ()Lnet/minecraft/client/gui/components/Tooltip; a
net/minecraft/client/multiplayer/chat/report/Report$Result fos$c
	id a
	report c
	reportType b
	id ()Ljava/util/UUID; a
	report ()Lcom/mojang/authlib/minecraft/report/AbuseReport; c
	reportType ()Lnet/minecraft/client/multiplayer/chat/report/ReportType; b
net/minecraft/client/multiplayer/chat/report/ReportEnvironment fot
	clientVersion a
	server b
	clientInfo ()Lcom/mojang/authlib/yggdrasil/request/AbuseReportRequest$ClientInfo; b
	clientVersion ()Ljava/lang/String; e
	create (Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server;)Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment; a
	getClientVersion ()Ljava/lang/String; g
	local ()Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment; a
	realm (Lcom/mojang/realmsclient/dto/RealmsServer;)Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment; a
	realmInfo ()Lcom/mojang/authlib/yggdrasil/request/AbuseReportRequest$RealmInfo; d
	server ()Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server; f
	thirdParty (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment; a
	thirdPartyServerInfo ()Lcom/mojang/authlib/yggdrasil/request/AbuseReportRequest$ThirdPartyServerInfo; c
net/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server fot$a
net/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server$Realm fot$a$a
	realmId a
	slotId b
	realmId ()J a
	slotId ()I b
net/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server$ThirdParty fot$a$b
	ip a
	ip ()Ljava/lang/String; a
net/minecraft/client/multiplayer/chat/report/ReportReason fou
	$VALUES n
	ALCOHOL_TOBACCO_DRUGS g
	CHILD_SEXUAL_EXPLOITATION_OR_ABUSE h
	DEFAMATION_IMPERSONATION_FALSE_INFORMATION f
	GENERIC a
	HARASSMENT_OR_BULLYING c
	HATE_SPEECH b
	IMMINENT_HARM e
	NON_CONSENSUAL_INTIMATE_IMAGERY j
	SELF_HARM_OR_SUICIDE d
	TERRORISM_OR_VIOLENT_EXTREMISM i
	backendName k
	description m
	title l
	$values ()[Lnet/minecraft/client/multiplayer/chat/report/ReportReason; d
	backendName ()Ljava/lang/String; a
	description ()Lnet/minecraft/network/chat/Component; c
	title ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/multiplayer/chat/report/ReportType fov
	$VALUES e
	CHAT a
	SKIN b
	USERNAME c
	backendName d
	$values ()[Lnet/minecraft/client/multiplayer/chat/report/ReportType; b
	backendName ()Ljava/lang/String; a
net/minecraft/client/multiplayer/chat/report/ReportingContext fow
	LOG_CAPACITY a
	chatLog d
	draftReport e
	environment c
	sender b
	chatLog ()Lnet/minecraft/client/multiplayer/chat/ChatLog; b
	create (Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment;Lcom/mojang/authlib/minecraft/UserApiService;)Lnet/minecraft/client/multiplayer/chat/report/ReportingContext; a
	draftReportHandled (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/Screen;Ljava/lang/Runnable;Z)V a
	hasDraftReport ()Z c
	hasDraftReportFor (Ljava/util/UUID;)Z a
	matches (Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment;)Z a
	sender ()Lnet/minecraft/client/multiplayer/chat/report/AbuseReportSender; a
	setReportDraft (Lnet/minecraft/client/multiplayer/chat/report/Report;)V a
net/minecraft/client/multiplayer/chat/report/SkinReport fox
	skinGetter f
	copy ()Lnet/minecraft/client/multiplayer/chat/report/Report; b
	copy ()Lnet/minecraft/client/multiplayer/chat/report/SkinReport; c
	createScreen (Lnet/minecraft/client/gui/screens/Screen;Lnet/minecraft/client/multiplayer/chat/report/ReportingContext;)Lnet/minecraft/client/gui/screens/Screen; a
	getSkinGetter ()Ljava/util/function/Supplier; a
net/minecraft/client/multiplayer/chat/report/SkinReport$Builder fox$a
	build (Lnet/minecraft/client/multiplayer/chat/report/ReportingContext;)Lcom/mojang/datafixers/util/Either; a
	checkBuildable ()Lnet/minecraft/client/multiplayer/chat/report/Report$CannotBuildReason; c
	hasContent ()Z b
net/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler fpa
	currentSequenceNr b
	isPredicting c
	serverVerifiedStates a
	currentSequence ()I b
	endPredictionsUpTo (ILnet/minecraft/client/multiplayer/ClientLevel;)V a
	isPredicting ()Z c
	retainKnownServerState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/player/LocalPlayer;)V a
	startPredicting ()Lnet/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler; a
	updateKnownServerState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler$ServerVerifiedState fpa$a
	blockState c
	playerPos a
	sequence b
	setBlockState (Lnet/minecraft/world/level/block/state/BlockState;)V a
	setSequence (I)Lnet/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler$ServerVerifiedState; a
net/minecraft/client/multiplayer/prediction/PredictiveAction fpb
net/minecraft/client/multiplayer/resolver/AddressCheck fpd
	createFromService ()Lnet/minecraft/client/multiplayer/resolver/AddressCheck; a
	isAllowed (Lnet/minecraft/client/multiplayer/resolver/ResolvedServerAddress;)Z a
	isAllowed (Lnet/minecraft/client/multiplayer/resolver/ServerAddress;)Z a
net/minecraft/client/multiplayer/resolver/ResolvedServerAddress fpe
	asInetSocketAddress ()Ljava/net/InetSocketAddress; d
	from (Ljava/net/InetSocketAddress;)Lnet/minecraft/client/multiplayer/resolver/ResolvedServerAddress; a
	getHostIp ()Ljava/lang/String; b
	getHostName ()Ljava/lang/String; a
	getPort ()I c
net/minecraft/client/multiplayer/resolver/ServerAddress fpf
	INVALID c
	LOGGER a
	hostAndPort b
	getHost ()Ljava/lang/String; a
	getPort ()I b
	isValidAddress (Ljava/lang/String;)Z b
	parsePort (Ljava/lang/String;)I c
	parseString (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/resolver/ServerAddress; a
net/minecraft/client/multiplayer/resolver/ServerAddressResolver fpg
	LOGGER a
	SYSTEM b
net/minecraft/client/multiplayer/resolver/ServerNameResolver fph
	DEFAULT a
	addressCheck d
	redirectHandler c
	resolver b
	resolveAddress (Lnet/minecraft/client/multiplayer/resolver/ServerAddress;)Ljava/util/Optional; a
net/minecraft/client/multiplayer/resolver/ServerRedirectHandler fpi
	EMPTY b
	LOGGER a
net/minecraft/client/particle/AshParticle fpl
net/minecraft/client/particle/AshParticle$Provider fpl$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/AttackSweepParticle fpm
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/AttackSweepParticle$Provider fpm$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BaseAshSmokeParticle fpn
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BlockMarker fpo
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/BlockMarker$Provider fpo$a
	createParticle (Lnet/minecraft/core/particles/BlockParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BreakingItemParticle fpp
	uo a
	vo b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
net/minecraft/client/particle/BreakingItemParticle$Provider fpp$a
	createParticle (Lnet/minecraft/core/particles/ItemParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BreakingItemParticle$SlimeProvider fpp$b
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BreakingItemParticle$SnowballProvider fpp$c
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubbleColumnUpParticle fpq
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubbleColumnUpParticle$Provider fpq$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubbleParticle fpr
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubbleParticle$Provider fpr$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubblePopParticle fps
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubblePopParticle$Provider fps$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CampfireSmokeParticle fpt
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/CampfireSmokeParticle$CosyProvider fpt$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CampfireSmokeParticle$SignalProvider fpt$b
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CherryParticle fpu
	ACCELERATION_SCALE a
	CURVE_ENDPOINT_TIME F
	FALL_ACC G
	INITIAL_LIFETIME b
	WIND_BIG H
	particleRandom J
	rotSpeed I
	spinAcceleration K
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/CritParticle fpv
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/CritParticle$DamageIndicatorProvider fpv$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CritParticle$MagicProvider fpv$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CritParticle$Provider fpv$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DragonBreathParticle fpw
	COLOR_MAX b
	COLOR_MAX_BLUE K
	COLOR_MAX_GREEN J
	COLOR_MAX_RED I
	COLOR_MIN a
	COLOR_MIN_BLUE H
	COLOR_MIN_GREEN G
	COLOR_MIN_RED F
	hasHitGround L
	sprites M
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/DragonBreathParticle$Provider fpw$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle fpx
	isGlowing a
	type b
	createDripstoneLavaFallParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; l
	createDripstoneLavaHangParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; k
	createDripstoneWaterFallParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; j
	createDripstoneWaterHangParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; i
	createHoneyFallParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; g
	createHoneyHangParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; f
	createHoneyLandParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; h
	createLavaFallParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; d
	createLavaHangParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; c
	createLavaLandParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; e
	createNectarFallParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; m
	createObsidianTearFallParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; p
	createObsidianTearHangParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; o
	createObsidianTearLandParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; q
	createSporeBlossomFallParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; n
	createWaterFallParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; b
	createWaterHangParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getType ()Lnet/minecraft/world/level/material/Fluid; g
	postMoveUpdate ()V i
	preMoveUpdate ()V h
	tick ()V a
net/minecraft/client/particle/DripParticle$CoolingDripHangParticle fpx$a
	preMoveUpdate ()V h
net/minecraft/client/particle/DripParticle$DripHangParticle fpx$b
	fallingParticle b
	postMoveUpdate ()V i
	preMoveUpdate ()V h
net/minecraft/client/particle/DripParticle$DripLandParticle fpx$c
net/minecraft/client/particle/DripParticle$DripstoneFallAndLandParticle fpx$d
	postMoveUpdate ()V i
net/minecraft/client/particle/DripParticle$FallAndLandParticle fpx$e
	landParticle b
	postMoveUpdate ()V i
net/minecraft/client/particle/DripParticle$FallingParticle fpx$f
	postMoveUpdate ()V i
net/minecraft/client/particle/DripParticle$HoneyFallAndLandParticle fpx$g
	postMoveUpdate ()V i
net/minecraft/client/particle/DustColorTransitionParticle fpy
	fromColor a
	toColor b
	lerpColors (F)V f
	randomizeColor (Lorg/joml/Vector3f;F)Lorg/joml/Vector3f; a
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/DustColorTransitionParticle$Provider fpy$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/DustColorTransitionOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DustParticle fpz
net/minecraft/client/particle/DustParticle$Provider fpz$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/DustParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DustParticleBase fqa
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	randomizeColor (FF)F a
	tick ()V a
net/minecraft/client/particle/DustPlumeParticle fqb
	COLOR_RGB24 a
	tick ()V a
net/minecraft/client/particle/DustPlumeParticle$Provider fqb$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/EnchantmentTableParticle fqc
	xStart a
	yStart b
	zStart F
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/EnchantmentTableParticle$NautilusProvider fqc$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/EnchantmentTableParticle$Provider fqc$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/EndRodParticle fqd
	move (DDD)V a
net/minecraft/client/particle/EndRodParticle$Provider fqd$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ExplodeParticle fqe
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/ExplodeParticle$Provider fqe$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FallingDustParticle fqf
	rotSpeed a
	sprites b
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/FallingDustParticle$Provider fqf$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/BlockParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles fqg
net/minecraft/client/particle/FireworkParticles$FlashProvider fqg$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles$OverlayParticle fqg$b
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/FireworkParticles$SparkParticle fqg$c
	engine G
	fadeB J
	fadeG I
	fadeR H
	flicker F
	hasFade K
	trail b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	setFlicker (Z)V b
	setTrail (Z)V a
	tick ()V a
net/minecraft/client/particle/FireworkParticles$SparkProvider fqg$d
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles$Starter fqg$e
	engine b
	explosions D
	life a
	twinkleDelay E
	createParticle (DDDDDD[I[IZZ)V a
	createParticleBall (DI[I[IZZ)V a
	createParticleBurst ([I[IZZ)V a
	createParticleShape (D[[D[I[IZZZ)V a
	isFarAwayFromCamera ()Z c
	tick ()V a
net/minecraft/client/particle/FlameParticle fqh
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
net/minecraft/client/particle/FlameParticle$Provider fqh$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FlameParticle$SmallFlameProvider fqh$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle fqi
	RANDOM a
	sprites b
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/GlowParticle$ElectricSparkProvider fqi$a
	SPEED_FACTOR a
	sprite b
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle$GlowSquidProvider fqi$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle$ScrapeProvider fqi$c
	SPEED_FACTOR a
	sprite b
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle$WaxOffProvider fqi$d
	SPEED_FACTOR a
	sprite b
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle$WaxOnProvider fqi$e
	SPEED_FACTOR a
	sprite b
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GustDustParticle fqj
	fromColor a
	toColor b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	lerpColors (F)V f
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	tick ()V a
net/minecraft/client/particle/GustDustParticle$GustDustParticleProvider fqj$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GustParticle fqk
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/GustParticle$Provider fqk$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GustSeedParticle fql
	tick ()V a
net/minecraft/client/particle/GustSeedParticle$Provider fql$a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HeartParticle fqm
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/HeartParticle$AngryVillagerProvider fqm$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HeartParticle$Provider fqm$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HugeExplosionParticle fqn
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/HugeExplosionParticle$Provider fqn$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HugeExplosionSeedParticle fqo
	tick ()V a
net/minecraft/client/particle/HugeExplosionSeedParticle$Provider fqo$a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ItemPickupParticle fqp
	LIFE_TIME a
	entityRenderDispatcher G
	itemEntity D
	life F
	renderBuffers b
	target E
	targetX H
	targetXOld K
	targetY I
	targetYOld L
	targetZ J
	targetZOld M
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getSafeCopy (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/Entity; a
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	saveOldPosition ()V d
	tick ()V a
	updatePosition ()V c
net/minecraft/client/particle/LargeSmokeParticle fqq
net/minecraft/client/particle/LargeSmokeParticle$Provider fqq$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/LavaParticle fqr
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/LavaParticle$Provider fqr$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/MobAppearanceParticle fqs
	model a
	renderType b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/MobAppearanceParticle$Provider fqs$a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/NoRenderParticle fqt
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/NoteParticle fqu
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/NoteParticle$Provider fqu$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/Particle fqv
	INITIAL_AABB a
	MAXIMUM_COLLISION_VELOCITY_SQUARED b
	age s
	alpha y
	bCol x
	bb D
	bbHeight q
	bbWidth p
	friction B
	gCol w
	gravity u
	hasPhysics n
	level c
	lifetime t
	oRoll A
	onGround m
	rCol v
	random r
	removed o
	roll z
	speedUpWhenYMotionIsBlocked C
	stoppedByCollision E
	x g
	xd j
	xo d
	y h
	yd k
	yo e
	z i
	zd l
	zo f
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; n
	getLifetime ()I j
	getLightColor (F)I a
	getParticleGroup ()Ljava/util/Optional; o
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	isAlive ()Z m
	move (DDD)V a
	remove ()V k
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	scale (F)Lnet/minecraft/client/particle/Particle; d
	setAlpha (F)V e
	setBoundingBox (Lnet/minecraft/world/phys/AABB;)V a
	setColor (FFF)V a
	setLifetime (I)V a
	setLocationFromBoundingbox ()V l
	setParticleSpeed (DDD)V b
	setPos (DDD)V c
	setPower (F)Lnet/minecraft/client/particle/Particle; c
	setSize (FF)V b
	tick ()V a
net/minecraft/client/particle/ParticleDescription fqw
	textures a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/particle/ParticleDescription; a
	getTextures ()Ljava/util/List; a
net/minecraft/client/particle/ParticleEngine fqx
	LOGGER b
	MAX_PARTICLES_PER_LAYER e
	PARTICLES_ATLAS_INFO d
	PARTICLE_LISTER c
	RENDER_ORDER f
	level a
	particles g
	particlesToAdd l
	providers k
	random j
	spriteSets m
	textureAtlas n
	textureManager i
	trackedParticleCounts o
	trackingEmitters h
	add (Lnet/minecraft/client/particle/Particle;)V a
	clearParticles ()V f
	close ()V a
	countParticles ()Ljava/lang/String; d
	crack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createTrackingEmitter (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/particles/ParticleOptions;)V a
	createTrackingEmitter (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/particles/ParticleOptions;I)V a
	destroy (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	hasSpaceInParticleLimit (Lnet/minecraft/core/particles/ParticleGroup;)Z a
	loadParticleDescription (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/resources/Resource;)Ljava/util/Optional; a
	makeParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)Lnet/minecraft/client/particle/Particle; b
	register (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration;)V a
	register (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleProvider$Sprite;)V a
	register (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleProvider;)V a
	registerProviders ()V e
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;Lnet/minecraft/client/renderer/LightTexture;Lnet/minecraft/client/Camera;F)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	tick ()V b
	tickParticle (Lnet/minecraft/client/particle/Particle;)V b
	tickParticleList (Ljava/util/Collection;)V a
	updateCount (Lnet/minecraft/core/particles/ParticleGroup;I)V a
net/minecraft/client/particle/ParticleEngine$MutableSpriteSet fqx$b
	sprites a
	get (II)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	get (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	rebind (Ljava/util/List;)V a
net/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration fqx$c
net/minecraft/client/particle/ParticleProvider fqy
net/minecraft/client/particle/ParticleProvider$Sprite fqy$a
net/minecraft/client/particle/ParticleRenderType fqz
	CUSTOM e
	NO_RENDER f
	PARTICLE_SHEET_LIT d
	PARTICLE_SHEET_OPAQUE b
	PARTICLE_SHEET_TRANSLUCENT c
	TERRAIN_SHEET a
	begin (Lcom/mojang/blaze3d/vertex/BufferBuilder;Lnet/minecraft/client/renderer/texture/TextureManager;)V a
	end (Lcom/mojang/blaze3d/vertex/Tesselator;)V a
net/minecraft/client/particle/PlayerCloudParticle fra
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/PlayerCloudParticle$Provider fra$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/PlayerCloudParticle$SneezeProvider fra$b
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/PortalParticle frb
	xStart a
	yStart b
	zStart F
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/PortalParticle$Provider frb$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ReversePortalParticle frc
	getQuadSize (F)F b
	tick ()V a
net/minecraft/client/particle/ReversePortalParticle$ReversePortalProvider frc$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/RisingParticle frd
net/minecraft/client/particle/SculkChargeParticle fre
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SculkChargeParticle$Provider fre$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SculkChargeParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	sprite ()Lnet/minecraft/client/particle/SpriteSet; a
net/minecraft/client/particle/SculkChargePopParticle frf
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SculkChargePopParticle$Provider frf$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	sprite ()Lnet/minecraft/client/particle/SpriteSet; a
net/minecraft/client/particle/ShriekParticle frg
	MAGICAL_X_ROT F
	ROTATION_VECTOR a
	TRANSFORM_VECTOR b
	delay G
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	makeCornerVertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Vector3f;FFI)V a
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	renderRotatedParticle (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;FLjava/util/function/Consumer;)V a
	tick ()V a
net/minecraft/client/particle/ShriekParticle$Provider frg$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ShriekParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SimpleAnimatedParticle frh
	fadeB G
	fadeG F
	fadeR b
	hasFade H
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	setColor (I)V b
	setFadeColor (I)V c
	tick ()V a
net/minecraft/client/particle/SingleQuadParticle fri
	quadSize D
	rotation a
	getFacingCameraMode ()Lnet/minecraft/client/particle/SingleQuadParticle$FacingCameraMode; p
	getQuadSize (F)F b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	scale (F)Lnet/minecraft/client/particle/Particle; d
net/minecraft/client/particle/SingleQuadParticle$FacingCameraMode fri$a
	LOOKAT_XYZ a
	LOOKAT_Y b
net/minecraft/client/particle/SmokeParticle frj
net/minecraft/client/particle/SmokeParticle$Provider frj$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SnowflakeParticle frk
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SnowflakeParticle$Provider frk$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SonicBoomParticle frl
net/minecraft/client/particle/SonicBoomParticle$Provider frl$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SoulParticle frm
	isGlowing a
	sprites b
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SoulParticle$EmissiveProvider frm$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SoulParticle$Provider frm$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle frn
	RANDOM a
	sprites b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	isCloseToScopingPlayer ()Z g
	tick ()V a
net/minecraft/client/particle/SpellParticle$AmbientMobProvider frn$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$InstantProvider frn$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$MobProvider frn$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$Provider frn$d
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$WitchProvider frn$e
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpitParticle fro
net/minecraft/client/particle/SpitParticle$Provider fro$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SplashParticle frp
net/minecraft/client/particle/SplashParticle$Provider frp$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpriteSet frq
	get (II)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	get (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
net/minecraft/client/particle/SquidInkParticle frr
	tick ()V a
net/minecraft/client/particle/SquidInkParticle$GlowInkProvider frr$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SquidInkParticle$Provider frr$b
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle frs
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/SuspendedParticle$CrimsonSporeProvider frs$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle$SporeBlossomAirProvider frs$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle$UnderwaterProvider frs$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle$WarpedSporeProvider frs$d
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle frt
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/SuspendedTownParticle$ComposterFillProvider frt$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$DolphinSpeedProvider frt$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$EggCrackProvider frt$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$HappyVillagerProvider frt$d
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$Provider frt$e
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TerrainParticle fru
	pos a
	uo b
	vo F
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
net/minecraft/client/particle/TerrainParticle$Provider fru$a
	createParticle (Lnet/minecraft/core/particles/BlockParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TextureSheetParticle frv
	sprite E
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
	pickSprite (Lnet/minecraft/client/particle/SpriteSet;)V a
	setSprite (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	setSpriteFromAge (Lnet/minecraft/client/particle/SpriteSet;)V b
net/minecraft/client/particle/TotemParticle frw
net/minecraft/client/particle/TotemParticle$Provider frw$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TrackingEmitter frx
	entity a
	life b
	lifeTime D
	particleType E
	tick ()V a
net/minecraft/client/particle/TrialSpawnerDetectionParticle fry
	BASE_LIFETIME b
	sprites a
	getFacingCameraMode ()Lnet/minecraft/client/particle/SingleQuadParticle$FacingCameraMode; p
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/TrialSpawnerDetectionParticle$Provider fry$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/VibrationSignalParticle frz
	pitch G
	pitchO H
	rot b
	rotO F
	target a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	renderSignal (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;FLjava/util/function/Consumer;)V a
	tick ()V a
net/minecraft/client/particle/VibrationSignalParticle$Provider frz$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/VibrationParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WakeParticle fsa
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WakeParticle$Provider fsa$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WaterCurrentDownParticle fsb
	angle a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WaterCurrentDownParticle$Provider fsb$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WaterDropParticle fsc
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WaterDropParticle$Provider fsc$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WhiteAshParticle fsd
	COLOR_RGB24 a
net/minecraft/client/particle/WhiteAshParticle$Provider fsd$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WhiteSmokeParticle fse
	COLOR_RGB24 a
net/minecraft/client/particle/WhiteSmokeParticle$Provider fse$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/player/AbstractClientPlayer fsg
	clientLevel f
	deltaMovementOnPreviousTick b
	elytraRotX c
	elytraRotY d
	elytraRotZ e
	playerInfo cm
	getDeltaMovementLerped (F)Lnet/minecraft/world/phys/Vec3; C
	getFieldOfViewModifier ()F c
	getPlayerInfo ()Lnet/minecraft/client/multiplayer/PlayerInfo; a
	getSkin ()Lnet/minecraft/client/resources/PlayerSkin; b
	isCreative ()Z f
	isSpectator ()Z P_
	tick ()V l
net/minecraft/client/player/Input fsh
	down d
	forwardImpulse b
	jumping g
	left e
	leftImpulse a
	right f
	shiftKeyDown h
	up c
	getMoveVector ()Lnet/minecraft/world/phys/Vec2; a
	hasForwardImpulse ()Z b
	tick (ZF)V a
net/minecraft/client/player/KeyboardInput fsi
	options i
	calculateImpulse (ZZ)F a
	tick (ZF)V a
net/minecraft/client/player/LocalPlayer fsj
	DEFAULT_SNEAKING_MOVEMENT_FACTOR cE
	LOGGER cm
	MINOR_COLLISION_ANGLE_THRESHOLD_RADIAN cD
	POSITION_REMINDER_INTERVAL cy
	SUFFOCATING_COLLISION_CHECK_SCALE cC
	WATER_VISION_MAX_TIME cz
	WATER_VISION_QUICK_PERCENT cB
	WATER_VISION_QUICK_TIME cA
	ambientSoundHandlers cH
	autoJumpEnabled cZ
	autoJumpTime da
	connection cn
	crouching cP
	doLimitedCrafting de
	flashOnSetHealth cT
	handsBusy cY
	input co
	jumpRidingScale cV
	jumpRidingTicks cU
	lastOnGround cO
	minecraft cp
	oSpinningEffectIntensity cx
	permissionLevel cI
	positionReminder cS
	recipeBook cG
	showDeathScreen dd
	spinningEffectIntensity cw
	sprintTriggerTime cq
	startedUsingItem cW
	stats cF
	usingItemHand cX
	wasFallFlying db
	wasShiftKeyDown cQ
	wasSprinting cR
	waterVisionTime dc
	xBob cs
	xBobO cu
	xLast cJ
	xRotLast cN
	yBob cr
	yBobO ct
	yLast1 cK
	yRotLast cM
	zLast cL
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V f
	aiStep ()V d_
	canAutoJump ()Z H
	canSpawnSoulSpeedParticle ()Z dS
	canSpawnSprintParticle ()Z bl
	canStartSprinting ()Z K
	clientSideCloseContainer ()V e
	closeContainer ()V r
	crit (Lnet/minecraft/world/entity/Entity;)V a
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	drop (Z)Z a
	getCurrentMood ()F d
	getDoLimitedCrafting ()Z p
	getJumpRidingScale ()F u
	getPermissionLevel ()I F
	getRecipeBook ()Lnet/minecraft/client/ClientRecipeBook; m
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; q
	getStats ()Lnet/minecraft/stats/StatsCounter; j
	getUsedItemHand ()Lnet/minecraft/world/InteractionHand; fo
	getViewXRot (F)F g
	getViewYRot (F)F h
	getVisualRotationYInDegrees ()F dD
	getWaterVision ()F C
	handleEntityEvent (B)V b
	handleNetherPortalClient ()V G
	hasEnoughFoodToStartSprinting ()Z N
	hasEnoughImpulseToStartSprinting ()Z M
	heal (F)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtTo (F)V D
	isAutoJumpEnabled ()Z B
	isControlledCamera ()Z w
	isCrouching ()Z bX
	isEffectiveAi ()Z cY
	isHandsBusy ()Z A
	isHorizontalCollisionMinor (Lnet/minecraft/world/phys/Vec3;)Z c
	isLocalPlayer ()Z g
	isMoving ()Z I
	isMovingSlowly ()Z v
	isShiftKeyDown ()Z bS
	isSuppressingSlidingDownLadder ()Z fv
	isTextFilteringEnabled ()Z Y
	isUnderWater ()Z be
	isUsingItem ()Z fn
	jumpableVehicle ()Lnet/minecraft/world/entity/PlayerRideableJumping; q
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	moveTowardsClosestSpace (DD)V c
	onGameModeChanged (Lnet/minecraft/world/level/GameType;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onUpdateAbilities ()V y
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openJigsawBlock (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity;)V a
	openMinecartCommandBlock (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	openStructureBlock (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;Z)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	removeEffectNoUpdate (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; c
	removeRecipeHighlight (Lnet/minecraft/world/item/crafting/RecipeHolder;)V a
	removeVehicle ()V bC
	resetPos ()V z
	respawn ()V fQ
	rideTick ()V t
	sendIsSprintingIfNeeded ()V E
	sendOpenInventory ()V i
	sendPosition ()V D
	sendRidingJump ()V h
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	serverAiStep ()V fi
	setDoLimitedCrafting (Z)V w
	setExperienceValues (FII)V a
	setPermissionLevel (I)V a
	setShowDeathScreen (Z)V b
	shouldShowDeathScreen ()Z o
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startUsingItem (Lnet/minecraft/world/InteractionHand;)V c
	stopUsingItem ()V ft
	suffocatesAt (Lnet/minecraft/core/BlockPos;)Z i
	swing (Lnet/minecraft/world/InteractionHand;)V a
	tick ()V l
	tickDeath ()V eb
	updateAutoJump (FF)V f
	updateIsUnderwater ()Z fL
	updateTutorialInventoryAction (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V a
	vehicleCanSprint (Lnet/minecraft/world/entity/Entity;)Z c
net/minecraft/client/player/RemotePlayer fsk
	lerpDeltaMovement cm
	lerpDeltaMovementSteps cn
	aiStep ()V d_
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	lerpMotion (DDD)V l
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	shouldRenderAtSqrDistance (D)Z a
	tick ()V l
	updatePlayerPose ()V fM
net/minecraft/client/player/inventory/Hotbar fsl
	items a
	createTag ()Lnet/minecraft/nbt/ListTag; a
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
net/minecraft/client/profiling/ClientMetricsSamplersProvider fso
	levelRenderer a
	samplerFactory c
	samplers b
	registerStaticSamplers ()V a
	samplers (Ljava/util/function/Supplier;)Ljava/util/Set; a
net/minecraft/client/quickplay/QuickPlay fsq
	ERROR_TITLE a
	INVALID_IDENTIFIER b
	REALM_CONNECT c
	REALM_PERMISSION d
	TO_REALMS_LIST g
	TO_TITLE e
	TO_WORLD_LIST f
	connect (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/main/GameConfig$QuickPlayData;Lcom/mojang/realmsclient/client/RealmsClient;)V a
	joinMultiplayerWorld (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V b
	joinRealmsWorld (Lnet/minecraft/client/Minecraft;Lcom/mojang/realmsclient/client/RealmsClient;Ljava/lang/String;)V a
	joinSingleplayerWorld (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V a
net/minecraft/client/quickplay/QuickPlayLog fsr
	GSON c
	INACTIVE a
	LOGGER b
	path d
	worldData e
	log (Lnet/minecraft/client/Minecraft;)V a
	of (Ljava/lang/String;)Lnet/minecraft/client/quickplay/QuickPlayLog; a
	setWorldData (Lnet/minecraft/client/quickplay/QuickPlayLog$Type;Ljava/lang/String;Ljava/lang/String;)V a
net/minecraft/client/quickplay/QuickPlayLog$QuickPlayEntry fsr$a
	CODEC a
	gamemode d
	lastPlayedTime c
	quickPlayWorld b
	gamemode ()Lnet/minecraft/world/level/GameType; c
	lastPlayedTime ()Ljava/time/Instant; b
	quickPlayWorld ()Lnet/minecraft/client/quickplay/QuickPlayLog$QuickPlayWorld; a
net/minecraft/client/quickplay/QuickPlayLog$QuickPlayWorld fsr$b
	MAP_CODEC a
	id c
	name d
	type b
	id ()Ljava/lang/String; b
	name ()Ljava/lang/String; c
	type ()Lnet/minecraft/client/quickplay/QuickPlayLog$Type; a
net/minecraft/client/quickplay/QuickPlayLog$Type fsr$c
	$VALUES f
	CODEC d
	MULTIPLAYER b
	REALMS c
	SINGLEPLAYER a
	name e
	$values ()[Lnet/minecraft/client/quickplay/QuickPlayLog$Type; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/client/renderer/BiomeColors fst
	FOLIAGE_COLOR_RESOLVER b
	GRASS_COLOR_RESOLVER a
	WATER_COLOR_RESOLVER c
	getAverageColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getAverageFoliageColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I b
	getAverageGrassColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getAverageWaterColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I c
net/minecraft/client/renderer/BlockEntityWithoutLevelRenderer fsu
	DEFAULT_SHULKER_BOX b
	SHULKER_BOXES a
	banner f
	bed g
	blockEntityRenderDispatcher m
	chest c
	conduit h
	decoratedPot i
	enderChest e
	entityModelSet n
	shieldModel j
	skullModels l
	trappedChest d
	tridentModel k
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	renderByItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/CubeMap fsv
	SIDES a
	images b
	preload (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	render (Lnet/minecraft/client/Minecraft;FFF)V a
net/minecraft/client/renderer/DimensionSpecialEffects fsw
	EFFECTS a
	cloudLevel c
	constantAmbientLight g
	forceBrightLightmap f
	hasGround d
	skyType e
	sunriseCol b
	constantAmbientLight ()Z e
	forType (Lnet/minecraft/world/level/dimension/DimensionType;)Lnet/minecraft/client/renderer/DimensionSpecialEffects; a
	forceBrightLightmap ()Z d
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	getCloudHeight ()F a
	getSunriseColor (FF)[F a
	hasGround ()Z b
	isFoggyAt (II)Z a
	skyType ()Lnet/minecraft/client/renderer/DimensionSpecialEffects$SkyType; c
net/minecraft/client/renderer/DimensionSpecialEffects$EndEffects fsw$a
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	getSunriseColor (FF)[F a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$NetherEffects fsw$b
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$OverworldEffects fsw$c
	CLOUD_LEVEL a
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$SkyType fsw$d
	$VALUES d
	END c
	NONE a
	NORMAL b
	$values ()[Lnet/minecraft/client/renderer/DimensionSpecialEffects$SkyType; a
net/minecraft/client/renderer/EffectInstance fsx
	ALWAYS_REAPPLY d
	DUMMY_UNIFORM c
	EFFECT_SHADER_PATH a
	LOGGER b
	attributeNames r
	attributes q
	blend p
	dirty o
	fragmentProgram t
	lastAppliedEffect e
	lastProgramId f
	name n
	programId m
	samplerLocations i
	samplerMap g
	samplerNames h
	uniformLocations k
	uniformMap l
	uniforms j
	vertexProgram s
	apply ()V g
	attachToProgram ()V e
	clear ()V f
	getFragmentProgram ()Lcom/mojang/blaze3d/shaders/Program; d
	getId ()I a
	getName ()Ljava/lang/String; h
	getOrCreate (Lnet/minecraft/server/packs/resources/ResourceManager;Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/EffectProgram; a
	getUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/Uniform; a
	getVertexProgram ()Lcom/mojang/blaze3d/shaders/Program; c
	markDirty ()V b
	parseBlendNode (Lcom/google/gson/JsonObject;)Lcom/mojang/blaze3d/shaders/BlendMode; a
	parseSamplerNode (Lcom/google/gson/JsonElement;)V a
	parseUniformNode (Lcom/google/gson/JsonElement;)V b
	safeGetUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/AbstractUniform; b
	setSampler (Ljava/lang/String;Ljava/util/function/IntSupplier;)V a
	updateLocations ()V i
net/minecraft/client/renderer/FaceInfo fsy
	$VALUES i
	BY_FACING g
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	infos h
	$values ()[Lnet/minecraft/client/renderer/FaceInfo; a
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/FaceInfo; a
	getVertexInfo (I)Lnet/minecraft/client/renderer/FaceInfo$VertexInfo; a
net/minecraft/client/renderer/FaceInfo$Constants fsy$a
	MAX_X c
	MAX_Y b
	MAX_Z a
	MIN_X f
	MIN_Y e
	MIN_Z d
net/minecraft/client/renderer/FaceInfo$VertexInfo fsy$b
	xFace a
	yFace b
	zFace c
net/minecraft/client/renderer/FogRenderer fsz
	BIOME_FOG_TRANSITION_TIME a
	MOB_EFFECT_FOG c
	WATER_FOG_DISTANCE b
	biomeChangedTime i
	fogBlue f
	fogGreen e
	fogRed d
	previousBiomeFog h
	targetBiomeFog g
	getPriorityFogFunction (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/client/renderer/FogRenderer$MobEffectFogFunction; a
	levelFogColor ()V b
	setupColor (Lnet/minecraft/client/Camera;FLnet/minecraft/client/multiplayer/ClientLevel;IF)V a
	setupFog (Lnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/FogRenderer$FogMode;FZF)V a
	setupNoFog ()V a
net/minecraft/client/renderer/FogRenderer$BlindnessFogFunction fsz$a
	getMobEffect ()Lnet/minecraft/world/effect/MobEffect; a
	setupFog (Lnet/minecraft/client/renderer/FogRenderer$FogData;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/effect/MobEffectInstance;FF)V a
net/minecraft/client/renderer/FogRenderer$DarknessFogFunction fsz$b
	getMobEffect ()Lnet/minecraft/world/effect/MobEffect; a
	getModifiedVoidDarkness (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/effect/MobEffectInstance;FF)F a
	setupFog (Lnet/minecraft/client/renderer/FogRenderer$FogData;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/effect/MobEffectInstance;FF)V a
net/minecraft/client/renderer/FogRenderer$FogData fsz$c
	end c
	mode a
	shape d
	start b
net/minecraft/client/renderer/FogRenderer$FogMode fsz$d
	$VALUES c
	FOG_SKY a
	FOG_TERRAIN b
	$values ()[Lnet/minecraft/client/renderer/FogRenderer$FogMode; a
net/minecraft/client/renderer/FogRenderer$MobEffectFogFunction fsz$e
	getMobEffect ()Lnet/minecraft/world/effect/MobEffect; a
	getModifiedVoidDarkness (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/effect/MobEffectInstance;FF)F a
	isEnabled (Lnet/minecraft/world/entity/LivingEntity;F)Z a
	setupFog (Lnet/minecraft/client/renderer/FogRenderer$FogData;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/effect/MobEffectInstance;FF)V a
net/minecraft/client/renderer/GameRenderer fta
	DEPTH_BUFFER_DEBUG h
	EFFECTS L
	EFFECT_NONE d
	ENTITY_INTERACTION_RANGE j
	GUI_Z_NEAR i
	ITEM_ACTIVATION_ANIMATION_LENGTH c
	LOGGER g
	NAUSEA_LOCATION f
	PROJECTION_Z_NEAR a
	blitShader e
	confusionAnimationTick q
	darkenWorldAmount t
	darkenWorldAmountO u
	effectActive N
	effectIndex M
	fov r
	hasWorldScreenshot y
	itemActivationItem G
	itemActivationOffX I
	itemActivationOffY J
	itemActivationTicks H
	itemInHandRenderer b
	lastActiveTime z
	lastScreenshotAttempt x
	lightTexture A
	mainCamera O
	mapRenderer o
	minecraft k
	oldFov s
	overlayTexture B
	panoramicMode C
	particleShader V
	positionColorLightmapShader W
	positionColorShader R
	positionColorTexLightmapShader X
	positionColorTexShader S
	positionShader Q
	positionTexColorNormalShader Y
	positionTexColorShader U
	positionTexLightmapColorShader Z
	positionTexShader T
	postEffect K
	random m
	renderBlockOutline w
	renderBuffers p
	renderDistance n
	renderHand v
	rendertypeArmorCutoutNoCullShader af
	rendertypeArmorEntityGlintShader aB
	rendertypeArmorGlintShader aA
	rendertypeBeaconBeamShader ap
	rendertypeBreezeWindShader aw
	rendertypeCrumblingShader aS
	rendertypeCutoutMippedShader ab
	rendertypeCutoutShader ac
	rendertypeEndGatewayShader aQ
	rendertypeEndPortalShader aP
	rendertypeEnergySwirlShader av
	rendertypeEntityAlphaShader at
	rendertypeEntityCutoutNoCullShader ai
	rendertypeEntityCutoutNoCullZOffsetShader aj
	rendertypeEntityCutoutShader ah
	rendertypeEntityDecalShader aq
	rendertypeEntityGlintDirectShader aG
	rendertypeEntityGlintShader aF
	rendertypeEntityNoOutlineShader ar
	rendertypeEntityShadowShader as
	rendertypeEntitySmoothCutoutShader ao
	rendertypeEntitySolidShader ag
	rendertypeEntityTranslucentCullShader al
	rendertypeEntityTranslucentEmissiveShader an
	rendertypeEntityTranslucentShader am
	rendertypeEyesShader au
	rendertypeGlintDirectShader aE
	rendertypeGlintShader aD
	rendertypeGlintTranslucentShader aC
	rendertypeGuiGhostRecipeOverlayShader aW
	rendertypeGuiOverlayShader aU
	rendertypeGuiShader aT
	rendertypeGuiTextHighlightShader aV
	rendertypeItemEntityTranslucentCullShader ak
	rendertypeLeashShader ax
	rendertypeLightningShader aN
	rendertypeLinesShader aR
	rendertypeOutlineShader az
	rendertypeSolidShader aa
	rendertypeTextBackgroundSeeThroughShader aL
	rendertypeTextBackgroundShader aI
	rendertypeTextIntensitySeeThroughShader aM
	rendertypeTextIntensityShader aJ
	rendertypeTextSeeThroughShader aK
	rendertypeTextShader aH
	rendertypeTranslucentMovingBlockShader ae
	rendertypeTranslucentShader ad
	rendertypeTripwireShader aO
	rendertypeWaterMaskShader ay
	resourceManager l
	shaders P
	zoom D
	zoomX E
	zoomY F
	bobHurt (Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	bobView (Lcom/mojang/blaze3d/vertex/PoseStack;F)V b
	checkEntityPostEffect (Lnet/minecraft/world/entity/Entity;)V a
	createReloadListener ()Lnet/minecraft/server/packs/resources/PreparableReloadListener; e
	currentEffect ()Lnet/minecraft/client/renderer/PostChain; g
	cycleEffect ()V d
	displayItemActivation (Lnet/minecraft/world/item/ItemStack;)V a
	getDarkenWorldAmount (F)F b
	getDepthFar ()F h
	getFov (Lnet/minecraft/client/Camera;FZ)D a
	getMainCamera ()Lnet/minecraft/client/Camera; m
	getMapRenderer ()Lnet/minecraft/client/gui/MapRenderer; j
	getMinecraft ()Lnet/minecraft/client/Minecraft; k
	getNightVisionScale (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getParticleShader ()Lnet/minecraft/client/renderer/ShaderInstance; u
	getPositionColorLightmapShader ()Lnet/minecraft/client/renderer/ShaderInstance; v
	getPositionColorShader ()Lnet/minecraft/client/renderer/ShaderInstance; q
	getPositionColorTexLightmapShader ()Lnet/minecraft/client/renderer/ShaderInstance; w
	getPositionColorTexShader ()Lnet/minecraft/client/renderer/ShaderInstance; r
	getPositionShader ()Lnet/minecraft/client/renderer/ShaderInstance; p
	getPositionTexColorNormalShader ()Lnet/minecraft/client/renderer/ShaderInstance; x
	getPositionTexColorShader ()Lnet/minecraft/client/renderer/ShaderInstance; t
	getPositionTexLightmapColorShader ()Lnet/minecraft/client/renderer/ShaderInstance; y
	getPositionTexShader ()Lnet/minecraft/client/renderer/ShaderInstance; s
	getProjectionMatrix (D)Lorg/joml/Matrix4f; a
	getRenderDistance ()F l
	getRendertypeArmorCutoutNoCullShader ()Lnet/minecraft/client/renderer/ShaderInstance; E
	getRendertypeArmorEntityGlintShader ()Lnet/minecraft/client/renderer/ShaderInstance; aa
	getRendertypeArmorGlintShader ()Lnet/minecraft/client/renderer/ShaderInstance; Z
	getRendertypeBeaconBeamShader ()Lnet/minecraft/client/renderer/ShaderInstance; O
	getRendertypeBreezeWindShader ()Lnet/minecraft/client/renderer/ShaderInstance; V
	getRendertypeCrumblingShader ()Lnet/minecraft/client/renderer/ShaderInstance; ar
	getRendertypeCutoutMippedShader ()Lnet/minecraft/client/renderer/ShaderInstance; A
	getRendertypeCutoutShader ()Lnet/minecraft/client/renderer/ShaderInstance; B
	getRendertypeEndGatewayShader ()Lnet/minecraft/client/renderer/ShaderInstance; ap
	getRendertypeEndPortalShader ()Lnet/minecraft/client/renderer/ShaderInstance; ao
	getRendertypeEnergySwirlShader ()Lnet/minecraft/client/renderer/ShaderInstance; U
	getRendertypeEntityAlphaShader ()Lnet/minecraft/client/renderer/ShaderInstance; S
	getRendertypeEntityCutoutNoCullShader ()Lnet/minecraft/client/renderer/ShaderInstance; H
	getRendertypeEntityCutoutNoCullZOffsetShader ()Lnet/minecraft/client/renderer/ShaderInstance; I
	getRendertypeEntityCutoutShader ()Lnet/minecraft/client/renderer/ShaderInstance; G
	getRendertypeEntityDecalShader ()Lnet/minecraft/client/renderer/ShaderInstance; P
	getRendertypeEntityGlintDirectShader ()Lnet/minecraft/client/renderer/ShaderInstance; af
	getRendertypeEntityGlintShader ()Lnet/minecraft/client/renderer/ShaderInstance; ae
	getRendertypeEntityNoOutlineShader ()Lnet/minecraft/client/renderer/ShaderInstance; Q
	getRendertypeEntityShadowShader ()Lnet/minecraft/client/renderer/ShaderInstance; R
	getRendertypeEntitySmoothCutoutShader ()Lnet/minecraft/client/renderer/ShaderInstance; N
	getRendertypeEntitySolidShader ()Lnet/minecraft/client/renderer/ShaderInstance; F
	getRendertypeEntityTranslucentCullShader ()Lnet/minecraft/client/renderer/ShaderInstance; K
	getRendertypeEntityTranslucentEmissiveShader ()Lnet/minecraft/client/renderer/ShaderInstance; M
	getRendertypeEntityTranslucentShader ()Lnet/minecraft/client/renderer/ShaderInstance; L
	getRendertypeEyesShader ()Lnet/minecraft/client/renderer/ShaderInstance; T
	getRendertypeGlintDirectShader ()Lnet/minecraft/client/renderer/ShaderInstance; ad
	getRendertypeGlintShader ()Lnet/minecraft/client/renderer/ShaderInstance; ac
	getRendertypeGlintTranslucentShader ()Lnet/minecraft/client/renderer/ShaderInstance; ab
	getRendertypeGuiGhostRecipeOverlayShader ()Lnet/minecraft/client/renderer/ShaderInstance; av
	getRendertypeGuiOverlayShader ()Lnet/minecraft/client/renderer/ShaderInstance; at
	getRendertypeGuiShader ()Lnet/minecraft/client/renderer/ShaderInstance; as
	getRendertypeGuiTextHighlightShader ()Lnet/minecraft/client/renderer/ShaderInstance; au
	getRendertypeItemEntityTranslucentCullShader ()Lnet/minecraft/client/renderer/ShaderInstance; J
	getRendertypeLeashShader ()Lnet/minecraft/client/renderer/ShaderInstance; W
	getRendertypeLightningShader ()Lnet/minecraft/client/renderer/ShaderInstance; am
	getRendertypeLinesShader ()Lnet/minecraft/client/renderer/ShaderInstance; aq
	getRendertypeOutlineShader ()Lnet/minecraft/client/renderer/ShaderInstance; Y
	getRendertypeSolidShader ()Lnet/minecraft/client/renderer/ShaderInstance; z
	getRendertypeTextBackgroundSeeThroughShader ()Lnet/minecraft/client/renderer/ShaderInstance; ak
	getRendertypeTextBackgroundShader ()Lnet/minecraft/client/renderer/ShaderInstance; ah
	getRendertypeTextIntensitySeeThroughShader ()Lnet/minecraft/client/renderer/ShaderInstance; al
	getRendertypeTextIntensityShader ()Lnet/minecraft/client/renderer/ShaderInstance; ai
	getRendertypeTextSeeThroughShader ()Lnet/minecraft/client/renderer/ShaderInstance; aj
	getRendertypeTextShader ()Lnet/minecraft/client/renderer/ShaderInstance; ag
	getRendertypeTranslucentMovingBlockShader ()Lnet/minecraft/client/renderer/ShaderInstance; D
	getRendertypeTranslucentShader ()Lnet/minecraft/client/renderer/ShaderInstance; C
	getRendertypeTripwireShader ()Lnet/minecraft/client/renderer/ShaderInstance; an
	getRendertypeWaterMaskShader ()Lnet/minecraft/client/renderer/ShaderInstance; X
	getShader (Ljava/lang/String;)Lnet/minecraft/client/renderer/ShaderInstance; a
	isPanoramicMode ()Z a
	lightTexture ()Lnet/minecraft/client/renderer/LightTexture; n
	loadEffect (Lnet/minecraft/resources/ResourceLocation;)V a
	overlayTexture ()Lnet/minecraft/client/renderer/texture/OverlayTexture; o
	pick (F)V a
	preloadShader (Lnet/minecraft/server/packs/resources/ResourceProvider;Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;)Lnet/minecraft/client/renderer/ShaderInstance; a
	preloadUiShader (Lnet/minecraft/server/packs/resources/ResourceProvider;)V a
	reloadShaders (Lnet/minecraft/server/packs/resources/ResourceProvider;)V b
	render (FJZ)V a
	renderConfusionOverlay (Lnet/minecraft/client/gui/GuiGraphics;F)V a
	renderItemActivationAnimation (IIF)V a
	renderItemInHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Camera;F)V a
	renderLevel (FJLcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderZoomed (FFF)V a
	resetData ()V i
	resetProjectionMatrix (Lorg/joml/Matrix4f;)V a
	resize (II)V a
	setPanoramicMode (Z)V c
	setRenderBlockOutline (Z)V b
	setRenderHand (Z)V a
	shouldRenderBlockOutline ()Z az
	shutdownEffect ()V b
	shutdownShaders ()V aw
	takeAutoScreenshot (Ljava/nio/file/Path;)V a
	tick ()V f
	tickFov ()V ax
	togglePostEffect ()V c
	tryTakeScreenshotIfNeeded ()V ay
net/minecraft/client/renderer/GameRenderer$ResourceCache fta$a
	cache b
	original a
	cache ()Ljava/util/Map; b
	original ()Lnet/minecraft/server/packs/resources/ResourceProvider; a
net/minecraft/client/renderer/GpuWarnlistManager ftb
	GPU_WARNLIST_LOCATION b
	LOGGER a
	showWarning d
	skipFabulous f
	warningDismissed e
	warnings c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/renderer/GpuWarnlistManager$Preparations;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	compilePatterns (Lcom/google/gson/JsonArray;Ljava/util/List;)V a
	dismissWarning ()V e
	dismissWarningAndSkipFabulous ()V f
	getAllWarnings ()Ljava/lang/String; m
	getRendererWarnings ()Ljava/lang/String; j
	getVendorWarnings ()Ljava/lang/String; l
	getVersionWarnings ()Ljava/lang/String; k
	hasWarnings ()Z a
	isShowingWarning ()Z g
	isSkippingFabulous ()Z h
	parseJson (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lcom/google/gson/JsonObject; c
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/renderer/GpuWarnlistManager$Preparations; a
	resetWarnings ()V i
	showWarning ()V d
	willShowWarning ()Z b
net/minecraft/client/renderer/GpuWarnlistManager$Preparations ftb$a
	rendererPatterns a
	vendorPatterns c
	versionPatterns b
	apply ()Lcom/google/common/collect/ImmutableMap; a
	matchAny (Ljava/util/List;Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/client/renderer/ItemBlockRenderTypes ftc
	TYPE_BY_BLOCK a
	TYPE_BY_FLUID b
	renderCutout c
	getChunkRenderType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/RenderType; a
	getMovingBlockRenderType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/RenderType; b
	getRenderLayer (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/client/renderer/RenderType; a
	setFancy (Z)V a
net/minecraft/client/renderer/ItemInHandRenderer ftd
	ARM_HEIGHT_SCALE B
	ARM_POSTROTATION_X_OFFSET K
	ARM_POS_SCALE C
	ARM_POS_X D
	ARM_POS_Y E
	ARM_POS_Z F
	ARM_PREROTATION_X_OFFSET H
	ARM_PREROTATION_Y_OFFSET I
	ARM_PREROTATION_Z_OFFSET J
	ARM_PRESWING_ROT_Y G
	ARM_ROT_X L
	ARM_ROT_Y M
	ARM_ROT_Z N
	ARM_SWING_X_POS_SCALE w
	ARM_SWING_Y_POS_SCALE x
	ARM_SWING_Y_ROT_AMOUNT z
	ARM_SWING_Z_POS_SCALE y
	ARM_SWING_Z_ROT_AMOUNT A
	BOW_CHARGE_SHAKE_X_SCALE ap
	BOW_CHARGE_SHAKE_Y_SCALE aq
	BOW_CHARGE_SHAKE_Z_SCALE ar
	BOW_CHARGE_X_POS_SCALE am
	BOW_CHARGE_Y_POS_SCALE an
	BOW_CHARGE_Z_POS_SCALE ao
	BOW_CHARGE_Z_SCALE as
	BOW_MIN_SHAKE_CHARGE at
	EAT_EXTRA_JIGGLE_CUTOFF u
	EAT_EXTRA_JIGGLE_SCALE v
	EAT_JIGGLE_EXPONENT t
	EAT_JIGGLE_X_POS_SCALE q
	EAT_JIGGLE_X_ROT_AMOUNT n
	EAT_JIGGLE_Y_POS_SCALE r
	EAT_JIGGLE_Y_ROT_AMOUNT o
	EAT_JIGGLE_Z_POS_SCALE s
	EAT_JIGGLE_Z_ROT_AMOUNT p
	ITEM_HEIGHT_SCALE f
	ITEM_POS_X g
	ITEM_POS_Y h
	ITEM_POS_Z i
	ITEM_PRESWING_ROT_Y j
	ITEM_SWING_X_POS_SCALE c
	ITEM_SWING_X_ROT_AMOUNT k
	ITEM_SWING_Y_POS_SCALE d
	ITEM_SWING_Y_ROT_AMOUNT l
	ITEM_SWING_Z_POS_SCALE e
	ITEM_SWING_Z_ROT_AMOUNT m
	MAPHAND_X_ROT_AMOUNT X
	MAPHAND_Y_ROT_AMOUNT Y
	MAPHAND_Z_ROT_AMOUNT Z
	MAP_BACKGROUND a
	MAP_BACKGROUND_CHECKERBOARD b
	MAP_BORDER aj
	MAP_FINAL_SCALE ai
	MAP_GLOBAL_X_POS af
	MAP_GLOBAL_Y_POS ag
	MAP_GLOBAL_Z_POS ah
	MAP_HANDS_HEIGHT_SCALE T
	MAP_HANDS_POS_X Q
	MAP_HANDS_POS_Y R
	MAP_HANDS_POS_Z S
	MAP_HANDS_TILT_SCALE U
	MAP_HANDS_Z_ROT_AMOUNT W
	MAP_HAND_X_POS aa
	MAP_HAND_Y_POS ab
	MAP_HAND_Z_POS ac
	MAP_HEIGHT ak
	MAP_PLAYER_PITCH_SCALE V
	MAP_PRE_ROT_SCALE ae
	MAP_SWING_X_POS_SCALE O
	MAP_SWING_X_ROT_AMOUNT ad
	MAP_SWING_Z_POS_SCALE P
	MAP_WIDTH al
	entityRenderDispatcher aB
	itemRenderer aC
	mainHandHeight ax
	mainHandItem av
	minecraft au
	oMainHandHeight ay
	oOffHandHeight aA
	offHandHeight az
	offHandItem aw
	applyBrushTransform (Lcom/mojang/blaze3d/vertex/PoseStack;FLnet/minecraft/world/entity/HumanoidArm;Lnet/minecraft/world/item/ItemStack;F)V a
	applyEatTransform (Lcom/mojang/blaze3d/vertex/PoseStack;FLnet/minecraft/world/entity/HumanoidArm;Lnet/minecraft/world/item/ItemStack;)V a
	applyItemArmAttackTransform (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/entity/HumanoidArm;F)V a
	applyItemArmTransform (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/entity/HumanoidArm;F)V b
	calculateMapTilt (F)F a
	evaluateWhichHandsToRender (Lnet/minecraft/client/player/LocalPlayer;)Lnet/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection; a
	isChargedCrossbow (Lnet/minecraft/world/item/ItemStack;)Z a
	itemUsed (Lnet/minecraft/world/InteractionHand;)V a
	renderArmWithItem (Lnet/minecraft/client/player/AbstractClientPlayer;FFLnet/minecraft/world/InteractionHand;FLnet/minecraft/world/item/ItemStack;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderHandsWithItems (FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;Lnet/minecraft/client/player/LocalPlayer;I)V a
	renderItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/item/ItemStack;)V a
	renderMapHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/HumanoidArm;)V a
	renderOneHandedMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFLnet/minecraft/world/entity/HumanoidArm;FLnet/minecraft/world/item/ItemStack;)V a
	renderPlayerArm (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFFLnet/minecraft/world/entity/HumanoidArm;)V a
	renderTwoHandedMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFFF)V a
	selectionUsingItemWhileHoldingBowLike (Lnet/minecraft/client/player/LocalPlayer;)Lnet/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection; b
	tick ()V a
net/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection ftd$a
	$VALUES f
	RENDER_BOTH_HANDS a
	RENDER_MAIN_HAND_ONLY b
	RENDER_OFF_HAND_ONLY c
	renderMainHand d
	renderOffHand e
	$values ()[Lnet/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection; a
	onlyForHand (Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection; a
net/minecraft/client/renderer/ItemModelShaper fte
	modelManager c
	shapes a
	shapesCache b
	getIndex (Lnet/minecraft/world/item/Item;)I b
	getItemModel (Lnet/minecraft/world/item/Item;)Lnet/minecraft/client/resources/model/BakedModel; a
	getItemModel (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/resources/model/BakedModel; a
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; a
	rebuildCache ()V b
	register (Lnet/minecraft/world/item/Item;Lnet/minecraft/client/resources/model/ModelResourceLocation;)V a
net/minecraft/client/renderer/LevelRenderer ftf
	CLOUDS_LOCATION l
	DIRECTIONS c
	END_SKY_LOCATION m
	FORCEFIELD_LOCATION n
	HALF_SECTION_SIZE b
	LOGGER d
	MIN_FOG_DISTANCE f
	MOON_LOCATION j
	RAIN_DIAMETER h
	RAIN_LOCATION o
	RAIN_RADIUS g
	SECTION_SIZE a
	SKY_DISC_RADIUS e
	SNOW_LOCATION p
	SUN_LOCATION k
	TRANSPARENT_SORT_COUNT i
	blockEntityRenderDispatcher s
	captureFrustum aj
	capturedFrustum ak
	cloudBuffer D
	cloudsTarget P
	culledEntities ah
	cullingFrustum ai
	darkBuffer B
	destroyingBlocks G
	destructionProgress H
	entityEffect K
	entityRenderDispatcher r
	entityTarget J
	frameTimes E
	frustumPoints al
	frustumPos am
	generateClouds C
	globalBlockEntities x
	itemEntityTarget M
	lastCameraSectionX R
	lastCameraSectionY S
	lastCameraSectionZ T
	lastViewDistance af
	level u
	minecraft q
	particlesTarget N
	playingRecords I
	prevCamRotX X
	prevCamRotY Y
	prevCamX U
	prevCamY V
	prevCamZ W
	prevCloudColor ac
	prevCloudX Z
	prevCloudY aa
	prevCloudZ ab
	prevCloudsType ad
	rainSizeX ar
	rainSizeZ as
	rainSoundTime aq
	renderBuffers t
	renderedEntities ag
	sectionOcclusionGraph v
	sectionRenderDispatcher ae
	skyBuffer A
	starBuffer z
	ticks F
	translucentTarget L
	transparencyChain Q
	viewArea y
	visibleSections w
	weatherTarget O
	xTransparentOld an
	yTransparentOld ao
	zTransparentOld ap
	addChainedFilledBoxVertices (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFF)V b
	addChainedFilledBoxVertices (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFFFFFF)V a
	addFrustumQuad (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;IIIIIII)V a
	addFrustumVertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;I)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZZDDDDDD)V a
	addParticleInternal (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)Lnet/minecraft/client/particle/Particle; b
	addParticleInternal (Lnet/minecraft/core/particles/ParticleOptions;ZZDDDDDD)Lnet/minecraft/client/particle/Particle; b
	addRecentlyCompiledSection (Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection;)V a
	allChanged ()V f
	applyFrustum (Lnet/minecraft/client/renderer/culling/Frustum;)V b
	blockChanged (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	buildClouds (Lcom/mojang/blaze3d/vertex/BufferBuilder;DDDLnet/minecraft/world/phys/Vec3;)Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer; a
	buildSkyDisc (Lcom/mojang/blaze3d/vertex/BufferBuilder;F)Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer; a
	calculateParticleLevel (Z)Lnet/minecraft/client/ParticleStatus; a
	captureFrustum ()V m
	captureFrustum (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;DDDLnet/minecraft/client/renderer/culling/Frustum;)V a
	checkPoseStack (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	clear ()V p
	compileSections (Lnet/minecraft/client/Camera;)V c
	countRenderedSections ()I k
	createDarkSky ()V A
	createLightSky ()V B
	createStars ()V C
	deinitTransparency ()V z
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V c
	doEntityOutline ()V b
	doesMobEffectBlockSky (Lnet/minecraft/client/Camera;)Z b
	drawStars (Lcom/mojang/blaze3d/vertex/BufferBuilder;)Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer; a
	entityTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; s
	getCloudsTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; x
	getEntityStatistics ()Ljava/lang/String; l
	getItemEntityTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; u
	getLastViewDistance ()D j
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)I a
	getParticlesTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; v
	getSectionRenderDispatcher ()Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher; h
	getSectionStatistics ()Ljava/lang/String; g
	getTotalSections ()D i
	getTranslucentTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; t
	getWeatherTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; w
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V a
	graphicsChanged ()V e
	hasRenderedAllSections ()Z q
	initOutline ()V a
	initTransparency ()V y
	isSectionCompiled (Lnet/minecraft/core/BlockPos;)Z a
	killFrustum ()V n
	levelEvent (ILnet/minecraft/core/BlockPos;I)V b
	mixColor (F)Lnet/minecraft/world/phys/Vec3; a
	needsUpdate ()V r
	notifyNearbyEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	offsetFrustum (Lnet/minecraft/client/renderer/culling/Frustum;)Lnet/minecraft/client/renderer/culling/Frustum; a
	onChunkLoaded (Lnet/minecraft/world/level/ChunkPos;)V a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	playStreamingMusic (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/core/BlockPos;)V a
	prepareCullFrustum (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/phys/Vec3;Lorg/joml/Matrix4f;)V a
	removeProgress (Lnet/minecraft/server/level/BlockDestructionProgress;)V a
	renderClouds (Lcom/mojang/blaze3d/vertex/PoseStack;Lorg/joml/Matrix4f;FDDD)V a
	renderDebug (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/Camera;)V a
	renderEndSky (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	renderEntity (Lnet/minecraft/world/entity/Entity;DDDFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	renderHitOutline (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/Entity;DDDLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	renderLevel (Lcom/mojang/blaze3d/vertex/PoseStack;FJZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFFFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/AABB;FFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFF)V a
	renderSectionLayer (Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack;DDDLorg/joml/Matrix4f;)V a
	renderShape (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/shapes/VoxelShape;DDDFFFF)V a
	renderSky (Lcom/mojang/blaze3d/vertex/PoseStack;Lorg/joml/Matrix4f;FLnet/minecraft/client/Camera;ZLjava/lang/Runnable;)V a
	renderSnowAndRain (Lnet/minecraft/client/renderer/LightTexture;FDDD)V a
	renderVoxelShape (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/shapes/VoxelShape;DDDFFFFZ)V a
	renderWorldBorder (Lnet/minecraft/client/Camera;)V d
	resize (II)V a
	setBlockDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setBlockDirty (Lnet/minecraft/core/BlockPos;Z)V a
	setBlocksDirty (IIIIII)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	setSectionDirty (III)V b
	setSectionDirty (IIIZ)V a
	setSectionDirtyWithNeighbors (III)V a
	setupRender (Lnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/culling/Frustum;ZZ)V a
	shiftHue (FFFF)Lnet/minecraft/world/phys/Vec3; a
	shootParticles (ILnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/particles/SimpleParticleType;)V a
	shouldShowEntityOutlines ()Z d
	tick ()V o
	tickRain (Lnet/minecraft/client/Camera;)V a
	updateGlobalBlockEntities (Ljava/util/Collection;Ljava/util/Collection;)V a
net/minecraft/client/renderer/LevelRenderer$TransparencyShaderException ftf$a
net/minecraft/client/renderer/LightTexture ftg
	FULL_BLOCK c
	FULL_BRIGHT a
	FULL_SKY b
	blockLightRedFlicker h
	lightPixels e
	lightTexture d
	lightTextureLocation f
	minecraft j
	renderer i
	updateLightTexture g
	block (I)I a
	calculateDarknessScale (Lnet/minecraft/world/entity/LivingEntity;FF)F a
	clampColor (Lorg/joml/Vector3f;)V a
	getBrightness (Lnet/minecraft/world/level/dimension/DimensionType;I)F a
	getDarknessGamma (F)F b
	notGamma (F)F c
	pack (II)I a
	sky (I)I b
	tick ()V a
	turnOffLightLayer ()V b
	turnOnLightLayer ()V c
	updateLightTexture (F)V a
net/minecraft/client/renderer/MultiBufferSource fth
	immediate (Lcom/mojang/blaze3d/vertex/BufferBuilder;)Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; a
	immediateWithBuffers (Ljava/util/Map;Lcom/mojang/blaze3d/vertex/BufferBuilder;)Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; a
net/minecraft/client/renderer/MultiBufferSource$BufferSource fth$a
	builder a
	fixedBuffers b
	lastState c
	startedBuffers d
	endBatch ()V b
	endBatch (Lnet/minecraft/client/renderer/RenderType;)V a
	endLastBatch ()V a
	getBuilderRaw (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/BufferBuilder; b
net/minecraft/client/renderer/OutlineBufferSource fti
	bufferSource a
	outlineBufferSource b
	teamA f
	teamB e
	teamG d
	teamR c
	endOutlineBatch ()V a
	setColor (IIII)V a
net/minecraft/client/renderer/OutlineBufferSource$EntityOutlineGenerator fti$a
	delegate f
	u j
	v k
	x g
	y h
	z i
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V e
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V l
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
net/minecraft/client/renderer/PanoramaRenderer ftj
	bob d
	cubeMap b
	minecraft a
	spin c
	render (FF)V a
	wrap (FF)F b
net/minecraft/client/renderer/PostChain ftk
	MAIN_RENDER_TARGET a
	customRenderTargets f
	fullSizedTargets g
	lastStamp l
	name d
	passes e
	resourceManager c
	screenHeight j
	screenTarget b
	screenWidth i
	shaderOrthoMatrix h
	time k
	addPass (Ljava/lang/String;Lcom/mojang/blaze3d/pipeline/RenderTarget;Lcom/mojang/blaze3d/pipeline/RenderTarget;)Lnet/minecraft/client/renderer/PostPass; a
	addTempTarget (Ljava/lang/String;II)V a
	getName ()Ljava/lang/String; a
	getRenderTarget (Ljava/lang/String;)Lcom/mojang/blaze3d/pipeline/RenderTarget; b
	getTempTarget (Ljava/lang/String;)Lcom/mojang/blaze3d/pipeline/RenderTarget; a
	load (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/resources/ResourceLocation;)V a
	parsePassNode (Lnet/minecraft/client/renderer/texture/TextureManager;Lcom/google/gson/JsonElement;)V a
	parseTargetNode (Lcom/google/gson/JsonElement;)V a
	parseUniformNode (Lcom/google/gson/JsonElement;)V b
	process (F)V a
	resize (II)V a
	updateOrthoMatrix ()V b
net/minecraft/client/renderer/PostPass ftl
	auxAssets d
	auxHeights g
	auxNames e
	auxWidths f
	effect c
	inTarget a
	outTarget b
	shaderOrthoMatrix h
	addAuxAsset (Ljava/lang/String;Ljava/util/function/IntSupplier;II)V a
	getEffect ()Lnet/minecraft/client/renderer/EffectInstance; b
	getName ()Ljava/lang/String; a
	process (F)V a
	setOrthoMatrix (Lorg/joml/Matrix4f;)V a
net/minecraft/client/renderer/Rect2i ftm
	height d
	width c
	xPos a
	yPos b
	contains (II)Z b
	getHeight ()I d
	getWidth ()I c
	getX ()I a
	getY ()I b
	intersect (Lnet/minecraft/client/renderer/Rect2i;)Lnet/minecraft/client/renderer/Rect2i; a
	setHeight (I)V d
	setPosition (II)V a
	setWidth (I)V c
	setX (I)V a
	setY (I)V b
net/minecraft/client/renderer/RenderBuffers ftn
	bufferSource c
	crumblingBufferSource d
	fixedBufferPack a
	outlineBufferSource e
	sectionBufferPool b
	bufferSource ()Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; c
	crumblingBufferSource ()Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; d
	fixedBufferPack ()Lnet/minecraft/client/renderer/SectionBufferBuilderPack; a
	outlineBufferSource ()Lnet/minecraft/client/renderer/OutlineBufferSource; e
	put (Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;Lnet/minecraft/client/renderer/RenderType;)V a
	sectionBufferPool ()Lnet/minecraft/client/renderer/SectionBufferBuilderPool; b
net/minecraft/client/renderer/RenderStateShard fto
	ADDITIVE_TRANSPARENCY d
	BLOCK_SHEET an
	BLOCK_SHEET_MIPPED am
	CLOUDS_TARGET aN
	COLOR_DEPTH_WRITE aC
	COLOR_WRITE aD
	CRUMBLING_TRANSPARENCY g
	CULL aw
	DEFAULT_LINE aP
	DEFAULT_TEXTURING ap
	DEPTH_WRITE aE
	ENTITY_GLINT_TEXTURING ar
	EQUAL_DEPTH_TEST az
	GLINT_TEXTURING aq
	GLINT_TRANSPARENCY f
	GREATER_DEPTH_TEST aB
	ITEM_ENTITY_TARGET aO
	LEQUAL_DEPTH_TEST aA
	LIGHTMAP as
	LIGHTNING_TRANSPARENCY e
	MAIN_TARGET aI
	MAX_ENCHANTMENT_GLINT_SPEED_MILLIS a
	NO_COLOR_LOGIC aQ
	NO_CULL ax
	NO_DEPTH_TEST ay
	NO_LAYERING aF
	NO_LIGHTMAP at
	NO_OVERLAY av
	NO_SHADER i
	NO_TEXTURE ao
	NO_TRANSPARENCY c
	OR_REVERSE_COLOR_LOGIC aR
	OUTLINE_TARGET aJ
	OVERLAY au
	PARTICLES_TARGET aL
	POLYGON_OFFSET_LAYERING aG
	POSITION_COLOR_LIGHTMAP_SHADER j
	POSITION_COLOR_SHADER o
	POSITION_COLOR_TEX_LIGHTMAP_SHADER n
	POSITION_COLOR_TEX_SHADER l
	POSITION_SHADER k
	POSITION_TEX_SHADER m
	RENDERTYPE_ARMOR_CUTOUT_NO_CULL_SHADER u
	RENDERTYPE_ARMOR_ENTITY_GLINT_SHADER P
	RENDERTYPE_ARMOR_GLINT_SHADER O
	RENDERTYPE_BEACON_BEAM_SHADER E
	RENDERTYPE_BREEZE_WIND_SHADER al
	RENDERTYPE_CRUMBLING_SHADER V
	RENDERTYPE_CUTOUT_MIPPED_SHADER q
	RENDERTYPE_CUTOUT_SHADER r
	RENDERTYPE_END_GATEWAY_SHADER af
	RENDERTYPE_END_PORTAL_SHADER ae
	RENDERTYPE_ENERGY_SWIRL_SHADER K
	RENDERTYPE_ENTITY_ALPHA_SHADER I
	RENDERTYPE_ENTITY_CUTOUT_NO_CULL_SHADER x
	RENDERTYPE_ENTITY_CUTOUT_NO_CULL_Z_OFFSET_SHADER y
	RENDERTYPE_ENTITY_CUTOUT_SHADER w
	RENDERTYPE_ENTITY_DECAL_SHADER F
	RENDERTYPE_ENTITY_GLINT_DIRECT_SHADER U
	RENDERTYPE_ENTITY_GLINT_SHADER T
	RENDERTYPE_ENTITY_NO_OUTLINE_SHADER G
	RENDERTYPE_ENTITY_SHADOW_SHADER H
	RENDERTYPE_ENTITY_SMOOTH_CUTOUT_SHADER D
	RENDERTYPE_ENTITY_SOLID_SHADER v
	RENDERTYPE_ENTITY_TRANSLUCENT_CULL_SHADER A
	RENDERTYPE_ENTITY_TRANSLUCENT_EMISSIVE_SHADER C
	RENDERTYPE_ENTITY_TRANSLUCENT_SHADER B
	RENDERTYPE_EYES_SHADER J
	RENDERTYPE_GLINT_DIRECT_SHADER S
	RENDERTYPE_GLINT_SHADER R
	RENDERTYPE_GLINT_TRANSLUCENT_SHADER Q
	RENDERTYPE_GUI_GHOST_RECIPE_OVERLAY_SHADER ak
	RENDERTYPE_GUI_OVERLAY_SHADER ai
	RENDERTYPE_GUI_SHADER ah
	RENDERTYPE_GUI_TEXT_HIGHLIGHT_SHADER aj
	RENDERTYPE_ITEM_ENTITY_TRANSLUCENT_CULL_SHADER z
	RENDERTYPE_LEASH_SHADER L
	RENDERTYPE_LIGHTNING_SHADER ac
	RENDERTYPE_LINES_SHADER ag
	RENDERTYPE_OUTLINE_SHADER N
	RENDERTYPE_SOLID_SHADER p
	RENDERTYPE_TEXT_BACKGROUND_SEE_THROUGH_SHADER aa
	RENDERTYPE_TEXT_BACKGROUND_SHADER X
	RENDERTYPE_TEXT_INTENSITY_SEE_THROUGH_SHADER ab
	RENDERTYPE_TEXT_INTENSITY_SHADER Y
	RENDERTYPE_TEXT_SEE_THROUGH_SHADER Z
	RENDERTYPE_TEXT_SHADER W
	RENDERTYPE_TRANSLUCENT_MOVING_BLOCK_SHADER t
	RENDERTYPE_TRANSLUCENT_SHADER s
	RENDERTYPE_TRIPWIRE_SHADER ad
	RENDERTYPE_WATER_MASK_SHADER M
	TRANSLUCENT_TARGET aK
	TRANSLUCENT_TRANSPARENCY h
	VIEW_OFFSET_Z_LAYERING aH
	VIEW_SCALE_Z_EPSILON aS
	WEATHER_TARGET aM
	clearState aU
	name b
	setupState aT
	clearRenderState ()V b
	setupGlintTexturing (F)V a
	setupRenderState ()V a
net/minecraft/client/renderer/RenderStateShard$BooleanStateShard fto$a
	enabled aS
net/minecraft/client/renderer/RenderStateShard$ColorLogicStateShard fto$b
net/minecraft/client/renderer/RenderStateShard$CullStateShard fto$c
net/minecraft/client/renderer/RenderStateShard$DepthTestStateShard fto$d
	functionName aS
net/minecraft/client/renderer/RenderStateShard$EmptyTextureStateShard fto$e
	cutoutTexture ()Ljava/util/Optional; c
net/minecraft/client/renderer/RenderStateShard$LayeringStateShard fto$f
net/minecraft/client/renderer/RenderStateShard$LightmapStateShard fto$g
net/minecraft/client/renderer/RenderStateShard$LineStateShard fto$h
	width aS
net/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard fto$i
	cutoutTexture aS
	builder ()Lnet/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard$Builder; d
	cutoutTexture ()Ljava/util/Optional; c
net/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard$Builder fto$i$a
	builder a
	add (Lnet/minecraft/resources/ResourceLocation;ZZ)Lnet/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard$Builder; a
	build ()Lnet/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard; a
net/minecraft/client/renderer/RenderStateShard$OffsetTexturingStateShard fto$j
net/minecraft/client/renderer/RenderStateShard$OutputStateShard fto$k
net/minecraft/client/renderer/RenderStateShard$OverlayStateShard fto$l
net/minecraft/client/renderer/RenderStateShard$ShaderStateShard fto$m
	shader aS
net/minecraft/client/renderer/RenderStateShard$TextureStateShard fto$n
	blur aT
	mipmap aU
	texture aS
	cutoutTexture ()Ljava/util/Optional; c
net/minecraft/client/renderer/RenderStateShard$TexturingStateShard fto$o
net/minecraft/client/renderer/RenderStateShard$TransparencyStateShard fto$p
net/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard fto$q
	writeColor aS
	writeDepth aT
net/minecraft/client/renderer/RenderType ftp
	ARMOR_CUTOUT_NO_CULL bd
	ARMOR_ENTITY_GLINT bw
	ARMOR_GLINT bv
	BEACON_BEAM bn
	BIG_BUFFER_SIZE aS
	CHUNK_BUFFER_LAYERS bX
	CRUMBLING bC
	CUTOUT ba
	CUTOUT_MIPPED aZ
	DEBUG_FILLED_BOX bQ
	DEBUG_LINE_STRIP bP
	DEBUG_QUADS bR
	DEBUG_SECTION_QUADS bS
	DRAGON_EXPLOSION_ALPHA br
	END_GATEWAY bO
	END_PORTAL bN
	ENTITY_CUTOUT bf
	ENTITY_CUTOUT_NO_CULL bg
	ENTITY_CUTOUT_NO_CULL_Z_OFFSET bh
	ENTITY_DECAL bo
	ENTITY_GLINT bA
	ENTITY_GLINT_DIRECT bB
	ENTITY_NO_OUTLINE bp
	ENTITY_SHADOW bq
	ENTITY_SMOOTH_CUTOUT bm
	ENTITY_SOLID be
	ENTITY_TRANSLUCENT bk
	ENTITY_TRANSLUCENT_CULL bj
	ENTITY_TRANSLUCENT_EMISSIVE bl
	EYES bs
	GLINT by
	GLINT_DIRECT bz
	GLINT_TRANSLUCENT bx
	GUI bT
	GUI_GHOST_RECIPE_OVERLAY bW
	GUI_OVERLAY bU
	GUI_TEXT_HIGHLIGHT bV
	ITEM_ENTITY_TRANSLUCENT_CULL bi
	LEASH bt
	LIGHTNING bL
	LINES aV
	LINE_STRIP aW
	MEGABYTE aX
	SMALL_BUFFER_SIZE aT
	SOLID aY
	TEXT bD
	TEXT_BACKGROUND bE
	TEXT_BACKGROUND_SEE_THROUGH bJ
	TEXT_INTENSITY bF
	TEXT_INTENSITY_POLYGON_OFFSET bH
	TEXT_INTENSITY_SEE_THROUGH bK
	TEXT_POLYGON_OFFSET bG
	TEXT_SEE_THROUGH bI
	TRANSIENT_BUFFER_SIZE aU
	TRANSLUCENT bb
	TRANSLUCENT_MOVING_BLOCK bc
	TRIPWIRE bM
	WATER_MASK bu
	affectsCrumbling cb
	asOptional cd
	bufferSize ca
	format bY
	mode bZ
	sortOnUpload cc
	affectsCrumbling ()Z L
	armorCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; a
	armorEntityGlint ()Lnet/minecraft/client/renderer/RenderType; k
	armorGlint ()Lnet/minecraft/client/renderer/RenderType; j
	asOptional ()Ljava/util/Optional; N
	beaconBeam (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; e
	breezeEyes (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; q
	breezeWind (Lnet/minecraft/resources/ResourceLocation;FF)Lnet/minecraft/client/renderer/RenderType; a
	bufferSize ()I G
	canConsolidateConsecutiveGeometry ()Z M
	chunkBufferLayers ()Ljava/util/List; F
	create (Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;ILnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; a
	create (Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;IZZLnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; a
	createArmorCutoutNoCull (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; a
	createArmorDecalCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; b
	crumbling (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; s
	cutout ()Lnet/minecraft/client/renderer/RenderType; e
	cutoutMipped ()Lnet/minecraft/client/renderer/RenderType; d
	debugFilledBox ()Lnet/minecraft/client/renderer/RenderType; y
	debugLineStrip (D)Lnet/minecraft/client/renderer/RenderType; a
	debugQuads ()Lnet/minecraft/client/renderer/RenderType; z
	debugSectionQuads ()Lnet/minecraft/client/renderer/RenderType; A
	dragonExplosionAlpha (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; o
	end (Lcom/mojang/blaze3d/vertex/BufferBuilder;Lcom/mojang/blaze3d/vertex/VertexSorting;)V a
	endGateway ()Lnet/minecraft/client/renderer/RenderType; v
	endPortal ()Lnet/minecraft/client/renderer/RenderType; u
	energySwirl (Lnet/minecraft/resources/ResourceLocation;FF)Lnet/minecraft/client/renderer/RenderType; b
	entityCutout (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; d
	entityCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; e
	entityCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; a
	entityCutoutNoCullZOffset (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; f
	entityCutoutNoCullZOffset (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; b
	entityDecal (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; l
	entityGlint ()Lnet/minecraft/client/renderer/RenderType; o
	entityGlintDirect ()Lnet/minecraft/client/renderer/RenderType; p
	entityNoOutline (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; m
	entityShadow (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; n
	entitySmoothCutout (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; k
	entitySolid (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; c
	entityTranslucent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; i
	entityTranslucent (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; c
	entityTranslucentCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; h
	entityTranslucentEmissive (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; j
	entityTranslucentEmissive (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; d
	eyes (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; p
	format ()Lcom/mojang/blaze3d/vertex/VertexFormat; H
	glint ()Lnet/minecraft/client/renderer/RenderType; m
	glintDirect ()Lnet/minecraft/client/renderer/RenderType; n
	glintTranslucent ()Lnet/minecraft/client/renderer/RenderType; l
	gui ()Lnet/minecraft/client/renderer/RenderType; B
	guiGhostRecipeOverlay ()Lnet/minecraft/client/renderer/RenderType; E
	guiOverlay ()Lnet/minecraft/client/renderer/RenderType; C
	guiTextHighlight ()Lnet/minecraft/client/renderer/RenderType; D
	isOutline ()Z K
	itemEntityTranslucentCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; g
	leash ()Lnet/minecraft/client/renderer/RenderType; h
	lightning ()Lnet/minecraft/client/renderer/RenderType; s
	lineStrip ()Lnet/minecraft/client/renderer/RenderType; x
	lines ()Lnet/minecraft/client/renderer/RenderType; w
	mode ()Lcom/mojang/blaze3d/vertex/VertexFormat$Mode; I
	outline ()Ljava/util/Optional; J
	outline (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; r
	solid ()Lnet/minecraft/client/renderer/RenderType; c
	text (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; t
	textBackground ()Lnet/minecraft/client/renderer/RenderType; q
	textBackgroundSeeThrough ()Lnet/minecraft/client/renderer/RenderType; r
	textIntensity (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; u
	textIntensityPolygonOffset (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; w
	textIntensitySeeThrough (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; y
	textPolygonOffset (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; v
	textSeeThrough (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; x
	translucent ()Lnet/minecraft/client/renderer/RenderType; f
	translucentMovingBlock ()Lnet/minecraft/client/renderer/RenderType; g
	translucentMovingBlockState ()Lnet/minecraft/client/renderer/RenderType$CompositeState; O
	translucentState (Lnet/minecraft/client/renderer/RenderStateShard$ShaderStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState; a
	tripwire ()Lnet/minecraft/client/renderer/RenderType; t
	tripwireState ()Lnet/minecraft/client/renderer/RenderType$CompositeState; P
	waterMask ()Lnet/minecraft/client/renderer/RenderType; i
net/minecraft/client/renderer/RenderType$CompositeRenderType ftp$a
	OUTLINE aX
	isOutline ba
	outline aZ
	state aY
	isOutline ()Z K
	outline ()Ljava/util/Optional; J
	state ()Lnet/minecraft/client/renderer/RenderType$CompositeState; O
net/minecraft/client/renderer/RenderType$CompositeState ftp$b
	colorLogicState m
	cullState e
	depthTestState d
	layeringState h
	lightmapState f
	lineState l
	outlineProperty n
	outputState i
	overlayState g
	shaderState b
	states o
	textureState a
	texturingState j
	transparencyState c
	writeMaskState k
	builder ()Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
net/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder ftp$b$a
	colorLogicState m
	cullState e
	depthTestState d
	layeringState h
	lightmapState f
	lineState l
	outputState i
	overlayState g
	shaderState b
	textureState a
	texturingState j
	transparencyState c
	writeMaskState k
	createCompositeState (Lnet/minecraft/client/renderer/RenderType$OutlineProperty;)Lnet/minecraft/client/renderer/RenderType$CompositeState; a
	createCompositeState (Z)Lnet/minecraft/client/renderer/RenderType$CompositeState; a
	setColorLogicState (Lnet/minecraft/client/renderer/RenderStateShard$ColorLogicStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setCullState (Lnet/minecraft/client/renderer/RenderStateShard$CullStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setDepthTestState (Lnet/minecraft/client/renderer/RenderStateShard$DepthTestStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLayeringState (Lnet/minecraft/client/renderer/RenderStateShard$LayeringStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLightmapState (Lnet/minecraft/client/renderer/RenderStateShard$LightmapStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLineState (Lnet/minecraft/client/renderer/RenderStateShard$LineStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setOutputState (Lnet/minecraft/client/renderer/RenderStateShard$OutputStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setOverlayState (Lnet/minecraft/client/renderer/RenderStateShard$OverlayStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setShaderState (Lnet/minecraft/client/renderer/RenderStateShard$ShaderStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTextureState (Lnet/minecraft/client/renderer/RenderStateShard$EmptyTextureStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTexturingState (Lnet/minecraft/client/renderer/RenderStateShard$TexturingStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTransparencyState (Lnet/minecraft/client/renderer/RenderStateShard$TransparencyStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setWriteMaskState (Lnet/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
net/minecraft/client/renderer/RenderType$OutlineProperty ftp$c
	$VALUES e
	AFFECTS_OUTLINE c
	IS_OUTLINE b
	NONE a
	name d
	$values ()[Lnet/minecraft/client/renderer/RenderType$OutlineProperty; a
net/minecraft/client/renderer/RunningTrimmedMean ftq
	count b
	cursor c
	values a
	registerValueAndGetMean (J)J a
net/minecraft/client/renderer/ScreenEffectRenderer ftr
	UNDERWATER_LOCATION a
	getViewBlockingState (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/block/state/BlockState; a
	renderFire (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	renderScreenEffect (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderTex (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderWater (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V b
net/minecraft/client/renderer/SectionBufferBuilderPack fts
	TOTAL_BUFFERS_SIZE a
	builders b
	builder (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/BufferBuilder; a
	clearAll ()V a
	discardAll ()V b
net/minecraft/client/renderer/SectionBufferBuilderPool ftt
	LOGGER b
	MAX_BUILDERS_32_BIT a
	freeBufferCount d
	freeBuffers c
	acquire ()Lnet/minecraft/client/renderer/SectionBufferBuilderPack; a
	allocate (I)Lnet/minecraft/client/renderer/SectionBufferBuilderPool; a
	getFreeBufferCount ()I c
	isEmpty ()Z b
	release (Lnet/minecraft/client/renderer/SectionBufferBuilderPack;)V a
net/minecraft/client/renderer/SectionOcclusionGraph ftu
	CEILED_SECTION_DIAGONAL d
	DIRECTIONS b
	LOGGER a
	MINIMUM_ADVANCED_CULLING_DISTANCE c
	currentGraph h
	fullUpdateTask f
	needsFrustumUpdate j
	needsFullUpdate e
	nextGraphEvents i
	viewArea g
	addNeighbors (Lnet/minecraft/client/renderer/SectionOcclusionGraph$GraphEvents;Lnet/minecraft/world/level/ChunkPos;)V a
	addSectionsInFrustum (Lnet/minecraft/client/renderer/culling/Frustum;Ljava/util/List;)V a
	consumeFrustumUpdate ()Z b
	getNode (Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection;)Lnet/minecraft/client/renderer/SectionOcclusionGraph$Node; b
	getRelativeFrom (Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection;Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection; a
	initializeQueueForFullUpdate (Lnet/minecraft/client/Camera;Ljava/util/Queue;)V a
	invalidate ()V a
	isInViewDistance (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Z a
	onChunkLoaded (Lnet/minecraft/world/level/ChunkPos;)V a
	onSectionCompiled (Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection;)V a
	queueSectionsWithNewNeighbors (Lnet/minecraft/client/renderer/SectionOcclusionGraph$GraphState;)V a
	runPartialUpdate (ZLnet/minecraft/client/renderer/culling/Frustum;Ljava/util/List;Lnet/minecraft/world/phys/Vec3;)V a
	runUpdates (Lnet/minecraft/client/renderer/SectionOcclusionGraph$GraphStorage;Lnet/minecraft/world/phys/Vec3;Ljava/util/Queue;ZLjava/util/function/Consumer;)V a
	scheduleFullUpdate (ZLnet/minecraft/client/Camera;Lnet/minecraft/world/phys/Vec3;)V a
	update (ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/culling/Frustum;Ljava/util/List;)V a
	waitAndReset (Lnet/minecraft/client/renderer/ViewArea;)V a
net/minecraft/client/renderer/SectionOcclusionGraph$GraphEvents ftu$a
	chunksWhichReceivedNeighbors a
	sectionsToPropagateFrom b
	chunksWhichReceivedNeighbors ()Lit/unimi/dsi/fastutil/longs/LongSet; a
	sectionsToPropagateFrom ()Ljava/util/concurrent/BlockingQueue; b
net/minecraft/client/renderer/SectionOcclusionGraph$GraphState ftu$b
	events b
	storage a
	events ()Lnet/minecraft/client/renderer/SectionOcclusionGraph$GraphEvents; b
	storage ()Lnet/minecraft/client/renderer/SectionOcclusionGraph$GraphStorage; a
net/minecraft/client/renderer/SectionOcclusionGraph$GraphStorage ftu$c
	chunksWaitingForNeighbors c
	renderSections b
	sectionToNodeMap a
net/minecraft/client/renderer/SectionOcclusionGraph$Node ftu$d
	directions d
	section a
	sourceDirections c
	step b
	addSourceDirection (Lnet/minecraft/core/Direction;)V b
	hasDirection (Lnet/minecraft/core/Direction;)Z a
	hasSourceDirection (I)Z a
	hasSourceDirections ()Z a
	setDirections (BLnet/minecraft/core/Direction;)V a
net/minecraft/client/renderer/SectionOcclusionGraph$SectionToNodeMap ftu$e
	nodes a
	get (Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection;)Lnet/minecraft/client/renderer/SectionOcclusionGraph$Node; a
	put (Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection;Lnet/minecraft/client/renderer/SectionOcclusionGraph$Node;)V a
net/minecraft/client/renderer/ShaderInstance ftv
	ALWAYS_REAPPLY v
	CHUNK_OFFSET q
	COLOR_MODULATOR g
	DUMMY_UNIFORM u
	FOG_COLOR m
	FOG_END l
	FOG_SHAPE n
	FOG_START k
	GAME_TIME p
	GLINT_ALPHA j
	INVERSE_VIEW_ROTATION_MATRIX d
	LIGHT0_DIRECTION h
	LIGHT1_DIRECTION i
	LINE_WIDTH o
	LOGGER t
	MODEL_VIEW_MATRIX b
	PROJECTION_MATRIX c
	SCREEN_SIZE f
	SHADER_CORE_PATH r
	SHADER_INCLUDE_PATH s
	SHADER_PATH a
	TEXTURE_MATRIX e
	attributeNames J
	attributes I
	blend H
	dirty G
	fragmentProgram L
	lastAppliedShader w
	lastProgramId x
	name F
	programId E
	samplerLocations A
	samplerMap y
	samplerNames z
	uniformLocations C
	uniformMap D
	uniforms B
	vertexFormat M
	vertexProgram K
	apply ()V g
	attachToProgram ()V e
	clear ()V f
	getFragmentProgram ()Lcom/mojang/blaze3d/shaders/Program; d
	getId ()I a
	getName ()Ljava/lang/String; i
	getOrCreate (Lnet/minecraft/server/packs/resources/ResourceProvider;Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/Program; a
	getUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/Uniform; a
	getVertexFormat ()Lcom/mojang/blaze3d/vertex/VertexFormat; h
	getVertexProgram ()Lcom/mojang/blaze3d/shaders/Program; c
	markDirty ()V b
	parseBlendNode (Lcom/google/gson/JsonObject;)Lcom/mojang/blaze3d/shaders/BlendMode; a
	parseSamplerNode (Lcom/google/gson/JsonElement;)V a
	parseUniformNode (Lcom/google/gson/JsonElement;)V b
	safeGetUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/AbstractUniform; b
	setSampler (Ljava/lang/String;Ljava/lang/Object;)V a
	updateLocations ()V j
net/minecraft/client/renderer/Sheets ftw
	ARMOR_TRIMS_DECAL_SHEET_TYPE H
	ARMOR_TRIMS_SHEET g
	ARMOR_TRIMS_SHEET_TYPE G
	BANNER_MATERIALS m
	BANNER_SHEET c
	BANNER_SHEET_TYPE C
	BED_SHEET b
	BED_SHEET_TYPE B
	BED_TEXTURES p
	CHEST_LOCATION w
	CHEST_LOCATION_LEFT x
	CHEST_LOCATION_RIGHT y
	CHEST_SHEET f
	CHEST_SHEET_TYPE F
	CHEST_TRAP_LOCATION q
	CHEST_TRAP_LOCATION_LEFT r
	CHEST_TRAP_LOCATION_RIGHT s
	CHEST_XMAS_LOCATION t
	CHEST_XMAS_LOCATION_LEFT u
	CHEST_XMAS_LOCATION_RIGHT v
	CUTOUT_BLOCK_SHEET J
	DECORATED_POT_MATERIALS o
	DECORATED_POT_SHEET h
	DEFAULT_SHULKER_TEXTURE_LOCATION i
	ENDER_CHEST_LOCATION z
	HANGING_SIGN_MATERIALS l
	SHIELD_MATERIALS n
	SHIELD_SHEET d
	SHIELD_SHEET_TYPE D
	SHULKER_BOX_SHEET_TYPE A
	SHULKER_SHEET a
	SHULKER_TEXTURE_LOCATION j
	SIGN_MATERIALS k
	SIGN_SHEET e
	SIGN_SHEET_TYPE E
	SOLID_BLOCK_SHEET I
	TRANSLUCENT_CULL_BLOCK_SHEET L
	TRANSLUCENT_ITEM_CULL_BLOCK_SHEET K
	armorTrimsSheet (Z)Lnet/minecraft/client/renderer/RenderType; a
	bannerSheet ()Lnet/minecraft/client/renderer/RenderType; a
	bedSheet ()Lnet/minecraft/client/renderer/RenderType; c
	chestMaterial (Ljava/lang/String;)Lnet/minecraft/client/resources/model/Material; a
	chestSheet ()Lnet/minecraft/client/renderer/RenderType; g
	chooseMaterial (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/level/block/state/properties/ChestType;Z)Lnet/minecraft/client/resources/model/Material; a
	chooseMaterial (Lnet/minecraft/world/level/block/state/properties/ChestType;Lnet/minecraft/client/resources/model/Material;Lnet/minecraft/client/resources/model/Material;Lnet/minecraft/client/resources/model/Material;)Lnet/minecraft/client/resources/model/Material; a
	createBannerMaterial (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/client/resources/model/Material; d
	createDecoratedPotMaterial (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/client/resources/model/Material; f
	createHangingSignMaterial (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/resources/model/Material; d
	createShieldMaterial (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/client/resources/model/Material; e
	createSignMaterial (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/resources/model/Material; c
	cutoutBlockSheet ()Lnet/minecraft/client/renderer/RenderType; i
	getAllMaterials (Ljava/util/function/Consumer;)V a
	getBannerMaterial (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/client/resources/model/Material; a
	getDecoratedPotMaterial (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/client/resources/model/Material; c
	getHangingSignMaterial (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/resources/model/Material; b
	getShieldMaterial (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/client/resources/model/Material; b
	getSignMaterial (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/resources/model/Material; a
	hangingSignSheet ()Lnet/minecraft/client/renderer/RenderType; f
	shieldSheet ()Lnet/minecraft/client/renderer/RenderType; b
	shulkerBoxSheet ()Lnet/minecraft/client/renderer/RenderType; d
	signSheet ()Lnet/minecraft/client/renderer/RenderType; e
	solidBlockSheet ()Lnet/minecraft/client/renderer/RenderType; h
	translucentCullBlockSheet ()Lnet/minecraft/client/renderer/RenderType; k
	translucentItemSheet ()Lnet/minecraft/client/renderer/RenderType; j
net/minecraft/client/renderer/SpriteCoordinateExpander ftx
	delegate a
	sprite b
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V e
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V l
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
net/minecraft/client/renderer/ViewArea fty
	level b
	levelRenderer a
	sectionGridSizeX d
	sectionGridSizeY c
	sectionGridSizeZ e
	sections f
	viewDistance g
	createSections (Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher;)V a
	getLevelHeightAccessor ()Lnet/minecraft/world/level/LevelHeightAccessor; c
	getRenderSectionAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection; a
	getSectionIndex (III)I a
	getViewDistance ()I b
	releaseAllBuffers ()V a
	repositionCamera (DD)V a
	setDirty (IIIZ)V a
	setViewDistance (I)V a
net/minecraft/client/renderer/VirtualScreen ftz
	minecraft a
	screenManager b
	newWindow (Lcom/mojang/blaze3d/platform/DisplayData;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/blaze3d/platform/Window; a
net/minecraft/client/renderer/block/BlockModelShaper fua
	modelByStateCache a
	modelManager b
	getBlockModel (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/BakedModel; b
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; a
	getParticleIcon (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/String; a
	replaceCache (Ljava/util/Map;)V a
	statePropertiesToString (Ljava/util/Map;)Ljava/lang/String; b
	stateToModelLocation (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/ModelResourceLocation; a
	stateToModelLocation (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/ModelResourceLocation; c
net/minecraft/client/renderer/block/BlockRenderDispatcher fub
	blockColors f
	blockEntityRenderer c
	blockModelShaper a
	liquidBlockRenderer d
	modelRenderer b
	random e
	getBlockModel (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/BakedModel; a
	getBlockModelShaper ()Lnet/minecraft/client/renderer/block/BlockModelShaper; a
	getModelRenderer ()Lnet/minecraft/client/renderer/block/ModelBlockRenderer; b
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	renderBatched (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLnet/minecraft/util/RandomSource;)V a
	renderBreakingTexture (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderLiquid (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)V a
	renderSingleBlock (Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/block/LiquidBlockRenderer fuc
	MAX_FLUID_HEIGHT a
	lavaIcons b
	waterIcons c
	waterOverlay d
	addWeightedHeight ([FF)V a
	calculateAverageHeight (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/material/Fluid;FFFLnet/minecraft/core/BlockPos;)F a
	getHeight (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;)F a
	getHeight (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)F a
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	isFaceOccludedByNeighbor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;FLnet/minecraft/world/level/block/state/BlockState;)Z a
	isFaceOccludedBySelf (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	isFaceOccludedByState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/Direction;FLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isNeighborSameFluid (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)Z a
	setupSprites ()V a
	shouldRenderFace (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)Z a
	tesselate (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDFFFFFI)V a
net/minecraft/client/renderer/block/ModelBlockRenderer fud
	CACHE f
	CACHE_SIZE e
	DIRECTIONS c
	FACE_CUBIC a
	FACE_PARTIAL b
	blockColors d
	calculateShape (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;[ILnet/minecraft/core/Direction;[FLjava/util/BitSet;)V a
	clearCache ()V b
	enableCaching ()V a
	putQuadData (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;FFFFIIIII)V a
	renderModel (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/resources/model/BakedModel;FFFII)V a
	renderModelFaceAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;[FLjava/util/BitSet;Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace;I)V a
	renderModelFaceFlat (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;IIZLcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;Ljava/util/BitSet;)V a
	renderQuadList (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFLjava/util/List;II)V a
	tesselateBlock (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLnet/minecraft/util/RandomSource;JI)V a
	tesselateWithAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLnet/minecraft/util/RandomSource;JI)V b
	tesselateWithoutAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLnet/minecraft/util/RandomSource;JI)V c
net/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo fud$a
	$VALUES n
	BY_FACING m
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	corners g
	doNonCubicWeight h
	vert0Weights i
	vert1Weights j
	vert2Weights k
	vert3Weights l
	$values ()[Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo; a
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo; a
net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace fud$b
	brightness a
	lightmap b
	blend (IIII)I a
	blend (IIIIFFFF)I a
	calculate (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;[FLjava/util/BitSet;Z)V a
net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap fud$c
	$VALUES l
	BY_FACING k
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	vert0 g
	vert1 h
	vert2 i
	vert3 j
	$values ()[Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap; a
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap; a
net/minecraft/client/renderer/block/ModelBlockRenderer$Cache fud$d
	brightnessCache c
	colorCache b
	enabled a
	disable ()V b
	enable ()V a
	getLightColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)F b
net/minecraft/client/renderer/block/ModelBlockRenderer$SizeInfo fud$e
	$VALUES n
	DOWN a
	EAST f
	FLIP_DOWN g
	FLIP_EAST l
	FLIP_NORTH i
	FLIP_SOUTH j
	FLIP_UP h
	FLIP_WEST k
	NORTH c
	SOUTH d
	UP b
	WEST e
	shape m
	$values ()[Lnet/minecraft/client/renderer/block/ModelBlockRenderer$SizeInfo; a
net/minecraft/client/renderer/block/model/BakedQuad fue
	direction c
	shade e
	sprite d
	tintIndex b
	vertices a
	getDirection ()Lnet/minecraft/core/Direction; e
	getSprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getTintIndex ()I d
	getVertices ()[I b
	isShade ()Z f
	isTinted ()Z c
net/minecraft/client/renderer/block/model/BlockElement fuf
	DEFAULT_RESCALE f
	MAX_EXTENT h
	MIN_EXTENT g
	faces c
	from a
	rotation d
	shade e
	to b
	fillUvs ()V a
	uvsByFace (Lnet/minecraft/core/Direction;)[F a
net/minecraft/client/renderer/block/model/BlockElement$Deserializer fuf$a
	DEFAULT_SHADE a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockElement; a
	filterNullFromFaces (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; b
	getAngle (Lcom/google/gson/JsonObject;)F b
	getAxis (Lcom/google/gson/JsonObject;)Lnet/minecraft/core/Direction$Axis; c
	getFaces (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; a
	getFacing (Ljava/lang/String;)Lnet/minecraft/core/Direction; a
	getFrom (Lcom/google/gson/JsonObject;)Lorg/joml/Vector3f; e
	getRotation (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/BlockElementRotation; a
	getTo (Lcom/google/gson/JsonObject;)Lorg/joml/Vector3f; d
	getVector3f (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lorg/joml/Vector3f; a
net/minecraft/client/renderer/block/model/BlockElementFace fug
	NO_TINT a
	cullForDirection b
	texture d
	tintIndex c
	uv e
net/minecraft/client/renderer/block/model/BlockElementFace$Deserializer fug$a
	DEFAULT_TINT_INDEX a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockElementFace; a
	getCullFacing (Lcom/google/gson/JsonObject;)Lnet/minecraft/core/Direction; c
	getTexture (Lcom/google/gson/JsonObject;)Ljava/lang/String; b
	getTintIndex (Lcom/google/gson/JsonObject;)I a
net/minecraft/client/renderer/block/model/BlockElementRotation fuh
	angle c
	axis b
	origin a
	rescale d
	angle ()F c
	axis ()Lnet/minecraft/core/Direction$Axis; b
	origin ()Lorg/joml/Vector3f; a
	rescale ()Z d
net/minecraft/client/renderer/block/model/BlockFaceUV fui
	rotation b
	uvs a
	getReverseIndex (I)I c
	getShiftedIndex (I)I d
	getU (I)F a
	getV (I)F b
	setMissingUv ([F)V a
net/minecraft/client/renderer/block/model/BlockFaceUV$Deserializer fui$a
	DEFAULT_ROTATION a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockFaceUV; a
	getRotation (Lcom/google/gson/JsonObject;)I a
	getUVs (Lcom/google/gson/JsonObject;)[F b
net/minecraft/client/renderer/block/model/BlockModel fuj
	DEFAULT_AMBIENT_OCCLUSION j
	FACE_BAKERY h
	GSON a
	LOGGER g
	PARTICLE_TEXTURE_REFERENCE b
	REFERENCE_CHAR i
	elements k
	guiLight l
	hasAmbientOcclusion m
	name c
	overrides o
	parent e
	parentLocation f
	textureMap d
	transforms n
	bake (Lnet/minecraft/client/resources/model/ModelBaker;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	bake (Lnet/minecraft/client/resources/model/ModelBaker;Lnet/minecraft/client/renderer/block/model/BlockModel;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/resources/model/BakedModel; a
	bakeFace (Lnet/minecraft/client/renderer/block/model/BlockElement;Lnet/minecraft/client/renderer/block/model/BlockElementFace;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BakedQuad; a
	findTextureEntry (Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; d
	fromStream (Ljava/io/Reader;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	fromString (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getDependencies ()Ljava/util/Collection; f
	getElements ()Ljava/util/List; a
	getGuiLight ()Lnet/minecraft/client/renderer/block/model/BlockModel$GuiLight; c
	getItemOverrides (Lnet/minecraft/client/resources/model/ModelBaker;Lnet/minecraft/client/renderer/block/model/BlockModel;)Lnet/minecraft/client/renderer/block/model/ItemOverrides; a
	getMaterial (Ljava/lang/String;)Lnet/minecraft/client/resources/model/Material; c
	getOverrides ()Ljava/util/List; e
	getRootModel ()Lnet/minecraft/client/renderer/block/model/BlockModel; g
	getTransform (Lnet/minecraft/world/item/ItemDisplayContext;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; h
	hasAmbientOcclusion ()Z b
	hasTexture (Ljava/lang/String;)Z b
	isResolved ()Z d
	isTextureReference (Ljava/lang/String;)Z e
	resolveParents (Ljava/util/function/Function;)V a
net/minecraft/client/renderer/block/model/BlockModel$Deserializer fuj$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getAmbientOcclusion (Lcom/google/gson/JsonObject;)Ljava/lang/Boolean; a
	getElements (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; b
	getOverrides (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; a
	getParentName (Lcom/google/gson/JsonObject;)Ljava/lang/String; c
	getTextureMap (Lcom/google/gson/JsonObject;)Ljava/util/Map; b
	parseTextureLocationOrReference (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; a
net/minecraft/client/renderer/block/model/BlockModel$GuiLight fuj$b
	$VALUES d
	FRONT a
	SIDE b
	name c
	$values ()[Lnet/minecraft/client/renderer/block/model/BlockModel$GuiLight; b
	getByName (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/BlockModel$GuiLight; a
	lightLikeBlock ()Z a
net/minecraft/client/renderer/block/model/BlockModel$LoopException fuj$c
net/minecraft/client/renderer/block/model/BlockModelDefinition fuk
	multiPart b
	variants a
	fromJsonElement (Lnet/minecraft/client/renderer/block/model/BlockModelDefinition$Context;Lcom/google/gson/JsonElement;)Lnet/minecraft/client/renderer/block/model/BlockModelDefinition; a
	fromStream (Lnet/minecraft/client/renderer/block/model/BlockModelDefinition$Context;Ljava/io/Reader;)Lnet/minecraft/client/renderer/block/model/BlockModelDefinition; a
	getMultiPart ()Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; d
	getMultiVariants ()Ljava/util/Set; b
	getVariant (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/MultiVariant; b
	getVariants ()Ljava/util/Map; a
	hasVariant (Ljava/lang/String;)Z a
	isMultiPart ()Z c
net/minecraft/client/renderer/block/model/BlockModelDefinition$Context fuk$a
	definition b
	gson a
	getDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; a
	setDefinition (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/client/renderer/block/model/BlockModelDefinition$Deserializer fuk$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockModelDefinition; a
	getMultiPart (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; b
	getVariants (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; a
net/minecraft/client/renderer/block/model/BlockModelDefinition$MissingVariantException fuk$c
net/minecraft/client/renderer/block/model/FaceBakery ful
	COLOR_INDEX f
	RESCALE_22_5 d
	RESCALE_45 e
	UV_INDEX c
	VERTEX_COUNT b
	VERTEX_INT_SIZE a
	applyElementRotation (Lorg/joml/Vector3f;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;)V a
	applyModelRotation (Lorg/joml/Vector3f;Lcom/mojang/math/Transformation;)V a
	bakeQuad (Lorg/joml/Vector3f;Lorg/joml/Vector3f;Lnet/minecraft/client/renderer/block/model/BlockElementFace;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;ZLnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BakedQuad; a
	bakeVertex ([IILnet/minecraft/core/Direction;Lnet/minecraft/client/renderer/block/model/BlockFaceUV;[FLnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lcom/mojang/math/Transformation;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;Z)V a
	calculateFacing ([I)Lnet/minecraft/core/Direction; a
	fillVertex ([IILorg/joml/Vector3f;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/client/renderer/block/model/BlockFaceUV;)V a
	makeVertices (Lnet/minecraft/client/renderer/block/model/BlockFaceUV;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;[FLcom/mojang/math/Transformation;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;Z)[I a
	recalculateWinding ([ILnet/minecraft/core/Direction;)V a
	recomputeUVs (Lnet/minecraft/client/renderer/block/model/BlockFaceUV;Lnet/minecraft/core/Direction;Lcom/mojang/math/Transformation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BlockFaceUV; a
	rotateVertexBy (Lorg/joml/Vector3f;Lorg/joml/Vector3f;Lorg/joml/Matrix4f;Lorg/joml/Vector3f;)V a
	setupShape (Lorg/joml/Vector3f;Lorg/joml/Vector3f;)[F a
net/minecraft/client/renderer/block/model/ItemModelGenerator fum
	LAYERS a
	MAX_Z c
	MIN_Z b
	checkTransition (Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing;Ljava/util/List;Lnet/minecraft/client/renderer/texture/SpriteContents;IIIIIZ)V a
	createOrExpandSpan (Ljava/util/List;Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing;II)V a
	createSideElements (Lnet/minecraft/client/renderer/texture/SpriteContents;Ljava/lang/String;I)Ljava/util/List; a
	generateBlockModel (Ljava/util/function/Function;Lnet/minecraft/client/renderer/block/model/BlockModel;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getSpans (Lnet/minecraft/client/renderer/texture/SpriteContents;)Ljava/util/List; a
	isTransparent (Lnet/minecraft/client/renderer/texture/SpriteContents;IIIII)Z a
	processFrames (ILjava/lang/String;Lnet/minecraft/client/renderer/texture/SpriteContents;)Ljava/util/List; a
net/minecraft/client/renderer/block/model/ItemModelGenerator$Span fum$a
	anchor d
	facing a
	max c
	min b
	expand (I)V a
	getAnchor ()I d
	getFacing ()Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing; a
	getMax ()I c
	getMin ()I b
net/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing fum$b
	$VALUES h
	DOWN b
	LEFT c
	RIGHT d
	UP a
	direction e
	xOffset f
	yOffset g
	$values ()[Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing; e
	getDirection ()Lnet/minecraft/core/Direction; a
	getXOffset ()I b
	getYOffset ()I c
	isHorizontal ()Z d
net/minecraft/client/renderer/block/model/ItemOverride fun
	model a
	predicates b
	getModel ()Lnet/minecraft/resources/ResourceLocation; a
	getPredicates ()Ljava/util/stream/Stream; b
net/minecraft/client/renderer/block/model/ItemOverride$Deserializer fun$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemOverride; a
	getPredicates (Lcom/google/gson/JsonObject;)Ljava/util/List; a
net/minecraft/client/renderer/block/model/ItemOverride$Predicate fun$b
	property a
	value b
	getProperty ()Lnet/minecraft/resources/ResourceLocation; a
	getValue ()F b
net/minecraft/client/renderer/block/model/ItemOverrides fuo
	EMPTY a
	NO_OVERRIDE b
	overrides c
	properties d
	bakeModel (Lnet/minecraft/client/resources/model/ModelBaker;Lnet/minecraft/client/renderer/block/model/BlockModel;Lnet/minecraft/client/renderer/block/model/ItemOverride;)Lnet/minecraft/client/resources/model/BakedModel; a
	resolve (Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/entity/LivingEntity;I)Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/renderer/block/model/ItemOverrides$BakedOverride fuo$a
	matchers a
	model b
	test ([F)Z a
net/minecraft/client/renderer/block/model/ItemOverrides$PropertyMatcher fuo$b
	index a
	value b
net/minecraft/client/renderer/block/model/ItemTransform fup
	NO_TRANSFORM a
	rotation b
	scale d
	translation c
	apply (ZLcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/renderer/block/model/ItemTransform$Deserializer fup$a
	DEFAULT_ROTATION c
	DEFAULT_SCALE e
	DEFAULT_TRANSLATION d
	MAX_SCALE b
	MAX_TRANSLATION a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	getVector3f (Lcom/google/gson/JsonObject;Ljava/lang/String;Lorg/joml/Vector3f;)Lorg/joml/Vector3f; a
net/minecraft/client/renderer/block/model/ItemTransforms fuq
	NO_TRANSFORMS a
	firstPersonLeftHand d
	firstPersonRightHand e
	fixed i
	ground h
	gui g
	head f
	thirdPersonLeftHand b
	thirdPersonRightHand c
	getTransform (Lnet/minecraft/world/item/ItemDisplayContext;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	hasTransform (Lnet/minecraft/world/item/ItemDisplayContext;)Z b
net/minecraft/client/renderer/block/model/ItemTransforms$Deserializer fuq$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemTransforms; a
	getTransform (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;Lnet/minecraft/world/item/ItemDisplayContext;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
net/minecraft/client/renderer/block/model/MultiVariant fur
	variants a
	bake (Lnet/minecraft/client/resources/model/ModelBaker;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	getVariants ()Ljava/util/List; a
	resolveParents (Ljava/util/function/Function;)V a
net/minecraft/client/renderer/block/model/MultiVariant$Deserializer fur$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/MultiVariant; a
net/minecraft/client/renderer/block/model/Variant fus
	modelLocation a
	rotation b
	uvLock c
	weight d
	getModelLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getRotation ()Lcom/mojang/math/Transformation; b
	getWeight ()I d
	isUvLocked ()Z c
net/minecraft/client/renderer/block/model/Variant$Deserializer fus$a
	DEFAULT_UVLOCK a
	DEFAULT_WEIGHT b
	DEFAULT_X_ROTATION c
	DEFAULT_Y_ROTATION d
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/Variant; a
	getBlockRotation (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/model/BlockModelRotation; a
	getModel (Lcom/google/gson/JsonObject;)Lnet/minecraft/resources/ResourceLocation; b
	getUvLock (Lcom/google/gson/JsonObject;)Z d
	getWeight (Lcom/google/gson/JsonObject;)I c
net/minecraft/client/renderer/block/model/multipart/AndCondition fut
	TOKEN a
	conditions d
net/minecraft/client/renderer/block/model/multipart/Condition fuu
	FALSE c
	TRUE b
net/minecraft/client/renderer/block/model/multipart/KeyValueCondition fuv
	PIPE_SPLITTER a
	key d
	value e
	getBlockStatePredicate (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Ljava/util/function/Predicate; a
net/minecraft/client/renderer/block/model/multipart/MultiPart fuw
	definition a
	selectors b
	bake (Lnet/minecraft/client/resources/model/ModelBaker;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	getMultiVariants ()Ljava/util/Set; b
	getSelectors ()Ljava/util/List; a
	resolveParents (Ljava/util/function/Function;)V a
net/minecraft/client/renderer/block/model/multipart/MultiPart$Deserializer fuw$a
	context a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; a
	getSelectors (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonArray;)Ljava/util/List; a
net/minecraft/client/renderer/block/model/multipart/OrCondition fux
	TOKEN a
	conditions d
net/minecraft/client/renderer/block/model/multipart/Selector fuy
	condition a
	variant b
	getPredicate (Lnet/minecraft/world/level/block/state/StateDefinition;)Ljava/util/function/Predicate; a
	getVariant ()Lnet/minecraft/client/renderer/block/model/MultiVariant; a
net/minecraft/client/renderer/block/model/multipart/Selector$Deserializer fuy$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/multipart/Selector; a
	getCondition (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; a
	getKeyValueCondition (Ljava/util/Map$Entry;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; a
	getSelector (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; b
net/minecraft/client/renderer/blockentity/BannerRenderer fvc
	BANNER_HEIGHT c
	BANNER_WIDTH b
	BAR f
	FLAG a
	MAX_PATTERNS d
	POLE e
	bar i
	flag g
	pole h
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	render (Lnet/minecraft/world/level/block/entity/BannerBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderPatterns (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/resources/model/Material;ZLjava/util/List;)V a
	renderPatterns (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/resources/model/Material;ZLjava/util/List;Z)V a
net/minecraft/client/renderer/blockentity/BeaconRenderer fvd
	BEAM_LOCATION a
	MAX_RENDER_Y b
	addVertex (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIFFFF)V a
	getViewDistance ()I aQ_
	render (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderBeaconBeam (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;FJII[F)V a
	renderBeaconBeam (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/resources/ResourceLocation;FFJII[FFF)V a
	renderPart (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIIFFFFFFFFFFFF)V a
	renderQuad (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIIFFFFFFFF)V a
	shouldRender (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;Lnet/minecraft/world/phys/Vec3;)Z a
	shouldRender (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/phys/Vec3;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
net/minecraft/client/renderer/blockentity/BedRenderer fve
	footRoot b
	headRoot a
	createFootLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	createHeadLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	render (Lnet/minecraft/world/level/block/entity/BedBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderPiece (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/Material;IIZ)V a
net/minecraft/client/renderer/blockentity/BellRenderer fvf
	BELL_BODY b
	BELL_RESOURCE_LOCATION a
	bellBody c
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	render (Lnet/minecraft/world/level/block/entity/BellBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher fvg
	blockRenderDispatcher g
	camera b
	cameraHitResult c
	entityModelSet f
	entityRenderer i
	font e
	itemRenderer h
	level a
	renderers d
	getRenderer (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderer; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	prepare (Lnet/minecraft/world/level/Level;Lnet/minecraft/client/Camera;Lnet/minecraft/world/phys/HitResult;)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	renderItem (Lnet/minecraft/world/level/block/entity/BlockEntity;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)Z a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setupAndRender (Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderer;Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	tryRender (Lnet/minecraft/world/level/block/entity/BlockEntity;Ljava/lang/Runnable;)V a
net/minecraft/client/renderer/blockentity/BlockEntityRenderer fvh
	getViewDistance ()I aQ_
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	shouldRender (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/phys/Vec3;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
net/minecraft/client/renderer/blockentity/BlockEntityRendererProvider fvi
net/minecraft/client/renderer/blockentity/BlockEntityRendererProvider$Context fvi$a
	blockEntityRenderDispatcher a
	blockRenderDispatcher b
	entityRenderer d
	font f
	itemRenderer c
	modelSet e
	bakeLayer (Lnet/minecraft/client/model/geom/ModelLayerLocation;)Lnet/minecraft/client/model/geom/ModelPart; a
	getBlockEntityRenderDispatcher ()Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher; a
	getBlockRenderDispatcher ()Lnet/minecraft/client/renderer/block/BlockRenderDispatcher; b
	getEntityRenderer ()Lnet/minecraft/client/renderer/entity/EntityRenderDispatcher; c
	getFont ()Lnet/minecraft/client/gui/Font; f
	getItemRenderer ()Lnet/minecraft/client/renderer/entity/ItemRenderer; d
	getModelSet ()Lnet/minecraft/client/model/geom/EntityModelSet; e
net/minecraft/client/renderer/blockentity/BlockEntityRenderers fvj
	PROVIDERS a
	createEntityRenderers (Lnet/minecraft/client/renderer/blockentity/BlockEntityRendererProvider$Context;)Ljava/util/Map; a
	register (Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/client/renderer/blockentity/BlockEntityRendererProvider;)V a
net/minecraft/client/renderer/blockentity/BrightnessCombiner fvk
	acceptDouble (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; a
	acceptDouble (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
	acceptNone ()Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
	acceptNone ()Ljava/lang/Object; b
	acceptSingle (Ljava/lang/Object;)Ljava/lang/Object; a
	acceptSingle (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
net/minecraft/client/renderer/blockentity/BrushableBlockRenderer fvl
	itemRenderer a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BrushableBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	translations (Lnet/minecraft/core/Direction;I)[F a
net/minecraft/client/renderer/blockentity/CampfireRenderer fvm
	SIZE a
	itemRenderer b
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/ChestRenderer fvn
	BOTTOM a
	LID b
	LOCK c
	bottom e
	doubleLeftBottom h
	doubleLeftLid g
	doubleLeftLock i
	doubleRightBottom k
	doubleRightLid j
	doubleRightLock l
	lid d
	lock f
	xmasTextures m
	createDoubleBodyLeftLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; d
	createDoubleBodyRightLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	createSingleBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;FII)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/ConduitRenderer fvo
	ACTIVE_SHELL_TEXTURE b
	CLOSED_EYE_TEXTURE f
	OPEN_EYE_TEXTURE e
	SHELL_TEXTURE a
	VERTICAL_WIND_TEXTURE d
	WIND_TEXTURE c
	cage j
	eye g
	renderer k
	shell i
	wind h
	createCageLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; e
	createEyeLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createShellLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; d
	createWindLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/DecoratedPotRenderer fvp
	BACK c
	BOTTOM g
	FRONT b
	LEFT d
	NECK a
	RIGHT e
	TOP f
	WOBBLE_AMPLITUDE p
	backSide j
	baseMaterial o
	bottom n
	frontSide i
	leftSide k
	neck h
	rightSide l
	top m
	createBaseLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createSidesLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	getMaterial (Lnet/minecraft/world/item/Item;)Lnet/minecraft/client/resources/model/Material; a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/DecoratedPotBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderSide (Lnet/minecraft/client/model/geom/ModelPart;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/resources/model/Material;)V a
net/minecraft/client/renderer/blockentity/EnchantTableRenderer fvq
	BOOK_LOCATION a
	bookModel b
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/EnchantmentTableBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/HangingSignRenderer fvr
	BOARD h
	CHAIN_L_1 d
	CHAIN_L_2 e
	CHAIN_R_1 f
	CHAIN_R_2 g
	MODEL_RENDER_SCALE i
	NORMAL_CHAINS c
	PLANK a
	TEXT_OFFSET k
	TEXT_RENDER_SCALE j
	V_CHAINS b
	hangingSignModels l
	createHangingSignLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; e
	getSignMaterial (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/resources/model/Material; a
	getSignModelRenderScale ()F b
	getSignTextRenderScale ()F c
	getTextOffset ()Lnet/minecraft/world/phys/Vec3; d
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SignBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderSignModel (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/client/model/Model;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	translateSign (Lcom/mojang/blaze3d/vertex/PoseStack;FLnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/client/renderer/blockentity/HangingSignRenderer$HangingSignModel fvr$a
	normalChains d
	plank b
	root a
	vChains c
	evaluateVisibleParts (Lnet/minecraft/world/level/block/state/BlockState;)V a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/renderer/blockentity/LecternRenderer fvs
	bookModel a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/LecternBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/PistonHeadRenderer fvt
	blockRenderer a
	getViewDistance ()I aQ_
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/Level;ZI)V a
net/minecraft/client/renderer/blockentity/ShulkerBoxRenderer fvu
	model a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/SignRenderer fvv
	BLACK_TEXT_OUTLINE_COLOR b
	OUTLINE_RENDER_DISTANCE c
	RENDER_SCALE d
	STICK a
	TEXT_OFFSET e
	font g
	signModels f
	createSignLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; f
	createSignModel (Lnet/minecraft/client/model/geom/EntityModelSet;Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/renderer/blockentity/SignRenderer$SignModel; a
	getDarkColor (Lnet/minecraft/world/level/block/entity/SignText;)I a
	getSignMaterial (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/resources/model/Material; a
	getSignModelRenderScale ()F b
	getSignTextRenderScale ()F c
	getTextOffset ()Lnet/minecraft/world/phys/Vec3; d
	isOutlineVisible (Lnet/minecraft/core/BlockPos;I)Z a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SignBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderSign (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/world/level/block/state/properties/WoodType;Lnet/minecraft/client/model/Model;)V a
	renderSignModel (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/client/model/Model;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderSignText (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/SignText;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IIIZ)V a
	renderSignWithText (Lnet/minecraft/world/level/block/entity/SignBlockEntity;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/SignBlock;Lnet/minecraft/world/level/block/state/properties/WoodType;Lnet/minecraft/client/model/Model;)V a
	translateSign (Lcom/mojang/blaze3d/vertex/PoseStack;FLnet/minecraft/world/level/block/state/BlockState;)V a
	translateSignText (Lcom/mojang/blaze3d/vertex/PoseStack;ZLnet/minecraft/world/phys/Vec3;)V a
net/minecraft/client/renderer/blockentity/SignRenderer$SignModel fvv$a
	root a
	stick b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/renderer/blockentity/SkullBlockRenderer fvw
	SKIN_BY_TYPE b
	modelByType a
	createSkullRenderers (Lnet/minecraft/client/model/geom/EntityModelSet;)Ljava/util/Map; a
	getRenderType (Lnet/minecraft/world/level/block/SkullBlock$Type;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/client/renderer/RenderType; a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SkullBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderSkull (Lnet/minecraft/core/Direction;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/model/SkullModelBase;Lnet/minecraft/client/renderer/RenderType;)V a
net/minecraft/client/renderer/blockentity/SpawnerRenderer fvx
	entityRenderer a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SpawnerBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderEntityInSpawner (FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/entity/EntityRenderDispatcher;DD)V a
net/minecraft/client/renderer/blockentity/StructureBlockRenderer fvy
	getViewDistance ()I aQ_
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderInvisibleBlocks (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Z a
net/minecraft/client/renderer/blockentity/TheEndGatewayRenderer fvz
	BEAM_LOCATION c
	getOffsetDown ()F c
	getOffsetUp ()F b
	getViewDistance ()I aQ_
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderType ()Lnet/minecraft/client/renderer/RenderType; d
net/minecraft/client/renderer/blockentity/TheEndPortalRenderer fwa
	END_PORTAL_LOCATION b
	END_SKY_LOCATION a
	getOffsetDown ()F c
	getOffsetUp ()F b
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderCube (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;Lorg/joml/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderFace (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;Lorg/joml/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFFFFLnet/minecraft/core/Direction;)V a
	renderType ()Lnet/minecraft/client/renderer/RenderType; d
net/minecraft/client/renderer/blockentity/TrialSpawnerRenderer fwb
	entityRenderer a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TrialSpawnerBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/chunk/RenderChunk fwd
	blockEntities a
	debug c
	sections b
	wrapped d
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
net/minecraft/client/renderer/chunk/RenderChunkRegion fwe
	centerX c
	centerZ d
	chunks a
	level b
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getHeight ()I K_
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; z_
	getMinBuildHeight ()I J_
	getShade (Lnet/minecraft/core/Direction;Z)F a
net/minecraft/client/renderer/chunk/RenderRegionCache fwf
	chunkInfoCache a
	createRegion (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/client/renderer/chunk/RenderChunkRegion; a
	isAllEmpty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II[[Lnet/minecraft/client/renderer/chunk/RenderRegionCache$ChunkInfo;)Z a
net/minecraft/client/renderer/chunk/RenderRegionCache$ChunkInfo fwf$a
	chunk a
	renderChunk b
	chunk ()Lnet/minecraft/world/level/chunk/LevelChunk; a
	renderChunk ()Lnet/minecraft/client/renderer/chunk/RenderChunk; b
net/minecraft/client/renderer/chunk/SectionRenderDispatcher fwg
	MAX_HIGH_PRIORITY_QUOTA a
	bufferPool g
	camera n
	closed i
	executor k
	fixedBuffers f
	highPriorityQuota d
	level l
	mailbox j
	renderer m
	toBatchCount h
	toBatchHighPriority b
	toBatchLowPriority c
	toUpload e
	blockUntilClear ()V g
	clearBatchQueue ()V l
	dispose ()V i
	getCameraPosition ()Lnet/minecraft/world/phys/Vec3; e
	getFreeBufferCount ()I d
	getStats ()Ljava/lang/String; a
	getToBatchCount ()I b
	getToUpload ()I c
	isQueueEmpty ()Z h
	pollTask ()Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection$CompileTask; k
	rebuildSectionSync (Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection;Lnet/minecraft/client/renderer/chunk/RenderRegionCache;)V a
	runTask ()V j
	schedule (Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection$CompileTask;)V a
	setCamera (Lnet/minecraft/world/phys/Vec3;)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	uploadAllPendingUploads ()V f
	uploadSectionLayer (Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer;Lcom/mojang/blaze3d/vertex/VertexBuffer;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/renderer/chunk/SectionRenderDispatcher$CompiledSection fwg$a
	UNCOMPILED a
	hasBlocks b
	renderableBlockEntities c
	transparencyState e
	visibilitySet d
	facesCanSeeEachother (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Z a
	getRenderableBlockEntities ()Ljava/util/List; b
	hasNoRenderableLayers ()Z a
	isEmpty (Lnet/minecraft/client/renderer/RenderType;)Z a
net/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection fwg$b
	SIZE a
	bb j
	buffers i
	compiled c
	dirty k
	globalBlockEntities h
	index b
	initialCompilationCancelCount e
	lastRebuildTask f
	lastResortTransparencyTask g
	origin l
	playerChanged n
	relativeOrigins m
	beginLayer (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V a
	cancelTasks ()Z j
	compileSync (Lnet/minecraft/client/renderer/chunk/RenderRegionCache;)V b
	createCompileTask (Lnet/minecraft/client/renderer/chunk/RenderRegionCache;)Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection$CompileTask; a
	doesChunkExistAt (Lnet/minecraft/core/BlockPos;)Z a
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; b
	getBuffer (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/VertexBuffer; a
	getCompiled ()Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher$CompiledSection; d
	getDistToPlayerSqr ()D c
	getOrigin ()Lnet/minecraft/core/BlockPos; f
	getRelativeOrigin (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos; a
	hasAllNeighbors ()Z a
	isAxisAlignedWith (III)Z b
	isDirty ()Z h
	isDirtyFromPlayer ()Z i
	rebuildSectionAsync (Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher;Lnet/minecraft/client/renderer/chunk/RenderRegionCache;)V a
	releaseBuffers ()V e
	reset ()V k
	resortTransparency (Lnet/minecraft/client/renderer/RenderType;Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher;)Z a
	setDirty (Z)V a
	setNotDirty ()V g
	setOrigin (III)V a
	updateGlobalBlockEntities (Ljava/util/Collection;)V a
net/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection$CompileTask fwg$b$a
	distAtCreation a
	isCancelled b
	isHighPriority c
	cancel ()V a
	compareTo (Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection$CompileTask;)I a
	doTask (Lnet/minecraft/client/renderer/SectionBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
	name ()Ljava/lang/String; b
net/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection$RebuildTask fwg$b$b
	region e
	cancel ()V a
	compile (FFFLnet/minecraft/client/renderer/SectionBufferBuilderPack;)Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection$RebuildTask$CompileResults; a
	doTask (Lnet/minecraft/client/renderer/SectionBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
	handleBlockEntity (Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection$RebuildTask$CompileResults;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	name ()Ljava/lang/String; b
net/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection$RebuildTask$CompileResults fwg$b$b$a
	blockEntities b
	globalBlockEntities a
	renderedLayers c
	transparencyState e
	visibilitySet d
net/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection$ResortTransparencyTask fwg$b$c
	compiledSection f
	cancel ()V a
	doTask (Lnet/minecraft/client/renderer/SectionBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
	name ()Ljava/lang/String; b
net/minecraft/client/renderer/chunk/SectionRenderDispatcher$SectionTaskResult fwg$c
	$VALUES c
	CANCELLED b
	SUCCESSFUL a
	$values ()[Lnet/minecraft/client/renderer/chunk/SectionRenderDispatcher$SectionTaskResult; a
net/minecraft/client/renderer/chunk/VisGraph fwh
	DIRECTIONS l
	DX h
	DY j
	DZ i
	INDEX_OF_EDGES n
	INVALID_INDEX k
	LEN b
	MASK c
	SIZE d
	SIZE_IN_BITS a
	X_SHIFT e
	Y_SHIFT g
	Z_SHIFT f
	bitSet m
	empty o
	addEdges (ILjava/util/Set;)V a
	floodFill (I)Ljava/util/Set; a
	getIndex (III)I a
	getIndex (Lnet/minecraft/core/BlockPos;)I b
	getNeighborIndexAtFace (ILnet/minecraft/core/Direction;)I a
	resolve ()Lnet/minecraft/client/renderer/chunk/VisibilitySet; a
	setOpaque (Lnet/minecraft/core/BlockPos;)V a
net/minecraft/client/renderer/chunk/VisibilitySet fwi
	FACINGS a
	data b
	add (Ljava/util/Set;)V a
	set (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Z)V a
	setAll (Z)V a
	visibilityBetween (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Z a
net/minecraft/client/renderer/culling/Frustum fwk
	OFFSET_STEP a
	camX e
	camY f
	camZ g
	intersection b
	matrix c
	viewVector d
	calculateFrustum (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;)V a
	cubeInFrustum (DDDDDD)Z a
	isVisible (Lnet/minecraft/world/phys/AABB;)Z a
	offsetToFullyIncludeCameraCube (I)Lnet/minecraft/client/renderer/culling/Frustum; a
	prepare (DDD)V a
net/minecraft/client/renderer/debug/BeeDebugRenderer fwm
	GRAY x
	GREEN w
	HIVE_TIMEOUT r
	MAX_RENDER_DIST_FOR_BEE_OVERLAY p
	MAX_RENDER_DIST_FOR_HIVE_OVERLAY o
	MAX_TARGETING_DIST q
	ORANGE v
	PINK y
	RED z
	SHOW_BLACKLISTS n
	SHOW_FLOWER_POS_FOR_ALL_BEES d
	SHOW_FLOWER_POS_FOR_SELECTED_BEE j
	SHOW_GOAL_FOR_ALL_BEES a
	SHOW_GOAL_FOR_SELECTED_BEE g
	SHOW_HIVE_FOR_ALL_BEES c
	SHOW_HIVE_FOR_SELECTED_BEE i
	SHOW_HIVE_MEMBERS m
	SHOW_NAME_FOR_ALL_BEES b
	SHOW_NAME_FOR_SELECTED_BEE h
	SHOW_PATH_FOR_ALL_BEES f
	SHOW_PATH_FOR_SELECTED_BEE l
	SHOW_TRAVEL_TICKS_FOR_ALL_BEES e
	SHOW_TRAVEL_TICKS_FOR_SELECTED_BEE k
	TEXT_SCALE s
	WHITE t
	YELLOW u
	beeInfosPerEntity C
	hives B
	lastLookedAtUuid D
	minecraft A
	addOrUpdateBeeInfo (Lnet/minecraft/network/protocol/common/custom/BeeDebugPayload$BeeInfo;)V a
	addOrUpdateHiveInfo (Lnet/minecraft/network/protocol/common/custom/HiveDebugPayload$HiveInfo;J)V a
	clear ()V a
	clearRemovedBees ()V b
	clearRemovedHives ()V c
	createHiveBlacklistMap ()Ljava/util/Map; d
	doRender (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	getBeeUuidsAsString (Ljava/util/Collection;)Ljava/lang/String; a
	getCamera ()Lnet/minecraft/client/Camera; e
	getGhostHives ()Ljava/util/Map; f
	getHiveMemberNames (Lnet/minecraft/network/protocol/common/custom/HiveDebugPayload$HiveInfo;)Ljava/util/Set; a
	getHiveMembers (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; a
	getPosDescription (Lnet/minecraft/network/protocol/common/custom/BeeDebugPayload$BeeInfo;Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	highlightHive (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/BlockPos;)V a
	isBeeSelected (Lnet/minecraft/network/protocol/common/custom/BeeDebugPayload$BeeInfo;)Z b
	isPlayerCloseEnoughToMob (Lnet/minecraft/network/protocol/common/custom/BeeDebugPayload$BeeInfo;)Z c
	removeBeeInfo (I)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderBeeInfo (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/network/protocol/common/custom/BeeDebugPayload$BeeInfo;)V b
	renderFlowerInfos (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V b
	renderGhostHive (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V a
	renderHiveInfo (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/network/protocol/common/custom/HiveDebugPayload$HiveInfo;Ljava/util/Collection;)V a
	renderPath (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/network/protocol/common/custom/BeeDebugPayload$BeeInfo;)V a
	renderTextOverHive (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/lang/String;Lnet/minecraft/network/protocol/common/custom/HiveDebugPayload$HiveInfo;II)V a
	renderTextOverMob (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/Position;ILjava/lang/String;IF)V a
	renderTextOverPos (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/lang/String;Lnet/minecraft/core/BlockPos;II)V a
	updateLastLookedAtUuid ()V g
net/minecraft/client/renderer/debug/BeeDebugRenderer$HiveDebugInfo fwm$a
	info a
	lastSeen b
	info ()Lnet/minecraft/network/protocol/common/custom/HiveDebugPayload$HiveInfo; a
	lastSeen ()J b
net/minecraft/client/renderer/debug/BrainDebugRenderer fwn
	CYAN D
	GRAY F
	GREEN E
	LOGGER a
	MAX_RENDER_DIST_FOR_BRAIN_INFO x
	MAX_RENDER_DIST_FOR_POI_INFO y
	MAX_TARGETING_DIST z
	ORANGE I
	PINK G
	RED H
	SHOW_ACTIVITIES_FOR_ALL e
	SHOW_ACTIVITIES_FOR_SELECTED o
	SHOW_ANGER_LEVEL_FOR_ALL k
	SHOW_ANGER_LEVEL_FOR_SELECTED v
	SHOW_BEHAVIORS_FOR_ALL d
	SHOW_BEHAVIORS_FOR_SELECTED n
	SHOW_GOSSIPS_FOR_ALL g
	SHOW_GOSSIPS_FOR_SELECTED r
	SHOW_HEALTH_FOR_ALL i
	SHOW_HEALTH_FOR_SELECTED t
	SHOW_INVENTORY_FOR_ALL f
	SHOW_INVENTORY_FOR_SELECTED q
	SHOW_MEMORIES_FOR_SELECTED p
	SHOW_NAME_FOR_ALL b
	SHOW_NAME_FOR_SELECTED l
	SHOW_PATH_FOR_ALL h
	SHOW_PATH_FOR_SELECTED s
	SHOW_POI_INFO w
	SHOW_PROFESSION_FOR_ALL c
	SHOW_PROFESSION_FOR_SELECTED m
	SHOW_WANTS_GOLEM_FOR_ALL j
	SHOW_WANTS_GOLEM_FOR_SELECTED u
	TEXT_SCALE A
	WHITE B
	YELLOW C
	brainDumpsPerEntity L
	lastLookedAtUuid M
	minecraft J
	pois K
	addOrUpdateBrainDump (Lnet/minecraft/network/protocol/common/custom/BrainDebugPayload$BrainDump;)V a
	addPoi (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)V a
	clear ()V a
	clearRemovedEntities ()V b
	doRender (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V b
	getGhostPois ()Ljava/util/Map; c
	getPotentialTicketHolderNames (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)Ljava/util/Set; c
	getPotentialTicketHolders (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; c
	getTicketHolderNames (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)Ljava/util/Set; b
	getTicketHolders (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; b
	highlightPoi (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/BlockPos;)V a
	isMobSelected (Lnet/minecraft/network/protocol/common/custom/BrainDebugPayload$BrainDump;)Z b
	isPlayerCloseEnoughToMob (Lnet/minecraft/network/protocol/common/custom/BrainDebugPayload$BrainDump;)Z c
	removeBrainDump (I)V a
	removePoi (Lnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderBrainInfo (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/network/protocol/common/custom/BrainDebugPayload$BrainDump;DDD)V b
	renderGhostPoi (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V a
	renderPath (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/network/protocol/common/custom/BrainDebugPayload$BrainDump;DDD)V a
	renderPoiInfo (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)V a
	renderTextOverMob (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/Position;ILjava/lang/String;IF)V a
	renderTextOverPoi (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/lang/String;Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;II)V a
	renderTextOverPos (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/lang/String;Lnet/minecraft/core/BlockPos;II)V a
	setFreeTicketCount (Lnet/minecraft/core/BlockPos;I)V a
	updateLastLookedAtUuid ()V d
net/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo fwn$a
	freeTicketCount c
	pos a
	type b
net/minecraft/client/renderer/debug/BreezeDebugRenderer fwo
	CIRCLE_VERTICES f
	INNER_CIRCLE_COLOR c
	JUMP_TARGET_LINE_COLOR a
	MIDDLE_CIRCLE_COLOR d
	OUTER_CIRCLE_COLOR e
	SEGMENT_SIZE_RADIANS g
	TARGET_LINE_COLOR b
	minecraft h
	perEntity i
	add (Lnet/minecraft/network/protocol/common/custom/BreezeDebugPayload$BreezeInfo;)V a
	clear ()V a
	drawCircle (Lorg/joml/Matrix4f;DDDLcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/Vec3;FI)V a
	drawCircleVertex (ILorg/joml/Matrix4f;DDDLcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/Vec3;FI)V a
	drawLine (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDDLnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;I)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/ChunkBorderRenderer fwp
	CELL_BORDER b
	YELLOW c
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/ChunkDebugRenderer fwq
	data d
	lastUpdateTime b
	minecraft a
	radius c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/ChunkDebugRenderer$ChunkData fwq$a
	clientData b
	serverData c
net/minecraft/client/renderer/debug/CollisionBoxRenderer fwr
	lastUpdateTime b
	minecraft a
	shapes c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/DebugRenderer fws
	beeDebugRenderer o
	brainDebugRenderer m
	breezeDebugRenderer u
	chunkBorderRenderer c
	chunkRenderer l
	collisionBoxRenderer e
	gameEventListenerRenderer s
	gameTestDebugRenderer r
	goalSelectorRenderer q
	heightMapRenderer d
	lightDebugRenderer i
	neighborsUpdateRenderer g
	pathfindingRenderer a
	raidDebugRenderer p
	renderChunkborder v
	skyLightSectionDebugRenderer t
	solidFaceRenderer k
	structureRenderer h
	supportBlockRenderer f
	villageSectionsDebugRenderer n
	waterDebugRenderer b
	worldGenAttemptRenderer j
	clear ()V a
	getTargetedEntity (Lnet/minecraft/world/entity/Entity;I)Ljava/util/Optional; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;DDD)V a
	renderFilledBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDDDDDFFFF)V a
	renderFilledBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/BlockPos;FFFFF)V a
	renderFilledBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;FFFF)V a
	renderFilledBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/phys/AABB;FFFF)V a
	renderFilledUnitCube (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/BlockPos;FFFF)V a
	renderFloatingText (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/lang/String;DDDI)V a
	renderFloatingText (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/lang/String;DDDIF)V a
	renderFloatingText (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/lang/String;DDDIFZFZ)V a
	renderFloatingText (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/lang/String;IIII)V a
	switchRenderChunkborder ()Z b
net/minecraft/client/renderer/debug/DebugRenderer$SimpleDebugRenderer fws$a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/GameEventListenerRenderer fwt
	BOX_HEIGHT c
	LISTENER_RENDER_DIST b
	minecraft a
	trackedGameEvents d
	trackedListeners e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderFilledBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/phys/AABB;FFFF)V a
	trackGameEvent (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/phys/Vec3;)V a
	trackListener (Lnet/minecraft/world/level/gameevent/PositionSource;I)V a
net/minecraft/client/renderer/debug/GameEventListenerRenderer$TrackedGameEvent fwt$a
	gameEvent b
	position c
	timeStamp a
	gameEvent ()Lnet/minecraft/resources/ResourceKey; c
	isExpired ()Z a
	position ()Lnet/minecraft/world/phys/Vec3; d
	timeStamp ()J b
net/minecraft/client/renderer/debug/GameEventListenerRenderer$TrackedListener fwt$b
	listenerRange b
	listenerSource a
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	getPosition (Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	handleGameEvent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Lnet/minecraft/world/phys/Vec3;)Z a
	isExpired (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;)Z a
net/minecraft/client/renderer/debug/GameTestDebugRenderer fwu
	PADDING a
	markers b
	addMarker (Lnet/minecraft/core/BlockPos;ILjava/lang/String;I)V a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderMarker (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker;)V a
net/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker fwu$a
	color a
	removeAtTime c
	text b
	getA ()F d
	getB ()F c
	getG ()F b
	getR ()F a
net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer fwv
	MAX_RENDER_DIST a
	goalSelectors c
	minecraft b
	addGoalSelector (ILnet/minecraft/core/BlockPos;Ljava/util/List;)V a
	clear ()V a
	removeGoalSelector (I)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer$EntityGoalInfo fwv$a
	entityPos a
	goals b
	entityPos ()Lnet/minecraft/core/BlockPos; a
	goals ()Ljava/util/List; b
net/minecraft/client/renderer/debug/HeightMapRenderer fww
	BOX_HEIGHT c
	CHUNK_DIST b
	minecraft a
	getColor (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lorg/joml/Vector3f; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/LightDebugRenderer fwx
	MAX_RENDER_DIST b
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/LightSectionDebugRenderer fwy
	LIGHT_AND_BLOCKS_COLOR c
	LIGHT_ONLY_COLOR d
	RADIUS b
	REFRESH_INTERVAL a
	data h
	lastUpdateTime g
	lightLayer f
	minecraft e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderEdge (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDIIIIIILorg/joml/Vector4f;)V a
	renderEdges (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/core/SectionPos;Lnet/minecraft/client/renderer/MultiBufferSource;DDDLorg/joml/Vector4f;)V a
	renderFace (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/core/Direction;DDDIIILorg/joml/Vector4f;)V a
	renderFaces (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/core/SectionPos;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDLorg/joml/Vector4f;)V a
net/minecraft/client/renderer/debug/LightSectionDebugRenderer$SectionData fwy$a
	lightAndBlocksShape a
	lightShape b
	minPos c
net/minecraft/client/renderer/debug/NeighborsUpdateRenderer fwz
	lastUpdate b
	minecraft a
	addUpdate (JLnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/PathfindingRenderer fxa
	MAX_RENDER_DIST e
	SHOW_GROUND_LABELS j
	SHOW_OPEN_CLOSED f
	SHOW_OPEN_CLOSED_COST_MALUS g
	SHOW_OPEN_CLOSED_NODE_TYPE_WITH_BOX i
	SHOW_OPEN_CLOSED_NODE_TYPE_WITH_TEXT h
	TEXT_SCALE k
	TIMEOUT d
	creationMap c
	pathMap a
	pathMaxDist b
	addPath (ILnet/minecraft/world/level/pathfinder/Path;F)V a
	distanceToCamera (Lnet/minecraft/core/BlockPos;DDD)F a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderPath (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/pathfinder/Path;FZZDDD)V a
	renderPathLine (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/pathfinder/Path;DDD)V a
net/minecraft/client/renderer/debug/RaidDebugRenderer fxb
	MAX_RENDER_DIST a
	TEXT_SCALE b
	minecraft c
	raidCenters d
	getCamera ()Lnet/minecraft/client/Camera; b
	highlightRaidCenter (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderTextOverBlock (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/lang/String;Lnet/minecraft/core/BlockPos;I)V a
	setRaidCenters (Ljava/util/Collection;)V a
net/minecraft/client/renderer/debug/SolidFaceRenderer fxc
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/StructureRenderer fxd
	MAX_RENDER_DIST d
	minecraft a
	postMainBoxes b
	postPieces c
	addBoundingBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/List;Lnet/minecraft/resources/ResourceKey;)V a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/SupportBlockRenderer fxe
	lastUpdateTime b
	minecraft a
	surroundEntities c
	drawHighlights (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDDLnet/minecraft/world/entity/Entity;Ljava/util/function/DoubleSupplier;FFF)V a
	getBias (Lnet/minecraft/world/entity/Entity;)D a
	highlightPosition (Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;DDDLnet/minecraft/client/renderer/MultiBufferSource;DFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/VillageSectionsDebugRenderer fxf
	MAX_RENDER_DIST_FOR_VILLAGE_SECTIONS a
	villageSections b
	clear ()V a
	highlightVillageSection (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/SectionPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	setNotVillageSection (Lnet/minecraft/core/SectionPos;)V b
	setVillageSection (Lnet/minecraft/core/SectionPos;)V a
net/minecraft/client/renderer/debug/WaterDebugRenderer fxg
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/WorldGenAttemptRenderer fxh
	alphas c
	blues f
	greens e
	reds d
	scales b
	toRender a
	addPos (Lnet/minecraft/core/BlockPos;FFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/entity/AbstractHorseRenderer fxj
	scale a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/AbstractZombieRenderer fxk
	ZOMBIE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/Zombie;)Z b
net/minecraft/client/renderer/entity/AllayRenderer fxl
	ALLAY_TEXTURE a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/animal/allay/Allay;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/allay/Allay;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ArmorStandRenderer fxm
	DEFAULT_SKIN_LOCATION a
	getRenderType (Lnet/minecraft/world/entity/LivingEntity;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/entity/decoration/ArmorStand;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/ArmorStand;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/decoration/ArmorStand;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/decoration/ArmorStand;)Z b
net/minecraft/client/renderer/entity/ArrowRenderer fxn
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/AbstractArrow;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIIFFIIII)V a
net/minecraft/client/renderer/entity/AxolotlRenderer fxo
	TEXTURE_BY_TYPE a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/BatRenderer fxp
	BAT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/ambient/Bat;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/BeeRenderer fxq
	ANGRY_BEE_TEXTURE a
	ANGRY_NECTAR_BEE_TEXTURE i
	BEE_TEXTURE j
	NECTAR_BEE_TEXTURE k
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/BlazeRenderer fxr
	BLAZE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/Blaze;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Blaze;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/BoatRenderer fxs
	boatResources a
	createBoatModel (Lnet/minecraft/client/renderer/entity/EntityRendererProvider$Context;Lnet/minecraft/world/entity/vehicle/Boat$Type;Z)Lnet/minecraft/client/model/ListModel; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/vehicle/Boat$Type;Z)Ljava/lang/String; a
	getTextureLocation (Lnet/minecraft/world/entity/vehicle/Boat;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/vehicle/Boat;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/BreezeRenderer fxt
	TEXTURE_LOCATION a
	WIND_TEXTURE_LOCATION i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/breeze/Breeze;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/CamelRenderer fxu
	CAMEL_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/camel/Camel;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/CatRenderer fxv
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cat;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/Cat;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Cat;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/CaveSpiderRenderer fxw
	CAVE_SPIDER_LOCATION a
	SCALE i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/CaveSpider;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Spider;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/CaveSpider;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/ChestedHorseRenderer fxx
	MAP a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ChickenRenderer fxy
	CHICKEN_LOCATION a
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Chicken;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Chicken;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/CodRenderer fxz
	COD_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cod;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Cod;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/CowRenderer fya
	COW_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/CreeperRenderer fyb
	CREEPER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Creeper;)Lnet/minecraft/resources/ResourceLocation; a
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/LivingEntity;F)F b
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/monster/Creeper;F)F a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Creeper;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/DisplayRenderer fyc
	entityRenderDispatcher a
	calculateOrientation (Lnet/minecraft/world/entity/Display$RenderState;Lnet/minecraft/world/entity/Display;FLorg/joml/Quaternionf;)Lorg/joml/Quaternionf; a
	cameraXRot (Lnet/minecraft/client/Camera;)F b
	cameraYrot (Lnet/minecraft/client/Camera;)F a
	entityXRot (Lnet/minecraft/world/entity/Display;F)F b
	entityYRot (Lnet/minecraft/world/entity/Display;F)F a
	getSubState (Lnet/minecraft/world/entity/Display;)Ljava/lang/Object; b
	getTextureLocation (Lnet/minecraft/world/entity/Display;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Display;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderInner (Lnet/minecraft/world/entity/Display;Ljava/lang/Object;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IF)V a
net/minecraft/client/renderer/entity/DisplayRenderer$BlockDisplayRenderer fyc$a
	blockRenderer a
	getSubState (Lnet/minecraft/world/entity/Display$BlockDisplay;)Lnet/minecraft/world/entity/Display$BlockDisplay$BlockRenderState; a
	getSubState (Lnet/minecraft/world/entity/Display;)Ljava/lang/Object; b
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderInner (Lnet/minecraft/world/entity/Display$BlockDisplay;Lnet/minecraft/world/entity/Display$BlockDisplay$BlockRenderState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IF)V a
	renderInner (Lnet/minecraft/world/entity/Display;Ljava/lang/Object;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IF)V a
net/minecraft/client/renderer/entity/DisplayRenderer$ItemDisplayRenderer fyc$b
	itemRenderer a
	getSubState (Lnet/minecraft/world/entity/Display$ItemDisplay;)Lnet/minecraft/world/entity/Display$ItemDisplay$ItemRenderState; a
	getSubState (Lnet/minecraft/world/entity/Display;)Ljava/lang/Object; b
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderInner (Lnet/minecraft/world/entity/Display$ItemDisplay;Lnet/minecraft/world/entity/Display$ItemDisplay$ItemRenderState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IF)V a
	renderInner (Lnet/minecraft/world/entity/Display;Ljava/lang/Object;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IF)V a
net/minecraft/client/renderer/entity/DisplayRenderer$TextDisplayRenderer fyc$c
	font a
	getSubState (Lnet/minecraft/world/entity/Display$TextDisplay;)Lnet/minecraft/world/entity/Display$TextDisplay$TextRenderState; a
	getSubState (Lnet/minecraft/world/entity/Display;)Ljava/lang/Object; b
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderInner (Lnet/minecraft/world/entity/Display$TextDisplay;Lnet/minecraft/world/entity/Display$TextDisplay$TextRenderState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IF)V a
	renderInner (Lnet/minecraft/world/entity/Display;Ljava/lang/Object;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IF)V a
	splitLines (Lnet/minecraft/network/chat/Component;I)Lnet/minecraft/world/entity/Display$TextDisplay$CachedInfo; a
net/minecraft/client/renderer/entity/DolphinRenderer fyd
	DOLPHIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Dolphin;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/DragonFireballRenderer fye
	RENDER_TYPE f
	TEXTURE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/DragonFireball;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/DragonFireball;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/DragonFireball;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;IFIII)V a
net/minecraft/client/renderer/entity/DrownedRenderer fyf
	DROWNED_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Drowned;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ElderGuardianRenderer fyg
	GUARDIAN_ELDER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Guardian;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Guardian;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/EndCrystalRenderer fyh
	BASE i
	END_CRYSTAL_LOCATION a
	GLASS h
	RENDER_TYPE f
	SIN_45 g
	base l
	cube j
	glass k
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;)Lnet/minecraft/resources/ResourceLocation; a
	getY (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;F)F a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
net/minecraft/client/renderer/entity/EnderDragonRenderer fyi
	BEAM l
	CRYSTAL_BEAM_LOCATION a
	DECAL j
	DRAGON_EXPLODING_LOCATION f
	DRAGON_EYES_LOCATION h
	DRAGON_LOCATION g
	EYES k
	HALF_SQRT_3 m
	RENDER_TYPE i
	model n
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderCrystalBeams (FFFFILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex01 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;I)V a
	vertex2 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;FF)V a
	vertex3 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;FF)V b
	vertex4 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;FF)V c
net/minecraft/client/renderer/entity/EnderDragonRenderer$DragonModel fyi$a
	a z
	body g
	entity y
	head a
	jaw f
	leftFrontFoot l
	leftFrontLeg j
	leftFrontLegTip k
	leftRearFoot o
	leftRearLeg m
	leftRearLegTip n
	leftWing h
	leftWingTip i
	neck b
	rightFrontFoot t
	rightFrontLeg r
	rightFrontLegTip s
	rightRearFoot x
	rightRearLeg u
	rightRearLegTip w
	rightWing p
	rightWingTip q
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFF)V a
	renderSide (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFLnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;F)V a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFFFF)V a
net/minecraft/client/renderer/entity/EndermanRenderer fyj
	ENDERMAN_LOCATION a
	random i
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/monster/EnderMan;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/EnderMan;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/EnderMan;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/EndermiteRenderer fyk
	ENDERMITE_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Endermite;)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Endermite;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/renderer/entity/EntityRenderDispatcher fyl
	MAX_SHADOW_RADIUS f
	SHADOW_POWER_FALLOFF_Y g
	SHADOW_RENDER_TYPE e
	blockRenderDispatcher m
	camera b
	cameraOrientation k
	crosshairPickEntity c
	entityModels p
	font o
	itemInHandRenderer n
	itemRenderer l
	level j
	options d
	playerRenderers i
	renderHitBoxes r
	renderers h
	shouldRenderShadow q
	textureManager a
	cameraOrientation ()Lorg/joml/Quaternionf; b
	distanceToSqr (DDD)D a
	distanceToSqr (Lnet/minecraft/world/entity/Entity;)D b
	fireVertex (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFF)V a
	getItemInHandRenderer ()Lnet/minecraft/client/renderer/ItemInHandRenderer; d
	getPackedLightCoords (Lnet/minecraft/world/entity/Entity;F)I a
	getRenderer (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/client/renderer/entity/EntityRenderer; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	overrideCameraOrientation (Lorg/joml/Quaternionf;)V a
	prepare (Lnet/minecraft/world/level/Level;Lnet/minecraft/client/Camera;Lnet/minecraft/world/entity/Entity;)V a
	render (Lnet/minecraft/world/entity/Entity;DDDFFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderBlockShadow (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;DDDFF)V a
	renderFlame (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;Lorg/joml/Quaternionf;)V a
	renderHitbox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/Entity;F)V a
	renderShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;FFLnet/minecraft/world/level/LevelReader;F)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setRenderHitBoxes (Z)V b
	setRenderShadow (Z)V a
	shadowVertex (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFF)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRenderHitBoxes ()Z a
net/minecraft/client/renderer/entity/EntityRenderer fym
	NAMETAG_SCALE b
	entityRenderDispatcher c
	font a
	shadowRadius d
	shadowStrength e
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getFont ()Lnet/minecraft/client/gui/Font; b
	getPackedLightCoords (Lnet/minecraft/world/entity/Entity;F)I b
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getSkyLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I b
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
net/minecraft/client/renderer/entity/EntityRendererProvider fyn
net/minecraft/client/renderer/entity/EntityRendererProvider$Context fyn$a
	blockRenderDispatcher c
	entityRenderDispatcher a
	font g
	itemInHandRenderer d
	itemRenderer b
	modelSet f
	resourceManager e
	bakeLayer (Lnet/minecraft/client/model/geom/ModelLayerLocation;)Lnet/minecraft/client/model/geom/ModelPart; a
	getBlockRenderDispatcher ()Lnet/minecraft/client/renderer/block/BlockRenderDispatcher; c
	getEntityRenderDispatcher ()Lnet/minecraft/client/renderer/entity/EntityRenderDispatcher; a
	getFont ()Lnet/minecraft/client/gui/Font; h
	getItemInHandRenderer ()Lnet/minecraft/client/renderer/ItemInHandRenderer; d
	getItemRenderer ()Lnet/minecraft/client/renderer/entity/ItemRenderer; b
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; g
	getModelSet ()Lnet/minecraft/client/model/geom/EntityModelSet; f
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; e
net/minecraft/client/renderer/entity/EntityRenderers fyo
	LOGGER a
	PLAYER_PROVIDERS c
	PROVIDERS b
	createEntityRenderers (Lnet/minecraft/client/renderer/entity/EntityRendererProvider$Context;)Ljava/util/Map; a
	createPlayerRenderers (Lnet/minecraft/client/renderer/entity/EntityRendererProvider$Context;)Ljava/util/Map; b
	register (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/client/renderer/entity/EntityRendererProvider;)V a
	validateRegistrations ()Z a
net/minecraft/client/renderer/entity/EvokerFangsRenderer fyp
	TEXTURE_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/EvokerFangs;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/EvokerFangs;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/EvokerRenderer fyq
	EVOKER_ILLAGER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/SpellcasterIllager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ExperienceOrbRenderer fyr
	EXPERIENCE_ORB_LOCATION a
	RENDER_TYPE f
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/ExperienceOrb;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/ExperienceOrb;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/ExperienceOrb;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;FFIIIFFI)V a
net/minecraft/client/renderer/entity/FallingBlockRenderer fys
	dispatcher a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/FallingBlockEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/FallingBlockEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/FireworkEntityRenderer fyt
	itemRenderer a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/FishingHookRenderer fyu
	RENDER_TYPE f
	TEXTURE_LOCATION a
	VIEW_BOBBING_SCALE g
	fraction (II)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/FishingHook;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/FishingHook;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	stringVertex (FFFLcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;FF)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;IFIII)V a
net/minecraft/client/renderer/entity/FoxRenderer fyv
	RED_FOX_SLEEP_TEXTURE i
	RED_FOX_TEXTURE a
	SNOW_FOX_SLEEP_TEXTURE k
	SNOW_FOX_TEXTURE j
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Fox;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Fox;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/FrogRenderer fyw
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/frog/Frog;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/GhastRenderer fyx
	GHAST_LOCATION a
	GHAST_SHOOTING_LOCATION i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Ghast;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Ghast;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/GiantMobRenderer fyy
	ZOMBIE_LOCATION a
	scale i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Giant;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Giant;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/GlowSquidRenderer fyz
	GLOW_SQUID_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/GlowSquid;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/GlowSquid;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Squid;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/GoatRenderer fza
	GOAT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/goat/Goat;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/GuardianRenderer fzb
	BEAM_RENDER_TYPE j
	GUARDIAN_BEAM_LOCATION i
	GUARDIAN_LOCATION a
	getPosition (Lnet/minecraft/world/entity/LivingEntity;DF)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Guardian;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Guardian;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/monster/Guardian;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;FFFIIIFF)V a
net/minecraft/client/renderer/entity/HoglinRenderer fzc
	HOGLIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z b
net/minecraft/client/renderer/entity/HorseRenderer fzd
	LOCATION_BY_VARIANT a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/Horse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/HumanoidMobRenderer fze
net/minecraft/client/renderer/entity/HuskRenderer fzf
	HUSK_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Zombie;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/IllagerRenderer fzg
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/AbstractIllager;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/IllusionerRenderer fzh
	ILLUSIONER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Illusioner;)Lnet/minecraft/resources/ResourceLocation; a
	isBodyVisible (Lnet/minecraft/world/entity/LivingEntity;)Z d
	isBodyVisible (Lnet/minecraft/world/entity/monster/Illusioner;)Z b
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Illusioner;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/IronGolemRenderer fzi
	GOLEM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/IronGolem;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/IronGolem;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ItemEntityRenderer fzj
	FLAT_ITEM_BUNDLE_OFFSET_X j
	FLAT_ITEM_BUNDLE_OFFSET_Y k
	FLAT_ITEM_BUNDLE_OFFSET_Z l
	ITEM_BUNDLE_OFFSET_SCALE a
	ITEM_COUNT_FOR_2_BUNDLE i
	ITEM_COUNT_FOR_3_BUNDLE h
	ITEM_COUNT_FOR_4_BUNDLE g
	ITEM_COUNT_FOR_5_BUNDLE f
	itemRenderer m
	random n
	getRenderAmount (Lnet/minecraft/world/item/ItemStack;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/ItemEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/ItemEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ItemFrameRenderer fzk
	BRIGHT_MAP_LIGHT_ADJUSTMENT f
	FRAME_LOCATION g
	GLOW_FRAME_BRIGHTNESS a
	GLOW_FRAME_LOCATION i
	GLOW_MAP_FRAME_LOCATION j
	MAP_FRAME_LOCATION h
	blockRenderer l
	itemRenderer k
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/decoration/ItemFrame;Lnet/minecraft/core/BlockPos;)I a
	getFrameModelResourceLoc (Lnet/minecraft/world/entity/decoration/ItemFrame;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/resources/model/ModelResourceLocation; a
	getLightVal (Lnet/minecraft/world/entity/decoration/ItemFrame;II)I a
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/decoration/ItemFrame;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/ItemFrame;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/ItemFrame;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/decoration/ItemFrame;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/decoration/ItemFrame;)Z b
net/minecraft/client/renderer/entity/ItemRenderer fzl
	COMPASS_FOIL_FIRST_PERSON_SCALE g
	COMPASS_FOIL_TEXTURE_SCALE h
	COMPASS_FOIL_UI_SCALE f
	ENCHANTED_GLINT_ENTITY a
	ENCHANTED_GLINT_ITEM b
	GUI_SLOT_CENTER_X c
	GUI_SLOT_CENTER_Y d
	IGNORED k
	ITEM_COUNT_BLIT_OFFSET e
	SPYGLASS_IN_HAND_MODEL j
	SPYGLASS_MODEL m
	TRIDENT_IN_HAND_MODEL i
	TRIDENT_MODEL l
	blockEntityRenderer r
	itemColors q
	itemModelShaper o
	minecraft n
	textureManager p
	getArmorFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	getCompassFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	getCompassFoilBufferDirect (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	getFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	getFoilBufferDirect (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; c
	getItemModelShaper ()Lnet/minecraft/client/renderer/ItemModelShaper; a
	getModel (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)Lnet/minecraft/client/resources/model/BakedModel; a
	hasAnimatedTexture (Lnet/minecraft/world/item/ItemStack;)Z a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	render (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/resources/model/BakedModel;)V a
	renderModelLists (Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/item/ItemStack;IILcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderQuadList (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;Lnet/minecraft/world/item/ItemStack;II)V a
	renderStatic (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/Level;III)V a
	renderStatic (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;IILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/Level;I)V a
net/minecraft/client/renderer/entity/LeashKnotRenderer fzm
	KNOT_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/LightningBoltRenderer fzn
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/LightningBolt;)Lnet/minecraft/resources/ResourceLocation; a
	quad (Lorg/joml/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFIFFFFFFFZZZZ)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LightningBolt;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/LivingEntityRenderer fzo
	EYE_BED_OFFSET h
	LOGGER a
	layers g
	model f
	addLayer (Lnet/minecraft/client/renderer/entity/layers/RenderLayer;)Z a
	getAttackAnim (Lnet/minecraft/world/entity/LivingEntity;F)F d
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getModel ()Lnet/minecraft/client/model/EntityModel; a
	getOverlayCoords (Lnet/minecraft/world/entity/LivingEntity;F)I c
	getRenderType (Lnet/minecraft/world/entity/LivingEntity;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/LivingEntity;F)F b
	isBodyVisible (Lnet/minecraft/world/entity/LivingEntity;)Z d
	isEntityUpsideDown (Lnet/minecraft/world/entity/LivingEntity;)Z e
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	sleepDirectionToRotation (Lnet/minecraft/core/Direction;)F a
net/minecraft/client/renderer/entity/LlamaRenderer fzp
	BROWN j
	CREAMY a
	GRAY k
	WHITE i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/Llama;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/LlamaSpitRenderer fzq
	LLAMA_SPIT_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/LlamaSpit;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/LlamaSpit;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/MagmaCubeRenderer fzr
	MAGMACUBE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/MagmaCube;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/MagmaCube;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/MagmaCube;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/MagmaCube;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/MinecartRenderer fzs
	MINECART_LOCATION f
	blockRenderer g
	model a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/MobRenderer fzt
	LEASH_RENDER_STEPS h
	addVertexPair (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;FFFIIIIFFFFIZ)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderLeash (Lnet/minecraft/world/entity/Mob;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/Mob;)Z a
net/minecraft/client/renderer/entity/MushroomCowRenderer fzu
	TEXTURES a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/MushroomCow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/NoopRenderer fzv
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/OcelotRenderer fzw
	CAT_OCELOT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Ocelot;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PaintingRenderer fzx
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/Painting;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/Painting;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderPainting (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/decoration/Painting;IILnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	vertex (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFIIII)V a
net/minecraft/client/renderer/entity/PandaRenderer fzy
	TEXTURES a
	getAngle (FFIFF)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Panda;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Panda;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ParrotRenderer fzz
	BLUE i
	GREEN j
	GREY l
	RED_BLUE a
	YELLOW_BLUE k
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Parrot;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Parrot;)Lnet/minecraft/resources/ResourceLocation; a
	getVariantTexture (Lnet/minecraft/world/entity/animal/Parrot$Variant;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PhantomRenderer gaa
	PHANTOM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Phantom;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Phantom;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Phantom;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/PigRenderer gab
	PIG_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Pig;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PiglinRenderer gac
	PIGLIN_CUSTOM_HEAD_SCALE i
	TEXTURES a
	createModel (Lnet/minecraft/client/model/geom/EntityModelSet;Lnet/minecraft/client/model/geom/ModelLayerLocation;Z)Lnet/minecraft/client/model/PiglinModel; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; b
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/Mob;)Z c
net/minecraft/client/renderer/entity/PillagerRenderer gad
	PILLAGER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Pillager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PolarBearRenderer gae
	BEAR_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/PolarBear;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/PolarBear;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/PufferfishRenderer gaf
	PUFFER_LOCATION a
	big l
	mid k
	puffStateO i
	small j
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Pufferfish;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Pufferfish;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Pufferfish;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/RabbitRenderer gag
	RABBIT_BLACK_LOCATION j
	RABBIT_BROWN_LOCATION a
	RABBIT_EVIL_LOCATION o
	RABBIT_GOLD_LOCATION k
	RABBIT_SALT_LOCATION l
	RABBIT_TOAST_LOCATION n
	RABBIT_WHITE_LOCATION i
	RABBIT_WHITE_SPLOTCHED_LOCATION m
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Rabbit;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/RavagerRenderer gah
	TEXTURE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Ravager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/RenderLayerParent gai
	getModel ()Lnet/minecraft/client/model/EntityModel; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SalmonRenderer gaj
	SALMON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Salmon;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Salmon;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/SheepRenderer gak
	SHEEP_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Sheep;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ShulkerBulletRenderer gal
	RENDER_TYPE f
	TEXTURE_LOCATION a
	model g
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/ShulkerBullet;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/ShulkerBullet;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/ShulkerBullet;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ShulkerRenderer gam
	DEFAULT_TEXTURE_LOCATION a
	TEXTURE_LOCATION i
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/monster/Shulker;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Shulker;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Shulker;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/monster/Shulker;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
net/minecraft/client/renderer/entity/SilverfishRenderer gan
	SILVERFISH_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Silverfish;)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Silverfish;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/renderer/entity/SkeletonRenderer gao
	SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Z b
net/minecraft/client/renderer/entity/SlimeRenderer gap
	SLIME_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Slime;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Slime;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Slime;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/SnifferRenderer gaq
	SNIFFER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SnowGolemRenderer gar
	SNOW_GOLEM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/SnowGolem;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SpectralArrowRenderer gas
	SPECTRAL_ARROW_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/SpectralArrow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SpiderRenderer gat
	SPIDER_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Spider;)F b
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Spider;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SquidRenderer gau
	SQUID_LOCATION a
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Squid;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Squid;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Squid;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/StrayRenderer gav
	STRAY_SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/StriderRenderer gaw
	COLD_LOCATION i
	STRIDER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Strider;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/Strider;)Z b
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Strider;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/TadpoleRenderer gax
	TADPOLE_TEXTURE a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/frog/Tadpole;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ThrownItemRenderer gay
	MIN_CAMERA_DISTANCE_SQUARED a
	fullBright h
	itemRenderer f
	scale g
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ThrownTridentRenderer gaz
	TRIDENT_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/ThrownTrident;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/ThrownTrident;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/TippableArrowRenderer gba
	NORMAL_ARROW_LOCATION a
	TIPPED_ARROW_LOCATION f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/Arrow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/TntMinecartRenderer gbb
	blockRenderer f
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/MinecartTNT;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderWhiteSolidBlock (Lnet/minecraft/client/renderer/block/BlockRenderDispatcher;Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IZ)V a
net/minecraft/client/renderer/entity/TntRenderer gbc
	blockRenderer a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/PrimedTnt;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/PrimedTnt;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/TropicalFishRenderer gbd
	MODEL_A_TEXTURE j
	MODEL_B_TEXTURE k
	modelA a
	modelB i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/TropicalFish;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/TropicalFish;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/TropicalFish;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/TurtleRenderer gbe
	TURTLE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Turtle;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Turtle;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/UndeadHorseRenderer gbf
	MAP a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/VexRenderer gbg
	VEX_CHARGING_LOCATION i
	VEX_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/Vex;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Vex;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/VillagerRenderer gbh
	VILLAGER_BASE_SKIN a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/npc/Villager;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/VindicatorRenderer gbi
	VINDICATOR a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Vindicator;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/WanderingTraderRenderer gbj
	VILLAGER_BASE_SKIN a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/npc/WanderingTrader;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/npc/WanderingTrader;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WardenRenderer gbk
	BIOLUMINESCENT_LAYER_TEXTURE i
	HEART_TEXTURE j
	PULSATING_SPOTS_TEXTURE_1 k
	PULSATING_SPOTS_TEXTURE_2 l
	TEXTURE a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/warden/Warden;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/WindChargeRenderer gbl
	TEXTURE_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/WindCharge;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/WindCharge;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	xOffset (F)F a
net/minecraft/client/renderer/entity/WitchRenderer gbm
	WITCH_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Witch;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Witch;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Witch;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherBossRenderer gbn
	WITHER_INVULNERABLE_LOCATION a
	WITHER_LOCATION i
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/boss/wither/WitherBoss;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/wither/WitherBoss;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/boss/wither/WitherBoss;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherSkeletonRenderer gbo
	WITHER_SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/AbstractSkeleton;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherSkullRenderer gbp
	WITHER_INVULNERABLE_LOCATION a
	WITHER_LOCATION f
	model g
	createSkullLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/WitherSkull;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/WitherSkull;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/WitherSkull;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/WolfRenderer gbq
	WOLF_ANGRY_LOCATION j
	WOLF_LOCATION a
	WOLF_TAME_LOCATION i
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Wolf;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Wolf;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Wolf;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ZoglinRenderer gbr
	ZOGLIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zoglin;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ZombieRenderer gbs
net/minecraft/client/renderer/entity/ZombieVillagerRenderer gbt
	ZOMBIE_VILLAGER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/ZombieVillager;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/ZombieVillager;)Z b
net/minecraft/client/renderer/entity/layers/ArrowLayer gbu
	dispatcher a
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
net/minecraft/client/renderer/entity/layers/BeeStingerLayer gbv
	BEE_STINGER_LOCATION a
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;FIFFI)V a
net/minecraft/client/renderer/entity/layers/BreezeEyesLayer gbw
	model b
	textureLoc a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/breeze/Breeze;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/breeze/Breeze;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/BreezeWindLayer gbx
	BOTTOM_PART_ALPHA c
	MIDDLE_PART_ALPHA b
	TOP_PART_ALPHA a
	model e
	textureLoc d
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/breeze/Breeze;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/breeze/Breeze;FFFFFF)V a
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/CapeLayer gby
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CarriedBlockLayer gbz
	blockRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/EnderMan;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CatCollarLayer gca
	CAT_COLLAR_LOCATION a
	catModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Cat;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CreeperPowerLayer gcb
	POWER_LOCATION a
	model b
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/CrossedArmsItemLayer gcc
	itemInHandRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CustomHeadLayer gcd
	itemInHandRenderer e
	scaleX a
	scaleY b
	scaleZ c
	skullModels d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	translateToHead (Lcom/mojang/blaze3d/vertex/PoseStack;Z)V a
net/minecraft/client/renderer/entity/layers/Deadmau5EarsLayer gce
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/DolphinCarryingItemLayer gcf
	itemInHandRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Dolphin;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/DrownedOuterLayer gcg
	DROWNED_OUTER_LAYER_LOCATION a
	model b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/Drowned;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ElytraLayer gch
	WINGS_LOCATION a
	elytraModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/EnderEyesLayer gci
	ENDERMAN_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/EnergySwirlLayer gcj
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/EyesLayer gck
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/FoxHeldItemLayer gcl
	itemInHandRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Fox;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HorseArmorLayer gcm
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Horse;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HorseMarkingLayer gcn
	LOCATION_BY_MARKINGS a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Horse;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer gco
	ARMOR_LOCATION_CACHE a
	armorTrimAtlas d
	innerModel b
	outerModel c
	getArmorLocation (Lnet/minecraft/world/item/ArmorItem;ZLjava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getArmorModel (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/client/model/HumanoidModel; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderArmorPiece (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;ILnet/minecraft/client/model/HumanoidModel;)V a
	renderGlint (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/model/HumanoidModel;)V a
	renderModel (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/item/ArmorItem;Lnet/minecraft/client/model/HumanoidModel;ZFFFLjava/lang/String;)V a
	renderTrim (Lnet/minecraft/world/item/ArmorMaterial;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/item/armortrim/ArmorTrim;Lnet/minecraft/client/model/HumanoidModel;Z)V a
	setPartVisibility (Lnet/minecraft/client/model/HumanoidModel;Lnet/minecraft/world/entity/EquipmentSlot;)V a
	usesInnerModel (Lnet/minecraft/world/entity/EquipmentSlot;)Z b
net/minecraft/client/renderer/entity/layers/IronGolemCrackinessLayer gcp
	resourceLocations a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/IronGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/IronGolemFlowerLayer gcq
	blockRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/IronGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ItemInHandLayer gcr
	itemInHandRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderArmWithItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/layers/LlamaDecorLayer gcs
	TEXTURE_LOCATION a
	TRADER_LLAMA b
	model c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Llama;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/MushroomCowMushroomLayer gct
	blockRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/MushroomCow;FFFFFF)V a
	renderMushroomBlock (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IZLnet/minecraft/world/level/block/state/BlockState;ILnet/minecraft/client/resources/model/BakedModel;)V a
net/minecraft/client/renderer/entity/layers/PandaHoldsItemLayer gcu
	itemInHandRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Panda;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ParrotOnShoulderLayer gcv
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/player/Player;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/player/Player;FFFFZ)V a
net/minecraft/client/renderer/entity/layers/PhantomEyesLayer gcw
	PHANTOM_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/PlayerItemInHandLayer gcx
	X_ROT_MAX c
	X_ROT_MIN b
	itemInHandRenderer a
	renderArmWithItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderArmWithSpyglass (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/layers/RenderLayer gcy
	renderer a
	coloredCutoutModelCopyLayerRender (Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFFFFF)V a
	getParentModel ()Lnet/minecraft/client/model/EntityModel; c
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	renderColoredCutoutModel (Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFF)V a
net/minecraft/client/renderer/entity/layers/SaddleLayer gcz
	model b
	textureLocation a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SheepFurLayer gda
	SHEEP_FUR_LOCATION a
	model b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Sheep;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ShulkerHeadLayer gdb
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/Shulker;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SlimeOuterLayer gdc
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SnowGolemHeadLayer gdd
	blockRenderer a
	itemRenderer b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/SnowGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SpiderEyesLayer gde
	SPIDER_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/SpinAttackEffectLayer gdf
	BOX b
	TEXTURE a
	box c
	createLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/StrayClothingLayer gdg
	STRAY_CLOTHES_LOCATION a
	layerModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Mob;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/StuckInBodyLayer gdh
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
net/minecraft/client/renderer/entity/layers/TropicalFishPatternLayer gdi
	BETTY_TEXTURE k
	BLOCKFISH_TEXTURE j
	BRINELY_TEXTURE e
	CLAYFISH_TEXTURE l
	DASHER_TEXTURE d
	FLOPPER_TEXTURE g
	GLITTER_TEXTURE i
	KOB_TEXTURE a
	SNOOPER_TEXTURE c
	SPOTTY_TEXTURE f
	STRIPEY_TEXTURE h
	SUNSTREAK_TEXTURE b
	modelA m
	modelB n
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/TropicalFish;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/VillagerProfessionLayer gdj
	LEVEL_LOCATIONS a
	path e
	professionHatCache c
	resourceManager d
	typeHatCache b
	getHatData (Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;Ljava/lang/String;Lnet/minecraft/core/DefaultedRegistry;Ljava/lang/Object;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
	getResourceLocation (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/WardenEmissiveLayer gdk
	alphaFunction b
	drawSelector c
	texture a
	onlyDrawSelectedParts ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/warden/Warden;FFFFFF)V a
	resetDrawForAllParts ()V b
net/minecraft/client/renderer/entity/layers/WardenEmissiveLayer$AlphaFunction gdk$a
net/minecraft/client/renderer/entity/layers/WardenEmissiveLayer$DrawSelector gdk$b
net/minecraft/client/renderer/entity/layers/WitchItemLayer gdl
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/WitherArmorLayer gdm
	WITHER_ARMOR_LOCATION a
	model b
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/WolfCollarLayer gdn
	WOLF_COLLAR_LOCATION a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Wolf;FFFFFF)V a
net/minecraft/client/renderer/entity/player/PlayerRenderer gdq
	getArmPose (Lnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/client/model/HumanoidModel$ArmPose; a
	getRenderOffset (Lnet/minecraft/client/player/AbstractClientPlayer;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/client/player/AbstractClientPlayer;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/client/player/AbstractClientPlayer;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;)V a
	renderLeftHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;)V b
	renderNameTag (Lnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderRightHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;)V a
	scale (Lnet/minecraft/client/player/AbstractClientPlayer;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setModelProperties (Lnet/minecraft/client/player/AbstractClientPlayer;)V b
	setupRotations (Lnet/minecraft/client/player/AbstractClientPlayer;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/item/ClampedItemPropertyFunction gds
net/minecraft/client/renderer/item/CompassItemPropertyFunction gdt
	DEFAULT_ROTATION a
	compassTarget b
	wobble c
	wobbleRandom d
	getAngleFromEntityToPos (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)D a
	getCompassRotation (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/multiplayer/ClientLevel;ILnet/minecraft/world/entity/Entity;)F a
	getRandomlySpinningRotation (IJ)F a
	getRotationTowardsCompassTarget (Lnet/minecraft/world/entity/Entity;JLnet/minecraft/core/BlockPos;)F a
	getWrappedVisualRotationY (Lnet/minecraft/world/entity/Entity;)D a
	hash (I)I a
	isValidCompassTargetPos (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/GlobalPos;)Z a
	tryFetchLevelIfMissing (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/multiplayer/ClientLevel;)Lnet/minecraft/client/multiplayer/ClientLevel; a
net/minecraft/client/renderer/item/CompassItemPropertyFunction$CompassTarget gdt$a
net/minecraft/client/renderer/item/CompassItemPropertyFunction$CompassWobble gdt$b
	deltaRotation b
	lastUpdateTick c
	rotation a
	shouldUpdate (J)Z a
	update (JD)V a
net/minecraft/client/renderer/item/ItemProperties gdu
	DAMAGE d
	DAMAGED c
	GENERIC_PROPERTIES a
	PROPERTIES g
	PROPERTY_DAMAGE f
	PROPERTY_DAMAGED e
	TAG_CUSTOM_MODEL_DATA b
	getProperty (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/item/ItemPropertyFunction; a
	register (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/item/ClampedItemPropertyFunction;)V a
	registerCustomModelData (Lnet/minecraft/client/renderer/item/ItemPropertyFunction;)V a
	registerGeneric (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/item/ClampedItemPropertyFunction;)Lnet/minecraft/client/renderer/item/ClampedItemPropertyFunction; a
net/minecraft/client/renderer/item/ItemPropertyFunction gdv
net/minecraft/client/renderer/texture/AbstractTexture gdy
	NOT_ASSIGNED a
	blur c
	id b
	mipmap d
	bind ()V c
	getId ()I a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	releaseId ()V b
	reset (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)V a
	setFilter (ZZ)V a
net/minecraft/client/renderer/texture/Dumpable gdz
	dumpContents (Lnet/minecraft/resources/ResourceLocation;Ljava/nio/file/Path;)V a
net/minecraft/client/renderer/texture/DynamicTexture gea
	LOGGER e
	pixels f
	dumpContents (Lnet/minecraft/resources/ResourceLocation;Ljava/nio/file/Path;)V a
	getPixels ()Lcom/mojang/blaze3d/platform/NativeImage; e
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	setPixels (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	upload ()V d
net/minecraft/client/renderer/texture/HttpTexture geb
	LEGACY_SKIN_HEIGHT i
	LOGGER f
	SKIN_HEIGHT h
	SKIN_WIDTH g
	file j
	future n
	onDownloaded m
	processLegacySkin l
	uploaded o
	urlString k
	doNotchTransparencyHack (Lcom/mojang/blaze3d/platform/NativeImage;IIII)V a
	load (Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	loadCallback (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	processLegacySkin (Lcom/mojang/blaze3d/platform/NativeImage;)Lcom/mojang/blaze3d/platform/NativeImage; c
	setNoAlpha (Lcom/mojang/blaze3d/platform/NativeImage;IIII)V b
	upload (Lcom/mojang/blaze3d/platform/NativeImage;)V b
net/minecraft/client/renderer/texture/MipmapGenerator gec
	ALPHA_CUTOUT_CUTOFF a
	POW22 b
	alphaBlend (IIIIZ)I a
	gammaBlend (IIIII)I a
	generateMipLevels ([Lcom/mojang/blaze3d/platform/NativeImage;I)[Lcom/mojang/blaze3d/platform/NativeImage; a
	getPow22 (I)F a
	hasTransparentPixel (Lcom/mojang/blaze3d/platform/NativeImage;)Z a
net/minecraft/client/renderer/texture/MissingTextureAtlasSprite ged
	MISSING_IMAGE_HEIGHT b
	MISSING_IMAGE_WIDTH a
	MISSING_TEXTURE_LOCATION d
	MISSING_TEXTURE_NAME c
	SPRITE_METADATA e
	missingTexture f
	create ()Lnet/minecraft/client/renderer/texture/SpriteContents; a
	generateMissingImage (II)Lcom/mojang/blaze3d/platform/NativeImage; a
	getLocation ()Lnet/minecraft/resources/ResourceLocation; b
	getTexture ()Lnet/minecraft/client/renderer/texture/DynamicTexture; c
net/minecraft/client/renderer/texture/OverlayTexture gee
	NO_OVERLAY d
	NO_WHITE_U a
	RED_OVERLAY_V b
	SIZE e
	WHITE_OVERLAY_V c
	texture f
	pack (FZ)I a
	pack (II)I a
	setupOverlayColor ()V a
	teardownOverlayColor ()V b
	u (F)I a
	v (Z)I a
net/minecraft/client/renderer/texture/PreloadedTexture gef
	future f
	executor (Ljava/util/concurrent/Executor;)Ljava/util/concurrent/Executor; a
	getFuture ()Ljava/util/concurrent/CompletableFuture; d
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
	reset (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)V a
net/minecraft/client/renderer/texture/SimpleTexture geg
	LOGGER f
	location e
	doLoad (Lcom/mojang/blaze3d/platform/NativeImage;ZZ)V a
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/renderer/texture/SimpleTexture$TextureImage geg$a
	exception c
	image b
	metadata a
	getImage ()Lcom/mojang/blaze3d/platform/NativeImage; b
	getTextureMetadata ()Lnet/minecraft/client/resources/metadata/texture/TextureMetadataSection; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; a
	throwIfError ()V c
net/minecraft/client/renderer/texture/SpriteContents geh
	LOGGER a
	animatedTexture g
	byMipLevel f
	height d
	metadata h
	name b
	originalImage e
	width c
	createAnimatedTexture (Lnet/minecraft/client/resources/metadata/animation/FrameSize;IILnet/minecraft/client/resources/metadata/animation/AnimationMetadataSection;)Lnet/minecraft/client/renderer/texture/SpriteContents$AnimatedTexture; a
	createTicker ()Lnet/minecraft/client/renderer/texture/SpriteTicker; e
	getFrameCount ()I g
	getUniqueFrames ()Ljava/util/stream/IntStream; d
	height ()I b
	increaseMipLevel (I)V a
	isTransparent (III)Z a
	metadata ()Lnet/minecraft/server/packs/resources/ResourceMetadata; f
	name ()Lnet/minecraft/resources/ResourceLocation; c
	upload (IIII[Lcom/mojang/blaze3d/platform/NativeImage;)V a
	uploadFirstFrame (II)V a
	width ()I a
net/minecraft/client/renderer/texture/SpriteContents$AnimatedTexture geh$a
	frameRowSize c
	frames b
	interpolateFrames d
	createTicker ()Lnet/minecraft/client/renderer/texture/SpriteTicker; a
	getFrameX (I)I a
	getFrameY (I)I b
	getUniqueFrames ()Ljava/util/stream/IntStream; b
	uploadFirstFrame (II)V a
	uploadFrame (III)V a
net/minecraft/client/renderer/texture/SpriteContents$FrameInfo geh$b
	index a
	time b
net/minecraft/client/renderer/texture/SpriteContents$InterpolationData geh$c
	activeFrame b
	getPixel (Lnet/minecraft/client/renderer/texture/SpriteContents$AnimatedTexture;IIII)I a
	mix (DII)I a
	uploadInterpolatedFrame (IILnet/minecraft/client/renderer/texture/SpriteContents$Ticker;)V a
net/minecraft/client/renderer/texture/SpriteContents$Ticker geh$d
	animationInfo d
	frame b
	interpolationData e
	subFrame c
	tickAndUpload (II)V a
net/minecraft/client/renderer/texture/SpriteLoader gei
	DEFAULT_METADATA_SECTIONS a
	LOGGER b
	location c
	maxSupportedTextureSize d
	minHeight f
	minWidth e
	create (Lnet/minecraft/client/renderer/texture/TextureAtlas;)Lnet/minecraft/client/renderer/texture/SpriteLoader; a
	getStitchedSprites (Lnet/minecraft/client/renderer/texture/Stitcher;II)Ljava/util/Map; a
	loadAndStitch (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;ILjava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	loadAndStitch (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;ILjava/util/concurrent/Executor;Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; a
	runSpriteSuppliers (Lnet/minecraft/client/renderer/texture/atlas/SpriteResourceLoader;Ljava/util/List;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	stitch (Ljava/util/List;ILjava/util/concurrent/Executor;)Lnet/minecraft/client/renderer/texture/SpriteLoader$Preparations; a
net/minecraft/client/renderer/texture/SpriteLoader$Preparations gei$a
	height b
	mipLevel c
	missing d
	readyForUpload f
	regions e
	width a
	height ()I c
	mipLevel ()I d
	missing ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	readyForUpload ()Ljava/util/concurrent/CompletableFuture; g
	regions ()Ljava/util/Map; f
	waitForUpload ()Ljava/util/concurrent/CompletableFuture; a
	width ()I b
net/minecraft/client/renderer/texture/SpriteTicker gej
	tickAndUpload (II)V a
net/minecraft/client/renderer/texture/Stitcher gek
	HOLDER_COMPARATOR a
	maxHeight h
	maxWidth g
	mipLevel b
	storage d
	storageX e
	storageY f
	texturesToBeStitched c
	addToStorage (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z a
	expand (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z b
	gatherSprites (Lnet/minecraft/client/renderer/texture/Stitcher$SpriteLoader;)V a
	getHeight ()I b
	getWidth ()I a
	registerSprite (Lnet/minecraft/client/renderer/texture/Stitcher$Entry;)V a
	smallestFittingMinTexel (II)I a
	stitch ()V c
net/minecraft/client/renderer/texture/Stitcher$Entry gek$a
	height ()I b
	name ()Lnet/minecraft/resources/ResourceLocation; c
	width ()I a
net/minecraft/client/renderer/texture/Stitcher$Holder gek$b
	entry a
	height c
	width b
	entry ()Lnet/minecraft/client/renderer/texture/Stitcher$Entry; a
	height ()I c
	width ()I b
net/minecraft/client/renderer/texture/Stitcher$Region gek$c
	height d
	holder f
	originX a
	originY b
	subSlots e
	width c
	add (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z a
	getX ()I a
	getY ()I b
	walk (Lnet/minecraft/client/renderer/texture/Stitcher$SpriteLoader;)V a
net/minecraft/client/renderer/texture/Stitcher$SpriteLoader gek$d
net/minecraft/client/renderer/texture/StitcherException gel
	allSprites a
	getAllSprites ()Ljava/util/Collection; a
net/minecraft/client/renderer/texture/TextureAtlas gem
	LOCATION_BLOCKS e
	LOCATION_PARTICLES f
	LOGGER g
	animatedTextures i
	height o
	location l
	maxSupportedTextureSize m
	mipLevel p
	missingSprite k
	sprites h
	texturesByName j
	width n
	clearTextureData ()V f
	cycleAnimationFrames ()V d
	dumpContents (Lnet/minecraft/resources/ResourceLocation;Ljava/nio/file/Path;)V a
	dumpSpriteNames (Ljava/nio/file/Path;Ljava/lang/String;Ljava/util/Map;)V a
	getHeight ()I j
	getSprite (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getWidth ()I i
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	location ()Lnet/minecraft/resources/ResourceLocation; g
	maxSupportedTextureSize ()I h
	tick ()V e
	updateFilter (Lnet/minecraft/client/renderer/texture/SpriteLoader$Preparations;)V b
	upload (Lnet/minecraft/client/renderer/texture/SpriteLoader$Preparations;)V a
net/minecraft/client/renderer/texture/TextureAtlasSprite gen
	atlasLocation a
	contents b
	u0 e
	u1 f
	v0 g
	v1 h
	x c
	y d
	atlasLocation ()Lnet/minecraft/resources/ResourceLocation; i
	atlasSize ()F l
	contents ()Lnet/minecraft/client/renderer/texture/SpriteContents; e
	createTicker ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$Ticker; f
	getU (F)F a
	getU0 ()F c
	getU1 ()F d
	getUOffset (F)F b
	getV (F)F c
	getV0 ()F g
	getV1 ()F h
	getVOffset (F)F d
	getX ()I a
	getY ()I b
	uploadFirstFrame ()V j
	uvShrinkRatio ()F k
	wrap (Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
net/minecraft/client/renderer/texture/TextureAtlasSprite$Ticker gen$a
	tickAndUpload ()V a
net/minecraft/client/renderer/texture/TextureManager geo
	INTENTIONAL_MISSING_TEXTURE a
	LOGGER b
	byPath c
	prefixRegister e
	resourceManager f
	tickableTextures d
	_bind (Lnet/minecraft/resources/ResourceLocation;)V d
	_dumpAllSheets (Ljava/nio/file/Path;)V b
	bindForSetup (Lnet/minecraft/resources/ResourceLocation;)V a
	dumpAllSheets (Ljava/nio/file/Path;)V a
	execute (Ljava/lang/Runnable;)V a
	getTexture (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/AbstractTexture; b
	getTexture (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)Lnet/minecraft/client/renderer/texture/AbstractTexture; b
	loadTexture (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)Lnet/minecraft/client/renderer/texture/AbstractTexture; d
	preload (Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	register (Ljava/lang/String;Lnet/minecraft/client/renderer/texture/DynamicTexture;)Lnet/minecraft/resources/ResourceLocation; a
	register (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)V a
	release (Lnet/minecraft/resources/ResourceLocation;)V c
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	safeClose (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)V c
	tick ()V e
net/minecraft/client/renderer/texture/Tickable gep
	tick ()V e
net/minecraft/client/renderer/texture/atlas/SpriteResourceLoader geq
	LOGGER a
net/minecraft/client/renderer/texture/atlas/SpriteSource ger
	TEXTURE_ID_CONVERTER a
	run (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/atlas/SpriteSource$Output;)V a
	type ()Lnet/minecraft/client/renderer/texture/atlas/SpriteSourceType; a
net/minecraft/client/renderer/texture/atlas/SpriteSource$Output ger$a
	add (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/atlas/SpriteSource$SpriteSupplier;)V a
	add (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/resources/Resource;)V a
	removeAll (Ljava/util/function/Predicate;)V a
net/minecraft/client/renderer/texture/atlas/SpriteSource$SpriteSupplier ger$b
	discard ()V a
net/minecraft/client/renderer/texture/atlas/SpriteSourceList ges
	ATLAS_INFO_CONVERTER b
	LOGGER a
	sources c
	list (Lnet/minecraft/server/packs/resources/ResourceManager;)Ljava/util/List; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/atlas/SpriteSourceList; a
net/minecraft/client/renderer/texture/atlas/SpriteSourceType get
	codec a
	codec ()Lcom/mojang/serialization/Codec; a
net/minecraft/client/renderer/texture/atlas/SpriteSources geu
	CODEC g
	DIRECTORY b
	FILE_CODEC h
	FILTER c
	PALETTED_PERMUTATIONS e
	SINGLE_FILE a
	TYPES i
	TYPE_CODEC f
	UNSTITCHER d
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/client/renderer/texture/atlas/SpriteSourceType; a
net/minecraft/client/renderer/texture/atlas/sources/DirectoryLister gew
	CODEC b
	idPrefix d
	sourcePath c
	run (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/atlas/SpriteSource$Output;)V a
	type ()Lnet/minecraft/client/renderer/texture/atlas/SpriteSourceType; a
net/minecraft/client/renderer/texture/atlas/sources/LazyLoadedImage gex
	id a
	image c
	referenceCount d
	resource b
	get ()Lcom/mojang/blaze3d/platform/NativeImage; a
	release ()V b
net/minecraft/client/renderer/texture/atlas/sources/PalettedPermutations gey
	CODEC b
	LOGGER c
	paletteKey f
	permutations e
	textures d
	createPaletteMapping ([I[I)Ljava/util/function/IntUnaryOperator; a
	loadPaletteEntryFromImage (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)[I a
	run (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/atlas/SpriteSource$Output;)V a
	type ()Lnet/minecraft/client/renderer/texture/atlas/SpriteSourceType; a
net/minecraft/client/renderer/texture/atlas/sources/PalettedPermutations$PalettedSpriteSupplier gey$a
	baseImage a
	palette b
	permutationLocation c
	apply (Lnet/minecraft/client/renderer/texture/atlas/SpriteResourceLoader;)Lnet/minecraft/client/renderer/texture/SpriteContents; a
	baseImage ()Lnet/minecraft/client/renderer/texture/atlas/sources/LazyLoadedImage; b
	discard ()V a
	palette ()Ljava/util/function/Supplier; c
	permutationLocation ()Lnet/minecraft/resources/ResourceLocation; d
net/minecraft/client/renderer/texture/atlas/sources/SingleFile gez
	CODEC b
	LOGGER c
	resourceId d
	spriteId e
	run (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/atlas/SpriteSource$Output;)V a
	type ()Lnet/minecraft/client/renderer/texture/atlas/SpriteSourceType; a
net/minecraft/client/renderer/texture/atlas/sources/SourceFilter gfa
	CODEC b
	filter c
	run (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/atlas/SpriteSource$Output;)V a
	type ()Lnet/minecraft/client/renderer/texture/atlas/SpriteSourceType; a
net/minecraft/client/renderer/texture/atlas/sources/Unstitcher gfb
	CODEC b
	LOGGER c
	regions e
	resource d
	xDivisor f
	yDivisor g
	run (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/atlas/SpriteSource$Output;)V a
	type ()Lnet/minecraft/client/renderer/texture/atlas/SpriteSourceType; a
net/minecraft/client/renderer/texture/atlas/sources/Unstitcher$Region gfb$a
	CODEC a
	height f
	sprite b
	width e
	x c
	y d
	height ()D e
	sprite ()Lnet/minecraft/resources/ResourceLocation; a
	width ()D d
	x ()D b
	y ()D c
net/minecraft/client/renderer/texture/atlas/sources/Unstitcher$RegionInstance gfb$b
	image a
	region b
	xDivisor c
	yDivisor d
	apply (Lnet/minecraft/client/renderer/texture/atlas/SpriteResourceLoader;)Lnet/minecraft/client/renderer/texture/SpriteContents; a
	discard ()V a
net/minecraft/client/resources/ClientPackSource gfe
	BUILT_IN_METADATA d
	HIGH_CONTRAST_PACK b
	PACKS_DIR g
	SPECIAL_PACK_NAMES f
	VANILLA_NAME e
	VERSION_METADATA_SECTION c
	externalAssetDir h
	createBuiltinPack (Ljava/lang/String;Lnet/minecraft/server/packs/repository/Pack$ResourcesSupplier;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/server/packs/repository/Pack; a
	createVanillaPack (Lnet/minecraft/server/packs/PackResources;)Lnet/minecraft/server/packs/repository/Pack; a
	createVanillaPackSource (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/VanillaPackResources; b
	findExplodedAssetPacks (Ljava/nio/file/Path;)Ljava/nio/file/Path; a
	getPackTitle (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	populatePackList (Ljava/util/function/BiConsumer;)V a
net/minecraft/client/resources/DefaultPlayerSkin gff
	DEFAULT_SKINS a
	create (Ljava/lang/String;Lnet/minecraft/client/resources/PlayerSkin$Model;)Lnet/minecraft/client/resources/PlayerSkin; a
	get (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/client/resources/PlayerSkin; a
	get (Ljava/util/UUID;)Lnet/minecraft/client/resources/PlayerSkin; a
	getDefaultTexture ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/resources/FoliageColorReloadListener gfg
	LOCATION a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply ([ILnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)[I a
net/minecraft/client/resources/GrassColorReloadListener gfh
	LOCATION a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply ([ILnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)[I a
net/minecraft/client/resources/IndexedAssetSource gfi
	LOGGER b
	PATH_SPLITTER a
	createIndexFs (Ljava/nio/file/Path;Ljava/lang/String;)Ljava/nio/file/Path; a
net/minecraft/client/resources/LegacyStuffWrapper gfj
	getPixels (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)[I a
net/minecraft/client/resources/MobEffectTextureManager gfk
	get (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
net/minecraft/client/resources/PaintingTextureManager gfl
	BACK_SPRITE_LOCATION a
	get (Lnet/minecraft/world/entity/decoration/PaintingVariant;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getBackSprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
net/minecraft/client/resources/PlayerSkin gfm
	capeTexture c
	elytraTexture d
	model e
	secure f
	texture a
	textureUrl b
	capeTexture ()Lnet/minecraft/resources/ResourceLocation; c
	elytraTexture ()Lnet/minecraft/resources/ResourceLocation; d
	model ()Lnet/minecraft/client/resources/PlayerSkin$Model; e
	secure ()Z f
	texture ()Lnet/minecraft/resources/ResourceLocation; a
	textureUrl ()Ljava/lang/String; b
net/minecraft/client/resources/PlayerSkin$Model gfm$a
	$VALUES d
	SLIM a
	WIDE b
	id c
	$values ()[Lnet/minecraft/client/resources/PlayerSkin$Model; b
	byName (Ljava/lang/String;)Lnet/minecraft/client/resources/PlayerSkin$Model; a
	id ()Ljava/lang/String; a
net/minecraft/client/resources/SkinManager gfn
	LOGGER a
	capeTextures e
	elytraTextures f
	sessionService b
	skinCache c
	skinTextures d
	getInsecureSkin (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/client/resources/PlayerSkin; b
	getOrLoad (Lcom/mojang/authlib/GameProfile;)Ljava/util/concurrent/CompletableFuture; c
	lookupInsecure (Lcom/mojang/authlib/GameProfile;)Ljava/util/function/Supplier; a
	registerTextures (Ljava/util/UUID;Lcom/mojang/authlib/minecraft/MinecraftProfileTextures;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/resources/SkinManager$CacheKey gfn$a
	packedTextures b
	profileId a
	packedTextures ()Lcom/mojang/authlib/properties/Property; b
	profileId ()Ljava/util/UUID; a
net/minecraft/client/resources/SkinManager$TextureCache gfn$b
	root b
	textureManager a
	textures d
	type c
	getOrLoad (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;)Ljava/util/concurrent/CompletableFuture; a
	getTextureLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	registerTexture (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;)Ljava/util/concurrent/CompletableFuture; b
net/minecraft/client/resources/SplashManager gfo
	RANDOM b
	SPLASHES_LOCATION a
	splashes c
	user d
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/List;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getSplash ()Lnet/minecraft/client/gui/components/SplashRenderer; a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/util/List; a
net/minecraft/client/resources/TextureAtlasHolder gfp
	atlasInfoLocation b
	metadataSections c
	textureAtlas a
	apply (Lnet/minecraft/client/renderer/texture/SpriteLoader$Preparations;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getSprite (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/resources/language/ClientLanguage gfq
	LOGGER b
	defaultRightToLeft d
	storage c
	appendFrom (Ljava/lang/String;Ljava/util/List;Ljava/util/Map;)V a
	getOrDefault (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	getVisualOrder (Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/util/FormattedCharSequence; a
	has (Ljava/lang/String;)Z b
	isDefaultRightToLeft ()Z b
	loadFrom (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/List;Z)Lnet/minecraft/client/resources/language/ClientLanguage; a
net/minecraft/client/resources/language/FormattedBidiReorder gfr
	reorder (Lnet/minecraft/network/chat/FormattedText;Z)Lnet/minecraft/util/FormattedCharSequence; a
	shape (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/client/resources/language/I18n gfs
	language a
	exists (Ljava/lang/String;)Z a
	get (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; a
	setLanguage (Lnet/minecraft/locale/Language;)V a
net/minecraft/client/resources/language/LanguageInfo gft
	CODEC a
	bidirectional d
	name c
	region b
	bidirectional ()Z d
	name ()Ljava/lang/String; c
	region ()Ljava/lang/String; b
	toComponent ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/resources/language/LanguageManager gfu
	DEFAULT_LANGUAGE b
	LOGGER a
	currentCode d
	languages c
	extractLanguages (Ljava/util/stream/Stream;)Ljava/util/Map; a
	getLanguage (Ljava/lang/String;)Lnet/minecraft/client/resources/language/LanguageInfo; b
	getLanguages ()Ljava/util/SortedMap; b
	getSelected ()Ljava/lang/String; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	setSelected (Ljava/lang/String;)V a
net/minecraft/client/resources/metadata/animation/AnimationFrame gfw
	UNKNOWN_FRAME_TIME a
	index b
	time c
	getIndex ()I a
	getTime (I)I a
net/minecraft/client/resources/metadata/animation/AnimationMetadataSection gfx
	DEFAULT_FRAME_TIME c
	EMPTY e
	SECTION_NAME b
	SERIALIZER a
	UNKNOWN_SIZE d
	defaultFrameTime i
	frameHeight h
	frameWidth g
	frames f
	interpolatedFrames j
	calculateFrameSize (II)Lnet/minecraft/client/resources/metadata/animation/FrameSize; a
	forEachFrame (Lnet/minecraft/client/resources/metadata/animation/AnimationMetadataSection$FrameOutput;)V a
	getDefaultFrameTime ()I a
	isInterpolatedFrames ()Z b
net/minecraft/client/resources/metadata/animation/AnimationMetadataSection$FrameOutput gfx$a
net/minecraft/client/resources/metadata/animation/AnimationMetadataSectionSerializer gfy
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/animation/AnimationMetadataSection; b
	getFrame (ILcom/google/gson/JsonElement;)Lnet/minecraft/client/resources/metadata/animation/AnimationFrame; a
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/animation/FrameSize gfz
	height b
	width a
	height ()I b
	width ()I a
net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection gga
	SECTION_NAME b
	SERIALIZER a
	hat c
	getHat ()Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat gga$a
	$VALUES f
	BY_NAME d
	FULL c
	NONE a
	PARTIAL b
	name e
	$values ()[Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; b
	getByName (Ljava/lang/String;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
	getName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/animation/VillagerMetadataSectionSerializer ggb
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/gui/GuiMetadataSection ggd
	CODEC b
	DEFAULT a
	TYPE c
	scaling d
	scaling ()Lnet/minecraft/client/resources/metadata/gui/GuiSpriteScaling; a
net/minecraft/client/resources/metadata/gui/GuiSpriteScaling gge
	CODEC a
	DEFAULT b
	type ()Lnet/minecraft/client/resources/metadata/gui/GuiSpriteScaling$Type; a
net/minecraft/client/resources/metadata/gui/GuiSpriteScaling$NineSlice gge$a
	CODEC c
	border f
	height e
	width d
	border ()Lnet/minecraft/client/resources/metadata/gui/GuiSpriteScaling$NineSlice$Border; d
	height ()I c
	type ()Lnet/minecraft/client/resources/metadata/gui/GuiSpriteScaling$Type; a
	validate (Lnet/minecraft/client/resources/metadata/gui/GuiSpriteScaling$NineSlice;)Lcom/mojang/serialization/DataResult; a
	width ()I b
net/minecraft/client/resources/metadata/gui/GuiSpriteScaling$NineSlice$Border gge$a$a
	CODEC g
	RECORD_CODEC f
	VALUE_CODEC e
	bottom d
	left a
	right c
	top b
	bottom ()I d
	left ()I a
	right ()I c
	top ()I b
	unpackValue ()Ljava/util/OptionalInt; e
net/minecraft/client/resources/metadata/gui/GuiSpriteScaling$Stretch gge$b
	CODEC c
	type ()Lnet/minecraft/client/resources/metadata/gui/GuiSpriteScaling$Type; a
net/minecraft/client/resources/metadata/gui/GuiSpriteScaling$Tile gge$c
	CODEC c
	height e
	width d
	height ()I c
	type ()Lnet/minecraft/client/resources/metadata/gui/GuiSpriteScaling$Type; a
	width ()I b
net/minecraft/client/resources/metadata/gui/GuiSpriteScaling$Type gge$d
	$VALUES g
	CODEC d
	NINE_SLICE c
	STRETCH a
	TILE b
	codec f
	key e
	$values ()[Lnet/minecraft/client/resources/metadata/gui/GuiSpriteScaling$Type; b
	codec ()Lcom/mojang/serialization/Codec; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/client/resources/metadata/language/LanguageMetadataSection ggg
	CODEC b
	LANGUAGE_CODE_CODEC a
	TYPE c
	languages d
	languages ()Ljava/util/Map; a
net/minecraft/client/resources/metadata/texture/TextureMetadataSection ggj
	DEFAULT_BLUR b
	DEFAULT_CLAMP c
	SERIALIZER a
	blur d
	clamp e
	isBlur ()Z a
	isClamp ()Z b
net/minecraft/client/resources/metadata/texture/TextureMetadataSectionSerializer ggk
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/texture/TextureMetadataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/model/AtlasSet ggm
	atlases a
	getAtlas (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlas; a
	scheduleLoad (Lnet/minecraft/server/packs/resources/ResourceManager;ILjava/util/concurrent/Executor;)Ljava/util/Map; a
net/minecraft/client/resources/model/AtlasSet$AtlasEntry ggm$a
	atlas a
	atlasInfoLocation b
	atlas ()Lnet/minecraft/client/renderer/texture/TextureAtlas; a
	atlasInfoLocation ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/resources/model/AtlasSet$StitchResult ggm$b
	atlas a
	preparations b
	getSprite (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	missing ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	readyForUpload ()Ljava/util/concurrent/CompletableFuture; b
	upload ()V c
net/minecraft/client/resources/model/BakedModel ggn
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/BlockModelRotation ggo
	$VALUES v
	BY_INDEX r
	DEGREES q
	X0_Y0 a
	X0_Y180 c
	X0_Y270 d
	X0_Y90 b
	X180_Y0 i
	X180_Y180 k
	X180_Y270 l
	X180_Y90 j
	X270_Y0 m
	X270_Y180 o
	X270_Y270 p
	X270_Y90 n
	X90_Y0 e
	X90_Y180 g
	X90_Y270 h
	X90_Y90 f
	actualRotation t
	index u
	transformation s
	$values ()[Lnet/minecraft/client/resources/model/BlockModelRotation; d
	actualRotation ()Lcom/mojang/math/OctahedralGroup; a
	by (II)Lnet/minecraft/client/resources/model/BlockModelRotation; a
	getIndex (II)I b
	getRotation ()Lcom/mojang/math/Transformation; b
net/minecraft/client/resources/model/BuiltInModel ggp
	itemTransforms a
	overrides b
	particleTexture c
	usesBlockLight d
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/Material ggq
	COMPARATOR a
	atlasLocation b
	renderType d
	texture c
	atlasLocation ()Lnet/minecraft/resources/ResourceLocation; a
	buffer (Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/util/function/Function;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	buffer (Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/util/function/Function;Z)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	renderType (Ljava/util/function/Function;)Lnet/minecraft/client/renderer/RenderType; a
	sprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; c
	texture ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/resources/model/ModelBaker ggr
	bake (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/model/ModelState;)Lnet/minecraft/client/resources/model/BakedModel; a
	getModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/UnbakedModel; a
net/minecraft/client/resources/model/ModelBakery ggs
	BANNER_BASE f
	BLOCKSTATE_LISTER o
	BLOCK_ENTITY_MARKER s
	BREAKING_LOCATIONS k
	BUILTIN_BLOCK_ENTITY x
	BUILTIN_MODELS z
	BUILTIN_SLASH v
	BUILTIN_SLASH_GENERATED w
	COMMA_SPLITTER A
	DESTROY_STAGES j
	DESTROY_STAGE_COUNT i
	DESTROY_TYPES l
	EQUAL_SPLITTER B
	FIRE_0 a
	FIRE_1 b
	GENERATION_MARKER r
	INVISIBLE_MODEL_GROUP t
	ITEM_FRAME_FAKE_DEFINITION C
	ITEM_MODEL_GENERATOR D
	LAVA_FLOW c
	LOGGER u
	MISSING_MODEL_LOCATION n
	MISSING_MODEL_MESH q
	MISSING_MODEL_NAME y
	MODEL_LISTER p
	NO_PATTERN_SHIELD h
	SHIELD_BASE g
	SINGLETON_MODEL_GROUP m
	STATIC_DEFINITIONS E
	WATER_FLOW d
	WATER_OVERLAY e
	bakedCache L
	bakedTopLevelModels N
	blockColors F
	blockStateResources H
	context J
	loadingStack I
	modelGroups P
	modelResources G
	nextModelGroup O
	topLevelModels M
	unbakedCache K
	bakeModels (Ljava/util/function/BiFunction;)V a
	cacheAndQueueDependencies (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/model/UnbakedModel;)V a
	getBakedTopLevelModels ()Ljava/util/Map; a
	getModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/UnbakedModel; a
	getModelGroups ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; b
	getValueHelper (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Ljava/lang/Comparable; a
	loadBlockModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BlockModel; c
	loadModel (Lnet/minecraft/resources/ResourceLocation;)V b
	loadTopLevel (Lnet/minecraft/client/resources/model/ModelResourceLocation;)V a
	predicate (Lnet/minecraft/world/level/block/state/StateDefinition;Ljava/lang/String;)Ljava/util/function/Predicate; a
	registerModelGroup (Ljava/lang/Iterable;)V a
net/minecraft/client/resources/model/ModelBakery$BakedCacheKey ggs$a
	id a
	isUvLocked c
	transformation b
	id ()Lnet/minecraft/resources/ResourceLocation; a
	isUvLocked ()Z c
	transformation ()Lcom/mojang/math/Transformation; b
net/minecraft/client/resources/model/ModelBakery$BlockStateDefinitionException ggs$b
net/minecraft/client/resources/model/ModelBakery$LoadedJson ggs$c
	data b
	source a
	data ()Lcom/google/gson/JsonElement; b
	source ()Ljava/lang/String; a
net/minecraft/client/resources/model/ModelBakery$ModelBakerImpl ggs$d
	modelTextureGetter b
	bake (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/model/ModelState;)Lnet/minecraft/client/resources/model/BakedModel; a
	getModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/UnbakedModel; a
net/minecraft/client/resources/model/ModelBakery$ModelGroupKey ggs$e
	coloringValues b
	models a
	create (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/renderer/block/model/multipart/MultiPart;Ljava/util/Collection;)Lnet/minecraft/client/resources/model/ModelBakery$ModelGroupKey; a
	create (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/resources/model/UnbakedModel;Ljava/util/Collection;)Lnet/minecraft/client/resources/model/ModelBakery$ModelGroupKey; a
	getColoringValues (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Collection;)Ljava/util/List; a
net/minecraft/client/resources/model/ModelManager ggt
	LOGGER a
	VANILLA_ATLASES b
	atlases d
	bakedRegistry c
	blockColors f
	blockModelShaper e
	maxMipmapLevels g
	missingModel h
	modelGroups i
	apply (Lnet/minecraft/client/resources/model/ModelManager$ReloadState;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getAtlas (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlas; a
	getBlockModelShaper ()Lnet/minecraft/client/renderer/block/BlockModelShaper; b
	getMissingModel ()Lnet/minecraft/client/resources/model/BakedModel; a
	getModel (Lnet/minecraft/client/resources/model/ModelResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	loadBlockModels (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	loadBlockStates (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; b
	loadModels (Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/Map;Lnet/minecraft/client/resources/model/ModelBakery;)Lnet/minecraft/client/resources/model/ModelManager$ReloadState; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	requiresRender (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	updateMaxMipLevel (I)V a
net/minecraft/client/resources/model/ModelManager$ReloadState ggt$a
	atlasPreparations d
	missingModel b
	modelBakery a
	modelCache c
	readyForUpload e
	atlasPreparations ()Ljava/util/Map; d
	missingModel ()Lnet/minecraft/client/resources/model/BakedModel; b
	modelBakery ()Lnet/minecraft/client/resources/model/ModelBakery; a
	modelCache ()Ljava/util/Map; c
	readyForUpload ()Ljava/util/concurrent/CompletableFuture; e
net/minecraft/client/resources/model/ModelResourceLocation ggu
	VARIANT_SEPARATOR e
	variant f
	getVariant ()Ljava/lang/String; f
	lowercaseVariant (Ljava/lang/String;)Ljava/lang/String; j
	vanilla (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/resources/model/ModelResourceLocation; c
net/minecraft/client/resources/model/ModelState ggv
	getRotation ()Lcom/mojang/math/Transformation; b
	isUvLocked ()Z c
net/minecraft/client/resources/model/MultiPartBakedModel ggw
	hasAmbientOcclusion a
	isGui3d b
	overrides f
	particleIcon d
	selectorCache h
	selectors g
	transforms e
	usesBlockLight c
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/MultiPartBakedModel$Builder ggw$a
	selectors a
	add (Ljava/util/function/Predicate;Lnet/minecraft/client/resources/model/BakedModel;)V a
	build ()Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/resources/model/SimpleBakedModel ggx
	culledFaces b
	hasAmbientOcclusion c
	isGui3d d
	overrides h
	particleIcon f
	transforms g
	unculledFaces a
	usesBlockLight e
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/SimpleBakedModel$Builder ggx$a
	culledFaces b
	hasAmbientOcclusion d
	isGui3d g
	overrides c
	particleIcon e
	transforms h
	unculledFaces a
	usesBlockLight f
	addCulledFace (Lnet/minecraft/core/Direction;Lnet/minecraft/client/renderer/block/model/BakedQuad;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	addUnculledFace (Lnet/minecraft/client/renderer/block/model/BakedQuad;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	build ()Lnet/minecraft/client/resources/model/BakedModel; b
	item ()Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	particle (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
net/minecraft/client/resources/model/UnbakedModel ggy
	bake (Lnet/minecraft/client/resources/model/ModelBaker;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	resolveParents (Ljava/util/function/Function;)V a
net/minecraft/client/resources/model/WeightedBakedModel ggz
	list b
	totalWeight a
	wrapped c
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/WeightedBakedModel$Builder ggz$a
	list a
	add (Lnet/minecraft/client/resources/model/BakedModel;I)Lnet/minecraft/client/resources/model/WeightedBakedModel$Builder; a
	build ()Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/resources/server/DownloadedPackSource ghc
	EMPTY_SOURCE d
	LOGGER c
	LOG_ONLY_FEEDBACK e
	SERVER_NAME a
	SHA1 b
	downloadQueue j
	manager i
	minecraft f
	packFeedback l
	packIdSerialNumber m
	packSource g
	packType k
	pendingReload h
	allowServerPacks ()V g
	cleanupAfterDisconnect ()V i
	configureForLocalWorld ()V f
	configureForServerControl (Lnet/minecraft/network/Connection;Lnet/minecraft/client/resources/server/ServerPackManager$PackPromptStatus;)V a
	configureSource (Ljava/util/List;)Lnet/minecraft/server/packs/repository/RepositorySource; b
	createDownloadNotifier (I)Lnet/minecraft/util/HttpUtil$DownloadProgressListener; a
	createDownloader (Lnet/minecraft/server/packs/DownloadQueue;Ljava/util/concurrent/Executor;Lnet/minecraft/client/User;Ljava/net/Proxy;)Lnet/minecraft/client/resources/server/PackDownloader; a
	createPackResponseSender (Lnet/minecraft/network/Connection;)Lnet/minecraft/client/resources/server/PackLoadFeedback; a
	createReloadConfig ()Lnet/minecraft/client/resources/server/PackReloadConfig; j
	createRepositorySource ()Lnet/minecraft/server/packs/repository/RepositorySource; a
	createUpdateScheduler (Ljava/util/concurrent/Executor;)Ljava/lang/Runnable; a
	loadRequestedPacks (Ljava/util/List;)Ljava/util/List; a
	onRecovery ()V b
	onRecoveryFailure ()V c
	onReloadSuccess ()V d
	popAll ()V e
	popPack (Ljava/util/UUID;)V a
	pushLocalPack (Ljava/util/UUID;Ljava/nio/file/Path;)V a
	pushPack (Ljava/util/UUID;Ljava/net/URL;Ljava/lang/String;)V a
	rejectServerPacks ()V h
	startReload (Lnet/minecraft/client/resources/server/PackReloadConfig$Callbacks;)V a
	tryParseSha1Hash (Ljava/lang/String;)Lcom/google/common/hash/HashCode; a
	waitForPackFeedback (Ljava/util/UUID;)Ljava/util/concurrent/CompletableFuture; b
net/minecraft/client/resources/server/PackDownloader ghd
	download (Ljava/util/Map;Ljava/util/function/Consumer;)V a
net/minecraft/client/resources/server/PackLoadFeedback ghe
	reportFinalResult (Ljava/util/UUID;Lnet/minecraft/client/resources/server/PackLoadFeedback$FinalResult;)V a
	reportUpdate (Ljava/util/UUID;Lnet/minecraft/client/resources/server/PackLoadFeedback$Update;)V a
net/minecraft/client/resources/server/PackLoadFeedback$FinalResult ghe$a
	$VALUES f
	ACTIVATION_FAILED e
	APPLIED b
	DECLINED a
	DISCARDED c
	DOWNLOAD_FAILED d
	$values ()[Lnet/minecraft/client/resources/server/PackLoadFeedback$FinalResult; a
net/minecraft/client/resources/server/PackLoadFeedback$Update ghe$b
	$VALUES c
	ACCEPTED a
	DOWNLOADED b
	$values ()[Lnet/minecraft/client/resources/server/PackLoadFeedback$Update; a
net/minecraft/client/resources/server/PackReloadConfig ghf
net/minecraft/client/resources/server/PackReloadConfig$Callbacks ghf$a
	onFailure (Z)V a
	onSuccess ()V a
	packsToLoad ()Ljava/util/List; b
net/minecraft/client/resources/server/PackReloadConfig$IdAndPath ghf$b
	id a
	path b
	id ()Ljava/util/UUID; a
	path ()Ljava/nio/file/Path; b
net/minecraft/client/resources/server/ServerPackManager ghg
	downloader a
	packLoadFeedback b
	packPromptStatus e
	packs f
	reloadConfig c
	updateRequest d
	acceptPack (Lnet/minecraft/client/resources/server/ServerPackManager$ServerPackData;)V a
	allowServerPacks ()V b
	cleanupRemovedPacks ()V g
	findPackInfo (Ljava/util/UUID;)Lnet/minecraft/client/resources/server/ServerPackManager$ServerPackData; c
	markExistingPacksAsRemoved (Ljava/util/UUID;)V b
	onDownload (Ljava/util/Collection;Lnet/minecraft/server/packs/DownloadQueue$BatchResult;)V a
	popAll ()V a
	popPack (Ljava/util/UUID;)V a
	pushLocalPack (Ljava/util/UUID;Ljava/nio/file/Path;)V a
	pushNewPack (Ljava/util/UUID;Lnet/minecraft/client/resources/server/ServerPackManager$ServerPackData;)V a
	pushPack (Ljava/util/UUID;Ljava/net/URL;Lcom/google/common/hash/HashCode;)V a
	registerForUpdate ()V f
	rejectServerPacks ()V c
	resetPromptStatus ()V d
	tick ()V e
	triggerReloadIfNeeded ()V i
	updateDownloads ()Z h
net/minecraft/client/resources/server/ServerPackManager$ActivationStatus ghg$a
	$VALUES d
	ACTIVE c
	INACTIVE a
	PENDING b
	$values ()[Lnet/minecraft/client/resources/server/ServerPackManager$ActivationStatus; a
net/minecraft/client/resources/server/ServerPackManager$PackDownloadStatus ghg$b
	$VALUES d
	DONE c
	PENDING b
	REQUESTED a
	$values ()[Lnet/minecraft/client/resources/server/ServerPackManager$PackDownloadStatus; a
net/minecraft/client/resources/server/ServerPackManager$PackPromptStatus ghg$c
	$VALUES d
	ALLOWED b
	DECLINED c
	PENDING a
	$values ()[Lnet/minecraft/client/resources/server/ServerPackManager$PackPromptStatus; a
net/minecraft/client/resources/server/ServerPackManager$RemovalReason ghg$d
	$VALUES h
	ACTIVATION_FAILED b
	DECLINED c
	DISCARDED d
	DOWNLOAD_FAILED a
	SERVER_REMOVED e
	SERVER_REPLACED f
	serverResponse g
	$values ()[Lnet/minecraft/client/resources/server/ServerPackManager$RemovalReason; a
net/minecraft/client/resources/server/ServerPackManager$ServerPackData ghg$e
	activationStatus g
	downloadStatus f
	hash c
	id a
	path d
	promptAccepted h
	removalReason e
	url b
	isRemoved ()Z a
	setRemovalReasonIfNotSet (Lnet/minecraft/client/resources/server/ServerPackManager$RemovalReason;)V a
net/minecraft/client/resources/sounds/AbstractSoundInstance ghi
	attenuation k
	delay j
	location c
	looping i
	pitch e
	random m
	relative l
	sound a
	source b
	volume d
	x f
	y g
	z h
	getAttenuation ()Lnet/minecraft/client/resources/sounds/SoundInstance$Attenuation; k
	getDelay ()I e
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPitch ()F g
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F f
	getX ()D h
	getY ()D i
	getZ ()D j
	isLooping ()Z d
	isRelative ()Z l
	resolve (Lnet/minecraft/client/sounds/SoundManager;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
net/minecraft/client/resources/sounds/AbstractTickableSoundInstance ghj
	stopped n
	isStopped ()Z m
	stop ()V n
net/minecraft/client/resources/sounds/AmbientSoundHandler ghk
	tick ()V a
net/minecraft/client/resources/sounds/BeeAggressiveSoundInstance ghl
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; o
	shouldSwitchSounds ()Z p
net/minecraft/client/resources/sounds/BeeFlyingSoundInstance ghm
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; o
	shouldSwitchSounds ()Z p
net/minecraft/client/resources/sounds/BeeSoundInstance ghn
	PITCH_MIN q
	VOLUME_MAX p
	VOLUME_MIN o
	bee n
	hasSwitched r
	canPlaySound ()Z s
	canStartSilent ()Z r
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; o
	getMaxPitch ()F v
	getMinPitch ()F u
	shouldSwitchSounds ()Z p
	tick ()V q
net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler gho
	LOOP_SOUND_CROSS_FADE_TIME a
	SKY_MOOD_RECOVERY_RATE b
	additionsSettings i
	biomeManager e
	loopSounds g
	moodSettings h
	moodiness j
	player c
	previousBiome k
	random f
	soundManager d
	getMoodiness ()F b
	tick ()V a
net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler$LoopSoundInstance gho$a
	fade o
	fadeDirection n
	fadeIn ()V p
	fadeOut ()V o
	tick ()V q
net/minecraft/client/resources/sounds/BubbleColumnAmbientSoundHandler ghp
	firstTick c
	player a
	wasInBubbleColumn b
	tick ()V a
net/minecraft/client/resources/sounds/ElytraOnPlayerSoundInstance ghq
	DELAY n
	player o
	time p
	tick ()V q
net/minecraft/client/resources/sounds/EntityBoundSoundInstance ghr
	entity n
	canPlaySound ()Z s
	tick ()V q
net/minecraft/client/resources/sounds/GuardianAttackSoundInstance ghs
	PITCH_MIN p
	PITCH_SCALE q
	VOLUME_MIN n
	VOLUME_SCALE o
	guardian r
	canPlaySound ()Z s
	tick ()V q
net/minecraft/client/resources/sounds/MinecartSoundInstance ght
	PITCH_DELTA r
	PITCH_MAX q
	PITCH_MIN p
	VOLUME_MAX o
	VOLUME_MIN n
	minecart s
	pitch t
	canPlaySound ()Z s
	canStartSilent ()Z r
	tick ()V q
net/minecraft/client/resources/sounds/RidingMinecartSoundInstance ghu
	VOLUME_MAX o
	VOLUME_MIN n
	minecart q
	player p
	underwaterSound r
	canPlaySound ()Z s
	canStartSilent ()Z r
	tick ()V q
net/minecraft/client/resources/sounds/SimpleSoundInstance ghv
	forAmbientAddition (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; b
	forAmbientMood (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/util/RandomSource;DDD)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forLocalAmbience (Lnet/minecraft/sounds/SoundEvent;FF)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; b
	forMusic (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forRecord (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forUI (Lnet/minecraft/core/Holder;F)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forUI (Lnet/minecraft/sounds/SoundEvent;F)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forUI (Lnet/minecraft/sounds/SoundEvent;FF)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
net/minecraft/client/resources/sounds/SnifferSoundInstance ghw
	PITCH o
	VOLUME n
	sniffer p
	canPlaySound ()Z s
	tick ()V q
net/minecraft/client/resources/sounds/Sound ghx
	SOUND_LISTER a
	attenuationDistance i
	location b
	pitch d
	preload h
	stream g
	type f
	volume c
	weight e
	getAttenuationDistance ()I i
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPath ()Lnet/minecraft/resources/ResourceLocation; b
	getPitch ()Lnet/minecraft/util/valueproviders/SampledFloat; d
	getSound (Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; b
	getSound (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/client/resources/sounds/Sound; a
	getType ()Lnet/minecraft/client/resources/sounds/Sound$Type; f
	getVolume ()Lnet/minecraft/util/valueproviders/SampledFloat; c
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
	shouldPreload ()Z h
	shouldStream ()Z g
net/minecraft/client/resources/sounds/Sound$Type ghx$a
	$VALUES d
	FILE a
	SOUND_EVENT b
	name c
	$values ()[Lnet/minecraft/client/resources/sounds/Sound$Type; a
	getByName (Ljava/lang/String;)Lnet/minecraft/client/resources/sounds/Sound$Type; a
net/minecraft/client/resources/sounds/SoundEventRegistration ghy
	replace b
	sounds a
	subtitle c
	getSounds ()Ljava/util/List; a
	getSubtitle ()Ljava/lang/String; c
	isReplace ()Z b
net/minecraft/client/resources/sounds/SoundEventRegistrationSerializer ghz
	DEFAULT_FLOAT a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/resources/sounds/SoundEventRegistration; a
	getSound (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/sounds/Sound; b
	getSounds (Lcom/google/gson/JsonObject;)Ljava/util/List; a
	getType (Lcom/google/gson/JsonObject;Lnet/minecraft/client/resources/sounds/Sound$Type;)Lnet/minecraft/client/resources/sounds/Sound$Type; a
net/minecraft/client/resources/sounds/SoundInstance gia
	canPlaySound ()Z s
	canStartSilent ()Z r
	createUnseededRandom ()Lnet/minecraft/util/RandomSource; t
	getAttenuation ()Lnet/minecraft/client/resources/sounds/SoundInstance$Attenuation; k
	getDelay ()I e
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPitch ()F g
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F f
	getX ()D h
	getY ()D i
	getZ ()D j
	isLooping ()Z d
	isRelative ()Z l
	resolve (Lnet/minecraft/client/sounds/SoundManager;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
net/minecraft/client/resources/sounds/SoundInstance$Attenuation gia$a
	$VALUES c
	LINEAR b
	NONE a
	$values ()[Lnet/minecraft/client/resources/sounds/SoundInstance$Attenuation; a
net/minecraft/client/resources/sounds/TickableSoundInstance gib
	isStopped ()Z m
	tick ()V q
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundHandler gic
	CHANCE_PER_TICK a
	MINIMUM_TICK_DELAY d
	RARE_CHANCE_PER_TICK b
	ULTRA_RARE_CHANCE_PER_TICK c
	player e
	soundManager f
	tickDelay g
	tick ()V a
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances gid
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$SubSound gid$a
	player n
	tick ()V q
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance gid$b
	FADE_DURATION n
	fade p
	player o
	tick ()V q
net/minecraft/client/searchtree/FullTextSearchTree gif
	contents c
	filler d
	plainTextSearchTree e
	refresh ()V a
	searchPlainText (Ljava/lang/String;)Ljava/util/List; a
	searchResourceLocation (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/searchtree/IdSearchTree gig
	additionOrder a
	resourceLocationSearchTree b
	searchPlainText (Ljava/lang/String;)Ljava/util/List; a
	searchResourceLocation (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/searchtree/IntersectionIterator gih
	comparator c
	firstIterator a
	secondIterator b
net/minecraft/client/searchtree/MergingUniqueIterator gii
	comparator c
	firstIterator a
	secondIterator b
net/minecraft/client/searchtree/PlainTextSearchTree gij
	create (Ljava/util/List;Ljava/util/function/Function;)Lnet/minecraft/client/searchtree/PlainTextSearchTree; a
	empty ()Lnet/minecraft/client/searchtree/PlainTextSearchTree; a
net/minecraft/client/searchtree/RefreshableSearchTree gik
	empty ()Lnet/minecraft/client/searchtree/RefreshableSearchTree; b
	refresh ()V a
net/minecraft/client/searchtree/ResourceLocationSearchTree gil
	create (Ljava/util/List;Ljava/util/function/Function;)Lnet/minecraft/client/searchtree/ResourceLocationSearchTree; a
	empty ()Lnet/minecraft/client/searchtree/ResourceLocationSearchTree; a
	searchNamespace (Ljava/lang/String;)Ljava/util/List; a
	searchPath (Ljava/lang/String;)Ljava/util/List; b
net/minecraft/client/searchtree/SearchRegistry gim
	CREATIVE_NAMES a
	CREATIVE_TAGS b
	RECIPE_COLLECTIONS c
	searchTrees d
	getSupplier (Lnet/minecraft/client/searchtree/SearchRegistry$Key;)Lnet/minecraft/client/searchtree/SearchRegistry$TreeEntry; b
	getTree (Lnet/minecraft/client/searchtree/SearchRegistry$Key;)Lnet/minecraft/client/searchtree/SearchTree; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	populate (Lnet/minecraft/client/searchtree/SearchRegistry$Key;Ljava/util/List;)V a
	register (Lnet/minecraft/client/searchtree/SearchRegistry$Key;Lnet/minecraft/client/searchtree/SearchRegistry$TreeBuilderSupplier;)V a
net/minecraft/client/searchtree/SearchRegistry$Key gim$a
net/minecraft/client/searchtree/SearchRegistry$TreeBuilderSupplier gim$b
net/minecraft/client/searchtree/SearchRegistry$TreeEntry gim$c
	factory a
	tree b
	populate (Ljava/util/List;)V a
	refresh ()V a
net/minecraft/client/searchtree/SearchTree gin
net/minecraft/client/searchtree/SuffixArray gio
	DEBUG_ARRAY c
	DEBUG_COMPARISONS b
	END_OF_DATA f
	END_OF_TEXT_MARKER e
	LOGGER d
	chars g
	list a
	maxStringLength k
	offsets j
	suffixToT i
	wordStarts h
	add (Ljava/lang/Object;Ljava/lang/String;)V a
	compare (Ljava/lang/String;I)I a
	generate ()V a
	getString (I)Ljava/lang/String; a
	print ()V b
	search (Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/server/IntegratedPlayerList giq
	playerData a
	canPlayerLogin (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/Component; a
	getServer ()Lnet/minecraft/client/server/IntegratedServer; b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getSingleplayerData ()Lnet/minecraft/nbt/CompoundTag; r
	save (Lnet/minecraft/server/level/ServerPlayer;)V b
net/minecraft/client/server/IntegratedServer gir
	LOGGER l
	MIN_SIM_DISTANCE m
	lanPinger r
	minecraft n
	paused o
	previousSimulationDistance t
	publishedGameType q
	publishedPort p
	uuid s
	fillServerSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; a
	forceSynchronousWrites ()Z aW
	getForcedGameType ()Lnet/minecraft/world/level/GameType; bb
	getFunctionCompilationLevel ()I j
	getModdedStatus ()Lnet/minecraft/util/ModCheck; M
	getOperatorUserPermissionLevel ()I i
	getPort ()I O
	getRateLimitPacketsPerSecond ()I m
	getScaledTrackingDistance (I)I b
	getServerDirectory ()Ljava/io/File; z
	halt (Z)V a
	initServer ()Z e
	isCommandBlockEnabled ()Z o
	isDedicatedServer ()Z l
	isEpollEnabled ()Z n
	isPaused ()Z A
	isPublished ()Z p
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	logTickTime (J)V a
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	publishServer (Lnet/minecraft/world/level/GameType;ZI)Z a
	setDefaultGameType (Lnet/minecraft/world/level/GameType;)V a
	setUUID (Ljava/util/UUID;)V a
	shouldInformAdmins ()Z W_
	shouldRconBroadcast ()Z k
	stopServer ()V t
	tickPaused ()V a
	tickServer (Ljava/util/function/BooleanSupplier;)V a
net/minecraft/client/server/LanServer gis
	address b
	motd a
	pingTime c
	getAddress ()Ljava/lang/String; b
	getMotd ()Ljava/lang/String; a
	updatePingTime ()V c
net/minecraft/client/server/LanServerDetection git
	LOGGER b
	UNIQUE_THREAD_ID a
net/minecraft/client/server/LanServerDetection$LanServerDetector git$a
	pingGroup b
	serverList a
	socket c
net/minecraft/client/server/LanServerDetection$LanServerList git$b
	isDirty b
	servers a
	addServer (Ljava/lang/String;Ljava/net/InetAddress;)V a
	takeDirtyServers ()Ljava/util/List; a
net/minecraft/client/server/LanServerPinger giu
	LOGGER d
	MULTICAST_GROUP a
	PING_INTERVAL e
	PING_PORT b
	UNIQUE_THREAD_ID c
	isRunning h
	motd f
	serverAddress i
	socket g
	createPingString (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	parseAddress (Ljava/lang/String;)Ljava/lang/String; b
	parseMotd (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/client/sounds/AudioStream giw
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
net/minecraft/client/sounds/ChannelAccess gix
	channels a
	executor c
	library b
	clear ()V b
	createHandle (Lcom/mojang/blaze3d/audio/Library$Pool;)Ljava/util/concurrent/CompletableFuture; a
	executeOnChannels (Ljava/util/function/Consumer;)V a
	scheduleTick ()V a
net/minecraft/client/sounds/ChannelAccess$ChannelHandle gix$a
	channel b
	stopped c
	execute (Ljava/util/function/Consumer;)V a
	isStopped ()Z a
	release ()V b
net/minecraft/client/sounds/LoopingAudioStream giy
	bufferedInputStream c
	provider a
	stream b
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
net/minecraft/client/sounds/LoopingAudioStream$AudioStreamProvider giy$a
net/minecraft/client/sounds/LoopingAudioStream$NoCloseBuffer giy$b
net/minecraft/client/sounds/MusicManager giz
	STARTING_DELAY a
	currentMusic d
	minecraft c
	nextSongDelay e
	random b
	isPlayingMusic (Lnet/minecraft/sounds/Music;)Z c
	startPlaying (Lnet/minecraft/sounds/Music;)V a
	stopPlaying ()V b
	stopPlaying (Lnet/minecraft/sounds/Music;)V b
	tick ()V a
net/minecraft/client/sounds/SoundBufferLibrary gja
	cache b
	resourceManager a
	clear ()V a
	getCompleteBuffer (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/concurrent/CompletableFuture; a
	getStream (Lnet/minecraft/resources/ResourceLocation;Z)Ljava/util/concurrent/CompletableFuture; a
	preload (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/sounds/SoundEngine gjb
	DEFAULT_DEVICE_CHECK_INTERVAL_MS l
	LOGGER e
	MARKER d
	MIN_SOURCE_LIFETIME j
	MISSING_SOUND a
	ONLY_WARN_ONCE k
	OPEN_AL_SOFT_PREFIX b
	OPEN_AL_SOFT_PREFIX_LENGTH c
	PITCH_MAX g
	PITCH_MIN f
	VOLUME_MAX i
	VOLUME_MIN h
	channelAccess t
	devicePoolState w
	executor s
	instanceBySource y
	instanceToChannel x
	lastDeviceCheckTime v
	library p
	listener q
	listeners C
	loaded o
	options n
	preloadQueue E
	queuedSounds A
	queuedTickableSounds D
	soundBuffers r
	soundDeleteTime B
	soundManager m
	tickCount u
	tickingSounds z
	addEventListener (Lnet/minecraft/client/sounds/SoundEventListener;)V a
	calculatePitch (Lnet/minecraft/client/resources/sounds/SoundInstance;)F g
	calculateVolume (FLnet/minecraft/sounds/SoundSource;)F a
	calculateVolume (Lnet/minecraft/client/resources/sounds/SoundInstance;)F h
	destroy ()V b
	emergencyShutdown ()V c
	getAvailableSoundDevices ()Ljava/util/List; h
	getDebugString ()Ljava/lang/String; g
	getListenerTransform ()Lcom/mojang/blaze3d/audio/ListenerTransform; i
	getVolume (Lnet/minecraft/sounds/SoundSource;)F a
	isActive (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z b
	loadLibrary ()V j
	pause ()V e
	play (Lnet/minecraft/client/resources/sounds/SoundInstance;)V c
	playDelayed (Lnet/minecraft/client/resources/sounds/SoundInstance;I)V a
	queueTickingSound (Lnet/minecraft/client/resources/sounds/TickableSoundInstance;)V a
	reload ()V a
	removeEventListener (Lnet/minecraft/client/sounds/SoundEventListener;)V b
	requestPreload (Lnet/minecraft/client/resources/sounds/Sound;)V a
	requiresManualLooping (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z d
	resume ()V f
	shouldChangeDevice ()Z k
	shouldLoopAutomatically (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z f
	shouldLoopManually (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z e
	stop (Lnet/minecraft/client/resources/sounds/SoundInstance;)V a
	stop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;)V a
	stopAll ()V d
	tick (Z)V a
	tickNonPaused ()V l
	updateCategoryVolume (Lnet/minecraft/sounds/SoundSource;F)V a
	updateSource (Lnet/minecraft/client/Camera;)V a
net/minecraft/client/sounds/SoundEngine$DeviceCheckState gjb$a
	$VALUES d
	CHANGE_DETECTED b
	NO_CHANGE c
	ONGOING a
	$values ()[Lnet/minecraft/client/sounds/SoundEngine$DeviceCheckState; a
net/minecraft/client/sounds/SoundEngineExecutor gjc
	shutdown b
	thread a
	createThread ()Ljava/lang/Thread; b
	flush ()V a
	getRunningThread ()Ljava/lang/Thread; aw
	run ()V c
	shouldRun (Ljava/lang/Runnable;)Z e
	waitForTasks ()V bv
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; f
net/minecraft/client/sounds/SoundEventListener gjd
	onPlaySound (Lnet/minecraft/client/resources/sounds/SoundInstance;Lnet/minecraft/client/sounds/WeighedSoundEvents;F)V a
net/minecraft/client/sounds/SoundManager gje
	EMPTY_SOUND a
	GSON g
	INTENTIONALLY_EMPTY_SOUND d
	INTENTIONALLY_EMPTY_SOUND_EVENT c
	INTENTIONALLY_EMPTY_SOUND_LOCATION b
	LOGGER e
	SOUNDS_PATH f
	SOUND_EVENT_REGISTRATION_TYPE h
	registry i
	soundCache k
	soundEngine j
	addListener (Lnet/minecraft/client/sounds/SoundEventListener;)V a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/sounds/SoundManager$Preparations;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	destroy ()V g
	emergencyShutdown ()V h
	getAvailableSoundDevices ()Ljava/util/List; a
	getAvailableSounds ()Ljava/util/Collection; d
	getDebugString ()Ljava/lang/String; j
	getListenerTransform ()Lcom/mojang/blaze3d/audio/ListenerTransform; b
	getSoundEvent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
	isActive (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z c
	pause ()V e
	play (Lnet/minecraft/client/resources/sounds/SoundInstance;)V a
	playDelayed (Lnet/minecraft/client/resources/sounds/SoundInstance;I)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/sounds/SoundManager$Preparations; a
	queueTickingSound (Lnet/minecraft/client/resources/sounds/TickableSoundInstance;)V a
	reload ()V k
	removeListener (Lnet/minecraft/client/sounds/SoundEventListener;)V b
	resume ()V i
	stop ()V f
	stop (Lnet/minecraft/client/resources/sounds/SoundInstance;)V b
	stop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;)V a
	tick (Z)V a
	updateSource (Lnet/minecraft/client/Camera;)V a
	updateSourceVolume (Lnet/minecraft/sounds/SoundSource;F)V a
	validateSoundResource (Lnet/minecraft/client/resources/sounds/Sound;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/resources/ResourceProvider;)Z a
net/minecraft/client/sounds/SoundManager$Preparations gje$a
	registry a
	soundCache b
	apply (Ljava/util/Map;Ljava/util/Map;Lnet/minecraft/client/sounds/SoundEngine;)V a
	handleRegistration (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/sounds/SoundEventRegistration;)V a
	listResources (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/sounds/WeighedSoundEvents gjf
	list a
	subtitle b
	addSound (Lnet/minecraft/client/sounds/Weighted;)V a
	getSound (Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; b
	getSound (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/client/resources/sounds/Sound; a
	getSubtitle ()Lnet/minecraft/network/chat/Component; a
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
net/minecraft/client/sounds/Weighted gjg
	getSound (Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; b
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
net/minecraft/client/telemetry/ClientTelemetryManager gji
	EXECUTOR b
	THREAD_COUNT a
	deviceSessionProperties e
	logDirectory f
	logManager g
	minecraft c
	outsideSessionSender h
	userApiService d
	createEventSender ()Lnet/minecraft/client/telemetry/TelemetryEventSender; c
	createWorldSessionManager (ZLjava/time/Duration;Ljava/lang/String;)Lnet/minecraft/client/telemetry/WorldSessionTelemetryManager; a
	getLogDirectory ()Ljava/nio/file/Path; b
	getOutsideSessionSender ()Lnet/minecraft/client/telemetry/TelemetryEventSender; a
net/minecraft/client/telemetry/TelemetryEventInstance gjj
	CODEC a
	properties c
	type b
	export (Lcom/mojang/authlib/minecraft/TelemetrySession;)Lcom/mojang/authlib/minecraft/TelemetryEvent; a
	properties ()Lnet/minecraft/client/telemetry/TelemetryPropertyMap; b
	type ()Lnet/minecraft/client/telemetry/TelemetryEventType; a
net/minecraft/client/telemetry/TelemetryEventLog gjk
	LOGGER a
	log b
	mailbox c
	logger ()Lnet/minecraft/client/telemetry/TelemetryEventLogger; a
net/minecraft/client/telemetry/TelemetryEventLogger gjl
net/minecraft/client/telemetry/TelemetryEventSender gjm
	DISABLED a
net/minecraft/client/telemetry/TelemetryEventType gjn
	ADVANCEMENT_MADE f
	CODEC a
	GAME_LOAD_TIMES g
	GLOBAL_PROPERTIES i
	PERFORMANCE_METRICS c
	REGISTRY h
	WORLD_LOADED b
	WORLD_LOAD_TIMES d
	WORLD_SESSION_PROPERTIES j
	WORLD_UNLOADED e
	codec o
	exportKey l
	id k
	isOptIn n
	properties m
	builder (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/telemetry/TelemetryEventType$Builder; a
	codec ()Lcom/mojang/serialization/Codec; c
	contains (Lnet/minecraft/client/telemetry/TelemetryProperty;)Z a
	description ()Lnet/minecraft/network/chat/MutableComponent; f
	export (Lcom/mojang/authlib/minecraft/TelemetrySession;Lnet/minecraft/client/telemetry/TelemetryPropertyMap;)Lcom/mojang/authlib/minecraft/TelemetryEvent; a
	id ()Ljava/lang/String; a
	isOptIn ()Z d
	makeTranslation (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; a
	properties ()Ljava/util/List; b
	title ()Lnet/minecraft/network/chat/MutableComponent; e
	values ()Ljava/util/List; g
net/minecraft/client/telemetry/TelemetryEventType$Builder gjn$a
	exportKey b
	id a
	isOptIn d
	properties c
	define (Lnet/minecraft/client/telemetry/TelemetryProperty;)Lnet/minecraft/client/telemetry/TelemetryEventType$Builder; a
	defineAll (Ljava/util/List;)Lnet/minecraft/client/telemetry/TelemetryEventType$Builder; a
	optIn ()Lnet/minecraft/client/telemetry/TelemetryEventType$Builder; a
	register ()Lnet/minecraft/client/telemetry/TelemetryEventType; b
net/minecraft/client/telemetry/TelemetryLogManager gjo
	EXPIRY_DAYS c
	LOGGER a
	RAW_EXTENSION b
	directory d
	sessionLog e
	open (Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture; a
	openLogger ()Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/telemetry/TelemetryProperty gjp
	ADVANCEMENT_GAME_TIME E
	ADVANCEMENT_ID D
	CLIENT_ID b
	CLIENT_MODDED g
	DEDICATED_MEMORY_KB w
	EVENT_TIMESTAMP_UTC m
	FRAME_RATE_SAMPLES r
	GAME_MODE n
	GAME_VERSION d
	LAUNCHER_NAME h
	LOAD_TIME_BOOTSTRAP_MS B
	LOAD_TIME_LOADING_OVERLAY_MS C
	LOAD_TIME_PRE_WINDOW_MS A
	LOAD_TIME_TOTAL_TIME_MS z
	MINECRAFT_SESSION_ID c
	NEW_WORLD y
	NUMBER_OF_SAMPLES u
	OPERATING_SYSTEM e
	OPT_IN l
	PLATFORM f
	REALMS_MAP_CONTENT o
	RENDER_DISTANCE v
	RENDER_TIME_SAMPLES s
	SECONDS_SINCE_LOAD p
	SERVER_MODDED j
	SERVER_TYPE k
	TICKS_SINCE_LOAD q
	TIMESTAMP_FORMATTER J
	USED_MEMORY_SAMPLES t
	USER_ID a
	WORLD_LOAD_TIME_MS x
	WORLD_SESSION_ID i
	codec H
	exportKey G
	exporter I
	id F
	bool (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/telemetry/TelemetryProperty; a
	codec ()Lcom/mojang/serialization/Codec; d
	create (Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Codec;Lnet/minecraft/client/telemetry/TelemetryProperty$Exporter;)Lnet/minecraft/client/telemetry/TelemetryProperty; a
	export (Lnet/minecraft/client/telemetry/TelemetryPropertyMap;Lcom/mojang/authlib/minecraft/TelemetryPropertyContainer;)V a
	exportKey ()Ljava/lang/String; c
	exporter ()Lnet/minecraft/client/telemetry/TelemetryProperty$Exporter; e
	gameLoadMeasurement (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/telemetry/TelemetryProperty; f
	id ()Ljava/lang/String; b
	integer (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/telemetry/TelemetryProperty; c
	longSamples (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/telemetry/TelemetryProperty; g
	makeLong (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/telemetry/TelemetryProperty; d
	string (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/telemetry/TelemetryProperty; b
	title ()Lnet/minecraft/network/chat/MutableComponent; a
	uuid (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/telemetry/TelemetryProperty; e
net/minecraft/client/telemetry/TelemetryProperty$Exporter gjp$a
net/minecraft/client/telemetry/TelemetryProperty$GameMode gjp$b
	$VALUES i
	ADVENTURE c
	CODEC f
	CREATIVE b
	HARDCORE e
	SPECTATOR d
	SURVIVAL a
	id h
	key g
	$values ()[Lnet/minecraft/client/telemetry/TelemetryProperty$GameMode; b
	getSerializedName ()Ljava/lang/String; c
	id ()I a
net/minecraft/client/telemetry/TelemetryProperty$ServerType gjp$c
	$VALUES f
	CODEC d
	LOCAL b
	OTHER c
	REALM a
	key e
	$values ()[Lnet/minecraft/client/telemetry/TelemetryProperty$ServerType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/client/telemetry/TelemetryPropertyMap gjq
	entries a
	builder ()Lnet/minecraft/client/telemetry/TelemetryPropertyMap$Builder; a
	createCodec (Ljava/util/List;)Lcom/mojang/serialization/Codec; a
	get (Lnet/minecraft/client/telemetry/TelemetryProperty;)Ljava/lang/Object; a
	propertySet ()Ljava/util/Set; b
net/minecraft/client/telemetry/TelemetryPropertyMap$Builder gjq$a
	entries a
	build ()Lnet/minecraft/client/telemetry/TelemetryPropertyMap; a
	put (Lnet/minecraft/client/telemetry/TelemetryProperty;Ljava/lang/Object;)Lnet/minecraft/client/telemetry/TelemetryPropertyMap$Builder; a
	putAll (Lnet/minecraft/client/telemetry/TelemetryPropertyMap;)Lnet/minecraft/client/telemetry/TelemetryPropertyMap$Builder; a
	putIfNotNull (Lnet/minecraft/client/telemetry/TelemetryProperty;Ljava/lang/Object;)Lnet/minecraft/client/telemetry/TelemetryPropertyMap$Builder; b
net/minecraft/client/telemetry/WorldSessionTelemetryManager gjr
	eventSender b
	performanceMetricsEvent e
	worldLoadEvent c
	worldLoadTimesEvent f
	worldSessionId a
	worldUnloadEvent d
	onAdvancementDone (Lnet/minecraft/world/level/Level;Lnet/minecraft/advancements/AdvancementHolder;)V a
	onDisconnect ()V c
	onPlayerInfoReceived (Lnet/minecraft/world/level/GameType;Z)V a
	onServerBrandReceived (Ljava/lang/String;)V a
	setTime (J)V a
	tick ()V a
	worldSessionStart ()V b
net/minecraft/client/telemetry/events/AggregatedTelemetryEvent gjs
	SAMPLES_PER_EVENT b
	SAMPLE_INTERVAL_MS a
	lastSampleTime e
	sampleCount c
	ticking d
	getSampleCount ()I e
	sendEvent (Lnet/minecraft/client/telemetry/TelemetryEventSender;)V b
	shouldSentEvent ()Z c
	shouldTakeSample ()Z b
	start ()V a
	stop ()V d
	takeSample ()V f
	tick (Lnet/minecraft/client/telemetry/TelemetryEventSender;)V a
net/minecraft/client/telemetry/events/GameLoadTimesEvent gjt
	INSTANCE a
	LOGGER b
	bootstrapTime e
	measurements d
	timeSource c
	beginStep (Lnet/minecraft/client/telemetry/TelemetryProperty;)V a
	beginStep (Lnet/minecraft/client/telemetry/TelemetryProperty;Lcom/google/common/base/Stopwatch;)V a
	beginStep (Lnet/minecraft/client/telemetry/TelemetryProperty;Ljava/util/function/Function;)V a
	endStep (Lnet/minecraft/client/telemetry/TelemetryProperty;)V b
	send (Lnet/minecraft/client/telemetry/TelemetryEventSender;)V a
	setBootstrapTime (J)V a
net/minecraft/client/telemetry/events/GameLoadTimesEvent$Measurement gjt$a
	CODEC a
	millis b
	millis ()I a
net/minecraft/client/telemetry/events/PerformanceMetricsEvent gju
	DEDICATED_MEMORY_KB a
	fpsSamples b
	frameTimeSamples c
	usedMemorySamples d
	resetValues ()V g
	sendEvent (Lnet/minecraft/client/telemetry/TelemetryEventSender;)V b
	takeSample ()V f
	takeUsedMemorySample ()V h
	tick (Lnet/minecraft/client/telemetry/TelemetryEventSender;)V a
	toKilobytes (J)J a
net/minecraft/client/telemetry/events/WorldLoadEvent gjv
	eventSent a
	gameMode b
	minigameName d
	serverBrand c
	addProperties (Lnet/minecraft/client/telemetry/TelemetryPropertyMap$Builder;)V a
	getServerType ()Lnet/minecraft/client/telemetry/TelemetryProperty$ServerType; a
	send (Lnet/minecraft/client/telemetry/TelemetryEventSender;)Z a
	setGameMode (Lnet/minecraft/world/level/GameType;Z)V a
	setServerBrand (Ljava/lang/String;)V a
net/minecraft/client/telemetry/events/WorldLoadTimesEvent gjw
	newWorld a
	worldLoadDuration b
	send (Lnet/minecraft/client/telemetry/TelemetryEventSender;)V a
net/minecraft/client/telemetry/events/WorldUnloadEvent gjx
	NOT_TRACKING_TIME a
	lastGameTime d
	totalTicks c
	worldLoadedTime b
	getTimeInSecondsSinceLoad (Ljava/time/Instant;)I a
	onPlayerInfoReceived ()V a
	send (Lnet/minecraft/client/telemetry/TelemetryEventSender;)V a
	setTime (J)V a
net/minecraft/client/tutorial/BundleTutorial gka
	options b
	toast c
	tutorial a
	clearToast ()V b
	onInventoryAction (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V a
	showToast ()V a
net/minecraft/client/tutorial/CompletedTutorialStepInstance gkb
net/minecraft/client/tutorial/CraftPlanksTutorialStep gkc
	CRAFT_DESCRIPTION c
	CRAFT_TITLE b
	HINT_DELAY a
	timeWaiting f
	toast e
	tutorial d
	clear ()V b
	hasCraftedPlanksPreviously (Lnet/minecraft/client/player/LocalPlayer;Lnet/minecraft/tags/TagKey;)Z a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	tick ()V a
net/minecraft/client/tutorial/FindTreeTutorialStepInstance gkd
	DESCRIPTION c
	HINT_DELAY a
	TITLE b
	timeWaiting f
	toast e
	tutorial d
	clear ()V b
	hasCollectedTreeItems (Lnet/minecraft/client/player/LocalPlayer;)Z b
	hasPunchedTreesPreviously (Lnet/minecraft/client/player/LocalPlayer;)Z a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	tick ()V a
net/minecraft/client/tutorial/MovementTutorialStepInstance gke
	INCOMPLETE e
	LOOK_DESCRIPTION i
	LOOK_HINT_DELAY d
	LOOK_TITLE h
	MINIMUM_TIME_LOOKED b
	MINIMUM_TIME_MOVED a
	MOVE_DESCRIPTION g
	MOVE_HINT_DELAY c
	MOVE_TITLE f
	lookCompleted s
	lookToast l
	moveCompleted r
	moveToast k
	moved p
	timeLooked o
	timeMoved n
	timeWaiting m
	turned q
	tutorial j
	clear ()V b
	onInput (Lnet/minecraft/client/player/Input;)V a
	onMouse (DD)V a
	tick ()V a
net/minecraft/client/tutorial/OpenInventoryTutorialStep gkf
	DESCRIPTION c
	HINT_DELAY a
	TITLE b
	timeWaiting f
	toast e
	tutorial d
	clear ()V b
	onOpenInventory ()V c
	tick ()V a
net/minecraft/client/tutorial/PunchTreeTutorialStepInstance gkg
	DESCRIPTION c
	HINT_DELAY a
	TITLE b
	resetCount g
	timeWaiting f
	toast e
	tutorial d
	clear ()V b
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	tick ()V a
net/minecraft/client/tutorial/Tutorial gkh
	bundleTutorial d
	instance b
	minecraft a
	timedToasts c
	addTimedToast (Lnet/minecraft/client/gui/components/toasts/TutorialToast;I)V a
	getMinecraft ()Lnet/minecraft/client/Minecraft; e
	isSurvival ()Z f
	key (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onInput (Lnet/minecraft/client/player/Input;)V a
	onInventoryAction (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	onMouse (DD)V a
	onOpenInventory ()V a
	removeTimedToast (Lnet/minecraft/client/gui/components/toasts/TutorialToast;)V a
	setStep (Lnet/minecraft/client/tutorial/TutorialSteps;)V a
	start ()V c
	stop ()V b
	tick ()V d
net/minecraft/client/tutorial/Tutorial$TimedToast gkh$a
	durationTicks b
	progress c
	toast a
	updateProgress ()Z a
net/minecraft/client/tutorial/TutorialStepInstance gki
	clear ()V b
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onInput (Lnet/minecraft/client/player/Input;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	onMouse (DD)V a
	onOpenInventory ()V c
	tick ()V a
net/minecraft/client/tutorial/TutorialSteps gkj
	$VALUES i
	CRAFT_PLANKS e
	FIND_TREE b
	MOVEMENT a
	NONE f
	OPEN_INVENTORY d
	PUNCH_TREE c
	constructor h
	name g
	$values ()[Lnet/minecraft/client/tutorial/TutorialSteps; b
	create (Lnet/minecraft/client/tutorial/Tutorial;)Lnet/minecraft/client/tutorial/TutorialStepInstance; a
	getByName (Ljava/lang/String;)Lnet/minecraft/client/tutorial/TutorialSteps; a
	getName ()Ljava/lang/String; a
net/minecraft/commands/BrigadierExceptions dl
	DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR z
	DISPATCHER_PARSE_EXCEPTION A
	DISPATCHER_UNKNOWN_ARGUMENT y
	DISPATCHER_UNKNOWN_COMMAND x
	DOUBLE_TOO_BIG b
	DOUBLE_TOO_SMALL a
	FLOAT_TOO_BIG d
	FLOAT_TOO_SMALL c
	INTEGER_TOO_BIG f
	INTEGER_TOO_SMALL e
	LITERAL_INCORRECT i
	LONG_TOO_BIG h
	LONG_TOO_SMALL g
	READER_EXPECTED_BOOL v
	READER_EXPECTED_DOUBLE s
	READER_EXPECTED_END_OF_QUOTE k
	READER_EXPECTED_FLOAT u
	READER_EXPECTED_INT o
	READER_EXPECTED_LONG q
	READER_EXPECTED_START_OF_QUOTE j
	READER_EXPECTED_SYMBOL w
	READER_INVALID_BOOL m
	READER_INVALID_DOUBLE r
	READER_INVALID_ESCAPE l
	READER_INVALID_FLOAT t
	READER_INVALID_INT n
	READER_INVALID_LONG p
net/minecraft/commands/CacheableFunction dm
	CODEC a
	function d
	id b
	resolved c
	get (Lnet/minecraft/server/ServerFunctionManager;)Ljava/util/Optional; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/CommandBuildContext dn
	configurable (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/commands/CommandBuildContext$Configurable; a
	holderLookup (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/HolderLookup; a
	simple (Lnet/minecraft/core/HolderLookup$Provider;Lnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/commands/CommandBuildContext; a
net/minecraft/commands/CommandBuildContext$Configurable dn$a
	missingTagAccessPolicy (Lnet/minecraft/commands/CommandBuildContext$MissingTagAccessPolicy;)V a
net/minecraft/commands/CommandBuildContext$MissingTagAccessPolicy dn$b
	$VALUES c
	CREATE_NEW a
	FAIL b
	$values ()[Lnet/minecraft/commands/CommandBuildContext$MissingTagAccessPolicy; a
net/minecraft/commands/CommandResultCallback dp
	EMPTY a
net/minecraft/commands/CommandSigningContext dq
	ANONYMOUS a
	getArgument (Ljava/lang/String;)Lnet/minecraft/network/chat/PlayerChatMessage; a
net/minecraft/commands/CommandSigningContext$SignedArguments dq$a
	arguments b
	arguments ()Ljava/util/Map; a
	getArgument (Ljava/lang/String;)Lnet/minecraft/network/chat/PlayerChatMessage; a
net/minecraft/commands/CommandSource dr
	NULL a
	acceptsFailure ()Z x_
	acceptsSuccess ()Z l_
	alwaysAccepts ()Z m_
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	shouldInformAdmins ()Z W_
net/minecraft/commands/CommandSourceStack ds
	ERROR_NOT_ENTITY b
	ERROR_NOT_PLAYER a
	anchor m
	chatMessageChainer p
	displayName h
	entity k
	level e
	permissionLevel f
	resultCallback l
	rotation n
	server i
	signingContext o
	silent j
	source c
	textName g
	worldPosition d
	broadcastToAdmins (Lnet/minecraft/network/chat/Component;)V c
	callback ()Lnet/minecraft/commands/CommandResultCallback; p
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; a
	dispatcher ()Lcom/mojang/brigadier/CommandDispatcher; x
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; w
	facing (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)Lnet/minecraft/commands/CommandSourceStack; a
	facing (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/commands/CommandSourceStack; b
	getAllTeams ()Ljava/util/Collection; r
	getAnchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; m
	getAvailableSounds ()Ljava/util/stream/Stream; s
	getChatMessageChainer ()Lnet/minecraft/util/TaskChainer; o
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
	getEntity ()Lnet/minecraft/world/entity/Entity; f
	getEntityOrException ()Lnet/minecraft/world/entity/Entity; g
	getLevel ()Lnet/minecraft/server/level/ServerLevel; e
	getOnlinePlayerNames ()Ljava/util/Collection; q
	getPlayer ()Lnet/minecraft/server/level/ServerPlayer; i
	getPlayerOrException ()Lnet/minecraft/server/level/ServerPlayer; h
	getPosition ()Lnet/minecraft/world/phys/Vec3; d
	getRecipeNames ()Ljava/util/stream/Stream; t
	getRotation ()Lnet/minecraft/world/phys/Vec2; k
	getServer ()Lnet/minecraft/server/MinecraftServer; l
	getSigningContext ()Lnet/minecraft/commands/CommandSigningContext; n
	getTextName ()Ljava/lang/String; c
	handleError (Lcom/mojang/brigadier/exceptions/CommandExceptionType;Lcom/mojang/brigadier/Message;ZLnet/minecraft/commands/execution/TraceCallbacks;)V a
	hasPermission (I)Z c
	isPlayer ()Z j
	isSilent ()Z y
	levels ()Ljava/util/Set; u
	registryAccess ()Lnet/minecraft/core/RegistryAccess; v
	sendChatMessage (Lnet/minecraft/network/chat/OutgoingChatMessage;ZLnet/minecraft/network/chat/ChatType$Bound;)V a
	sendFailure (Lnet/minecraft/network/chat/Component;)V b
	sendSuccess (Ljava/util/function/Supplier;Z)V a
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	shouldFilterMessageTo (Lnet/minecraft/server/level/ServerPlayer;)Z a
	suggestRegistryElements (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; a
	withAnchor (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)Lnet/minecraft/commands/CommandSourceStack; a
	withCallback (Lnet/minecraft/commands/CommandResultCallback;)Lnet/minecraft/commands/CommandSourceStack; a
	withCallback (Lnet/minecraft/commands/CommandResultCallback;)Lnet/minecraft/commands/ExecutionCommandSource; b
	withCallback (Lnet/minecraft/commands/CommandResultCallback;Ljava/util/function/BinaryOperator;)Lnet/minecraft/commands/CommandSourceStack; a
	withEntity (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/commands/CommandSourceStack; a
	withLevel (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/commands/CommandSourceStack; a
	withMaximumPermission (I)Lnet/minecraft/commands/CommandSourceStack; b
	withPermission (I)Lnet/minecraft/commands/CommandSourceStack; a
	withPosition (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/commands/CommandSourceStack; a
	withRotation (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/commands/CommandSourceStack; a
	withSigningContext (Lnet/minecraft/commands/CommandSigningContext;Lnet/minecraft/util/TaskChainer;)Lnet/minecraft/commands/CommandSourceStack; a
	withSource (Lnet/minecraft/commands/CommandSource;)Lnet/minecraft/commands/CommandSourceStack; a
	withSuppressedOutput ()Lnet/minecraft/commands/CommandSourceStack; a
net/minecraft/commands/Commands dt
	CURRENT_EXECUTION_CONTEXT f
	LEVEL_ADMINS d
	LEVEL_ALL a
	LEVEL_GAMEMASTERS c
	LEVEL_MODERATORS b
	LEVEL_OWNERS e
	LOGGER g
	dispatcher h
	argument (Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; a
	createValidationContext (Lnet/minecraft/core/HolderLookup$Provider;)Lnet/minecraft/commands/CommandBuildContext; a
	createValidator (Lnet/minecraft/commands/Commands$ParseFunction;)Ljava/util/function/Predicate; a
	executeCommandInContext (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/function/Consumer;)V a
	fillUsableCommands (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Map;)V a
	finishParsing (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;Lnet/minecraft/commands/CommandSourceStack;)Lcom/mojang/brigadier/context/ContextChain; a
	getDispatcher ()Lcom/mojang/brigadier/CommandDispatcher; a
	getParseException (Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; b
	literal (Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
	mapSource (Lcom/mojang/brigadier/ParseResults;Ljava/util/function/UnaryOperator;)Lcom/mojang/brigadier/ParseResults; a
	performCommand (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;)V a
	performPrefixedCommand (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)V a
	sendCommands (Lnet/minecraft/server/level/ServerPlayer;)V a
	validate ()V b
	validateParseResults (Lcom/mojang/brigadier/ParseResults;)V a
net/minecraft/commands/Commands$CommandSelection dt$a
	$VALUES f
	ALL a
	DEDICATED b
	INTEGRATED c
	includeDedicated e
	includeIntegrated d
	$values ()[Lnet/minecraft/commands/Commands$CommandSelection; a
net/minecraft/commands/Commands$ParseFunction dt$b
net/minecraft/commands/ExecutionCommandSource du
	callback ()Lnet/minecraft/commands/CommandResultCallback; p
	clearCallbacks ()Lnet/minecraft/commands/ExecutionCommandSource; a_
	dispatcher ()Lcom/mojang/brigadier/CommandDispatcher; x
	handleError (Lcom/mojang/brigadier/exceptions/CommandExceptionType;Lcom/mojang/brigadier/Message;ZLnet/minecraft/commands/execution/TraceCallbacks;)V a
	handleError (Lcom/mojang/brigadier/exceptions/CommandSyntaxException;ZLnet/minecraft/commands/execution/TraceCallbacks;)V a
	hasPermission (I)Z c
	isSilent ()Z y
	resultConsumer ()Lcom/mojang/brigadier/ResultConsumer; b_
	withCallback (Lnet/minecraft/commands/CommandResultCallback;)Lnet/minecraft/commands/ExecutionCommandSource; b
net/minecraft/commands/FunctionInstantiationException dv
	messageComponent a
	messageComponent ()Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/ParserUtils dw
	JSON_READER_LINESTART b
	JSON_READER_POS a
	getPos (Lcom/google/gson/stream/JsonReader;)I a
	parseJson (Lcom/mojang/brigadier/StringReader;Lcom/mojang/serialization/Codec;)Ljava/lang/Object; a
net/minecraft/commands/SharedSuggestionProvider dx
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; a
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; w
	filterResources (Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V a
	filterResources (Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V a
	getAbsoluteCoordinates ()Ljava/util/Collection; C
	getAllTeams ()Ljava/util/Collection; r
	getAvailableSounds ()Ljava/util/stream/Stream; s
	getCustomTabSugggestions ()Ljava/util/Collection; z
	getOnlinePlayerNames ()Ljava/util/Collection; q
	getRecipeNames ()Ljava/util/stream/Stream; t
	getRelevantCoordinates ()Ljava/util/Collection; B
	getSelectedEntities ()Ljava/util/Collection; A
	hasPermission (I)Z c
	levels ()Ljava/util/Set; u
	matchesSubStr (Ljava/lang/String;Ljava/lang/String;)Z a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; v
	suggest (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; b
	suggest (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; b
	suggest (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; b
	suggest ([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggest2DCoordinates (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; b
	suggestCoordinates (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; a
	suggestRegistryElements (Lnet/minecraft/core/Registry;Lnet/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V a
	suggestRegistryElements (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType dx$a
	$VALUES d
	ALL c
	ELEMENTS b
	TAGS a
	$values ()[Lnet/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType; c
	shouldSuggestElements ()Z b
	shouldSuggestTags ()Z a
net/minecraft/commands/SharedSuggestionProvider$TextCoordinates dx$b
	DEFAULT_GLOBAL b
	DEFAULT_LOCAL a
	x c
	y d
	z e
net/minecraft/commands/arguments/AngleArgument dy
	ERROR_INVALID_ANGLE b
	ERROR_NOT_COMPLETE a
	EXAMPLES c
	angle ()Lnet/minecraft/commands/arguments/AngleArgument; a
	getAngle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)F a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/AngleArgument$SingleAngle; a
net/minecraft/commands/arguments/AngleArgument$SingleAngle dy$a
	angle a
	isRelative b
	getAngle (Lnet/minecraft/commands/CommandSourceStack;)F a
net/minecraft/commands/arguments/ArgumentSignatures dz
	EMPTY a
	MAX_ARGUMENT_COUNT c
	MAX_ARGUMENT_NAME_LENGTH d
	entries b
	entries ()Ljava/util/List; a
	get (Ljava/lang/String;)Lnet/minecraft/network/chat/MessageSignature; a
	signCommand (Lnet/minecraft/network/chat/SignableCommand;Lnet/minecraft/commands/arguments/ArgumentSignatures$Signer;)Lnet/minecraft/commands/arguments/ArgumentSignatures; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/arguments/ArgumentSignatures$Entry dz$a
	name a
	signature b
	name ()Ljava/lang/String; a
	signature ()Lnet/minecraft/network/chat/MessageSignature; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/arguments/ArgumentSignatures$Signer dz$b
net/minecraft/commands/arguments/ColorArgument ea
	ERROR_INVALID_VALUE a
	EXAMPLES b
	color ()Lnet/minecraft/commands/arguments/ColorArgument; a
	getColor (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/ChatFormatting; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/ChatFormatting; a
net/minecraft/commands/arguments/ComponentArgument eb
	ERROR_INVALID_JSON a
	EXAMPLES b
	getComponent (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/network/chat/Component; a
	textComponent ()Lnet/minecraft/commands/arguments/ComponentArgument; a
net/minecraft/commands/arguments/CompoundTagArgument ec
	EXAMPLES a
	compoundTag ()Lnet/minecraft/commands/arguments/CompoundTagArgument; a
	getCompoundTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/commands/arguments/DimensionArgument ed
	ERROR_INVALID_VALUE b
	EXAMPLES a
	dimension ()Lnet/minecraft/commands/arguments/DimensionArgument; a
	getDimension (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ServerLevel; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/arguments/EntityAnchorArgument ee
	ERROR_INVALID b
	EXAMPLES a
	anchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument; a
	getAnchor (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
net/minecraft/commands/arguments/EntityAnchorArgument$Anchor ee$a
	$VALUES f
	BY_NAME c
	EYES b
	FEET a
	name d
	transform e
	$values ()[Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
	apply (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	apply (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3; a
	getByName (Ljava/lang/String;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
net/minecraft/commands/arguments/EntityArgument ef
	ERROR_NOT_SINGLE_ENTITY a
	ERROR_NOT_SINGLE_PLAYER b
	ERROR_ONLY_PLAYERS_ALLOWED c
	ERROR_SELECTORS_NOT_ALLOWED f
	EXAMPLES g
	NO_ENTITIES_FOUND d
	NO_PLAYERS_FOUND e
	playersOnly i
	single h
	entities ()Lnet/minecraft/commands/arguments/EntityArgument; b
	entity ()Lnet/minecraft/commands/arguments/EntityArgument; a
	getEntities (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; b
	getEntity (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/entity/Entity; a
	getOptionalEntities (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; c
	getOptionalPlayers (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; d
	getPlayer (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ServerPlayer; e
	getPlayers (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; f
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	player ()Lnet/minecraft/commands/arguments/EntityArgument; c
	players ()Lnet/minecraft/commands/arguments/EntityArgument; d
net/minecraft/commands/arguments/EntityArgument$Info ef$a
	FLAG_PLAYERS_ONLY b
	FLAG_SINGLE a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/EntityArgument$Info$Template; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/arguments/EntityArgument$Info$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/EntityArgument$Info$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lnet/minecraft/commands/arguments/EntityArgument;)Lnet/minecraft/commands/arguments/EntityArgument$Info$Template; a
net/minecraft/commands/arguments/EntityArgument$Info$Template ef$a$a
	playersOnly c
	single b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/EntityArgument; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/arguments/GameModeArgument eg
	ERROR_INVALID c
	EXAMPLES a
	VALUES b
	gameMode ()Lnet/minecraft/commands/arguments/GameModeArgument; a
	getGameMode (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/GameType; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/level/GameType; a
net/minecraft/commands/arguments/GameProfileArgument eh
	ERROR_UNKNOWN_PLAYER a
	EXAMPLES b
	gameProfile ()Lnet/minecraft/commands/arguments/GameProfileArgument; a
	getGameProfiles (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/GameProfileArgument$Result; a
net/minecraft/commands/arguments/GameProfileArgument$Result eh$a
net/minecraft/commands/arguments/GameProfileArgument$SelectorResult eh$b
	selector a
net/minecraft/commands/arguments/HeightmapTypeArgument ei
	LOWER_CASE_CODEC a
	convertId (Ljava/lang/String;)Ljava/lang/String; a
	getHeightmap (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
	heightmap ()Lnet/minecraft/commands/arguments/HeightmapTypeArgument; a
	keptTypes ()[Lnet/minecraft/world/level/levelgen/Heightmap$Types; b
net/minecraft/commands/arguments/MessageArgument ej
	EXAMPLES a
	filterPlainText (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/PlayerChatMessage;)Ljava/util/concurrent/CompletableFuture; a
	getMessage (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	message ()Lnet/minecraft/commands/arguments/MessageArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/MessageArgument$Message; a
	resolveChatMessage (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Consumer;)V a
	resolveDisguisedMessage (Ljava/util/function/Consumer;Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/PlayerChatMessage;)V b
	resolveSignedMessage (Ljava/util/function/Consumer;Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/PlayerChatMessage;)V a
net/minecraft/commands/arguments/MessageArgument$Message ej$a
	parts b
	text a
	getParts ()[Lnet/minecraft/commands/arguments/MessageArgument$Part; b
	getText ()Ljava/lang/String; a
	parseText (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/MessageArgument$Message; a
	resolveComponent (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/network/chat/Component; a
	toComponent (Lnet/minecraft/commands/CommandSourceStack;Z)Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/arguments/MessageArgument$Part ej$b
	end b
	selector c
	start a
	getEnd ()I b
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; c
	getStart ()I a
	toComponent (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/arguments/NbtPathArgument ek
	ERROR_DATA_TOO_DEEP b
	ERROR_EXPECTED_LIST e
	ERROR_INVALID_INDEX f
	ERROR_INVALID_NODE a
	ERROR_NOTHING_FOUND c
	EXAMPLES d
	INDEX_MATCH_END h
	INDEX_MATCH_START g
	KEY_MATCH_END j
	KEY_MATCH_START i
	QUOTED_KEY_START k
	SINGLE_QUOTED_KEY_START l
	createTagPredicate (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/function/Predicate; a
	getPath (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	isAllowedInUnquotedName (C)Z a
	nbtPath ()Lnet/minecraft/commands/arguments/NbtPathArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	parseNode (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/NbtPathArgument$Node; a
	readObjectNode (Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$Node; a
	readUnquotedName (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; b
net/minecraft/commands/arguments/NbtPathArgument$AllElementsNode ek$a
	INSTANCE a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode ek$b
	name a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$IndexedElementNode ek$c
	index a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$MatchElementNode ek$d
	pattern a
	predicate b
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$MatchObjectNode ek$e
	name a
	pattern b
	predicate c
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$MatchRootObjectNode ek$f
	predicate a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$NbtPath ek$g
	nodeToOriginalPosition b
	nodes c
	original a
	apply (Ljava/util/List;Ljava/util/function/Function;)I a
	asString ()Ljava/lang/String; a
	countMatching (Lnet/minecraft/nbt/Tag;)I b
	createNotFoundException (Lnet/minecraft/commands/arguments/NbtPathArgument$Node;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; a
	estimatePathDepth ()I b
	get (Lnet/minecraft/nbt/Tag;)Ljava/util/List; a
	getOrCreate (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)Ljava/util/List; a
	getOrCreateParents (Lnet/minecraft/nbt/Tag;)Ljava/util/List; d
	insert (ILnet/minecraft/nbt/CompoundTag;Ljava/util/List;)I a
	isTooDeep (Lnet/minecraft/nbt/Tag;I)Z a
	remove (Lnet/minecraft/nbt/Tag;)I c
	set (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)I a
net/minecraft/commands/arguments/NbtPathArgument$Node ek$h
	collect (Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List; a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	get (Ljava/util/List;)Ljava/util/List; a
	getOrCreate (Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtTagArgument el
	EXAMPLES a
	getNbtTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	nbtTag ()Lnet/minecraft/commands/arguments/NbtTagArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/nbt/Tag; a
net/minecraft/commands/arguments/ObjectiveArgument em
	ERROR_OBJECTIVE_NOT_FOUND b
	ERROR_OBJECTIVE_READ_ONLY c
	EXAMPLES a
	getObjective (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; a
	getWritableObjective (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; b
	objective ()Lnet/minecraft/commands/arguments/ObjectiveArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
net/minecraft/commands/arguments/ObjectiveCriteriaArgument en
	ERROR_INVALID_VALUE a
	EXAMPLES b
	criteria ()Lnet/minecraft/commands/arguments/ObjectiveCriteriaArgument; a
	getCriteria (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; a
	getName (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)Ljava/lang/String; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; a
net/minecraft/commands/arguments/OperationArgument eo
	ERROR_DIVIDE_BY_ZERO c
	ERROR_INVALID_OPERATION b
	EXAMPLES a
	getOperation (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
	getOperation (Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
	getSimpleOperation (Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$SimpleOperation; b
	operation ()Lnet/minecraft/commands/arguments/OperationArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
net/minecraft/commands/arguments/OperationArgument$Operation eo$a
net/minecraft/commands/arguments/OperationArgument$SimpleOperation eo$b
net/minecraft/commands/arguments/ParticleArgument ep
	ERROR_UNKNOWN_PARTICLE a
	EXAMPLES b
	particles c
	getParticle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/particles/ParticleOptions; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleOptions; a
	particle (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ParticleArgument; a
	readParticle (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/core/HolderLookup;)Lnet/minecraft/core/particles/ParticleOptions; a
	readParticle (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/core/particles/ParticleType;)Lnet/minecraft/core/particles/ParticleOptions; a
	readParticleType (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/core/HolderLookup;)Lnet/minecraft/core/particles/ParticleType; b
net/minecraft/commands/arguments/RangeArgument eq
	floatRange ()Lnet/minecraft/commands/arguments/RangeArgument$Floats; b
	intRange ()Lnet/minecraft/commands/arguments/RangeArgument$Ints; a
net/minecraft/commands/arguments/RangeArgument$Floats eq$a
	EXAMPLES a
	getRange (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
net/minecraft/commands/arguments/RangeArgument$Ints eq$b
	EXAMPLES a
	getRange (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
net/minecraft/commands/arguments/ResourceArgument er
	ERROR_INVALID_RESOURCE_TYPE b
	ERROR_NOT_SUMMONABLE_ENTITY d
	ERROR_UNKNOWN_RESOURCE a
	EXAMPLES c
	registryKey e
	registryLookup f
	getAttribute (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; a
	getConfiguredFeature (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; b
	getEnchantment (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; g
	getEntityType (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; d
	getMobEffect (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; f
	getResource (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Holder$Reference; a
	getStructure (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; c
	getSummonableEntityType (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; e
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/Holder$Reference; a
	resource (Lnet/minecraft/commands/CommandBuildContext;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/commands/arguments/ResourceArgument; a
net/minecraft/commands/arguments/ResourceArgument$Info er$a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/ResourceArgument$Info$Template; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/arguments/ResourceArgument$Info$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/ResourceArgument$Info$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lnet/minecraft/commands/arguments/ResourceArgument;)Lnet/minecraft/commands/arguments/ResourceArgument$Info$Template; a
net/minecraft/commands/arguments/ResourceArgument$Info$Template er$a$a
	registryKey b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ResourceArgument; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/arguments/ResourceKeyArgument es
	ERROR_INVALID_FEATURE b
	ERROR_INVALID_STRUCTURE c
	ERROR_INVALID_TEMPLATE_POOL d
	EXAMPLES a
	registryKey e
	getConfiguredFeature (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; a
	getRegistry (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Registry; a
	getRegistryKey (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lnet/minecraft/resources/ResourceKey; a
	getStructure (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; b
	getStructureTemplatePool (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; c
	key (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/commands/arguments/ResourceKeyArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceKey; a
	resolveKey (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lnet/minecraft/core/Holder$Reference; b
net/minecraft/commands/arguments/ResourceKeyArgument$Info es$a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/ResourceKeyArgument$Info$Template; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/arguments/ResourceKeyArgument$Info$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/ResourceKeyArgument$Info$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lnet/minecraft/commands/arguments/ResourceKeyArgument;)Lnet/minecraft/commands/arguments/ResourceKeyArgument$Info$Template; a
net/minecraft/commands/arguments/ResourceKeyArgument$Info$Template es$a$a
	registryKey b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ResourceKeyArgument; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/arguments/ResourceLocationArgument et
	ERROR_UNKNOWN_ADVANCEMENT b
	ERROR_UNKNOWN_ITEM_MODIFIER e
	ERROR_UNKNOWN_PREDICATE d
	ERROR_UNKNOWN_RECIPE c
	EXAMPLES a
	getAdvancement (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/AdvancementHolder; a
	getId (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; e
	getItemModifier (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; d
	getPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; c
	getRecipe (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/item/crafting/RecipeHolder; b
	id ()Lnet/minecraft/commands/arguments/ResourceLocationArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/arguments/ResourceOrTagArgument eu
	ERROR_INVALID_TAG_TYPE c
	ERROR_UNKNOWN_TAG b
	EXAMPLES a
	registryKey e
	registryLookup d
	getResourceOrTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/commands/arguments/ResourceOrTagArgument$Result; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/ResourceOrTagArgument$Result; a
	resourceOrTag (Lnet/minecraft/commands/CommandBuildContext;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/commands/arguments/ResourceOrTagArgument; a
net/minecraft/commands/arguments/ResourceOrTagArgument$Info eu$a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/ResourceOrTagArgument$Info$Template; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/arguments/ResourceOrTagArgument$Info$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/ResourceOrTagArgument$Info$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lnet/minecraft/commands/arguments/ResourceOrTagArgument;)Lnet/minecraft/commands/arguments/ResourceOrTagArgument$Info$Template; a
net/minecraft/commands/arguments/ResourceOrTagArgument$Info$Template eu$a$a
	registryKey b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ResourceOrTagArgument; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/arguments/ResourceOrTagArgument$ResourceResult eu$b
	value a
	asPrintable ()Ljava/lang/String; b
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	test (Lnet/minecraft/core/Holder;)Z a
	unwrap ()Lcom/mojang/datafixers/util/Either; a
	value ()Lnet/minecraft/core/Holder$Reference; c
net/minecraft/commands/arguments/ResourceOrTagArgument$Result eu$c
	asPrintable ()Ljava/lang/String; b
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	unwrap ()Lcom/mojang/datafixers/util/Either; a
net/minecraft/commands/arguments/ResourceOrTagArgument$TagResult eu$d
	tag a
	asPrintable ()Ljava/lang/String; b
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	tag ()Lnet/minecraft/core/HolderSet$Named; c
	test (Lnet/minecraft/core/Holder;)Z a
	unwrap ()Lcom/mojang/datafixers/util/Either; a
net/minecraft/commands/arguments/ResourceOrTagKeyArgument ev
	EXAMPLES a
	registryKey b
	getResourceOrTagKey (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument$Result; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument$Result; a
	resourceOrTagKey (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument; a
net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info ev$a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info$Template; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument;)Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info$Template; a
net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info$Template ev$a$a
	registryKey b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/arguments/ResourceOrTagKeyArgument$ResourceResult ev$b
	key a
	asPrintable ()Ljava/lang/String; b
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	key ()Lnet/minecraft/resources/ResourceKey; c
	test (Lnet/minecraft/core/Holder;)Z a
	unwrap ()Lcom/mojang/datafixers/util/Either; a
net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Result ev$c
	asPrintable ()Ljava/lang/String; b
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	unwrap ()Lcom/mojang/datafixers/util/Either; a
net/minecraft/commands/arguments/ResourceOrTagKeyArgument$TagResult ev$d
	key a
	asPrintable ()Ljava/lang/String; b
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	key ()Lnet/minecraft/tags/TagKey; c
	test (Lnet/minecraft/core/Holder;)Z a
	unwrap ()Lcom/mojang/datafixers/util/Either; a
net/minecraft/commands/arguments/ScoreHolderArgument ew
	ERROR_NO_RESULTS c
	EXAMPLES b
	SUGGEST_SCORE_HOLDERS a
	multiple d
	getName (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreHolder; a
	getNames (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; b
	getNames (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection; a
	getNamesWithDefaultWildcard (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; c
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/ScoreHolderArgument$Result; a
	scoreHolder ()Lnet/minecraft/commands/arguments/ScoreHolderArgument; a
	scoreHolders ()Lnet/minecraft/commands/arguments/ScoreHolderArgument; b
net/minecraft/commands/arguments/ScoreHolderArgument$Info ew$a
	FLAG_MULTIPLE a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/ScoreHolderArgument$Info$Template; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/arguments/ScoreHolderArgument$Info$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/ScoreHolderArgument$Info$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lnet/minecraft/commands/arguments/ScoreHolderArgument;)Lnet/minecraft/commands/arguments/ScoreHolderArgument$Info$Template; a
net/minecraft/commands/arguments/ScoreHolderArgument$Info$Template ew$a$a
	multiple b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ScoreHolderArgument; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/arguments/ScoreHolderArgument$Result ew$b
net/minecraft/commands/arguments/ScoreHolderArgument$SelectorResult ew$c
	selector a
net/minecraft/commands/arguments/ScoreboardSlotArgument ex
	ERROR_INVALID_VALUE a
	EXAMPLES b
	displaySlot ()Lnet/minecraft/commands/arguments/ScoreboardSlotArgument; a
	getDisplaySlot (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/DisplaySlot; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/scores/DisplaySlot; a
net/minecraft/commands/arguments/SignedArgument ey
net/minecraft/commands/arguments/SlotArgument ez
	ERROR_UNKNOWN_SLOT b
	EXAMPLES a
	SLOTS c
	getSlot (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; a
	slot ()Lnet/minecraft/commands/arguments/SlotArgument; a
net/minecraft/commands/arguments/StringRepresentableArgument fa
	ERROR_INVALID_VALUE a
	codec b
	values c
	convertId (Ljava/lang/String;)Ljava/lang/String; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Enum; a
net/minecraft/commands/arguments/StyleArgument fb
	ERROR_INVALID_JSON a
	EXAMPLES b
	getStyle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/Style; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/network/chat/Style; a
	style ()Lnet/minecraft/commands/arguments/StyleArgument; a
net/minecraft/commands/arguments/TeamArgument fc
	ERROR_TEAM_NOT_FOUND b
	EXAMPLES a
	getTeam (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
	team ()Lnet/minecraft/commands/arguments/TeamArgument; a
net/minecraft/commands/arguments/TemplateMirrorArgument fd
	getMirror (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/block/Mirror; a
	templateMirror ()Lnet/minecraft/commands/arguments/StringRepresentableArgument; a
net/minecraft/commands/arguments/TemplateRotationArgument fe
	getRotation (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/block/Rotation; a
	templateRotation ()Lnet/minecraft/commands/arguments/TemplateRotationArgument; a
net/minecraft/commands/arguments/TimeArgument ff
	ERROR_INVALID_UNIT b
	ERROR_TICK_COUNT_TOO_LOW c
	EXAMPLES a
	UNITS d
	minimum e
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; a
	time ()Lnet/minecraft/commands/arguments/TimeArgument; a
	time (I)Lnet/minecraft/commands/arguments/TimeArgument; a
net/minecraft/commands/arguments/TimeArgument$Info ff$a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/TimeArgument$Info$Template; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/arguments/TimeArgument$Info$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/TimeArgument$Info$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lnet/minecraft/commands/arguments/TimeArgument;)Lnet/minecraft/commands/arguments/TimeArgument$Info$Template; a
net/minecraft/commands/arguments/TimeArgument$Info$Template ff$a$a
	min b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/TimeArgument; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/arguments/UuidArgument fg
	ALLOWED_CHARACTERS c
	ERROR_INVALID_UUID a
	EXAMPLES b
	getUuid (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/UUID; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/util/UUID; a
	uuid ()Lnet/minecraft/commands/arguments/UuidArgument; a
net/minecraft/commands/arguments/blocks/BlockInput fh
	properties b
	state a
	tag c
	getDefinedProperties ()Ljava/util/Set; b
	getState ()Lnet/minecraft/world/level/block/state/BlockState; a
	place (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;I)Z a
	test (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument fi
	EXAMPLES a
	blocks b
	blockPredicate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/blocks/BlockPredicateArgument; a
	getBlockPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result; a
	parse (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result; a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$BlockPredicate fi$a
	nbt c
	properties b
	state a
	requiresNbt ()Z a
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result fi$b
	requiresNbt ()Z a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$TagPredicate fi$c
	nbt b
	tag a
	vagueProperties c
	requiresNbt ()Z a
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockStateArgument fj
	EXAMPLES a
	blocks b
	block (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/blocks/BlockStateArgument; a
	getBlock (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/blocks/BlockInput; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/blocks/BlockInput; a
net/minecraft/commands/arguments/blocks/BlockStateParser fk
	ERROR_DUPLICATE_PROPERTY d
	ERROR_EXPECTED_END_OF_PROPERTIES g
	ERROR_EXPECTED_VALUE f
	ERROR_INVALID_VALUE e
	ERROR_NO_TAGS_ALLOWED a
	ERROR_UNKNOWN_BLOCK b
	ERROR_UNKNOWN_PROPERTY c
	ERROR_UNKNOWN_TAG h
	SUGGEST_NOTHING o
	SYNTAX_END_PROPERTIES k
	SYNTAX_EQUALS l
	SYNTAX_PROPERTY_SEPARATOR m
	SYNTAX_START_NBT j
	SYNTAX_START_PROPERTIES i
	SYNTAX_TAG n
	allowNbt s
	blocks p
	definition w
	forTesting r
	id v
	nbt y
	properties t
	reader q
	state x
	suggestions A
	tag z
	vagueProperties u
	addSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/world/level/block/state/properties/Property;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder; a
	appendProperty (Ljava/lang/StringBuilder;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)V a
	fillSuggestions (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;ZZ)Ljava/util/concurrent/CompletableFuture; a
	hasBlockEntity ()Z b
	parse ()V a
	parseForBlock (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/blocks/BlockStateParser$BlockResult; a
	parseForBlock (Lnet/minecraft/core/HolderLookup;Ljava/lang/String;Z)Lnet/minecraft/commands/arguments/blocks/BlockStateParser$BlockResult; a
	parseForTesting (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;Z)Lcom/mojang/datafixers/util/Either; b
	parseForTesting (Lnet/minecraft/core/HolderLookup;Ljava/lang/String;Z)Lcom/mojang/datafixers/util/Either; b
	readBlock ()V c
	readNbt ()V g
	readProperties ()V e
	readTag ()V d
	readVagueProperties ()V f
	serialize (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/String; a
	setValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;I)V a
	suggestBlockIdOrTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; l
	suggestEquals (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; f
	suggestItem (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; k
	suggestNextPropertyOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; g
	suggestOpenNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; e
	suggestOpenPropertiesOrNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; i
	suggestOpenVaguePropertiesOrNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; h
	suggestPropertyName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; c
	suggestPropertyNameOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggestTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; j
	suggestVaguePropertyName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; d
	suggestVaguePropertyNameOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; b
	suggestVaguePropertyValue (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/commands/arguments/blocks/BlockStateParser$BlockResult fk$a
	blockState a
	nbt c
	properties b
	blockState ()Lnet/minecraft/world/level/block/state/BlockState; a
	nbt ()Lnet/minecraft/nbt/CompoundTag; c
	properties ()Ljava/util/Map; b
net/minecraft/commands/arguments/blocks/BlockStateParser$TagResult fk$b
	nbt c
	tag a
	vagueProperties b
	nbt ()Lnet/minecraft/nbt/CompoundTag; c
	tag ()Lnet/minecraft/core/HolderSet; a
	vagueProperties ()Ljava/util/Map; b
net/minecraft/commands/arguments/coordinates/BlockPosArgument fm
	ERROR_NOT_LOADED a
	ERROR_OUT_OF_BOUNDS c
	ERROR_OUT_OF_WORLD b
	EXAMPLES d
	blockPos ()Lnet/minecraft/commands/arguments/coordinates/BlockPosArgument; a
	getBlockPos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPos; b
	getLoadedBlockPos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPos; a
	getLoadedBlockPos (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/level/ServerLevel;Ljava/lang/String;)Lnet/minecraft/core/BlockPos; a
	getSpawnablePos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPos; c
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
net/minecraft/commands/arguments/coordinates/ColumnPosArgument fn
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	columnPos ()Lnet/minecraft/commands/arguments/coordinates/ColumnPosArgument; a
	getColumnPos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ColumnPos; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
net/minecraft/commands/arguments/coordinates/Coordinates fo
	getBlockPos (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/core/BlockPos; c
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
net/minecraft/commands/arguments/coordinates/LocalCoordinates fp
	PREFIX_LOCAL_COORDINATE a
	forwards d
	left b
	up c
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/LocalCoordinates; a
	readDouble (Lcom/mojang/brigadier/StringReader;I)D a
net/minecraft/commands/arguments/coordinates/RotationArgument fq
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	getRotation (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	rotation ()Lnet/minecraft/commands/arguments/coordinates/RotationArgument; a
net/minecraft/commands/arguments/coordinates/SwizzleArgument fr
	ERROR_INVALID b
	EXAMPLES a
	getSwizzle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet; a
	swizzle ()Lnet/minecraft/commands/arguments/coordinates/SwizzleArgument; a
net/minecraft/commands/arguments/coordinates/Vec2Argument fs
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	centerCorrect c
	getVec2 (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/phys/Vec2; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	vec2 ()Lnet/minecraft/commands/arguments/coordinates/Vec2Argument; a
	vec2 (Z)Lnet/minecraft/commands/arguments/coordinates/Vec2Argument; a
net/minecraft/commands/arguments/coordinates/Vec3Argument ft
	ERROR_MIXED_TYPE b
	ERROR_NOT_COMPLETE a
	EXAMPLES c
	centerCorrect d
	getCoordinates (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; b
	getVec3 (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/phys/Vec3; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	vec3 ()Lnet/minecraft/commands/arguments/coordinates/Vec3Argument; a
	vec3 (Z)Lnet/minecraft/commands/arguments/coordinates/Vec3Argument; a
net/minecraft/commands/arguments/coordinates/WorldCoordinate fu
	ERROR_EXPECTED_DOUBLE a
	ERROR_EXPECTED_INT b
	PREFIX_RELATIVE c
	relative d
	value e
	get (D)D a
	isRelative ()Z a
	isRelative (Lcom/mojang/brigadier/StringReader;)Z b
	parseDouble (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinate; a
	parseInt (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinate; a
net/minecraft/commands/arguments/coordinates/WorldCoordinates fv
	x a
	y b
	z c
	absolute (DDD)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	absolute (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	current ()Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; d
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
	parseDouble (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	parseInt (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
net/minecraft/commands/arguments/item/FunctionArgument fx
	ERROR_UNKNOWN_FUNCTION c
	ERROR_UNKNOWN_TAG b
	EXAMPLES a
	functions ()Lnet/minecraft/commands/arguments/item/FunctionArgument; a
	getFunction (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/commands/functions/CommandFunction; a
	getFunctionCollection (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; c
	getFunctionOrTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; b
	getFunctionTag (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Collection; b
	getFunctions (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/FunctionArgument$Result; a
net/minecraft/commands/arguments/item/FunctionArgument$Result fx$a
	create (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; a
	unwrap (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair; b
	unwrapToCollection (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair; c
net/minecraft/commands/arguments/item/ItemArgument fy
	EXAMPLES a
	items b
	getItem (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/item/ItemInput; a
	item (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/item/ItemArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/ItemInput; a
net/minecraft/commands/arguments/item/ItemInput fz
	ERROR_STACK_TOO_BIG a
	item b
	tag c
	createItemStack (IZ)Lnet/minecraft/world/item/ItemStack; a
	getItem ()Lnet/minecraft/world/item/Item; a
	getItemName ()Ljava/lang/String; c
	serialize ()Ljava/lang/String; b
	test (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/commands/arguments/item/ItemParser ga
	ERROR_NO_TAGS_ALLOWED a
	ERROR_UNKNOWN_ITEM b
	ERROR_UNKNOWN_TAG c
	SUGGEST_NOTHING f
	SYNTAX_START_NBT d
	SYNTAX_TAG e
	allowTags i
	items g
	nbt k
	reader h
	result j
	suggestions l
	fillSuggestions (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Z)Ljava/util/concurrent/CompletableFuture; a
	parse ()V d
	parseForItem (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/ItemParser$ItemResult; a
	parseForTesting (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;)Lcom/mojang/datafixers/util/Either; b
	readItem ()V a
	readNbt ()V c
	readTag ()V b
	suggestItem (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; c
	suggestItemIdOrTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; d
	suggestOpenNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggestTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; b
net/minecraft/commands/arguments/item/ItemParser$ItemResult ga$a
	item a
	nbt b
	item ()Lnet/minecraft/core/Holder; a
	nbt ()Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/commands/arguments/item/ItemParser$TagResult ga$b
	nbt b
	tag a
	nbt ()Lnet/minecraft/nbt/CompoundTag; b
	tag ()Lnet/minecraft/core/HolderSet; a
net/minecraft/commands/arguments/item/ItemPredicateArgument gb
	EXAMPLES a
	items b
	createResult (Ljava/util/function/Predicate;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/commands/arguments/item/ItemPredicateArgument$Result; a
	getItemPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; a
	itemPredicate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/item/ItemPredicateArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/ItemPredicateArgument$Result; a
net/minecraft/commands/arguments/item/ItemPredicateArgument$Result gb$a
net/minecraft/commands/arguments/selector/EntitySelector ge
	ANY_TYPE c
	INFINITE a
	ORDER_ARBITRARY b
	aabb j
	currentEntity l
	entityUUID n
	includesEntities e
	maxResults d
	order k
	playerName m
	position i
	predicate g
	range h
	type o
	usesSelector p
	worldLimited f
	addEntities (Ljava/util/List;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Ljava/util/function/Predicate;)V a
	checkPermissions (Lnet/minecraft/commands/CommandSourceStack;)V e
	findEntities (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/List; b
	findEntitiesRaw (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/List; f
	findPlayers (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/List; d
	findSingleEntity (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/entity/Entity; a
	findSinglePlayer (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/server/level/ServerPlayer; c
	getMaxResults ()I a
	getPredicate (Lnet/minecraft/world/phys/Vec3;)Ljava/util/function/Predicate; a
	getResultLimit ()I f
	includesEntities ()Z b
	isSelfSelector ()Z c
	isWorldLimited ()Z d
	joinNames (Ljava/util/List;)Lnet/minecraft/network/chat/Component; a
	sortAndLimit (Lnet/minecraft/world/phys/Vec3;Ljava/util/List;)Ljava/util/List; a
	usesSelector ()Z e
net/minecraft/commands/arguments/selector/EntitySelectorParser gf
	ERROR_EXPECTED_END_OF_OPTIONS i
	ERROR_EXPECTED_OPTION_VALUE j
	ERROR_INVALID_NAME_OR_UUID e
	ERROR_MISSING_SELECTOR_TYPE h
	ERROR_SELECTORS_NOT_ALLOWED g
	ERROR_UNKNOWN_SELECTOR_TYPE f
	ORDER_FURTHEST l
	ORDER_NEAREST k
	ORDER_RANDOM m
	SELECTOR_ALL_ENTITIES v
	SELECTOR_ALL_PLAYERS s
	SELECTOR_CURRENT_ENTITY u
	SELECTOR_NEAREST_PLAYER r
	SELECTOR_RANDOM_PLAYERS t
	SUGGEST_NOTHING n
	SYNTAX_NOT c
	SYNTAX_OPTIONS_END p
	SYNTAX_OPTIONS_KEY_VALUE_SEPARATOR b
	SYNTAX_OPTIONS_SEPARATOR q
	SYNTAX_OPTIONS_START o
	SYNTAX_SELECTOR_START a
	SYNTAX_TAG d
	allowSelectors x
	currentEntity N
	deltaX G
	deltaY H
	deltaZ I
	distance B
	entityUUID Q
	hasAdvancements ad
	hasGamemodeEquals W
	hasGamemodeNotEquals X
	hasNameEquals S
	hasNameNotEquals T
	hasScores ac
	hasTeamEquals Y
	hasTeamNotEquals Z
	includesEntities z
	isLimited U
	isSorted V
	level C
	maxResults y
	order M
	playerName O
	predicate L
	reader w
	rotX J
	rotY K
	startPosition P
	suggestions R
	type aa
	typeInverse ab
	usesSelectors ae
	worldLimited A
	x D
	y E
	z F
	addPredicate (Ljava/util/function/Predicate;)V a
	createAabb (DDD)Lnet/minecraft/world/phys/AABB; a
	createRotationPredicate (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate; a
	fillSelectorSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V a
	fillSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; a
	finalizePredicates ()V I
	getDeltaX ()Ljava/lang/Double; p
	getDeltaY ()Ljava/lang/Double; q
	getDeltaZ ()Ljava/lang/Double; r
	getDistance ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; i
	getLevel ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; j
	getOrder ()Ljava/util/function/BiConsumer; s
	getReader ()Lcom/mojang/brigadier/StringReader; g
	getRotX ()Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; k
	getRotY ()Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; l
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	getX ()Ljava/lang/Double; m
	getY ()Ljava/lang/Double; n
	getZ ()Ljava/lang/Double; o
	hasAdvancements ()Z H
	hasGamemodeEquals ()Z z
	hasGamemodeNotEquals ()Z A
	hasNameEquals ()Z v
	hasNameNotEquals ()Z w
	hasScores ()Z G
	hasTeamEquals ()Z B
	hasTeamNotEquals ()Z C
	isCurrentEntity ()Z u
	isLimited ()Z x
	isSorted ()Z y
	isTag ()Z f
	isTypeLimited ()Z E
	isTypeLimitedInversely ()Z F
	limitToType (Lnet/minecraft/world/entity/EntityType;)V a
	parse ()Lnet/minecraft/commands/arguments/selector/EntitySelector; t
	parseNameOrUUID ()V c
	parseOptions ()V d
	parseSelector ()V b
	setDeltaX (D)V d
	setDeltaY (D)V e
	setDeltaZ (D)V f
	setDistance (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)V a
	setHasAdvancements (Z)V k
	setHasGamemodeEquals (Z)V f
	setHasGamemodeNotEquals (Z)V g
	setHasNameEquals (Z)V b
	setHasNameNotEquals (Z)V c
	setHasScores (Z)V j
	setHasTeamEquals (Z)V h
	setHasTeamNotEquals (Z)V i
	setIncludesEntities (Z)V a
	setLevel (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)V a
	setLimited (Z)V d
	setMaxResults (I)V a
	setOrder (Ljava/util/function/BiConsumer;)V a
	setRotX (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;)V a
	setRotY (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;)V b
	setSorted (Z)V e
	setSuggestions (Ljava/util/function/BiFunction;)V a
	setTypeLimitedInversely ()V D
	setWorldLimited ()V h
	setX (D)V a
	setY (D)V b
	setZ (D)V c
	shouldInvertValue ()Z e
	suggestEquals (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; i
	suggestName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; c
	suggestNameOrSelector (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; b
	suggestOpenOptions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; e
	suggestOptionsKey (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; g
	suggestOptionsKeyOrClose (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; f
	suggestOptionsNextOrClose (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; h
	suggestSelector (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; d
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions gg
	ERROR_ENTITY_TYPE_INVALID h
	ERROR_GAME_MODE_INVALID g
	ERROR_INAPPLICABLE_OPTION b
	ERROR_LEVEL_NEGATIVE d
	ERROR_LIMIT_TOO_SMALL e
	ERROR_RANGE_NEGATIVE c
	ERROR_SORT_UNKNOWN f
	ERROR_UNKNOWN_OPTION a
	OPTIONS i
	bootStrap ()V a
	get (Lnet/minecraft/commands/arguments/selector/EntitySelectorParser;Ljava/lang/String;I)Lnet/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier; a
	register (Ljava/lang/String;Lnet/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier;Ljava/util/function/Predicate;Lnet/minecraft/network/chat/Component;)V a
	suggestNames (Lnet/minecraft/commands/arguments/selector/EntitySelectorParser;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V a
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier gg$a
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Option gg$b
	canUse b
	description c
	modifier a
	canUse ()Ljava/util/function/Predicate; b
	description ()Lnet/minecraft/network/chat/Component; c
	modifier ()Lnet/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier; a
net/minecraft/commands/execution/ChainModifiers gj
	DEFAULT a
	FLAG_FORKED c
	FLAG_IS_RETURN d
	flags b
	flags ()B e
	isForked ()Z a
	isReturn ()Z c
	setFlag (B)Lnet/minecraft/commands/execution/ChainModifiers; a
	setForked ()Lnet/minecraft/commands/execution/ChainModifiers; b
	setReturn ()Lnet/minecraft/commands/execution/ChainModifiers; d
net/minecraft/commands/execution/CommandQueueEntry gk
	action b
	frame a
	action ()Lnet/minecraft/commands/execution/EntryAction; b
	execute (Lnet/minecraft/commands/execution/ExecutionContext;)V a
	frame ()Lnet/minecraft/commands/execution/Frame; a
net/minecraft/commands/execution/CustomCommandExecutor gl
	run (Ljava/lang/Object;Lcom/mojang/brigadier/context/ContextChain;Lnet/minecraft/commands/execution/ChainModifiers;Lnet/minecraft/commands/execution/ExecutionControl;)V a
net/minecraft/commands/execution/CustomCommandExecutor$CommandAdapter gl$a
net/minecraft/commands/execution/CustomCommandExecutor$WithErrorHandling gl$b
	onError (Lcom/mojang/brigadier/exceptions/CommandSyntaxException;Lnet/minecraft/commands/ExecutionCommandSource;Lnet/minecraft/commands/execution/ChainModifiers;Lnet/minecraft/commands/execution/TraceCallbacks;)V a
	run (Ljava/lang/Object;Lcom/mojang/brigadier/context/ContextChain;Lnet/minecraft/commands/execution/ChainModifiers;Lnet/minecraft/commands/execution/ExecutionControl;)V a
	run (Lnet/minecraft/commands/ExecutionCommandSource;Lcom/mojang/brigadier/context/ContextChain;Lnet/minecraft/commands/execution/ChainModifiers;Lnet/minecraft/commands/execution/ExecutionControl;)V a
	runGuarded (Lnet/minecraft/commands/ExecutionCommandSource;Lcom/mojang/brigadier/context/ContextChain;Lnet/minecraft/commands/execution/ChainModifiers;Lnet/minecraft/commands/execution/ExecutionControl;)V b
net/minecraft/commands/execution/CustomModifierExecutor gm
	apply (Ljava/lang/Object;Ljava/util/List;Lcom/mojang/brigadier/context/ContextChain;Lnet/minecraft/commands/execution/ChainModifiers;Lnet/minecraft/commands/execution/ExecutionControl;)V a
net/minecraft/commands/execution/CustomModifierExecutor$ModifierAdapter gm$a
net/minecraft/commands/execution/EntryAction gn
net/minecraft/commands/execution/ExecutionContext go
	LOGGER b
	MAX_QUEUE_DEPTH a
	commandLimit c
	commandQueue i
	commandQuota g
	currentFrameDepth k
	forkLimit d
	newTopCommands j
	profiler e
	queueOverflow h
	tracer f
	createTopFrame (Lnet/minecraft/commands/execution/ExecutionContext;Lnet/minecraft/commands/CommandResultCallback;)Lnet/minecraft/commands/execution/Frame; a
	discardAtDepthOrHigher (I)V a
	forkLimit ()I d
	frameControlForDepth (I)Lnet/minecraft/commands/execution/Frame$FrameControl; b
	handleQueueOverflow ()V f
	incrementCost ()V e
	profiler ()Lnet/minecraft/util/profiling/ProfilerFiller; c
	pushNewCommands ()V g
	queueInitialCommandExecution (Lnet/minecraft/commands/execution/ExecutionContext;Ljava/lang/String;Lcom/mojang/brigadier/context/ContextChain;Lnet/minecraft/commands/ExecutionCommandSource;Lnet/minecraft/commands/CommandResultCallback;)V a
	queueInitialFunctionCall (Lnet/minecraft/commands/execution/ExecutionContext;Lnet/minecraft/commands/functions/InstantiatedFunction;Lnet/minecraft/commands/ExecutionCommandSource;Lnet/minecraft/commands/CommandResultCallback;)V a
	queueNext (Lnet/minecraft/commands/execution/CommandQueueEntry;)V a
	runCommandQueue ()V a
	tracer ()Lnet/minecraft/commands/execution/TraceCallbacks; b
	tracer (Lnet/minecraft/commands/execution/TraceCallbacks;)V a
net/minecraft/commands/execution/ExecutionControl gp
	create (Lnet/minecraft/commands/execution/ExecutionContext;Lnet/minecraft/commands/execution/Frame;)Lnet/minecraft/commands/execution/ExecutionControl; a
	currentFrame ()Lnet/minecraft/commands/execution/Frame; b
	queueNext (Lnet/minecraft/commands/execution/EntryAction;)V a
	tracer ()Lnet/minecraft/commands/execution/TraceCallbacks; a
	tracer (Lnet/minecraft/commands/execution/TraceCallbacks;)V a
net/minecraft/commands/execution/Frame gq
	depth a
	frameControl c
	returnValueConsumer b
	depth ()I c
	discard ()V b
	frameControl ()Lnet/minecraft/commands/execution/Frame$FrameControl; e
	returnFailure ()V a
	returnSuccess (I)V a
	returnValueConsumer ()Lnet/minecraft/commands/CommandResultCallback; d
net/minecraft/commands/execution/Frame$FrameControl gq$a
net/minecraft/commands/execution/TraceCallbacks gr
	onCall (ILnet/minecraft/resources/ResourceLocation;I)V a
	onCommand (ILjava/lang/String;)V a
	onError (Ljava/lang/String;)V a
	onReturn (ILjava/lang/String;I)V a
net/minecraft/commands/execution/UnboundEntryAction gs
net/minecraft/commands/execution/tasks/BuildContexts gu
	ERROR_FORK_LIMIT_REACHED a
	command c
	commandInput b
	execute (Lnet/minecraft/commands/ExecutionCommandSource;Ljava/util/List;Lnet/minecraft/commands/execution/ExecutionContext;Lnet/minecraft/commands/execution/Frame;Lnet/minecraft/commands/execution/ChainModifiers;)V a
	traceCommandStart (Lnet/minecraft/commands/execution/ExecutionContext;Lnet/minecraft/commands/execution/Frame;)V a
net/minecraft/commands/execution/tasks/BuildContexts$Continuation gu$a
	modifiers b
	originalSource c
	sources d
net/minecraft/commands/execution/tasks/BuildContexts$TopLevel gu$b
	source b
net/minecraft/commands/execution/tasks/BuildContexts$Unbound gu$c
	execute (Lnet/minecraft/commands/ExecutionCommandSource;Lnet/minecraft/commands/execution/ExecutionContext;Lnet/minecraft/commands/execution/Frame;)V a
net/minecraft/commands/execution/tasks/CallFunction gv
	function a
	resultCallback b
	returnParentFrame c
	execute (Lnet/minecraft/commands/ExecutionCommandSource;Lnet/minecraft/commands/execution/ExecutionContext;Lnet/minecraft/commands/execution/Frame;)V a
net/minecraft/commands/execution/tasks/ContinuationTask gw
	arguments b
	index d
	selfEntry c
	taskFactory a
	schedule (Lnet/minecraft/commands/execution/ExecutionContext;Lnet/minecraft/commands/execution/Frame;Ljava/util/List;Lnet/minecraft/commands/execution/tasks/ContinuationTask$TaskProvider;)V a
net/minecraft/commands/execution/tasks/ContinuationTask$TaskProvider gw$a
net/minecraft/commands/execution/tasks/ExecuteCommand gx
	commandInput a
	executionContext c
	modifiers b
	execute (Lnet/minecraft/commands/ExecutionCommandSource;Lnet/minecraft/commands/execution/ExecutionContext;Lnet/minecraft/commands/execution/Frame;)V a
net/minecraft/commands/execution/tasks/FallthroughTask gy
	INSTANCE a
	instance ()Lnet/minecraft/commands/execution/EntryAction; a
net/minecraft/commands/execution/tasks/IsolatedCall gz
	output b
	taskProducer a
net/minecraft/commands/functions/CommandFunction hb
	fromLines (Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/ExecutionCommandSource;Ljava/util/List;)Lnet/minecraft/commands/functions/CommandFunction; a
	id ()Lnet/minecraft/resources/ResourceLocation; a
	instantiate (Lnet/minecraft/nbt/CompoundTag;Lcom/mojang/brigadier/CommandDispatcher;Ljava/lang/Object;)Lnet/minecraft/commands/functions/InstantiatedFunction; a
	parseCommand (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/ExecutionCommandSource;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/execution/UnboundEntryAction; a
	shouldConcatenateNextLine (Ljava/lang/CharSequence;)Z a
net/minecraft/commands/functions/FunctionBuilder hc
	macroArguments c
	macroEntries b
	plainEntries a
	addCommand (Lnet/minecraft/commands/execution/UnboundEntryAction;)V a
	addMacro (Ljava/lang/String;I)V a
	build (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/commands/functions/CommandFunction; a
	convertToIndices (Ljava/util/List;)Lit/unimi/dsi/fastutil/ints/IntList; a
	getArgumentIndex (Ljava/lang/String;)I a
net/minecraft/commands/functions/InstantiatedFunction hd
	entries ()Ljava/util/List; b
	id ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/functions/MacroFunction he
	DECIMAL_FORMAT a
	MAX_CACHE_ENTRIES b
	cache d
	entries f
	id e
	parameters c
	id ()Lnet/minecraft/resources/ResourceLocation; a
	instantiate (Lnet/minecraft/nbt/CompoundTag;Lcom/mojang/brigadier/CommandDispatcher;Ljava/lang/Object;)Lnet/minecraft/commands/functions/InstantiatedFunction; a
	instantiate (Lnet/minecraft/nbt/CompoundTag;Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/ExecutionCommandSource;)Lnet/minecraft/commands/functions/InstantiatedFunction; a
	lookupValues (Ljava/util/List;Lit/unimi/dsi/fastutil/ints/IntList;Ljava/util/List;)V a
	stringify (Lnet/minecraft/nbt/Tag;)Ljava/lang/String; a
	substituteAndParse (Ljava/util/List;Ljava/util/List;Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/ExecutionCommandSource;)Lnet/minecraft/commands/functions/InstantiatedFunction; a
net/minecraft/commands/functions/MacroFunction$Entry he$a
	instantiate (Ljava/util/List;Lcom/mojang/brigadier/CommandDispatcher;Ljava/lang/Object;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/commands/execution/UnboundEntryAction; a
	parameters ()Lit/unimi/dsi/fastutil/ints/IntList; a
net/minecraft/commands/functions/MacroFunction$MacroEntry he$b
	parameters b
	template a
	instantiate (Ljava/util/List;Lcom/mojang/brigadier/CommandDispatcher;Ljava/lang/Object;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/commands/execution/UnboundEntryAction; a
	instantiate (Ljava/util/List;Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/ExecutionCommandSource;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/commands/execution/UnboundEntryAction; a
	parameters ()Lit/unimi/dsi/fastutil/ints/IntList; a
net/minecraft/commands/functions/MacroFunction$PlainTextEntry he$c
	compiledAction a
	instantiate (Ljava/util/List;Lcom/mojang/brigadier/CommandDispatcher;Ljava/lang/Object;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/commands/execution/UnboundEntryAction; a
	parameters ()Lit/unimi/dsi/fastutil/ints/IntList; a
net/minecraft/commands/functions/PlainTextFunction hf
	entries b
	id a
	entries ()Ljava/util/List; b
	id ()Lnet/minecraft/resources/ResourceLocation; a
	instantiate (Lnet/minecraft/nbt/CompoundTag;Lcom/mojang/brigadier/CommandDispatcher;Ljava/lang/Object;)Lnet/minecraft/commands/functions/InstantiatedFunction; a
net/minecraft/commands/functions/StringTemplate hg
	segments a
	variables b
	fromString (Ljava/lang/String;I)Lnet/minecraft/commands/functions/StringTemplate; a
	isValidVariableName (Ljava/lang/String;)Z a
	segments ()Ljava/util/List; a
	substitute (Ljava/util/List;)Ljava/lang/String; a
	variables ()Ljava/util/List; b
net/minecraft/commands/synchronization/ArgumentTypeInfo hj
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
net/minecraft/commands/synchronization/ArgumentTypeInfo$Template hj$a
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/synchronization/ArgumentTypeInfos hk
	BY_CLASS a
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
	byClass (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
	fixClassType (Ljava/lang/Class;)Ljava/lang/Class; b
	isClassRecognized (Ljava/lang/Class;)Z a
	register (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/Class;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
net/minecraft/commands/synchronization/ArgumentUtils hl
	LOGGER a
	NUMBER_FLAG_MAX c
	NUMBER_FLAG_MIN b
	createNumberFlags (ZZ)I a
	findUsedArgumentTypes (Lcom/mojang/brigadier/tree/CommandNode;)Ljava/util/Set; a
	findUsedArgumentTypes (Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Set;Ljava/util/Set;)V a
	numberHasMax (B)Z b
	numberHasMin (B)Z a
	serializeArgumentToJson (Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V a
	serializeCap (Lcom/google/gson/JsonObject;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;)V a
	serializeCap (Lcom/google/gson/JsonObject;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;)V a
	serializeNodeToJson (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject; a
net/minecraft/commands/synchronization/SingletonArgumentInfo hm
	template a
	contextAware (Ljava/util/function/Function;)Lnet/minecraft/commands/synchronization/SingletonArgumentInfo; a
	contextFree (Ljava/util/function/Supplier;)Lnet/minecraft/commands/synchronization/SingletonArgumentInfo; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/SingletonArgumentInfo$Template; a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/SingletonArgumentInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/SingletonArgumentInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/SingletonArgumentInfo$Template; b
net/minecraft/commands/synchronization/SingletonArgumentInfo$Template hm$a
	constructor b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/synchronization/SuggestionProviders hn
	ALL_RECIPES b
	ASK_SERVER a
	AVAILABLE_SOUNDS c
	DEFAULT_NAME f
	PROVIDERS_BY_NAME e
	SUMMONABLE_ENTITIES d
	getName (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lnet/minecraft/resources/ResourceLocation; a
	getProvider (Lnet/minecraft/resources/ResourceLocation;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; a
	register (Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; a
	safelySwap (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; b
net/minecraft/commands/synchronization/SuggestionProviders$Wrapper hn$a
	delegate a
	name b
net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo ho
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template; a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lcom/mojang/brigadier/arguments/DoubleArgumentType;)Lnet/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template; a
net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template ho$a
	max c
	min b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/DoubleArgumentType; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo hp
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template; a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lcom/mojang/brigadier/arguments/FloatArgumentType;)Lnet/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template; a
net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template hp$a
	max c
	min b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/FloatArgumentType; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo hq
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template; a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lcom/mojang/brigadier/arguments/IntegerArgumentType;)Lnet/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template; a
net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template hq$a
	max c
	min b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/IntegerArgumentType; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/synchronization/brigadier/LongArgumentInfo hr
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template; a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lcom/mojang/brigadier/arguments/LongArgumentType;)Lnet/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template; a
net/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template hr$a
	max c
	min b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/LongArgumentType; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer hs
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template; a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lcom/mojang/brigadier/arguments/StringArgumentType;)Lnet/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template; a
net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template hs$a
	type b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/StringArgumentType; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/core/AxisCycle hv
	$VALUES f
	AXIS_VALUES d
	BACKWARD c
	FORWARD b
	NONE a
	VALUES e
	$values ()[Lnet/minecraft/core/AxisCycle; b
	between (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/AxisCycle; a
	cycle (DDDLnet/minecraft/core/Direction$Axis;)D a
	cycle (IIILnet/minecraft/core/Direction$Axis;)I a
	cycle (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction$Axis; a
	inverse ()Lnet/minecraft/core/AxisCycle; a
net/minecraft/core/BlockMath hw
	LOGGER c
	VANILLA_UV_TRANSFORM_GLOBAL_TO_LOCAL b
	VANILLA_UV_TRANSFORM_LOCAL_TO_GLOBAL a
	blockCenterToCorner (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; a
	blockCornerToCenter (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; b
	getUVLockTransform (Lcom/mojang/math/Transformation;Lnet/minecraft/core/Direction;Ljava/util/function/Supplier;)Lcom/mojang/math/Transformation; a
net/minecraft/core/BlockPos hx
	CODEC a
	LOGGER d
	PACKED_X_LENGTH e
	PACKED_X_MASK i
	PACKED_Y_LENGTH c
	PACKED_Y_MASK j
	PACKED_Z_LENGTH h
	PACKED_Z_MASK k
	X_OFFSET n
	Y_OFFSET l
	ZERO b
	Z_OFFSET m
	above ()Lnet/minecraft/core/BlockPos; c
	above ()Lnet/minecraft/core/Vec3i; p
	above (I)Lnet/minecraft/core/BlockPos; b
	above (I)Lnet/minecraft/core/Vec3i; n
	asLong ()J a
	asLong (III)J a
	atY (I)Lnet/minecraft/core/BlockPos; h
	below ()Lnet/minecraft/core/BlockPos; d
	below ()Lnet/minecraft/core/Vec3i; o
	below (I)Lnet/minecraft/core/BlockPos; c
	below (I)Lnet/minecraft/core/Vec3i; m
	betweenClosed (IIIIII)Ljava/lang/Iterable; b
	betweenClosed (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/lang/Iterable; a
	betweenClosedStream (IIIIII)Ljava/util/stream/Stream; a
	betweenClosedStream (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; b
	betweenClosedStream (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Ljava/util/stream/Stream; a
	betweenClosedStream (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; a
	breadthFirstTraversal (Lnet/minecraft/core/BlockPos;IILjava/util/function/BiConsumer;Ljava/util/function/Predicate;)I a
	containing (DDD)Lnet/minecraft/core/BlockPos; a
	containing (Lnet/minecraft/core/Position;)Lnet/minecraft/core/BlockPos; a
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; c
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	east ()Lnet/minecraft/core/BlockPos; h
	east ()Lnet/minecraft/core/Vec3i; k
	east (I)Lnet/minecraft/core/BlockPos; g
	east (I)Lnet/minecraft/core/Vec3i; i
	findClosestMatch (Lnet/minecraft/core/BlockPos;IILjava/util/function/Predicate;)Ljava/util/Optional; a
	getCenter ()Lnet/minecraft/world/phys/Vec3; b
	getFlatIndex (J)J e
	getX (J)I a
	getY (J)I b
	getZ (J)I c
	immutable ()Lnet/minecraft/core/BlockPos; i
	multiply (I)Lnet/minecraft/core/BlockPos; a
	multiply (I)Lnet/minecraft/core/Vec3i; o
	mutable ()Lnet/minecraft/core/BlockPos$MutableBlockPos; j
	north ()Lnet/minecraft/core/BlockPos; e
	north ()Lnet/minecraft/core/Vec3i; n
	north (I)Lnet/minecraft/core/BlockPos; d
	north (I)Lnet/minecraft/core/Vec3i; l
	of (J)Lnet/minecraft/core/BlockPos; d
	offset (III)Lnet/minecraft/core/BlockPos; b
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (JIII)J a
	offset (JLnet/minecraft/core/Direction;)J a
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; a
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	randomBetweenClosed (Lnet/minecraft/util/RandomSource;IIIIIII)Ljava/lang/Iterable; a
	randomInCube (Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;I)Ljava/lang/Iterable; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	south ()Lnet/minecraft/core/BlockPos; f
	south ()Lnet/minecraft/core/Vec3i; m
	south (I)Lnet/minecraft/core/BlockPos; e
	south (I)Lnet/minecraft/core/Vec3i; k
	spiralAround (Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Ljava/lang/Iterable; a
	squareOutSouthEast (Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; b
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	west ()Lnet/minecraft/core/BlockPos; g
	west ()Lnet/minecraft/core/Vec3i; l
	west (I)Lnet/minecraft/core/BlockPos; f
	west (I)Lnet/minecraft/core/Vec3i; j
	withinManhattan (Lnet/minecraft/core/BlockPos;III)Ljava/lang/Iterable; a
	withinManhattanStream (Lnet/minecraft/core/BlockPos;III)Ljava/util/stream/Stream; b
net/minecraft/core/BlockPos$MutableBlockPos hx$a
	above ()Lnet/minecraft/core/Vec3i; p
	above (I)Lnet/minecraft/core/Vec3i; n
	below ()Lnet/minecraft/core/Vec3i; o
	below (I)Lnet/minecraft/core/Vec3i; m
	clamp (Lnet/minecraft/core/Direction$Axis;II)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	east ()Lnet/minecraft/core/Vec3i; k
	east (I)Lnet/minecraft/core/Vec3i; i
	immutable ()Lnet/minecraft/core/BlockPos; i
	move (III)Lnet/minecraft/core/BlockPos$MutableBlockPos; e
	move (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	move (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	move (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; h
	multiply (I)Lnet/minecraft/core/BlockPos; a
	multiply (I)Lnet/minecraft/core/Vec3i; o
	north ()Lnet/minecraft/core/Vec3i; n
	north (I)Lnet/minecraft/core/Vec3i; l
	offset (III)Lnet/minecraft/core/BlockPos; b
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	set (DDD)Lnet/minecraft/core/BlockPos$MutableBlockPos; b
	set (III)Lnet/minecraft/core/BlockPos$MutableBlockPos; d
	set (J)Lnet/minecraft/core/BlockPos$MutableBlockPos; f
	set (Lnet/minecraft/core/AxisCycle;III)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	set (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; g
	setWithOffset (Lnet/minecraft/core/Vec3i;III)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setWithOffset (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setWithOffset (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setX (I)Lnet/minecraft/core/BlockPos$MutableBlockPos; p
	setX (I)Lnet/minecraft/core/Vec3i; u
	setY (I)Lnet/minecraft/core/BlockPos$MutableBlockPos; q
	setY (I)Lnet/minecraft/core/Vec3i; t
	setZ (I)Lnet/minecraft/core/BlockPos$MutableBlockPos; r
	setZ (I)Lnet/minecraft/core/Vec3i; s
	south ()Lnet/minecraft/core/Vec3i; m
	south (I)Lnet/minecraft/core/Vec3i; k
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	west ()Lnet/minecraft/core/Vec3i; l
	west (I)Lnet/minecraft/core/Vec3i; j
net/minecraft/core/Cloner hy
	directCodec a
	clone (Ljava/lang/Object;Lnet/minecraft/core/HolderLookup$Provider;Lnet/minecraft/core/HolderLookup$Provider;)Ljava/lang/Object; a
net/minecraft/core/Cloner$Factory hy$a
	codecs a
	addCodec (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lnet/minecraft/core/Cloner$Factory; a
	cloner (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Cloner; a
net/minecraft/core/Cursor3D hz
	TYPE_CORNER d
	TYPE_EDGE c
	TYPE_FACE b
	TYPE_INSIDE a
	depth j
	end k
	height i
	index l
	originX e
	originY f
	originZ g
	width h
	x m
	y n
	z o
	advance ()Z a
	getNextType ()I e
	nextX ()I b
	nextY ()I c
	nextZ ()I d
net/minecraft/core/DefaultedMappedRegistry ia
	defaultKey b
	defaultValue c
	byId (I)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getDefaultKey ()Lnet/minecraft/resources/ResourceLocation; a
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getOptional (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; b
	getRandom (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder$Reference; a
net/minecraft/core/DefaultedRegistry ib
	byId (I)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getDefaultKey ()Lnet/minecraft/resources/ResourceLocation; a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/core/Direction ic
	$VALUES s
	BY_2D_DATA r
	BY_3D_DATA q
	CODEC g
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	VALUES p
	VERTICAL_CODEC h
	WEST e
	axis m
	axisDirection n
	data2d k
	data3d i
	name l
	normal o
	oppositeIndex j
	$values ()[Lnet/minecraft/core/Direction; w
	allShuffled (Lnet/minecraft/util/RandomSource;)Ljava/util/Collection; a
	byName (Ljava/lang/String;)Lnet/minecraft/core/Direction; a
	from2DDataValue (I)Lnet/minecraft/core/Direction; b
	from3DDataValue (I)Lnet/minecraft/core/Direction; a
	fromAxisAndDirection (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/core/Direction$AxisDirection;)Lnet/minecraft/core/Direction; a
	fromDelta (III)Lnet/minecraft/core/Direction; a
	fromYRot (D)Lnet/minecraft/core/Direction; a
	get (Lnet/minecraft/core/Direction$AxisDirection;Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; a
	get2DDataValue ()I e
	get3DDataValue ()I d
	getAxis ()Lnet/minecraft/core/Direction$Axis; o
	getAxisDirection ()Lnet/minecraft/core/Direction$AxisDirection; f
	getClockWise ()Lnet/minecraft/core/Direction; h
	getClockWise (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; a
	getClockWiseX ()Lnet/minecraft/core/Direction; r
	getClockWiseZ ()Lnet/minecraft/core/Direction; t
	getCounterClockWise ()Lnet/minecraft/core/Direction; i
	getCounterClockWise (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; b
	getCounterClockWiseX ()Lnet/minecraft/core/Direction; s
	getCounterClockWiseZ ()Lnet/minecraft/core/Direction; u
	getFacingAxis (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; a
	getName ()Ljava/lang/String; n
	getNearest (DDD)Lnet/minecraft/core/Direction; a
	getNearest (FFF)Lnet/minecraft/core/Direction; a
	getNormal ()Lnet/minecraft/core/Vec3i; q
	getOpposite ()Lnet/minecraft/core/Direction; g
	getRandom (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/Direction; b
	getRotation ()Lorg/joml/Quaternionf; b
	getSerializedName ()Ljava/lang/String; c
	getStepX ()I j
	getStepY ()I k
	getStepZ ()I l
	isFacingAngle (F)Z a
	makeDirectionArray (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)[Lnet/minecraft/core/Direction; a
	orderedByNearest (Lnet/minecraft/world/entity/Entity;)[Lnet/minecraft/core/Direction; a
	rotate (Lorg/joml/Matrix4f;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	step ()Lorg/joml/Vector3f; m
	stream ()Ljava/util/stream/Stream; a
	toYRot ()F p
	verifyVertical (Lnet/minecraft/core/Direction;)Lcom/mojang/serialization/DataResult; a
net/minecraft/core/Direction$Axis ic$a
	$VALUES g
	CODEC e
	VALUES d
	X a
	Y b
	Z c
	name f
	$values ()[Lnet/minecraft/core/Direction$Axis; f
	byName (Ljava/lang/String;)Lnet/minecraft/core/Direction$Axis; a
	choose (DDD)D a
	choose (III)I a
	getName ()Ljava/lang/String; a
	getPlane ()Lnet/minecraft/core/Direction$Plane; e
	getRandom (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/Direction$Axis; a
	getSerializedName ()Ljava/lang/String; c
	isHorizontal ()Z d
	isVertical ()Z b
	test (Lnet/minecraft/core/Direction;)Z a
net/minecraft/core/Direction$AxisDirection ic$b
	$VALUES e
	NEGATIVE b
	POSITIVE a
	name d
	step c
	$values ()[Lnet/minecraft/core/Direction$AxisDirection; d
	getName ()Ljava/lang/String; b
	getStep ()I a
	opposite ()Lnet/minecraft/core/Direction$AxisDirection; c
net/minecraft/core/Direction$Plane ic$c
	$VALUES e
	HORIZONTAL a
	VERTICAL b
	axis d
	faces c
	$values ()[Lnet/minecraft/core/Direction$Plane; b
	getRandomAxis (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/Direction$Axis; b
	getRandomDirection (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/Direction; a
	shuffledCopy (Lnet/minecraft/util/RandomSource;)Ljava/util/List; c
	stream ()Ljava/util/stream/Stream; a
	test (Lnet/minecraft/core/Direction;)Z a
net/minecraft/core/Direction8 id
	$VALUES k
	EAST c
	NORTH a
	NORTH_EAST b
	NORTH_WEST h
	SOUTH e
	SOUTH_EAST d
	SOUTH_WEST f
	WEST g
	directions i
	step j
	$values ()[Lnet/minecraft/core/Direction8; d
	getDirections ()Ljava/util/Set; a
	getStepX ()I b
	getStepZ ()I c
net/minecraft/core/FrontAndTop ie
	$VALUES q
	DOWN_EAST a
	DOWN_NORTH b
	DOWN_SOUTH c
	DOWN_WEST d
	EAST_UP j
	LOOKUP_TOP_FRONT m
	NORTH_UP k
	SOUTH_UP l
	UP_EAST e
	UP_NORTH f
	UP_SOUTH g
	UP_WEST h
	WEST_UP i
	front p
	name n
	top o
	$values ()[Lnet/minecraft/core/FrontAndTop; d
	fromFrontAndTop (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/FrontAndTop; a
	front ()Lnet/minecraft/core/Direction; a
	getSerializedName ()Ljava/lang/String; c
	lookupKey (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)I b
	top ()Lnet/minecraft/core/Direction; b
net/minecraft/core/GlobalPos ig
	CODEC a
	dimension b
	pos c
	dimension ()Lnet/minecraft/resources/ResourceKey; a
	of (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/GlobalPos; a
	pos ()Lnet/minecraft/core/BlockPos; b
net/minecraft/core/Holder ih
	canSerializeIn (Lnet/minecraft/core/HolderOwner;)Z a
	direct (Ljava/lang/Object;)Lnet/minecraft/core/Holder; a
	is (Ljava/util/function/Predicate;)Z a
	is (Lnet/minecraft/resources/ResourceKey;)Z a
	is (Lnet/minecraft/resources/ResourceLocation;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	isBound ()Z b
	kind ()Lnet/minecraft/core/Holder$Kind; f
	tags ()Ljava/util/stream/Stream; c
	unwrap ()Lcom/mojang/datafixers/util/Either; d
	unwrapKey ()Ljava/util/Optional; e
	value ()Ljava/lang/Object; a
net/minecraft/core/Holder$Direct ih$a
	value a
	canSerializeIn (Lnet/minecraft/core/HolderOwner;)Z a
	is (Ljava/util/function/Predicate;)Z a
	is (Lnet/minecraft/resources/ResourceKey;)Z a
	is (Lnet/minecraft/resources/ResourceLocation;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	isBound ()Z b
	kind ()Lnet/minecraft/core/Holder$Kind; f
	tags ()Ljava/util/stream/Stream; c
	unwrap ()Lcom/mojang/datafixers/util/Either; d
	unwrapKey ()Ljava/util/Optional; e
	value ()Ljava/lang/Object; a
net/minecraft/core/Holder$Kind ih$b
	$VALUES c
	DIRECT b
	REFERENCE a
	$values ()[Lnet/minecraft/core/Holder$Kind; a
net/minecraft/core/Holder$Reference ih$c
	key d
	owner a
	tags b
	type c
	value e
	bindKey (Lnet/minecraft/resources/ResourceKey;)V b
	bindTags (Ljava/util/Collection;)V a
	bindValue (Ljava/lang/Object;)V b
	canSerializeIn (Lnet/minecraft/core/HolderOwner;)Z a
	createIntrusive (Lnet/minecraft/core/HolderOwner;Ljava/lang/Object;)Lnet/minecraft/core/Holder$Reference; a
	createStandAlone (Lnet/minecraft/core/HolderOwner;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Holder$Reference; a
	is (Ljava/util/function/Predicate;)Z a
	is (Lnet/minecraft/resources/ResourceKey;)Z a
	is (Lnet/minecraft/resources/ResourceLocation;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	isBound ()Z b
	key ()Lnet/minecraft/resources/ResourceKey; g
	kind ()Lnet/minecraft/core/Holder$Kind; f
	tags ()Ljava/util/stream/Stream; c
	unwrap ()Lcom/mojang/datafixers/util/Either; d
	unwrapKey ()Ljava/util/Optional; e
	value ()Ljava/lang/Object; a
net/minecraft/core/Holder$Reference$Type ih$c$a
	$VALUES c
	INTRUSIVE b
	STAND_ALONE a
	$values ()[Lnet/minecraft/core/Holder$Reference$Type; a
net/minecraft/core/HolderGetter ii
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	get (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; a
	getOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Holder$Reference; b
	getOrThrow (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; b
net/minecraft/core/HolderGetter$Provider ii$a
	lookup (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	lookupOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/HolderGetter; b
net/minecraft/core/HolderLookup ij
	filterElements (Ljava/util/function/Predicate;)Lnet/minecraft/core/HolderLookup; a
	listElementIds ()Ljava/util/stream/Stream; c
	listElements ()Ljava/util/stream/Stream; b
	listTagIds ()Ljava/util/stream/Stream; e
	listTags ()Ljava/util/stream/Stream; d
net/minecraft/core/HolderLookup$Delegate ij$a
	parent c
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	get (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; a
	listElements ()Ljava/util/stream/Stream; b
	listTags ()Ljava/util/stream/Stream; d
net/minecraft/core/HolderLookup$Provider ij$b
	asGetterLookup ()Lnet/minecraft/core/HolderGetter$Provider; b
	create (Ljava/util/stream/Stream;)Lnet/minecraft/core/HolderLookup$Provider; a
	listRegistries ()Ljava/util/stream/Stream; a
	lookup (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	lookupOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/HolderLookup$RegistryLookup; b
net/minecraft/core/HolderLookup$RegistryLookup ij$c
	filterFeatures (Lnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/core/HolderLookup; a
	key ()Lnet/minecraft/resources/ResourceKey; f
	registryLifecycle ()Lcom/mojang/serialization/Lifecycle; g
net/minecraft/core/HolderLookup$RegistryLookup$Delegate ij$c$a
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	get (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; a
	key ()Lnet/minecraft/resources/ResourceKey; f
	listElements ()Ljava/util/stream/Stream; b
	listTags ()Ljava/util/stream/Stream; d
	parent ()Lnet/minecraft/core/HolderLookup$RegistryLookup; a
	registryLifecycle ()Lcom/mojang/serialization/Lifecycle; g
net/minecraft/core/HolderOwner ik
	canSerializeIn (Lnet/minecraft/core/HolderOwner;)Z a
net/minecraft/core/HolderSet il
	canSerializeIn (Lnet/minecraft/core/HolderOwner;)Z a
	contains (Lnet/minecraft/core/Holder;)Z a
	direct (Ljava/util/List;)Lnet/minecraft/core/HolderSet$Direct; a
	direct (Ljava/util/function/Function;Ljava/util/Collection;)Lnet/minecraft/core/HolderSet$Direct; a
	direct (Ljava/util/function/Function;[Ljava/lang/Object;)Lnet/minecraft/core/HolderSet$Direct; a
	direct ([Lnet/minecraft/core/Holder;)Lnet/minecraft/core/HolderSet$Direct; a
	emptyNamed (Lnet/minecraft/core/HolderOwner;Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; a
	get (I)Lnet/minecraft/core/Holder; a
	getRandomElement (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	size ()I b
	stream ()Ljava/util/stream/Stream; a
	unwrap ()Lcom/mojang/datafixers/util/Either; c
	unwrapKey ()Ljava/util/Optional; d
net/minecraft/core/HolderSet$Direct il$a
	contents a
	contentsSet b
	contains (Lnet/minecraft/core/Holder;)Z a
	contents ()Ljava/util/List; e
	unwrap ()Lcom/mojang/datafixers/util/Either; c
	unwrapKey ()Ljava/util/Optional; d
net/minecraft/core/HolderSet$ListBacked il$b
	canSerializeIn (Lnet/minecraft/core/HolderOwner;)Z a
	contents ()Ljava/util/List; e
	get (I)Lnet/minecraft/core/Holder; a
	getRandomElement (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	size ()I b
	stream ()Ljava/util/stream/Stream; a
net/minecraft/core/HolderSet$Named il$c
	contents c
	key b
	owner a
	bind (Ljava/util/List;)V b
	canSerializeIn (Lnet/minecraft/core/HolderOwner;)Z a
	contains (Lnet/minecraft/core/Holder;)Z a
	contents ()Ljava/util/List; e
	key ()Lnet/minecraft/tags/TagKey; f
	unwrap ()Lcom/mojang/datafixers/util/Either; c
	unwrapKey ()Ljava/util/Optional; d
net/minecraft/core/IdMap im
	DEFAULT a
	byId (I)Ljava/lang/Object; a
	byIdOrThrow (I)Ljava/lang/Object; b
	getId (Ljava/lang/Object;)I a
	size ()I b
net/minecraft/core/IdMapper in
	idToT d
	nextId b
	tToId c
	add (Ljava/lang/Object;)V b
	addMapping (Ljava/lang/Object;I)V a
	byId (I)Ljava/lang/Object; a
	contains (I)Z c
	getId (Ljava/lang/Object;)I a
	size ()I b
net/minecraft/core/LayeredRegistryAccess io
	composite c
	keys a
	values b
	collectRegistries (Ljava/util/stream/Stream;)Ljava/util/Map; a
	compositeAccess ()Lnet/minecraft/core/RegistryAccess$Frozen; a
	getAccessForLoading (Ljava/lang/Object;)Lnet/minecraft/core/RegistryAccess$Frozen; b
	getAccessFrom (Ljava/lang/Object;)Lnet/minecraft/core/RegistryAccess$Frozen; c
	getCompositeAccessForLayers (II)Lnet/minecraft/core/RegistryAccess$Frozen; a
	getLayer (Ljava/lang/Object;)Lnet/minecraft/core/RegistryAccess$Frozen; a
	getLayerIndexOrThrow (Ljava/lang/Object;)I d
	replaceFrom (Ljava/lang/Object;Ljava/util/List;)Lnet/minecraft/core/LayeredRegistryAccess; a
	replaceFrom (Ljava/lang/Object;[Lnet/minecraft/core/RegistryAccess$Frozen;)Lnet/minecraft/core/LayeredRegistryAccess; a
net/minecraft/core/MappedRegistry ip
	LOGGER b
	byId d
	byKey g
	byLocation f
	byValue h
	frozen l
	holdersInOrder n
	key c
	lifecycles i
	lookup p
	nextId o
	registryLifecycle j
	tags k
	toId e
	unregisteredIntrusiveHolders m
	asLookup ()Lnet/minecraft/core/HolderLookup$RegistryLookup; p
	bindTags (Ljava/util/Map;)V a
	byId (I)Ljava/lang/Object; a
	containsKey (Lnet/minecraft/resources/ResourceKey;)Z c
	containsKey (Lnet/minecraft/resources/ResourceLocation;)Z c
	createIntrusiveHolder (Ljava/lang/Object;)Lnet/minecraft/core/Holder$Reference; f
	createRegistrationLookup ()Lnet/minecraft/core/HolderGetter; n
	createTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; d
	entrySet ()Ljava/util/Set; g
	freeze ()Lnet/minecraft/core/Registry; l
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getHolder (I)Ljava/util/Optional; c
	getHolder (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; b
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getOrCreateHolderOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Holder$Reference; h
	getOrCreateTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; a
	getRandom (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	getResourceKey (Ljava/lang/Object;)Ljava/util/Optional; c
	getTag (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; b
	getTagNames ()Ljava/util/stream/Stream; j
	getTags ()Ljava/util/stream/Stream; i
	getValueFromNullable (Lnet/minecraft/core/Holder$Reference;)Ljava/lang/Object; a
	holderOwner ()Lnet/minecraft/core/HolderOwner; o
	holders ()Ljava/util/stream/Stream; h
	holdersInOrder ()Ljava/util/List; a
	isEmpty ()Z k
	key ()Lnet/minecraft/resources/ResourceKey; c
	keySet ()Ljava/util/Set; e
	lifecycle (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; e
	register (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder$Reference; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder$Reference; a
	registryKeySet ()Ljava/util/Set; f
	registryLifecycle ()Lcom/mojang/serialization/Lifecycle; d
	resetTags ()V m
	size ()I b
	validateWrite ()V v
	validateWrite (Lnet/minecraft/resources/ResourceKey;)V g
	wrapAsHolder (Ljava/lang/Object;)Lnet/minecraft/core/Holder; d
net/minecraft/core/NonNullList iq
	defaultValue b
	list a
	create ()Lnet/minecraft/core/NonNullList; a
	createWithCapacity (I)Lnet/minecraft/core/NonNullList; a
	of (Ljava/lang/Object;[Ljava/lang/Object;)Lnet/minecraft/core/NonNullList; a
	withSize (ILjava/lang/Object;)Lnet/minecraft/core/NonNullList; a
net/minecraft/core/Position ir
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/QuartPos is
	BITS a
	MASK c
	SECTION_TO_QUARTS_BITS d
	SIZE b
	fromBlock (I)I a
	fromSection (I)I d
	quartLocal (I)I b
	toBlock (I)I c
	toSection (I)I e
net/minecraft/core/Registry it
	asHolderIdMap ()Lnet/minecraft/core/IdMap; t
	asLookup ()Lnet/minecraft/core/HolderLookup$RegistryLookup; p
	asTagAddingLookup ()Lnet/minecraft/core/HolderLookup$RegistryLookup; u
	bindTags (Ljava/util/Map;)V a
	byNameCodec ()Lcom/mojang/serialization/Codec; q
	containsKey (Lnet/minecraft/resources/ResourceKey;)Z c
	containsKey (Lnet/minecraft/resources/ResourceLocation;)Z c
	createIntrusiveHolder (Ljava/lang/Object;)Lnet/minecraft/core/Holder$Reference; f
	entrySet ()Ljava/util/Set; g
	freeze ()Lnet/minecraft/core/Registry; l
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getHolder (I)Ljava/util/Optional; c
	getHolder (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; b
	getHolderOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Holder$Reference; f
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getOptional (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; d
	getOptional (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; b
	getOrCreateTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; a
	getOrThrow (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; e
	getRandom (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	getResourceKey (Ljava/lang/Object;)Ljava/util/Optional; c
	getTag (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; b
	getTagNames ()Ljava/util/stream/Stream; j
	getTagOrEmpty (Lnet/minecraft/tags/TagKey;)Ljava/lang/Iterable; c
	getTags ()Ljava/util/stream/Stream; i
	holderByNameCodec ()Lcom/mojang/serialization/Codec; r
	holderOwner ()Lnet/minecraft/core/HolderOwner; o
	holders ()Ljava/util/stream/Stream; h
	key ()Lnet/minecraft/resources/ResourceKey; c
	keySet ()Ljava/util/Set; e
	lifecycle (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; e
	register (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Ljava/lang/Object; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceLocation;Ljava/lang/Object;)Ljava/lang/Object; a
	registerForHolder (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Lnet/minecraft/core/Holder$Reference; b
	registerForHolder (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceLocation;Ljava/lang/Object;)Lnet/minecraft/core/Holder$Reference; b
	registryKeySet ()Ljava/util/Set; f
	registryLifecycle ()Lcom/mojang/serialization/Lifecycle; d
	resetTags ()V m
	stream ()Ljava/util/stream/Stream; s
	wrapAsHolder (Ljava/lang/Object;)Lnet/minecraft/core/Holder; d
net/minecraft/core/RegistryAccess iu
	EMPTY b
	LOGGER a
	allRegistriesLifecycle ()Lcom/mojang/serialization/Lifecycle; e
	freeze ()Lnet/minecraft/core/RegistryAccess$Frozen; d
	fromRegistryOfRegistries (Lnet/minecraft/core/Registry;)Lnet/minecraft/core/RegistryAccess$Frozen; a
	listRegistries ()Ljava/util/stream/Stream; a
	lookup (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	registries ()Ljava/util/stream/Stream; c
	registry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; c
	registryOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Registry; d
net/minecraft/core/RegistryAccess$Frozen iu$b
net/minecraft/core/RegistryAccess$ImmutableRegistryAccess iu$c
	registries c
	registries ()Ljava/util/stream/Stream; c
	registry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; c
net/minecraft/core/RegistryAccess$RegistryEntry iu$d
	key a
	value b
	freeze ()Lnet/minecraft/core/RegistryAccess$RegistryEntry; c
	fromMapEntry (Ljava/util/Map$Entry;)Lnet/minecraft/core/RegistryAccess$RegistryEntry; a
	fromUntyped (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Registry;)Lnet/minecraft/core/RegistryAccess$RegistryEntry; a
	key ()Lnet/minecraft/resources/ResourceKey; a
	value ()Lnet/minecraft/core/Registry; b
net/minecraft/core/RegistryCodecs iv
	fullCodec (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
	homogeneousList (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; a
	homogeneousList (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	homogeneousList (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec; a
	homogeneousList (Lnet/minecraft/resources/ResourceKey;Z)Lcom/mojang/serialization/Codec; a
	networkCodec (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	withNameAndId (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec; a
net/minecraft/core/RegistryCodecs$RegistryEntry iv$a
	id b
	key a
	value c
	id ()I b
	key ()Lnet/minecraft/resources/ResourceKey; a
	value ()Ljava/lang/Object; c
net/minecraft/core/RegistrySetBuilder iw
	entries a
	add (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lnet/minecraft/core/RegistrySetBuilder$RegistryBootstrap;)Lnet/minecraft/core/RegistrySetBuilder; a
	add (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/RegistrySetBuilder$RegistryBootstrap;)Lnet/minecraft/core/RegistrySetBuilder; a
	build (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/core/HolderLookup$Provider; a
	buildPatch (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/core/HolderLookup$Provider;Lnet/minecraft/core/Cloner$Factory;)Lnet/minecraft/core/RegistrySetBuilder$PatchedRegistries; a
	buildProviderWithContext (Lnet/minecraft/core/RegistryAccess;Ljava/util/stream/Stream;)Lnet/minecraft/core/HolderLookup$Provider; a
	createLazyFullPatchedRegistries (Lnet/minecraft/core/HolderOwner;Lnet/minecraft/core/Cloner$Factory;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/HolderLookup$Provider;Lnet/minecraft/core/HolderLookup$Provider;Lorg/apache/commons/lang3/mutable/MutableObject;)Lnet/minecraft/core/HolderLookup$RegistryLookup; a
	createLazyFullPatchedRegistries (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/core/HolderLookup$Provider;Lnet/minecraft/core/Cloner$Factory;Ljava/util/Map;Lnet/minecraft/core/HolderLookup$Provider;)Lnet/minecraft/core/HolderLookup$Provider; a
	createState (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/core/RegistrySetBuilder$BuildState; b
	lookupFromMap (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)Lnet/minecraft/core/HolderLookup$RegistryLookup; a
	wrapContextLookup (Lnet/minecraft/core/HolderLookup$RegistryLookup;)Lnet/minecraft/core/HolderGetter; a
net/minecraft/core/RegistrySetBuilder$BuildState iw$a
	errors e
	lookup b
	owner a
	registeredValues d
	registries c
	bootstapContext ()Lnet/minecraft/data/worldgen/BootstapContext; a
	create (Lnet/minecraft/core/RegistryAccess;Ljava/util/stream/Stream;)Lnet/minecraft/core/RegistrySetBuilder$BuildState; a
	errors ()Ljava/util/List; i
	lookup ()Lnet/minecraft/core/RegistrySetBuilder$UniversalLookup; f
	owner ()Lnet/minecraft/core/RegistrySetBuilder$CompositeOwner; e
	registeredValues ()Ljava/util/Map; h
	registries ()Ljava/util/Map; g
	reportNotCollectedHolders ()V c
	reportUnclaimedRegisteredValues ()V b
	throwOnError ()V d
net/minecraft/core/RegistrySetBuilder$CompositeOwner iw$b
	owners a
	add (Lnet/minecraft/core/HolderOwner;)V b
	canSerializeIn (Lnet/minecraft/core/HolderOwner;)Z a
	cast ()Lnet/minecraft/core/HolderOwner; a
net/minecraft/core/RegistrySetBuilder$EmptyTagLookup iw$c
	owner b
	get (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; a
net/minecraft/core/RegistrySetBuilder$LazyHolder iw$d
	supplier a
	bindValue (Ljava/lang/Object;)V b
	value ()Ljava/lang/Object; a
net/minecraft/core/RegistrySetBuilder$PatchedRegistries iw$e
	full a
	patches b
	full ()Lnet/minecraft/core/HolderLookup$Provider; a
	patches ()Lnet/minecraft/core/HolderLookup$Provider; b
net/minecraft/core/RegistrySetBuilder$RegisteredValue iw$f
	lifecycle b
	value a
	lifecycle ()Lcom/mojang/serialization/Lifecycle; b
	value ()Ljava/lang/Object; a
net/minecraft/core/RegistrySetBuilder$RegistryBootstrap iw$g
net/minecraft/core/RegistrySetBuilder$RegistryContents iw$h
	key a
	lifecycle b
	values c
	buildAsLookup (Lnet/minecraft/core/RegistrySetBuilder$CompositeOwner;)Lnet/minecraft/core/HolderLookup$RegistryLookup; a
	key ()Lnet/minecraft/resources/ResourceKey; a
	lifecycle ()Lcom/mojang/serialization/Lifecycle; b
	values ()Ljava/util/Map; c
net/minecraft/core/RegistrySetBuilder$RegistryStub iw$i
	bootstrap c
	key a
	lifecycle b
	apply (Lnet/minecraft/core/RegistrySetBuilder$BuildState;)V b
	bootstrap ()Lnet/minecraft/core/RegistrySetBuilder$RegistryBootstrap; c
	collectRegisteredValues (Lnet/minecraft/core/RegistrySetBuilder$BuildState;)Lnet/minecraft/core/RegistrySetBuilder$RegistryContents; a
	key ()Lnet/minecraft/resources/ResourceKey; a
	lifecycle ()Lcom/mojang/serialization/Lifecycle; b
net/minecraft/core/RegistrySetBuilder$UniversalLookup iw$j
	holders a
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	getOrCreate (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Holder$Reference; c
net/minecraft/core/RegistrySetBuilder$ValueAndHolder iw$k
	holder b
	value a
	holder ()Ljava/util/Optional; b
	value ()Lnet/minecraft/core/RegistrySetBuilder$RegisteredValue; a
net/minecraft/core/RegistrySynchronization ix
	NETWORKABLE_REGISTRIES b
	NETWORK_CODEC a
	captureMap (Lcom/mojang/serialization/codecs/UnboundedMapCodec;)Lcom/mojang/serialization/Codec; a
	getNetworkCodec (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/DataResult; a
	makeNetworkCodec ()Lcom/mojang/serialization/Codec; a
	networkSafeRegistries (Lnet/minecraft/core/LayeredRegistryAccess;)Ljava/util/stream/Stream; b
	networkedRegistries (Lnet/minecraft/core/LayeredRegistryAccess;)Ljava/util/stream/Stream; a
	ownedNetworkableRegistries (Lnet/minecraft/core/RegistryAccess;)Ljava/util/stream/Stream; a
	put (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)V a
net/minecraft/core/RegistrySynchronization$NetworkedRegistryData ix$a
	key a
	networkCodec b
	key ()Lnet/minecraft/resources/ResourceKey; a
	networkCodec ()Lcom/mojang/serialization/Codec; b
net/minecraft/core/Rotations iy
	x a
	y b
	z c
	getWrappedX ()F e
	getWrappedY ()F f
	getWrappedZ ()F g
	getX ()F b
	getY ()F c
	getZ ()F d
	save ()Lnet/minecraft/nbt/ListTag; a
net/minecraft/core/SectionPos iz
	PACKED_X_LENGTH h
	PACKED_X_MASK k
	PACKED_Y_LENGTH i
	PACKED_Y_MASK l
	PACKED_Z_LENGTH j
	PACKED_Z_MASK m
	RELATIVE_X_SHIFT q
	RELATIVE_Y_SHIFT r
	RELATIVE_Z_SHIFT s
	SECTION_BITS a
	SECTION_HALF_SIZE d
	SECTION_MASK c
	SECTION_MAX_INDEX e
	SECTION_SIZE b
	X_OFFSET p
	Y_OFFSET n
	Z_OFFSET o
	aroundAndAtBlockPos (IIILit/unimi/dsi/fastutil/longs/LongConsumer;)V a
	aroundAndAtBlockPos (JLit/unimi/dsi/fastutil/longs/LongConsumer;)V a
	aroundAndAtBlockPos (Lnet/minecraft/core/BlockPos;Lit/unimi/dsi/fastutil/longs/LongConsumer;)V a
	aroundChunk (Lnet/minecraft/world/level/ChunkPos;III)Ljava/util/stream/Stream; a
	asLong ()J s
	asLong (III)J b
	asLong (Lnet/minecraft/core/BlockPos;)J c
	betweenClosedStream (IIIIII)Ljava/util/stream/Stream; a
	blockToSection (J)J e
	blockToSectionCoord (D)I b
	blockToSectionCoord (I)I a
	blocksInside ()Ljava/util/stream/Stream; t
	bottomOf (Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/core/SectionPos; a
	center ()Lnet/minecraft/core/BlockPos; q
	chunk ()Lnet/minecraft/world/level/ChunkPos; r
	cube (Lnet/minecraft/core/SectionPos;I)Ljava/util/stream/Stream; a
	getZeroNode (II)J b
	getZeroNode (J)J f
	maxBlockX ()I g
	maxBlockY ()I h
	maxBlockZ ()I i
	minBlockX ()I d
	minBlockY ()I e
	minBlockZ ()I f
	of (III)Lnet/minecraft/core/SectionPos; a
	of (J)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/core/Position;)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/world/level/ChunkPos;I)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/world/level/entity/EntityAccess;)Lnet/minecraft/core/SectionPos; a
	offset (III)Lnet/minecraft/core/SectionPos; d
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (JIII)J a
	offset (JLnet/minecraft/core/Direction;)J a
	origin ()Lnet/minecraft/core/BlockPos; j
	posToSectionCoord (D)I a
	relativeToBlockPos (S)Lnet/minecraft/core/BlockPos; g
	relativeToBlockX (S)I d
	relativeToBlockY (S)I e
	relativeToBlockZ (S)I f
	sectionRelative (I)I b
	sectionRelativePos (Lnet/minecraft/core/BlockPos;)S b
	sectionRelativeX (S)I a
	sectionRelativeY (S)I b
	sectionRelativeZ (S)I c
	sectionToBlockCoord (I)I c
	sectionToBlockCoord (II)I a
	x ()I a
	x (J)I b
	y ()I b
	y (J)I c
	z ()I c
	z (J)I d
net/minecraft/core/UUIDUtil ja
	AUTHLIB_CODEC d
	CODEC a
	CODEC_SET b
	LENIENT_CODEC e
	STRING_CODEC c
	UUID_BYTES f
	UUID_PREFIX_OFFLINE_PLAYER g
	createOfflinePlayerUUID (Ljava/lang/String;)Ljava/util/UUID; a
	createOfflineProfile (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; b
	leastMostToIntArray (JJ)[I a
	readUUID (Lcom/mojang/serialization/Dynamic;)Ljava/util/UUID; a
	uuidFromIntArray ([I)Ljava/util/UUID; a
	uuidToByteArray (Ljava/util/UUID;)[B b
	uuidToIntArray (Ljava/util/UUID;)[I a
net/minecraft/core/Vec3i jb
	CODEC f
	ZERO g
	x a
	y b
	z c
	above ()Lnet/minecraft/core/Vec3i; p
	above (I)Lnet/minecraft/core/Vec3i; n
	below ()Lnet/minecraft/core/Vec3i; o
	below (I)Lnet/minecraft/core/Vec3i; m
	closerThan (Lnet/minecraft/core/Vec3i;D)Z a
	closerToCenterThan (Lnet/minecraft/core/Position;D)Z a
	compareTo (Lnet/minecraft/core/Vec3i;)I i
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	distManhattan (Lnet/minecraft/core/Vec3i;)I k
	distSqr (Lnet/minecraft/core/Vec3i;)D j
	distToCenterSqr (DDD)D c
	distToCenterSqr (Lnet/minecraft/core/Position;)D b
	distToLowCornerSqr (DDD)D d
	east ()Lnet/minecraft/core/Vec3i; k
	east (I)Lnet/minecraft/core/Vec3i; i
	get (Lnet/minecraft/core/Direction$Axis;)I a
	getX ()I u
	getY ()I v
	getZ ()I w
	multiply (I)Lnet/minecraft/core/Vec3i; o
	north ()Lnet/minecraft/core/Vec3i; n
	north (I)Lnet/minecraft/core/Vec3i; l
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	offsetCodec (I)Lcom/mojang/serialization/Codec; v
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	setX (I)Lnet/minecraft/core/Vec3i; u
	setY (I)Lnet/minecraft/core/Vec3i; t
	setZ (I)Lnet/minecraft/core/Vec3i; s
	south ()Lnet/minecraft/core/Vec3i; m
	south (I)Lnet/minecraft/core/Vec3i; k
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	toShortString ()Ljava/lang/String; x
	west ()Lnet/minecraft/core/Vec3i; l
	west (I)Lnet/minecraft/core/Vec3i; j
net/minecraft/core/WritableRegistry jc
	createRegistrationLookup ()Lnet/minecraft/core/HolderGetter; n
	isEmpty ()Z k
	register (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder$Reference; a
net/minecraft/core/cauldron/CauldronInteraction jd
	BANNER k
	CODEC b
	DYED_ITEM l
	EMPTY c
	FILL_LAVA h
	FILL_POWDER_SNOW i
	FILL_WATER g
	INTERACTIONS a
	LAVA e
	POWDER_SNOW f
	SHULKER_BOX j
	WATER d
	addDefaultInteractions (Ljava/util/Map;)V a
	bootStrap ()V a
	emptyBucket (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/InteractionResult; a
	fillBucket (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Predicate;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/InteractionResult; a
	newInteractionMap (Ljava/lang/String;)Lnet/minecraft/core/cauldron/CauldronInteraction$InteractionMap; a
net/minecraft/core/cauldron/CauldronInteraction$InteractionMap jd$a
	map b
	name a
	map ()Ljava/util/Map; b
	name ()Ljava/lang/String; a
net/minecraft/core/dispenser/AbstractProjectileDispenseBehavior jf
	execute (Lnet/minecraft/core/dispenser/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	getPower ()F b
	getProjectile (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/Position;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/projectile/Projectile; a
	getUncertainty ()F a
	playSound (Lnet/minecraft/core/dispenser/BlockSource;)V a
net/minecraft/core/dispenser/BlockSource jg
	blockEntity d
	level a
	pos b
	state c
	blockEntity ()Lnet/minecraft/world/level/block/entity/DispenserBlockEntity; e
	center ()Lnet/minecraft/world/phys/Vec3; a
	level ()Lnet/minecraft/server/level/ServerLevel; b
	pos ()Lnet/minecraft/core/BlockPos; c
	state ()Lnet/minecraft/world/level/block/state/BlockState; d
net/minecraft/core/dispenser/BoatDispenseItemBehavior jh
	defaultDispenseItemBehavior c
	isChestBoat e
	type d
	execute (Lnet/minecraft/core/dispenser/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	playSound (Lnet/minecraft/core/dispenser/BlockSource;)V a
net/minecraft/core/dispenser/DefaultDispenseItemBehavior ji
	execute (Lnet/minecraft/core/dispenser/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	playAnimation (Lnet/minecraft/core/dispenser/BlockSource;Lnet/minecraft/core/Direction;)V a
	playSound (Lnet/minecraft/core/dispenser/BlockSource;)V a
	spawnItem (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;Lnet/minecraft/core/Position;)V a
net/minecraft/core/dispenser/DispenseItemBehavior jj
	LOGGER a
	NOOP b
	bootStrap ()V c
	getEntityPokingOutOfBlockPos (Lnet/minecraft/core/dispenser/BlockSource;Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/core/dispenser/OptionalDispenseItemBehavior jk
	success c
	isSuccess ()Z a
	playSound (Lnet/minecraft/core/dispenser/BlockSource;)V a
	setSuccess (Z)V a
net/minecraft/core/dispenser/ShearsDispenseItemBehavior jl
	execute (Lnet/minecraft/core/dispenser/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	tryShearBeehive (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	tryShearLivingEntity (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/core/dispenser/ShulkerBoxDispenseBehavior jm
	LOGGER c
	execute (Lnet/minecraft/core/dispenser/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/core/particles/BlockParticleOption jp
	DESERIALIZER a
	state c
	type b
	codec (Lnet/minecraft/core/particles/ParticleType;)Lcom/mojang/serialization/Codec; a
	getState ()Lnet/minecraft/world/level/block/state/BlockState; c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/DustColorTransitionOptions jq
	CODEC c
	DESERIALIZER d
	SCULK_PARTICLE_COLOR a
	SCULK_TO_REDSTONE b
	toColor i
	getFromColor ()Lorg/joml/Vector3f; c
	getToColor ()Lorg/joml/Vector3f; d
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/DustParticleOptions jr
	CODEC c
	DESERIALIZER d
	REDSTONE b
	REDSTONE_PARTICLE_COLOR a
	getType ()Lnet/minecraft/core/particles/ParticleType; b
net/minecraft/core/particles/DustParticleOptionsBase js
	MAX_SCALE f
	MIN_SCALE e
	color g
	scale h
	getColor ()Lorg/joml/Vector3f; e
	getScale ()F f
	readVector3f (Lcom/mojang/brigadier/StringReader;)Lorg/joml/Vector3f; a
	readVector3f (Lnet/minecraft/network/FriendlyByteBuf;)Lorg/joml/Vector3f; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ItemParticleOption jt
	DESERIALIZER a
	itemStack c
	type b
	codec (Lnet/minecraft/core/particles/ParticleType;)Lcom/mojang/serialization/Codec; a
	getItem ()Lnet/minecraft/world/item/ItemStack; c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ParticleGroup ju
	SPORE_BLOSSOM a
	limit b
	getLimit ()I a
net/minecraft/core/particles/ParticleOptions jv
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ParticleOptions$Deserializer jv$a
	fromCommand (Lnet/minecraft/core/particles/ParticleType;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleOptions; b
	fromNetwork (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/core/particles/ParticleOptions; b
net/minecraft/core/particles/ParticleType jw
	deserializer b
	overrideLimiter a
	codec ()Lcom/mojang/serialization/Codec; e
	getDeserializer ()Lnet/minecraft/core/particles/ParticleOptions$Deserializer; d
	getOverrideLimiter ()Z c
net/minecraft/core/particles/ParticleTypes jx
	AMBIENT_ENTITY_EFFECT a
	ANGRY_VILLAGER b
	ASH ax
	BLOCK c
	BLOCK_MARKER d
	BUBBLE e
	BUBBLE_COLUMN_UP an
	BUBBLE_POP al
	CAMPFIRE_COSY_SMOKE aq
	CAMPFIRE_SIGNAL_SMOKE ar
	CHERRY_LEAVES F
	CLOUD f
	CODEC aX
	COMPOSTER N
	CRIMSON_SPORE ay
	CRIT g
	CURRENT_DOWN am
	DAMAGE_INDICATOR h
	DOLPHIN ap
	DRAGON_BREATH i
	DRIPPING_DRIPSTONE_LAVA aI
	DRIPPING_DRIPSTONE_WATER aK
	DRIPPING_HONEY as
	DRIPPING_LAVA j
	DRIPPING_OBSIDIAN_TEAR aB
	DRIPPING_WATER m
	DUST o
	DUST_COLOR_TRANSITION p
	DUST_PLUME aU
	EFFECT q
	EGG_CRACK aT
	ELDER_GUARDIAN r
	ELECTRIC_SPARK aQ
	ENCHANT t
	ENCHANTED_HIT s
	END_ROD u
	ENTITY_EFFECT v
	EXPLOSION x
	EXPLOSION_EMITTER w
	FALLING_DRIPSTONE_LAVA aJ
	FALLING_DRIPSTONE_WATER aL
	FALLING_DUST B
	FALLING_HONEY at
	FALLING_LAVA k
	FALLING_NECTAR av
	FALLING_OBSIDIAN_TEAR aC
	FALLING_SPORE_BLOSSOM aw
	FALLING_WATER n
	FIREWORK C
	FISHING D
	FLAME E
	FLASH L
	GLOW aN
	GLOW_SQUID_INK aM
	GUST y
	GUST_DUST aV
	GUST_EMITTER z
	HAPPY_VILLAGER M
	HEART O
	INSTANT_EFFECT P
	ITEM Q
	ITEM_SLIME S
	ITEM_SNOWBALL T
	LANDING_HONEY au
	LANDING_LAVA l
	LANDING_OBSIDIAN_TEAR aD
	LARGE_SMOKE U
	LAVA V
	MYCELIUM W
	NAUTILUS ao
	NOTE X
	POOF Y
	PORTAL Z
	RAIN aa
	REVERSE_PORTAL aE
	SCRAPE aR
	SCULK_CHARGE H
	SCULK_CHARGE_POP I
	SCULK_SOUL G
	SHRIEK aS
	SMALL_FLAME aG
	SMOKE ab
	SNEEZE ad
	SNOWFLAKE aH
	SONIC_BOOM A
	SOUL K
	SOUL_FIRE_FLAME J
	SPIT ae
	SPLASH aj
	SPORE_BLOSSOM_AIR aA
	SQUID_INK af
	SWEEP_ATTACK ag
	TOTEM_OF_UNDYING ah
	TRIAL_SPAWNER_DETECTION aW
	UNDERWATER ai
	VIBRATION R
	WARPED_SPORE az
	WAX_OFF aP
	WAX_ON aO
	WHITE_ASH aF
	WHITE_SMOKE ac
	WITCH ak
	register (Ljava/lang/String;Z)Lnet/minecraft/core/particles/SimpleParticleType; a
	register (Ljava/lang/String;ZLnet/minecraft/core/particles/ParticleOptions$Deserializer;Ljava/util/function/Function;)Lnet/minecraft/core/particles/ParticleType; a
net/minecraft/core/particles/SculkChargeParticleOptions jy
	CODEC a
	DESERIALIZER b
	roll c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	roll ()F c
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ShriekParticleOption jz
	CODEC a
	DESERIALIZER b
	delay c
	getDelay ()I c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/SimpleParticleType ka
	DESERIALIZER a
	codec b
	codec ()Lcom/mojang/serialization/Codec; e
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	getType ()Lnet/minecraft/core/particles/SimpleParticleType; f
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/VibrationParticleOption kb
	CODEC a
	DESERIALIZER b
	arrivalInTicks d
	destination c
	getArrivalInTicks ()I d
	getDestination ()Lnet/minecraft/world/level/gameevent/PositionSource; c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/registries/BuiltInRegistries kd
	ACTIVITY E
	ATTRIBUTE u
	BANNER_PATTERN am
	BIOME_SOURCE ab
	BLOCK e
	BLOCKSTATE_PROVIDER_TYPE V
	BLOCK_ENTITY_TYPE k
	BLOCK_PREDICATE_TYPE O
	BLOCK_TYPE ag
	CARVER P
	CAT_VARIANT ak
	CHUNK_GENERATOR ac
	CHUNK_STATUS n
	COMMAND_ARGUMENT_TYPE w
	CREATIVE_MODE_TAB ap
	CUSTOM_STAT m
	DECORATED_POT_PATTERNS ao
	DENSITY_FUNCTION_TYPE af
	ENCHANTMENT f
	ENTITY_TYPE g
	FEATURE Q
	FEATURE_SIZE_TYPE aa
	FLOAT_PROVIDER_TYPE L
	FLUID c
	FOLIAGE_PLACER_TYPE W
	FROG_VARIANT al
	GAME_EVENT a
	HEIGHT_PROVIDER_TYPE N
	INSTRUMENT an
	INT_PROVIDER_TYPE M
	ITEM h
	LOADERS au
	LOGGER at
	LOOT_CONDITION_TYPE H
	LOOT_FUNCTION_TYPE G
	LOOT_NBT_PROVIDER_TYPE J
	LOOT_NUMBER_PROVIDER_TYPE I
	LOOT_POOL_ENTRY_TYPE F
	LOOT_SCORE_PROVIDER_TYPE K
	MATERIAL_CONDITION ad
	MATERIAL_RULE ae
	MEMORY_MODULE_TYPE B
	MENU r
	MOB_EFFECT d
	NUMBER_FORMAT_TYPE ar
	PAINTING_VARIANT l
	PARTICLE_TYPE j
	PLACEMENT_MODIFIER_TYPE U
	POINT_OF_INTEREST_TYPE A
	POOL_ALIAS_BINDING_TYPE aj
	POSITION_SOURCE_TYPE v
	POS_RULE_TEST q
	POTION i
	RECIPE_SERIALIZER t
	RECIPE_TYPE s
	REGISTRY as
	ROOT_PLACER_TYPE Y
	RULE_BLOCK_ENTITY_MODIFIER p
	RULE_TEST o
	SCHEDULE D
	SENSOR_TYPE C
	SOUND_EVENT b
	STAT_TYPE x
	STRUCTURE_PIECE S
	STRUCTURE_PLACEMENT R
	STRUCTURE_POOL_ELEMENT ai
	STRUCTURE_PROCESSOR ah
	STRUCTURE_TYPE T
	TREE_DECORATOR_TYPE Z
	TRIGGER_TYPES aq
	TRUNK_PLACER_TYPE X
	VILLAGER_PROFESSION z
	VILLAGER_TYPE y
	WRITABLE_REGISTRY av
	bootStrap ()V a
	createContents ()V b
	freeze ()V c
	internalRegister (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/WritableRegistry;Lnet/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/WritableRegistry; a
	registerDefaulted (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Lnet/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap;)Lnet/minecraft/core/DefaultedRegistry; a
	registerDefaulted (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lnet/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap;)Lnet/minecraft/core/DefaultedRegistry; a
	registerDefaultedWithIntrusiveHolders (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Lnet/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap;)Lnet/minecraft/core/DefaultedRegistry; b
	registerDefaultedWithIntrusiveHolders (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lnet/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap;)Lnet/minecraft/core/DefaultedRegistry; b
	registerSimple (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lnet/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap;)Lnet/minecraft/core/Registry; a
	registerSimple (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap;)Lnet/minecraft/core/Registry; a
	registerSimpleWithIntrusiveHolders (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap;)Lnet/minecraft/core/Registry; b
	validate (Lnet/minecraft/core/Registry;)V a
net/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap kd$a
net/minecraft/core/registries/Registries ke
	ACTIVITY b
	ATTRIBUTE c
	BANNER_PATTERN d
	BIOME at
	BIOME_SOURCE e
	BLOCK f
	BLOCK_ENTITY_TYPE h
	BLOCK_PREDICATE_TYPE i
	BLOCK_STATE_PROVIDER_TYPE j
	BLOCK_TYPE g
	CARVER k
	CAT_VARIANT l
	CHAT_TYPE au
	CHUNK_GENERATOR m
	CHUNK_STATUS n
	COMMAND_ARGUMENT_TYPE o
	CONFIGURED_CARVER av
	CONFIGURED_FEATURE aw
	CREATIVE_MODE_TAB p
	CUSTOM_STAT q
	DAMAGE_TYPE r
	DECORATED_POT_PATTERNS ar
	DENSITY_FUNCTION ax
	DENSITY_FUNCTION_TYPE s
	DIMENSION aM
	DIMENSION_TYPE ay
	ENCHANTMENT t
	ENTITY_TYPE u
	FEATURE v
	FEATURE_SIZE_TYPE w
	FLAT_LEVEL_GENERATOR_PRESET az
	FLOAT_PROVIDER_TYPE x
	FLUID y
	FOLIAGE_PLACER_TYPE z
	FROG_VARIANT A
	GAME_EVENT B
	HEIGHT_PROVIDER_TYPE C
	INSTRUMENT D
	INT_PROVIDER_TYPE E
	ITEM F
	LEVEL_STEM aN
	LOOT_CONDITION_TYPE G
	LOOT_FUNCTION_TYPE H
	LOOT_NBT_PROVIDER_TYPE I
	LOOT_NUMBER_PROVIDER_TYPE J
	LOOT_POOL_ENTRY_TYPE K
	LOOT_SCORE_PROVIDER_TYPE L
	MATERIAL_CONDITION M
	MATERIAL_RULE N
	MEMORY_MODULE_TYPE O
	MENU P
	MOB_EFFECT Q
	MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST aL
	NOISE aB
	NOISE_SETTINGS aA
	NUMBER_FORMAT_TYPE as
	PAINTING_VARIANT R
	PARTICLE_TYPE S
	PLACED_FEATURE aC
	PLACEMENT_MODIFIER_TYPE T
	POINT_OF_INTEREST_TYPE U
	POOL_ALIAS_BINDING ak
	POSITION_SOURCE_TYPE V
	POS_RULE_TEST W
	POTION X
	PROCESSOR_LIST aE
	RECIPE_SERIALIZER Y
	RECIPE_TYPE Z
	ROOT_PLACER_TYPE aa
	ROOT_REGISTRY_NAME a
	RULE_BLOCK_ENTITY_MODIFIER ac
	RULE_TEST ab
	SCHEDULE ad
	SENSOR_TYPE ae
	SOUND_EVENT af
	STAT_TYPE ag
	STRUCTURE aD
	STRUCTURE_PIECE ah
	STRUCTURE_PLACEMENT ai
	STRUCTURE_POOL_ELEMENT aj
	STRUCTURE_PROCESSOR al
	STRUCTURE_SET aF
	STRUCTURE_TYPE am
	TEMPLATE_POOL aG
	TREE_DECORATOR_TYPE an
	TRIGGER_TYPE aH
	TRIM_MATERIAL aI
	TRIM_PATTERN aJ
	TRUNK_PLACER_TYPE ao
	VILLAGER_PROFESSION ap
	VILLAGER_TYPE aq
	WORLD_PRESET aK
	createRegistryKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	levelStemToLevel (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; a
	levelToLevelStem (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; b
net/minecraft/data/BlockFamilies kg
	ACACIA_PLANKS a
	ANDESITE n
	BAMBOO_MOSAIC l
	BAMBOO_PLANKS k
	BIRCH_PLANKS c
	BLACKSTONE p
	BRICKS s
	CHERRY_PLANKS b
	COBBLED_DEEPSLATE al
	COBBLESTONE L
	COPPER_BLOCK v
	CRIMSON_PLANKS d
	CUT_COPPER w
	CUT_RED_SANDSTONE ag
	CUT_SANDSTONE ad
	DARK_OAK_PLANKS g
	DARK_PRISMARINE Z
	DEEPSLATE ak
	DEEPSLATE_BRICKS an
	DEEPSLATE_TILES ao
	DIORITE N
	END_STONE_BRICKS t
	EXPOSED_COPPER z
	EXPOSED_CUT_COPPER A
	GRANITE P
	JUNGLE_PLANKS e
	MANGROVE_PLANKS j
	MAP ap
	MOSSY_COBBLESTONE M
	MOSSY_STONE_BRICKS u
	MUD_BRICKS m
	NETHER_BRICKS U
	OAK_PLANKS f
	OXIDIZED_COPPER H
	OXIDIZED_CUT_COPPER I
	POLISHED_ANDESITE o
	POLISHED_BLACKSTONE q
	POLISHED_BLACKSTONE_BRICKS r
	POLISHED_DEEPSLATE am
	POLISHED_DIORITE O
	POLISHED_GRANITE Q
	POLISHED_TUFF S
	PRISMARINE W
	PRISMARINE_BRICKS Y
	PURPUR X
	QUARTZ aa
	RECIPE_GROUP_PREFIX_WOODEN aq
	RECIPE_UNLOCKED_BY_HAS_PLANKS ar
	RED_NETHER_BRICKS V
	RED_SANDSTONE af
	SANDSTONE ac
	SMOOTH_QUARTZ ab
	SMOOTH_RED_SANDSTONE ah
	SMOOTH_SANDSTONE ae
	SPRUCE_PLANKS h
	STONE ai
	STONE_BRICK aj
	TUFF R
	TUFF_BRICKS T
	WARPED_PLANKS i
	WAXED_COPPER_BLOCK x
	WAXED_CUT_COPPER y
	WAXED_EXPOSED_COPPER B
	WAXED_EXPOSED_CUT_COPPER C
	WAXED_OXIDIZED_COPPER J
	WAXED_OXIDIZED_CUT_COPPER K
	WAXED_WEATHERED_COPPER F
	WAXED_WEATHERED_CUT_COPPER G
	WEATHERED_COPPER D
	WEATHERED_CUT_COPPER E
	familyBuilder (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; a
	getAllFamilies ()Ljava/util/stream/Stream; a
net/minecraft/data/BlockFamily kh
	baseBlock a
	generateModel c
	generateRecipe d
	recipeGroupPrefix e
	recipeUnlockedBy f
	variants b
	get (Lnet/minecraft/data/BlockFamily$Variant;)Lnet/minecraft/world/level/block/Block; a
	getBaseBlock ()Lnet/minecraft/world/level/block/Block; a
	getRecipeGroupPrefix ()Ljava/util/Optional; e
	getRecipeUnlockedBy ()Ljava/util/Optional; f
	getVariants ()Ljava/util/Map; b
	shouldGenerateModel ()Z c
	shouldGenerateRecipe ()Z d
net/minecraft/data/BlockFamily$Builder kh$a
	family a
	button (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; a
	chiseled (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; b
	cracked (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; d
	customFence (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; g
	customFenceGate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; i
	cut (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; e
	dontGenerateModel ()Lnet/minecraft/data/BlockFamily$Builder; b
	dontGenerateRecipe ()Lnet/minecraft/data/BlockFamily$Builder; c
	door (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; f
	fence (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; h
	fenceGate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; j
	getFamily ()Lnet/minecraft/data/BlockFamily; a
	mosaic (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; c
	polished (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; n
	pressurePlate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; m
	recipeGroupPrefix (Ljava/lang/String;)Lnet/minecraft/data/BlockFamily$Builder; a
	recipeUnlockedBy (Ljava/lang/String;)Lnet/minecraft/data/BlockFamily$Builder; b
	sign (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; a
	slab (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; k
	stairs (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; l
	trapdoor (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; o
	wall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; p
net/minecraft/data/BlockFamily$Variant kh$b
	$VALUES t
	BUTTON a
	CHISELED b
	CRACKED c
	CUSTOM_FENCE f
	CUSTOM_FENCE_GATE h
	CUT d
	DOOR e
	FENCE g
	FENCE_GATE i
	MOSAIC j
	POLISHED o
	PRESSURE_PLATE n
	SIGN k
	SLAB l
	STAIRS m
	TRAPDOOR p
	WALL q
	WALL_SIGN r
	recipeGroup s
	$values ()[Lnet/minecraft/data/BlockFamily$Variant; b
	getRecipeGroup ()Ljava/lang/String; a
net/minecraft/data/CachedOutput ki
	NO_CACHE a
net/minecraft/data/DataGenerator kj
	LOGGER a
	allProviderIds d
	alwaysGenerate g
	providersToRun e
	rootOutputFolder b
	vanillaPackOutput c
	version f
	getBuiltinDatapack (ZLjava/lang/String;)Lnet/minecraft/data/DataGenerator$PackGenerator; a
	getVanillaPack (Z)Lnet/minecraft/data/DataGenerator$PackGenerator; a
	run ()V a
net/minecraft/data/DataGenerator$PackGenerator kj$a
	output d
	providerPrefix c
	toRun b
	addProvider (Lnet/minecraft/data/DataProvider$Factory;)Lnet/minecraft/data/DataProvider; a
net/minecraft/data/DataProvider kk
	FIXED_ORDER_FIELDS a
	KEY_COMPARATOR b
	LOGGER c
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
	saveStable (Lnet/minecraft/data/CachedOutput;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture; a
	saveStable (Lnet/minecraft/data/CachedOutput;Lcom/mojang/serialization/Codec;Ljava/lang/Object;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/DataProvider$Factory kk$a
net/minecraft/data/HashCache kl
	HEADER_MARKER b
	LOGGER a
	cacheDir d
	cachePaths h
	caches f
	cachesToWrite g
	initialCount i
	rootDir c
	versionId e
	writes j
	applyUpdate (Lnet/minecraft/data/HashCache$UpdateResult;)V a
	generateUpdate (Ljava/lang/String;Lnet/minecraft/data/HashCache$UpdateFunction;)Ljava/util/concurrent/CompletableFuture; a
	getProviderCachePath (Ljava/lang/String;)Ljava/nio/file/Path; b
	purgeStaleAndWrite ()V a
	readCache (Ljava/nio/file/Path;Ljava/nio/file/Path;)Lnet/minecraft/data/HashCache$ProviderCache; a
	shouldRunInThisVersion (Ljava/lang/String;)Z a
net/minecraft/data/HashCache$CacheUpdater kl$a
	closed g
	newCache e
	oldCache d
	provider c
	writes f
	close ()Lnet/minecraft/data/HashCache$UpdateResult; a
	shouldWrite (Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)Z a
net/minecraft/data/HashCache$ProviderCache kl$b
	data b
	version a
	count ()I a
	data ()Lcom/google/common/collect/ImmutableMap; c
	get (Ljava/nio/file/Path;)Lcom/google/common/hash/HashCode; a
	load (Ljava/nio/file/Path;Ljava/nio/file/Path;)Lnet/minecraft/data/HashCache$ProviderCache; a
	save (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/String;)V a
	version ()Ljava/lang/String; b
net/minecraft/data/HashCache$ProviderCacheBuilder kl$c
	data b
	version a
	build ()Lnet/minecraft/data/HashCache$ProviderCache; a
	data ()Ljava/util/concurrent/ConcurrentMap; c
	put (Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)V a
	version ()Ljava/lang/String; b
net/minecraft/data/HashCache$UpdateFunction kl$d
net/minecraft/data/HashCache$UpdateResult kl$e
	cache b
	providerId a
	writes c
	cache ()Lnet/minecraft/data/HashCache$ProviderCache; b
	providerId ()Ljava/lang/String; a
	writes ()I c
net/minecraft/data/PackOutput km
	outputFolder a
	createPathProvider (Lnet/minecraft/data/PackOutput$Target;Ljava/lang/String;)Lnet/minecraft/data/PackOutput$PathProvider; a
	getOutputFolder ()Ljava/nio/file/Path; a
	getOutputFolder (Lnet/minecraft/data/PackOutput$Target;)Ljava/nio/file/Path; a
net/minecraft/data/PackOutput$PathProvider km$a
	kind b
	root a
	file (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Ljava/nio/file/Path; a
	json (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/PackOutput$Target km$b
	$VALUES e
	DATA_PACK a
	REPORTS c
	RESOURCE_PACK b
	directory d
	$values ()[Lnet/minecraft/data/PackOutput$Target; a
net/minecraft/data/advancements/AdvancementProvider kn
	pathProvider d
	registries f
	subProviders e
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/advancements/AdvancementSubProvider ko
	createPlaceholder (Ljava/lang/String;)Lnet/minecraft/advancements/AdvancementHolder; a
	generate (Lnet/minecraft/core/HolderLookup$Provider;Ljava/util/function/Consumer;)V a
net/minecraft/data/advancements/packs/UpdateOneTwentyOneAdvancementProvider kq
	create (Lnet/minecraft/data/PackOutput;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/data/advancements/AdvancementProvider; a
net/minecraft/data/advancements/packs/UpdateOneTwentyOneAdventureAdvancements kr
	generate (Lnet/minecraft/core/HolderLookup$Provider;Ljava/util/function/Consumer;)V a
net/minecraft/data/advancements/packs/VanillaAdvancementProvider ks
	create (Lnet/minecraft/data/PackOutput;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/data/advancements/AdvancementProvider; a
net/minecraft/data/advancements/packs/VanillaAdventureAdvancements kt
	BEDROCK_THICKNESS e
	DISTANCE_FROM_BOTTOM_TO_TOP b
	MOBS_TO_KILL a
	Y_COORDINATE_AT_BOTTOM d
	Y_COORDINATE_AT_TOP c
	addBiomes (Lnet/minecraft/advancements/Advancement$Builder;Ljava/util/List;)Lnet/minecraft/advancements/Advancement$Builder; a
	addMobsToKill (Lnet/minecraft/advancements/Advancement$Builder;Ljava/util/List;)Lnet/minecraft/advancements/Advancement$Builder; b
	craftingANewLook (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; b
	createAdventuringTime (Ljava/util/function/Consumer;Lnet/minecraft/advancements/AdvancementHolder;Lnet/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset;)V a
	createMonsterHunterAdvancement (Lnet/minecraft/advancements/AdvancementHolder;Ljava/util/function/Consumer;Ljava/util/List;)Lnet/minecraft/advancements/AdvancementHolder; a
	fireCountAndBystander (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; a
	generate (Lnet/minecraft/core/HolderLookup$Provider;Ljava/util/function/Consumer;)V a
	lookAtThroughItem (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/item/Item;)Lnet/minecraft/advancements/Criterion; a
	placedBlockReadByComparator (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/Criterion; a
	placedComparatorReadingBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/Criterion; b
	respectingTheRemnantsCriterions (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; c
	smithingWithStyle (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
net/minecraft/data/advancements/packs/VanillaHusbandryAdvancements ku
	BREEDABLE_ANIMALS a
	EDIBLE_ITEMS e
	FISH c
	FISH_BUCKETS d
	INDIRECTLY_BREEDABLE_ANIMALS b
	WAX_SCRAPING_TOOLS f
	addBreedable (Lnet/minecraft/advancements/Advancement$Builder;Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Lnet/minecraft/advancements/Advancement$Builder; a
	addCatVariants (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; e
	addFish (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; d
	addFishBuckets (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; c
	addFood (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; b
	addLeashedFrogVariants (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
	createBreedAllAnimalsAdvancement (Lnet/minecraft/advancements/AdvancementHolder;Ljava/util/function/Consumer;Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Lnet/minecraft/advancements/AdvancementHolder; a
	generate (Lnet/minecraft/core/HolderLookup$Provider;Ljava/util/function/Consumer;)V a
net/minecraft/data/advancements/packs/VanillaNetherAdvancements kv
	DISTRACT_PIGLIN_PLAYER_ARMOR_PREDICATE a
	generate (Lnet/minecraft/core/HolderLookup$Provider;Ljava/util/function/Consumer;)V a
net/minecraft/data/advancements/packs/VanillaStoryAdvancements kw
	generate (Lnet/minecraft/core/HolderLookup$Provider;Ljava/util/function/Consumer;)V a
net/minecraft/data/advancements/packs/VanillaTheEndAdvancements kx
	generate (Lnet/minecraft/core/HolderLookup$Provider;Ljava/util/function/Consumer;)V a
net/minecraft/data/info/BiomeParametersDumpReport kz
	CODEC h
	ENTRY_CODEC g
	LOGGER d
	registries f
	topPath e
	createPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
	dumpValue (Ljava/nio/file/Path;Lnet/minecraft/data/CachedOutput;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/info/BlockListReport la
	output d
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/info/CommandsReport lb
	output d
	registries e
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/info/RegistryDumpReport lc
	output d
	dumpRegistry (Lnet/minecraft/core/Registry;)Lcom/google/gson/JsonElement; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/loot/BlockLootSubProvider le
	HAS_NO_SHEARS_OR_SILK_TOUCH i
	HAS_NO_SILK_TOUCH b
	HAS_SHEARS c
	HAS_SHEARS_OR_SILK_TOUCH h
	HAS_SILK_TOUCH a
	NORMAL_LEAVES_SAPLING_CHANCES g
	NORMAL_LEAVES_STICK_CHANCES j
	enabledFeatures e
	explosionResistant d
	map f
	add (Lnet/minecraft/world/level/block/Block;Ljava/util/function/Function;)V a
	add (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	addNetherVinesDropTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V b
	applyExplosionCondition (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; a
	applyExplosionDecay (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; a
	createAttachedStemDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createBannerDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; g
	createBeeHiveDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; i
	createBeeNestDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; h
	createCandleCakeDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; p
	createCandleDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; n
	createCaveVinesDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; j
	createCopperOreDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; d
	createCropDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createDoorTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; q
	createDoublePlantShearsDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; m
	createDoublePlantWithSeedDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createGrassDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; k
	createLapisOreDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; e
	createLeavesDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;[F)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createMangroveLeavesDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; l
	createMultifaceBlockDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createMushroomBlockDrop (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createNameableBlockEntityTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createOakLeavesDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;[F)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createOreDrop (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createPetalsDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; o
	createPotFlowerItemTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; d
	createRedstoneOreDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; f
	createSelfDropDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createShearsDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createShearsOnlyDrop (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createShulkerBoxDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createSilkTouchDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSilkTouchOnlyTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createSilkTouchOrShearsDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createSingleItemTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSingleItemTable (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSingleItemTableWithSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSingleItemTableWithSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSinglePropConditionTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSlabItemTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createStemDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	dropOther (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)V c
	dropPottedContents (Lnet/minecraft/world/level/block/Block;)V r
	dropSelf (Lnet/minecraft/world/level/block/Block;)V t
	dropWhenSilkTouch (Lnet/minecraft/world/level/block/Block;)V s
	generate ()V b
	noDrop ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	otherWhenSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V c
net/minecraft/data/loot/EntityLootSubProvider lf
	ENTITY_ON_FIRE a
	SPECIAL_LOOT_TABLE_TYPES b
	allowed c
	map e
	required d
	add (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	add (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	canHaveLootTable (Lnet/minecraft/world/entity/EntityType;)Z a
	createSheepTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	generate ()V a
	killedByFrog ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; b
	killedByFrogVariant (Lnet/minecraft/world/entity/animal/FrogVariant;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
net/minecraft/data/loot/LootTableProvider lg
	LOGGER d
	pathProvider e
	requiredTables f
	subProviders g
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/loot/LootTableProvider$SubProviderEntry lg$a
	paramSet b
	provider a
	paramSet ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; b
	provider ()Ljava/util/function/Supplier; a
net/minecraft/data/loot/LootTableSubProvider lh
net/minecraft/data/loot/packs/TradeRebalanceChestLoot lj
	ancientCityLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	desertPyramidLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	jungleTempleLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; d
	pillagerOutpostLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
net/minecraft/data/loot/packs/TradeRebalanceLootTableProvider lk
	create (Lnet/minecraft/data/PackOutput;)Lnet/minecraft/data/loot/LootTableProvider; a
net/minecraft/data/loot/packs/UpdateOneTwentyOneBlockLoot ll
	generate ()V b
net/minecraft/data/loot/packs/UpdateOneTwentyOneChestLoot lm
net/minecraft/data/loot/packs/UpdateOneTwentyOneLootTableProvider ln
	create (Lnet/minecraft/data/PackOutput;)Lnet/minecraft/data/loot/LootTableProvider; a
net/minecraft/data/loot/packs/VanillaArchaeologyLoot lo
net/minecraft/data/loot/packs/VanillaBlockLoot lp
	EXPLOSION_RESISTANT i
	JUNGLE_LEAVES_SAPLING_CHANGES h
	createDecoratedPotTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; u
	createPitcherCropLoot ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	generate ()V b
net/minecraft/data/loot/packs/VanillaChestLoot lq
	ancientCityLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; l
	bastionBridgeLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; d
	bastionHoglinStableLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	bastionOtherLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; h
	bastionTreasureLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; g
	desertPyramidLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; p
	endCityTreasureLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; e
	jungleTempleLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; m
	netherBridgeLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; f
	pillagerOutpostLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; o
	shipwreckMapLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	shipwreckSupplyLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	shipwreckTreasureLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; n
	spawnerLootTables (Ljava/util/function/BiConsumer;)V a
	strongholdCorridorLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; k
	strongholdLibraryLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; j
	woodlandMansionLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; i
net/minecraft/data/loot/packs/VanillaEntityLoot lr
	elderGuardianLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	generate ()V a
net/minecraft/data/loot/packs/VanillaFishingLoot ls
	IN_BAMBOO_JUNGLE c
	IN_JUNGLE a
	IN_SPARSE_JUNGLE b
	fishingFishLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
net/minecraft/data/loot/packs/VanillaGiftLoot lt
net/minecraft/data/loot/packs/VanillaLootTableProvider lu
	create (Lnet/minecraft/data/PackOutput;)Lnet/minecraft/data/loot/LootTableProvider; a
net/minecraft/data/loot/packs/VanillaPiglinBarterLoot lv
net/minecraft/data/metadata/PackMetadataGenerator lx
	elements e
	output d
	add (Lnet/minecraft/server/packs/metadata/MetadataSectionType;Ljava/lang/Object;)Lnet/minecraft/data/metadata/PackMetadataGenerator; a
	forFeaturePack (Lnet/minecraft/data/PackOutput;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/data/metadata/PackMetadataGenerator; a
	forFeaturePack (Lnet/minecraft/data/PackOutput;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/data/metadata/PackMetadataGenerator; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/models/BlockModelGenerators lz
	CHISELED_BOOKSHELF_SLOT_MODEL_CACHE i
	MULTIFACE_GENERATOR a
	SHAPE_CONSUMERS h
	blockStateOutput b
	fullBlockModelCustomGenerators f
	modelOutput c
	nonOrientableTrapdoor e
	skippedAutoModelsOutput d
	texturedModels g
	addBookSlotModel (Lnet/minecraft/data/models/blockstates/MultiPartGenerator;Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition;Lnet/minecraft/data/models/blockstates/VariantProperties$Rotation;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;Lnet/minecraft/data/models/model/ModelTemplate;Z)V a
	addSlotStateAndRotationVariants (Lnet/minecraft/data/models/blockstates/MultiPartGenerator;Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition;Lnet/minecraft/data/models/blockstates/VariantProperties$Rotation;)V a
	applyRotation (Lnet/minecraft/core/FrontAndTop;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/Variant; a
	blockEntityModels (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	blockEntityModels (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; f
	configureDoorHalf (Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4;Lnet/minecraft/world/level/block/state/properties/DoubleBlockHalf;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	copyCopperBulbModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V i
	copyDoorModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
	copyModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V k
	copyTrapdoorModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V b
	createActiveRail (Lnet/minecraft/world/level/block/Block;)V o
	createAirLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V f
	createAirLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)V a
	createAmethystCluster (Lnet/minecraft/world/level/block/Block;)V x
	createAmethystClusters ()V G
	createAnvil (Lnet/minecraft/world/level/block/Block;)V r
	createAxisAlignedPillarBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V a
	createAxisAlignedPillarBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; d
	createAxisAlignedPillarBlockCustomModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V e
	createAzalea (Lnet/minecraft/world/level/block/Block;)V s
	createBamboo ()V m
	createBambooModels (I)Ljava/util/List; a
	createBarrel ()V o
	createBedItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V m
	createBeeNest (Lnet/minecraft/world/level/block/Block;Ljava/util/function/Function;)V a
	createBell ()V p
	createBigDripLeafBlock ()V g
	createBookshelf ()V r
	createBooleanModelDispatch (Lnet/minecraft/world/level/block/state/properties/BooleanProperty;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	createBrewingStand ()V v
	createBrushableBlock (Lnet/minecraft/world/level/block/Block;)V g
	createButton (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; b
	createCakeBlock ()V w
	createCalibratedSculkSensor ()V af
	createCampfires ([Lnet/minecraft/world/level/block/Block;)V a
	createCandleAndCandleCake (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V o
	createCartographyTable ()V x
	createCauldrons ()V A
	createCaveVines ()V ai
	createChiseledBookshelf ()V aw
	createChorusFlower ()V B
	createChorusPlant ()V E
	createCocoa ()V R
	createColoredBlockWithRandomRotations (Lnet/minecraft/data/models/model/TexturedModel$Provider;[Lnet/minecraft/world/level/block/Block;)V a
	createColoredBlockWithStateRotations (Lnet/minecraft/data/models/model/TexturedModel$Provider;[Lnet/minecraft/world/level/block/Block;)V b
	createColumnWithFacing ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; n
	createCommandBlock (Lnet/minecraft/world/level/block/Block;)V q
	createComparator ()V t
	createComposter ()V F
	createCopperBulb (Lnet/minecraft/world/level/block/Block;)V w
	createCopperBulb (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createCoral (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
	createCoralFans (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V d
	createCrafterBlock ()V C
	createCraftingTableLike (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiFunction;)V a
	createCropBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/properties/Property;[I)V a
	createCrossBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V b
	createCrossBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;Lnet/minecraft/data/models/model/TextureMapping;)V b
	createCrossBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;Lnet/minecraft/world/level/block/state/properties/Property;[I)V a
	createCrossBlockWithDefaultItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V a
	createCrossBlockWithDefaultItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createCustomFence (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createDaylightDetector ()V I
	createDirtPath ()V S
	createDispenserBlock (Lnet/minecraft/world/level/block/Block;)V v
	createDoor (Lnet/minecraft/world/level/block/Block;)V i
	createDoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createDoubleBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)V f
	createDoublePlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V c
	createEmptyOrFullDispatch (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	createEndPortalFrame ()V D
	createFacingDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; e
	createFarmland ()V K
	createFence (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; c
	createFenceGate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createFire ()V L
	createFloorFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; A
	createFlowerBed (Lnet/minecraft/world/level/block/Block;)V p
	createFrogspawnBlock ()V X
	createFrostedIce ()V P
	createFullAndCarpetBlocks (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V g
	createFurnace (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V d
	createGenericCube (Lnet/minecraft/world/level/block/Block;)V b
	createGlassBlocks (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V h
	createGrassBlocks ()V Q
	createGrassLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/blockstates/Variant;)V a
	createGrindstone ()V q
	createGrowingPlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V b
	createHangingSign (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
	createHopper ()V T
	createHorizontalFacingDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	createHorizontalFacingDispatchAlt ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; c
	createHorizontallyRotatedBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V c
	createInfestedDeepslate ()V az
	createInfestedStone ()V ay
	createIronBars ()V U
	createJigsaw ()V aB
	createLantern (Lnet/minecraft/world/level/block/Block;)V D
	createLever ()V V
	createLightBlock ()V aD
	createLightningRod ()V J
	createLilyPad ()V W
	createMagmaBlock ()V ax
	createMangrovePropagule ()V O
	createMirroredColumnGenerator (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; c
	createMirroredCubeGenerator (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createMuddyMangroveRoots ()V N
	createMultiface (Lnet/minecraft/world/level/block/Block;)V F
	createMushroomBlock (Lnet/minecraft/world/level/block/Block;)V u
	createNetherPortalBlock ()V Y
	createNetherRoots (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V n
	createNetherrack ()V Z
	createNonTemplateHorizontalBlock (Lnet/minecraft/world/level/block/Block;)V E
	createNonTemplateModelBlock (Lnet/minecraft/world/level/block/Block;)V m
	createNonTemplateModelBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V c
	createNormalTorch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V l
	createNorthWestMirroredCubeGenerator (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; b
	createNyliumBlock (Lnet/minecraft/world/level/block/Block;)V y
	createObserver ()V aa
	createOrientableTrapdoor (Lnet/minecraft/world/level/block/Block;)V j
	createOrientableTrapdoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; c
	createPassiveRail (Lnet/minecraft/world/level/block/Block;)V n
	createPetrifiedOakSlab ()V aC
	createPillarBlockUVLocked (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createPistonHeads ()V ac
	createPistonVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createPistons ()V ab
	createPitcherCrop ()V i
	createPitcherPlant ()V h
	createPlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V a
	createPointedDripstone ()V H
	createPointedDripstoneVariant (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)Lnet/minecraft/data/models/blockstates/Variant; a
	createPottedAzalea (Lnet/minecraft/world/level/block/Block;)V t
	createPressurePlate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; e
	createPumpkinVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createPumpkins ()V z
	createRedstoneLamp ()V aj
	createRedstoneTorch ()V ak
	createRedstoneWire ()V s
	createRepeater ()V al
	createRespawnAnchor ()V aA
	createRotatableColumn (Lnet/minecraft/world/level/block/Block;)V z
	createRotatedMirroredVariantBlock (Lnet/minecraft/world/level/block/Block;)V e
	createRotatedPillar ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; f
	createRotatedPillarWithHorizontalVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V a
	createRotatedPillarWithHorizontalVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; d
	createRotatedVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; b
	createRotatedVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	createRotatedVariantBlock (Lnet/minecraft/world/level/block/Block;)V f
	createRotatedVariants (Lnet/minecraft/resources/ResourceLocation;)[Lnet/minecraft/data/models/blockstates/Variant; a
	createScaffolding ()V ah
	createSculkCatalyst ()V av
	createSculkSensor ()V ae
	createSculkShrieker ()V ag
	createSeaPickle ()V am
	createShulkerBox (Lnet/minecraft/world/level/block/Block;)V G
	createSideFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; B
	createSimpleBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; c
	createSimpleFlatItemModel (Lnet/minecraft/world/item/Item;)V a
	createSimpleFlatItemModel (Lnet/minecraft/world/level/block/Block;)V d
	createSimpleFlatItemModel (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)V a
	createSlab (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; e
	createSmallDripleaf ()V l
	createSmithingTable ()V y
	createSmoothStoneSlab ()V u
	createSnifferEgg ()V au
	createSnowBlocks ()V an
	createSoulFire ()V M
	createStairs (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; b
	createStems (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V e
	createStonecutter ()V ao
	createStructureBlock ()V ap
	createSuffixedVariant (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/ModelTemplate;Ljava/util/function/Function;)Lnet/minecraft/resources/ResourceLocation; a
	createSunflower ()V j
	createSweetBerryBush ()V aq
	createTallSeagrass ()V k
	createTopFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; C
	createTorchHorizontalDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; d
	createTrapdoor (Lnet/minecraft/world/level/block/Block;)V k
	createTrapdoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; d
	createTrialSpawner ()V ad
	createTripwire ()V ar
	createTripwireHook ()V as
	createTrivialBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	createTrivialBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V b
	createTrivialCube (Lnet/minecraft/world/level/block/Block;)V a
	createTurtleEgg ()V at
	createTurtleEggModel (ILjava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;)Lnet/minecraft/resources/ResourceLocation; a
	createTurtleEggModel (Ljava/lang/Integer;Ljava/lang/Integer;)Lnet/minecraft/resources/ResourceLocation; a
	createWall (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createWeightedPressurePlate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V j
	delegateItemModel (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;)V a
	delegateItemModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V a
	family (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; h
	run ()V a
	skipAutoItemBlock (Lnet/minecraft/world/level/block/Block;)V c
	woodProvider (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; l
	wrapModels (Ljava/util/List;Ljava/util/function/UnaryOperator;)Ljava/util/List; a
net/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator lz$a
	baseModel b
	create ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	createWithCustomBlockItemModel (Lnet/minecraft/data/models/model/ModelTemplate;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	createWithoutBlockItem ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; b
net/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider lz$b
	family d
	fullBlock e
	mapping b
	models c
	skipGeneratingModelsFor f
	button (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	customFence (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; c
	customFenceGate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; e
	donateModelTo (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	door (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; l
	fence (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; d
	fenceGate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; f
	fullBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/ModelTemplate;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	fullBlockVariant (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; k
	generateFor (Lnet/minecraft/data/BlockFamily;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	getOrCreateModel (Lnet/minecraft/data/models/model/ModelTemplate;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/ResourceLocation; a
	pressurePlate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; g
	sign (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; h
	slab (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; i
	stairs (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; j
	trapdoor (Lnet/minecraft/world/level/block/Block;)V m
	wall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; b
net/minecraft/data/models/BlockModelGenerators$BlockStateGeneratorSupplier lz$c
net/minecraft/data/models/BlockModelGenerators$BookSlotModelCacheKey lz$d
	modelSuffix b
	template a
	modelSuffix ()Ljava/lang/String; b
	template ()Lnet/minecraft/data/models/model/ModelTemplate; a
net/minecraft/data/models/BlockModelGenerators$TintState lz$e
	$VALUES c
	NOT_TINTED b
	TINTED a
	$values ()[Lnet/minecraft/data/models/BlockModelGenerators$TintState; c
	getCross ()Lnet/minecraft/data/models/model/ModelTemplate; a
	getCrossPot ()Lnet/minecraft/data/models/model/ModelTemplate; b
net/minecraft/data/models/BlockModelGenerators$WoodProvider lz$f
	logMapping b
	log (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; b
	logUVLocked (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; d
	logWithHorizontal (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; c
	wood (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; a
net/minecraft/data/models/ItemModelGenerators ma
	GENERATED_TRIM_MODELS b
	TRIM_TYPE_PREDICATE_ID a
	output c
	generateArmorTrims (Lnet/minecraft/world/item/ArmorItem;)V a
	generateBaseArmorTrimTemplate (Lnet/minecraft/resources/ResourceLocation;Ljava/util/Map;Lnet/minecraft/world/item/ArmorMaterial;)Lcom/google/gson/JsonObject; a
	generateClockItem (Lnet/minecraft/world/item/Item;)V b
	generateCompassItem (Lnet/minecraft/world/item/Item;)V a
	generateFlatItem (Lnet/minecraft/world/item/Item;Ljava/lang/String;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	generateFlatItem (Lnet/minecraft/world/item/Item;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	generateFlatItem (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	generateLayeredItem (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)V a
	generateLayeredItem (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)V a
	getItemModelForTrimMaterial (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	run ()V a
net/minecraft/data/models/ItemModelGenerators$TrimModelData ma$a
	itemModelIndex b
	name a
	overrideArmorMaterials c
	itemModelIndex ()F b
	name ()Ljava/lang/String; a
	name (Lnet/minecraft/world/item/ArmorMaterial;)Ljava/lang/String; a
	overrideArmorMaterials ()Ljava/util/Map; c
net/minecraft/data/models/ModelProvider mb
	blockStatePathProvider d
	modelPathProvider e
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
	saveCollection (Lnet/minecraft/data/CachedOutput;Ljava/util/Map;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/models/blockstates/BlockStateGenerator mc
	getBlock ()Lnet/minecraft/world/level/block/Block; a
net/minecraft/data/models/blockstates/Condition md
	and ([Lnet/minecraft/data/models/blockstates/Condition;)Lnet/minecraft/data/models/blockstates/Condition; a
	condition ()Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	or ([Lnet/minecraft/data/models/blockstates/Condition;)Lnet/minecraft/data/models/blockstates/Condition; b
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/Condition$CompositeCondition md$a
	operation a
	subconditions b
	get ()Lcom/google/gson/JsonElement; b
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/Condition$Operation md$b
	$VALUES d
	AND a
	OR b
	id c
	$values ()[Lnet/minecraft/data/models/blockstates/Condition$Operation; a
net/minecraft/data/models/blockstates/Condition$TerminalCondition md$c
	terms a
	get ()Lcom/google/gson/JsonElement; b
	getTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljava/lang/String; c
	joinValues (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/stream/Stream;)Ljava/lang/String; a
	negatedTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; b
	negatedTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; b
	putValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)V a
	term (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	term (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiPartGenerator me
	block a
	parts b
	get ()Lcom/google/gson/JsonElement; b
	getBlock ()Lnet/minecraft/world/level/block/Block; a
	multiPart (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Ljava/util/List;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;[Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
net/minecraft/data/models/blockstates/MultiPartGenerator$ConditionalEntry me$a
	condition a
	decorate (Lcom/google/gson/JsonObject;)V a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiPartGenerator$Entry me$b
	variants a
	decorate (Lcom/google/gson/JsonObject;)V a
	get ()Lcom/google/gson/JsonElement; a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiVariantGenerator mf
	baseVariants b
	block a
	declaredPropertySets d
	seenProperties c
	get ()Lcom/google/gson/JsonElement; b
	getBlock ()Lnet/minecraft/world/level/block/Block; a
	mergeVariants (Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	multiVariant (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	multiVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	multiVariant (Lnet/minecraft/world/level/block/Block;[Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	with (Lnet/minecraft/data/models/blockstates/PropertyDispatch;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
net/minecraft/data/models/blockstates/PropertyDispatch mg
	values a
	getDefinedProperties ()Ljava/util/List; b
	getEntries ()Ljava/util/Map; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
	property (Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
	putValue (Lnet/minecraft/data/models/blockstates/Selector;Ljava/util/List;)V a
	verifyComplete ()V c
net/minecraft/data/models/blockstates/PropertyDispatch$C1 mg$a
	property1 a
	generate (Ljava/util/function/Function;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Ljava/util/function/Function;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
	select (Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
net/minecraft/data/models/blockstates/PropertyDispatch$C2 mg$b
	property1 a
	property2 b
	generate (Ljava/util/function/BiFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Ljava/util/function/BiFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
net/minecraft/data/models/blockstates/PropertyDispatch$C3 mg$c
	property1 a
	property2 b
	property3 c
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$TriFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$TriFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
net/minecraft/data/models/blockstates/PropertyDispatch$C4 mg$d
	property1 a
	property2 b
	property3 c
	property4 d
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
net/minecraft/data/models/blockstates/PropertyDispatch$C5 mg$e
	property1 a
	property2 b
	property3 c
	property4 d
	property5 e
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
net/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction mg$f
net/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction mg$g
net/minecraft/data/models/blockstates/PropertyDispatch$TriFunction mg$h
net/minecraft/data/models/blockstates/Selector mh
	COMPARE_BY_NAME b
	EMPTY a
	values c
	empty ()Lnet/minecraft/data/models/blockstates/Selector; a
	extend (Lnet/minecraft/data/models/blockstates/Selector;)Lnet/minecraft/data/models/blockstates/Selector; a
	extend (Lnet/minecraft/world/level/block/state/properties/Property$Value;)Lnet/minecraft/data/models/blockstates/Selector; a
	getKey ()Ljava/lang/String; b
	of ([Lnet/minecraft/world/level/block/state/properties/Property$Value;)Lnet/minecraft/data/models/blockstates/Selector; a
net/minecraft/data/models/blockstates/Variant mi
	values a
	convertList (Ljava/util/List;)Lcom/google/gson/JsonElement; a
	get ()Lcom/google/gson/JsonElement; b
	merge (Lnet/minecraft/data/models/blockstates/Variant;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/Variant; a
	variant ()Lnet/minecraft/data/models/blockstates/Variant; a
	with (Lnet/minecraft/data/models/blockstates/VariantProperty;Ljava/lang/Object;)Lnet/minecraft/data/models/blockstates/Variant; a
net/minecraft/data/models/blockstates/VariantProperties mj
	MODEL c
	UV_LOCK d
	WEIGHT e
	X_ROT a
	Y_ROT b
net/minecraft/data/models/blockstates/VariantProperties$Rotation mj$a
	$VALUES f
	R0 a
	R180 c
	R270 d
	R90 b
	value e
	$values ()[Lnet/minecraft/data/models/blockstates/VariantProperties$Rotation; a
net/minecraft/data/models/blockstates/VariantProperty mk
	key a
	serializer b
	withValue (Ljava/lang/Object;)Lnet/minecraft/data/models/blockstates/VariantProperty$Value; a
net/minecraft/data/models/blockstates/VariantProperty$Value mk$a
	value b
	addToVariant (Lcom/google/gson/JsonObject;)V a
	getKey ()Lnet/minecraft/data/models/blockstates/VariantProperty; a
net/minecraft/data/models/model/DelegatedModel mm
	parent a
	get ()Lcom/google/gson/JsonElement; a
net/minecraft/data/models/model/ModelLocationUtils mn
	decorateBlockModelLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	decorateItemModelLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; b
	getModelLocation (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/item/Item;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/data/models/model/ModelTemplate mo
	model a
	requiredSlots b
	suffix c
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;Lnet/minecraft/data/models/model/ModelTemplate$JsonFactory;)Lnet/minecraft/resources/ResourceLocation; a
	create (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	createBaseTemplate (Lnet/minecraft/resources/ResourceLocation;Ljava/util/Map;)Lcom/google/gson/JsonObject; a
	createMap (Lnet/minecraft/data/models/model/TextureMapping;)Ljava/util/Map; a
	createWithOverride (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; b
	createWithSuffix (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	getDefaultModelLocation (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/data/models/model/ModelTemplate$JsonFactory mo$a
net/minecraft/data/models/model/ModelTemplates mp
	ANVIL aS
	ATTACHED_STEM aU
	AZALEA bt
	BANNER_INVENTORY bF
	BED_INVENTORY bE
	BUTTON s
	BUTTON_INVENTORY u
	BUTTON_PRESSED t
	CAMPFIRE bc
	CANDLE bH
	CANDLE_CAKE bL
	CARPET aw
	CAULDRON_FULL bs
	CAULDRON_LEVEL1 bq
	CAULDRON_LEVEL2 br
	CHISELED_BOOKSHELF_SLOT_BOTTOM_LEFT aP
	CHISELED_BOOKSHELF_SLOT_BOTTOM_MID aQ
	CHISELED_BOOKSHELF_SLOT_BOTTOM_RIGHT aR
	CHISELED_BOOKSHELF_SLOT_TOP_LEFT aM
	CHISELED_BOOKSHELF_SLOT_TOP_MID aN
	CHISELED_BOOKSHELF_SLOT_TOP_RIGHT aO
	CHORUS_FLOWER aE
	COMMAND_BLOCK aL
	CORAL_FAN aB
	CORAL_WALL_FAN aC
	CROP aV
	CROSS ao
	CUBE a
	CUBE_ALL c
	CUBE_ALL_INNER_FACES d
	CUBE_BOTTOM_TOP n
	CUBE_BOTTOM_TOP_INNER_FACES o
	CUBE_COLUMN j
	CUBE_COLUMN_HORIZONTAL k
	CUBE_COLUMN_MIRRORED l
	CUBE_COLUMN_UV_LOCKED_X g
	CUBE_COLUMN_UV_LOCKED_Y h
	CUBE_COLUMN_UV_LOCKED_Z i
	CUBE_DIRECTIONAL b
	CUBE_MIRRORED_ALL e
	CUBE_NORTH_WEST_MIRRORED_ALL f
	CUBE_ORIENTABLE p
	CUBE_ORIENTABLE_TOP_BOTTOM q
	CUBE_ORIENTABLE_VERTICAL r
	CUBE_TOP m
	CUSTOM_FENCE_GATE_CLOSED Q
	CUSTOM_FENCE_GATE_OPEN R
	CUSTOM_FENCE_GATE_WALL_CLOSED S
	CUSTOM_FENCE_GATE_WALL_OPEN T
	CUSTOM_FENCE_INVENTORY I
	CUSTOM_FENCE_POST D
	CUSTOM_FENCE_SIDE_EAST F
	CUSTOM_FENCE_SIDE_NORTH E
	CUSTOM_FENCE_SIDE_SOUTH G
	CUSTOM_FENCE_SIDE_WEST H
	DAYLIGHT_DETECTOR aF
	DOOR_BOTTOM_LEFT v
	DOOR_BOTTOM_LEFT_OPEN w
	DOOR_BOTTOM_RIGHT x
	DOOR_BOTTOM_RIGHT_OPEN y
	DOOR_TOP_LEFT z
	DOOR_TOP_LEFT_OPEN A
	DOOR_TOP_RIGHT B
	DOOR_TOP_RIGHT_OPEN C
	FARMLAND aW
	FENCE_GATE_CLOSED U
	FENCE_GATE_OPEN V
	FENCE_GATE_WALL_CLOSED W
	FENCE_GATE_WALL_OPEN X
	FENCE_INVENTORY L
	FENCE_POST J
	FENCE_SIDE K
	FIRE_FLOOR aX
	FIRE_SIDE aY
	FIRE_SIDE_ALT aZ
	FIRE_UP ba
	FIRE_UP_ALT bb
	FLAT_HANDHELD_ITEM bz
	FLAT_HANDHELD_ROD_ITEM bA
	FLAT_ITEM bx
	FLOWERBED_1 ax
	FLOWERBED_2 ay
	FLOWERBED_3 az
	FLOWERBED_4 aA
	FLOWER_POT_CROSS aq
	FOUR_CANDLES bK
	FOUR_TURTLE_EGGS bo
	GLAZED_TERRACOTTA aD
	HANGING_LANTERN be
	LANTERN bd
	LEAVES ad
	MUSIC_DISC by
	ORIENTABLE_TRAPDOOR_BOTTOM al
	ORIENTABLE_TRAPDOOR_OPEN am
	ORIENTABLE_TRAPDOOR_TOP ak
	PARTICLE_ONLY aa
	PISTON bh
	PISTON_HEAD bi
	PISTON_HEAD_SHORT bj
	POINTED_DRIPSTONE an
	POTTED_AZALEA bu
	POTTED_FLOWERING_AZALEA bv
	PRESSURE_PLATE_DOWN Z
	PRESSURE_PLATE_UP Y
	RAIL_CURVED at
	RAIL_FLAT as
	RAIL_RAISED_NE au
	RAIL_RAISED_SW av
	SCULK_SHRIEKER bM
	SEAGRASS bk
	SHULKER_BOX_INVENTORY bD
	SINGLE_FACE bp
	SKULL_INVENTORY bG
	SLAB_BOTTOM ab
	SLAB_TOP ac
	SNIFFER_EGG bw
	STAINED_GLASS_PANE_NOSIDE aG
	STAINED_GLASS_PANE_NOSIDE_ALT aH
	STAINED_GLASS_PANE_POST aI
	STAINED_GLASS_PANE_SIDE aJ
	STAINED_GLASS_PANE_SIDE_ALT aK
	STAIRS_INNER af
	STAIRS_OUTER ag
	STAIRS_STRAIGHT ae
	STEMS aT
	THREE_CANDLES bJ
	THREE_LAYERED_ITEM bC
	THREE_TURTLE_EGGS bn
	TINTED_CROSS ap
	TINTED_FLOWER_POT_CROSS ar
	TORCH bf
	TRAPDOOR_BOTTOM ai
	TRAPDOOR_OPEN aj
	TRAPDOOR_TOP ah
	TURTLE_EGG bl
	TWO_CANDLES bI
	TWO_LAYERED_ITEM bB
	TWO_TURTLE_EGGS bm
	WALL_INVENTORY P
	WALL_LOW_SIDE N
	WALL_POST M
	WALL_TALL_SIDE O
	WALL_TORCH bg
	create (Ljava/lang/String;Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	create (Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	create ([Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	createItem (Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; b
net/minecraft/data/models/model/TextureMapping mq
	forcedSlots b
	slots a
	attachedStem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; a
	campfire (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; E
	candleCake (Lnet/minecraft/world/level/block/Block;Z)Lnet/minecraft/data/models/model/TextureMapping; a
	cauldron (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; j
	column (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	column (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; k
	columnWithWall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; s
	commandBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; z
	copyAndUpdate (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; c
	copyForced (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureMapping; b
	copySlot (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureMapping; a
	craftingTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; c
	crop (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; g
	cross (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; c
	cross (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; c
	cube (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	cube (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; a
	cubeBottomTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; q
	cubeBottomTopWithWall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; r
	cubeTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; l
	customParticle (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; p
	defaultTexture (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	defaultTexture (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; b
	door (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	door (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; t
	fan (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; j
	fence (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; o
	fire0 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; v
	fire1 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; w
	fletchingTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; d
	flowerbed (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; g
	get (Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/resources/ResourceLocation; a
	getBlockTexture (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/ResourceLocation; G
	getBlockTexture (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getForced ()Ljava/util/stream/Stream; a
	getItemTexture (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/ResourceLocation; c
	getItemTexture (Lnet/minecraft/world/item/Item;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	lantern (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; x
	layer0 (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; k
	layer0 (Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/models/model/TextureMapping; b
	layer0 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; F
	layered (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; c
	layered (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	logColumn (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; n
	orientableCube (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; A
	orientableCubeOnlyTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; B
	orientableCubeSameEnds (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; C
	pane (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; b
	particle (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; h
	particle (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; u
	particleFromItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/models/model/TextureMapping; a
	pattern (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; i
	plant (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; d
	plant (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; d
	pottedAzalea (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; m
	put (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	putForced (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	rail (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; e
	rail (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; e
	sculkShrieker (Z)Lnet/minecraft/data/models/model/TextureMapping; a
	singleSlot (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; d
	snifferEgg (Ljava/lang/String;)Lnet/minecraft/data/models/model/TextureMapping; a
	stem (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; h
	top (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; D
	torch (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; i
	torch (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; y
	trialSpawner (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/data/models/model/TextureMapping; a
	wool (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; f
	wool (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; f
net/minecraft/data/models/model/TextureSlot mr
	ALL a
	BACK h
	BOTTOM e
	CANDLE L
	CONTENT N
	CROP A
	CROSS p
	DIRT B
	DOWN o
	EAST l
	EDGE w
	END d
	FAN x
	FIRE C
	FLOWERBED P
	FRONT g
	INNER_TOP O
	INSIDE M
	LANTERN D
	LAYER0 H
	LAYER1 I
	LAYER2 J
	LIT_LOG K
	NORTH j
	PANE v
	PARTICLE c
	PATTERN u
	PLANT q
	PLATFORM E
	RAIL s
	SIDE i
	SOUTH k
	STEM y
	TEXTURE b
	TOP f
	TORCH G
	UNSTICKY F
	UP n
	UPPER_STEM z
	WALL r
	WEST m
	WOOL t
	id Q
	parent R
	create (Ljava/lang/String;)Lnet/minecraft/data/models/model/TextureSlot; a
	create (Ljava/lang/String;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureSlot; a
	getId ()Ljava/lang/String; a
	getParent ()Lnet/minecraft/data/models/model/TextureSlot; b
net/minecraft/data/models/model/TexturedModel ms
	ANVIL r
	CARPET j
	COLUMN d
	COLUMN_ALT w
	COLUMN_HORIZONTAL e
	COLUMN_HORIZONTAL_ALT x
	COLUMN_WITH_WALL z
	CORAL_FAN p
	CUBE a
	CUBE_INNER_FACES b
	CUBE_MIRRORED c
	CUBE_TOP g
	CUBE_TOP_BOTTOM f
	FLOWERBED_1 k
	FLOWERBED_2 l
	FLOWERBED_3 m
	FLOWERBED_4 n
	GLAZED_TERRACOTTA o
	HANGING_LANTERN u
	LANTERN t
	LEAVES s
	ORIENTABLE i
	ORIENTABLE_ONLY_TOP h
	PARTICLE_ONLY q
	SEAGRASS v
	TOP_BOTTOM_WITH_WALL y
	mapping A
	template B
	create (Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	createAllSame (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TexturedModel; a
	createDefault (Ljava/util/function/Function;Lnet/minecraft/data/models/model/ModelTemplate;)Lnet/minecraft/data/models/model/TexturedModel$Provider; a
	createWithSuffix (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	getMapping ()Lnet/minecraft/data/models/model/TextureMapping; b
	getTemplate ()Lnet/minecraft/data/models/model/ModelTemplate; a
	updateTextures (Ljava/util/function/Consumer;)Lnet/minecraft/data/models/model/TexturedModel; a
net/minecraft/data/models/model/TexturedModel$Provider ms$a
net/minecraft/data/recipes/RecipeBuilder mw
	ROOT_RECIPE_ADVANCEMENT a
	determineBookCategory (Lnet/minecraft/data/recipes/RecipeCategory;)Lnet/minecraft/world/item/crafting/CraftingBookCategory; a
	getDefaultRecipeId (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/resources/ResourceLocation; a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	save (Lnet/minecraft/data/recipes/RecipeOutput;)V a
	save (Lnet/minecraft/data/recipes/RecipeOutput;Ljava/lang/String;)V a
	save (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/resources/ResourceLocation;)V a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lnet/minecraft/data/recipes/RecipeBuilder; a
net/minecraft/data/recipes/RecipeCategory mx
	$VALUES k
	BREWING h
	BUILDING_BLOCKS a
	COMBAT f
	DECORATIONS b
	FOOD g
	MISC i
	REDSTONE c
	TOOLS e
	TRANSPORTATION d
	recipeFolderName j
	$values ()[Lnet/minecraft/data/recipes/RecipeCategory; b
	getFolderName ()Ljava/lang/String; a
net/minecraft/data/recipes/RecipeOutput my
	accept (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/advancements/AdvancementHolder;)V a
	advancement ()Lnet/minecraft/advancements/Advancement$Builder; a
net/minecraft/data/recipes/RecipeProvider mz
	SHAPE_BUILDERS f
	advancementPathProvider e
	recipePathProvider d
	banner (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V h
	bedFromPlanksAndWool (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V g
	buildAdvancement (Lnet/minecraft/data/CachedOutput;Lnet/minecraft/advancements/AdvancementHolder;)Ljava/util/concurrent/CompletableFuture; a
	buildRecipes (Lnet/minecraft/data/recipes/RecipeOutput;)V a
	buttonBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; c
	candle (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V n
	carpet (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V f
	chestBoat (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V c
	chiseled (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V g
	chiseledBuilder (Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; b
	colorBlockWithDye (Lnet/minecraft/data/recipes/RecipeOutput;Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V a
	coloredTerracottaFromTerracottaAndDye (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V l
	concretePowder (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V m
	cookRecipes (Lnet/minecraft/data/recipes/RecipeOutput;Ljava/lang/String;Lnet/minecraft/world/item/crafting/RecipeSerializer;Lnet/minecraft/world/item/crafting/AbstractCookingRecipe$Factory;I)V a
	copperBulb (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V b
	copySmithingTemplate (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/tags/TagKey;)V a
	copySmithingTemplate (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V o
	cut (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V f
	cutBuilder (Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; f
	doorBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	fenceBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; d
	fenceGateBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; e
	generateForEnabledBlockFamilies (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/flag/FeatureFlagSet;)V a
	generateRecipes (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/data/BlockFamily;Lnet/minecraft/world/flag/FeatureFlagSet;)V a
	getBaseBlock (Lnet/minecraft/data/BlockFamily;Lnet/minecraft/data/BlockFamily$Variant;)Lnet/minecraft/world/level/block/Block; a
	getBlastingRecipeName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; f
	getConversionRecipeName (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; a
	getHasName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; b
	getItemName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; c
	getName ()Ljava/lang/String; a
	getSimpleRecipeName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; d
	getSmeltingRecipeName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; e
	grate (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
	hangingSign (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V e
	has (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/Criterion; a
	has (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/Criterion; a
	has (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/Criterion; a
	insideOf (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/Criterion; a
	inventoryTrigger ([Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/Criterion; a
	inventoryTrigger ([Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/Criterion; a
	mosaicBuilder (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V h
	netheriteSmithing (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/item/Item;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/item/Item;)V a
	nineBlockStorageRecipes (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;)V a
	nineBlockStorageRecipes (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V a
	nineBlockStorageRecipesRecipesWithCustomUnpacking (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;Ljava/lang/String;)V b
	nineBlockStorageRecipesWithCustomPacking (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;Ljava/lang/String;)V a
	oneToOneConversionRecipe (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;)V a
	oneToOneConversionRecipe (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;I)V a
	oreBlasting (Lnet/minecraft/data/recipes/RecipeOutput;Ljava/util/List;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;FILjava/lang/String;)V b
	oreCooking (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/item/crafting/RecipeSerializer;Lnet/minecraft/world/item/crafting/AbstractCookingRecipe$Factory;Ljava/util/List;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;FILjava/lang/String;Ljava/lang/String;)V a
	oreSmelting (Lnet/minecraft/data/recipes/RecipeOutput;Ljava/util/List;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;FILjava/lang/String;)V a
	planksFromLog (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/tags/TagKey;I)V a
	planksFromLogs (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/tags/TagKey;I)V b
	polished (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V e
	polishedBuilder (Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; e
	pressurePlate (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V d
	pressurePlateBuilder (Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; c
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
	signBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; g
	simpleCookingRecipe (Lnet/minecraft/data/recipes/RecipeOutput;Ljava/lang/String;Lnet/minecraft/world/item/crafting/RecipeSerializer;Lnet/minecraft/world/item/crafting/AbstractCookingRecipe$Factory;ILnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;F)V a
	slab (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V c
	slabBuilder (Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	smeltingResultFromBase (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V p
	stainedGlassFromGlassAndDye (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V i
	stainedGlassPaneFromGlassPaneAndDye (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V k
	stainedGlassPaneFromStainedGlass (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V j
	stairBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; b
	stonecutterResultFromBase (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V i
	stonecutterResultFromBase (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;I)V a
	threeByThreePacker (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V b
	threeByThreePacker (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;)V a
	trapdoorBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; f
	trimSmithing (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;)V a
	twoByTwoPacker (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V a
	wall (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V d
	wallBuilder (Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; d
	waxRecipes (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/flag/FeatureFlagSet;)V b
	woodFromLogs (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V a
	woodenBoat (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V b
net/minecraft/data/recipes/ShapedRecipeBuilder na
	category b
	count d
	criteria g
	group h
	key f
	result c
	rows e
	showNotification i
	define (Ljava/lang/Character;Lnet/minecraft/tags/TagKey;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	define (Ljava/lang/Character;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	define (Ljava/lang/Character;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/item/crafting/ShapedRecipePattern; a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; c
	pattern (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; b
	save (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/resources/ResourceLocation;)V a
	shaped (Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	shaped (Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	showNotification (Z)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; b
net/minecraft/data/recipes/ShapelessRecipeBuilder nb
	category b
	count d
	criteria f
	group g
	ingredients e
	result c
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
	requires (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/item/crafting/Ingredient;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
	requires (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	save (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/resources/ResourceLocation;)V a
	shapeless (Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	shapeless (Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
net/minecraft/data/recipes/SimpleCookingRecipeBuilder nc
	bookCategory c
	category b
	cookingTime g
	criteria h
	experience f
	factory j
	group i
	ingredient e
	result d
	blasting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; b
	campfireCooking (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; a
	determineBlastingRecipeCategory (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/item/crafting/CookingBookCategory; c
	determineRecipeCategory (Lnet/minecraft/world/item/crafting/RecipeSerializer;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/item/crafting/CookingBookCategory; a
	determineSmeltingRecipeCategory (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/item/crafting/CookingBookCategory; b
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	generic (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;FILnet/minecraft/world/item/crafting/RecipeSerializer;Lnet/minecraft/world/item/crafting/AbstractCookingRecipe$Factory;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; b
	save (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/resources/ResourceLocation;)V a
	smelting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; c
	smoking (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; d
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; b
net/minecraft/data/recipes/SingleItemRecipeBuilder nd
	category b
	count e
	criteria f
	factory h
	group g
	ingredient d
	result c
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; b
	save (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/resources/ResourceLocation;)V a
	stonecutting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; a
	stonecutting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; b
net/minecraft/data/recipes/SmithingTransformRecipeBuilder ne
	addition c
	base b
	category d
	criteria f
	result e
	template a
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	save (Lnet/minecraft/data/recipes/RecipeOutput;Ljava/lang/String;)V a
	save (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/resources/ResourceLocation;)V a
	smithing (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/recipes/SmithingTransformRecipeBuilder; a
	unlocks (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lnet/minecraft/data/recipes/SmithingTransformRecipeBuilder; a
net/minecraft/data/recipes/SmithingTrimRecipeBuilder nf
	addition d
	base c
	category a
	criteria e
	template b
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	save (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/resources/ResourceLocation;)V a
	smithingTrim (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/data/recipes/RecipeCategory;)Lnet/minecraft/data/recipes/SmithingTrimRecipeBuilder; a
	unlocks (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lnet/minecraft/data/recipes/SmithingTrimRecipeBuilder; a
net/minecraft/data/recipes/SpecialRecipeBuilder ng
	factory a
	save (Lnet/minecraft/data/recipes/RecipeOutput;Ljava/lang/String;)V a
	save (Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/resources/ResourceLocation;)V a
	special (Ljava/util/function/Function;)Lnet/minecraft/data/recipes/SpecialRecipeBuilder; a
net/minecraft/data/recipes/packs/BundleRecipeProvider ni
	buildRecipes (Lnet/minecraft/data/recipes/RecipeOutput;)V a
net/minecraft/data/recipes/packs/UpdateOneTwentyOneRecipeProvider nj
	buildRecipes (Lnet/minecraft/data/recipes/RecipeOutput;)V a
net/minecraft/data/recipes/packs/VanillaRecipeProvider nk
	COAL_SMELTABLES d
	COPPER_SMELTABLES f
	DIAMOND_SMELTABLES h
	EMERALD_SMELTABLES k
	GOLD_SMELTABLES g
	IRON_SMELTABLES e
	LAPIS_SMELTABLES i
	REDSTONE_SMELTABLES j
	buildRecipes (Lnet/minecraft/data/recipes/RecipeOutput;)V a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
	smithingTrims ()Ljava/util/stream/Stream; b
net/minecraft/data/recipes/packs/VanillaRecipeProvider$TrimTemplate nk$a
	id b
	template a
	id ()Lnet/minecraft/resources/ResourceLocation; b
	template ()Lnet/minecraft/world/item/Item; a
net/minecraft/data/registries/RegistriesDatapackGenerator nm
	LOGGER d
	output e
	registries f
	dumpRegistryCap (Lnet/minecraft/data/CachedOutput;Lnet/minecraft/core/HolderLookup$Provider;Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/resources/RegistryDataLoader$RegistryData;)Ljava/util/Optional; a
	dumpValue (Ljava/nio/file/Path;Lnet/minecraft/data/CachedOutput;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/registries/RegistryPatchGenerator nn
	createLookup (Ljava/util/concurrent/CompletableFuture;Lnet/minecraft/core/RegistrySetBuilder;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/registries/UpdateOneTwentyOneRegistries no
	BUILDER a
	createLookup (Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/registries/VanillaRegistries np
	BUILDER a
	createLookup ()Lnet/minecraft/core/HolderLookup$Provider; a
	validatePlacedFeature (Lnet/minecraft/world/level/levelgen/placement/PlacedFeature;)Z a
	validateThatAllBiomeFeaturesHaveBiomeFilter (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderLookup;)V a
	validateThatAllBiomeFeaturesHaveBiomeFilter (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/structures/NbtToSnbt nr
	LOGGER d
	inputFolders e
	output f
	convertStructure (Lnet/minecraft/data/CachedOutput;Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	getName (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
	writeSnbt (Lnet/minecraft/data/CachedOutput;Ljava/nio/file/Path;Ljava/lang/String;)V a
net/minecraft/data/structures/SnbtDatafixer ns
	main ([Ljava/lang/String;)V a
	updateInDirectory (Ljava/lang/String;)V a
net/minecraft/data/structures/SnbtToNbt nt
	LOGGER d
	filters g
	inputFolders f
	output e
	addFilter (Lnet/minecraft/data/structures/SnbtToNbt$Filter;)Lnet/minecraft/data/structures/SnbtToNbt; a
	applyFilters (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	getName ()Ljava/lang/String; a
	getName (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; a
	readStructure (Ljava/nio/file/Path;Ljava/lang/String;)Lnet/minecraft/data/structures/SnbtToNbt$TaskResult; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
	storeStructureIfChanged (Lnet/minecraft/data/CachedOutput;Lnet/minecraft/data/structures/SnbtToNbt$TaskResult;Ljava/nio/file/Path;)V a
net/minecraft/data/structures/SnbtToNbt$Filter nt$a
net/minecraft/data/structures/SnbtToNbt$StructureConversionException nt$b
net/minecraft/data/structures/SnbtToNbt$TaskResult nt$c
	hash c
	name a
	payload b
	hash ()Lcom/google/common/hash/HashCode; c
	name ()Ljava/lang/String; a
	payload ()[B b
net/minecraft/data/structures/StructureUpdater nu
	LOGGER a
	update (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/data/tags/BannerPatternTagsProvider nw
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/BiomeTagsProvider nx
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/CatVariantTagsProvider ny
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/DamageTypeTagsProvider nz
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/EntityTypeTagsProvider oa
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/FlatLevelGeneratorPresetTagsProvider ob
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/FluidTagsProvider oc
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/GameEventTagsProvider od
	VIBRATIONS_EXCEPT_FLAP d
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/InstrumentTagsProvider oe
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/IntrinsicHolderTagsProvider of
	keyExtractor d
	tag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/data/tags/IntrinsicHolderTagsProvider$IntrinsicTagAppender; a
	tag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; b
net/minecraft/data/tags/IntrinsicHolderTagsProvider$IntrinsicTagAppender of$a
	keyExtractor a
	add (Ljava/lang/Object;)Lnet/minecraft/data/tags/IntrinsicHolderTagsProvider$IntrinsicTagAppender; a
	add ([Ljava/lang/Object;)Lnet/minecraft/data/tags/IntrinsicHolderTagsProvider$IntrinsicTagAppender; a
	addTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/data/tags/IntrinsicHolderTagsProvider$IntrinsicTagAppender; a
	addTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; b
net/minecraft/data/tags/ItemTagsProvider og
	blockTags d
	tagsToCopy g
	copy (Lnet/minecraft/tags/TagKey;Lnet/minecraft/tags/TagKey;)V a
	createContentsProvider ()Ljava/util/concurrent/CompletableFuture; b
net/minecraft/data/tags/PaintingVariantTagsProvider oh
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/PoiTypeTagsProvider oi
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/StructureTagsProvider oj
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/TagsProvider ok
	LOGGER d
	builders j
	contentsDone h
	lookupProvider g
	parentProvider i
	pathProvider e
	registryKey f
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
	contentsGetter ()Ljava/util/concurrent/CompletableFuture; c
	createContentsProvider ()Ljava/util/concurrent/CompletableFuture; b
	getName ()Ljava/lang/String; a
	getOrCreateRawBuilder (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/tags/TagBuilder; c
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
	tag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; b
net/minecraft/data/tags/TagsProvider$TagAppender ok$b
	builder a
	add (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	add ([Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	addOptional (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	addOptionalTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; b
	addTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; b
net/minecraft/data/tags/TagsProvider$TagLookup ok$c
net/minecraft/data/tags/TradeRebalanceStructureTagsProvider ol
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/UpdateOneTwentyOneBiomeTagsProvider om
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/UpdateOneTwentyOneBlockTagsProvider on
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/UpdateOneTwentyOneDamageTypeTagsProvider oo
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/UpdateOneTwentyOneEntityTypeTagsProvider op
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/UpdateOneTwentyOneItemTagsProvider oq
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/VanillaBlockTagsProvider or
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/VanillaItemTagsProvider os
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/WorldPresetTagsProvider ot
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/worldgen/AncientCityStructurePieces ov
	START a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/AncientCityStructurePools ow
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/BastionBridgePools ox
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/BastionHoglinStablePools oy
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/BastionHousingUnitsPools oz
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/BastionPieces pa
	START a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/BastionSharedPools pb
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/BastionTreasureRoomPools pc
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/BiomeDefaultFeatures pd
	addAncientDebris (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V av
	addBadlandExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ae
	addBadlandGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V M
	addBadlandsTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V G
	addBambooVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V r
	addBirchTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V v
	addBlueIce (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V as
	addCherryGroveVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V W
	addColdOceanExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V am
	addCommonBerryBushes (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V p
	addDefaultCarversAndLakes (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V a
	addDefaultCrystalFormations (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V aw
	addDefaultExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ad
	addDefaultFlowers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V V
	addDefaultGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V Z
	addDefaultMonsterRoom (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V b
	addDefaultMushrooms (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ac
	addDefaultOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V f
	addDefaultOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;Z)V a
	addDefaultSeagrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V an
	addDefaultSoftDisks (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V j
	addDefaultSprings (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ap
	addDefaultUndergroundVariety (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V c
	addDesertExtraDecoration (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ak
	addDesertExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ai
	addDesertVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V T
	addDripstone (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V d
	addExtraEmeralds (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V h
	addExtraGold (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V g
	addFerns (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V n
	addForestFlowers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V N
	addForestGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V O
	addFossilDecoration (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V al
	addFrozenSprings (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V aq
	addGiantTaigaVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V U
	addGroveTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V t
	addIcebergs (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ar
	addInfestedStone (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V i
	addJungleGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V I
	addJungleMelons (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V af
	addJungleTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V E
	addJungleVines (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ah
	addLightBambooVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V q
	addLukeWarmKelp (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ao
	addLushCavesSpecialOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V B
	addLushCavesVegetationFeatures (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V A
	addMangroveSwampDisks (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V l
	addMangroveSwampVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V Q
	addMeadowVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V X
	addMossyStoneBlock (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V m
	addMountainForestTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V D
	addMountainTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V C
	addMushroomFieldVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V R
	addNetherDefaultOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V au
	addOtherBirchTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V w
	addPlainGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ab
	addPlainVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V S
	addRareBerryBushes (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V o
	addSavannaExtraGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V L
	addSavannaGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V J
	addSavannaTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V y
	addSculk (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V e
	addShatteredSavannaGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V K
	addShatteredSavannaTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V z
	addSnowyTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V H
	addSparseJungleMelons (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ag
	addSparseJungleTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V F
	addSurfaceFreezing (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V at
	addSwampClayDisk (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V k
	addSwampExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V aj
	addSwampVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V P
	addTaigaGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V aa
	addTaigaTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V s
	addTallBirchTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V x
	addWarmFlowers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V Y
	addWaterTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V u
	baseJungleSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V i
	caveSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V b
	commonSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V c
	desertSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V f
	dripstoneCavesSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V g
	endSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V j
	farmAnimals (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V a
	monsters (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;IIIZ)V a
	mooshroomSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V h
	oceanSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;III)V a
	plainsSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V d
	snowySpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V e
	warmOceanSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;II)V a
net/minecraft/data/worldgen/BootstapContext pe
	lookup (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/HolderGetter; a
	register (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Lnet/minecraft/core/Holder$Reference; a
	register (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder$Reference; a
net/minecraft/data/worldgen/Carvers pf
	CANYON c
	CAVE a
	CAVE_EXTRA_UNDERGROUND b
	NETHER_CAVE d
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/data/worldgen/DesertVillagePools pg
	START a
	TERMINATORS_KEY b
	ZOMBIE_TERMINATORS_KEY c
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/DimensionTypes ph
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/NoiseData pi
	DEFAULT_SHIFT a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;ID[D)V a
	registerBiomeNoises (Lnet/minecraft/data/worldgen/BootstapContext;ILnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)V a
net/minecraft/data/worldgen/PillagerOutpostPools pj
	START a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/PlainVillagePools pk
	START a
	TERMINATORS_KEY b
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/Pools pl
	EMPTY a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Ljava/lang/String;Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool;)V a
net/minecraft/data/worldgen/ProcessorLists pm
	ANCIENT_CITY_GENERIC_DEGRADATION H
	ANCIENT_CITY_START_DEGRADATION G
	ANCIENT_CITY_WALLS_DEGRADATION I
	BASTION_GENERIC_DEGRADATION w
	BOTTOM_RAMPART r
	BRIDGE z
	EMPTY M
	ENTRANCE_REPLACEMENT y
	FARM_DESERT p
	FARM_PLAINS l
	FARM_SAVANNA m
	FARM_SNOWY n
	FARM_TAIGA o
	FOSSIL_COAL E
	FOSSIL_DIAMONDS F
	FOSSIL_ROT D
	HIGH_RAMPART C
	HIGH_WALL B
	HOUSING t
	MOSSIFY_10_PERCENT f
	MOSSIFY_20_PERCENT g
	MOSSIFY_70_PERCENT h
	OUTPOST_ROT q
	RAMPART_DEGRADATION x
	ROOF A
	SIDE_WALL_DEGRADATION u
	STABLE_DEGRADATION v
	STREET_PLAINS i
	STREET_SAVANNA j
	STREET_SNOWY_OR_TAIGA k
	TRAIL_RUINS_HOUSES_ARCHAEOLOGY J
	TRAIL_RUINS_ROADS_ARCHAEOLOGY K
	TRAIL_RUINS_TOWER_TOP_ARCHAEOLOGY L
	TREASURE_ROOMS s
	ZOMBIE_DESERT e
	ZOMBIE_PLAINS a
	ZOMBIE_SAVANNA b
	ZOMBIE_SNOWY c
	ZOMBIE_TAIGA d
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Ljava/util/List;)V a
	trailsArchyLootProcessor (Lnet/minecraft/resources/ResourceLocation;I)Lnet/minecraft/world/level/levelgen/structure/templatesystem/CappedProcessor; a
net/minecraft/data/worldgen/SavannaVillagePools pn
	START a
	TERMINATORS_KEY b
	ZOMBIE_TERMINATORS_KEY c
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/SnowyVillagePools po
	START a
	TERMINATORS_KEY b
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/StructureSets pp
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/Structures pq
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	structure (Lnet/minecraft/core/HolderSet;Ljava/util/Map;Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment;)Lnet/minecraft/world/level/levelgen/structure/Structure$StructureSettings; a
	structure (Lnet/minecraft/core/HolderSet;Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment;)Lnet/minecraft/world/level/levelgen/structure/Structure$StructureSettings; a
	structure (Lnet/minecraft/core/HolderSet;Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment;)Lnet/minecraft/world/level/levelgen/structure/Structure$StructureSettings; a
net/minecraft/data/worldgen/SurfaceRuleData pr
	AIR a
	BASALT C
	BEDROCK b
	BLACKSTONE D
	CALCITE o
	COARSE_DIRT l
	CRIMSON_NYLIUM H
	DEEPSLATE i
	DIRT j
	ENDSTONE I
	GRASS_BLOCK n
	GRAVEL p
	ICE w
	LAVA y
	MUD u
	MYCELIUM m
	NETHERRACK z
	NETHER_WART_BLOCK G
	ORANGE_TERRACOTTA d
	PACKED_ICE s
	PODZOL k
	POWDER_SNOW v
	RED_SAND f
	RED_SANDSTONE g
	SAND q
	SANDSTONE r
	SNOW_BLOCK t
	SOUL_SAND A
	SOUL_SOIL B
	STONE h
	TERRACOTTA e
	WARPED_NYLIUM F
	WARPED_WART_BLOCK E
	WATER x
	WHITE_TERRACOTTA c
	air ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; d
	end ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; c
	makeStateRule (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	nether ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; b
	overworld ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	overworldLike (ZZZ)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	surfaceNoiseAbove (D)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
net/minecraft/data/worldgen/TaigaVillagePools ps
	START a
	TERMINATORS_KEY b
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/TerrainProvider pt
	AMPLIFIED_FACTOR g
	AMPLIFIED_JAGGEDNESS h
	AMPLIFIED_OFFSET f
	BEACH_CONTINENTALNESS d
	DEEP_OCEAN_CONTINENTALNESS a
	NO_TRANSFORM e
	OCEAN_CONTINENTALNESS b
	PLAINS_CONTINENTALNESS c
	buildErosionJaggednessSpline (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;FFFFLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	buildErosionOffsetSpline (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;FFFFFFZZLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	buildMountainRidgeSplineWithPoints (Lnet/minecraft/util/ToFloatFunction;FZLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	buildRidgeJaggednessSpline (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;FFLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	buildWeirdnessJaggednessSpline (Lnet/minecraft/util/ToFloatFunction;FLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	calculateMountainRidgeZeroContinentalnessPoint (F)F a
	calculateSlope (FFFF)F a
	getErosionFactor (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;FZLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	mountainContinentalness (FFF)F a
	overworldFactor (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Z)Lnet/minecraft/util/CubicSpline; a
	overworldJaggedness (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Z)Lnet/minecraft/util/CubicSpline; b
	overworldOffset (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Z)Lnet/minecraft/util/CubicSpline; a
	ridgeSpline (Lnet/minecraft/util/ToFloatFunction;FFFFFFLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
net/minecraft/data/worldgen/TrailRuinsStructurePools pu
	START a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/TrialChambersStructurePools pv
	ALIAS_BINDINGS d
	CHAMBER_CAP_FALLBACK c
	HALLWAY_FALLBACK b
	START a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	spawner (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/data/worldgen/UpdateOneTwentyOnePools pw
	EMPTY a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Ljava/lang/String;Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool;)V a
net/minecraft/data/worldgen/UpdateOneTwentyOneProcessorLists px
	TRIAL_CHAMBERS_COPPER_BULB_DEGRADATION a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Ljava/util/List;)V a
net/minecraft/data/worldgen/UpdateOneTwentyOneStructureSets py
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/UpdateOneTwentyOneStructures pz
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/VillagePools qa
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/biome/BiomeData qb
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/biome/EndBiomes qc
	baseEndBiome (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)Lnet/minecraft/world/level/biome/Biome; a
	endBarrens (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; a
	endHighlands (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; d
	endMidlands (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; c
	smallEndIslands (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; e
	theEnd (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; b
net/minecraft/data/worldgen/biome/NetherBiomes qd
	basaltDeltas (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; c
	crimsonForest (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; d
	netherWastes (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; a
	soulSandValley (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; b
	warpedForest (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; e
net/minecraft/data/worldgen/biome/OverworldBiomes qe
	NORMAL_MUSIC d
	NORMAL_WATER_COLOR a
	NORMAL_WATER_FOG_COLOR b
	OVERWORLD_FOG_COLOR c
	badlands (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/Biome; c
	bambooJungle (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; c
	baseJungle (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;FZZZLnet/minecraft/world/level/biome/MobSpawnSettings$Builder;Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/Biome; a
	baseOcean (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;IILnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)Lnet/minecraft/world/level/biome/Biome; a
	baseOceanGeneration (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; s
	beach (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;ZZ)Lnet/minecraft/world/level/biome/Biome; b
	biome (ZFFIILjava/lang/Integer;Ljava/lang/Integer;Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/Biome; a
	biome (ZFFLnet/minecraft/world/level/biome/MobSpawnSettings$Builder;Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/Biome; a
	calculateSkyColor (F)I a
	coldOcean (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/Biome; d
	darkForest (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; g
	deepDark (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; r
	desert (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; d
	dripstoneCaves (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; q
	forest (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;ZZZ)Lnet/minecraft/world/level/biome/Biome; b
	frozenOcean (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/Biome; g
	frozenPeaks (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; k
	globalOverworldGeneration (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V a
	grove (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; o
	jaggedPeaks (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; l
	jungle (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; b
	lukeWarmOcean (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/Biome; f
	lushCaves (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; p
	mangroveSwamp (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; i
	meadowOrCherryGrove (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/Biome; j
	mushroomFields (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; e
	ocean (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/Biome; e
	oldGrowthTaiga (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/Biome; a
	plains (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;ZZZ)Lnet/minecraft/world/level/biome/Biome; a
	river (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/Biome; i
	savanna (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;ZZ)Lnet/minecraft/world/level/biome/Biome; a
	snowySlopes (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; n
	sparseJungle (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; a
	stonyPeaks (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; m
	swamp (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; h
	taiga (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/Biome; h
	theVoid (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; j
	warmOcean (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; f
	windsweptHills (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/Biome; b
net/minecraft/data/worldgen/features/AquaticFeatures qg
	KELP g
	SEAGRASS_MID c
	SEAGRASS_SHORT a
	SEAGRASS_SIMPLE f
	SEAGRASS_SLIGHTLY_LESS_SHORT b
	SEAGRASS_TALL d
	SEA_PICKLE e
	WARM_OCEAN_VEGETATION h
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/features/CaveFeatures qh
	AMETHYST_GEODE u
	CAVE_VINE j
	CAVE_VINE_IN_MOSS k
	CLAY_POOL_WITH_DRIPLEAVES q
	CLAY_WITH_DRIPLEAVES p
	DRIPLEAF o
	DRIPSTONE_CLUSTER d
	FOSSIL_COAL b
	FOSSIL_DIAMONDS c
	GLOW_LICHEN h
	LARGE_DRIPSTONE e
	LUSH_CAVES_CLAY r
	MONSTER_ROOM a
	MOSS_PATCH m
	MOSS_PATCH_BONEMEAL n
	MOSS_PATCH_CEILING s
	MOSS_VEGETATION l
	POINTED_DRIPSTONE f
	ROOTED_AZALEA_TREE i
	SCULK_PATCH_ANCIENT_CITY w
	SCULK_PATCH_DEEP_DARK v
	SCULK_VEIN x
	SPORE_BLOSSOM t
	UNDERWATER_MAGMA g
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	makeDripleaf (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Holder; a
	makeSmallDripleaf ()Lnet/minecraft/core/Holder; a
net/minecraft/data/worldgen/features/EndFeatures qi
	CHORUS_PLANT d
	END_GATEWAY_DELAYED c
	END_GATEWAY_RETURN b
	END_ISLAND e
	END_SPIKE a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/features/FeatureUtils qj
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/levelgen/feature/Feature;)V a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	simplePatchConfiguration (Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; a
	simplePatchConfiguration (Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; a
	simplePatchConfiguration (Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Ljava/util/List;I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; a
	simplePatchPredicate (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	simpleRandomPatchConfiguration (ILnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; a
net/minecraft/data/worldgen/features/MiscOverworldFeatures qk
	BLUE_ICE f
	BONUS_CHEST m
	DESERT_WELL o
	DISK_CLAY h
	DISK_GRASS l
	DISK_GRAVEL i
	DISK_SAND j
	FOREST_ROCK c
	FREEZE_TOP_LAYER k
	ICEBERG_BLUE e
	ICEBERG_PACKED d
	ICE_PATCH b
	ICE_SPIKE a
	LAKE_LAVA g
	SPRING_LAVA_FROZEN q
	SPRING_LAVA_OVERWORLD p
	SPRING_WATER r
	VOID_START_PLATFORM n
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/features/NetherFeatures ql
	BASALT_BLOBS d
	BASALT_PILLAR q
	BLACKSTONE_BLOBS e
	CRIMSON_FOREST_VEGETATION g
	CRIMSON_FOREST_VEGETATION_BONEMEAL h
	DELTA a
	GLOWSTONE_EXTRA f
	LARGE_BASALT_COLUMNS c
	NETHER_SPROUTS k
	NETHER_SPROUTS_BONEMEAL l
	PATCH_CRIMSON_ROOTS p
	PATCH_FIRE u
	PATCH_SOUL_FIRE v
	SMALL_BASALT_COLUMNS b
	SPRING_LAVA_NETHER r
	SPRING_NETHER_CLOSED s
	SPRING_NETHER_OPEN t
	TWISTING_VINES m
	TWISTING_VINES_BONEMEAL n
	WARPED_FOREST_VEGETATION_BONEMEAL j
	WARPED_FOREST_VEGETION i
	WEEPING_VINES o
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/features/OreFeatures qm
	ORE_ANCIENT_DEBRIS_LARGE B
	ORE_ANCIENT_DEBRIS_SMALL C
	ORE_ANDESITE k
	ORE_BLACKSTONE f
	ORE_CLAY F
	ORE_COAL m
	ORE_COAL_BURIED n
	ORE_COPPER_LARGE E
	ORE_COPPPER_SMALL D
	ORE_DIAMOND_BURIED w
	ORE_DIAMOND_LARGE v
	ORE_DIAMOND_MEDIUM u
	ORE_DIAMOND_SMALL t
	ORE_DIORITE j
	ORE_DIRT g
	ORE_EMERALD A
	ORE_GOLD q
	ORE_GOLD_BURIED r
	ORE_GRANITE i
	ORE_GRAVEL h
	ORE_GRAVEL_NETHER e
	ORE_INFESTED z
	ORE_IRON o
	ORE_IRON_SMALL p
	ORE_LAPIS x
	ORE_LAPIS_BURIED y
	ORE_MAGMA a
	ORE_NETHER_GOLD c
	ORE_QUARTZ d
	ORE_REDSTONE s
	ORE_SOUL_SAND b
	ORE_TUFF l
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/features/PileFeatures qn
	PILE_HAY a
	PILE_ICE d
	PILE_MELON b
	PILE_PUMPKIN e
	PILE_SNOW c
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/features/TreeFeatures qo
	ACACIA j
	AZALEA_TREE w
	BIRCH i
	BIRCH_BEES_0002 D
	BIRCH_BEES_002 E
	BIRCH_BEES_005 F
	CHERRY z
	CHERRY_BEES_005 K
	CRIMSON_FUNGUS a
	CRIMSON_FUNGUS_PLANTED b
	DARK_OAK h
	FANCY_OAK n
	FANCY_OAK_BEES J
	FANCY_OAK_BEES_0002 G
	FANCY_OAK_BEES_002 H
	FANCY_OAK_BEES_005 I
	HUGE_BROWN_MUSHROOM e
	HUGE_RED_MUSHROOM f
	JUNGLE_BUSH v
	JUNGLE_TREE m
	JUNGLE_TREE_NO_VINE o
	MANGROVE x
	MEGA_JUNGLE_TREE p
	MEGA_PINE r
	MEGA_SPRUCE q
	OAK g
	OAK_BEES_0002 A
	OAK_BEES_002 B
	OAK_BEES_005 C
	PINE l
	SPRUCE k
	SUPER_BIRCH_BEES t
	SUPER_BIRCH_BEES_0002 s
	SWAMP_OAK u
	TALL_MANGROVE y
	WARPED_FUNGUS c
	WARPED_FUNGUS_PLANTED d
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	cherry ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; f
	createBirch ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; b
	createFancyOak ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; e
	createJungleTree ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; d
	createOak ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	createStraightBlobTree (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;IIII)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	createSuperBirch ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; c
net/minecraft/data/worldgen/features/VegetationFeatures qp
	BAMBOO_NO_PODZOL a
	BAMBOO_SOME_PODZOL b
	BAMBOO_VEGETATION P
	BIRCH_TALL G
	DARK_FOREST_VEGETATION A
	FLOWER_CHERRY y
	FLOWER_DEFAULT t
	FLOWER_FLOWER_FOREST u
	FLOWER_MEADOW x
	FLOWER_PLAIN w
	FLOWER_SWAMP v
	FOREST_FLOWERS z
	MANGROVE_VEGETATION R
	MEADOW_TREES C
	MUSHROOM_ISLAND_VEGETATION Q
	PATCH_BERRY_BUSH h
	PATCH_BROWN_MUSHROOM d
	PATCH_CACTUS r
	PATCH_DEAD_BUSH m
	PATCH_GRASS j
	PATCH_GRASS_JUNGLE k
	PATCH_LARGE_FERN q
	PATCH_MELON n
	PATCH_PUMPKIN g
	PATCH_RED_MUSHROOM e
	PATCH_SUGAR_CANE s
	PATCH_SUNFLOWER f
	PATCH_TAIGA_GRASS i
	PATCH_TALL_GRASS p
	PATCH_WATERLILY o
	SINGLE_PIECE_OF_GRASS l
	TREES_BIRCH_AND_OAK J
	TREES_FLOWER_FOREST B
	TREES_GROVE E
	TREES_JUNGLE O
	TREES_OLD_GROWTH_PINE_TAIGA N
	TREES_OLD_GROWTH_SPRUCE_TAIGA M
	TREES_PLAINS K
	TREES_SAVANNA F
	TREES_SPARSE_JUNGLE L
	TREES_TAIGA D
	TREES_WATER I
	TREES_WINDSWEPT_HILLS H
	VINES c
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	grassPatch (Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; a
net/minecraft/data/worldgen/placement/AquaticPlacements qs
	KELP_COLD k
	KELP_WARM l
	SEAGRASS_COLD c
	SEAGRASS_DEEP g
	SEAGRASS_DEEP_COLD h
	SEAGRASS_DEEP_WARM f
	SEAGRASS_NORMAL b
	SEAGRASS_RIVER d
	SEAGRASS_SIMPLE i
	SEAGRASS_SWAMP e
	SEAGRASS_WARM a
	SEA_PICKLE j
	WARM_OCEAN_VEGETATION m
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	seagrassPlacement (I)Ljava/util/List; a
net/minecraft/data/worldgen/placement/CavePlacements qt
	AMETHYST_GEODE q
	CAVE_VINES k
	CLASSIC_VINES p
	DRIPSTONE_CLUSTER e
	FOSSIL_LOWER d
	FOSSIL_UPPER c
	GLOW_LICHEN i
	LARGE_DRIPSTONE f
	LUSH_CAVES_CEILING_VEGETATION n
	LUSH_CAVES_CLAY m
	LUSH_CAVES_VEGETATION l
	MONSTER_ROOM a
	MONSTER_ROOM_DEEP b
	POINTED_DRIPSTONE g
	ROOTED_AZALEA_TREE j
	SCULK_PATCH_ANCIENT_CITY s
	SCULK_PATCH_DEEP_DARK r
	SCULK_VEIN t
	SPORE_BLOSSOM o
	UNDERWATER_MAGMA h
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/placement/EndPlacements qu
	CHORUS_PLANT c
	END_GATEWAY_RETURN b
	END_ISLAND_DECORATED d
	END_SPIKE a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/placement/MiscOverworldPlacements qv
	BLUE_ICE f
	DESERT_WELL o
	DISK_CLAY i
	DISK_GRASS l
	DISK_GRAVEL j
	DISK_SAND k
	FOREST_ROCK c
	FREEZE_TOP_LAYER m
	ICEBERG_BLUE e
	ICEBERG_PACKED d
	ICE_PATCH b
	ICE_SPIKE a
	LAKE_LAVA_SURFACE h
	LAKE_LAVA_UNDERGROUND g
	SPRING_LAVA p
	SPRING_LAVA_FROZEN q
	SPRING_WATER r
	VOID_START_PLATFORM n
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/placement/NetherPlacements qw
	BASALT_BLOBS d
	BASALT_PILLAR n
	BLACKSTONE_BLOBS e
	CRIMSON_FOREST_VEGETATION h
	DELTA a
	GLOWSTONE g
	GLOWSTONE_EXTRA f
	LARGE_BASALT_COLUMNS c
	NETHER_SPROUTS j
	PATCH_CRIMSON_ROOTS m
	PATCH_FIRE t
	PATCH_SOUL_FIRE s
	SMALL_BASALT_COLUMNS b
	SPRING_CLOSED p
	SPRING_CLOSED_DOUBLE q
	SPRING_DELTA o
	SPRING_OPEN r
	TWISTING_VINES k
	WARPED_FOREST_VEGETATION i
	WEEPING_VINES l
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/placement/OrePlacements qx
	ORE_ANCIENT_DEBRIS_LARGE J
	ORE_ANCIENT_DEBRIS_SMALL K
	ORE_ANDESITE_LOWER p
	ORE_ANDESITE_UPPER o
	ORE_BLACKSTONE h
	ORE_CLAY N
	ORE_COAL_LOWER s
	ORE_COAL_UPPER r
	ORE_COPPER L
	ORE_COPPER_LARGE M
	ORE_DIAMOND B
	ORE_DIAMOND_BURIED E
	ORE_DIAMOND_LARGE D
	ORE_DIAMOND_MEDIUM C
	ORE_DIORITE_LOWER n
	ORE_DIORITE_UPPER m
	ORE_DIRT i
	ORE_EMERALD I
	ORE_GOLD x
	ORE_GOLD_DELTAS c
	ORE_GOLD_EXTRA w
	ORE_GOLD_LOWER y
	ORE_GOLD_NETHER e
	ORE_GRANITE_LOWER l
	ORE_GRANITE_UPPER k
	ORE_GRAVEL j
	ORE_GRAVEL_NETHER g
	ORE_INFESTED H
	ORE_IRON_MIDDLE u
	ORE_IRON_SMALL v
	ORE_IRON_UPPER t
	ORE_LAPIS F
	ORE_LAPIS_BURIED G
	ORE_MAGMA a
	ORE_QUARTZ_DELTAS d
	ORE_QUARTZ_NETHER f
	ORE_REDSTONE z
	ORE_REDSTONE_LOWER A
	ORE_SOUL_SAND b
	ORE_TUFF q
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	commonOrePlacement (ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; a
	orePlacement (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; a
	rareOrePlacement (ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; b
net/minecraft/data/worldgen/placement/PlacementUtils qy
	FULL_RANGE e
	HEIGHTMAP a
	HEIGHTMAP_OCEAN_FLOOR d
	HEIGHTMAP_TOP_SOLID b
	HEIGHTMAP_WORLD_SURFACE c
	RANGE_10_10 f
	RANGE_4_4 h
	RANGE_8_8 g
	RANGE_BOTTOM_TO_MAX_TERRAIN_HEIGHT i
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	countExtra (IFI)Lnet/minecraft/world/level/levelgen/placement/PlacementModifier; a
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	filtered (Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/core/Holder; a
	filteredByBlockSurvival (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/placement/BlockPredicateFilter; a
	inlinePlaced (Lnet/minecraft/core/Holder;[Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Lnet/minecraft/core/Holder; a
	inlinePlaced (Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;[Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Lnet/minecraft/core/Holder; a
	isEmpty ()Lnet/minecraft/world/level/levelgen/placement/PlacementFilter; a
	onlyWhenEmpty (Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/core/Holder; a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Holder;Ljava/util/List;)V a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Holder;[Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)V a
net/minecraft/data/worldgen/placement/TreePlacements qz
	ACACIA_CHECKED f
	BIRCH_BEES_0002_PLACED x
	BIRCH_BEES_002 y
	BIRCH_CHECKED e
	CHERRY_BEES_005 C
	CHERRY_CHECKED i
	CRIMSON_FUNGI a
	DARK_OAK_CHECKED d
	FANCY_OAK_BEES B
	FANCY_OAK_BEES_0002 z
	FANCY_OAK_BEES_002 A
	FANCY_OAK_CHECKED n
	JUNGLE_BUSH s
	JUNGLE_TREE_CHECKED m
	MANGROVE_CHECKED h
	MEGA_JUNGLE_TREE_CHECKED o
	MEGA_PINE_CHECKED q
	MEGA_SPRUCE_CHECKED p
	OAK_BEES_0002 v
	OAK_BEES_002 w
	OAK_CHECKED c
	PINE_CHECKED l
	PINE_ON_SNOW j
	SPRUCE_CHECKED g
	SPRUCE_ON_SNOW k
	SUPER_BIRCH_BEES u
	SUPER_BIRCH_BEES_0002 t
	TALL_MANGROVE_CHECKED r
	WARPED_FUNGI b
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/placement/VegetationPlacements ra
	BAMBOO b
	BAMBOO_LIGHT a
	BAMBOO_VEGETATION au
	BIRCH_TALL ak
	BROWN_MUSHROOM_NETHER F
	BROWN_MUSHROOM_NORMAL H
	BROWN_MUSHROOM_OLD_GROWTH L
	BROWN_MUSHROOM_SWAMP N
	BROWN_MUSHROOM_TAIGA J
	DARK_FOREST_VEGETATION X
	FLOWER_CHERRY V
	FLOWER_DEFAULT Q
	FLOWER_FLOWER_FOREST R
	FLOWER_FOREST_FLOWERS Y
	FLOWER_MEADOW U
	FLOWER_PLAINS T
	FLOWER_SWAMP S
	FLOWER_WARM P
	FOREST_FLOWERS Z
	GRASS_BONEMEAL n
	MUSHROOM_ISLAND_VEGETATION av
	PATCH_BERRY_COMMON t
	PATCH_BERRY_RARE u
	PATCH_CACTUS_DECORATED A
	PATCH_CACTUS_DESERT z
	PATCH_DEAD_BUSH p
	PATCH_DEAD_BUSH_2 o
	PATCH_DEAD_BUSH_BADLANDS q
	PATCH_GRASS_BADLANDS h
	PATCH_GRASS_FOREST g
	PATCH_GRASS_JUNGLE m
	PATCH_GRASS_NORMAL j
	PATCH_GRASS_PLAIN f
	PATCH_GRASS_SAVANNA i
	PATCH_GRASS_TAIGA l
	PATCH_GRASS_TAIGA_2 k
	PATCH_LARGE_FERN y
	PATCH_MELON r
	PATCH_MELON_SPARSE s
	PATCH_PUMPKIN e
	PATCH_SUGAR_CANE E
	PATCH_SUGAR_CANE_BADLANDS D
	PATCH_SUGAR_CANE_DESERT C
	PATCH_SUGAR_CANE_SWAMP B
	PATCH_SUNFLOWER d
	PATCH_TALL_GRASS x
	PATCH_TALL_GRASS_2 w
	PATCH_WATERLILY v
	RED_MUSHROOM_NETHER G
	RED_MUSHROOM_NORMAL I
	RED_MUSHROOM_OLD_GROWTH M
	RED_MUSHROOM_SWAMP O
	RED_MUSHROOM_TAIGA K
	TREES_BADLANDS af
	TREES_BIRCH al
	TREES_BIRCH_AND_OAK ap
	TREES_CHERRY ac
	TREES_FLOWER_FOREST aa
	TREES_GROVE ae
	TREES_JUNGLE at
	TREES_MANGROVE aw
	TREES_MEADOW ab
	TREES_OLD_GROWTH_PINE_TAIGA as
	TREES_OLD_GROWTH_SPRUCE_TAIGA ar
	TREES_PLAINS W
	TREES_SAVANNA aj
	TREES_SNOWY ag
	TREES_SPARSE_JUNGLE aq
	TREES_SWAMP ah
	TREES_TAIGA ad
	TREES_WATER ao
	TREES_WINDSWEPT_FOREST am
	TREES_WINDSWEPT_HILLS an
	TREES_WINDSWEPT_SAVANNA ai
	TREE_THRESHOLD ax
	VINES c
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	getMushroomPlacement (ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; a
	treePlacement (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; a
	treePlacement (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;Lnet/minecraft/world/level/block/Block;)Ljava/util/List; a
	treePlacementBase (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Lcom/google/common/collect/ImmutableList$Builder; b
	worldSurfaceSquaredWithCount (I)Ljava/util/List; a
net/minecraft/data/worldgen/placement/VillagePlacements rb
	ACACIA_VILLAGE g
	FLOWER_PLAIN_VILLAGE k
	OAK_VILLAGE f
	PATCH_BERRY_BUSH_VILLAGE m
	PATCH_CACTUS_VILLAGE j
	PATCH_TAIGA_GRASS_VILLAGE l
	PILE_HAY_VILLAGE a
	PILE_ICE_VILLAGE d
	PILE_MELON_VILLAGE b
	PILE_PUMPKIN_VILLAGE e
	PILE_SNOW_VILLAGE c
	PINE_VILLAGE i
	SPRUCE_VILLAGE h
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/gametest/framework/AfterBatch rd
	batch ()Ljava/lang/String; a
net/minecraft/gametest/framework/BeforeBatch re
	batch ()Ljava/lang/String; a
net/minecraft/gametest/framework/ExhaustedAttemptsException rf
net/minecraft/gametest/framework/GameTest rg
	attempts ()I g
	batch ()Ljava/lang/String; b
	required ()Z d
	requiredSuccesses ()I h
	rotationSteps ()I c
	setupTicks ()J f
	template ()Ljava/lang/String; e
	timeoutTicks ()I a
net/minecraft/gametest/framework/GameTestAssertException rh
net/minecraft/gametest/framework/GameTestAssertPosException ri
	absolutePos a
	relativePos b
	tick c
	getAbsolutePos ()Lnet/minecraft/core/BlockPos; c
	getMessageToShowAtBlock ()Ljava/lang/String; a
	getRelativePos ()Lnet/minecraft/core/BlockPos; b
net/minecraft/gametest/framework/GameTestBatch rj
	DEFAULT_BATCH_NAME a
	afterBatchFunction e
	beforeBatchFunction d
	name b
	testFunctions c
	getName ()Ljava/lang/String; a
	getTestFunctions ()Ljava/util/Collection; b
	runAfterBatchFunction (Lnet/minecraft/server/level/ServerLevel;)V b
	runBeforeBatchFunction (Lnet/minecraft/server/level/ServerLevel;)V a
net/minecraft/gametest/framework/GameTestBatchRunner rk
	LOGGER a
	allTestInfos f
	batches g
	count h
	firstTestNorthWestCorner b
	level c
	nextTestNorthWestCorner j
	rowBounds i
	testTicker d
	testsPerRow e
	createStructuresForBatch (Ljava/util/Collection;)Ljava/util/Map; a
	getTestInfos ()Ljava/util/List; a
	runBatch (I)V a
	start ()V b
net/minecraft/gametest/framework/GameTestEvent rl
	assertion b
	expectedDelay a
	create (JLjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestEvent; a
	create (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestEvent; a
net/minecraft/gametest/framework/GameTestGenerator rm
net/minecraft/gametest/framework/GameTestHelper rn
	finalCheckAdded b
	testInfo a
	absolutePos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; j
	absoluteVec (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	assertAtTickTimeContainerContains (JLnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/Item;)V a
	assertAtTickTimeContainerEmpty (JLnet/minecraft/core/BlockPos;)V a
	assertBlock (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/lang/String;)V a
	assertBlock (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V a
	assertBlockNotPresent (Lnet/minecraft/world/level/block/Block;III)V b
	assertBlockNotPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V b
	assertBlockPresent (Lnet/minecraft/world/level/block/Block;III)V a
	assertBlockPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	assertBlockProperty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)V a
	assertBlockProperty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;Ljava/lang/String;)V a
	assertBlockState (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V b
	assertContainerContains (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/Item;)V a
	assertContainerEmpty (Lnet/minecraft/core/BlockPos;)V g
	assertEntitiesPresent (Lnet/minecraft/world/entity/EntityType;I)V a
	assertEntitiesPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;ID)V a
	assertEntityData (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;Ljava/util/function/Function;Ljava/lang/Object;)V a
	assertEntityInstancePresent (Lnet/minecraft/world/entity/Entity;III)V a
	assertEntityInstancePresent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)V a
	assertEntityInventoryContains (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/item/Item;)V b
	assertEntityIsHolding (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/item/Item;)V a
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;)V b
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;III)V d
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V d
	assertEntityNotTouching (Lnet/minecraft/world/entity/EntityType;DDD)V b
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;)V a
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;III)V c
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V c
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;D)V a
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)V a
	assertEntityProperty (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/Object;)V a
	assertEntityProperty (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;Ljava/lang/String;)V a
	assertEntityTouching (Lnet/minecraft/world/entity/EntityType;DDD)V a
	assertFalse (ZLjava/lang/String;)V b
	assertItemEntityCountIs (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPos;DI)V a
	assertItemEntityNotPresent (Lnet/minecraft/world/item/Item;)V b
	assertItemEntityNotPresent (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPos;D)V b
	assertItemEntityPresent (Lnet/minecraft/world/item/Item;)V a
	assertItemEntityPresent (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPos;D)V a
	assertLivingEntityHasMobEffect (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/effect/MobEffect;I)V a
	assertRedstoneSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Ljava/util/function/IntPredicate;Ljava/util/function/Supplier;)V a
	assertSameBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)V a
	assertSameBlockStates (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/BlockPos;)V a
	assertTrue (ZLjava/lang/String;)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;)V f
	ensureSingleFinalCheck ()V l
	fail (Ljava/lang/String;)V a
	fail (Ljava/lang/String;Lnet/minecraft/core/BlockPos;)V a
	fail (Ljava/lang/String;Lnet/minecraft/world/entity/Entity;)V a
	failIf (Ljava/lang/Runnable;)V c
	failIfEver (Ljava/lang/Runnable;)V d
	forEveryBlockInStructure (Ljava/util/function/Consumer;)V a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; b
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getBounds ()Lnet/minecraft/world/phys/AABB; k
	getEntities (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;D)Ljava/util/List; b
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; a
	getRelativeBounds ()Lnet/minecraft/world/phys/AABB; m
	getTick ()J j
	killAllEntities ()V b
	killAllEntitiesOfClass (Ljava/lang/Class;)V a
	makeAboutToDrown (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	makeMockPlayer ()Lnet/minecraft/world/entity/player/Player; d
	makeMockServerPlayerInLevel ()Lnet/minecraft/server/level/ServerPlayer; e
	makeMockSurvivalPlayer ()Lnet/minecraft/world/entity/player/Player; c
	onEachTick (Ljava/lang/Runnable;)V e
	placeAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	pressButton (III)V a
	pressButton (Lnet/minecraft/core/BlockPos;)V c
	pullLever (III)V b
	pullLever (Lnet/minecraft/core/BlockPos;)V e
	pulseRedstone (Lnet/minecraft/core/BlockPos;J)V a
	randomTick (Lnet/minecraft/core/BlockPos;)V h
	relativePos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; k
	relativeVec (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; b
	runAfterDelay (JLjava/lang/Runnable;)V b
	runAtTickTime (JLjava/lang/Runnable;)V a
	setBiome (Lnet/minecraft/resources/ResourceKey;)V a
	setBlock (IIILnet/minecraft/world/level/block/Block;)V a
	setBlock (IIILnet/minecraft/world/level/block/state/BlockState;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setDayTime (I)V a
	setNight ()V f
	spawn (Lnet/minecraft/world/entity/EntityType;FFF)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;III)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/Entity; a
	spawnItem (Lnet/minecraft/world/item/Item;FFF)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnItem (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;FFF)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;III)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/Mob; b
	startSequence ()Lnet/minecraft/gametest/framework/GameTestSequence; i
	succeed ()V g
	succeedIf (Ljava/lang/Runnable;)V a
	succeedOnTickWhen (ILjava/lang/Runnable;)V a
	succeedWhen (Ljava/lang/Runnable;)V b
	succeedWhenBlockPresent (Lnet/minecraft/world/level/block/Block;III)V c
	succeedWhenBlockPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V c
	succeedWhenEntityData (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;Ljava/util/function/Function;Ljava/lang/Object;)V b
	succeedWhenEntityNotPresent (Lnet/minecraft/world/entity/EntityType;III)V f
	succeedWhenEntityNotPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V f
	succeedWhenEntityPresent (Lnet/minecraft/world/entity/EntityType;III)V e
	succeedWhenEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V e
	tickPrecipitation ()V h
	tickPrecipitation (Lnet/minecraft/core/BlockPos;)V i
	useBlock (Lnet/minecraft/core/BlockPos;)V d
	useBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	useBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/BlockHitResult;)V a
	walkTo (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;F)Lnet/minecraft/gametest/framework/GameTestSequence; a
	withLowHealth (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; b
net/minecraft/gametest/framework/GameTestInfo ro
	chunksLoaded k
	done p
	error r
	level c
	listeners d
	placedStructure j
	rerunUntilFailed n
	rotation q
	runAtTickTimeMap g
	sequences f
	startTick h
	started m
	structureBlockEntity s
	structureBlockPos b
	testFunction a
	tickCount l
	ticksToWaitForChunkLoading i
	timeoutTicks e
	timer o
	addListener (Lnet/minecraft/gametest/framework/GameTestListener;)V a
	clearStructure ()V p
	createSequence ()Lnet/minecraft/gametest/framework/GameTestSequence; r
	fail (Ljava/lang/Throwable;)V a
	finish ()V F
	getError ()Ljava/lang/Throwable; o
	getLevel ()Lnet/minecraft/server/level/ServerLevel; h
	getRotation ()Lnet/minecraft/world/level/block/Rotation; v
	getRunTime ()J m
	getStructureBlockEntity ()Lnet/minecraft/world/level/block/entity/StructureBlockEntity; E
	getStructureBlockPos ()Lnet/minecraft/core/BlockPos; d
	getStructureBounds ()Lnet/minecraft/world/phys/AABB; g
	getStructureName ()Ljava/lang/String; u
	getStructureOrigin ()Lnet/minecraft/core/BlockPos; e
	getStructureSize ()Lnet/minecraft/core/Vec3i; f
	getTestFunction ()Lnet/minecraft/gametest/framework/TestFunction; w
	getTestName ()Ljava/lang/String; c
	getTick ()J q
	getTimeoutTicks ()I x
	hasFailed ()Z j
	hasStarted ()Z k
	hasSucceeded ()Z i
	isDone ()Z l
	isFlaky ()Z y
	isOptional ()Z t
	isRequired ()Z s
	maxAttempts ()I z
	prepareTestStructure (Lnet/minecraft/core/BlockPos;)V b
	requiredSuccesses ()I A
	rerunUntilFailed ()Z B
	setRerunUntilFailed (Z)V a
	setRunAtTickTime (JLjava/lang/Runnable;)V a
	setStructureBlockPos (Lnet/minecraft/core/BlockPos;)V a
	startExecution ()V a
	startTest ()V D
	succeed ()V n
	tick ()V b
	tickInternal ()V C
net/minecraft/gametest/framework/GameTestListener rp
	testFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	testPassed (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	testStructureLoaded (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
net/minecraft/gametest/framework/GameTestRegistry rq
	AFTER_BATCH_FUNCTIONS d
	BEFORE_BATCH_FUNCTIONS c
	LAST_FAILED_TESTS e
	TEST_CLASS_NAMES b
	TEST_FUNCTIONS a
	findTestFunction (Ljava/lang/String;)Ljava/util/Optional; e
	forgetFailedTests ()V d
	getAfterBatchFunction (Ljava/lang/String;)Ljava/util/function/Consumer; d
	getAllTestClassNames ()Ljava/util/Collection; b
	getAllTestFunctions ()Ljava/util/Collection; a
	getBeforeBatchFunction (Ljava/lang/String;)Ljava/util/function/Consumer; c
	getLastFailedTests ()Ljava/util/Collection; c
	getTestFunction (Ljava/lang/String;)Lnet/minecraft/gametest/framework/TestFunction; f
	getTestFunctionsForClassName (Ljava/lang/String;)Ljava/util/Collection; a
	isTestClass (Ljava/lang/String;)Z b
	isTestFunctionPartOfClass (Lnet/minecraft/gametest/framework/TestFunction;Ljava/lang/String;)Z a
	register (Ljava/lang/Class;)V a
	register (Ljava/lang/reflect/Method;)V a
	registerBatchFunction (Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/Map;)V a
	rememberFailedTest (Lnet/minecraft/gametest/framework/TestFunction;)V a
	turnMethodIntoConsumer (Ljava/lang/reflect/Method;)Ljava/util/function/Consumer; d
	turnMethodIntoTestFunction (Ljava/lang/reflect/Method;)Lnet/minecraft/gametest/framework/TestFunction; c
	useTestGeneratorMethod (Ljava/lang/reflect/Method;)Ljava/util/Collection; b
net/minecraft/gametest/framework/GameTestRunner rr
	DEFAULT_TESTS_PER_ROW c
	MAX_TESTS_PER_BATCH d
	SPACE_BETWEEN_COLUMNS a
	SPACE_BETWEEN_ROWS b
	clearAllTests (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/GameTestTicker;I)V a
	clearMarkers (Lnet/minecraft/server/level/ServerLevel;)V a
	groupTestsIntoBatches (Ljava/util/Collection;)Ljava/util/Collection; a
	runTest (Lnet/minecraft/gametest/framework/GameTestInfo;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/GameTestTicker;)V a
	runTestBatches (Ljava/util/Collection;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/GameTestTicker;I)Ljava/util/Collection; a
	runTests (Ljava/util/Collection;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/GameTestTicker;I)Ljava/util/Collection; b
net/minecraft/gametest/framework/GameTestSequence rs
	events b
	lastTick c
	parent a
	executeWithoutFail (Ljava/lang/Runnable;)V c
	thenExecute (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; b
	thenExecuteAfter (ILjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenExecuteFor (ILjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; b
	thenFail (Ljava/util/function/Supplier;)V a
	thenIdle (I)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenSucceed ()V a
	thenTrigger ()Lnet/minecraft/gametest/framework/GameTestSequence$Condition; b
	thenWaitUntil (JLjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenWaitUntil (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	tick (J)V c
	tickAndContinue (J)V a
	tickAndFailIfNotComplete (J)V b
net/minecraft/gametest/framework/GameTestSequence$Condition rs$a
	NOT_TRIGGERED b
	triggerTime c
	assertTriggeredThisTick ()V a
	trigger (J)V a
net/minecraft/gametest/framework/GameTestServer rt
	LOGGER l
	NO_SERVICES o
	PROGRESS_REPORT_INTERVAL m
	TEST_GAME_RULES r
	TEST_POSITION_RANGE n
	WORLD_OPTIONS s
	spawnPos q
	testBatches p
	testTracker t
	create (Ljava/lang/Thread;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/server/packs/repository/PackRepository;Ljava/util/Collection;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/gametest/framework/GameTestServer; a
	fillServerSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; a
	getFunctionCompilationLevel ()I j
	getOperatorUserPermissionLevel ()I i
	getRateLimitPacketsPerSecond ()I m
	haveTestsStarted ()Z bk
	initServer ()Z e
	isCommandBlockEnabled ()Z o
	isDedicatedServer ()Z l
	isEpollEnabled ()Z n
	isHardcore ()Z h
	isPublished ()Z p
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	onServerExit ()V g
	shouldInformAdmins ()Z W_
	shouldRconBroadcast ()Z k
	startTests (Lnet/minecraft/server/level/ServerLevel;)V b
	tickServer (Ljava/util/function/BooleanSupplier;)V a
	waitUntilNextTick ()V w_
net/minecraft/gametest/framework/GameTestTicker ru
	SINGLETON a
	testInfos b
	add (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	clear ()V a
	tick ()V b
net/minecraft/gametest/framework/GameTestTimeoutException rv
net/minecraft/gametest/framework/GlobalTestReporter rw
	DELEGATE a
	finish ()V a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	replaceWith (Lnet/minecraft/gametest/framework/TestReporter;)V a
net/minecraft/gametest/framework/JUnitLikeTestReporter rx
	destination d
	document a
	stopwatch c
	testSuite b
	createTestCase (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)Lorg/w3c/dom/Element; a
	finish ()V a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	save (Ljava/io/File;)V a
net/minecraft/gametest/framework/LogTestReporter ry
	LOGGER a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
net/minecraft/gametest/framework/MultipleTestTracker rz
	FAILED_OPTIONAL_TEST_CHAR d
	FAILED_REQUIRED_TEST_CHAR e
	NOT_STARTED_TEST_CHAR a
	ONGOING_TEST_CHAR b
	SUCCESSFUL_TEST_CHAR c
	listeners g
	tests f
	addFailureListener (Ljava/util/function/Consumer;)V a
	addListener (Lnet/minecraft/gametest/framework/GameTestListener;)V a
	addTestToTrack (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	getDoneCount ()I c
	getFailedOptional ()Ljava/util/Collection; g
	getFailedOptionalCount ()I b
	getFailedRequired ()Ljava/util/Collection; f
	getFailedRequiredCount ()I a
	getProgressBar ()Ljava/lang/String; j
	getTotalCount ()I h
	hasFailedOptional ()Z e
	hasFailedRequired ()Z d
	isDone ()Z i
net/minecraft/gametest/framework/ReportGameListener sa
	attempts a
	originalTestInfo c
	structurePos e
	successes b
	testTicker d
	createBook (Ljava/lang/String;ZLjava/lang/String;)Lnet/minecraft/world/item/ItemStack; a
	reportFailure (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/Throwable;)V a
	reportPassed (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)V a
	rerunTest ()V a
	say (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/ChatFormatting;Ljava/lang/String;)V a
	showRedBox (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/lang/String;)V a
	spawnBeacon (Lnet/minecraft/gametest/framework/GameTestInfo;Lnet/minecraft/world/level/block/Block;)V a
	spawnLectern (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)V c
	testFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	testPassed (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	testStructureLoaded (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	visualizeFailedTest (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/Throwable;)V b
	visualizePassedTest (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)V b
net/minecraft/gametest/framework/StructureUtils sb
	DEFAULT_TEST_STRUCTURES_DIR a
	LOGGER c
	testStructuresDir b
	addCommandBlockAndButtonToStartTest (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;)V a
	clearBlock (ILnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)V a
	clearSpaceForStructure (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/server/level/ServerLevel;)V a
	createNewEmptyStructureBlock (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Vec3i;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;)V a
	createStructureBlock (Lnet/minecraft/gametest/framework/GameTestInfo;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/block/entity/StructureBlockEntity; b
	doesStructureContain (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
	findNearestStructureBlock (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/core/BlockPos; b
	findStructureBlockContainingPos (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Ljava/util/Optional; a
	findStructureBlocks (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Ljava/util/Collection; c
	forceLoadChunks (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/server/level/ServerLevel;)V b
	getRotationForRotationSteps (I)Lnet/minecraft/world/level/block/Rotation; a
	getRotationStepsForRotation (Lnet/minecraft/world/level/block/Rotation;)I a
	getStructureBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Vec3i;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	getStructureBoundingBox (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	getStructureBounds (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Lnet/minecraft/world/phys/AABB; a
	getStructureOrigin (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Lnet/minecraft/core/BlockPos; c
	getTransformedFarCorner (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Vec3i;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	prepareTestStructure (Lnet/minecraft/gametest/framework/GameTestInfo;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/block/entity/StructureBlockEntity; a
net/minecraft/gametest/framework/TestClassNameArgument sc
	EXAMPLES a
	getTestClassName (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
	testClassName ()Lnet/minecraft/gametest/framework/TestClassNameArgument; a
net/minecraft/gametest/framework/TestCommand sd
	DEFAULT_CLEAR_RADIUS b
	DEFAULT_X_SIZE h
	DEFAULT_Y_SIZE i
	DEFAULT_Z_SIZE j
	LOGGER a
	MAX_CLEAR_RADIUS c
	SHOW_POS_DURATION_MS g
	STRUCTURE_BLOCK_FULL_SEARCH_RADIUS e
	STRUCTURE_BLOCK_NEARBY_SEARCH_RADIUS d
	TEST_POS_Z_OFFSET_FROM_PLAYER f
	clearAllTests (Lnet/minecraft/commands/CommandSourceStack;I)I a
	createNewStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;III)I a
	createTestPositionAround (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/core/BlockPos; b
	exportAllNearbyTests (Lnet/minecraft/commands/CommandSourceStack;)I d
	exportNearestTestStructure (Lnet/minecraft/commands/CommandSourceStack;)I c
	exportTestStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I c
	importTestStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I d
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	resetNearbyTest (Lnet/minecraft/commands/CommandSourceStack;)I a
	runAllNearbyTests (Lnet/minecraft/commands/CommandSourceStack;Z)I b
	runAllTests (Lnet/minecraft/commands/CommandSourceStack;II)I a
	runAllTestsInClass (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;II)I a
	runLastFailedTests (Lnet/minecraft/commands/CommandSourceStack;ZII)I a
	runNearbyTest (Lnet/minecraft/commands/CommandSourceStack;Z)I a
	runTest (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/gametest/framework/TestFunction;I)I a
	runTest (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/MultipleTestTracker;Z)V a
	runTestPreparation (Lnet/minecraft/gametest/framework/TestFunction;Lnet/minecraft/server/level/ServerLevel;)V a
	runTests (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;II)V a
	saveAndExportTestStructure (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)I a
	say (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)V b
	say (Lnet/minecraft/server/level/ServerLevel;Ljava/lang/String;Lnet/minecraft/ChatFormatting;)V a
	showPos (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	showTestSummaryIfAllDone (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/MultipleTestTracker;)V a
	verifyStructureExists (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/GameTestInfo;)Z a
net/minecraft/gametest/framework/TestCommand$TestSummaryDisplayer sd$a
	level a
	tracker b
	testFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	testPassed (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	testStructureLoaded (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
net/minecraft/gametest/framework/TestFunction se
	batchName a
	function g
	maxAttempts e
	maxTicks h
	required d
	requiredSuccesses f
	rotation j
	setupTicks i
	structureName c
	testName b
	getBatchName ()Ljava/lang/String; e
	getMaxAttempts ()I i
	getMaxTicks ()I c
	getRequiredSuccesses ()I j
	getRotation ()Lnet/minecraft/world/level/block/Rotation; g
	getSetupTicks ()J f
	getStructureName ()Ljava/lang/String; b
	getTestName ()Ljava/lang/String; a
	isFlaky ()Z h
	isRequired ()Z d
	run (Lnet/minecraft/gametest/framework/GameTestHelper;)V a
net/minecraft/gametest/framework/TestFunctionArgument sf
	EXAMPLES a
	getTestFunction (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/gametest/framework/TestFunction; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/gametest/framework/TestFunction; a
	testFunctionArgument ()Lnet/minecraft/gametest/framework/TestFunctionArgument; a
net/minecraft/gametest/framework/TestReporter sg
	finish ()V a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
net/minecraft/locale/Language si
	DEFAULT a
	GSON c
	LOGGER b
	UNSUPPORTED_FORMAT_PATTERN d
	instance e
	getInstance ()Lnet/minecraft/locale/Language; a
	getOrDefault (Ljava/lang/String;)Ljava/lang/String; a
	getOrDefault (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	getVisualOrder (Ljava/util/List;)Ljava/util/List; a
	getVisualOrder (Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/util/FormattedCharSequence; a
	has (Ljava/lang/String;)Z b
	inject (Lnet/minecraft/locale/Language;)V a
	isDefaultRightToLeft ()Z b
	loadDefault ()Lnet/minecraft/locale/Language; c
	loadFromJson (Ljava/io/InputStream;Ljava/util/function/BiConsumer;)V a
	parseTranslations (Ljava/util/function/BiConsumer;Ljava/lang/String;)V a
net/minecraft/nbt/ByteArrayTag sk
	SELF_SIZE_IN_BYTES b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	add (ILnet/minecraft/nbt/ByteTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/Tag; d
	get (I)Lnet/minecraft/nbt/ByteTag; a
	getAsByteArray ()[B e
	getElementType ()B f
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	remove (I)Lnet/minecraft/nbt/ByteTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/ByteTag;)Lnet/minecraft/nbt/ByteTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	sizeInBytes ()I a
	toArray (Ljava/util/List;)[B a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ByteTag sl
	ONE c
	SELF_SIZE_IN_BYTES w
	TYPE a
	ZERO b
	data x
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/ByteTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	getAsByte ()B i
	getAsDouble ()D j
	getAsFloat ()F k
	getAsInt ()I g
	getAsLong ()J f
	getAsNumber ()Ljava/lang/Number; l
	getAsShort ()S h
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	sizeInBytes ()I a
	valueOf (B)Lnet/minecraft/nbt/ByteTag; a
	valueOf (Z)Lnet/minecraft/nbt/ByteTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ByteTag$Cache sl$a
	cache a
net/minecraft/nbt/CollectionTag sm
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	getElementType ()B f
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
net/minecraft/nbt/CompoundTag sn
	CODEC a
	MAP_ENTRY_SIZE_IN_BYTES w
	SELF_SIZE_IN_BYTES c
	TYPE b
	tags x
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	contains (Ljava/lang/String;)Z e
	contains (Ljava/lang/String;I)Z b
	copy ()Lnet/minecraft/nbt/CompoundTag; h
	copy ()Lnet/minecraft/nbt/Tag; d
	createReport (Ljava/lang/String;Lnet/minecraft/nbt/TagType;Ljava/lang/ClassCastException;)Lnet/minecraft/CrashReport; a
	entries ()Ljava/util/Map; i
	get (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; c
	getAllKeys ()Ljava/util/Set; e
	getBoolean (Ljava/lang/String;)Z q
	getByte (Ljava/lang/String;)B f
	getByteArray (Ljava/lang/String;)[B m
	getCompound (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; p
	getDouble (Ljava/lang/String;)D k
	getFloat (Ljava/lang/String;)F j
	getId ()B b
	getInt (Ljava/lang/String;)I h
	getIntArray (Ljava/lang/String;)[I n
	getList (Ljava/lang/String;I)Lnet/minecraft/nbt/ListTag; c
	getLong (Ljava/lang/String;)J i
	getLongArray (Ljava/lang/String;)[J o
	getShort (Ljava/lang/String;)S g
	getString (Ljava/lang/String;)Ljava/lang/String; l
	getTagType (Ljava/lang/String;)B d
	getType ()Lnet/minecraft/nbt/TagType; c
	getUUID (Ljava/lang/String;)Ljava/util/UUID; a
	hasUUID (Ljava/lang/String;)Z b
	isEmpty ()Z g
	merge (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	put (Ljava/lang/String;Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; a
	putBoolean (Ljava/lang/String;Z)V a
	putByte (Ljava/lang/String;B)V a
	putByteArray (Ljava/lang/String;Ljava/util/List;)V a
	putByteArray (Ljava/lang/String;[B)V a
	putDouble (Ljava/lang/String;D)V a
	putFloat (Ljava/lang/String;F)V a
	putInt (Ljava/lang/String;I)V a
	putIntArray (Ljava/lang/String;Ljava/util/List;)V b
	putIntArray (Ljava/lang/String;[I)V a
	putLong (Ljava/lang/String;J)V a
	putLongArray (Ljava/lang/String;Ljava/util/List;)V c
	putLongArray (Ljava/lang/String;[J)V a
	putShort (Ljava/lang/String;S)V a
	putString (Ljava/lang/String;Ljava/lang/String;)V a
	putUUID (Ljava/lang/String;Ljava/util/UUID;)V a
	readNamedTagData (Lnet/minecraft/nbt/TagType;Ljava/lang/String;Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; a
	remove (Ljava/lang/String;)V r
	size ()I f
	sizeInBytes ()I a
	write (Ljava/io/DataOutput;)V a
	writeNamedTag (Ljava/lang/String;Lnet/minecraft/nbt/Tag;Ljava/io/DataOutput;)V a
net/minecraft/nbt/DoubleTag so
	SELF_SIZE_IN_BYTES c
	TYPE b
	ZERO a
	data w
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/DoubleTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	getAsByte ()B i
	getAsDouble ()D j
	getAsFloat ()F k
	getAsInt ()I g
	getAsLong ()J f
	getAsNumber ()Ljava/lang/Number; l
	getAsShort ()S h
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	sizeInBytes ()I a
	valueOf (D)Lnet/minecraft/nbt/DoubleTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/EndTag sp
	INSTANCE b
	SELF_SIZE_IN_BYTES c
	TYPE a
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/EndTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	sizeInBytes ()I a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/FloatTag sq
	SELF_SIZE_IN_BYTES c
	TYPE b
	ZERO a
	data w
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/FloatTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	getAsByte ()B i
	getAsDouble ()D j
	getAsFloat ()F k
	getAsInt ()I g
	getAsLong ()J f
	getAsNumber ()Ljava/lang/Number; l
	getAsShort ()S h
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	sizeInBytes ()I a
	valueOf (F)Lnet/minecraft/nbt/FloatTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntArrayTag sr
	SELF_SIZE_IN_BYTES b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	add (ILnet/minecraft/nbt/IntTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/IntArrayTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	get (I)Lnet/minecraft/nbt/IntTag; a
	getAsIntArray ()[I g
	getElementType ()B f
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	remove (I)Lnet/minecraft/nbt/IntTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/IntTag;)Lnet/minecraft/nbt/IntTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	sizeInBytes ()I a
	toArray (Ljava/util/List;)[I a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntTag ss
	SELF_SIZE_IN_BYTES b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/IntTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	getAsByte ()B i
	getAsDouble ()D j
	getAsFloat ()F k
	getAsInt ()I g
	getAsLong ()J f
	getAsNumber ()Ljava/lang/Number; l
	getAsShort ()S h
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	sizeInBytes ()I a
	valueOf (I)Lnet/minecraft/nbt/IntTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntTag$Cache ss$a
	HIGH b
	LOW c
	cache a
net/minecraft/nbt/ListTag st
	SELF_SIZE_IN_BYTES b
	TYPE a
	list c
	type w
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/ListTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	get (I)Lnet/minecraft/nbt/Tag; k
	getCompound (I)Lnet/minecraft/nbt/CompoundTag; a
	getDouble (I)D h
	getElementType ()B f
	getFloat (I)F i
	getId ()B b
	getInt (I)I e
	getIntArray (I)[I f
	getList (I)Lnet/minecraft/nbt/ListTag; b
	getLongArray (I)[J g
	getShort (I)S d
	getString (I)Ljava/lang/String; j
	getType ()Lnet/minecraft/nbt/TagType; c
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	sizeInBytes ()I a
	updateType (Lnet/minecraft/nbt/Tag;)Z a
	updateTypeAfterRemove ()V g
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongArrayTag su
	SELF_SIZE_IN_BYTES b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	add (ILnet/minecraft/nbt/LongTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/LongArrayTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	get (I)Lnet/minecraft/nbt/LongTag; a
	getAsLongArray ()[J g
	getElementType ()B f
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	remove (I)Lnet/minecraft/nbt/LongTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/LongTag;)Lnet/minecraft/nbt/LongTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	sizeInBytes ()I a
	toArray (Ljava/util/List;)[J a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongTag sv
	SELF_SIZE_IN_BYTES b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/LongTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	getAsByte ()B i
	getAsDouble ()D j
	getAsFloat ()F k
	getAsInt ()I g
	getAsLong ()J f
	getAsNumber ()Ljava/lang/Number; l
	getAsShort ()S h
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	sizeInBytes ()I a
	valueOf (J)Lnet/minecraft/nbt/LongTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongTag$Cache sv$a
	HIGH b
	LOW c
	cache a
net/minecraft/nbt/NbtAccounter sw
	MAX_STACK_DEPTH a
	depth e
	maxDepth d
	quota b
	usage c
	accountBytes (J)V b
	accountBytes (JJ)V a
	create (J)Lnet/minecraft/nbt/NbtAccounter; a
	getDepth ()I e
	getUsage ()J d
	popDepth ()V c
	pushDepth ()V b
	unlimitedHeap ()Lnet/minecraft/nbt/NbtAccounter; a
net/minecraft/nbt/NbtAccounterException sx
net/minecraft/nbt/NbtException sy
net/minecraft/nbt/NbtFormatException sz
net/minecraft/nbt/NbtIo ta
	SYNC_OUTPUT_OPTIONS a
	createCompressorStream (Ljava/io/OutputStream;)Ljava/io/DataOutputStream; a
	createDecompressorStream (Ljava/io/InputStream;)Ljava/io/DataInputStream; a
	parse (Ljava/io/DataInput;Lnet/minecraft/nbt/StreamTagVisitor;Lnet/minecraft/nbt/NbtAccounter;)V a
	parseCompressed (Ljava/io/InputStream;Lnet/minecraft/nbt/StreamTagVisitor;Lnet/minecraft/nbt/NbtAccounter;)V a
	parseCompressed (Ljava/nio/file/Path;Lnet/minecraft/nbt/StreamTagVisitor;Lnet/minecraft/nbt/NbtAccounter;)V a
	read (Ljava/io/DataInput;)Lnet/minecraft/nbt/CompoundTag; a
	read (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/CompoundTag; a
	read (Ljava/nio/file/Path;)Lnet/minecraft/nbt/CompoundTag; a
	readAnyTag (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; b
	readCompressed (Ljava/io/InputStream;Lnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/CompoundTag; a
	readCompressed (Ljava/nio/file/Path;Lnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/CompoundTag; a
	readTagSafe (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;B)Lnet/minecraft/nbt/Tag; a
	readUnnamedTag (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; c
	write (Lnet/minecraft/nbt/CompoundTag;Ljava/io/DataOutput;)V a
	write (Lnet/minecraft/nbt/CompoundTag;Ljava/nio/file/Path;)V b
	writeAnyTag (Lnet/minecraft/nbt/Tag;Ljava/io/DataOutput;)V a
	writeCompressed (Lnet/minecraft/nbt/CompoundTag;Ljava/io/OutputStream;)V a
	writeCompressed (Lnet/minecraft/nbt/CompoundTag;Ljava/nio/file/Path;)V a
	writeUnnamedTag (Lnet/minecraft/nbt/Tag;Ljava/io/DataOutput;)V b
	writeUnnamedTagWithFallback (Lnet/minecraft/nbt/Tag;Ljava/io/DataOutput;)V c
net/minecraft/nbt/NbtIo$StringFallbackDataOutput ta$a
net/minecraft/nbt/NbtOps tb
	INSTANCE a
	WRAPPER_MARKER b
	convertTo (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/nbt/Tag;)Ljava/lang/Object; a
	createBoolean (Z)Lnet/minecraft/nbt/Tag; a
	createByte (B)Lnet/minecraft/nbt/Tag; a
	createByteList (Ljava/nio/ByteBuffer;)Lnet/minecraft/nbt/Tag; a
	createCollector (Lnet/minecraft/nbt/Tag;)Ljava/util/Optional; k
	createDouble (D)Lnet/minecraft/nbt/Tag; a
	createFloat (F)Lnet/minecraft/nbt/Tag; a
	createInt (I)Lnet/minecraft/nbt/Tag; a
	createIntList (Ljava/util/stream/IntStream;)Lnet/minecraft/nbt/Tag; a
	createList (Ljava/util/stream/Stream;)Lnet/minecraft/nbt/Tag; b
	createLong (J)Lnet/minecraft/nbt/Tag; a
	createLongList (Ljava/util/stream/LongStream;)Lnet/minecraft/nbt/Tag; a
	createMap (Ljava/util/stream/Stream;)Lnet/minecraft/nbt/Tag; a
	createNumeric (Ljava/lang/Number;)Lnet/minecraft/nbt/Tag; a
	createShort (S)Lnet/minecraft/nbt/Tag; a
	createString (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	empty ()Lnet/minecraft/nbt/Tag; a
	getByteBuffer (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; h
	getIntStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; i
	getList (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; g
	getLongStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; j
	getMap (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; e
	getMapEntries (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; d
	getMapValues (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; c
	getNumberValue (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	getStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; f
	getStringValue (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; b
	mergeToList (Lnet/minecraft/nbt/Tag;Ljava/util/List;)Lcom/mojang/serialization/DataResult; a
	mergeToList (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	mergeToMap (Lnet/minecraft/nbt/Tag;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; a
	mergeToMap (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	remove (Lnet/minecraft/nbt/Tag;Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	tryUnwrap (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/Tag; a
net/minecraft/nbt/NbtOps$ByteListCollector tb$a
	values a
	accept (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/NbtOps$ListCollector; a
	result ()Lnet/minecraft/nbt/Tag; a
net/minecraft/nbt/NbtOps$HeterogenousListCollector tb$b
	result a
	accept (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/NbtOps$ListCollector; a
	isWrapper (Lnet/minecraft/nbt/CompoundTag;)Z a
	result ()Lnet/minecraft/nbt/Tag; a
	wrapElement (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/CompoundTag; c
	wrapIfNeeded (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; b
net/minecraft/nbt/NbtOps$HomogenousListCollector tb$c
	result a
	accept (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/NbtOps$ListCollector; a
	result ()Lnet/minecraft/nbt/Tag; a
net/minecraft/nbt/NbtOps$InitialListCollector tb$d
	INSTANCE a
	accept (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/NbtOps$ListCollector; a
	result ()Lnet/minecraft/nbt/Tag; a
net/minecraft/nbt/NbtOps$IntListCollector tb$e
	values a
	accept (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/NbtOps$ListCollector; a
	result ()Lnet/minecraft/nbt/Tag; a
net/minecraft/nbt/NbtOps$ListCollector tb$f
	accept (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/NbtOps$ListCollector; a
	acceptAll (Ljava/lang/Iterable;)Lnet/minecraft/nbt/NbtOps$ListCollector; a
	acceptAll (Ljava/util/stream/Stream;)Lnet/minecraft/nbt/NbtOps$ListCollector; a
	result ()Lnet/minecraft/nbt/Tag; a
net/minecraft/nbt/NbtOps$LongListCollector tb$g
	values a
	accept (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/NbtOps$ListCollector; a
	result ()Lnet/minecraft/nbt/Tag; a
net/minecraft/nbt/NbtOps$NbtRecordBuilder tb$h
	append (Ljava/lang/String;Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	build (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	initBuilder ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/nbt/NbtUtils tc
	COLON_SPLITTER i
	COMMA_SPLITTER h
	ELEMENT_SEPARATOR f
	INDENT k
	KEY_VALUE_SEPARATOR g
	LOGGER j
	NOT_FOUND l
	PROPERTIES_END e
	PROPERTIES_START d
	SNBT_DATA_TAG a
	YXZ_LISTTAG_DOUBLE_COMPARATOR c
	YXZ_LISTTAG_INT_COMPARATOR b
	addCurrentDataVersion (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; g
	addDataVersion (Lnet/minecraft/nbt/CompoundTag;I)Lnet/minecraft/nbt/CompoundTag; a
	compareNbt (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;Z)Z a
	createUUID (Ljava/util/UUID;)Lnet/minecraft/nbt/IntArrayTag; a
	getDataVersion (Lnet/minecraft/nbt/CompoundTag;I)I b
	getName (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/String; a
	indent (ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder; a
	loadUUID (Lnet/minecraft/nbt/Tag;)Ljava/util/UUID; a
	packBlockState (Lnet/minecraft/nbt/CompoundTag;)Ljava/lang/String; f
	packStructureTemplate (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; d
	prettyPrint (Ljava/lang/StringBuilder;Lnet/minecraft/nbt/Tag;IZ)Ljava/lang/StringBuilder; a
	prettyPrint (Lnet/minecraft/nbt/Tag;)Ljava/lang/String; b
	prettyPrint (Lnet/minecraft/nbt/Tag;Z)Ljava/lang/String; a
	readBlockPos (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/core/BlockPos; b
	readBlockState (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/state/BlockState; a
	readGameProfile (Lnet/minecraft/nbt/CompoundTag;)Lcom/mojang/authlib/GameProfile; a
	setValueHelper (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/state/StateHolder; a
	snbtToStructure (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	structureToSnbt (Lnet/minecraft/nbt/CompoundTag;)Ljava/lang/String; c
	toPrettyComponent (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; c
	unpackBlockState (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; b
	unpackStructureTemplate (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; e
	writeBlockPos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; a
	writeBlockState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/nbt/CompoundTag; a
	writeFluidState (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/nbt/CompoundTag; a
	writeGameProfile (Lnet/minecraft/nbt/CompoundTag;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/nbt/NumericTag td
	getAsByte ()B i
	getAsDouble ()D j
	getAsFloat ()F k
	getAsInt ()I g
	getAsLong ()J f
	getAsNumber ()Ljava/lang/Number; l
	getAsShort ()S h
net/minecraft/nbt/ReportedNbtException te
net/minecraft/nbt/ShortTag tf
	SELF_SIZE_IN_BYTES b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/ShortTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	getAsByte ()B i
	getAsDouble ()D j
	getAsFloat ()F k
	getAsInt ()I g
	getAsLong ()J f
	getAsNumber ()Ljava/lang/Number; l
	getAsShort ()S h
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	sizeInBytes ()I a
	valueOf (S)Lnet/minecraft/nbt/ShortTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ShortTag$Cache tf$a
	HIGH b
	LOW c
	cache a
net/minecraft/nbt/SnbtPrinterTagVisitor tg
	ELEMENT_SEPARATOR e
	ELEMENT_SPACING i
	KEY_ORDER a
	LIST_CLOSE g
	LIST_OPEN f
	LIST_TYPE_SEPARATOR h
	NAME_VALUE_SEPARATOR d
	NEWLINE l
	NO_INDENTATION b
	SIMPLE_VALUE c
	STRUCT_CLOSE k
	STRUCT_OPEN j
	depth n
	indentation m
	path o
	result p
	getKeys (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; b
	handleEscapePretty (Ljava/lang/String;)Ljava/lang/String; a
	pathString ()Ljava/lang/String; a
	popPath ()V b
	pushPath (Ljava/lang/String;)V b
	visit (Lnet/minecraft/nbt/Tag;)Ljava/lang/String; a
	visitByte (Lnet/minecraft/nbt/ByteTag;)V a
	visitByteArray (Lnet/minecraft/nbt/ByteArrayTag;)V a
	visitCompound (Lnet/minecraft/nbt/CompoundTag;)V a
	visitDouble (Lnet/minecraft/nbt/DoubleTag;)V a
	visitEnd (Lnet/minecraft/nbt/EndTag;)V a
	visitFloat (Lnet/minecraft/nbt/FloatTag;)V a
	visitInt (Lnet/minecraft/nbt/IntTag;)V a
	visitIntArray (Lnet/minecraft/nbt/IntArrayTag;)V a
	visitList (Lnet/minecraft/nbt/ListTag;)V a
	visitLong (Lnet/minecraft/nbt/LongTag;)V a
	visitLongArray (Lnet/minecraft/nbt/LongArrayTag;)V a
	visitShort (Lnet/minecraft/nbt/ShortTag;)V a
	visitString (Lnet/minecraft/nbt/StringTag;)V a
net/minecraft/nbt/StreamTagVisitor th
	visit (B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (D)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (F)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (S)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitContainerEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
	visitElement (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; b
	visitEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitList (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitRootEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
net/minecraft/nbt/StreamTagVisitor$EntryResult th$a
	$VALUES e
	BREAK c
	ENTER a
	HALT d
	SKIP b
	$values ()[Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
net/minecraft/nbt/StreamTagVisitor$ValueResult th$b
	$VALUES d
	BREAK b
	CONTINUE a
	HALT c
	$values ()[Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
net/minecraft/nbt/StringTag ti
	DOUBLE_QUOTE w
	EMPTY c
	ESCAPE y
	NOT_SET z
	SELF_SIZE_IN_BYTES b
	SINGLE_QUOTE x
	TYPE a
	data A
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/StringTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	getAsString ()Ljava/lang/String; t_
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	quoteAndEscape (Ljava/lang/String;)Ljava/lang/String; b
	sizeInBytes ()I a
	skipString (Ljava/io/DataInput;)V a
	valueOf (Ljava/lang/String;)Lnet/minecraft/nbt/StringTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/StringTagVisitor tj
	SIMPLE_VALUE a
	builder b
	handleEscape (Ljava/lang/String;)Ljava/lang/String; a
	visit (Lnet/minecraft/nbt/Tag;)Ljava/lang/String; a
	visitByte (Lnet/minecraft/nbt/ByteTag;)V a
	visitByteArray (Lnet/minecraft/nbt/ByteArrayTag;)V a
	visitCompound (Lnet/minecraft/nbt/CompoundTag;)V a
	visitDouble (Lnet/minecraft/nbt/DoubleTag;)V a
	visitEnd (Lnet/minecraft/nbt/EndTag;)V a
	visitFloat (Lnet/minecraft/nbt/FloatTag;)V a
	visitInt (Lnet/minecraft/nbt/IntTag;)V a
	visitIntArray (Lnet/minecraft/nbt/IntArrayTag;)V a
	visitList (Lnet/minecraft/nbt/ListTag;)V a
	visitLong (Lnet/minecraft/nbt/LongTag;)V a
	visitLongArray (Lnet/minecraft/nbt/LongArrayTag;)V a
	visitShort (Lnet/minecraft/nbt/ShortTag;)V a
	visitString (Lnet/minecraft/nbt/StringTag;)V a
net/minecraft/nbt/Tag tk
	ARRAY_HEADER e
	MAX_DEPTH v
	OBJECT_HEADER d
	OBJECT_REFERENCE f
	STRING_SIZE g
	TAG_ANY_NUMERIC u
	TAG_BYTE i
	TAG_BYTE_ARRAY o
	TAG_COMPOUND r
	TAG_DOUBLE n
	TAG_END h
	TAG_FLOAT m
	TAG_INT k
	TAG_INT_ARRAY s
	TAG_LIST q
	TAG_LONG l
	TAG_LONG_ARRAY t
	TAG_SHORT j
	TAG_STRING p
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	acceptAsRoot (Lnet/minecraft/nbt/StreamTagVisitor;)V b
	copy ()Lnet/minecraft/nbt/Tag; d
	getAsString ()Ljava/lang/String; t_
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	sizeInBytes ()I a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/TagParser tl
	AS_CODEC i
	BYTE_PATTERN q
	DOUBLE_PATTERN o
	DOUBLE_PATTERN_NOSUFFIX n
	ELEMENT_SEPARATOR g
	ERROR_EXPECTED_KEY b
	ERROR_EXPECTED_VALUE c
	ERROR_INSERT_MIXED_ARRAY e
	ERROR_INSERT_MIXED_LIST d
	ERROR_INVALID_ARRAY f
	ERROR_TRAILING_DATA a
	FLOAT_PATTERN p
	INT_PATTERN t
	LIST_CLOSE k
	LIST_OPEN j
	LONG_PATTERN r
	NAME_VALUE_SEPARATOR h
	SHORT_PATTERN s
	STRUCT_CLOSE l
	STRUCT_OPEN m
	reader u
	expect (C)V a
	hasElementSeparator ()Z i
	parseTag (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	readArray (Lnet/minecraft/nbt/TagType;Lnet/minecraft/nbt/TagType;)Ljava/util/List; a
	readArrayTag ()Lnet/minecraft/nbt/Tag; h
	readKey ()Ljava/lang/String; b
	readList ()Lnet/minecraft/nbt/Tag; e
	readListTag ()Lnet/minecraft/nbt/Tag; g
	readSingleStruct ()Lnet/minecraft/nbt/CompoundTag; a
	readStruct ()Lnet/minecraft/nbt/CompoundTag; f
	readTypedValue ()Lnet/minecraft/nbt/Tag; c
	readValue ()Lnet/minecraft/nbt/Tag; d
	type (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; b
net/minecraft/nbt/TagType tm
	createInvalid (I)Lnet/minecraft/nbt/TagType; a
	getName ()Ljava/lang/String; a
	getPrettyName ()Ljava/lang/String; b
	isValue ()Z d
	load (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; c
	parse (Ljava/io/DataInput;Lnet/minecraft/nbt/StreamTagVisitor;Lnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	parseRoot (Ljava/io/DataInput;Lnet/minecraft/nbt/StreamTagVisitor;Lnet/minecraft/nbt/NbtAccounter;)V b
	skip (Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)V a
	skip (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)V b
net/minecraft/nbt/TagType$StaticSize tm$a
	size ()I c
	skip (Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)V a
	skip (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)V b
net/minecraft/nbt/TagType$VariableSize tm$b
	skip (Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)V a
net/minecraft/nbt/TagTypes tn
	TYPES a
	getType (I)Lnet/minecraft/nbt/TagType; a
net/minecraft/nbt/TagVisitor to
	visitByte (Lnet/minecraft/nbt/ByteTag;)V a
	visitByteArray (Lnet/minecraft/nbt/ByteArrayTag;)V a
	visitCompound (Lnet/minecraft/nbt/CompoundTag;)V a
	visitDouble (Lnet/minecraft/nbt/DoubleTag;)V a
	visitEnd (Lnet/minecraft/nbt/EndTag;)V a
	visitFloat (Lnet/minecraft/nbt/FloatTag;)V a
	visitInt (Lnet/minecraft/nbt/IntTag;)V a
	visitIntArray (Lnet/minecraft/nbt/IntArrayTag;)V a
	visitList (Lnet/minecraft/nbt/ListTag;)V a
	visitLong (Lnet/minecraft/nbt/LongTag;)V a
	visitLongArray (Lnet/minecraft/nbt/LongArrayTag;)V a
	visitShort (Lnet/minecraft/nbt/ShortTag;)V a
	visitString (Lnet/minecraft/nbt/StringTag;)V a
net/minecraft/nbt/TextComponentTagVisitor tp
	ELEMENT_SEPARATOR j
	ELEMENT_SPACING n
	INLINE_ELEMENT_TYPES c
	INLINE_LIST_THRESHOLD b
	LIST_CLOSE l
	LIST_OPEN k
	LIST_TYPE_SEPARATOR m
	LOGGER a
	NAME_VALUE_SEPARATOR i
	NEWLINE q
	SIMPLE_VALUE h
	STRUCT_CLOSE p
	STRUCT_OPEN o
	SYNTAX_HIGHLIGHTING_KEY d
	SYNTAX_HIGHLIGHTING_NUMBER f
	SYNTAX_HIGHLIGHTING_NUMBER_TYPE g
	SYNTAX_HIGHLIGHTING_STRING e
	depth s
	indentation r
	result t
	handleEscapePretty (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	visit (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	visitByte (Lnet/minecraft/nbt/ByteTag;)V a
	visitByteArray (Lnet/minecraft/nbt/ByteArrayTag;)V a
	visitCompound (Lnet/minecraft/nbt/CompoundTag;)V a
	visitDouble (Lnet/minecraft/nbt/DoubleTag;)V a
	visitEnd (Lnet/minecraft/nbt/EndTag;)V a
	visitFloat (Lnet/minecraft/nbt/FloatTag;)V a
	visitInt (Lnet/minecraft/nbt/IntTag;)V a
	visitIntArray (Lnet/minecraft/nbt/IntArrayTag;)V a
	visitList (Lnet/minecraft/nbt/ListTag;)V a
	visitLong (Lnet/minecraft/nbt/LongTag;)V a
	visitLongArray (Lnet/minecraft/nbt/LongArrayTag;)V a
	visitShort (Lnet/minecraft/nbt/ShortTag;)V a
	visitString (Lnet/minecraft/nbt/StringTag;)V a
net/minecraft/nbt/visitors/CollectFields tr
	fieldsToGetCount a
	stack c
	wantedTypes b
	getMissingFieldCount ()I c
	visitContainerEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
	visitEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitRootEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
net/minecraft/nbt/visitors/CollectToTag ts
	consumerStack c
	lastId a
	rootTag b
	appendEntry (Lnet/minecraft/nbt/Tag;)V a
	depth ()I e
	enterContainerIfNeeded (Lnet/minecraft/nbt/TagType;)V c
	getResult ()Lnet/minecraft/nbt/Tag; d
	visit (B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (D)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (F)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (S)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitContainerEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
	visitElement (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; b
	visitEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitList (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitRootEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
net/minecraft/nbt/visitors/FieldSelector tt
	name c
	path a
	type b
	name ()Ljava/lang/String; c
	path ()Ljava/util/List; a
	type ()Lnet/minecraft/nbt/TagType; b
net/minecraft/nbt/visitors/FieldTree tu
	depth a
	fieldsToRecurse c
	selectedFields b
	addEntry (Lnet/minecraft/nbt/visitors/FieldSelector;)V a
	createRoot ()Lnet/minecraft/nbt/visitors/FieldTree; a
	depth ()I b
	fieldsToRecurse ()Ljava/util/Map; d
	isSelected (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Z a
	selectedFields ()Ljava/util/Map; c
net/minecraft/nbt/visitors/SkipAll tv
	INSTANCE a
	visit (B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (D)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (F)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (S)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitContainerEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
	visitElement (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; b
	visitEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitList (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitRootEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
net/minecraft/nbt/visitors/SkipFields tw
	stack a
	visitContainerEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
	visitEntry (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
net/minecraft/network/BandwidthDebugMonitor ty
	bandwidthLogger b
	bytesReceived a
	onReceive (I)V a
	tick ()V a
net/minecraft/network/CipherBase tz
	cipher a
	heapIn b
	heapOut c
	bufToByte (Lio/netty/buffer/ByteBuf;)[B a
	decipher (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; a
	encipher (Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/CipherDecoder ua
	cipher a
	decode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V a
net/minecraft/network/CipherEncoder ub
	cipher a
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/ClientPongPacketListener uc
	handlePongResponse (Lnet/minecraft/network/protocol/status/ClientboundPongResponsePacket;)V a
net/minecraft/network/ClientboundPacketListener ud
	flow ()Lnet/minecraft/network/protocol/PacketFlow; a
net/minecraft/network/CompressionDecoder ue
	MAXIMUM_COMPRESSED_LENGTH a
	MAXIMUM_UNCOMPRESSED_LENGTH b
	inflater c
	threshold d
	validateDecompressed e
	inflate (Lio/netty/channel/ChannelHandlerContext;I)Lio/netty/buffer/ByteBuf; a
	setThreshold (IZ)V a
	setupInflaterInput (Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/CompressionEncoder uf
	deflater b
	encodeBuf a
	threshold c
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
	getThreshold ()I a
	setThreshold (I)V a
net/minecraft/network/Connection ug
	ATTRIBUTE_CLIENTBOUND_PROTOCOL f
	ATTRIBUTE_SERVERBOUND_PROTOCOL e
	AVERAGE_PACKETS_SMOOTHING j
	LOCAL_WORKER_GROUP i
	LOGGER k
	NETWORK_EPOLL_WORKER_GROUP h
	NETWORK_WORKER_GROUP g
	PACKET_MARKER b
	PACKET_RECEIVED_MARKER c
	PACKET_SENT_MARKER d
	ROOT_MARKER a
	address o
	averageReceivedPackets w
	averageSentPackets x
	bandwidthDebugMonitor B
	channel n
	delayedDisconnect A
	disconnectListener p
	disconnectedReason r
	disconnectionHandled t
	encrypted s
	handlingFault z
	packetListener q
	pendingActions m
	receivedPackets u
	receiving l
	sentPackets v
	tickCount y
	channelRead0 (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;)V a
	configureInMemoryPacketValidation (Lio/netty/channel/ChannelPipeline;Lnet/minecraft/network/protocol/PacketFlow;)V b
	configureInMemoryPipeline (Lio/netty/channel/ChannelPipeline;Lnet/minecraft/network/protocol/PacketFlow;)V a
	configurePacketHandler (Lio/netty/channel/ChannelPipeline;)V a
	configureSerialization (Lio/netty/channel/ChannelPipeline;Lnet/minecraft/network/protocol/PacketFlow;Lnet/minecraft/network/BandwidthDebugMonitor;)V a
	connect (Ljava/net/InetSocketAddress;ZLnet/minecraft/network/Connection;)Lio/netty/channel/ChannelFuture; a
	connectToLocalServer (Ljava/net/SocketAddress;)Lnet/minecraft/network/Connection; a
	connectToServer (Ljava/net/InetSocketAddress;ZLnet/minecraft/util/SampleLogger;)Lnet/minecraft/network/Connection; a
	disconnect (Lnet/minecraft/network/chat/Component;)V a
	doSendPacket (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;Z)V c
	flush ()V s
	flushChannel ()V c
	flushQueue ()V t
	genericsFtw (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;)V a
	getAverageReceivedPackets ()F q
	getAverageSentPackets ()F r
	getDisconnectedReason ()Lnet/minecraft/network/chat/Component; n
	getLoggableAddress (Z)Ljava/lang/String; a
	getPacketListener ()Lnet/minecraft/network/PacketListener; m
	getProtocolKey (Lnet/minecraft/network/protocol/PacketFlow;)Lio/netty/util/AttributeKey; a
	getReceiving ()Lnet/minecraft/network/protocol/PacketFlow; h
	getRemoteAddress ()Ljava/net/SocketAddress; f
	getSending ()Lnet/minecraft/network/protocol/PacketFlow; i
	handleDisconnection ()V p
	initiateServerboundConnection (Ljava/lang/String;ILnet/minecraft/network/PacketListener;Lnet/minecraft/network/protocol/handshake/ClientIntent;)V a
	initiateServerboundPlayConnection (Ljava/lang/String;ILnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	initiateServerboundStatusConnection (Ljava/lang/String;ILnet/minecraft/network/protocol/status/ClientStatusPacketListener;)V a
	isConnected ()Z k
	isConnecting ()Z l
	isEncrypted ()Z j
	isMemoryConnection ()Z g
	resumeInboundAfterProtocolChange ()V b
	runOnceConnected (Ljava/util/function/Consumer;)V a
	send (Lnet/minecraft/network/protocol/Packet;)V a
	send (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;)V a
	send (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;Z)V a
	sendPacket (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;Z)V b
	setBandwidthLogger (Lnet/minecraft/util/SampleLogger;)V a
	setClientboundProtocolAfterHandshake (Lnet/minecraft/network/protocol/handshake/ClientIntent;)V a
	setEncryptionKey (Ljavax/crypto/Cipher;Ljavax/crypto/Cipher;)V a
	setInitialProtocolAttributes (Lio/netty/channel/Channel;)V a
	setListener (Lnet/minecraft/network/PacketListener;)V a
	setListenerForServerboundHandshake (Lnet/minecraft/network/PacketListener;)V b
	setReadOnly ()V o
	setupCompression (IZ)V a
	suspendInboundAfterProtocolChange ()V a
	tick ()V d
	tickSecond ()V e
net/minecraft/network/ConnectionProtocol uh
	$VALUES i
	CONFIGURATION e
	HANDSHAKING a
	LOGIN d
	NOT_REGISTERED f
	PLAY b
	STATUS c
	flows h
	id g
	$values ()[Lnet/minecraft/network/ConnectionProtocol; c
	codec (Lnet/minecraft/network/protocol/PacketFlow;)Lnet/minecraft/network/ConnectionProtocol$CodecData; b
	getPacketsByIds (Lnet/minecraft/network/protocol/PacketFlow;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; a
	id ()Ljava/lang/String; a
	protocol ()Lnet/minecraft/network/ConnectionProtocol$ProtocolBuilder; b
net/minecraft/network/ConnectionProtocol$CodecData uh$a
	flow b
	packetSet c
	protocol a
	bundlerInfo ()Lnet/minecraft/network/protocol/BundlerInfo; c
	createPacket (ILnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/Packet; a
	flow ()Lnet/minecraft/network/protocol/PacketFlow; b
	isValidPacketType (Lnet/minecraft/network/protocol/Packet;)Z b
	packetId (Lnet/minecraft/network/protocol/Packet;)I a
	packetsByIds ()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; d
	protocol ()Lnet/minecraft/network/ConnectionProtocol; a
net/minecraft/network/ConnectionProtocol$PacketSet uh$b
	LOGGER a
	bundlerInfo d
	classToId b
	extraClasses e
	idToDeserializer c
	addPacket (Ljava/lang/Class;Ljava/util/function/Function;)Lnet/minecraft/network/ConnectionProtocol$PacketSet; a
	bundlerInfo ()Lnet/minecraft/network/protocol/BundlerInfo; a
	createPacket (ILnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/Packet; a
	getId (Ljava/lang/Class;)I a
	isKnownPacket (Ljava/lang/Class;)Z b
	withBundlePacket (Ljava/lang/Class;Ljava/util/function/Function;)Lnet/minecraft/network/ConnectionProtocol$PacketSet; b
net/minecraft/network/ConnectionProtocol$ProtocolBuilder uh$c
	flows a
	addFlow (Lnet/minecraft/network/protocol/PacketFlow;Lnet/minecraft/network/ConnectionProtocol$PacketSet;)Lnet/minecraft/network/ConnectionProtocol$ProtocolBuilder; a
	buildCodecs (Lnet/minecraft/network/ConnectionProtocol;)Ljava/util/Map; a
net/minecraft/network/FriendlyByteBuf ui
	DEFAULT_NBT_QUOTA a
	GSON h
	MAX_COMPONENT_STRING_LENGTH c
	MAX_PUBLIC_KEY_HEADER_SIZE f
	MAX_PUBLIC_KEY_LENGTH g
	MAX_STRING_LENGTH b
	PUBLIC_KEY_SIZE e
	source d
	capacity (I)Lnet/minecraft/network/FriendlyByteBuf; f
	clear ()Lnet/minecraft/network/FriendlyByteBuf; D
	discardReadBytes ()Lnet/minecraft/network/FriendlyByteBuf; I
	discardSomeReadBytes ()Lnet/minecraft/network/FriendlyByteBuf; J
	ensureWritable (I)Lnet/minecraft/network/FriendlyByteBuf; i
	getBytes (ILio/netty/buffer/ByteBuf;)Lnet/minecraft/network/FriendlyByteBuf; a
	getBytes (ILio/netty/buffer/ByteBuf;I)Lnet/minecraft/network/FriendlyByteBuf; a
	getBytes (ILio/netty/buffer/ByteBuf;II)Lnet/minecraft/network/FriendlyByteBuf; a
	getBytes (ILjava/io/OutputStream;I)Lnet/minecraft/network/FriendlyByteBuf; a
	getBytes (ILjava/nio/ByteBuffer;)Lnet/minecraft/network/FriendlyByteBuf; a
	getBytes (I[B)Lnet/minecraft/network/FriendlyByteBuf; a
	getBytes (I[BII)Lnet/minecraft/network/FriendlyByteBuf; a
	limitValue (Ljava/util/function/IntFunction;I)Ljava/util/function/IntFunction; a
	markReaderIndex ()Lnet/minecraft/network/FriendlyByteBuf; E
	markWriterIndex ()Lnet/minecraft/network/FriendlyByteBuf; G
	readBitSet ()Ljava/util/BitSet; z
	readBlockHitResult ()Lnet/minecraft/world/phys/BlockHitResult; y
	readBlockPos ()Lnet/minecraft/core/BlockPos; e
	readById (Ljava/util/function/IntFunction;)Ljava/lang/Object; a
	readById (Lnet/minecraft/core/IdMap;)Ljava/lang/Object; a
	readById (Lnet/minecraft/core/IdMap;Lnet/minecraft/network/FriendlyByteBuf$Reader;)Lnet/minecraft/core/Holder; a
	readByteArray ()[B b
	readByteArray (I)[B a
	readBytes (Lio/netty/buffer/ByteBuf;)Lnet/minecraft/network/FriendlyByteBuf; a
	readBytes (Lio/netty/buffer/ByteBuf;I)Lnet/minecraft/network/FriendlyByteBuf; a
	readBytes (Lio/netty/buffer/ByteBuf;II)Lnet/minecraft/network/FriendlyByteBuf; a
	readBytes (Ljava/io/OutputStream;I)Lnet/minecraft/network/FriendlyByteBuf; a
	readBytes (Ljava/nio/ByteBuffer;)Lnet/minecraft/network/FriendlyByteBuf; a
	readBytes ([B)Lnet/minecraft/network/FriendlyByteBuf; b
	readBytes ([BII)Lnet/minecraft/network/FriendlyByteBuf; a
	readChunkPos ()Lnet/minecraft/world/level/ChunkPos; f
	readCollection (Ljava/util/function/IntFunction;Lnet/minecraft/network/FriendlyByteBuf$Reader;)Ljava/util/Collection; a
	readComponent ()Lnet/minecraft/network/chat/Component; l
	readComponentTrusted ()Lnet/minecraft/network/chat/Component; m
	readDate ()Ljava/util/Date; v
	readEither (Lnet/minecraft/network/FriendlyByteBuf$Reader;Lnet/minecraft/network/FriendlyByteBuf$Reader;)Lcom/mojang/datafixers/util/Either; b
	readEnum (Ljava/lang/Class;)Ljava/lang/Enum; b
	readEnumSet (Ljava/lang/Class;)Ljava/util/EnumSet; a
	readFixedBitSet (I)Ljava/util/BitSet; e
	readGameProfile ()Lcom/mojang/authlib/GameProfile; A
	readGameProfileProperties ()Lcom/mojang/authlib/properties/PropertyMap; B
	readGlobalPos ()Lnet/minecraft/core/GlobalPos; h
	readInstant ()Ljava/time/Instant; w
	readIntIdList ()Lit/unimi/dsi/fastutil/ints/IntList; a
	readItem ()Lnet/minecraft/world/item/ItemStack; r
	readJsonWithCodec (Lcom/mojang/serialization/Codec;)Ljava/lang/Object; a
	readList (Lnet/minecraft/network/FriendlyByteBuf$Reader;)Ljava/util/List; a
	readLongArray ()[J d
	readLongArray ([J)[J b
	readLongArray ([JI)[J a
	readMap (Ljava/util/function/IntFunction;Lnet/minecraft/network/FriendlyByteBuf$Reader;Lnet/minecraft/network/FriendlyByteBuf$Reader;)Ljava/util/Map; a
	readMap (Lnet/minecraft/network/FriendlyByteBuf$Reader;Lnet/minecraft/network/FriendlyByteBuf$Reader;)Ljava/util/Map; a
	readNbt ()Lnet/minecraft/nbt/CompoundTag; q
	readNbt (Lnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; a
	readNullable (Lnet/minecraft/network/FriendlyByteBuf$Reader;)Ljava/lang/Object; c
	readOptional (Lnet/minecraft/network/FriendlyByteBuf$Reader;)Ljava/util/Optional; b
	readProperty ()Lcom/mojang/authlib/properties/Property; C
	readPublicKey ()Ljava/security/PublicKey; x
	readQuaternion ()Lorg/joml/Quaternionf; j
	readRegistryKey ()Lnet/minecraft/resources/ResourceKey; u
	readResourceKey (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; a
	readResourceLocation ()Lnet/minecraft/resources/ResourceLocation; t
	readSectionPos ()Lnet/minecraft/core/SectionPos; g
	readUUID ()Ljava/util/UUID; p
	readUtf ()Ljava/lang/String; s
	readUtf (I)Ljava/lang/String; d
	readVarInt ()I n
	readVarIntArray ()[I c
	readVarIntArray (I)[I b
	readVarLong ()J o
	readVec3 ()Lnet/minecraft/world/phys/Vec3; k
	readVector3f ()Lorg/joml/Vector3f; i
	readWithCodec (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Lnet/minecraft/nbt/NbtAccounter;)Ljava/lang/Object; a
	readWithCodecTrusted (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;)Ljava/lang/Object; a
	readWithCount (Ljava/util/function/Consumer;)V a
	readerIndex (I)Lnet/minecraft/network/FriendlyByteBuf; g
	resetReaderIndex ()Lnet/minecraft/network/FriendlyByteBuf; F
	resetWriterIndex ()Lnet/minecraft/network/FriendlyByteBuf; H
	retain ()Lnet/minecraft/network/FriendlyByteBuf; K
	retain (I)Lnet/minecraft/network/FriendlyByteBuf; t
	setBoolean (IZ)Lnet/minecraft/network/FriendlyByteBuf; a
	setByte (II)Lnet/minecraft/network/FriendlyByteBuf; b
	setBytes (ILio/netty/buffer/ByteBuf;)Lnet/minecraft/network/FriendlyByteBuf; b
	setBytes (ILio/netty/buffer/ByteBuf;I)Lnet/minecraft/network/FriendlyByteBuf; b
	setBytes (ILio/netty/buffer/ByteBuf;II)Lnet/minecraft/network/FriendlyByteBuf; b
	setBytes (ILjava/nio/ByteBuffer;)Lnet/minecraft/network/FriendlyByteBuf; b
	setBytes (I[B)Lnet/minecraft/network/FriendlyByteBuf; b
	setBytes (I[BII)Lnet/minecraft/network/FriendlyByteBuf; b
	setChar (II)Lnet/minecraft/network/FriendlyByteBuf; i
	setDouble (ID)Lnet/minecraft/network/FriendlyByteBuf; a
	setFloat (IF)Lnet/minecraft/network/FriendlyByteBuf; a
	setIndex (II)Lnet/minecraft/network/FriendlyByteBuf; a
	setInt (II)Lnet/minecraft/network/FriendlyByteBuf; g
	setIntLE (II)Lnet/minecraft/network/FriendlyByteBuf; h
	setLong (IJ)Lnet/minecraft/network/FriendlyByteBuf; a
	setLongLE (IJ)Lnet/minecraft/network/FriendlyByteBuf; b
	setMedium (II)Lnet/minecraft/network/FriendlyByteBuf; e
	setMediumLE (II)Lnet/minecraft/network/FriendlyByteBuf; f
	setShort (II)Lnet/minecraft/network/FriendlyByteBuf; c
	setShortLE (II)Lnet/minecraft/network/FriendlyByteBuf; d
	setZero (II)Lnet/minecraft/network/FriendlyByteBuf; j
	skipBytes (I)Lnet/minecraft/network/FriendlyByteBuf; j
	touch ()Lnet/minecraft/network/FriendlyByteBuf; L
	touch (Ljava/lang/Object;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeBitSet (Ljava/util/BitSet;)V a
	writeBlockHitResult (Lnet/minecraft/world/phys/BlockHitResult;)V a
	writeBlockPos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeBoolean (Z)Lnet/minecraft/network/FriendlyByteBuf; a
	writeById (Ljava/util/function/ToIntFunction;Ljava/lang/Object;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeByte (I)Lnet/minecraft/network/FriendlyByteBuf; k
	writeByteArray ([B)Lnet/minecraft/network/FriendlyByteBuf; a
	writeBytes (Lio/netty/buffer/ByteBuf;)Lnet/minecraft/network/FriendlyByteBuf; b
	writeBytes (Lio/netty/buffer/ByteBuf;I)Lnet/minecraft/network/FriendlyByteBuf; b
	writeBytes (Lio/netty/buffer/ByteBuf;II)Lnet/minecraft/network/FriendlyByteBuf; b
	writeBytes (Ljava/nio/ByteBuffer;)Lnet/minecraft/network/FriendlyByteBuf; b
	writeBytes ([B)Lnet/minecraft/network/FriendlyByteBuf; c
	writeBytes ([BII)Lnet/minecraft/network/FriendlyByteBuf; b
	writeChar (I)Lnet/minecraft/network/FriendlyByteBuf; r
	writeChunkPos (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeCollection (Ljava/util/Collection;Lnet/minecraft/network/FriendlyByteBuf$Writer;)V a
	writeComponent (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeDate (Ljava/util/Date;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeDouble (D)Lnet/minecraft/network/FriendlyByteBuf; a
	writeEither (Lcom/mojang/datafixers/util/Either;Lnet/minecraft/network/FriendlyByteBuf$Writer;Lnet/minecraft/network/FriendlyByteBuf$Writer;)V a
	writeEnum (Ljava/lang/Enum;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeEnumSet (Ljava/util/EnumSet;Ljava/lang/Class;)V a
	writeFixedBitSet (Ljava/util/BitSet;I)V a
	writeFloat (F)Lnet/minecraft/network/FriendlyByteBuf; a
	writeGameProfile (Lcom/mojang/authlib/GameProfile;)V a
	writeGameProfileProperties (Lcom/mojang/authlib/properties/PropertyMap;)V a
	writeGlobalPos (Lnet/minecraft/core/GlobalPos;)V a
	writeId (Lnet/minecraft/core/IdMap;Ljava/lang/Object;)V a
	writeId (Lnet/minecraft/core/IdMap;Lnet/minecraft/core/Holder;Lnet/minecraft/network/FriendlyByteBuf$Writer;)V a
	writeInstant (Ljava/time/Instant;)V a
	writeInt (I)Lnet/minecraft/network/FriendlyByteBuf; p
	writeIntIdList (Lit/unimi/dsi/fastutil/ints/IntList;)V a
	writeIntLE (I)Lnet/minecraft/network/FriendlyByteBuf; q
	writeItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeJsonWithCodec (Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V a
	writeLong (J)Lnet/minecraft/network/FriendlyByteBuf; b
	writeLongArray ([J)Lnet/minecraft/network/FriendlyByteBuf; a
	writeLongLE (J)Lnet/minecraft/network/FriendlyByteBuf; c
	writeMap (Ljava/util/Map;Lnet/minecraft/network/FriendlyByteBuf$Writer;Lnet/minecraft/network/FriendlyByteBuf$Writer;)V a
	writeMedium (I)Lnet/minecraft/network/FriendlyByteBuf; n
	writeMediumLE (I)Lnet/minecraft/network/FriendlyByteBuf; o
	writeNbt (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeNullable (Ljava/lang/Object;Lnet/minecraft/network/FriendlyByteBuf$Writer;)V a
	writeOptional (Ljava/util/Optional;Lnet/minecraft/network/FriendlyByteBuf$Writer;)V a
	writeProperty (Lcom/mojang/authlib/properties/Property;)V a
	writePublicKey (Ljava/security/PublicKey;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeQuaternion (Lorg/joml/Quaternionf;)V a
	writeResourceKey (Lnet/minecraft/resources/ResourceKey;)V b
	writeResourceLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeSectionPos (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeShort (I)Lnet/minecraft/network/FriendlyByteBuf; l
	writeShortLE (I)Lnet/minecraft/network/FriendlyByteBuf; m
	writeUUID (Ljava/util/UUID;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeUtf (Ljava/lang/String;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeUtf (Ljava/lang/String;I)Lnet/minecraft/network/FriendlyByteBuf; a
	writeVarInt (I)Lnet/minecraft/network/FriendlyByteBuf; c
	writeVarIntArray ([I)Lnet/minecraft/network/FriendlyByteBuf; a
	writeVarLong (J)Lnet/minecraft/network/FriendlyByteBuf; a
	writeVec3 (Lnet/minecraft/world/phys/Vec3;)V a
	writeVector3f (Lorg/joml/Vector3f;)V a
	writeWithCodec (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Ljava/lang/Object;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeZero (I)Lnet/minecraft/network/FriendlyByteBuf; s
	writerIndex (I)Lnet/minecraft/network/FriendlyByteBuf; h
net/minecraft/network/FriendlyByteBuf$Reader ui$a
net/minecraft/network/FriendlyByteBuf$Writer ui$b
net/minecraft/network/PacketBundlePacker uj
	bundlerAttributeKey c
	currentBundler a
	infoForCurrentBundler b
	decode (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Ljava/util/List;)V a
net/minecraft/network/PacketBundleUnpacker uk
	bundlerAttributeKey a
	encode (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Ljava/util/List;)V a
net/minecraft/network/PacketDecoder ul
	LOGGER a
	codecKey b
net/minecraft/network/PacketEncoder um
	LOGGER a
	codecKey b
	encode (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/PacketFlowValidator un
	LOGGER a
	decoderKey b
	encoderKey c
	decode (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Ljava/util/List;)V a
	encode (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Ljava/util/List;)V b
	validatePacket (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Ljava/util/List;Lio/netty/util/AttributeKey;)V a
net/minecraft/network/PacketListener uo
	fillCrashReport (Lnet/minecraft/CrashReport;)V a
	fillListenerSpecificCrashDetails (Lnet/minecraft/CrashReportCategory;)V a
	flow ()Lnet/minecraft/network/protocol/PacketFlow; a
	isAcceptingMessages ()Z c
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	protocol ()Lnet/minecraft/network/ConnectionProtocol; b
	shouldHandleMessage (Lnet/minecraft/network/protocol/Packet;)Z a
	shouldPropagateHandlingExceptions ()Z d
net/minecraft/network/PacketSendListener up
	exceptionallySend (Ljava/util/function/Supplier;)Lnet/minecraft/network/PacketSendListener; a
	onFailure ()Lnet/minecraft/network/protocol/Packet; b
	onSuccess ()V a
	thenRun (Ljava/lang/Runnable;)Lnet/minecraft/network/PacketSendListener; a
net/minecraft/network/ProtocolSwapHandler uq
	swapProtocolIfNeeded (Lio/netty/util/Attribute;Lnet/minecraft/network/protocol/Packet;)V a
net/minecraft/network/RateKickingConnection ur
	EXCEED_REASON k
	LOGGER j
	rateLimitPacketsPerSecond l
	tickSecond ()V e
net/minecraft/network/ServerboundPacketListener us
	flow ()Lnet/minecraft/network/protocol/PacketFlow; a
net/minecraft/network/SkipPacketException ut
net/minecraft/network/TickablePacketListener uu
	tick ()V e
net/minecraft/network/Utf8String uv
	read (Lio/netty/buffer/ByteBuf;I)Ljava/lang/String; a
	write (Lio/netty/buffer/ByteBuf;Ljava/lang/CharSequence;I)V a
net/minecraft/network/VarInt uw
	CONTINUATION_BIT_MASK c
	DATA_BITS_MASK b
	DATA_BITS_PER_BYTE d
	MAX_VARINT_SIZE a
	getByteSize (I)I a
	hasContinuationBit (B)Z a
	read (Lio/netty/buffer/ByteBuf;)I a
	write (Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf; a
net/minecraft/network/VarLong ux
	CONTINUATION_BIT_MASK c
	DATA_BITS_MASK b
	DATA_BITS_PER_BYTE d
	MAX_VARLONG_SIZE a
	getByteSize (J)I a
	hasContinuationBit (B)Z a
	read (Lio/netty/buffer/ByteBuf;)J a
	write (Lio/netty/buffer/ByteBuf;J)Lio/netty/buffer/ByteBuf; a
net/minecraft/network/Varint21FrameDecoder uy
	MAX_VARINT21_BYTES a
	helperBuf b
	monitor c
	copyVarint (Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)Z a
net/minecraft/network/Varint21LengthFieldPrepender uz
	MAX_VARINT21_BYTES a
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/chat/ChatDecorator va
	PLAIN a
net/minecraft/network/chat/ChatType vb
	CHAT c
	CODEC a
	DEFAULT_CHAT_DECORATION b
	EMOTE_COMMAND i
	MSG_COMMAND_INCOMING e
	MSG_COMMAND_OUTGOING f
	SAY_COMMAND d
	TEAM_MSG_COMMAND_INCOMING g
	TEAM_MSG_COMMAND_OUTGOING h
	chat j
	narration k
	bind (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/ChatType$Bound; a
	bind (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/network/chat/ChatType$Bound; a
	bind (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/ChatType$Bound; a
	bind (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/network/chat/ChatType$Bound; a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	chat ()Lnet/minecraft/network/chat/ChatTypeDecoration; a
	create (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	narration ()Lnet/minecraft/network/chat/ChatTypeDecoration; b
net/minecraft/network/chat/ChatType$Bound vb$a
	chatType a
	name b
	targetName c
	chatType ()Lnet/minecraft/network/chat/ChatType; a
	decorate (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	decorateNarration (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; b
	name ()Lnet/minecraft/network/chat/Component; b
	targetName ()Lnet/minecraft/network/chat/Component; c
	toNetwork (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/network/chat/ChatType$BoundNetwork; a
	withTargetName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/ChatType$Bound; c
net/minecraft/network/chat/ChatType$BoundNetwork vb$b
	chatType a
	name b
	targetName c
	chatType ()I a
	name ()Lnet/minecraft/network/chat/Component; b
	resolve (Lnet/minecraft/core/RegistryAccess;)Ljava/util/Optional; a
	targetName ()Lnet/minecraft/network/chat/Component; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/chat/ChatTypeDecoration vc
	CODEC a
	parameters c
	style d
	translationKey b
	decorate (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType$Bound;)Lnet/minecraft/network/chat/Component; a
	incomingDirectMessage (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatTypeDecoration; b
	outgoingDirectMessage (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatTypeDecoration; c
	parameters ()Ljava/util/List; b
	resolveParameters (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType$Bound;)[Lnet/minecraft/network/chat/Component; b
	style ()Lnet/minecraft/network/chat/Style; c
	teamMessage (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatTypeDecoration; d
	translationKey ()Ljava/lang/String; a
	withSender (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatTypeDecoration; a
net/minecraft/network/chat/ChatTypeDecoration$Parameter vc$a
	$VALUES g
	CODEC d
	CONTENT c
	SENDER a
	TARGET b
	name e
	selector f
	$values ()[Lnet/minecraft/network/chat/ChatTypeDecoration$Parameter; a
	getSerializedName ()Ljava/lang/String; c
	select (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType$Bound;)Lnet/minecraft/network/chat/Component; a
net/minecraft/network/chat/ChatTypeDecoration$Parameter$Selector vc$a$a
net/minecraft/network/chat/ClickEvent vd
	CODEC a
	action b
	value c
	getAction ()Lnet/minecraft/network/chat/ClickEvent$Action; a
	getValue ()Ljava/lang/String; b
net/minecraft/network/chat/ClickEvent$Action vd$a
	$VALUES k
	CHANGE_PAGE e
	CODEC h
	COPY_TO_CLIPBOARD f
	OPEN_FILE b
	OPEN_URL a
	RUN_COMMAND c
	SUGGEST_COMMAND d
	UNSAFE_CODEC g
	allowFromServer i
	name j
	$values ()[Lnet/minecraft/network/chat/ClickEvent$Action; b
	filterForSerialization (Lnet/minecraft/network/chat/ClickEvent$Action;)Lcom/mojang/serialization/DataResult; a
	getSerializedName ()Ljava/lang/String; c
	isAllowedFromServer ()Z a
net/minecraft/network/chat/CommonComponents ve
	CONNECT_FAILED q
	ELLIPSIS t
	EMPTY a
	GUI_ACKNOWLEDGE m
	GUI_BACK k
	GUI_CANCEL e
	GUI_CONTINUE j
	GUI_COPY_LINK_TO_CLIPBOARD o
	GUI_DISCONNECT p
	GUI_DONE d
	GUI_NO g
	GUI_OK h
	GUI_OPEN_IN_BROWSER n
	GUI_PROCEED i
	GUI_TO_TITLE l
	GUI_YES f
	NARRATION_SEPARATOR s
	NEW_LINE r
	OPTION_OFF c
	OPTION_ON b
	SPACE u
	days (J)Lnet/minecraft/network/chat/MutableComponent; a
	hours (J)Lnet/minecraft/network/chat/MutableComponent; b
	joinForNarration ([Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	joinLines (Ljava/util/Collection;)Lnet/minecraft/network/chat/Component; a
	joinLines ([Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; b
	minutes (J)Lnet/minecraft/network/chat/MutableComponent; c
	optionNameValue (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	optionStatus (Lnet/minecraft/network/chat/Component;Z)Lnet/minecraft/network/chat/MutableComponent; a
	optionStatus (Z)Lnet/minecraft/network/chat/Component; a
	space ()Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/Component vf
	contains (Lnet/minecraft/network/chat/Component;)Z a
	copy ()Lnet/minecraft/network/chat/MutableComponent; f
	empty ()Lnet/minecraft/network/chat/MutableComponent; i
	getContents ()Lnet/minecraft/network/chat/ComponentContents; b
	getSiblings ()Ljava/util/List; c
	getString (I)Ljava/lang/String; a
	getStyle ()Lnet/minecraft/network/chat/Style; a
	getVisualOrderText ()Lnet/minecraft/util/FormattedCharSequence; g
	keybind (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; d
	literal (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; b
	nbt (Ljava/lang/String;ZLjava/util/Optional;Lnet/minecraft/network/chat/contents/DataSource;)Lnet/minecraft/network/chat/MutableComponent; a
	nullToEmpty (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; e
	score (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; b
	selector (Ljava/lang/String;Ljava/util/Optional;)Lnet/minecraft/network/chat/MutableComponent; a
	toFlatList ()Ljava/util/List; h
	toFlatList (Lnet/minecraft/network/chat/Style;)Ljava/util/List; a
	translatable (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; c
	translatable (Ljava/lang/String;[Ljava/lang/Object;)Lnet/minecraft/network/chat/MutableComponent; a
	translatableEscape (Ljava/lang/String;[Ljava/lang/Object;)Lnet/minecraft/network/chat/MutableComponent; b
	translatableWithFallback (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; a
	translatableWithFallback (Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Lnet/minecraft/network/chat/MutableComponent; a
	translationArg (Lcom/mojang/brigadier/Message;)Lnet/minecraft/network/chat/Component; a
	translationArg (Ljava/util/Date;)Lnet/minecraft/network/chat/Component; a
	translationArg (Ljava/util/UUID;)Lnet/minecraft/network/chat/Component; a
	translationArg (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/network/chat/Component; a
	translationArg (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/network/chat/Component; a
	tryCollapseToString ()Ljava/lang/String; d
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/Component$Serializer vf$a
	GSON a
	deserialize (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/MutableComponent; b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJson (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJsonLenient (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; b
	serialize (Lnet/minecraft/network/chat/Component;)Lcom/google/gson/JsonElement; c
	toJson (Lnet/minecraft/network/chat/Component;)Ljava/lang/String; a
	toJsonTree (Lnet/minecraft/network/chat/Component;)Lcom/google/gson/JsonElement; b
net/minecraft/network/chat/Component$SerializerAdapter vf$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/chat/MutableComponent; a
	serialize (Lnet/minecraft/network/chat/Component;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/chat/ComponentContents vg
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	type ()Lnet/minecraft/network/chat/ComponentContents$Type; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/ComponentContents$Type vg$a
	codec a
	id b
	codec ()Lcom/mojang/serialization/MapCodec; a
	getSerializedName ()Ljava/lang/String; c
	id ()Ljava/lang/String; b
net/minecraft/network/chat/ComponentSerialization vh
	CODEC a
	FLAT_CODEC b
	createCodec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	createFromList (Ljava/util/List;)Lnet/minecraft/network/chat/MutableComponent; a
	createLegacyComponentMatcher ([Lnet/minecraft/util/StringRepresentable;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/String;)Lcom/mojang/serialization/MapCodec; a
net/minecraft/network/chat/ComponentSerialization$FuzzyCodec vh$a
	codecs a
	encoderGetter b
net/minecraft/network/chat/ComponentSerialization$StrictEither vh$b
	fuzzy c
	typeFieldName a
	typed b
net/minecraft/network/chat/ComponentUtils vi
	DEFAULT_NO_STYLE_SEPARATOR c
	DEFAULT_SEPARATOR b
	DEFAULT_SEPARATOR_TEXT a
	copyOnClickText (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; a
	formatAndSortList (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/network/chat/Component; a
	formatList (Ljava/util/Collection;)Lnet/minecraft/network/chat/Component; a
	formatList (Ljava/util/Collection;Ljava/util/Optional;Ljava/util/function/Function;)Lnet/minecraft/network/chat/MutableComponent; a
	formatList (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/network/chat/Component; b
	formatList (Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	formatList (Ljava/util/Collection;Lnet/minecraft/network/chat/Component;Ljava/util/function/Function;)Lnet/minecraft/network/chat/MutableComponent; a
	fromMessage (Lcom/mojang/brigadier/Message;)Lnet/minecraft/network/chat/Component; a
	isTranslationResolvable (Lnet/minecraft/network/chat/Component;)Z b
	mergeStyles (Lnet/minecraft/network/chat/MutableComponent;Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; a
	resolveStyle (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Style;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/Style; a
	updateForEntity (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Optional;Lnet/minecraft/world/entity/Entity;I)Ljava/util/Optional; a
	updateForEntity (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	wrapInSquareBrackets (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/FilterMask vj
	CODEC a
	FILTERED_STYLE d
	FULLY_FILTERED b
	FULLY_FILTERED_CODEC f
	HASH h
	PARTIALLY_FILTERED_CODEC g
	PASS_THROUGH c
	PASS_THROUGH_CODEC e
	mask i
	type j
	apply (Ljava/lang/String;)Ljava/lang/String; a
	applyWithFormatting (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; b
	isEmpty ()Z a
	isFullyFiltered ()Z b
	mask ()Ljava/util/BitSet; d
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/chat/FilterMask; a
	setFiltered (I)V a
	type ()Lnet/minecraft/network/chat/FilterMask$Type; c
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/chat/FilterMask;)V a
net/minecraft/network/chat/FilterMask$Type vj$a
	$VALUES f
	FULLY_FILTERED b
	PARTIALLY_FILTERED c
	PASS_THROUGH a
	codec e
	serializedName d
	$values ()[Lnet/minecraft/network/chat/FilterMask$Type; f
	codec ()Lcom/mojang/serialization/Codec; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/network/chat/FormattedText vk
	EMPTY b
	STOP_ITERATION a
	composite (Ljava/util/List;)Lnet/minecraft/network/chat/FormattedText; a
	composite ([Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/network/chat/FormattedText; a
	of (Ljava/lang/String;)Lnet/minecraft/network/chat/FormattedText; e
	of (Ljava/lang/String;Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/FormattedText$ContentConsumer vk$a
net/minecraft/network/chat/FormattedText$StyledContentConsumer vk$b
net/minecraft/network/chat/HoverEvent vl
	CODEC a
	event b
	getAction ()Lnet/minecraft/network/chat/HoverEvent$Action; a
	getValue (Lnet/minecraft/network/chat/HoverEvent$Action;)Ljava/lang/Object; a
net/minecraft/network/chat/HoverEvent$Action vl$a
	CODEC e
	SHOW_ENTITY c
	SHOW_ITEM b
	SHOW_TEXT a
	UNSAFE_CODEC d
	allowFromServer g
	codec h
	legacyCodec i
	name f
	cast (Ljava/lang/Object;)Ljava/lang/Object; a
	filterForSerialization (Lnet/minecraft/network/chat/HoverEvent$Action;)Lcom/mojang/serialization/DataResult; a
	getSerializedName ()Ljava/lang/String; c
	isAllowedFromServer ()Z a
net/minecraft/network/chat/HoverEvent$EntityTooltipInfo vl$b
	CODEC a
	id c
	linesCache e
	name d
	type b
	getTooltipLines ()Ljava/util/List; a
	legacyCreate (Lnet/minecraft/network/chat/Component;)Lcom/mojang/serialization/DataResult; a
net/minecraft/network/chat/HoverEvent$ItemStackInfo vl$c
	CODEC b
	FULL_CODEC a
	count d
	item c
	itemStack f
	tag e
	getItemStack ()Lnet/minecraft/world/item/ItemStack; a
	legacyCreate (Lnet/minecraft/network/chat/Component;)Lcom/mojang/serialization/DataResult; a
net/minecraft/network/chat/HoverEvent$TypedHoverEvent vl$d
	CODEC a
	LEGACY_CODEC b
	action c
	value d
	action ()Lnet/minecraft/network/chat/HoverEvent$Action; a
	value ()Ljava/lang/Object; b
net/minecraft/network/chat/LastSeenMessages vm
	CODEC a
	EMPTY b
	LAST_SEEN_MESSAGES_MAX_LENGTH c
	entries d
	entries ()Ljava/util/List; a
	pack (Lnet/minecraft/network/chat/MessageSignatureCache;)Lnet/minecraft/network/chat/LastSeenMessages$Packed; a
	updateSignature (Lnet/minecraft/util/SignatureUpdater$Output;)V a
net/minecraft/network/chat/LastSeenMessages$Packed vm$a
	EMPTY a
	entries b
	entries ()Ljava/util/List; a
	unpack (Lnet/minecraft/network/chat/MessageSignatureCache;)Ljava/util/Optional; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/chat/LastSeenMessages$Update vm$b
	acknowledged b
	offset a
	acknowledged ()Ljava/util/BitSet; b
	offset ()I a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/chat/LastSeenMessagesTracker vn
	lastTrackedMessage d
	offset c
	tail b
	trackedMessages a
	addEntry (Lnet/minecraft/network/chat/LastSeenTrackedEntry;)V a
	addPending (Lnet/minecraft/network/chat/MessageSignature;Z)Z a
	generateAndApplyUpdate ()Lnet/minecraft/network/chat/LastSeenMessagesTracker$Update; b
	getAndClearOffset ()I a
	ignorePending (Lnet/minecraft/network/chat/MessageSignature;)V a
	offset ()I c
net/minecraft/network/chat/LastSeenMessagesTracker$Update vn$a
	lastSeen a
	update b
	lastSeen ()Lnet/minecraft/network/chat/LastSeenMessages; a
	update ()Lnet/minecraft/network/chat/LastSeenMessages$Update; b
net/minecraft/network/chat/LastSeenMessagesValidator vo
	lastPendingMessage c
	lastSeenCount a
	trackedMessages b
	addPending (Lnet/minecraft/network/chat/MessageSignature;)V a
	applyOffset (I)Z a
	applyUpdate (Lnet/minecraft/network/chat/LastSeenMessages$Update;)Ljava/util/Optional; a
	trackedMessagesCount ()I a
net/minecraft/network/chat/LastSeenTrackedEntry vp
	pending b
	signature a
	acknowledge ()Lnet/minecraft/network/chat/LastSeenTrackedEntry; a
	pending ()Z c
	signature ()Lnet/minecraft/network/chat/MessageSignature; b
net/minecraft/network/chat/LocalChatSession vq
	keyPair b
	sessionId a
	asRemote ()Lnet/minecraft/network/chat/RemoteChatSession; a
	create (Lnet/minecraft/world/entity/player/ProfileKeyPair;)Lnet/minecraft/network/chat/LocalChatSession; a
	createMessageEncoder (Ljava/util/UUID;)Lnet/minecraft/network/chat/SignedMessageChain$Encoder; a
	keyPair ()Lnet/minecraft/world/entity/player/ProfileKeyPair; c
	sessionId ()Ljava/util/UUID; b
net/minecraft/network/chat/MessageSignature vr
	BYTES b
	CODEC a
	bytes c
	asByteBuffer ()Ljava/nio/ByteBuffer; a
	bytes ()[B b
	pack (Lnet/minecraft/network/chat/MessageSignatureCache;)Lnet/minecraft/network/chat/MessageSignature$Packed; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/chat/MessageSignature; a
	verify (Lnet/minecraft/util/SignatureValidator;Lnet/minecraft/util/SignatureUpdater;)Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/chat/MessageSignature;)V a
net/minecraft/network/chat/MessageSignature$Packed vr$a
	FULL_SIGNATURE a
	fullSignature c
	id b
	fullSignature ()Lnet/minecraft/network/chat/MessageSignature; b
	id ()I a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/chat/MessageSignature$Packed; a
	unpack (Lnet/minecraft/network/chat/MessageSignatureCache;)Ljava/util/Optional; a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/chat/MessageSignature$Packed;)V a
net/minecraft/network/chat/MessageSignatureCache vs
	DEFAULT_CAPACITY b
	NOT_FOUND a
	entries c
	createDefault ()Lnet/minecraft/network/chat/MessageSignatureCache; a
	pack (Lnet/minecraft/network/chat/MessageSignature;)I a
	push (Ljava/util/ArrayDeque;)V a
	push (Ljava/util/List;)V a
	push (Lnet/minecraft/network/chat/SignedMessageBody;Lnet/minecraft/network/chat/MessageSignature;)V a
	unpack (I)Lnet/minecraft/network/chat/MessageSignature; a
net/minecraft/network/chat/MutableComponent vt
	contents c
	decomposedWith g
	siblings d
	style e
	visualOrderText f
	append (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; f
	append (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; b
	create (Lnet/minecraft/network/chat/ComponentContents;)Lnet/minecraft/network/chat/MutableComponent; a
	getContents ()Lnet/minecraft/network/chat/ComponentContents; b
	getSiblings ()Ljava/util/List; c
	getStyle ()Lnet/minecraft/network/chat/Style; a
	getVisualOrderText ()Lnet/minecraft/util/FormattedCharSequence; g
	setStyle (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; b
	withColor (I)Lnet/minecraft/network/chat/MutableComponent; b
	withStyle (Ljava/util/function/UnaryOperator;)Lnet/minecraft/network/chat/MutableComponent; a
	withStyle (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/MutableComponent; a
	withStyle (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; c
	withStyle ([Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/OutgoingChatMessage vu
	content ()Lnet/minecraft/network/chat/Component; a
	create (Lnet/minecraft/network/chat/PlayerChatMessage;)Lnet/minecraft/network/chat/OutgoingChatMessage; a
	sendToPlayer (Lnet/minecraft/server/level/ServerPlayer;ZLnet/minecraft/network/chat/ChatType$Bound;)V a
net/minecraft/network/chat/OutgoingChatMessage$Disguised vu$a
	content a
	content ()Lnet/minecraft/network/chat/Component; a
	sendToPlayer (Lnet/minecraft/server/level/ServerPlayer;ZLnet/minecraft/network/chat/ChatType$Bound;)V a
net/minecraft/network/chat/OutgoingChatMessage$Player vu$b
	message a
	content ()Lnet/minecraft/network/chat/Component; a
	message ()Lnet/minecraft/network/chat/PlayerChatMessage; b
	sendToPlayer (Lnet/minecraft/server/level/ServerPlayer;ZLnet/minecraft/network/chat/ChatType$Bound;)V a
net/minecraft/network/chat/PlayerChatMessage vv
	MAP_CODEC a
	MESSAGE_EXPIRES_AFTER_CLIENT c
	MESSAGE_EXPIRES_AFTER_SERVER b
	SYSTEM_SENDER i
	filterMask h
	link d
	signature e
	signedBody f
	unsignedContent g
	decoratedContent ()Lnet/minecraft/network/chat/Component; d
	filter (Lnet/minecraft/network/chat/FilterMask;)Lnet/minecraft/network/chat/PlayerChatMessage; a
	filter (Z)Lnet/minecraft/network/chat/PlayerChatMessage; a
	filterMask ()Lnet/minecraft/network/chat/FilterMask; o
	hasExpiredClient (Ljava/time/Instant;)Z b
	hasExpiredServer (Ljava/time/Instant;)Z a
	hasSignature ()Z i
	hasSignatureFrom (Ljava/util/UUID;)Z a
	isFullyFiltered ()Z j
	isSystem ()Z h
	link ()Lnet/minecraft/network/chat/SignedMessageLink; k
	removeSignature ()Lnet/minecraft/network/chat/PlayerChatMessage; b
	removeUnsignedContent ()Lnet/minecraft/network/chat/PlayerChatMessage; a
	salt ()J f
	sender ()Ljava/util/UUID; g
	signature ()Lnet/minecraft/network/chat/MessageSignature; l
	signedBody ()Lnet/minecraft/network/chat/SignedMessageBody; m
	signedContent ()Ljava/lang/String; c
	system (Ljava/lang/String;)Lnet/minecraft/network/chat/PlayerChatMessage; a
	timeStamp ()Ljava/time/Instant; e
	unsigned (Ljava/util/UUID;Ljava/lang/String;)Lnet/minecraft/network/chat/PlayerChatMessage; a
	unsignedContent ()Lnet/minecraft/network/chat/Component; n
	updateSignature (Lnet/minecraft/util/SignatureUpdater$Output;Lnet/minecraft/network/chat/SignedMessageLink;Lnet/minecraft/network/chat/SignedMessageBody;)V a
	verify (Lnet/minecraft/util/SignatureValidator;)Z a
	withUnsignedContent (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/PlayerChatMessage; a
net/minecraft/network/chat/RemoteChatSession vw
	profilePublicKey b
	sessionId a
	asData ()Lnet/minecraft/network/chat/RemoteChatSession$Data; a
	createMessageDecoder (Ljava/util/UUID;)Lnet/minecraft/network/chat/SignedMessageChain$Decoder; a
	createMessageValidator (Ljava/time/Duration;)Lnet/minecraft/network/chat/SignedMessageValidator; a
	hasExpired ()Z b
	profilePublicKey ()Lnet/minecraft/world/entity/player/ProfilePublicKey; d
	sessionId ()Ljava/util/UUID; c
net/minecraft/network/chat/RemoteChatSession$Data vw$a
	profilePublicKey b
	sessionId a
	profilePublicKey ()Lnet/minecraft/world/entity/player/ProfilePublicKey$Data; b
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/chat/RemoteChatSession$Data; a
	sessionId ()Ljava/util/UUID; a
	validate (Lcom/mojang/authlib/GameProfile;Lnet/minecraft/util/SignatureValidator;)Lnet/minecraft/network/chat/RemoteChatSession; a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/chat/RemoteChatSession$Data;)V a
net/minecraft/network/chat/SignableCommand vx
	arguments a
	arguments ()Ljava/util/List; a
	collectArguments (Ljava/lang/String;Lcom/mojang/brigadier/context/CommandContextBuilder;)Ljava/util/List; a
	of (Lcom/mojang/brigadier/ParseResults;)Lnet/minecraft/network/chat/SignableCommand; a
net/minecraft/network/chat/SignableCommand$Argument vx$a
	node a
	value b
	name ()Ljava/lang/String; a
	node ()Lcom/mojang/brigadier/tree/ArgumentCommandNode; b
	value ()Ljava/lang/String; c
net/minecraft/network/chat/SignedMessageBody vy
	MAP_CODEC a
	content b
	lastSeen e
	salt d
	timeStamp c
	content ()Ljava/lang/String; a
	lastSeen ()Lnet/minecraft/network/chat/LastSeenMessages; d
	pack (Lnet/minecraft/network/chat/MessageSignatureCache;)Lnet/minecraft/network/chat/SignedMessageBody$Packed; a
	salt ()J c
	timeStamp ()Ljava/time/Instant; b
	unsigned (Ljava/lang/String;)Lnet/minecraft/network/chat/SignedMessageBody; a
	updateSignature (Lnet/minecraft/util/SignatureUpdater$Output;)V a
net/minecraft/network/chat/SignedMessageBody$Packed vy$a
	content a
	lastSeen d
	salt c
	timeStamp b
	content ()Ljava/lang/String; a
	lastSeen ()Lnet/minecraft/network/chat/LastSeenMessages$Packed; d
	salt ()J c
	timeStamp ()Ljava/time/Instant; b
	unpack (Lnet/minecraft/network/chat/MessageSignatureCache;)Ljava/util/Optional; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/chat/SignedMessageChain vz
	LOGGER a
	lastTimeStamp c
	nextLink b
	advanceLink ()Lnet/minecraft/network/chat/SignedMessageLink; a
	decoder (Lnet/minecraft/world/entity/player/ProfilePublicKey;)Lnet/minecraft/network/chat/SignedMessageChain$Decoder; a
	encoder (Lnet/minecraft/util/Signer;)Lnet/minecraft/network/chat/SignedMessageChain$Encoder; a
net/minecraft/network/chat/SignedMessageChain$DecodeException vz$a
	shouldDisconnect a
	shouldDisconnect ()Z a
net/minecraft/network/chat/SignedMessageChain$Decoder vz$b
net/minecraft/network/chat/SignedMessageChain$Encoder vz$c
	UNSIGNED a
net/minecraft/network/chat/SignedMessageLink wa
	CODEC a
	index b
	sender c
	sessionId d
	advance ()Lnet/minecraft/network/chat/SignedMessageLink; a
	index ()I b
	isDescendantOf (Lnet/minecraft/network/chat/SignedMessageLink;)Z a
	root (Ljava/util/UUID;Ljava/util/UUID;)Lnet/minecraft/network/chat/SignedMessageLink; a
	sender ()Ljava/util/UUID; c
	sessionId ()Ljava/util/UUID; d
	unsigned (Ljava/util/UUID;)Lnet/minecraft/network/chat/SignedMessageLink; a
	updateSignature (Lnet/minecraft/util/SignatureUpdater$Output;)V a
net/minecraft/network/chat/SignedMessageValidator wb
	ACCEPT_UNSIGNED b
	LOGGER a
	REJECT_ALL c
net/minecraft/network/chat/SignedMessageValidator$KeyBased wb$a
	expired e
	isChainValid g
	lastMessage f
	validator d
	validate (Lnet/minecraft/network/chat/PlayerChatMessage;)Z b
	validateChain (Lnet/minecraft/network/chat/PlayerChatMessage;)Z a
net/minecraft/network/chat/Style wc
	DEFAULT_FONT b
	EMPTY a
	bold d
	clickEvent i
	color c
	font l
	hoverEvent j
	insertion k
	italic e
	obfuscated h
	strikethrough g
	underlined f
	applyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; b
	applyFormats ([Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; a
	applyLegacyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; c
	applyTo (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/Style; a
	checkEmptyAfterChange (Lnet/minecraft/network/chat/Style;Ljava/lang/Object;Ljava/lang/Object;)Lnet/minecraft/network/chat/Style; a
	create (Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/network/chat/Style; a
	getClickEvent ()Lnet/minecraft/network/chat/ClickEvent; h
	getColor ()Lnet/minecraft/network/chat/TextColor; a
	getFont ()Lnet/minecraft/resources/ResourceLocation; k
	getHoverEvent ()Lnet/minecraft/network/chat/HoverEvent; i
	getInsertion ()Ljava/lang/String; j
	isBold ()Z b
	isEmpty ()Z g
	isItalic ()Z c
	isObfuscated ()Z f
	isStrikethrough ()Z d
	isUnderlined ()Z e
	withBold (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; a
	withClickEvent (Lnet/minecraft/network/chat/ClickEvent;)Lnet/minecraft/network/chat/Style; a
	withColor (I)Lnet/minecraft/network/chat/Style; a
	withColor (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; a
	withColor (Lnet/minecraft/network/chat/TextColor;)Lnet/minecraft/network/chat/Style; a
	withFont (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/network/chat/Style; a
	withHoverEvent (Lnet/minecraft/network/chat/HoverEvent;)Lnet/minecraft/network/chat/Style; a
	withInsertion (Ljava/lang/String;)Lnet/minecraft/network/chat/Style; a
	withItalic (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; b
	withObfuscated (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; e
	withStrikethrough (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; d
	withUnderlined (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; c
net/minecraft/network/chat/Style$Serializer wc$b
	CODEC b
	MAP_CODEC a
net/minecraft/network/chat/SubStringSource wd
	charStyles b
	plainText a
	reverseCharModifier c
	create (Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/network/chat/SubStringSource; a
	create (Lnet/minecraft/network/chat/FormattedText;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Ljava/util/function/UnaryOperator;)Lnet/minecraft/network/chat/SubStringSource; a
	getPlainText ()Ljava/lang/String; a
	substring (IIZ)Ljava/util/List; a
net/minecraft/network/chat/TextColor we
	CODEC a
	CUSTOM_COLOR_PREFIX b
	LEGACY_FORMAT_TO_COLOR c
	NAMED_COLORS d
	name f
	value e
	formatValue ()Ljava/lang/String; c
	fromLegacyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/TextColor; a
	fromRgb (I)Lnet/minecraft/network/chat/TextColor; a
	getValue ()I a
	parseColor (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; a
	serialize ()Ljava/lang/String; b
net/minecraft/network/chat/ThrowingComponent wf
	component a
	getComponent ()Lnet/minecraft/network/chat/Component; b
net/minecraft/network/chat/contents/BlockDataSource wg
	SUB_CODEC a
	TYPE b
	compiledPos e
	posPattern d
	compilePos (Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	compiledPos ()Lnet/minecraft/commands/arguments/coordinates/Coordinates; c
	getData (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/stream/Stream; a
	posPattern ()Ljava/lang/String; b
	type ()Lnet/minecraft/network/chat/contents/DataSource$Type; a
net/minecraft/network/chat/contents/DataSource wh
	CODEC c
	getData (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/stream/Stream; a
	type ()Lnet/minecraft/network/chat/contents/DataSource$Type; a
net/minecraft/network/chat/contents/DataSource$Type wh$a
	codec a
	id b
	codec ()Lcom/mojang/serialization/MapCodec; a
	getSerializedName ()Ljava/lang/String; c
	id ()Ljava/lang/String; b
net/minecraft/network/chat/contents/EntityDataSource wi
	SUB_CODEC a
	TYPE b
	compiledSelector e
	selectorPattern d
	compileSelector (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	compiledSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; c
	getData (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/stream/Stream; a
	selectorPattern ()Ljava/lang/String; b
	type ()Lnet/minecraft/network/chat/contents/DataSource$Type; a
net/minecraft/network/chat/contents/KeybindContents wj
	CODEC a
	TYPE b
	name c
	nameResolver d
	getName ()Ljava/lang/String; b
	getNestedComponent ()Lnet/minecraft/network/chat/Component; c
	type ()Lnet/minecraft/network/chat/ComponentContents$Type; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/contents/KeybindResolver wk
	keyResolver a
	setKeyResolver (Ljava/util/function/Function;)V a
net/minecraft/network/chat/contents/NbtContents wl
	CODEC a
	LOGGER d
	TYPE b
	compiledNbtPath c
	dataSource h
	interpreting e
	nbtPathPattern g
	separator f
	compileNbtPath (Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	getDataSource ()Lnet/minecraft/network/chat/contents/DataSource; e
	getNbtPath ()Ljava/lang/String; b
	getSeparator ()Ljava/util/Optional; d
	isInterpreting ()Z c
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	type ()Lnet/minecraft/network/chat/ComponentContents$Type; a
net/minecraft/network/chat/contents/PlainTextContents wm
	CODEC a
	EMPTY c
	TYPE b
	create (Ljava/lang/String;)Lnet/minecraft/network/chat/contents/PlainTextContents; a
	text ()Ljava/lang/String; b
	type ()Lnet/minecraft/network/chat/ComponentContents$Type; a
net/minecraft/network/chat/contents/PlainTextContents$LiteralContents wm$a
	text d
	text ()Ljava/lang/String; b
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/contents/ScoreContents wn
	CODEC b
	INNER_CODEC a
	TYPE c
	name d
	objective f
	selector e
	findTargetName (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/scores/ScoreHolder; a
	getName ()Ljava/lang/String; b
	getObjective ()Ljava/lang/String; d
	getScore (Lnet/minecraft/world/scores/ScoreHolder;Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/network/chat/MutableComponent; a
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; c
	parseSelector (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	type ()Lnet/minecraft/network/chat/ComponentContents$Type; a
net/minecraft/network/chat/contents/SelectorContents wo
	CODEC a
	LOGGER d
	TYPE b
	pattern e
	selector f
	separator c
	getPattern ()Ljava/lang/String; b
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; c
	getSeparator ()Ljava/util/Optional; d
	parseSelector (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	type ()Lnet/minecraft/network/chat/ComponentContents$Type; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/contents/StorageDataSource wp
	SUB_CODEC a
	TYPE b
	id d
	getData (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/stream/Stream; a
	id ()Lnet/minecraft/resources/ResourceLocation; b
	type ()Lnet/minecraft/network/chat/contents/DataSource$Type; a
net/minecraft/network/chat/contents/TranslatableContents wq
	ARG_CODEC e
	CODEC b
	FORMAT_PATTERN m
	NO_ARGS a
	PRIMITIVE_ARG_CODEC d
	TEXT_NULL g
	TEXT_PERCENT f
	TYPE c
	args j
	decomposedParts l
	decomposedWith k
	fallback i
	key h
	adjustArgs (Ljava/util/Optional;)[Ljava/lang/Object; a
	adjustArgs ([Ljava/lang/Object;)Ljava/util/Optional; a
	create (Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/network/chat/contents/TranslatableContents; a
	decompose ()V e
	decomposeTemplate (Ljava/lang/String;Ljava/util/function/Consumer;)V a
	filterAllowedArguments (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; b
	getArgs ()[Ljava/lang/Object; d
	getArgument (I)Lnet/minecraft/network/chat/FormattedText; a
	getFallback ()Ljava/lang/String; c
	getKey ()Ljava/lang/String; b
	isAllowedPrimitiveArgument (Ljava/lang/Object;)Z a
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	type ()Lnet/minecraft/network/chat/ComponentContents$Type; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/contents/TranslatableFormatException wr
net/minecraft/network/chat/numbers/BlankFormat wt
	INSTANCE a
	TYPE b
	format (I)Lnet/minecraft/network/chat/MutableComponent; a
	type ()Lnet/minecraft/network/chat/numbers/NumberFormatType; a
net/minecraft/network/chat/numbers/FixedFormat wu
	TYPE a
	value b
	format (I)Lnet/minecraft/network/chat/MutableComponent; a
	type ()Lnet/minecraft/network/chat/numbers/NumberFormatType; a
net/minecraft/network/chat/numbers/NumberFormat wv
	format (I)Lnet/minecraft/network/chat/MutableComponent; a
	type ()Lnet/minecraft/network/chat/numbers/NumberFormatType; a
net/minecraft/network/chat/numbers/NumberFormatType ww
	mapCodec ()Lcom/mojang/serialization/MapCodec; a
	readFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/chat/numbers/NumberFormat; b
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/chat/numbers/NumberFormat;)V a
net/minecraft/network/chat/numbers/NumberFormatTypes wx
	CODEC b
	MAP_CODEC a
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/network/chat/numbers/NumberFormatType; a
	readFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/chat/numbers/NumberFormat; a
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/chat/numbers/NumberFormat;)V a
net/minecraft/network/chat/numbers/StyledFormat wy
	NO_STYLE b
	PLAYER_LIST_DEFAULT d
	SIDEBAR_DEFAULT c
	TYPE a
	style e
	format (I)Lnet/minecraft/network/chat/MutableComponent; a
	type ()Lnet/minecraft/network/chat/numbers/NumberFormatType; a
net/minecraft/network/protocol/BundleDelimiterPacket xc
	handle (Lnet/minecraft/network/PacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/BundlePacket xd
	packets a
	subPackets ()Ljava/lang/Iterable; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/BundlerInfo xe
	BUNDLE_SIZE_LIMIT a
	EMPTY b
	createForPacket (Ljava/lang/Class;Ljava/util/function/Function;Lnet/minecraft/network/protocol/BundleDelimiterPacket;)Lnet/minecraft/network/protocol/BundlerInfo; a
	startPacketBundling (Lnet/minecraft/network/protocol/Packet;)Lnet/minecraft/network/protocol/BundlerInfo$Bundler; a
	unbundlePacket (Lnet/minecraft/network/protocol/Packet;Ljava/util/function/Consumer;)V a
net/minecraft/network/protocol/BundlerInfo$Bundler xe$a
	addPacket (Lnet/minecraft/network/protocol/Packet;)Lnet/minecraft/network/protocol/Packet; a
net/minecraft/network/protocol/BundlerInfo$Provider xe$b
	bundlerInfo ()Lnet/minecraft/network/protocol/BundlerInfo; c
net/minecraft/network/protocol/Packet xf
	handle (Lnet/minecraft/network/PacketListener;)V a
	isSkippable ()Z b
	nextProtocol ()Lnet/minecraft/network/ConnectionProtocol; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/PacketFlow xg
	$VALUES c
	CLIENTBOUND b
	SERVERBOUND a
	$values ()[Lnet/minecraft/network/protocol/PacketFlow; b
	getOpposite ()Lnet/minecraft/network/protocol/PacketFlow; a
net/minecraft/network/protocol/PacketUtils xh
	LOGGER a
	ensureRunningOnSameThread (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;Lnet/minecraft/server/level/ServerLevel;)V a
	ensureRunningOnSameThread (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;Lnet/minecraft/util/thread/BlockableEventLoop;)V a
net/minecraft/network/protocol/common/ClientCommonPacketListener xi
	handleCustomPayload (Lnet/minecraft/network/protocol/common/ClientboundCustomPayloadPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/common/ClientboundDisconnectPacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/common/ClientboundKeepAlivePacket;)V a
	handlePing (Lnet/minecraft/network/protocol/common/ClientboundPingPacket;)V a
	handleResourcePackPop (Lnet/minecraft/network/protocol/common/ClientboundResourcePackPopPacket;)V a
	handleResourcePackPush (Lnet/minecraft/network/protocol/common/ClientboundResourcePackPushPacket;)V a
	handleUpdateTags (Lnet/minecraft/network/protocol/common/ClientboundUpdateTagsPacket;)V a
net/minecraft/network/protocol/common/ClientboundCustomPayloadPacket xj
	KNOWN_TYPES c
	MAX_PAYLOAD_SIZE b
	payload a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/common/ClientCommonPacketListener;)V a
	payload ()Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload; a
	readPayload (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload; a
	readUnknownPayload (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/common/custom/DiscardedPayload; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/ClientboundDisconnectPacket xk
	reason a
	getReason ()Lnet/minecraft/network/chat/Component; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/common/ClientCommonPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/ClientboundKeepAlivePacket xl
	id a
	getId ()J a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/common/ClientCommonPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/ClientboundPingPacket xm
	id a
	getId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/common/ClientCommonPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/ClientboundResourcePackPopPacket xn
	id a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/common/ClientCommonPacketListener;)V a
	id ()Ljava/util/Optional; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/ClientboundResourcePackPushPacket xo
	MAX_HASH_LENGTH a
	hash d
	id b
	prompt f
	required e
	url c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/common/ClientCommonPacketListener;)V a
	hash ()Ljava/lang/String; e
	id ()Ljava/util/UUID; a
	prompt ()Lnet/minecraft/network/chat/Component; g
	required ()Z f
	url ()Ljava/lang/String; d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/ClientboundUpdateTagsPacket xp
	tags a
	getTags ()Ljava/util/Map; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/common/ClientCommonPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/ServerCommonPacketListener xq
	handleClientInformation (Lnet/minecraft/network/protocol/common/ServerboundClientInformationPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/common/ServerboundCustomPayloadPacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/common/ServerboundKeepAlivePacket;)V a
	handlePong (Lnet/minecraft/network/protocol/common/ServerboundPongPacket;)V a
	handleResourcePackResponse (Lnet/minecraft/network/protocol/common/ServerboundResourcePackPacket;)V a
net/minecraft/network/protocol/common/ServerboundClientInformationPacket xr
	information a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/common/ServerCommonPacketListener;)V a
	information ()Lnet/minecraft/server/level/ClientInformation; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/ServerboundCustomPayloadPacket xs
	KNOWN_TYPES c
	MAX_PAYLOAD_SIZE b
	payload a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/common/ServerCommonPacketListener;)V a
	payload ()Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload; a
	readPayload (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload; a
	readUnknownPayload (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/common/custom/DiscardedPayload; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/ServerboundKeepAlivePacket xt
	id a
	getId ()J a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/common/ServerCommonPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/ServerboundPongPacket xu
	id a
	getId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/common/ServerCommonPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/ServerboundResourcePackPacket xv
	action b
	id a
	action ()Lnet/minecraft/network/protocol/common/ServerboundResourcePackPacket$Action; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/common/ServerCommonPacketListener;)V a
	id ()Ljava/util/UUID; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/ServerboundResourcePackPacket$Action xv$a
	$VALUES i
	ACCEPTED d
	DECLINED b
	DISCARDED h
	DOWNLOADED e
	FAILED_DOWNLOAD c
	FAILED_RELOAD g
	INVALID_URL f
	SUCCESSFULLY_LOADED a
	$values ()[Lnet/minecraft/network/protocol/common/ServerboundResourcePackPacket$Action; b
	isTerminal ()Z a
net/minecraft/network/protocol/common/custom/BeeDebugPayload xw
	ID a
	beeInfo b
	beeInfo ()Lnet/minecraft/network/protocol/common/custom/BeeDebugPayload$BeeInfo; b
	id ()Lnet/minecraft/resources/ResourceLocation; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/BeeDebugPayload$BeeInfo xw$a
	blacklistedHives i
	flowerPos f
	goals h
	hivePos e
	id b
	path d
	pos c
	travelTicks g
	uuid a
	blacklistedHives ()Ljava/util/List; j
	flowerPos ()Lnet/minecraft/core/BlockPos; g
	generateName ()Ljava/lang/String; a
	goals ()Ljava/util/Set; i
	hasHive (Lnet/minecraft/core/BlockPos;)Z a
	hivePos ()Lnet/minecraft/core/BlockPos; f
	id ()I c
	path ()Lnet/minecraft/world/level/pathfinder/Path; e
	pos ()Lnet/minecraft/world/phys/Vec3; d
	travelTicks ()I h
	uuid ()Ljava/util/UUID; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/BrainDebugPayload xx
	ID a
	brainDump b
	brainDump ()Lnet/minecraft/network/protocol/common/custom/BrainDebugPayload$BrainDump; b
	id ()Lnet/minecraft/resources/ResourceLocation; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/BrainDebugPayload$BrainDump xx$a
	activities m
	angerLevel l
	behaviors n
	gossips p
	health f
	id b
	inventory i
	maxHealth g
	memories o
	name c
	path j
	pois q
	pos h
	potentialPois r
	profession d
	uuid a
	wantsGolem k
	xp e
	activities ()Ljava/util/List; m
	angerLevel ()I l
	behaviors ()Ljava/util/List; n
	gossips ()Ljava/util/List; p
	hasPoi (Lnet/minecraft/core/BlockPos;)Z a
	hasPotentialPoi (Lnet/minecraft/core/BlockPos;)Z b
	health ()F f
	id ()I b
	inventory ()Ljava/lang/String; i
	maxHealth ()F g
	memories ()Ljava/util/List; o
	name ()Ljava/lang/String; c
	path ()Lnet/minecraft/world/level/pathfinder/Path; j
	pois ()Ljava/util/Set; q
	pos ()Lnet/minecraft/world/phys/Vec3; h
	potentialPois ()Ljava/util/Set; r
	profession ()Ljava/lang/String; d
	uuid ()Ljava/util/UUID; a
	wantsGolem ()Z k
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
	xp ()I e
net/minecraft/network/protocol/common/custom/BrandPayload xy
	ID a
	brand b
	brand ()Ljava/lang/String; b
	id ()Lnet/minecraft/resources/ResourceLocation; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/BreezeDebugPayload xz
	ID a
	breezeInfo b
	breezeInfo ()Lnet/minecraft/network/protocol/common/custom/BreezeDebugPayload$BreezeInfo; b
	id ()Lnet/minecraft/resources/ResourceLocation; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/BreezeDebugPayload$BreezeInfo xz$a
	attackTarget c
	id b
	jumpTarget d
	uuid a
	attackTarget ()Ljava/lang/Integer; d
	generateName ()Ljava/lang/String; a
	id ()I c
	jumpTarget ()Lnet/minecraft/core/BlockPos; e
	uuid ()Ljava/util/UUID; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/CustomPacketPayload ya
	id ()Lnet/minecraft/resources/ResourceLocation; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/DiscardedPayload yb
	id a
	id ()Lnet/minecraft/resources/ResourceLocation; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/GameEventDebugPayload yc
	ID a
	pos c
	type b
	id ()Lnet/minecraft/resources/ResourceLocation; a
	pos ()Lnet/minecraft/world/phys/Vec3; c
	type ()Lnet/minecraft/resources/ResourceKey; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/GameEventListenerDebugPayload yd
	ID a
	listenerPos b
	listenerRange c
	id ()Lnet/minecraft/resources/ResourceLocation; a
	listenerPos ()Lnet/minecraft/world/level/gameevent/PositionSource; b
	listenerRange ()I c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/GameTestAddMarkerDebugPayload ye
	ID a
	color c
	durationMs e
	pos b
	text d
	color ()I c
	durationMs ()I e
	id ()Lnet/minecraft/resources/ResourceLocation; a
	pos ()Lnet/minecraft/core/BlockPos; b
	text ()Ljava/lang/String; d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/GameTestClearMarkersDebugPayload yf
	ID a
	id ()Lnet/minecraft/resources/ResourceLocation; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/GoalDebugPayload yg
	ID a
	entityId b
	goals d
	pos c
	entityId ()I b
	goals ()Ljava/util/List; d
	id ()Lnet/minecraft/resources/ResourceLocation; a
	pos ()Lnet/minecraft/core/BlockPos; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/GoalDebugPayload$DebugGoal yg$a
	isRunning b
	name c
	priority a
	isRunning ()Z b
	name ()Ljava/lang/String; c
	priority ()I a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/HiveDebugPayload yh
	ID a
	hiveInfo b
	hiveInfo ()Lnet/minecraft/network/protocol/common/custom/HiveDebugPayload$HiveInfo; b
	id ()Lnet/minecraft/resources/ResourceLocation; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/HiveDebugPayload$HiveInfo yh$a
	hiveType b
	honeyLevel d
	occupantCount c
	pos a
	sedated e
	hiveType ()Ljava/lang/String; b
	honeyLevel ()I d
	occupantCount ()I c
	pos ()Lnet/minecraft/core/BlockPos; a
	sedated ()Z e
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/NeighborUpdatesDebugPayload yi
	ID a
	pos c
	time b
	id ()Lnet/minecraft/resources/ResourceLocation; a
	pos ()Lnet/minecraft/core/BlockPos; c
	time ()J b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/PathfindingDebugPayload yj
	ID a
	entityId b
	maxNodeDistance d
	path c
	entityId ()I b
	id ()Lnet/minecraft/resources/ResourceLocation; a
	maxNodeDistance ()F d
	path ()Lnet/minecraft/world/level/pathfinder/Path; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/PoiAddedDebugPayload yk
	ID a
	freeTicketCount d
	pos b
	type c
	freeTicketCount ()I d
	id ()Lnet/minecraft/resources/ResourceLocation; a
	pos ()Lnet/minecraft/core/BlockPos; b
	type ()Ljava/lang/String; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/PoiRemovedDebugPayload yl
	ID a
	pos b
	id ()Lnet/minecraft/resources/ResourceLocation; a
	pos ()Lnet/minecraft/core/BlockPos; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/PoiTicketCountDebugPayload ym
	ID a
	freeTicketCount c
	pos b
	freeTicketCount ()I c
	id ()Lnet/minecraft/resources/ResourceLocation; a
	pos ()Lnet/minecraft/core/BlockPos; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/RaidsDebugPayload yn
	ID a
	raidCenters b
	id ()Lnet/minecraft/resources/ResourceLocation; a
	raidCenters ()Ljava/util/List; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/StructuresDebugPayload yo
	ID a
	dimension b
	mainBB c
	pieces d
	dimension ()Lnet/minecraft/resources/ResourceKey; b
	id ()Lnet/minecraft/resources/ResourceLocation; a
	mainBB ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; c
	pieces ()Ljava/util/List; d
	readBoundingBox (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeBoundingBox (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
net/minecraft/network/protocol/common/custom/StructuresDebugPayload$PieceInfo yo$a
	boundingBox a
	isStart b
	boundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	isStart ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/VillageSectionsDebugPayload yp
	ID a
	notVillageChunks c
	villageChunks b
	id ()Lnet/minecraft/resources/ResourceLocation; a
	notVillageChunks ()Ljava/util/Set; c
	villageChunks ()Ljava/util/Set; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/common/custom/WorldGenAttemptDebugPayload yq
	ID a
	alpha g
	blue f
	green e
	pos b
	red d
	scale c
	alpha ()F g
	blue ()F f
	green ()F e
	id ()Lnet/minecraft/resources/ResourceLocation; a
	pos ()Lnet/minecraft/core/BlockPos; b
	red ()F d
	scale ()F c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/configuration/ClientConfigurationPacketListener yt
	handleConfigurationFinished (Lnet/minecraft/network/protocol/configuration/ClientboundFinishConfigurationPacket;)V a
	handleEnabledFeatures (Lnet/minecraft/network/protocol/configuration/ClientboundUpdateEnabledFeaturesPacket;)V a
	handleRegistryData (Lnet/minecraft/network/protocol/configuration/ClientboundRegistryDataPacket;)V a
	protocol ()Lnet/minecraft/network/ConnectionProtocol; b
net/minecraft/network/protocol/configuration/ClientboundFinishConfigurationPacket yu
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/configuration/ClientConfigurationPacketListener;)V a
	nextProtocol ()Lnet/minecraft/network/ConnectionProtocol; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/configuration/ClientboundRegistryDataPacket yv
	BUILTIN_CONTEXT_OPS b
	registryHolder a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/configuration/ClientConfigurationPacketListener;)V a
	registryHolder ()Lnet/minecraft/core/RegistryAccess$Frozen; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/configuration/ClientboundUpdateEnabledFeaturesPacket yw
	features a
	features ()Ljava/util/Set; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/configuration/ClientConfigurationPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/configuration/ServerConfigurationPacketListener yx
	handleConfigurationFinished (Lnet/minecraft/network/protocol/configuration/ServerboundFinishConfigurationPacket;)V a
	protocol ()Lnet/minecraft/network/ConnectionProtocol; b
net/minecraft/network/protocol/configuration/ServerboundFinishConfigurationPacket yy
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/configuration/ServerConfigurationPacketListener;)V a
	nextProtocol ()Lnet/minecraft/network/ConnectionProtocol; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientGamePacketListener za
	handleAddEntity (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	handleAddExperienceOrb (Lnet/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket;)V a
	handleAddObjective (Lnet/minecraft/network/protocol/game/ClientboundSetObjectivePacket;)V a
	handleAddOrRemoveRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ClientboundAnimatePacket;)V a
	handleAwardStats (Lnet/minecraft/network/protocol/game/ClientboundAwardStatsPacket;)V a
	handleBlockChangedAck (Lnet/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket;)V a
	handleBlockDestruction (Lnet/minecraft/network/protocol/game/ClientboundBlockDestructionPacket;)V a
	handleBlockEntityData (Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket;)V a
	handleBlockEvent (Lnet/minecraft/network/protocol/game/ClientboundBlockEventPacket;)V a
	handleBlockUpdate (Lnet/minecraft/network/protocol/game/ClientboundBlockUpdatePacket;)V a
	handleBossUpdate (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
	handleBundlePacket (Lnet/minecraft/network/protocol/game/ClientboundBundlePacket;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket;)V a
	handleChunkBatchFinished (Lnet/minecraft/network/protocol/game/ClientboundChunkBatchFinishedPacket;)V a
	handleChunkBatchStart (Lnet/minecraft/network/protocol/game/ClientboundChunkBatchStartPacket;)V a
	handleChunkBlocksUpdate (Lnet/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket;)V a
	handleChunksBiomes (Lnet/minecraft/network/protocol/game/ClientboundChunksBiomesPacket;)V a
	handleCommandSuggestions (Lnet/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket;)V a
	handleCommands (Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket;)V a
	handleConfigurationStart (Lnet/minecraft/network/protocol/game/ClientboundStartConfigurationPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ClientboundContainerClosePacket;)V a
	handleContainerContent (Lnet/minecraft/network/protocol/game/ClientboundContainerSetContentPacket;)V a
	handleContainerSetData (Lnet/minecraft/network/protocol/game/ClientboundContainerSetDataPacket;)V a
	handleContainerSetSlot (Lnet/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket;)V a
	handleCustomChatCompletions (Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket;)V a
	handleDamageEvent (Lnet/minecraft/network/protocol/game/ClientboundDamageEventPacket;)V a
	handleDeleteChat (Lnet/minecraft/network/protocol/game/ClientboundDeleteChatPacket;)V a
	handleDisguisedChat (Lnet/minecraft/network/protocol/game/ClientboundDisguisedChatPacket;)V a
	handleEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundEntityEventPacket;)V a
	handleEntityLinkPacket (Lnet/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket;)V a
	handleExplosion (Lnet/minecraft/network/protocol/game/ClientboundExplodePacket;)V a
	handleForgetLevelChunk (Lnet/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket;)V a
	handleGameEvent (Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket;)V a
	handleHorseScreenOpen (Lnet/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket;)V a
	handleHurtAnimation (Lnet/minecraft/network/protocol/game/ClientboundHurtAnimationPacket;)V a
	handleInitializeBorder (Lnet/minecraft/network/protocol/game/ClientboundInitializeBorderPacket;)V a
	handleItemCooldown (Lnet/minecraft/network/protocol/game/ClientboundCooldownPacket;)V a
	handleLevelChunkWithLight (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket;)V a
	handleLevelEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelEventPacket;)V a
	handleLightUpdatePacket (Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacket;)V a
	handleLogin (Lnet/minecraft/network/protocol/game/ClientboundLoginPacket;)V a
	handleLookAt (Lnet/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket;)V a
	handleMapItemData (Lnet/minecraft/network/protocol/game/ClientboundMapItemDataPacket;)V a
	handleMerchantOffers (Lnet/minecraft/network/protocol/game/ClientboundMerchantOffersPacket;)V a
	handleMoveEntity (Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ClientboundPlayerPositionPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ClientboundMoveVehiclePacket;)V a
	handleOpenBook (Lnet/minecraft/network/protocol/game/ClientboundOpenBookPacket;)V a
	handleOpenScreen (Lnet/minecraft/network/protocol/game/ClientboundOpenScreenPacket;)V a
	handleOpenSignEditor (Lnet/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket;)V a
	handleParticleEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelParticlesPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket;)V a
	handlePlayerChat (Lnet/minecraft/network/protocol/game/ClientboundPlayerChatPacket;)V a
	handlePlayerCombatEnd (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket;)V a
	handlePlayerCombatEnter (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket;)V a
	handlePlayerCombatKill (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket;)V a
	handlePlayerInfoRemove (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoRemovePacket;)V a
	handlePlayerInfoUpdate (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket;)V a
	handleRemoveEntities (Lnet/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket;)V a
	handleRemoveMobEffect (Lnet/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket;)V a
	handleResetScore (Lnet/minecraft/network/protocol/game/ClientboundResetScorePacket;)V a
	handleRespawn (Lnet/minecraft/network/protocol/game/ClientboundRespawnPacket;)V a
	handleRotateMob (Lnet/minecraft/network/protocol/game/ClientboundRotateHeadPacket;)V a
	handleSelectAdvancementsTab (Lnet/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket;)V a
	handleServerData (Lnet/minecraft/network/protocol/game/ClientboundServerDataPacket;)V a
	handleSetBorderCenter (Lnet/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket;)V a
	handleSetBorderLerpSize (Lnet/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket;)V a
	handleSetBorderSize (Lnet/minecraft/network/protocol/game/ClientboundSetBorderSizePacket;)V a
	handleSetBorderWarningDelay (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket;)V a
	handleSetBorderWarningDistance (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket;)V a
	handleSetCamera (Lnet/minecraft/network/protocol/game/ClientboundSetCameraPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket;)V a
	handleSetChunkCacheCenter (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket;)V a
	handleSetChunkCacheRadius (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket;)V a
	handleSetDisplayObjective (Lnet/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket;)V a
	handleSetEntityData (Lnet/minecraft/network/protocol/game/ClientboundSetEntityDataPacket;)V a
	handleSetEntityMotion (Lnet/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket;)V a
	handleSetEntityPassengersPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPassengersPacket;)V a
	handleSetEquipment (Lnet/minecraft/network/protocol/game/ClientboundSetEquipmentPacket;)V a
	handleSetExperience (Lnet/minecraft/network/protocol/game/ClientboundSetExperiencePacket;)V a
	handleSetHealth (Lnet/minecraft/network/protocol/game/ClientboundSetHealthPacket;)V a
	handleSetPlayerTeamPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket;)V a
	handleSetScore (Lnet/minecraft/network/protocol/game/ClientboundSetScorePacket;)V a
	handleSetSimulationDistance (Lnet/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket;)V a
	handleSetSpawn (Lnet/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket;)V a
	handleSetTime (Lnet/minecraft/network/protocol/game/ClientboundSetTimePacket;)V a
	handleSoundEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundEntityPacket;)V a
	handleSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundPacket;)V a
	handleStopSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundStopSoundPacket;)V a
	handleSystemChat (Lnet/minecraft/network/protocol/game/ClientboundSystemChatPacket;)V a
	handleTabListCustomisation (Lnet/minecraft/network/protocol/game/ClientboundTabListPacket;)V a
	handleTagQueryPacket (Lnet/minecraft/network/protocol/game/ClientboundTagQueryPacket;)V a
	handleTakeItemEntity (Lnet/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket;)V a
	handleTeleportEntity (Lnet/minecraft/network/protocol/game/ClientboundTeleportEntityPacket;)V a
	handleTickingState (Lnet/minecraft/network/protocol/game/ClientboundTickingStatePacket;)V a
	handleTickingStep (Lnet/minecraft/network/protocol/game/ClientboundTickingStepPacket;)V a
	handleTitlesClear (Lnet/minecraft/network/protocol/game/ClientboundClearTitlesPacket;)V a
	handleUpdateAdvancementsPacket (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
	handleUpdateAttributes (Lnet/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket;)V a
	handleUpdateMobEffect (Lnet/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket;)V a
	handleUpdateRecipes (Lnet/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket;)V a
	protocol ()Lnet/minecraft/network/ConnectionProtocol; b
	setActionBarText (Lnet/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket;)V a
	setSubtitleText (Lnet/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket;)V a
	setTitleText (Lnet/minecraft/network/protocol/game/ClientboundSetTitleTextPacket;)V a
	setTitlesAnimation (Lnet/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket;)V a
net/minecraft/network/protocol/game/ClientboundAddEntityPacket zb
	LIMIT b
	MAGICAL_QUANTIZATION a
	data o
	id c
	type e
	uuid d
	x f
	xRot l
	xa i
	y g
	yHeadRot n
	yRot m
	ya j
	z h
	za k
	getData ()I o
	getId ()I a
	getType ()Lnet/minecraft/world/entity/EntityType; e
	getUUID ()Ljava/util/UUID; d
	getX ()D f
	getXRot ()F l
	getXa ()D i
	getY ()D g
	getYHeadRot ()F n
	getYRot ()F m
	getYa ()D j
	getZ ()D h
	getZa ()D k
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket zc
	id a
	value e
	x b
	y c
	z d
	getId ()I a
	getValue ()I g
	getX ()D d
	getY ()D e
	getZ ()D f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAnimatePacket zd
	CRITICAL_HIT d
	MAGIC_CRITICAL_HIT e
	SWING_MAIN_HAND a
	SWING_OFF_HAND c
	WAKE_UP b
	action g
	id f
	getAction ()I d
	getId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAwardStatsPacket ze
	stats a
	getStats ()Ljava/util/Map; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	readStatCap (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/stats/StatType;)Lnet/minecraft/stats/Stat; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeStatCap (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/stats/Stat;)V a
net/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket zf
	sequence a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	sequence ()I a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockDestructionPacket zg
	id a
	pos b
	progress c
	getId ()I a
	getPos ()Lnet/minecraft/core/BlockPos; d
	getProgress ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket zh
	pos a
	tag c
	type b
	create (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	create (Lnet/minecraft/world/level/block/entity/BlockEntity;Ljava/util/function/Function;)Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getPos ()Lnet/minecraft/core/BlockPos; a
	getTag ()Lnet/minecraft/nbt/CompoundTag; e
	getType ()Lnet/minecraft/world/level/block/entity/BlockEntityType; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockEventPacket zi
	b0 b
	b1 c
	block d
	pos a
	getB0 ()I d
	getB1 ()I e
	getBlock ()Lnet/minecraft/world/level/block/Block; f
	getPos ()Lnet/minecraft/core/BlockPos; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket zj
	blockState b
	pos a
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; a
	getPos ()Lnet/minecraft/core/BlockPos; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket zk
	FLAG_DARKEN a
	FLAG_FOG c
	FLAG_MUSIC b
	REMOVE_OPERATION f
	id d
	operation e
	createAddPacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; a
	createRemovePacket (Ljava/util/UUID;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; a
	createUpdateNamePacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; c
	createUpdateProgressPacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; b
	createUpdatePropertiesPacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; e
	createUpdateStylePacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; d
	dispatch (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	encodeProperties (ZZZ)I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$AddOperation zk$a
	color c
	createWorldFog g
	darkenScreen e
	name a
	overlay d
	playMusic f
	progress b
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler zk$b
	add (Ljava/util/UUID;Lnet/minecraft/network/chat/Component;FLnet/minecraft/world/BossEvent$BossBarColor;Lnet/minecraft/world/BossEvent$BossBarOverlay;ZZZ)V a
	remove (Ljava/util/UUID;)V a
	updateName (Ljava/util/UUID;Lnet/minecraft/network/chat/Component;)V a
	updateProgress (Ljava/util/UUID;F)V a
	updateProperties (Ljava/util/UUID;ZZZ)V a
	updateStyle (Ljava/util/UUID;Lnet/minecraft/world/BossEvent$BossBarColor;Lnet/minecraft/world/BossEvent$BossBarOverlay;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation zk$c
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType zk$d
	$VALUES h
	ADD a
	REMOVE b
	UPDATE_NAME d
	UPDATE_PROGRESS c
	UPDATE_PROPERTIES f
	UPDATE_STYLE e
	reader g
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateNameOperation zk$e
	name a
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateProgressOperation zk$f
	progress a
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdatePropertiesOperation zk$g
	createWorldFog c
	darkenScreen a
	playMusic b
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateStyleOperation zk$h
	color a
	overlay b
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBundlePacket zl
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
net/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket zm
	difficulty a
	locked b
	getDifficulty ()Lnet/minecraft/world/Difficulty; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isLocked ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundChunkBatchFinishedPacket zn
	batchSize a
	batchSize ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundChunkBatchStartPacket zo
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket zp
	TWO_MEGABYTES b
	chunkBiomeData a
	chunkBiomeData ()Ljava/util/List; a
	forChunks (Ljava/util/List;)Lnet/minecraft/network/protocol/game/ClientboundChunksBiomesPacket; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket$ChunkBiomeData zp$a
	buffer b
	pos a
	buffer ()[B c
	calculateChunkSize (Lnet/minecraft/world/level/chunk/LevelChunk;)I a
	extractChunkData (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	getReadBuffer ()Lnet/minecraft/network/FriendlyByteBuf; a
	getWriteBuffer ()Lio/netty/buffer/ByteBuf; d
	pos ()Lnet/minecraft/world/level/ChunkPos; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundClearTitlesPacket zq
	resetTimes a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	shouldResetTimes ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket zr
	id a
	suggestions b
	getId ()I a
	getSuggestions ()Lcom/mojang/brigadier/suggestion/Suggestions; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket zs
	FLAG_CUSTOM_SUGGESTIONS d
	FLAG_EXECUTABLE b
	FLAG_REDIRECT c
	MASK_TYPE a
	TYPE_ARGUMENT g
	TYPE_LITERAL f
	TYPE_ROOT e
	entries i
	rootIndex h
	createEntries (Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Ljava/util/List; a
	createEntry (Lcom/mojang/brigadier/tree/CommandNode;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry; a
	enumerateNodes (Lcom/mojang/brigadier/tree/RootCommandNode;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; a
	getRoot (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/tree/RootCommandNode; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;B)Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeStub; a
	readNode (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry; b
	validateEntries (Ljava/util/List;)V a
	validateEntries (Ljava/util/List;Ljava/util/function/BiPredicate;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket$ArgumentNodeStub zs$a
	argumentType b
	id a
	suggestionId c
	build (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	getSuggestionId (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lnet/minecraft/resources/ResourceLocation; a
	serializeCap (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;)V a
	serializeCap (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry zs$b
	children d
	flags b
	redirect c
	stub a
	canBuild (Lit/unimi/dsi/fastutil/ints/IntSet;)Z a
	canResolve (Lit/unimi/dsi/fastutil/ints/IntSet;)Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket$LiteralNodeStub zs$c
	id a
	build (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeResolver zs$d
	context a
	entries b
	nodes c
	resolve (I)Lcom/mojang/brigadier/tree/CommandNode; a
net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeStub zs$e
	build (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundContainerClosePacket zt
	containerId a
	getContainerId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket zu
	carriedItem d
	containerId a
	items c
	stateId b
	getCarriedItem ()Lnet/minecraft/world/item/ItemStack; e
	getContainerId ()I a
	getItems ()Ljava/util/List; d
	getStateId ()I f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundContainerSetDataPacket zv
	containerId a
	id b
	value c
	getContainerId ()I a
	getId ()I d
	getValue ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket zw
	CARRIED_ITEM a
	PLAYER_INVENTORY b
	containerId c
	itemStack f
	slot e
	stateId d
	getContainerId ()I a
	getItem ()Lnet/minecraft/world/item/ItemStack; e
	getSlot ()I d
	getStateId ()I f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCooldownPacket zx
	duration b
	item a
	getDuration ()I d
	getItem ()Lnet/minecraft/world/item/Item; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket zy
	action a
	entries b
	action ()Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action; a
	entries ()Ljava/util/List; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action zy$a
	$VALUES d
	ADD a
	REMOVE b
	SET c
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action; a
net/minecraft/network/protocol/game/ClientboundDamageEventPacket zz
	entityId a
	sourceCauseId c
	sourceDirectId d
	sourcePosition e
	sourceTypeId b
	entityId ()I a
	getSource (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/damagesource/DamageSource; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	readOptionalEntityId (Lnet/minecraft/network/FriendlyByteBuf;)I b
	sourceCauseId ()I e
	sourceDirectId ()I f
	sourcePosition ()Ljava/util/Optional; g
	sourceTypeId ()I d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeOptionalEntityId (Lnet/minecraft/network/FriendlyByteBuf;I)V a
net/minecraft/network/protocol/game/ClientboundDeleteChatPacket aaa
	messageSignature a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	messageSignature ()Lnet/minecraft/network/chat/MessageSignature$Packed; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundDisguisedChatPacket aab
	chatType b
	message a
	chatType ()Lnet/minecraft/network/chat/ChatType$BoundNetwork; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z b
	message ()Lnet/minecraft/network/chat/Component; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundEntityEventPacket aac
	entityId a
	eventId b
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getEventId ()B a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundExplodePacket aad
	blockInteraction k
	explosionSound l
	knockbackX f
	knockbackY g
	knockbackZ h
	largeExplosionParticles j
	power d
	smallExplosionParticles i
	toBlow e
	x a
	y b
	z c
	getBlockInteraction ()Lnet/minecraft/world/level/Explosion$BlockInteraction; k
	getExplosionSound ()Lnet/minecraft/sounds/SoundEvent; n
	getKnockbackX ()F a
	getKnockbackY ()F d
	getKnockbackZ ()F e
	getLargeExplosionParticles ()Lnet/minecraft/core/particles/ParticleOptions; m
	getPower ()F i
	getSmallExplosionParticles ()Lnet/minecraft/core/particles/ParticleOptions; l
	getToBlow ()Ljava/util/List; j
	getX ()D f
	getY ()D g
	getZ ()D h
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	readParticle (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/core/particles/ParticleType;)Lnet/minecraft/core/particles/ParticleOptions; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeParticle (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/core/particles/ParticleOptions;)V a
net/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket aae
	pos a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	pos ()Lnet/minecraft/world/level/ChunkPos; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundGameEventPacket aaf
	ARROW_HIT_PLAYER g
	CHANGE_GAME_MODE d
	DEMO_EVENT f
	DEMO_PARAM_HINT_1 p
	DEMO_PARAM_HINT_2 q
	DEMO_PARAM_HINT_3 r
	DEMO_PARAM_HINT_4 s
	DEMO_PARAM_INTRO o
	GUARDIAN_ELDER_EFFECT k
	IMMEDIATE_RESPAWN l
	LEVEL_CHUNKS_LOAD_START n
	LIMITED_CRAFTING m
	NO_RESPAWN_BLOCK_AVAILABLE a
	PUFFER_FISH_STING j
	RAIN_LEVEL_CHANGE h
	START_RAINING b
	STOP_RAINING c
	THUNDER_LEVEL_CHANGE i
	WIN_GAME e
	event t
	param u
	getEvent ()Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket$Type; a
	getParam ()F d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundGameEventPacket$Type aaf$a
	TYPES a
	id b
net/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket aag
	containerId a
	entityId c
	size b
	getContainerId ()I a
	getEntityId ()I e
	getSize ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundHurtAnimationPacket aah
	id a
	yaw b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	id ()I a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
	yaw ()F d
net/minecraft/network/protocol/game/ClientboundInitializeBorderPacket aai
	lerpTime e
	newAbsoluteMaxSize f
	newCenterX a
	newCenterZ b
	newSize d
	oldSize c
	warningBlocks g
	warningTime h
	getLerpTime ()J g
	getNewAbsoluteMaxSize ()I h
	getNewCenterX ()D a
	getNewCenterZ ()D d
	getNewSize ()D e
	getOldSize ()D f
	getWarningBlocks ()I j
	getWarningTime ()I i
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData aaj
	TWO_MEGABYTES a
	blockEntitiesData d
	buffer c
	heightmaps b
	calculateChunkSize (Lnet/minecraft/world/level/chunk/LevelChunk;)I a
	extractChunkData (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	getBlockEntitiesTags (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityTagOutput;II)V a
	getBlockEntitiesTagsConsumer (II)Ljava/util/function/Consumer; a
	getHeightmaps ()Lnet/minecraft/nbt/CompoundTag; b
	getReadBuffer ()Lnet/minecraft/network/FriendlyByteBuf; a
	getWriteBuffer ()Lio/netty/buffer/ByteBuf; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityInfo aaj$a
	packedXZ a
	tag d
	type c
	y b
	create (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityInfo; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityTagOutput aaj$b
net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket aak
	chunkData c
	lightData d
	x a
	z b
	getChunkData ()Lnet/minecraft/network/protocol/game/ClientboundLevelChunkPacketData; e
	getLightData ()Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData; f
	getX ()I a
	getZ ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelEventPacket aal
	data c
	globalEvent d
	pos b
	type a
	getData ()I e
	getPos ()Lnet/minecraft/core/BlockPos; f
	getType ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isGlobalEvent ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket aam
	count h
	maxSpeed g
	overrideLimiter i
	particle j
	x a
	xDist d
	y b
	yDist e
	z c
	zDist f
	getCount ()I k
	getMaxSpeed ()F j
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; l
	getX ()D d
	getXDist ()F g
	getY ()D e
	getYDist ()F h
	getZ ()D f
	getZDist ()F i
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isOverrideLimiter ()Z a
	readParticle (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/core/particles/ParticleType;)Lnet/minecraft/core/particles/ParticleOptions; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLightUpdatePacket aan
	lightData c
	x a
	z b
	getLightData ()Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData; e
	getX ()I a
	getZ ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLightUpdatePacketData aao
	blockUpdates f
	blockYMask b
	emptyBlockYMask d
	emptySkyYMask c
	skyUpdates e
	skyYMask a
	getBlockUpdates ()Ljava/util/List; f
	getBlockYMask ()Ljava/util/BitSet; d
	getEmptyBlockYMask ()Ljava/util/BitSet; e
	getEmptySkyYMask ()Ljava/util/BitSet; b
	getSkyUpdates ()Ljava/util/List; c
	getSkyYMask ()Ljava/util/BitSet; a
	prepareSectionData (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/lighting/LevelLightEngine;Lnet/minecraft/world/level/LightLayer;ILjava/util/BitSet;Ljava/util/BitSet;Ljava/util/List;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLoginPacket aap
	chunkRadius e
	commonPlayerSpawnInfo j
	doLimitedCrafting i
	hardcore b
	levels c
	maxPlayers d
	playerId a
	reducedDebugInfo g
	showDeathScreen h
	simulationDistance f
	chunkRadius ()I g
	commonPlayerSpawnInfo ()Lnet/minecraft/network/protocol/game/CommonPlayerSpawnInfo; l
	doLimitedCrafting ()Z k
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	hardcore ()Z d
	levels ()Ljava/util/Set; e
	maxPlayers ()I f
	playerId ()I a
	reducedDebugInfo ()Z i
	showDeathScreen ()Z j
	simulationDistance ()I h
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMapItemDataPacket aaq
	colorPatch e
	decorations d
	locked c
	mapId a
	scale b
	applyToMap (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	getMapId ()I a
	getScale ()B d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isLocked ()Z e
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMerchantOffersPacket aar
	canRestock f
	containerId a
	offers b
	showProgress e
	villagerLevel c
	villagerXp d
	canRestock ()Z h
	getContainerId ()I a
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; d
	getVillagerLevel ()I e
	getVillagerXp ()I f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	showProgress ()Z g
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket aas
	entityId a
	hasPos i
	hasRot h
	onGround g
	xRot f
	xa b
	yRot e
	ya c
	za d
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getXa ()S a
	getYa ()S d
	getZa ()S e
	getxRot ()B g
	getyRot ()B f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	hasPosition ()Z i
	hasRotation ()Z h
	isOnGround ()Z j
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos aas$a
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot aas$b
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot aas$c
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMoveVehiclePacket aat
	x a
	xRot e
	y b
	yRot d
	z c
	getX ()D a
	getXRot ()F g
	getY ()D d
	getYRot ()F f
	getZ ()D e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundOpenBookPacket aau
	hand a
	getHand ()Lnet/minecraft/world/InteractionHand; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundOpenScreenPacket aav
	containerId a
	title c
	type b
	getContainerId ()I a
	getTitle ()Lnet/minecraft/network/chat/Component; e
	getType ()Lnet/minecraft/world/inventory/MenuType; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket aaw
	isFrontText b
	pos a
	getPos ()Lnet/minecraft/core/BlockPos; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isFrontText ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket aax
	containerId a
	recipe b
	getContainerId ()I d
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket aay
	FLAG_CAN_FLY c
	FLAG_FLYING b
	FLAG_INSTABUILD d
	FLAG_INVULNERABLE a
	canFly g
	flyingSpeed i
	instabuild h
	invulnerable e
	isFlying f
	walkingSpeed j
	canFly ()Z e
	canInstabuild ()Z f
	getFlyingSpeed ()F g
	getWalkingSpeed ()F h
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isFlying ()Z d
	isInvulnerable ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerChatPacket aaz
	body d
	chatType g
	filterMask f
	index b
	sender a
	signature c
	unsignedContent e
	body ()Lnet/minecraft/network/chat/SignedMessageBody$Packed; f
	chatType ()Lnet/minecraft/network/chat/ChatType$BoundNetwork; i
	filterMask ()Lnet/minecraft/network/chat/FilterMask; h
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	index ()I d
	isSkippable ()Z b
	sender ()Ljava/util/UUID; a
	signature ()Lnet/minecraft/network/chat/MessageSignature; e
	unsignedContent ()Lnet/minecraft/network/chat/Component; g
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket aba
	duration a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket abb
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket abc
	message b
	playerId a
	getMessage ()Lnet/minecraft/network/chat/Component; d
	getPlayerId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerInfoRemovePacket abd
	profileIds a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	profileIds ()Ljava/util/List; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket abe
	actions a
	entries b
	actions ()Ljava/util/EnumSet; a
	createPlayerInitializing (Ljava/util/Collection;)Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket; a
	entries ()Ljava/util/List; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	newEntries ()Ljava/util/List; e
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action abe$a
	$VALUES i
	ADD_PLAYER a
	INITIALIZE_CHAT b
	UPDATE_DISPLAY_NAME f
	UPDATE_GAME_MODE c
	UPDATE_LATENCY e
	UPDATE_LISTED d
	reader g
	writer h
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action; a
net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action$Reader abe$a$a
net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action$Writer abe$a$b
net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Entry abe$b
	chatSession g
	displayName f
	gameMode e
	latency d
	listed c
	profile b
	profileId a
	chatSession ()Lnet/minecraft/network/chat/RemoteChatSession$Data; g
	displayName ()Lnet/minecraft/network/chat/Component; f
	gameMode ()Lnet/minecraft/world/level/GameType; e
	latency ()I d
	listed ()Z c
	profile ()Lcom/mojang/authlib/GameProfile; b
	profileId ()Ljava/util/UUID; a
net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$EntryBuilder abe$c
	chatSession g
	displayName f
	gameMode e
	latency d
	listed c
	profile b
	profileId a
	build ()Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Entry; a
net/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket abf
	atEntity g
	entity d
	fromAnchor e
	toAnchor f
	x a
	y b
	z c
	getFromAnchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
	getPosition (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/phys/Vec3; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket abg
	id g
	relativeArguments f
	x a
	xRot e
	y b
	yRot d
	z c
	getId ()I h
	getRelativeArguments ()Ljava/util/Set; i
	getX ()D a
	getXRot ()F g
	getY ()D d
	getYRot ()F f
	getZ ()D e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRecipePacket abh
	bookSettings d
	recipes b
	state a
	toHighlight c
	getBookSettings ()Lnet/minecraft/stats/RecipeBookSettings; e
	getHighlights ()Ljava/util/List; d
	getRecipes ()Ljava/util/List; a
	getState ()Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State; f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRecipePacket$State abh$a
	$VALUES d
	ADD b
	INIT a
	REMOVE c
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State; a
net/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket abi
	entityIds a
	getEntityIds ()Lit/unimi/dsi/fastutil/ints/IntList; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket abj
	effect b
	entityId a
	getEffect ()Lnet/minecraft/world/effect/MobEffect; a
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundResetScorePacket abk
	objectiveName b
	owner a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	objectiveName ()Ljava/lang/String; d
	owner ()Ljava/lang/String; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRespawnPacket abl
	KEEP_ALL_DATA c
	KEEP_ATTRIBUTES a
	KEEP_ENTITY_DATA b
	commonPlayerSpawnInfo d
	dataToKeep e
	commonPlayerSpawnInfo ()Lnet/minecraft/network/protocol/game/CommonPlayerSpawnInfo; a
	dataToKeep ()B d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	shouldKeep (B)Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRotateHeadPacket abm
	entityId a
	yHeadRot b
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getYHeadRot ()B a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket abn
	POS_IN_SECTION_BITS a
	positions c
	sectionPos b
	states d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	runUpdates (Ljava/util/function/BiConsumer;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket abo
	tab a
	getTab ()Lnet/minecraft/resources/ResourceLocation; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundServerDataPacket abp
	enforcesSecureChat c
	iconBytes b
	motd a
	enforcesSecureChat ()Z e
	getIconBytes ()Ljava/util/Optional; d
	getMotd ()Lnet/minecraft/network/chat/Component; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket abq
	text a
	getText ()Lnet/minecraft/network/chat/Component; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket abr
	newCenterX a
	newCenterZ b
	getNewCenterX ()D d
	getNewCenterZ ()D a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket abs
	lerpTime c
	newSize b
	oldSize a
	getLerpTime ()J e
	getNewSize ()D d
	getOldSize ()D a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderSizePacket abt
	size a
	getSize ()D a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket abu
	warningDelay a
	getWarningDelay ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket abv
	warningBlocks a
	getWarningBlocks ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetCameraPacket abw
	cameraId a
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket abx
	slot a
	getSlot ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket aby
	x a
	z b
	getX ()I a
	getZ ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket abz
	radius a
	getRadius ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket aca
	angle b
	pos a
	getAngle ()F d
	getPos ()Lnet/minecraft/core/BlockPos; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket acb
	objectiveName b
	slot a
	getObjectiveName ()Ljava/lang/String; d
	getSlot ()Lnet/minecraft/world/scores/DisplaySlot; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket acc
	EOF_MARKER a
	id b
	packedItems c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	id ()I a
	pack (Ljava/util/List;Lnet/minecraft/network/FriendlyByteBuf;)V a
	packedItems ()Ljava/util/List; d
	unpack (Lnet/minecraft/network/FriendlyByteBuf;)Ljava/util/List; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket acd
	destId b
	sourceId a
	getDestId ()I d
	getSourceId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket ace
	id a
	xa b
	ya c
	za d
	getId ()I a
	getXa ()I d
	getYa ()I e
	getZa ()I f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket acf
	CONTINUE_MASK a
	entity b
	slots c
	getEntity ()I a
	getSlots ()Ljava/util/List; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetExperiencePacket acg
	experienceLevel c
	experienceProgress a
	totalExperience b
	getExperienceLevel ()I e
	getExperienceProgress ()F a
	getTotalExperience ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetHealthPacket ach
	food b
	health a
	saturation c
	getFood ()I d
	getHealth ()F a
	getSaturation ()F e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetObjectivePacket aci
	METHOD_ADD a
	METHOD_CHANGE c
	METHOD_REMOVE b
	displayName e
	method h
	numberFormat g
	objectiveName d
	renderType f
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getMethod ()I e
	getNumberFormat ()Lnet/minecraft/network/chat/numbers/NumberFormat; g
	getObjectiveName ()Ljava/lang/String; a
	getRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetPassengersPacket acj
	passengers b
	vehicle a
	getPassengers ()[I a
	getVehicle ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket ack
	MAX_COLLISION_LENGTH g
	MAX_VISIBILITY_LENGTH f
	METHOD_ADD a
	METHOD_CHANGE c
	METHOD_JOIN d
	METHOD_LEAVE e
	METHOD_REMOVE b
	method h
	name i
	parameters k
	players j
	createAddOrModifyPacket (Lnet/minecraft/world/scores/PlayerTeam;Z)Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket; a
	createPlayerPacket (Lnet/minecraft/world/scores/PlayerTeam;Ljava/lang/String;Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action;)Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket; a
	createRemovePacket (Lnet/minecraft/world/scores/PlayerTeam;)Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket; a
	getName ()Ljava/lang/String; e
	getParameters ()Ljava/util/Optional; g
	getPlayerAction ()Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action; a
	getPlayers ()Ljava/util/Collection; f
	getTeamAction ()Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	shouldHaveParameters (I)Z b
	shouldHavePlayerList (I)Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action ack$a
	$VALUES c
	ADD a
	REMOVE b
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action; a
net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Parameters ack$b
	collisionRule e
	color f
	displayName a
	nametagVisibility d
	options g
	playerPrefix b
	playerSuffix c
	getCollisionRule ()Ljava/lang/String; e
	getColor ()Lnet/minecraft/ChatFormatting; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; a
	getNametagVisibility ()Ljava/lang/String; d
	getOptions ()I b
	getPlayerPrefix ()Lnet/minecraft/network/chat/Component; f
	getPlayerSuffix ()Lnet/minecraft/network/chat/Component; g
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetScorePacket acl
	display d
	numberFormat e
	objectiveName b
	owner a
	score c
	display ()Lnet/minecraft/network/chat/Component; f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	numberFormat ()Lnet/minecraft/network/chat/numbers/NumberFormat; g
	objectiveName ()Ljava/lang/String; d
	owner ()Ljava/lang/String; a
	score ()I e
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket acm
	simulationDistance a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	simulationDistance ()I a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket acn
	text a
	getText ()Lnet/minecraft/network/chat/Component; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetTimePacket aco
	dayTime b
	gameTime a
	getDayTime ()J d
	getGameTime ()J a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetTitleTextPacket acp
	text a
	getText ()Lnet/minecraft/network/chat/Component; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket acq
	fadeIn a
	fadeOut c
	stay b
	getFadeIn ()I a
	getFadeOut ()I e
	getStay ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSoundEntityPacket acr
	id c
	pitch e
	seed f
	sound a
	source b
	volume d
	getId ()I e
	getPitch ()F g
	getSeed ()J h
	getSound ()Lnet/minecraft/core/Holder; a
	getSource ()Lnet/minecraft/sounds/SoundSource; d
	getVolume ()F f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSoundPacket acs
	LOCATION_ACCURACY a
	pitch h
	seed i
	sound b
	source c
	volume g
	x d
	y e
	z f
	getPitch ()F i
	getSeed ()J j
	getSound ()Lnet/minecraft/core/Holder; a
	getSource ()Lnet/minecraft/sounds/SoundSource; d
	getVolume ()F h
	getX ()D e
	getY ()D f
	getZ ()D g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundStartConfigurationPacket act
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	nextProtocol ()Lnet/minecraft/network/ConnectionProtocol; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundStopSoundPacket acu
	HAS_SOUND b
	HAS_SOURCE a
	name c
	source d
	getName ()Lnet/minecraft/resources/ResourceLocation; a
	getSource ()Lnet/minecraft/sounds/SoundSource; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSystemChatPacket acv
	content a
	overlay b
	content ()Lnet/minecraft/network/chat/Component; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z b
	overlay ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTabListPacket acw
	footer b
	header a
	getFooter ()Lnet/minecraft/network/chat/Component; d
	getHeader ()Lnet/minecraft/network/chat/Component; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTagQueryPacket acx
	tag b
	transactionId a
	getTag ()Lnet/minecraft/nbt/CompoundTag; d
	getTransactionId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket acy
	amount c
	itemId a
	playerId b
	getAmount ()I e
	getItemId ()I a
	getPlayerId ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket acz
	id a
	onGround g
	x b
	xRot f
	y c
	yRot e
	z d
	getId ()I a
	getX ()D d
	getY ()D e
	getZ ()D f
	getxRot ()B h
	getyRot ()B g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isOnGround ()Z i
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTickingStatePacket ada
	isFrozen b
	tickRate a
	from (Lnet/minecraft/world/TickRateManager;)Lnet/minecraft/network/protocol/game/ClientboundTickingStatePacket; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isFrozen ()Z d
	tickRate ()F a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTickingStepPacket adb
	tickSteps a
	from (Lnet/minecraft/world/TickRateManager;)Lnet/minecraft/network/protocol/game/ClientboundTickingStepPacket; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	tickSteps ()I a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket adc
	added b
	progress d
	removed c
	reset a
	getAdded ()Ljava/util/List; a
	getProgress ()Ljava/util/Map; e
	getRemoved ()Ljava/util/Set; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	shouldReset ()Z f
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket add
	attributes b
	entityId a
	getEntityId ()I a
	getValues ()Ljava/util/List; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket$AttributeSnapshot add$a
	attribute a
	base b
	modifiers c
	getAttribute ()Lnet/minecraft/world/entity/ai/attributes/Attribute; a
	getBase ()D b
	getModifiers ()Ljava/util/Collection; c
net/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket ade
	FLAG_AMBIENT a
	FLAG_SHOW_ICON c
	FLAG_VISIBLE b
	effect e
	effectAmplifier f
	effectDurationTicks g
	entityId d
	factorData i
	flags h
	effectShowsIcon ()Z i
	getEffect ()Lnet/minecraft/world/effect/MobEffect; d
	getEffectAmplifier ()B e
	getEffectDurationTicks ()I f
	getEntityId ()I a
	getFactorData ()Lnet/minecraft/world/effect/MobEffectInstance$FactorData; j
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isEffectAmbient ()Z h
	isEffectVisible ()Z g
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket adf
	recipes a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/RecipeHolder; b
	getRecipes ()Ljava/util/List; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/RecipeHolder;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/CommonPlayerSpawnInfo adg
	dimension b
	dimensionType a
	gameType d
	isDebug f
	isFlat g
	lastDeathLocation h
	portalCooldown i
	previousGameType e
	seed c
	dimension ()Lnet/minecraft/resources/ResourceKey; b
	dimensionType ()Lnet/minecraft/resources/ResourceKey; a
	gameType ()Lnet/minecraft/world/level/GameType; d
	isDebug ()Z f
	isFlat ()Z g
	lastDeathLocation ()Ljava/util/Optional; h
	portalCooldown ()I i
	previousGameType ()Lnet/minecraft/world/level/GameType; e
	seed ()J c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/DebugEntityNameGenerator adh
	NAMES_FIRST_PART a
	NAMES_SECOND_PART b
	getEntityName (Ljava/util/UUID;)Ljava/lang/String; a
	getEntityName (Lnet/minecraft/world/entity/Entity;)Ljava/lang/String; a
	getRandom (Ljava/util/UUID;)Lnet/minecraft/util/RandomSource; b
	getRandomString (Lnet/minecraft/util/RandomSource;[Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/network/protocol/game/DebugPackets adi
	LOGGER a
	getMemoryDescriptions (Lnet/minecraft/world/entity/LivingEntity;J)Ljava/util/List; a
	getShortDescription (Lnet/minecraft/server/level/ServerLevel;Ljava/lang/Object;)Ljava/lang/String; a
	sendBeeInfo (Lnet/minecraft/world/entity/animal/Bee;)V a
	sendBreezeInfo (Lnet/minecraft/world/entity/monster/breeze/Breeze;)V a
	sendEntityBrain (Lnet/minecraft/world/entity/LivingEntity;)V a
	sendGameEventInfo (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;)V a
	sendGameEventListenerInfo (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEventListener;)V a
	sendGameTestAddMarker (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/lang/String;II)V a
	sendGameTestClearPacket (Lnet/minecraft/server/level/ServerLevel;)V a
	sendGoalSelector (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/goal/GoalSelector;)V a
	sendHiveInfo (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity;)V a
	sendNeighborsUpdatePacket (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	sendPacketToAllPlayers (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload;)V a
	sendPathFindingPacket (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/level/pathfinder/Path;F)V a
	sendPoiAddedPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	sendPoiPacketsForChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/ChunkPos;)V a
	sendPoiRemovedPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V b
	sendPoiTicketCountPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V c
	sendRaids (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Collection;)V a
	sendStructurePacket (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	sendVillageSectionsPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V d
net/minecraft/network/protocol/game/ServerGamePacketListener adj
	handleAcceptTeleportPacket (Lnet/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ServerboundSwingPacket;)V a
	handleBlockEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ServerboundChatPacket;)V a
	handleChatAck (Lnet/minecraft/network/protocol/game/ServerboundChatAckPacket;)V a
	handleChatCommand (Lnet/minecraft/network/protocol/game/ServerboundChatCommandPacket;)V a
	handleChatSessionUpdate (Lnet/minecraft/network/protocol/game/ServerboundChatSessionUpdatePacket;)V a
	handleChunkBatchReceived (Lnet/minecraft/network/protocol/game/ServerboundChunkBatchReceivedPacket;)V a
	handleClientCommand (Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket;)V a
	handleConfigurationAcknowledged (Lnet/minecraft/network/protocol/game/ServerboundConfigurationAcknowledgedPacket;)V a
	handleContainerButtonClick (Lnet/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket;)V a
	handleContainerClick (Lnet/minecraft/network/protocol/game/ServerboundContainerClickPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ServerboundContainerClosePacket;)V a
	handleContainerSlotStateChanged (Lnet/minecraft/network/protocol/game/ServerboundContainerSlotStateChangedPacket;)V a
	handleCustomCommandSuggestions (Lnet/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket;)V a
	handleEditBook (Lnet/minecraft/network/protocol/game/ServerboundEditBookPacket;)V a
	handleEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundEntityTagQuery;)V a
	handleInteract (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket;)V a
	handleJigsawGenerate (Lnet/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket;)V a
	handleLockDifficulty (Lnet/minecraft/network/protocol/game/ServerboundLockDifficultyPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ServerboundMoveVehiclePacket;)V a
	handlePaddleBoat (Lnet/minecraft/network/protocol/game/ServerboundPaddleBoatPacket;)V a
	handlePickItem (Lnet/minecraft/network/protocol/game/ServerboundPickItemPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ServerboundPlaceRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket;)V a
	handlePlayerAction (Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket;)V a
	handlePlayerCommand (Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket;)V a
	handlePlayerInput (Lnet/minecraft/network/protocol/game/ServerboundPlayerInputPacket;)V a
	handleRecipeBookChangeSettingsPacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket;)V a
	handleRecipeBookSeenRecipePacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket;)V a
	handleRenameItem (Lnet/minecraft/network/protocol/game/ServerboundRenameItemPacket;)V a
	handleSeenAdvancements (Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket;)V a
	handleSelectTrade (Lnet/minecraft/network/protocol/game/ServerboundSelectTradePacket;)V a
	handleSetBeaconPacket (Lnet/minecraft/network/protocol/game/ServerboundSetBeaconPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket;)V a
	handleSetCommandBlock (Lnet/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket;)V a
	handleSetCommandMinecart (Lnet/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket;)V a
	handleSetCreativeModeSlot (Lnet/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket;)V a
	handleSetJigsawBlock (Lnet/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket;)V a
	handleSetStructureBlock (Lnet/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket;)V a
	handleSignUpdate (Lnet/minecraft/network/protocol/game/ServerboundSignUpdatePacket;)V a
	handleTeleportToEntityPacket (Lnet/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket;)V a
	handleUseItem (Lnet/minecraft/network/protocol/game/ServerboundUseItemPacket;)V a
	handleUseItemOn (Lnet/minecraft/network/protocol/game/ServerboundUseItemOnPacket;)V a
	protocol ()Lnet/minecraft/network/ConnectionProtocol; b
net/minecraft/network/protocol/game/ServerPacketListener adk
	shouldPropagateHandlingExceptions ()Z d
net/minecraft/network/protocol/game/ServerPingPacketListener adl
	handlePingRequest (Lnet/minecraft/network/protocol/status/ServerboundPingRequestPacket;)V a
net/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket adm
	id a
	getId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery adn
	pos b
	transactionId a
	getPos ()Lnet/minecraft/core/BlockPos; d
	getTransactionId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket ado
	difficulty a
	getDifficulty ()Lnet/minecraft/world/Difficulty; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundChatAckPacket adp
	offset a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	offset ()I a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundChatCommandPacket adq
	argumentSignatures d
	command a
	lastSeenMessages e
	salt c
	timeStamp b
	argumentSignatures ()Lnet/minecraft/commands/arguments/ArgumentSignatures; f
	command ()Ljava/lang/String; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	lastSeenMessages ()Lnet/minecraft/network/chat/LastSeenMessages$Update; g
	salt ()J e
	timeStamp ()Ljava/time/Instant; d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundChatPacket adr
	lastSeenMessages e
	message a
	salt c
	signature d
	timeStamp b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	lastSeenMessages ()Lnet/minecraft/network/chat/LastSeenMessages$Update; g
	message ()Ljava/lang/String; a
	salt ()J e
	signature ()Lnet/minecraft/network/chat/MessageSignature; f
	timeStamp ()Ljava/time/Instant; d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundChatSessionUpdatePacket ads
	chatSession a
	chatSession ()Lnet/minecraft/network/chat/RemoteChatSession$Data; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundChunkBatchReceivedPacket adt
	desiredChunksPerTick a
	desiredChunksPerTick ()F a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundClientCommandPacket adu
	action a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action adu$a
	$VALUES c
	PERFORM_RESPAWN a
	REQUEST_STATS b
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action; a
net/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket adv
	command b
	id a
	getCommand ()Ljava/lang/String; d
	getId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundConfigurationAcknowledgedPacket adw
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	nextProtocol ()Lnet/minecraft/network/ConnectionProtocol; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket adx
	buttonId b
	containerId a
	getButtonId ()I d
	getContainerId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundContainerClickPacket ady
	MAX_SLOT_COUNT a
	buttonNum e
	carriedItem g
	changedSlots h
	clickType f
	containerId b
	slotNum d
	stateId c
	getButtonNum ()I e
	getCarriedItem ()Lnet/minecraft/world/item/ItemStack; f
	getChangedSlots ()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; g
	getClickType ()Lnet/minecraft/world/inventory/ClickType; h
	getContainerId ()I a
	getSlotNum ()I d
	getStateId ()I i
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundContainerClosePacket adz
	containerId a
	getContainerId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundContainerSlotStateChangedPacket aea
	containerId b
	newState c
	slotId a
	containerId ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	newState ()Z e
	slotId ()I a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundEditBookPacket aeb
	MAX_BYTES_PER_CHAR a
	MAX_PAGES_COUNT d
	PAGE_MAX_CHARS c
	TITLE_MAX_CHARS b
	pages f
	slot e
	title g
	getPages ()Ljava/util/List; a
	getSlot ()I e
	getTitle ()Ljava/util/Optional; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundEntityTagQuery aec
	entityId b
	transactionId a
	getEntityId ()I d
	getTransactionId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket aed
	ATTACK_ACTION d
	action b
	entityId a
	usingSecondaryAction c
	createAttackPacket (Lnet/minecraft/world/entity/Entity;Z)Lnet/minecraft/network/protocol/game/ServerboundInteractPacket; a
	createInteractionPacket (Lnet/minecraft/world/entity/Entity;ZLnet/minecraft/world/InteractionHand;)Lnet/minecraft/network/protocol/game/ServerboundInteractPacket; a
	createInteractionPacket (Lnet/minecraft/world/entity/Entity;ZLnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/network/protocol/game/ServerboundInteractPacket; a
	dispatch (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Handler;)V a
	getTarget (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isUsingSecondaryAction ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket$Action aed$a
	dispatch (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType aed$b
	$VALUES e
	ATTACK b
	INTERACT a
	INTERACT_AT c
	reader d
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType; a
net/minecraft/network/protocol/game/ServerboundInteractPacket$Handler aed$c
	onAttack ()V a
	onInteraction (Lnet/minecraft/world/InteractionHand;)V a
	onInteraction (Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAction aed$d
	hand a
	dispatch (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAtLocationAction aed$e
	hand a
	location b
	dispatch (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket aee
	keepJigsaws c
	levels b
	pos a
	getPos ()Lnet/minecraft/core/BlockPos; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	keepJigsaws ()Z e
	levels ()I d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundLockDifficultyPacket aef
	locked a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isLocked ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket aeg
	hasPos g
	hasRot h
	onGround f
	x a
	xRot e
	y b
	yRot d
	z c
	getX (D)D a
	getXRot (F)F b
	getY (D)D b
	getYRot (F)F a
	getZ (D)D c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	hasPosition ()Z d
	hasRotation ()Z e
	isOnGround ()Z a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos aeg$a
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot aeg$b
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot aeg$c
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$StatusOnly aeg$d
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket$StatusOnly; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMoveVehiclePacket aeh
	x a
	xRot e
	y b
	yRot d
	z c
	getX ()D a
	getXRot ()F g
	getY ()D d
	getYRot ()F f
	getZ ()D e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPaddleBoatPacket aei
	left a
	right b
	getLeft ()Z a
	getRight ()Z d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPickItemPacket aej
	slot a
	getSlot ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlaceRecipePacket aek
	containerId a
	recipe b
	shiftDown c
	getContainerId ()I a
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isShiftDown ()Z e
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket ael
	FLAG_FLYING a
	isFlying b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isFlying ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlayerActionPacket aem
	action c
	direction b
	pos a
	sequence d
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action; e
	getDirection ()Lnet/minecraft/core/Direction; d
	getPos ()Lnet/minecraft/core/BlockPos; a
	getSequence ()I f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action aem$a
	$VALUES h
	ABORT_DESTROY_BLOCK b
	DROP_ALL_ITEMS d
	DROP_ITEM e
	RELEASE_USE_ITEM f
	START_DESTROY_BLOCK a
	STOP_DESTROY_BLOCK c
	SWAP_ITEM_WITH_OFFHAND g
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action; a
net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket aen
	action b
	data c
	id a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action; d
	getData ()I e
	getId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action aen$a
	$VALUES j
	OPEN_INVENTORY h
	PRESS_SHIFT_KEY a
	RELEASE_SHIFT_KEY b
	START_FALL_FLYING i
	START_RIDING_JUMP f
	START_SPRINTING d
	STOP_RIDING_JUMP g
	STOP_SLEEPING c
	STOP_SPRINTING e
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action; a
net/minecraft/network/protocol/game/ServerboundPlayerInputPacket aeo
	FLAG_JUMPING a
	FLAG_SHIFT_KEY_DOWN b
	isJumping e
	isShiftKeyDown f
	xxa c
	zza d
	getXxa ()F a
	getZza ()F d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isJumping ()Z e
	isShiftKeyDown ()Z f
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket aep
	bookType a
	isFiltering c
	isOpen b
	getBookType ()Lnet/minecraft/world/inventory/RecipeBookType; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isFiltering ()Z e
	isOpen ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket aeq
	recipe a
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundRenameItemPacket aer
	name a
	getName ()Ljava/lang/String; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket aes
	action a
	tab b
	closedScreen ()Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket; a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action; d
	getTab ()Lnet/minecraft/resources/ResourceLocation; e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	openedTab (Lnet/minecraft/advancements/AdvancementHolder;)Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action aes$a
	$VALUES c
	CLOSED_SCREEN b
	OPENED_TAB a
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action; a
net/minecraft/network/protocol/game/ServerboundSelectTradePacket aet
	item a
	getItem ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetBeaconPacket aeu
	primary a
	secondary b
	getPrimary ()Ljava/util/Optional; a
	getSecondary ()Ljava/util/Optional; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket aev
	slot a
	getSlot ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket aew
	FLAG_AUTOMATIC c
	FLAG_CONDITIONAL b
	FLAG_TRACK_OUTPUT a
	automatic h
	command e
	conditional g
	mode i
	pos d
	trackOutput f
	getCommand ()Ljava/lang/String; d
	getMode ()Lnet/minecraft/world/level/block/entity/CommandBlockEntity$Mode; h
	getPos ()Lnet/minecraft/core/BlockPos; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isAutomatic ()Z g
	isConditional ()Z f
	isTrackOutput ()Z e
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket aex
	command b
	entity a
	trackOutput c
	getCommand ()Ljava/lang/String; a
	getCommandBlock (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/BaseCommandBlock; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isTrackOutput ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket aey
	itemStack b
	slotNum a
	getItem ()Lnet/minecraft/world/item/ItemStack; d
	getSlotNum ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket aez
	finalState e
	joint f
	name b
	placementPriority h
	pool d
	pos a
	selectionPriority g
	target c
	getFinalState ()Ljava/lang/String; g
	getJoint ()Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType; h
	getName ()Lnet/minecraft/resources/ResourceLocation; d
	getPlacementPriority ()I j
	getPool ()Lnet/minecraft/resources/ResourceLocation; f
	getPos ()Lnet/minecraft/core/BlockPos; a
	getSelectionPriority ()I i
	getTarget ()Lnet/minecraft/resources/ResourceLocation; e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket afa
	FLAG_IGNORE_ENTITIES a
	FLAG_SHOW_AIR b
	FLAG_SHOW_BOUNDING_BOX c
	data l
	ignoreEntities m
	integrity p
	mirror j
	mode f
	name g
	offset h
	pos d
	rotation k
	seed q
	showAir n
	showBoundingBox o
	size i
	updateType e
	getData ()Ljava/lang/String; k
	getIntegrity ()F o
	getMirror ()Lnet/minecraft/world/level/block/Mirror; i
	getMode ()Lnet/minecraft/world/level/block/state/properties/StructureMode; e
	getName ()Ljava/lang/String; f
	getOffset ()Lnet/minecraft/core/BlockPos; g
	getPos ()Lnet/minecraft/core/BlockPos; a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; j
	getSeed ()J p
	getSize ()Lnet/minecraft/core/Vec3i; h
	getUpdateType ()Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isIgnoreEntities ()Z l
	isShowAir ()Z m
	isShowBoundingBox ()Z n
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSignUpdatePacket afb
	MAX_STRING_LENGTH a
	isFrontText d
	lines c
	pos b
	getLines ()[Ljava/lang/String; e
	getPos ()Lnet/minecraft/core/BlockPos; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isFrontText ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSwingPacket afc
	hand a
	getHand ()Lnet/minecraft/world/InteractionHand; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket afd
	uuid a
	getEntity (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundUseItemOnPacket afe
	blockHit a
	hand b
	sequence c
	getHand ()Lnet/minecraft/world/InteractionHand; a
	getHitResult ()Lnet/minecraft/world/phys/BlockHitResult; d
	getSequence ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundUseItemPacket aff
	hand a
	sequence b
	getHand ()Lnet/minecraft/world/InteractionHand; a
	getSequence ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/VecDeltaCodec afg
	TRUNCATION_STEPS a
	base b
	decode (J)D a
	decode (JJJ)Lnet/minecraft/world/phys/Vec3; a
	delta (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; d
	encode (D)J a
	encodeX (Lnet/minecraft/world/phys/Vec3;)J a
	encodeY (Lnet/minecraft/world/phys/Vec3;)J b
	encodeZ (Lnet/minecraft/world/phys/Vec3;)J c
	setBase (Lnet/minecraft/world/phys/Vec3;)V e
net/minecraft/network/protocol/handshake/ClientIntent afi
	$VALUES e
	LOGIN b
	LOGIN_ID d
	STATUS a
	STATUS_ID c
	$values ()[Lnet/minecraft/network/protocol/handshake/ClientIntent; c
	byId (I)Lnet/minecraft/network/protocol/handshake/ClientIntent; a
	id ()I a
	protocol ()Lnet/minecraft/network/ConnectionProtocol; b
net/minecraft/network/protocol/handshake/ClientIntentionPacket afj
	MAX_HOST_LENGTH e
	hostName b
	intention d
	port c
	protocolVersion a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/handshake/ServerHandshakePacketListener;)V a
	hostName ()Ljava/lang/String; d
	intention ()Lnet/minecraft/network/protocol/handshake/ClientIntent; f
	nextProtocol ()Lnet/minecraft/network/ConnectionProtocol; c
	port ()I e
	protocolVersion ()I a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/handshake/ServerHandshakePacketListener afk
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
	protocol ()Lnet/minecraft/network/ConnectionProtocol; b
net/minecraft/network/protocol/login/ClientLoginPacketListener afm
	handleCompression (Lnet/minecraft/network/protocol/login/ClientboundLoginCompressionPacket;)V a
	handleCustomQuery (Lnet/minecraft/network/protocol/login/ClientboundCustomQueryPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket;)V a
	handleGameProfile (Lnet/minecraft/network/protocol/login/ClientboundGameProfilePacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ClientboundHelloPacket;)V a
	protocol ()Lnet/minecraft/network/ConnectionProtocol; b
net/minecraft/network/protocol/login/ClientboundCustomQueryPacket afn
	MAX_PAYLOAD_SIZE c
	payload b
	transactionId a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	payload ()Lnet/minecraft/network/protocol/login/custom/CustomQueryPayload; d
	readPayload (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/login/custom/CustomQueryPayload; a
	readUnknownPayload (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/login/custom/DiscardedQueryPayload; b
	transactionId ()I a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ClientboundGameProfilePacket afo
	gameProfile a
	getGameProfile ()Lcom/mojang/authlib/GameProfile; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	nextProtocol ()Lnet/minecraft/network/ConnectionProtocol; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ClientboundHelloPacket afp
	challenge c
	publicKey b
	serverId a
	getChallenge ()[B e
	getPublicKey ()Ljava/security/PublicKey; d
	getServerId ()Ljava/lang/String; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ClientboundLoginCompressionPacket afq
	compressionThreshold a
	getCompressionThreshold ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket afr
	reason a
	getReason ()Lnet/minecraft/network/chat/Component; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ServerLoginPacketListener afs
	handleCustomQueryPacket (Lnet/minecraft/network/protocol/login/ServerboundCustomQueryAnswerPacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ServerboundHelloPacket;)V a
	handleKey (Lnet/minecraft/network/protocol/login/ServerboundKeyPacket;)V a
	handleLoginAcknowledgement (Lnet/minecraft/network/protocol/login/ServerboundLoginAcknowledgedPacket;)V a
	protocol ()Lnet/minecraft/network/ConnectionProtocol; b
net/minecraft/network/protocol/login/ServerboundCustomQueryAnswerPacket aft
	MAX_PAYLOAD_SIZE c
	payload b
	transactionId a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	payload ()Lnet/minecraft/network/protocol/login/custom/CustomQueryAnswerPayload; d
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/login/ServerboundCustomQueryAnswerPacket; b
	readPayload (ILnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/login/custom/CustomQueryAnswerPayload; a
	readUnknownPayload (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/login/custom/CustomQueryAnswerPayload; c
	transactionId ()I a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ServerboundHelloPacket afu
	name a
	profileId b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	name ()Ljava/lang/String; a
	profileId ()Ljava/util/UUID; d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ServerboundKeyPacket afv
	encryptedChallenge b
	keybytes a
	getSecretKey (Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	isChallengeValid ([BLjava/security/PrivateKey;)Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ServerboundLoginAcknowledgedPacket afw
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	nextProtocol ()Lnet/minecraft/network/ConnectionProtocol; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/custom/CustomQueryAnswerPayload afx
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/custom/CustomQueryPayload afy
	id ()Lnet/minecraft/resources/ResourceLocation; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/custom/DiscardedQueryAnswerPayload afz
	INSTANCE a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/custom/DiscardedQueryPayload aga
	id a
	id ()Lnet/minecraft/resources/ResourceLocation; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/status/ClientStatusPacketListener age
	handleStatusResponse (Lnet/minecraft/network/protocol/status/ClientboundStatusResponsePacket;)V a
	protocol ()Lnet/minecraft/network/ConnectionProtocol; b
net/minecraft/network/protocol/status/ClientboundPongResponsePacket agf
	time a
	getTime ()J a
	handle (Lnet/minecraft/network/ClientPongPacketListener;)V a
	handle (Lnet/minecraft/network/PacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/status/ClientboundStatusResponsePacket agg
	status a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ClientStatusPacketListener;)V a
	status ()Lnet/minecraft/network/protocol/status/ServerStatus; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/status/ServerStatus agh
	CODEC a
	description b
	enforcesSecureChat f
	favicon e
	players c
	version d
	description ()Lnet/minecraft/network/chat/Component; a
	enforcesSecureChat ()Z e
	favicon ()Ljava/util/Optional; d
	players ()Ljava/util/Optional; b
	version ()Ljava/util/Optional; c
net/minecraft/network/protocol/status/ServerStatus$Favicon agh$a
	CODEC a
	PREFIX c
	iconBytes b
	iconBytes ()[B a
net/minecraft/network/protocol/status/ServerStatus$Players agh$b
	CODEC a
	PROFILE_CODEC e
	max b
	online c
	sample d
	max ()I a
	online ()I b
	sample ()Ljava/util/List; c
net/minecraft/network/protocol/status/ServerStatus$Version agh$c
	CODEC a
	name b
	protocol c
	current ()Lnet/minecraft/network/protocol/status/ServerStatus$Version; a
	name ()Ljava/lang/String; b
	protocol ()I c
net/minecraft/network/protocol/status/ServerStatusPacketListener agi
	handleStatusRequest (Lnet/minecraft/network/protocol/status/ServerboundStatusRequestPacket;)V a
	protocol ()Lnet/minecraft/network/ConnectionProtocol; b
net/minecraft/network/protocol/status/ServerboundPingRequestPacket agj
	time a
	getTime ()J a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerPingPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/status/ServerboundStatusRequestPacket agk
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ServerStatusPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/syncher/EntityDataAccessor agm
	id a
	serializer b
	getId ()I a
	getSerializer ()Lnet/minecraft/network/syncher/EntityDataSerializer; b
net/minecraft/network/syncher/EntityDataSerializer agn
	copy (Ljava/lang/Object;)Ljava/lang/Object; a
	createAccessor (I)Lnet/minecraft/network/syncher/EntityDataAccessor; a
	optional (Lnet/minecraft/network/FriendlyByteBuf$Writer;Lnet/minecraft/network/FriendlyByteBuf$Reader;)Lnet/minecraft/network/syncher/EntityDataSerializer; b
	read (Lnet/minecraft/network/FriendlyByteBuf;)Ljava/lang/Object; a
	simple (Lnet/minecraft/network/FriendlyByteBuf$Writer;Lnet/minecraft/network/FriendlyByteBuf$Reader;)Lnet/minecraft/network/syncher/EntityDataSerializer; a
	simpleEnum (Ljava/lang/Class;)Lnet/minecraft/network/syncher/EntityDataSerializer; a
	simpleId (Lnet/minecraft/core/IdMap;)Lnet/minecraft/network/syncher/EntityDataSerializer; a
	write (Lnet/minecraft/network/FriendlyByteBuf;Ljava/lang/Object;)V a
net/minecraft/network/syncher/EntityDataSerializer$ForValueType agn$a
	copy (Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/network/syncher/EntityDataSerializers ago
	BLOCK_POS n
	BLOCK_STATE i
	BOOLEAN k
	BYTE a
	CAT_VARIANT w
	COMPONENT f
	COMPOUND_TAG s
	DIRECTION p
	FLOAT d
	FROG_VARIANT x
	INT b
	ITEM_STACK h
	LONG c
	OPTIONAL_BLOCK_POS o
	OPTIONAL_BLOCK_STATE j
	OPTIONAL_COMPONENT g
	OPTIONAL_GLOBAL_POS r
	OPTIONAL_UNSIGNED_INT u
	OPTIONAL_UUID q
	PAINTING_VARIANT y
	PARTICLE l
	POSE v
	QUATERNION B
	ROTATIONS m
	SERIALIZERS C
	SNIFFER_STATE z
	STRING e
	VECTOR3 A
	VILLAGER_DATA t
	getSerializedId (Lnet/minecraft/network/syncher/EntityDataSerializer;)I b
	getSerializer (I)Lnet/minecraft/network/syncher/EntityDataSerializer; a
	registerSerializer (Lnet/minecraft/network/syncher/EntityDataSerializer;)V a
net/minecraft/network/syncher/SynchedEntityData agp
	ENTITY_ID_POOL b
	LOGGER a
	MAX_ID_VALUE c
	entity d
	isDirty g
	itemsById e
	lock f
	assignValue (Lnet/minecraft/network/syncher/SynchedEntityData$DataItem;Lnet/minecraft/network/syncher/SynchedEntityData$DataValue;)V a
	assignValues (Ljava/util/List;)V a
	createDataItem (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V c
	define (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V a
	defineId (Ljava/lang/Class;Lnet/minecraft/network/syncher/EntityDataSerializer;)Lnet/minecraft/network/syncher/EntityDataAccessor; a
	get (Lnet/minecraft/network/syncher/EntityDataAccessor;)Ljava/lang/Object; b
	getItem (Lnet/minecraft/network/syncher/EntityDataAccessor;)Lnet/minecraft/network/syncher/SynchedEntityData$DataItem; c
	getNonDefaultValues ()Ljava/util/List; c
	hasItem (Lnet/minecraft/network/syncher/EntityDataAccessor;)Z a
	isDirty ()Z a
	isEmpty ()Z d
	packDirty ()Ljava/util/List; b
	set (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V b
	set (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;Z)V a
net/minecraft/network/syncher/SynchedEntityData$DataItem agp$a
	accessor a
	dirty d
	initialValue c
	value b
	getAccessor ()Lnet/minecraft/network/syncher/EntityDataAccessor; a
	getValue ()Ljava/lang/Object; b
	isDirty ()Z c
	isSetToDefault ()Z d
	setDirty (Z)V a
	setValue (Ljava/lang/Object;)V a
	value ()Lnet/minecraft/network/syncher/SynchedEntityData$DataValue; e
net/minecraft/network/syncher/SynchedEntityData$DataValue agp$b
	id a
	serializer b
	value c
	create (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)Lnet/minecraft/network/syncher/SynchedEntityData$DataValue; a
	id ()I a
	read (Lnet/minecraft/network/FriendlyByteBuf;I)Lnet/minecraft/network/syncher/SynchedEntityData$DataValue; a
	read (Lnet/minecraft/network/FriendlyByteBuf;ILnet/minecraft/network/syncher/EntityDataSerializer;)Lnet/minecraft/network/syncher/SynchedEntityData$DataValue; a
	serializer ()Lnet/minecraft/network/syncher/EntityDataSerializer; b
	value ()Ljava/lang/Object; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/realms/DisconnectedRealmsScreen gkl
	message b
	parent c
	reason a
	textHeight v
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; h
	init ()V aN_
	onClose ()V aE_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/realms/RealmsConnect gkm
	LOGGER a
	aborted c
	connection d
	onlineScreen b
	abort ()V a
	connect (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/client/multiplayer/resolver/ServerAddress;)V a
	tick ()V b
net/minecraft/realms/RealmsLabel gkn
	color d
	text a
	x b
	y c
	getText ()Lnet/minecraft/network/chat/Component; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/realms/RealmsObjectSelectionList gko
	addEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)I b
	addEntry (Lnet/minecraft/client/gui/components/ObjectSelectionList$Entry;)I a
	clear ()V H
	getItemCount ()I n
	getMaxPosition ()I a
	getRowLeft ()I q
	getRowTop (I)I g
	getRowWidth ()I b
	getScrollbarPosition ()I c
	replaceEntries (Ljava/util/Collection;)V a
	selectItem (I)V a
	setSelectedItem (I)V q
net/minecraft/realms/RealmsScreen gkp
	COLOR_DARK_GRAY n
	COLOR_GREEN p
	COLOR_INFO t
	COLOR_LINK q
	COLOR_LINK_HOVER r
	COLOR_MEDIUM_GRAY o
	EXPIRATION_NOTIFICATION_DAYS l
	SIZE_LIMIT m
	SKIN_FACE_SIZE u
	TITLE_HEIGHT k
	labels a
	addLabel (Lnet/minecraft/realms/RealmsLabel;)Lnet/minecraft/realms/RealmsLabel; a
	createLabelNarration ()Lnet/minecraft/network/chat/Component; n
	row (I)I g
net/minecraft/realms/RepeatedNarrator gkq
	params b
	permitsPerSecond a
	narrate (Lnet/minecraft/client/GameNarrator;Lnet/minecraft/network/chat/Component;)V a
net/minecraft/realms/RepeatedNarrator$Params gkq$a
	narration a
	rateLimiter b
net/minecraft/recipebook/PlaceRecipe agt
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	placeRecipe (IIILnet/minecraft/world/item/crafting/RecipeHolder;Ljava/util/Iterator;I)V a
net/minecraft/recipebook/ServerPlaceRecipe agu
	LOGGER d
	inventory b
	menu c
	stackedContents a
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	clearGrid ()V a
	getAmountOfFreeSlotsInInventory ()I c
	getStackSize (ZIZ)I a
	handleRecipeClicked (Lnet/minecraft/world/item/crafting/RecipeHolder;Z)V a
	moveItemToGrid (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;)V a
	recipeClicked (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/RecipeHolder;Z)V a
	testClearGrid ()Z b
net/minecraft/references/Blocks agw
	ATTACHED_MELON_STEM f
	ATTACHED_PUMPKIN_STEM c
	MELON d
	MELON_STEM e
	PUMPKIN a
	PUMPKIN_STEM b
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/references/Items agx
	MELON_SEEDS b
	PUMPKIN_SEEDS a
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/resources/DelegatingOps agy
	delegate a
net/minecraft/resources/FileToIdConverter agz
	extension b
	prefix a
	fileToId (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; b
	idToFile (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
	json (Ljava/lang/String;)Lnet/minecraft/resources/FileToIdConverter; a
	listMatchingResourceStacks (Lnet/minecraft/server/packs/resources/ResourceManager;)Ljava/util/Map; b
	listMatchingResources (Lnet/minecraft/server/packs/resources/ResourceManager;)Ljava/util/Map; a
net/minecraft/resources/HolderSetCodec aha
	elementCodec b
	homogenousListCodec c
	registryAwareCodec d
	registryKey a
	create (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec; a
	decodeWithoutRegistry (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	encode (Lnet/minecraft/core/HolderSet;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	encodeWithoutRegistry (Lnet/minecraft/core/HolderSet;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; b
	homogenousList (Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec; a
net/minecraft/resources/RegistryDataLoader ahb
	DIMENSION_REGISTRIES b
	LOGGER c
	WORLDGEN_REGISTRIES a
	createContext (Lnet/minecraft/core/RegistryAccess;Ljava/util/List;)Lnet/minecraft/resources/RegistryOps$RegistryInfoLookup; a
	createInfoForContextRegistry (Lnet/minecraft/core/Registry;)Lnet/minecraft/resources/RegistryOps$RegistryInfo; a
	createInfoForNewRegistry (Lnet/minecraft/core/WritableRegistry;)Lnet/minecraft/resources/RegistryOps$RegistryInfo; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/core/RegistryAccess;Ljava/util/List;)Lnet/minecraft/core/RegistryAccess$Frozen; a
	loadRegistryContents (Lnet/minecraft/resources/RegistryOps$RegistryInfoLookup;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/WritableRegistry;Lcom/mojang/serialization/Decoder;Ljava/util/Map;)V a
	logErrors (Ljava/util/Map;)V a
	registryDirPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; a
net/minecraft/resources/RegistryDataLoader$Loader ahb$a
net/minecraft/resources/RegistryDataLoader$RegistryData ahb$b
	elementCodec b
	key a
	create (Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)Lcom/mojang/datafixers/util/Pair; a
	elementCodec ()Lcom/mojang/serialization/Codec; b
	key ()Lnet/minecraft/resources/ResourceKey; a
	runWithArguments (Ljava/util/function/BiConsumer;)V a
net/minecraft/resources/RegistryFileCodec ahc
	allowInline c
	elementCodec b
	registryKey a
	create (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lnet/minecraft/resources/RegistryFileCodec; a
	create (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lnet/minecraft/resources/RegistryFileCodec; a
	encode (Lnet/minecraft/core/Holder;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/RegistryFixedCodec ahd
	registryKey a
	create (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/RegistryFixedCodec; a
	encode (Lnet/minecraft/core/Holder;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/RegistryOps ahe
	lookupProvider b
	create (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/core/HolderLookup$Provider;)Lnet/minecraft/resources/RegistryOps; a
	create (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/resources/RegistryOps$RegistryInfoLookup;)Lnet/minecraft/resources/RegistryOps; a
	getter (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; b
	memoizeLookup (Lnet/minecraft/resources/RegistryOps$RegistryInfoLookup;)Lnet/minecraft/resources/RegistryOps$RegistryInfoLookup; a
	owner (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	retrieveElement (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; d
	retrieveGetter (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; c
net/minecraft/resources/RegistryOps$RegistryInfo ahe$a
	elementsLifecycle c
	getter b
	owner a
	elementsLifecycle ()Lcom/mojang/serialization/Lifecycle; c
	getter ()Lnet/minecraft/core/HolderGetter; b
	owner ()Lnet/minecraft/core/HolderOwner; a
net/minecraft/resources/RegistryOps$RegistryInfoLookup ahe$b
	lookup (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
net/minecraft/resources/ResourceKey ahf
	VALUES a
	location c
	registryName b
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; c
	codec (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; a
	create (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	createRegistryKey (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	isFor (Lnet/minecraft/resources/ResourceKey;)Z b
	location ()Lnet/minecraft/resources/ResourceLocation; a
	registry ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/resources/ResourceKey$InternKey ahf$a
	location b
	registry a
	location ()Lnet/minecraft/resources/ResourceLocation; b
	registry ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/resources/ResourceLocation ahg
	CODEC a
	DEFAULT_NAMESPACE c
	ERROR_INVALID e
	NAMESPACE_SEPARATOR b
	REALMS_NAMESPACE d
	namespace f
	path g
	assertValidNamespace (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; c
	assertValidPath (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; d
	compareTo (Lnet/minecraft/resources/ResourceLocation;)I a
	decompose (Ljava/lang/String;C)[Ljava/lang/String; b
	getNamespace ()Ljava/lang/String; b
	getPath ()Ljava/lang/String; a
	isAllowedInResourceLocation (C)Z a
	isValidNamespace (Ljava/lang/String;)Z h
	isValidPath (Ljava/lang/String;)Z g
	isValidResourceLocation (Ljava/lang/String;)Z i
	of (Ljava/lang/String;C)Lnet/minecraft/resources/ResourceLocation; a
	read (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
	read (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; b
	toDebugFileName ()Ljava/lang/String; c
	toLanguageKey ()Ljava/lang/String; d
	toLanguageKey (Ljava/lang/String;)Ljava/lang/String; f
	toLanguageKey (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; b
	toShortLanguageKey ()Ljava/lang/String; e
	tryBuild (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	tryParse (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	validNamespaceChar (C)Z c
	validPathChar (C)Z b
	withPath (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; c
	withPath (Ljava/util/function/UnaryOperator;)Lnet/minecraft/resources/ResourceLocation; a
	withPrefix (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; d
	withSuffix (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; e
net/minecraft/resources/ResourceLocation$Dummy ahg$a
net/minecraft/resources/ResourceLocation$Serializer ahg$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/resources/ResourceLocation; a
	serialize (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/server/Bootstrap ahi
	LOGGER d
	STDOUT a
	bootstrapDuration b
	isBootstrapped c
	bootStrap ()V a
	checkBootstrapCalled (Ljava/util/function/Supplier;)V a
	checkGameruleTranslations (Ljava/util/Set;)V a
	checkTranslations (Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/Set;)V a
	createBootstrapException (Ljava/util/function/Supplier;)Ljava/lang/RuntimeException; b
	getMissingTranslations ()Ljava/util/Set; b
	realStdoutPrintln (Ljava/lang/String;)V a
	validate ()V c
	wrapStreams ()V d
net/minecraft/server/ChainedJsonException ahj
	entries a
	message b
	forException (Ljava/lang/Exception;)Lnet/minecraft/server/ChainedJsonException; a
	prependJsonKey (Ljava/lang/String;)V a
	setFilenameAndFlush (Ljava/lang/String;)V b
net/minecraft/server/ChainedJsonException$Entry ahj$a
	filename a
	jsonKeys b
	addJsonKey (Ljava/lang/String;)V a
	getFilename ()Ljava/lang/String; a
	getJsonKeys ()Ljava/lang/String; b
net/minecraft/server/ConsoleInput ahk
	msg a
	source b
net/minecraft/server/DebugLoggedPrintStream ahl
	LOGGER b
	logLine (Ljava/lang/String;)V a
net/minecraft/server/Eula ahm
	LOGGER a
	agreed c
	file b
	hasAgreedToEULA ()Z a
	readFile ()Z b
	saveDefaults ()V c
net/minecraft/server/LoggedPrintStream ahn
	LOGGER b
	name a
	logLine (Ljava/lang/String;)V a
net/minecraft/server/MinecraftServer$ReloadableResources net/minecraft/server/MinecraftServer$a
	managers b
	resourceManager a
	managers ()Lnet/minecraft/server/ReloadableServerResources; b
	resourceManager ()Lnet/minecraft/server/packs/resources/CloseableResourceManager; a
net/minecraft/server/MinecraftServer$ServerResourcePackInfo net/minecraft/server/MinecraftServer$b
	hash c
	id a
	isRequired d
	prompt e
	url b
	hash ()Ljava/lang/String; c
	id ()Ljava/util/UUID; a
	isRequired ()Z d
	prompt ()Lnet/minecraft/network/chat/Component; e
	url ()Ljava/lang/String; b
net/minecraft/server/MinecraftServer$TimeProfiler net/minecraft/server/MinecraftServer$c
	startNanos a
	startTick b
	stop (JI)Lnet/minecraft/util/profiling/ProfileResults; a
net/minecraft/server/PlayerAdvancements aho
	GSON b
	LOGGER a
	codec m
	isFirstPacket l
	lastSelectedTab k
	player j
	playerList c
	playerSavePath d
	progress f
	progressChanged h
	rootsToUpdate i
	tree e
	visible g
	applyFrom (Lnet/minecraft/server/ServerAdvancementManager;Lnet/minecraft/server/PlayerAdvancements$Data;)V a
	asData ()Lnet/minecraft/server/PlayerAdvancements$Data; c
	award (Lnet/minecraft/advancements/AdvancementHolder;Ljava/lang/String;)Z a
	checkForAutomaticTriggers (Lnet/minecraft/server/ServerAdvancementManager;)V c
	flushDirty (Lnet/minecraft/server/level/ServerPlayer;)V b
	getOrStartProgress (Lnet/minecraft/advancements/AdvancementHolder;)Lnet/minecraft/advancements/AdvancementProgress; b
	load (Lnet/minecraft/server/ServerAdvancementManager;)V d
	markForVisibilityUpdate (Lnet/minecraft/advancements/AdvancementHolder;)V c
	registerListener (Lnet/minecraft/advancements/AdvancementHolder;Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)V a
	registerListeners (Lnet/minecraft/advancements/AdvancementHolder;)V d
	registerListeners (Lnet/minecraft/server/ServerAdvancementManager;)V b
	reload (Lnet/minecraft/server/ServerAdvancementManager;)V a
	removeListener (Lnet/minecraft/advancements/AdvancementHolder;Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)V b
	revoke (Lnet/minecraft/advancements/AdvancementHolder;Ljava/lang/String;)Z b
	save ()V b
	setPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	setSelectedTab (Lnet/minecraft/advancements/AdvancementHolder;)V a
	startProgress (Lnet/minecraft/advancements/AdvancementHolder;Lnet/minecraft/advancements/AdvancementProgress;)V a
	stopListening ()V a
	unregisterListeners (Lnet/minecraft/advancements/AdvancementHolder;)V e
	updateTreeVisibility (Lnet/minecraft/advancements/AdvancementNode;Ljava/util/Set;Ljava/util/Set;)V a
net/minecraft/server/PlayerAdvancements$Data aho$a
	CODEC a
	map b
	forEach (Ljava/util/function/BiConsumer;)V a
	map ()Ljava/util/Map; a
net/minecraft/server/RegistryLayer ahp
	$VALUES g
	DIMENSIONS c
	RELOADABLE d
	STATIC a
	STATIC_ACCESS f
	VALUES e
	WORLDGEN b
	$values ()[Lnet/minecraft/server/RegistryLayer; b
	createRegistryAccess ()Lnet/minecraft/core/LayeredRegistryAccess; a
net/minecraft/server/ReloadableServerResources ahq
	DATA_RELOAD_INITIAL_TASK b
	LOGGER a
	advancements h
	commandBuildContext c
	commands d
	functionLibrary i
	lootData g
	recipes e
	tagManager f
	getAdvancements ()Lnet/minecraft/server/ServerAdvancementManager; e
	getCommands ()Lnet/minecraft/commands/Commands; d
	getFunctionLibrary ()Lnet/minecraft/server/ServerFunctionLibrary; a
	getLootData ()Lnet/minecraft/world/level/storage/loot/LootDataManager; b
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; c
	listeners ()Ljava/util/List; f
	loadResources (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/core/RegistryAccess$Frozen;Lnet/minecraft/world/flag/FeatureFlagSet;Lnet/minecraft/commands/Commands$CommandSelection;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	updateRegistryTags (Lnet/minecraft/core/RegistryAccess;)V a
	updateRegistryTags (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/tags/TagManager$LoadResult;)V a
net/minecraft/server/RunningOnDifferentThreadException ahr
	RUNNING_ON_DIFFERENT_THREAD a
net/minecraft/server/ServerAdvancementManager ahs
	GSON b
	LOGGER a
	advancements c
	lootData e
	tree d
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementHolder; a
	getAllAdvancements ()Ljava/util/Collection; b
	tree ()Lnet/minecraft/advancements/AdvancementTree; a
	validate (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/advancements/Advancement;)V a
net/minecraft/server/ServerFunctionLibrary aht
	LISTER b
	LOGGER a
	dispatcher g
	functionCompilationLevel f
	functions c
	tags e
	tagsLoader d
	getAvailableTags ()Ljava/lang/Iterable; b
	getFunction (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	getFunctions ()Ljava/util/Map; a
	getTag (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Collection; b
	readLines (Lnet/minecraft/server/packs/resources/Resource;)Ljava/util/List; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/ServerFunctionManager ahu
	LOAD_FUNCTION_TAG c
	LOGGER a
	TICK_FUNCTION_TAG b
	library g
	postReload f
	server d
	ticking e
	execute (Lnet/minecraft/commands/functions/CommandFunction;Lnet/minecraft/commands/CommandSourceStack;)V a
	executeTagFunctions (Ljava/util/Collection;Lnet/minecraft/resources/ResourceLocation;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	getDispatcher ()Lcom/mojang/brigadier/CommandDispatcher; a
	getFunctionNames ()Ljava/lang/Iterable; d
	getGameLoopSender ()Lnet/minecraft/commands/CommandSourceStack; c
	getTag (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Collection; b
	getTagNames ()Ljava/lang/Iterable; e
	postReload (Lnet/minecraft/server/ServerFunctionLibrary;)V b
	replaceLibrary (Lnet/minecraft/server/ServerFunctionLibrary;)V a
	tick ()V b
net/minecraft/server/ServerInfo ahv
	getMaxPlayers ()I K
	getMotd ()Ljava/lang/String; ac
	getPlayerCount ()I J
	getServerVersion ()Ljava/lang/String; I
net/minecraft/server/ServerInterface ahw
	getLevelIdName ()Ljava/lang/String; q
	getPlayerNames ()[Ljava/lang/String; L
	getPluginNames ()Ljava/lang/String; s
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	getServerIp ()Ljava/lang/String; b
	getServerName ()Ljava/lang/String; f
	getServerPort ()I d
	runCommand (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/server/ServerScoreboard ahx
	dirtyListeners d
	server b
	trackedObjectives c
	addDirtyListener (Ljava/lang/Runnable;)V a
	addPlayerToTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)Z a
	createData ()Lnet/minecraft/world/scores/ScoreboardSaveData; i
	createData (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/scores/ScoreboardSaveData; a
	dataFactory ()Lnet/minecraft/world/level/saveddata/SavedData$Factory; b
	getObjectiveDisplaySlotCount (Lnet/minecraft/world/scores/Objective;)I h
	getStartTrackingPackets (Lnet/minecraft/world/scores/Objective;)Ljava/util/List; d
	getStopTrackingPackets (Lnet/minecraft/world/scores/Objective;)Ljava/util/List; f
	onObjectiveAdded (Lnet/minecraft/world/scores/Objective;)V a
	onObjectiveChanged (Lnet/minecraft/world/scores/Objective;)V b
	onObjectiveRemoved (Lnet/minecraft/world/scores/Objective;)V c
	onPlayerRemoved (Lnet/minecraft/world/scores/ScoreHolder;)V a
	onPlayerScoreRemoved (Lnet/minecraft/world/scores/ScoreHolder;Lnet/minecraft/world/scores/Objective;)V b
	onScoreChanged (Lnet/minecraft/world/scores/ScoreHolder;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/world/scores/Score;)V a
	onScoreLockChanged (Lnet/minecraft/world/scores/ScoreHolder;Lnet/minecraft/world/scores/Objective;)V a
	onTeamAdded (Lnet/minecraft/world/scores/PlayerTeam;)V a
	onTeamChanged (Lnet/minecraft/world/scores/PlayerTeam;)V b
	onTeamRemoved (Lnet/minecraft/world/scores/PlayerTeam;)V c
	removePlayerFromTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)V b
	setDirty ()V a
	setDisplayObjective (Lnet/minecraft/world/scores/DisplaySlot;Lnet/minecraft/world/scores/Objective;)V a
	startTrackingObjective (Lnet/minecraft/world/scores/Objective;)V e
	stopTrackingObjective (Lnet/minecraft/world/scores/Objective;)V g
net/minecraft/server/ServerScoreboard$Method ahx$a
	$VALUES c
	CHANGE a
	REMOVE b
	$values ()[Lnet/minecraft/server/ServerScoreboard$Method; a
net/minecraft/server/ServerTickRateManager ahy
	previousIsFrozen k
	remainingSprintTicks g
	scheduledCurrentSprintTicks j
	server l
	sprintTickStartTime h
	sprintTimeSpend i
	checkShouldSprintThisTick ()Z d
	endTickWork ()V e
	finishTickSprint ()V p
	isSprinting ()Z a
	requestGameToSprint (I)Z b
	setFrozen (Z)V a
	setTickRate (F)V a
	stepGameIfPaused (I)Z a
	stopSprinting ()Z c
	stopStepping ()Z b
	updateJoiningPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	updateStateToClients ()V n
	updateStepTicks ()V o
net/minecraft/server/Services ahz
	USERID_CACHE_FILE e
	profileCache d
	profileRepository c
	servicesKeySet b
	sessionService a
	canValidateProfileKeys ()Z b
	create (Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Ljava/io/File;)Lnet/minecraft/server/Services; a
	profileCache ()Lnet/minecraft/server/players/GameProfileCache; f
	profileKeySignatureValidator ()Lnet/minecraft/util/SignatureValidator; a
	profileRepository ()Lcom/mojang/authlib/GameProfileRepository; e
	servicesKeySet ()Lcom/mojang/authlib/yggdrasil/ServicesKeySet; d
	sessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; c
net/minecraft/server/TickTask aia
	runnable b
	tick a
	getTick ()I a
net/minecraft/server/WorldLoader aib
	LOGGER a
	load (Lnet/minecraft/server/WorldLoader$InitConfig;Lnet/minecraft/server/WorldLoader$WorldDataSupplier;Lnet/minecraft/server/WorldLoader$ResultFactory;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	loadAndReplaceLayer (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/server/RegistryLayer;Ljava/util/List;)Lnet/minecraft/core/LayeredRegistryAccess; b
	loadLayer (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/server/RegistryLayer;Ljava/util/List;)Lnet/minecraft/core/RegistryAccess$Frozen; a
net/minecraft/server/WorldLoader$DataLoadContext aib$a
	dataConfiguration b
	datapackDimensions d
	datapackWorldgen c
	resources a
	dataConfiguration ()Lnet/minecraft/world/level/WorldDataConfiguration; b
	datapackDimensions ()Lnet/minecraft/core/RegistryAccess$Frozen; d
	datapackWorldgen ()Lnet/minecraft/core/RegistryAccess$Frozen; c
	resources ()Lnet/minecraft/server/packs/resources/ResourceManager; a
net/minecraft/server/WorldLoader$DataLoadOutput aib$b
	cookie a
	finalDimensions b
	cookie ()Ljava/lang/Object; a
	finalDimensions ()Lnet/minecraft/core/RegistryAccess$Frozen; b
net/minecraft/server/WorldLoader$InitConfig aib$c
	commandSelection b
	functionCompilationLevel c
	packConfig a
	commandSelection ()Lnet/minecraft/commands/Commands$CommandSelection; b
	functionCompilationLevel ()I c
	packConfig ()Lnet/minecraft/server/WorldLoader$PackConfig; a
net/minecraft/server/WorldLoader$PackConfig aib$d
	initMode d
	initialDataConfig b
	packRepository a
	safeMode c
	createResourceManager ()Lcom/mojang/datafixers/util/Pair; a
	initMode ()Z e
	initialDataConfig ()Lnet/minecraft/world/level/WorldDataConfiguration; c
	packRepository ()Lnet/minecraft/server/packs/repository/PackRepository; b
	safeMode ()Z d
net/minecraft/server/WorldLoader$ResultFactory aib$e
net/minecraft/server/WorldLoader$WorldDataSupplier aib$f
net/minecraft/server/WorldStem aic
	dataPackResources b
	registries c
	resourceManager a
	worldData d
	dataPackResources ()Lnet/minecraft/server/ReloadableServerResources; b
	registries ()Lnet/minecraft/core/LayeredRegistryAccess; c
	resourceManager ()Lnet/minecraft/server/packs/resources/CloseableResourceManager; a
	worldData ()Lnet/minecraft/world/level/storage/WorldData; d
net/minecraft/server/advancements/AdvancementVisibilityEvaluator aid
	VISIBILITY_DEPTH a
	evaluateVisibility (Lnet/minecraft/advancements/AdvancementNode;Lit/unimi/dsi/fastutil/Stack;Ljava/util/function/Predicate;Lnet/minecraft/server/advancements/AdvancementVisibilityEvaluator$Output;)Z a
	evaluateVisibility (Lnet/minecraft/advancements/AdvancementNode;Ljava/util/function/Predicate;Lnet/minecraft/server/advancements/AdvancementVisibilityEvaluator$Output;)V a
	evaluateVisibilityRule (Lnet/minecraft/advancements/Advancement;Z)Lnet/minecraft/server/advancements/AdvancementVisibilityEvaluator$VisibilityRule; a
	evaluateVisiblityForUnfinishedNode (Lit/unimi/dsi/fastutil/Stack;)Z a
net/minecraft/server/advancements/AdvancementVisibilityEvaluator$Output aid$a
net/minecraft/server/advancements/AdvancementVisibilityEvaluator$VisibilityRule aid$b
	$VALUES d
	HIDE b
	NO_CHANGE c
	SHOW a
	$values ()[Lnet/minecraft/server/advancements/AdvancementVisibilityEvaluator$VisibilityRule; a
net/minecraft/server/bossevents/CustomBossEvent aif
	id h
	max k
	players i
	value j
	addOfflinePlayer (Ljava/util/UUID;)V a
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	getMax ()I d
	getTextId ()Lnet/minecraft/resources/ResourceLocation; a
	getValue ()I c
	load (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	onPlayerConnect (Lnet/minecraft/server/level/ServerPlayer;)V c
	onPlayerDisconnect (Lnet/minecraft/server/level/ServerPlayer;)V d
	removeAllPlayers ()V b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	save ()Lnet/minecraft/nbt/CompoundTag; f
	setMax (I)V b
	setPlayers (Ljava/util/Collection;)Z a
	setValue (I)V a
net/minecraft/server/bossevents/CustomBossEvents aig
	events a
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	getEvents ()Ljava/util/Collection; b
	getIds ()Ljava/util/Collection; a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onPlayerConnect (Lnet/minecraft/server/level/ServerPlayer;)V a
	onPlayerDisconnect (Lnet/minecraft/server/level/ServerPlayer;)V b
	remove (Lnet/minecraft/server/bossevents/CustomBossEvent;)V a
	save ()Lnet/minecraft/nbt/CompoundTag; c
net/minecraft/server/chase/ChaseClient aii
	LOGGER a
	RECONNECT_INTERVAL_SECONDS b
	server e
	serverHost c
	serverPort d
	socket g
	thread h
	wantsToRun f
	executeCommand (Ljava/lang/String;)V b
	handleMessage (Ljava/lang/String;)V a
	handleTeleport (Ljava/util/Scanner;)V a
	parseTarget (Ljava/util/Scanner;)Ljava/util/Optional; b
	run ()V c
	start ()V a
	stop ()V b
net/minecraft/server/chase/ChaseClient$TeleportTarget aii$a
	level a
	pos b
	rot c
	level ()Lnet/minecraft/resources/ResourceKey; a
	pos ()Lnet/minecraft/world/phys/Vec3; b
	rot ()Lnet/minecraft/world/phys/Vec2; c
net/minecraft/server/chase/ChaseServer aij
	LOGGER a
	broadcastIntervalMs e
	clientSockets h
	playerList d
	serverBindAddress b
	serverPort c
	serverSocket g
	wantsToRun f
	getPlayerPosition ()Lnet/minecraft/server/chase/ChaseServer$PlayerPosition; e
	runAcceptor ()V d
	runSender ()V c
	start ()V a
	stop ()V b
net/minecraft/server/chase/ChaseServer$PlayerPosition aij$a
	dimensionName a
	x b
	xRot f
	y c
	yRot e
	z d
	dimensionName ()Ljava/lang/String; a
	format ()Ljava/lang/String; g
	x ()D b
	xRot ()F f
	y ()D c
	yRot ()F e
	z ()D d
net/minecraft/server/commands/AdvancementCommands ail
	ERROR_CRITERION_NOT_FOUND b
	ERROR_NO_ACTION_PERFORMED a
	SUGGEST_ADVANCEMENTS c
	addChildren (Lnet/minecraft/advancements/AdvancementNode;Ljava/util/List;)V a
	getAdvancements (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/advancements/AdvancementHolder;Lnet/minecraft/server/commands/AdvancementCommands$Mode;)Ljava/util/List; a
	perform (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/commands/AdvancementCommands$Action;Ljava/util/Collection;)I a
	performCriterion (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/commands/AdvancementCommands$Action;Lnet/minecraft/advancements/AdvancementHolder;Ljava/lang/String;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/AdvancementCommands$Action ail$a
	$VALUES d
	GRANT a
	REVOKE b
	key c
	$values ()[Lnet/minecraft/server/commands/AdvancementCommands$Action; b
	getKey ()Ljava/lang/String; a
	perform (Lnet/minecraft/server/level/ServerPlayer;Ljava/lang/Iterable;)I a
	perform (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/advancements/AdvancementHolder;)Z a
	performCriterion (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/advancements/AdvancementHolder;Ljava/lang/String;)Z a
net/minecraft/server/commands/AdvancementCommands$Mode ail$b
	$VALUES h
	EVERYTHING e
	FROM c
	ONLY a
	THROUGH b
	UNTIL d
	children g
	parents f
	$values ()[Lnet/minecraft/server/commands/AdvancementCommands$Mode; a
net/minecraft/server/commands/AttributeCommand aim
	ERROR_MODIFIER_ALREADY_PRESENT d
	ERROR_NOT_LIVING_ENTITY a
	ERROR_NO_SUCH_ATTRIBUTE b
	ERROR_NO_SUCH_MODIFIER c
	addModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Ljava/util/UUID;Ljava/lang/String;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)I a
	getAttributeBase (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;D)I b
	getAttributeDescription (Lnet/minecraft/core/Holder;)Lnet/minecraft/network/chat/Component; a
	getAttributeInstance (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Ljava/util/UUID;D)I a
	getAttributeValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;D)I a
	getEntityWithAttribute (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/LivingEntity; b
	getLivingEntity (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/LivingEntity; a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	removeModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Ljava/util/UUID;)I a
	setAttributeBase (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;D)I c
net/minecraft/server/commands/BanIpCommands ain
	ERROR_ALREADY_BANNED b
	ERROR_INVALID_IP a
	banIp (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I b
	banIpOrName (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/BanListCommands aio
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	showList (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
net/minecraft/server/commands/BanPlayerCommands aip
	ERROR_ALREADY_BANNED a
	banPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/BossBarCommands aiq
	ERROR_ALREADY_EXISTS b
	ERROR_ALREADY_HIDDEN j
	ERROR_ALREADY_VISIBLE k
	ERROR_DOESNT_EXIST c
	ERROR_NO_COLOR_CHANGE f
	ERROR_NO_MAX_CHANGE i
	ERROR_NO_NAME_CHANGE e
	ERROR_NO_PLAYER_CHANGE d
	ERROR_NO_STYLE_CHANGE g
	ERROR_NO_VALUE_CHANGE h
	SUGGEST_BOSS_BAR a
	createBar (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/chat/Component;)I a
	getBossBar (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	getMax (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I b
	getPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I d
	getValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I a
	getVisible (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I c
	listBars (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeBar (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I e
	setColor (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/world/BossEvent$BossBarColor;)I a
	setMax (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;I)I b
	setName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/network/chat/Component;)I a
	setPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Ljava/util/Collection;)I a
	setStyle (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/world/BossEvent$BossBarOverlay;)I a
	setValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;I)I a
	setVisible (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Z)I a
net/minecraft/server/commands/ChaseCommand air
	BROADCAST_INTERVAL_MS f
	DEFAULT_BIND_ADDRESS d
	DEFAULT_CONNECT_HOST c
	DEFAULT_PORT e
	DIMENSION_NAMES a
	LOGGER b
	chaseClient h
	chaseServer g
	alreadyRunning (Lnet/minecraft/commands/CommandSourceStack;)Z b
	follow (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;I)I b
	lead (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	stop (Lnet/minecraft/commands/CommandSourceStack;)I a
net/minecraft/server/commands/ClearInventoryCommands ais
	ERROR_MULTIPLE b
	ERROR_SINGLE a
	clearInventory (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/function/Predicate;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
net/minecraft/server/commands/CloneCommands ait
	ERROR_AREA_TOO_LARGE c
	ERROR_FAILED d
	ERROR_OVERLAP b
	FILTER_AIR a
	beginEndDestinationAndModeSuffix (Lnet/minecraft/commands/CommandBuildContext;Lnet/minecraft/server/commands/CloneCommands$CommandFunction;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	clone (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/CloneCommands$DimensionAndPosition;Lnet/minecraft/server/commands/CloneCommands$DimensionAndPosition;Lnet/minecraft/server/commands/CloneCommands$DimensionAndPosition;Ljava/util/function/Predicate;Lnet/minecraft/server/commands/CloneCommands$Mode;)I a
	destinationAndModeSuffix (Lnet/minecraft/commands/CommandBuildContext;Lnet/minecraft/server/commands/CloneCommands$CommandFunction;Lnet/minecraft/server/commands/CloneCommands$CommandFunction;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	getLoadedDimensionAndPosition (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/level/ServerLevel;Ljava/lang/String;)Lnet/minecraft/server/commands/CloneCommands$DimensionAndPosition; a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	wrapWithCloneMode (Lnet/minecraft/server/commands/CloneCommands$CommandFunction;Lnet/minecraft/server/commands/CloneCommands$CommandFunction;Lnet/minecraft/server/commands/CloneCommands$CommandFunction;Lnet/minecraft/server/commands/CloneCommands$CommandFunction;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
net/minecraft/server/commands/CloneCommands$CloneBlockInfo ait$a
	pos a
	state b
	tag c
net/minecraft/server/commands/CloneCommands$CommandFunction ait$b
net/minecraft/server/commands/CloneCommands$DimensionAndPosition ait$c
	dimension a
	position b
	dimension ()Lnet/minecraft/server/level/ServerLevel; a
	position ()Lnet/minecraft/core/BlockPos; b
net/minecraft/server/commands/CloneCommands$Mode ait$d
	$VALUES e
	FORCE a
	MOVE b
	NORMAL c
	canOverlap d
	$values ()[Lnet/minecraft/server/commands/CloneCommands$Mode; b
	canOverlap ()Z a
net/minecraft/server/commands/DamageCommand aiu
	ERROR_INVULNERABLE a
	damage (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;FLnet/minecraft/world/damagesource/DamageSource;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
net/minecraft/server/commands/DataPackCommand aiv
	ERROR_PACK_ALREADY_DISABLED c
	ERROR_PACK_ALREADY_ENABLED b
	ERROR_PACK_FEATURES_NOT_ENABLED d
	ERROR_UNKNOWN_PACK a
	SELECTED_PACKS e
	UNSELECTED_PACKS f
	disablePack (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/packs/repository/Pack;)I a
	enablePack (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/packs/repository/Pack;Lnet/minecraft/server/commands/DataPackCommand$Inserter;)I a
	getPack (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Lnet/minecraft/server/packs/repository/Pack; a
	listAvailablePacks (Lnet/minecraft/commands/CommandSourceStack;)I b
	listEnabledPacks (Lnet/minecraft/commands/CommandSourceStack;)I c
	listPacks (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DataPackCommand$Inserter aiv$a
net/minecraft/server/commands/DeOpCommands aiw
	ERROR_NOT_OP a
	deopPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DebugCommand aix
	ERROR_ALREADY_RUNNING c
	ERROR_NOT_RUNNING b
	LOGGER a
	NO_RECURSIVE_TRACES d
	NO_RETURN_RUN e
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	start (Lnet/minecraft/commands/CommandSourceStack;)I a
	stop (Lnet/minecraft/commands/CommandSourceStack;)I b
net/minecraft/server/commands/DebugCommand$TraceCustomExecutor aix$a
	runGuarded (Lnet/minecraft/commands/CommandSourceStack;Lcom/mojang/brigadier/context/ContextChain;Lnet/minecraft/commands/execution/ChainModifiers;Lnet/minecraft/commands/execution/ExecutionControl;)V a
	runGuarded (Lnet/minecraft/commands/ExecutionCommandSource;Lcom/mojang/brigadier/context/ContextChain;Lnet/minecraft/commands/execution/ChainModifiers;Lnet/minecraft/commands/execution/ExecutionControl;)V b
net/minecraft/server/commands/DebugCommand$Tracer aix$b
	INDENT_OFFSET b
	lastIndent d
	output c
	waitingForResult e
	acceptsFailure ()Z x_
	acceptsSuccess ()Z l_
	alwaysAccepts ()Z m_
	indentAndSave (I)V a
	newLine ()V e
	onCall (ILnet/minecraft/resources/ResourceLocation;I)V a
	onCommand (ILjava/lang/String;)V a
	onError (Ljava/lang/String;)V a
	onReturn (ILjava/lang/String;I)V a
	printIndent (I)V b
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	shouldInformAdmins ()Z W_
net/minecraft/server/commands/DebugConfigCommand aiy
	config (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ServerPlayer;)I a
	getUuidsInConfig (Lnet/minecraft/server/MinecraftServer;)Ljava/lang/Iterable; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	unconfig (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/UUID;)I a
net/minecraft/server/commands/DebugMobSpawningCommand aiz
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spawnMobs (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;)I a
net/minecraft/server/commands/DebugPathCommand aja
	ERROR_NOT_COMPLETE c
	ERROR_NOT_MOB a
	ERROR_NO_PATH b
	fillBlocks (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DefaultGameModeCommands ajb
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setMode (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/GameType;)I a
net/minecraft/server/commands/DifficultyCommand ajc
	ERROR_ALREADY_DIFFICULT a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setDifficulty (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/Difficulty;)I a
net/minecraft/server/commands/EffectCommands ajd
	ERROR_CLEAR_EVERYTHING_FAILED b
	ERROR_CLEAR_SPECIFIC_FAILED c
	ERROR_GIVE_FAILED a
	clearEffect (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/core/Holder;)I a
	clearEffects (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	giveEffect (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/core/Holder;Ljava/lang/Integer;IZ)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
net/minecraft/server/commands/EmoteCommands aje
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/EnchantCommand ajf
	ERROR_INCOMPATIBLE c
	ERROR_LEVEL_TOO_HIGH d
	ERROR_NOTHING_HAPPENED e
	ERROR_NOT_LIVING_ENTITY a
	ERROR_NO_ITEM b
	enchant (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/core/Holder;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
net/minecraft/server/commands/ExecuteCommand ajg
	ERROR_AREA_TOO_LARGE c
	ERROR_CONDITIONAL_FAILED d
	ERROR_CONDITIONAL_FAILED_COUNT e
	ERROR_FUNCTION_CONDITION_INSTANTATION_FAILURE a
	MAX_TEST_AREA b
	SUGGEST_PREDICATE f
	addConditional (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLnet/minecraft/server/commands/ExecuteCommand$CommandPredicate;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	addConditionals (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;ZLnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	addIfBlocksConditional (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	checkCustomPredicate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Z a
	checkIfRegions (Lcom/mojang/brigadier/context/CommandContext;Z)I a
	checkMatchingData (Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I a
	checkRegions (Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt; c
	checkRegions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Z)Ljava/util/OptionalInt; a
	checkScore (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Z a
	checkScore (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/commands/ExecuteCommand$IntBiPredicate;)Z a
	checkUnlessRegions (Lcom/mojang/brigadier/context/CommandContext;Z)I b
	createNumericConditionalHandler (ZLnet/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate;)Lcom/mojang/brigadier/Command; a
	createRelationOperations (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
	expandOneToManyEntityRelation (Ljava/util/function/Function;)Lcom/mojang/brigadier/RedirectModifier; b
	expandOneToOneEntityRelation (Ljava/util/function/Function;)Lcom/mojang/brigadier/RedirectModifier; a
	expect (Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection; a
	isChunkLoaded (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	scheduleFunctionConditionsAndTest (Lnet/minecraft/commands/ExecutionCommandSource;Ljava/util/List;Ljava/util/function/Function;Ljava/util/function/IntPredicate;Lcom/mojang/brigadier/context/ContextChain;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/commands/execution/ExecutionControl;Lnet/minecraft/server/commands/ExecuteCommand$CommandGetter;Lnet/minecraft/commands/execution/ChainModifiers;)V a
	spawnEntityAndRedirect (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/Holder$Reference;)Lnet/minecraft/commands/CommandSourceStack; a
	storeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Ljava/util/function/IntFunction;Z)Lnet/minecraft/commands/CommandSourceStack; a
	storeValue (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;Z)Lnet/minecraft/commands/CommandSourceStack; a
	storeValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;ZZ)Lnet/minecraft/commands/CommandSourceStack; a
	wrapStores (Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
net/minecraft/server/commands/ExecuteCommand$CommandGetter ajg$a
net/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate ajg$b
net/minecraft/server/commands/ExecuteCommand$CommandPredicate ajg$c
net/minecraft/server/commands/ExecuteCommand$ExecuteIfFunctionCustomModifier ajg$d
	check a
	apply (Ljava/lang/Object;Ljava/util/List;Lcom/mojang/brigadier/context/ContextChain;Lnet/minecraft/commands/execution/ChainModifiers;Lnet/minecraft/commands/execution/ExecutionControl;)V a
	apply (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;Lcom/mojang/brigadier/context/ContextChain;Lnet/minecraft/commands/execution/ChainModifiers;Lnet/minecraft/commands/execution/ExecutionControl;)V a
net/minecraft/server/commands/ExecuteCommand$IntBiPredicate ajg$e
net/minecraft/server/commands/ExperienceCommand ajh
	ERROR_SET_POINTS_INVALID a
	addExperience (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/server/commands/ExperienceCommand$Type;)I a
	queryExperience (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/commands/ExperienceCommand$Type;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setExperience (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/server/commands/ExperienceCommand$Type;)I b
net/minecraft/server/commands/ExperienceCommand$Type ajh$a
	$VALUES g
	LEVELS b
	POINTS a
	add c
	name e
	query f
	set d
	$values ()[Lnet/minecraft/server/commands/ExperienceCommand$Type; a
net/minecraft/server/commands/FillBiomeCommand aji
	ERROR_NOT_LOADED a
	ERROR_VOLUME_TOO_LARGE b
	fill (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Holder$Reference;Ljava/util/function/Predicate;)I a
	fill (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Holder;)Lcom/mojang/datafixers/util/Either; a
	fill (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Holder;Ljava/util/function/Predicate;Ljava/util/function/Consumer;)Lcom/mojang/datafixers/util/Either; a
	makeResolver (Lorg/apache/commons/lang3/mutable/MutableInt;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/Holder;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/biome/BiomeResolver; a
	quantize (I)I a
	quantize (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
net/minecraft/server/commands/FillCommand ajj
	ERROR_AREA_TOO_LARGE a
	ERROR_FAILED c
	HOLLOW_CORE b
	fillBlocks (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/commands/arguments/blocks/BlockInput;Lnet/minecraft/server/commands/FillCommand$Mode;Ljava/util/function/Predicate;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
net/minecraft/server/commands/FillCommand$Mode ajj$a
	$VALUES f
	DESTROY d
	HOLLOW c
	OUTLINE b
	REPLACE a
	filter e
	$values ()[Lnet/minecraft/server/commands/FillCommand$Mode; a
net/minecraft/server/commands/ForceLoadCommand ajk
	ERROR_ALL_ADDED d
	ERROR_NONE_REMOVED e
	ERROR_NOT_TICKING c
	ERROR_TOO_MANY_CHUNKS b
	MAX_CHUNK_LIMIT a
	changeForceLoad (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ColumnPos;Lnet/minecraft/server/level/ColumnPos;Z)I a
	listForceLoad (Lnet/minecraft/commands/CommandSourceStack;)I a
	queryForceLoad (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ColumnPos;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeAll (Lnet/minecraft/commands/CommandSourceStack;)I b
net/minecraft/server/commands/FunctionCommand ajl
	ERROR_ARGUMENT_NOT_COMPOUND c
	ERROR_FUNCTION_INSTANTATION_FAILURE a
	ERROR_NO_FUNCTIONS d
	FULL_CONTEXT_CALLBACKS e
	SUGGEST_FUNCTION b
	decorateOutputIfNeeded (Lnet/minecraft/commands/ExecutionCommandSource;Lnet/minecraft/server/commands/FunctionCommand$Callbacks;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/commands/CommandResultCallback;)Lnet/minecraft/commands/CommandResultCallback; a
	getArgumentTag (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Lnet/minecraft/server/commands/data/DataAccessor;)Lnet/minecraft/nbt/CompoundTag; a
	instantiateAndQueueFunctions (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/commands/execution/ExecutionControl;Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/ExecutionCommandSource;Lnet/minecraft/commands/functions/CommandFunction;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/commands/CommandResultCallback;Z)V a
	modifySenderForExecution (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/commands/CommandSourceStack; a
	queueFunctions (Ljava/util/Collection;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/commands/ExecutionCommandSource;Lnet/minecraft/commands/ExecutionCommandSource;Lnet/minecraft/commands/execution/ExecutionControl;Lnet/minecraft/server/commands/FunctionCommand$Callbacks;Lnet/minecraft/commands/execution/ChainModifiers;)V a
	queueFunctionsAsReturn (Ljava/util/Collection;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/commands/ExecutionCommandSource;Lnet/minecraft/commands/ExecutionCommandSource;Lnet/minecraft/commands/execution/ExecutionControl;Lnet/minecraft/server/commands/FunctionCommand$Callbacks;)V a
	queueFunctionsNoReturn (Ljava/util/Collection;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/commands/ExecutionCommandSource;Lnet/minecraft/commands/ExecutionCommandSource;Lnet/minecraft/commands/execution/ExecutionControl;Lnet/minecraft/server/commands/FunctionCommand$Callbacks;)V b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/FunctionCommand$Callbacks ajl$b
	signalResult (Ljava/lang/Object;Lnet/minecraft/resources/ResourceLocation;I)V a
net/minecraft/server/commands/FunctionCommand$FunctionCustomExecutor ajl$c
	arguments (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/nbt/CompoundTag; a
	runGuarded (Lnet/minecraft/commands/CommandSourceStack;Lcom/mojang/brigadier/context/ContextChain;Lnet/minecraft/commands/execution/ChainModifiers;Lnet/minecraft/commands/execution/ExecutionControl;)V a
	runGuarded (Lnet/minecraft/commands/ExecutionCommandSource;Lcom/mojang/brigadier/context/ContextChain;Lnet/minecraft/commands/execution/ChainModifiers;Lnet/minecraft/commands/execution/ExecutionControl;)V b
net/minecraft/server/commands/GameModeCommand ajm
	PERMISSION_LEVEL a
	logGamemodeChange (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/GameType;)V a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setMode (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lnet/minecraft/world/level/GameType;)I a
net/minecraft/server/commands/GameRuleCommand ajn
	queryRule (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/GameRules$Key;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setRule (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/world/level/GameRules$Key;)I a
net/minecraft/server/commands/GiveCommand ajo
	MAX_ALLOWED_ITEMSTACKS a
	giveItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/item/ItemInput;Ljava/util/Collection;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
net/minecraft/server/commands/HelpCommand ajp
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ItemCommands ajq
	ERROR_SOURCE_INAPPLICABLE_SLOT d
	ERROR_SOURCE_NOT_A_CONTAINER c
	ERROR_TARGET_INAPPLICABLE_SLOT b
	ERROR_TARGET_NOT_A_CONTAINER a
	ERROR_TARGET_NO_CHANGES e
	ERROR_TARGET_NO_CHANGES_KNOWN_ITEM f
	SUGGEST_MODIFIER g
	applyModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	blockToBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos;I)I a
	blockToBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	blockToEntities (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILjava/util/Collection;I)I a
	blockToEntities (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILjava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	entityToBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;ILnet/minecraft/core/BlockPos;I)I a
	entityToBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;ILnet/minecraft/core/BlockPos;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	entityToEntities (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;ILjava/util/Collection;I)I a
	entityToEntities (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;ILjava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	getBlockItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/item/ItemStack; a
	getContainer (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;)Lnet/minecraft/world/Container; a
	getEntityItem (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/item/ItemStack; a
	modifyBlockItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	modifyEntityItem (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	setBlockItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/item/ItemStack;)I a
	setEntityItem (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/world/item/ItemStack;)I a
net/minecraft/server/commands/JfrCommand ajr
	DUMP_FAILED b
	START_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	startJfr (Lnet/minecraft/commands/CommandSourceStack;)I a
	stopJfr (Lnet/minecraft/commands/CommandSourceStack;)I b
net/minecraft/server/commands/KickCommand ajs
	ERROR_KICKING_OWNER a
	ERROR_SINGLEPLAYER b
	kickPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/KillCommand ajt
	kill (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ListPlayersCommand aju
	format (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/function/Function;)I a
	listPlayers (Lnet/minecraft/commands/CommandSourceStack;)I a
	listPlayersWithUuids (Lnet/minecraft/commands/CommandSourceStack;)I b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/LocateCommand ajv
	BIOME_SAMPLE_RESOLUTION_HORIZONTAL h
	BIOME_SAMPLE_RESOLUTION_VERTICAL i
	ERROR_BIOME_NOT_FOUND d
	ERROR_POI_NOT_FOUND e
	ERROR_STRUCTURE_INVALID c
	ERROR_STRUCTURE_NOT_FOUND b
	LOGGER a
	MAX_BIOME_SEARCH_RADIUS g
	MAX_STRUCTURE_SEARCH_RADIUS f
	POI_SEARCH_RADIUS j
	dist (IIII)F a
	getElementName (Lcom/mojang/datafixers/util/Pair;)Ljava/lang/String; a
	getHolders (Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument$Result;Lnet/minecraft/core/Registry;)Ljava/util/Optional; a
	locateBiome (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/ResourceOrTagArgument$Result;)I a
	locatePoi (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/ResourceOrTagArgument$Result;)I b
	locateStructure (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument$Result;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	showLocateResult (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/ResourceOrTagArgument$Result;Lnet/minecraft/core/BlockPos;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/time/Duration;)I a
	showLocateResult (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument$Result;Lnet/minecraft/core/BlockPos;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/time/Duration;)I a
	showLocateResult (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/lang/String;Ljava/time/Duration;)I a
net/minecraft/server/commands/LootCommand ajw
	ERROR_NO_HELD_ITEMS b
	ERROR_NO_LOOT_TABLE c
	SUGGEST_LOOT_TABLE a
	addTargets (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lnet/minecraft/server/commands/LootCommand$TailProvider;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	blockDistribute (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	blockReplace (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;IILjava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	callback (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;)V a
	callback (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;Lnet/minecraft/resources/ResourceLocation;)V a
	canMergeItems (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	distributeToContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;)Z a
	drop (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootParams;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropBlockLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropChestLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropFishingLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropInWorld (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec3;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	dropKillLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	entityReplace (Ljava/util/Collection;IILjava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	getContainer (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/Container; a
	getSourceHandItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; a
	playerGive (Ljava/util/Collection;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	setSlots (Lnet/minecraft/world/entity/Entity;Ljava/util/List;IILjava/util/List;)V a
net/minecraft/server/commands/LootCommand$Callback ajw$a
net/minecraft/server/commands/LootCommand$DropConsumer ajw$b
net/minecraft/server/commands/LootCommand$TailProvider ajw$c
net/minecraft/server/commands/MsgCommand ajx
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	sendMessage (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/PlayerChatMessage;)V a
net/minecraft/server/commands/OpCommand ajy
	ERROR_ALREADY_OP a
	opPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/PardonCommand ajz
	ERROR_NOT_BANNED a
	pardonPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/PardonIpCommand aka
	ERROR_INVALID a
	ERROR_NOT_BANNED b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	unban (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
net/minecraft/server/commands/ParticleCommand akb
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	sendParticles (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;FIZLjava/util/Collection;)I a
net/minecraft/server/commands/PerfCommand akc
	ERROR_ALREADY_RUNNING c
	ERROR_NOT_RUNNING b
	LOGGER a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	saveResults (Lnet/minecraft/commands/CommandSourceStack;Ljava/nio/file/Path;Lnet/minecraft/server/MinecraftServer;)V a
	startProfilingDedicatedServer (Lnet/minecraft/commands/CommandSourceStack;)I a
	stopProfilingDedicatedServer (Lnet/minecraft/commands/CommandSourceStack;)I b
	whenStopped (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/util/profiling/ProfileResults;)V a
net/minecraft/server/commands/PlaceCommand akd
	ERROR_FEATURE_FAILED a
	ERROR_JIGSAW_FAILED b
	ERROR_STRUCTURE_FAILED c
	ERROR_TEMPLATE_FAILED e
	ERROR_TEMPLATE_INVALID d
	SUGGEST_TEMPLATES f
	checkLoaded (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/ChunkPos;)V a
	placeFeature (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/Holder$Reference;Lnet/minecraft/core/BlockPos;)I a
	placeJigsaw (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/Holder;Lnet/minecraft/resources/ResourceLocation;ILnet/minecraft/core/BlockPos;)I a
	placeStructure (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/Holder$Reference;Lnet/minecraft/core/BlockPos;)I b
	placeTemplate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/block/Mirror;FI)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/PlaySoundCommand ake
	ERROR_TOO_FAR a
	playSound (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;Lnet/minecraft/world/phys/Vec3;FFF)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	source (Lnet/minecraft/sounds/SoundSource;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
net/minecraft/server/commands/PublishCommand akf
	ERROR_ALREADY_PUBLISHED b
	ERROR_FAILED a
	getSuccessMessage (I)Lnet/minecraft/network/chat/MutableComponent; a
	publish (Lnet/minecraft/commands/CommandSourceStack;IZLnet/minecraft/world/level/GameType;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/RaidCommand akg
	check (Lnet/minecraft/commands/CommandSourceStack;)I d
	getRaid (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/world/entity/raid/Raid; a
	glow (Lnet/minecraft/commands/CommandSourceStack;)I a
	playSound (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setBadOmenLevel (Lnet/minecraft/commands/CommandSourceStack;I)I a
	spawnLeader (Lnet/minecraft/commands/CommandSourceStack;)I b
	start (Lnet/minecraft/commands/CommandSourceStack;I)I b
	stop (Lnet/minecraft/commands/CommandSourceStack;)I c
net/minecraft/server/commands/RandomCommand akh
	ERROR_RANGE_TOO_LARGE a
	ERROR_RANGE_TOO_SMALL b
	drawRandomValueTree (Ljava/lang/String;Z)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
	randomSample (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Lnet/minecraft/resources/ResourceLocation;Z)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	resetAllSequences (Lnet/minecraft/commands/CommandSourceStack;)I a
	resetAllSequencesAndSetNewDefaults (Lnet/minecraft/commands/CommandSourceStack;IZZ)I a
	resetSequence (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;)I a
	resetSequence (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;IZZ)I a
	suggestRandomSequence (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/commands/RecipeCommand aki
	ERROR_GIVE_FAILED a
	ERROR_TAKE_FAILED b
	giveRecipes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	takeRecipes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/Collection;)I b
net/minecraft/server/commands/ReloadCommand akj
	LOGGER a
	discoverNewPacks (Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/world/level/storage/WorldData;Ljava/util/Collection;)Ljava/util/Collection; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	reloadPacks (Ljava/util/Collection;Lnet/minecraft/commands/CommandSourceStack;)V a
net/minecraft/server/commands/ResetChunksCommand akk
	LOGGER a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	resetChunks (Lnet/minecraft/commands/CommandSourceStack;IZ)I a
net/minecraft/server/commands/ReturnCommand akl
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ReturnCommand$ReturnFailCustomExecutor akl$a
	run (Ljava/lang/Object;Lcom/mojang/brigadier/context/ContextChain;Lnet/minecraft/commands/execution/ChainModifiers;Lnet/minecraft/commands/execution/ExecutionControl;)V a
	run (Lnet/minecraft/commands/ExecutionCommandSource;Lcom/mojang/brigadier/context/ContextChain;Lnet/minecraft/commands/execution/ChainModifiers;Lnet/minecraft/commands/execution/ExecutionControl;)V a
net/minecraft/server/commands/ReturnCommand$ReturnFromCommandCustomModifier akl$b
	apply (Ljava/lang/Object;Ljava/util/List;Lcom/mojang/brigadier/context/ContextChain;Lnet/minecraft/commands/execution/ChainModifiers;Lnet/minecraft/commands/execution/ExecutionControl;)V a
	apply (Lnet/minecraft/commands/ExecutionCommandSource;Ljava/util/List;Lcom/mojang/brigadier/context/ContextChain;Lnet/minecraft/commands/execution/ChainModifiers;Lnet/minecraft/commands/execution/ExecutionControl;)V a
net/minecraft/server/commands/ReturnCommand$ReturnValueCustomExecutor akl$c
	run (Ljava/lang/Object;Lcom/mojang/brigadier/context/ContextChain;Lnet/minecraft/commands/execution/ChainModifiers;Lnet/minecraft/commands/execution/ExecutionControl;)V a
	run (Lnet/minecraft/commands/ExecutionCommandSource;Lcom/mojang/brigadier/context/ContextChain;Lnet/minecraft/commands/execution/ChainModifiers;Lnet/minecraft/commands/execution/ExecutionControl;)V a
net/minecraft/server/commands/RideCommand akm
	ERROR_ALREADY_RIDING b
	ERROR_MOUNTING_LOOP e
	ERROR_MOUNTING_PLAYER d
	ERROR_MOUNT_FAILED c
	ERROR_NOT_RIDING a
	ERROR_WRONG_DIMENSION f
	dismount (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;)I a
	mount (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/SaveAllCommand akn
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	saveAll (Lnet/minecraft/commands/CommandSourceStack;Z)I a
net/minecraft/server/commands/SaveOffCommand ako
	ERROR_ALREADY_OFF a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/SaveOnCommand akp
	ERROR_ALREADY_ON a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/SayCommand akq
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ScheduleCommand akr
	ERROR_CANT_REMOVE b
	ERROR_SAME_TICK a
	SUGGEST_SCHEDULE c
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	remove (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	schedule (Lnet/minecraft/commands/CommandSourceStack;Lcom/mojang/datafixers/util/Pair;IZ)I a
net/minecraft/server/commands/ScoreboardCommand aks
	ERROR_DISPLAY_SLOT_ALREADY_EMPTY b
	ERROR_DISPLAY_SLOT_ALREADY_SET c
	ERROR_NOT_TRIGGER e
	ERROR_NO_VALUE f
	ERROR_OBJECTIVE_ALREADY_EXISTS a
	ERROR_TRIGGER_ALREADY_ENABLED d
	addNumberFormats (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lnet/minecraft/server/commands/ScoreboardCommand$NumberFormatCommandExecutor;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	addObjective (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Lnet/minecraft/network/chat/Component;)I a
	addScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I b
	clearDisplaySlot (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/DisplaySlot;)I a
	createRenderTypeModify ()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
	enableTrigger (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I a
	getFirstTargetName (Ljava/util/Collection;)Lnet/minecraft/network/chat/Component; a
	getScore (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/ScoreHolder;Lnet/minecraft/world/scores/Objective;)I a
	listObjectives (Lnet/minecraft/commands/CommandSourceStack;)I b
	listTrackedPlayerScores (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/ScoreHolder;)I a
	listTrackedPlayers (Lnet/minecraft/commands/CommandSourceStack;)I a
	performOperation (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/commands/arguments/OperationArgument$Operation;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeObjective (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;)I a
	removeScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I c
	resetScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I b
	resetScores (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	setDisplayAutoUpdate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;Z)I a
	setDisplayName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/network/chat/Component;)I a
	setDisplaySlot (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/DisplaySlot;Lnet/minecraft/world/scores/Objective;)I a
	setObjectiveFormat (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/network/chat/numbers/NumberFormat;)I a
	setRenderType (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)I a
	setScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I a
	setScoreDisplay (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/network/chat/Component;)I a
	setScoreNumberFormat (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/network/chat/numbers/NumberFormat;)I a
	suggestTriggers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/commands/ScoreboardCommand$NumberFormatCommandExecutor aks$a
net/minecraft/server/commands/SeedCommand akt
	register (Lcom/mojang/brigadier/CommandDispatcher;Z)V a
net/minecraft/server/commands/ServerPackCommand aku
	popPack (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/UUID;)I a
	pushPack (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	sendToAllConnections (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/protocol/Packet;)V a
net/minecraft/server/commands/SetBlockCommand akv
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	setBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lnet/minecraft/commands/arguments/blocks/BlockInput;Lnet/minecraft/server/commands/SetBlockCommand$Mode;Ljava/util/function/Predicate;)I a
net/minecraft/server/commands/SetBlockCommand$Filter akv$a
net/minecraft/server/commands/SetBlockCommand$Mode akv$b
	$VALUES c
	DESTROY b
	REPLACE a
	$values ()[Lnet/minecraft/server/commands/SetBlockCommand$Mode; a
net/minecraft/server/commands/SetPlayerIdleTimeoutCommand akw
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setIdleTimeout (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/SetSpawnCommand akx
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setSpawn (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/core/BlockPos;F)I a
net/minecraft/server/commands/SetWorldSpawnCommand aky
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setSpawn (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;F)I a
net/minecraft/server/commands/SpawnArmorTrimsCommand akz
	MATERIAL_AND_SLOT_TO_ITEM a
	TRIM_MATERIAL_ORDER e
	TRIM_PATTERN_ORDER d
	VANILLA_TRIM_MATERIALS c
	VANILLA_TRIM_PATTERNS b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spawnArmorTrims (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/player/Player;)I a
net/minecraft/server/commands/SpectateCommand ala
	ERROR_NOT_SPECTATOR b
	ERROR_SELF a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spectate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerPlayer;)I a
net/minecraft/server/commands/SpreadPlayersCommand alb
	ERROR_FAILED_TO_SPREAD_ENTITIES c
	ERROR_FAILED_TO_SPREAD_TEAMS b
	ERROR_INVALID_MAX_HEIGHT d
	MAX_ITERATION_COUNT a
	createInitialPositions (Lnet/minecraft/util/RandomSource;IDDDD)[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position; a
	getNumberOfTeams (Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setPlayerPositions (Ljava/util/Collection;Lnet/minecraft/server/level/ServerLevel;[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;IZ)D a
	spreadPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec2;FFIZLjava/util/Collection;)I a
	spreadPositions (Lnet/minecraft/world/phys/Vec2;DLnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;DDDDI[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;Z)V a
net/minecraft/server/commands/SpreadPlayersCommand$Position alb$a
	x a
	z b
	clamp (DDDD)Z a
	dist (Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;)D a
	getLength ()D b
	getSpawnY (Lnet/minecraft/world/level/BlockGetter;I)I a
	isSafe (Lnet/minecraft/world/level/BlockGetter;I)Z b
	moveAway (Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;)V b
	normalize ()V a
	randomize (Lnet/minecraft/util/RandomSource;DDDD)V a
net/minecraft/server/commands/StopCommand alc
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/StopSoundCommand ald
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	stopSound (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/sounds/SoundSource;Lnet/minecraft/resources/ResourceLocation;)I a
net/minecraft/server/commands/SummonCommand ale
	ERROR_DUPLICATE_UUID b
	ERROR_FAILED a
	INVALID_POSITION c
	createEntity (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/Holder$Reference;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/nbt/CompoundTag;Z)Lnet/minecraft/world/entity/Entity; a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	spawnEntity (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/Holder$Reference;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/nbt/CompoundTag;Z)I b
net/minecraft/server/commands/TagCommand alf
	ERROR_ADD_FAILED a
	ERROR_REMOVE_FAILED b
	addTag (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/lang/String;)I a
	getTags (Ljava/util/Collection;)Ljava/util/Collection; a
	listTags (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeTag (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/lang/String;)I b
net/minecraft/server/commands/TeamCommand alg
	ERROR_TEAM_ALREADY_COLOR d
	ERROR_TEAM_ALREADY_EMPTY b
	ERROR_TEAM_ALREADY_EXISTS a
	ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED f
	ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED e
	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED h
	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED g
	ERROR_TEAM_ALREADY_NAME c
	ERROR_TEAM_COLLISION_UNCHANGED k
	ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED j
	ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED i
	createTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	createTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I a
	deleteTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I b
	emptyTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I a
	getFirstMemberName (Ljava/util/Collection;)Lnet/minecraft/network/chat/Component; a
	joinTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Ljava/util/Collection;)I a
	leaveTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	listMembers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I c
	listTeams (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setCollision (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$CollisionRule;)I a
	setColor (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/ChatFormatting;)I a
	setDeathMessageVisibility (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$Visibility;)I b
	setDisplayName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I a
	setFriendlyFire (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Z)I b
	setFriendlySight (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Z)I a
	setNametagVisibility (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$Visibility;)I a
	setPrefix (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I b
	setSuffix (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I c
net/minecraft/server/commands/TeamMsgCommand alh
	ERROR_NOT_ON_TEAM b
	SUGGEST_STYLE a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	sendMessage (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/scores/PlayerTeam;Ljava/util/List;Lnet/minecraft/network/chat/PlayerChatMessage;)V a
net/minecraft/server/commands/TeleportCommand ali
	INVALID_POSITION a
	formatDouble (D)Ljava/lang/String; a
	performTeleport (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;DDDLjava/util/Set;FFLnet/minecraft/server/commands/TeleportCommand$LookAt;)V a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	teleportToEntity (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/entity/Entity;)I a
	teleportToPos (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/commands/arguments/coordinates/Coordinates;Lnet/minecraft/commands/arguments/coordinates/Coordinates;Lnet/minecraft/server/commands/TeleportCommand$LookAt;)I a
net/minecraft/server/commands/TeleportCommand$LookAt ali$a
	anchor c
	entity b
	position a
	perform (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/server/commands/TellRawCommand alj
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/TickCommand alk
	DEFAULT_TICKRATE b
	MAX_TICKRATE a
	nanosToMilisString (J)Ljava/lang/String; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setFreeze (Lnet/minecraft/commands/CommandSourceStack;Z)I a
	setTickingRate (Lnet/minecraft/commands/CommandSourceStack;F)I a
	sprint (Lnet/minecraft/commands/CommandSourceStack;I)I a
	step (Lnet/minecraft/commands/CommandSourceStack;I)I b
	stopSprinting (Lnet/minecraft/commands/CommandSourceStack;)I c
	stopStepping (Lnet/minecraft/commands/CommandSourceStack;)I b
	tickQuery (Lnet/minecraft/commands/CommandSourceStack;)I a
net/minecraft/server/commands/TimeCommand all
	addTime (Lnet/minecraft/commands/CommandSourceStack;I)I b
	getDayTime (Lnet/minecraft/server/level/ServerLevel;)I a
	queryTime (Lnet/minecraft/commands/CommandSourceStack;I)I c
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setTime (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/TitleCommand alm
	clearTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	resetTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I b
	setTimes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;III)I a
	showTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;Ljava/lang/String;Ljava/util/function/Function;)I a
net/minecraft/server/commands/TriggerCommand aln
	ERROR_INVALID_OBJECTIVE b
	ERROR_NOT_PRIMED a
	addValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/scores/Objective;I)I a
	getScore (Lnet/minecraft/world/scores/Scoreboard;Lnet/minecraft/world/scores/ScoreHolder;Lnet/minecraft/world/scores/Objective;)Lnet/minecraft/world/scores/ScoreAccess; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/scores/Objective;I)I b
	simpleTrigger (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/scores/Objective;)I a
	suggestObjectives (Lnet/minecraft/commands/CommandSourceStack;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/commands/WardenSpawnTrackerCommand alo
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	resetTracker (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	setWarningLevel (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;I)I a
net/minecraft/server/commands/WeatherCommand alp
	DEFAULT_TIME a
	getDuration (Lnet/minecraft/commands/CommandSourceStack;ILnet/minecraft/util/valueproviders/IntProvider;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setClear (Lnet/minecraft/commands/CommandSourceStack;I)I a
	setRain (Lnet/minecraft/commands/CommandSourceStack;I)I b
	setThunder (Lnet/minecraft/commands/CommandSourceStack;I)I c
net/minecraft/server/commands/WhitelistCommand alq
	ERROR_ALREADY_DISABLED b
	ERROR_ALREADY_ENABLED a
	ERROR_ALREADY_WHITELISTED c
	ERROR_NOT_WHITELISTED d
	addPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	disableWhitelist (Lnet/minecraft/commands/CommandSourceStack;)I c
	enableWhitelist (Lnet/minecraft/commands/CommandSourceStack;)I b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	reload (Lnet/minecraft/commands/CommandSourceStack;)I a
	removePlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I b
	showList (Lnet/minecraft/commands/CommandSourceStack;)I d
net/minecraft/server/commands/WorldBorderCommand alr
	ERROR_SAME_CENTER a
	ERROR_SAME_DAMAGE_AMOUNT i
	ERROR_SAME_DAMAGE_BUFFER h
	ERROR_SAME_SIZE b
	ERROR_SAME_WARNING_DISTANCE g
	ERROR_SAME_WARNING_TIME f
	ERROR_TOO_BIG d
	ERROR_TOO_FAR_OUT e
	ERROR_TOO_SMALL c
	getSize (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setCenter (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec2;)I a
	setDamageAmount (Lnet/minecraft/commands/CommandSourceStack;F)I b
	setDamageBuffer (Lnet/minecraft/commands/CommandSourceStack;F)I a
	setSize (Lnet/minecraft/commands/CommandSourceStack;DJ)I a
	setWarningDistance (Lnet/minecraft/commands/CommandSourceStack;I)I b
	setWarningTime (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/data/BlockDataAccessor als
	ERROR_NOT_A_BLOCK_ENTITY b
	PROVIDER a
	entity c
	pos d
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/DataAccessor alt
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/DataCommands alu
	ALL_PROVIDERS a
	ERROR_EXPECTED_OBJECT h
	ERROR_EXPECTED_VALUE i
	ERROR_GET_NON_EXISTENT f
	ERROR_GET_NOT_NUMBER e
	ERROR_INVALID_SUBSTRING j
	ERROR_MERGE_UNCHANGED d
	ERROR_MULTIPLE_TAGS g
	SOURCE_PROVIDERS c
	TARGET_PROVIDERS b
	decorateModification (Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	getAsText (Lnet/minecraft/nbt/Tag;)Ljava/lang/String; a
	getData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;)I a
	getData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I b
	getNumeric (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;D)I a
	getOffset (II)I a
	getSingleTag (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Lnet/minecraft/server/commands/data/DataAccessor;)Lnet/minecraft/nbt/Tag; a
	getSingletonSource (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/commands/data/DataCommands$DataProvider;)Ljava/util/List; a
	manipulateData (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/commands/data/DataCommands$DataProvider;Lnet/minecraft/server/commands/data/DataCommands$DataManipulator;Ljava/util/List;)I a
	mergeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/nbt/CompoundTag;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I a
	resolveSourcePath (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/commands/data/DataCommands$DataProvider;)Ljava/util/List; b
	stringifyTagList (Ljava/util/List;Lnet/minecraft/server/commands/data/DataCommands$StringProcessor;)Ljava/util/List; a
	substring (Ljava/lang/String;I)Ljava/lang/String; a
	substring (Ljava/lang/String;II)Ljava/lang/String; b
	validatedSubstring (Ljava/lang/String;II)Ljava/lang/String; a
net/minecraft/server/commands/data/DataCommands$DataManipulator alu$a
net/minecraft/server/commands/data/DataCommands$DataManipulatorDecorator alu$b
net/minecraft/server/commands/data/DataCommands$DataProvider alu$c
	access (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/commands/data/DataAccessor; a
	wrap (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
net/minecraft/server/commands/data/DataCommands$StringProcessor alu$d
net/minecraft/server/commands/data/EntityDataAccessor alv
	ERROR_NO_PLAYERS b
	PROVIDER a
	entity c
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/StorageDataAccessor alw
	PROVIDER a
	SUGGEST_STORAGE b
	id d
	storage c
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getGlobalTags (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/world/level/storage/CommandStorage; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/dedicated/DedicatedPlayerList alz
	LOGGER a
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z d
	deop (Lcom/mojang/authlib/GameProfile;)V b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getServer ()Lnet/minecraft/server/dedicated/DedicatedServer; b
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z c
	loadIpBanList ()V y
	loadOps ()V A
	loadUserBanList ()V z
	loadWhiteList ()V C
	op (Lcom/mojang/authlib/GameProfile;)V a
	reloadWhiteList ()V a
	saveIpBanList ()V w
	saveOps ()V B
	saveUserBanList ()V x
	saveWhiteList ()V D
	setUsingWhiteList (Z)V a
net/minecraft/server/dedicated/DedicatedServer ama
	CONVERSION_RETRIES n
	CONVERSION_RETRY_DELAY_MS m
	LOGGER l
	consoleInput o
	gui t
	queryThreadGs4 p
	rconConsoleSource q
	rconThread r
	settings s
	textFilterClient u
	areNpcsEnabled ()Z Z
	convertOldUsers ()Z bn
	createTextFilterForPlayer (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/network/TextFilter; a
	dumpServerProperties (Ljava/nio/file/Path;)V a
	enforceSecureProfile ()Z ay
	fillServerSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; a
	forceDifficulty ()V r
	forceSynchronousWrites ()Z aW
	getAbsoluteMaxWorldSize ()I au
	getCompressionThreshold ()I ax
	getForcedGameType ()Lnet/minecraft/world/level/GameType; bb
	getFunctionCompilationLevel ()I j
	getLevelIdName ()Ljava/lang/String; q
	getMaxChainedNeighborUpdates ()I bh
	getMaxTickLength ()J bo
	getOperatorUserPermissionLevel ()I i
	getPlayerList ()Lnet/minecraft/server/dedicated/DedicatedPlayerList; bl
	getPlayerList ()Lnet/minecraft/server/players/PlayerList; ae
	getPluginNames ()Ljava/lang/String; s
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	getRateLimitPacketsPerSecond ()I m
	getScaledTrackingDistance (I)I b
	getServerIp ()Ljava/lang/String; b
	getServerName ()Ljava/lang/String; f
	getServerPort ()I d
	getServerResourcePack ()Ljava/util/Optional; U
	getSpawnProtectionRadius ()I aj
	handleConsoleInput (Ljava/lang/String;Lnet/minecraft/commands/CommandSourceStack;)V a
	handleConsoleInputs ()V bk
	hasGui ()Z ah
	hidesOnlinePlayers ()Z al
	initServer ()Z e
	isCommandBlockEnabled ()Z o
	isDedicatedServer ()Z l
	isEpollEnabled ()Z n
	isHardcore ()Z h
	isNetherEnabled ()Z D
	isPublished ()Z p
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	isSpawningAnimals ()Z Y
	isSpawningMonsters ()Z S
	isUnderSpawnProtection (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	logIPs ()Z bj
	onServerExit ()V g
	repliesToStatus ()Z ak
	runCommand (Ljava/lang/String;)Ljava/lang/String; a
	setPlayerIdleTimeout (I)V c
	shouldInformAdmins ()Z W_
	shouldRconBroadcast ()Z k
	showGui ()V bm
	stopServer ()V t
	storeUsingWhiteList (Z)V i
	tickChildren (Ljava/util/function/BooleanSupplier;)V b
	waitForRetry ()V bx
net/minecraft/server/dedicated/DedicatedServerProperties amb
	COMMA_SPLITTER ac
	LOGGER aa
	SHA1 ab
	allowFlight g
	allowNether v
	announcePlayerAchievements o
	broadcastConsoleToOps K
	broadcastRconToOps J
	difficulty k
	enableCommandBlock y
	enableJmxMonitoring N
	enableQuery p
	enableRcon r
	enableStatus O
	enforceSecureProfile W
	enforceWhitelist j
	entityBroadcastRangePercentage Q
	forceGameMode i
	functionPermissionLevel B
	gamemode l
	hardcore u
	hideOnlinePlayers P
	initialDataPackConfiguration T
	levelName m
	logIPs X
	maxChainedNeighborUpdates D
	maxPlayers H
	maxTickTime C
	maxWorldSize L
	motd h
	networkCompressionThreshold I
	onlineMode a
	opPermissionLevel A
	playerIdleTimeout U
	preventProxyConnections b
	pvp f
	queryPort q
	rateLimitPacketsPerSecond E
	rconPassword t
	rconPort s
	serverIp c
	serverPort n
	serverResourcePackInfo S
	simulationDistance G
	spawnAnimals d
	spawnMonsters w
	spawnNpcs e
	spawnProtection z
	syncChunkWrites M
	textFilteringConfig R
	useNativeTransport x
	viewDistance F
	whiteList V
	worldDimensionData ad
	worldOptions Y
	createDimensions (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/level/levelgen/WorldDimensions; a
	fromFile (Ljava/nio/file/Path;)Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	getDatapackConfig (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/world/level/DataPackConfig; b
	getServerPackInfo (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Ljava/util/Optional; a
	parseResourcePackPrompt (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; c
	reload (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	reload (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/Settings; b
net/minecraft/server/dedicated/DedicatedServerProperties$WorldDimensionData amb$a
	LEGACY_PRESET_NAMES c
	generatorSettings a
	levelType b
	create (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/level/levelgen/WorldDimensions; a
	generatorSettings ()Lcom/google/gson/JsonObject; a
	levelType ()Ljava/lang/String; b
net/minecraft/server/dedicated/DedicatedServerSettings amc
	properties b
	source a
	forceSave ()V b
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	update (Ljava/util/function/UnaryOperator;)Lnet/minecraft/server/dedicated/DedicatedServerSettings; a
net/minecraft/server/dedicated/ServerWatchdog amd
	LOGGER a
	MAX_SHUTDOWN_TIME b
	SHUTDOWN_STATUS c
	maxTickTimeNanos e
	server d
	exit ()V a
net/minecraft/server/dedicated/Settings ame
	LOGGER a
	properties Z
	cloneProperties ()Ljava/util/Properties; a
	dispatchNumberOrString (Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function; a
	get (Ljava/lang/String;I)I a
	get (Ljava/lang/String;J)J a
	get (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I a
	get (Ljava/lang/String;Z)Z a
	getLegacy (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object; a
	getLegacyBoolean (Ljava/lang/String;)Ljava/lang/Boolean; b
	getLegacyString (Ljava/lang/String;)Ljava/lang/String; a
	getMutable (Ljava/lang/String;I)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Z)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getStringRaw (Ljava/lang/String;)Ljava/lang/String; c
	loadFromFile (Ljava/nio/file/Path;)Ljava/util/Properties; b
	reload (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/Settings; b
	store (Ljava/nio/file/Path;)V c
	wrapNumberDeserializer (Ljava/util/function/Function;)Ljava/util/function/Function; a
net/minecraft/server/dedicated/Settings$MutableValue ame$a
	key b
	serializer d
	value c
	update (Lnet/minecraft/core/RegistryAccess;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings; a
net/minecraft/server/gui/MinecraftServerGui amg
	LOGGER b
	MONOSPACED a
	SHUTDOWN_TITLE d
	TITLE c
	finalizers g
	isClosing h
	logAppenderThread f
	server e
	addFinalizer (Ljava/lang/Runnable;)V a
	buildChatPanel ()Ljavax/swing/JComponent; e
	buildInfoPanel ()Ljavax/swing/JComponent; c
	buildPlayerPanel ()Ljavax/swing/JComponent; d
	close ()V b
	print (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V a
	runFinalizers ()V f
	showFrameFor (Lnet/minecraft/server/dedicated/DedicatedServer;)Lnet/minecraft/server/gui/MinecraftServerGui; a
	start ()V a
net/minecraft/server/gui/PlayerListComponent amh
	server a
	tickCount b
	tick ()V a
net/minecraft/server/gui/StatsComponent ami
	DECIMAL_FORMAT a
	msgs d
	server e
	timer f
	values b
	vp c
	close ()V a
	tick ()V b
net/minecraft/server/level/BlockDestructionProgress amk
	id a
	pos b
	progress c
	updatedRenderTick d
	compareTo (Lnet/minecraft/server/level/BlockDestructionProgress;)I a
	getId ()I a
	getPos ()Lnet/minecraft/core/BlockPos; b
	getProgress ()I c
	getUpdatedRenderTick ()I d
	setProgress (I)V a
	updateTick (I)V b
net/minecraft/server/level/ChunkHolder aml
	CHUNK_STATUSES f
	NOT_DONE_YET d
	UNLOADED_CHUNK a
	UNLOADED_CHUNK_FUTURE b
	UNLOADED_LEVEL_CHUNK c
	UNLOADED_LEVEL_CHUNK_FUTURE e
	blockChangedLightSectionFilter t
	changedBlocksPerSection s
	chunkToSave l
	chunkToSaveHistory m
	entityTickingChunkFuture k
	fullChunkFuture i
	futures g
	hasChangedSections r
	levelHeightAccessor h
	lightEngine v
	oldTicketLevel n
	onLevelChange w
	pendingFullStateConfirmation z
	playerProvider x
	pos q
	queueLevel p
	sendSync A
	skyChangedLightSectionFilter u
	ticketLevel o
	tickingChunkFuture j
	wasAccessibleSinceLastSave y
	addSaveDependency (Ljava/lang/String;Ljava/util/concurrent/CompletableFuture;)V a
	addSendDependency (Ljava/util/concurrent/CompletableFuture;)V a
	blockChanged (Lnet/minecraft/core/BlockPos;)V a
	broadcast (Ljava/util/List;Lnet/minecraft/network/protocol/Packet;)V a
	broadcastBlockEntity (Ljava/util/List;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	broadcastBlockEntityIfNeeded (Ljava/util/List;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	broadcastChanges (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	demoteFullChunk (Lnet/minecraft/server/level/ChunkMap;Lnet/minecraft/server/level/FullChunkStatus;)V a
	getAllFutures ()Ljava/util/List; q
	getChunkSendSyncFuture ()Ljava/util/concurrent/CompletableFuture; e
	getChunkToSave ()Ljava/util/concurrent/CompletableFuture; j
	getChunkToSend ()Lnet/minecraft/world/level/chunk/LevelChunk; f
	getEntityTickingChunkFuture ()Ljava/util/concurrent/CompletableFuture; b
	getFullChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; g
	getFullChunkFuture ()Ljava/util/concurrent/CompletableFuture; c
	getFullStatus ()Lnet/minecraft/server/level/FullChunkStatus; k
	getFutureIfPresent (Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; b
	getFutureIfPresentUnchecked (Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; a
	getLastAvailable ()Lnet/minecraft/world/level/chunk/ChunkAccess; i
	getLastAvailableStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; h
	getOrScheduleFuture (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/server/level/ChunkMap;)Ljava/util/concurrent/CompletableFuture; a
	getPos ()Lnet/minecraft/world/level/ChunkPos; l
	getQueueLevel ()I n
	getTicketLevel ()I m
	getTickingChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; d
	getTickingChunkFuture ()Ljava/util/concurrent/CompletableFuture; a
	refreshAccessibility ()V p
	replaceProtoChunk (Lnet/minecraft/world/level/chunk/ImposterProtoChunk;)V a
	scheduleFullChunkPromotion (Lnet/minecraft/server/level/ChunkMap;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;Lnet/minecraft/server/level/FullChunkStatus;)V a
	sectionLightChanged (Lnet/minecraft/world/level/LightLayer;I)V a
	setQueueLevel (I)V b
	setTicketLevel (I)V a
	updateChunkToSave (Ljava/util/concurrent/CompletableFuture;Ljava/lang/String;)V a
	updateFutures (Lnet/minecraft/server/level/ChunkMap;Ljava/util/concurrent/Executor;)V a
	wasAccessibleSinceLastSave ()Z o
net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure aml$a
	UNLOADED b
net/minecraft/server/level/ChunkHolder$ChunkSaveDebug aml$b
	future b
	source c
	thread a
net/minecraft/server/level/ChunkHolder$LevelChangeListener aml$c
net/minecraft/server/level/ChunkHolder$PlayerProvider aml$d
	getPlayers (Lnet/minecraft/world/level/ChunkPos;Z)Ljava/util/List; a
net/minecraft/server/level/ChunkLevel amm
	BLOCK_TICKING_LEVEL c
	ENTITY_TICKING_LEVEL d
	FULL_CHUNK_LEVEL b
	MAX_LEVEL a
	byStatus (Lnet/minecraft/server/level/FullChunkStatus;)I a
	byStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;)I a
	fullStatus (I)Lnet/minecraft/server/level/FullChunkStatus; b
	generationStatus (I)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	isBlockTicking (I)Z d
	isEntityTicking (I)Z c
	isLoaded (I)Z e
net/minecraft/server/level/ChunkMap amn
	CHUNK_SAVED_EAGERLY_PER_TICK k
	CHUNK_SAVED_PER_TICK j
	CHUNK_TYPE_FULL h
	CHUNK_TYPE_REPLACEABLE f
	CHUNK_TYPE_UNKNOWN g
	EAGER_CHUNK_SAVE_COOLDOWN_IN_MILLIS l
	FORCED_TICKET_LEVEL c
	LOGGER i
	MAX_VIEW_DISTANCE b
	MIN_VIEW_DISTANCE a
	chunkGeneratorState v
	chunkSaveCooldowns M
	chunkStatusListener E
	chunkTypeCache L
	distanceManager F
	entitiesInLevel p
	entityMap K
	generator t
	level q
	lightEngine r
	mainThreadExecutor s
	mainThreadMailbox C
	modified z
	overworldDataStorage w
	pendingUnloads o
	playerMap J
	poiManager x
	progressListener D
	queueSorter A
	randomState u
	serverViewDistance O
	storageName I
	structureTemplateManager H
	tickingGenerated G
	toDrop y
	unloadQueue N
	updatingChunkMap m
	visibleChunkMap n
	worldgenMailbox B
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	anyPlayerCloseEnoughForSpawning (Lnet/minecraft/world/level/ChunkPos;)Z c
	applyChunkTrackingView (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/level/ChunkTrackingView;)V a
	broadcast (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAndSend (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V b
	createEmptyChunk (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/chunk/ChunkAccess; g
	debugFuturesAndCreateReportedException (Ljava/lang/IllegalStateException;Ljava/lang/String;)Lnet/minecraft/ReportedException; a
	debugReloadGenerator ()V d
	dropChunk (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/ChunkPos;)V b
	dumpChunks (Ljava/io/Writer;)V a
	euclideanDistanceSquared (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/Entity;)D a
	generator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; a
	generatorState ()Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; b
	getChunkDebugData (Lnet/minecraft/world/level/ChunkPos;)Ljava/lang/String; a
	getChunkQueueLevel (J)Ljava/util/function/IntSupplier; c
	getChunkRangeFuture (Lnet/minecraft/server/level/ChunkHolder;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture; a
	getChunkToSend (J)Lnet/minecraft/world/level/chunk/LevelChunk; d
	getChunks ()Ljava/lang/Iterable; k
	getDependencyStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;I)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	getDistanceManager ()Lnet/minecraft/server/level/DistanceManager; j
	getLightEngine ()Lnet/minecraft/server/level/ThreadedLevelLightEngine; e
	getPlayerViewDistance (Lnet/minecraft/server/level/ServerPlayer;)I b
	getPlayers (Lnet/minecraft/world/level/ChunkPos;Z)Ljava/util/List; a
	getPlayersCloseForSpawning (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/List; d
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; m
	getStorageName ()Ljava/lang/String; n
	getTickingGenerated ()I h
	getUpdatingChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; a
	getVisibleChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; b
	handleChunkLoadFailure (Ljava/lang/Throwable;Lnet/minecraft/world/level/ChunkPos;)Lcom/mojang/datafixers/util/Either; a
	hasWork ()Z f
	isChunkDataValid (Lnet/minecraft/nbt/CompoundTag;)Z b
	isChunkOnTrackedBorder (Lnet/minecraft/server/level/ServerPlayer;II)Z b
	isChunkTracked (Lnet/minecraft/server/level/ServerPlayer;II)Z a
	isExistingChunkFull (Lnet/minecraft/world/level/ChunkPos;)Z i
	markChunkPendingToSend (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/ChunkPos;)V a
	markChunkPendingToSend (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	markPosition (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;)B a
	markPositionReplaceable (Lnet/minecraft/world/level/ChunkPos;)V h
	move (Lnet/minecraft/server/level/ServerPlayer;)V a
	onChunkReadyToSend (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	onFullChunkStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/server/level/FullChunkStatus;)V a
	playerIsCloseEnoughForSpawning (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/ChunkPos;)Z c
	postLoadProtoChunk (Lnet/minecraft/server/level/ServerLevel;Ljava/util/List;)V a
	prepareAccessibleChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; c
	prepareEntityTickingChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; a
	prepareTickingChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; b
	printFuture (Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String; a
	processUnloads (Ljava/util/function/BooleanSupplier;)V b
	promoteChunkMap ()Z g
	protoChunkToFullChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; d
	randomState ()Lnet/minecraft/world/level/levelgen/RandomState; c
	readChunk (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; j
	releaseLightTicket (Lnet/minecraft/world/level/ChunkPos;)V b
	removeEntity (Lnet/minecraft/world/entity/Entity;)V b
	resendBiomesForChunks (Ljava/util/List;)V a
	save (Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	saveAllChunks (Z)V a
	saveChunkIfNeeded (Lnet/minecraft/server/level/ChunkHolder;)Z e
	schedule (Lnet/minecraft/server/level/ChunkHolder;Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; a
	scheduleChunkGeneration (Lnet/minecraft/server/level/ChunkHolder;Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; b
	scheduleChunkLoad (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; f
	scheduleUnload (JLnet/minecraft/server/level/ChunkHolder;)V a
	setServerViewDistance (I)V a
	size ()I i
	skipPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z c
	tick ()V l
	tick (Ljava/util/function/BooleanSupplier;)V a
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
	updateChunkTracking (Lnet/minecraft/server/level/ServerPlayer;)V e
	updatePlayerPos (Lnet/minecraft/server/level/ServerPlayer;)V d
	updatePlayerStatus (Lnet/minecraft/server/level/ServerPlayer;Z)V a
	upgradeChunkTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; c
	waitForLightBeforeSending (Lnet/minecraft/world/level/ChunkPos;I)V a
net/minecraft/server/level/ChunkMap$DistanceManager amn$a
	getChunk (J)Lnet/minecraft/server/level/ChunkHolder; b
	isChunkToRemove (J)Z a
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
net/minecraft/server/level/ChunkMap$TrackedEntity amn$b
	entity c
	lastSectionPos e
	range d
	seenBy f
	serverEntity b
	broadcast (Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAndSend (Lnet/minecraft/network/protocol/Packet;)V b
	broadcastRemoved ()V a
	getEffectiveRange ()I b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	scaledRange (I)I a
	updatePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	updatePlayers (Ljava/util/List;)V a
net/minecraft/server/level/ChunkTaskPriorityQueue amo
	PRIORITY_LEVEL_COUNT a
	acquired e
	firstQueue c
	maxTasks f
	name d
	taskQueue b
	acquire (J)Ljava/lang/Runnable; a
	getAcquired ()Lit/unimi/dsi/fastutil/longs/LongSet; c
	hasWork ()Z b
	pop ()Ljava/util/stream/Stream; a
	release (JZ)V a
	resortChunkTasks (ILnet/minecraft/world/level/ChunkPos;I)V a
	submit (Ljava/util/Optional;JI)V a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter amp
	LOGGER a
	mailbox d
	queues b
	sleeping c
	getDebugStatus ()Ljava/lang/String; b
	getProcessor (Lnet/minecraft/util/thread/ProcessorHandle;Z)Lnet/minecraft/util/thread/ProcessorHandle; a
	getQueue (Lnet/minecraft/util/thread/ProcessorHandle;)Lnet/minecraft/server/level/ChunkTaskPriorityQueue; b
	getReleaseProcessor (Lnet/minecraft/util/thread/ProcessorHandle;)Lnet/minecraft/util/thread/ProcessorHandle; a
	hasWork ()Z a
	message (Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Ljava/util/function/Function;JLjava/util/function/IntSupplier;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Lnet/minecraft/server/level/ChunkHolder;Ljava/lang/Runnable;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Lnet/minecraft/server/level/ChunkHolder;Ljava/util/function/Function;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	pollTask (Lnet/minecraft/server/level/ChunkTaskPriorityQueue;Lnet/minecraft/util/thread/ProcessorHandle;)V a
	release (Ljava/lang/Runnable;JZ)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release; a
	release (Lnet/minecraft/util/thread/ProcessorHandle;JLjava/lang/Runnable;Z)V a
	submit (Lnet/minecraft/util/thread/ProcessorHandle;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message amp$a
	level c
	pos b
	task a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release amp$b
	clearQueue c
	pos b
	task a
net/minecraft/server/level/ChunkTracker amq
	checkNeighborsAfterUpdate (JIZ)V a
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLevelFromSource (J)I b
	isSource (J)Z a
	update (JIZ)V b
net/minecraft/server/level/ChunkTrackingView amr
	EMPTY a
	contains (II)Z a
	contains (IIZ)Z a
	contains (Lnet/minecraft/world/level/ChunkPos;)Z a
	difference (Lnet/minecraft/server/level/ChunkTrackingView;Lnet/minecraft/server/level/ChunkTrackingView;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V a
	forEach (Ljava/util/function/Consumer;)V a
	isInViewDistance (II)Z b
	isInViewDistance (IIIII)Z a
	isWithinDistance (IIIIIZ)Z a
	of (Lnet/minecraft/world/level/ChunkPos;I)Lnet/minecraft/server/level/ChunkTrackingView; a
net/minecraft/server/level/ChunkTrackingView$Positioned amr$a
	center b
	viewDistance c
	center ()Lnet/minecraft/world/level/ChunkPos; a
	contains (IIZ)Z a
	forEach (Ljava/util/function/Consumer;)V a
	maxX ()I e
	maxZ ()I f
	minX ()I c
	minZ ()I d
	squareIntersects (Lnet/minecraft/server/level/ChunkTrackingView$Positioned;)Z a
	viewDistance ()I b
net/minecraft/server/level/ClientInformation ams
	MAX_LANGUAGE_LENGTH a
	allowsListing i
	chatColors e
	chatVisibility d
	language b
	mainHand g
	modelCustomisation f
	textFilteringEnabled h
	viewDistance c
	allowsListing ()Z i
	chatColors ()Z e
	chatVisibility ()Lnet/minecraft/world/entity/player/ChatVisiblity; d
	createDefault ()Lnet/minecraft/server/level/ClientInformation; a
	language ()Ljava/lang/String; b
	mainHand ()Lnet/minecraft/world/entity/HumanoidArm; g
	modelCustomisation ()I f
	textFilteringEnabled ()Z h
	viewDistance ()I c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/server/level/ColumnPos amt
	COORD_BITS c
	COORD_MASK d
	x a
	z b
	asLong (II)J a
	getX (J)I a
	getZ (J)I b
	toChunkPos ()Lnet/minecraft/world/level/ChunkPos; a
	toLong ()J b
	x ()I c
	z ()I d
net/minecraft/server/level/DemoMode amu
	DEMO_DAYS a
	TOTAL_PLAY_TICKS b
	demoEndedReminder g
	demoHasEnded f
	displayedIntro e
	gameModeTicks h
	handleBlockBreakAction (Lnet/minecraft/core/BlockPos;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Lnet/minecraft/core/Direction;II)V a
	outputDemoReminder ()V f
	tick ()V a
	useItem (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/server/level/DistanceManager amv
	INITIAL_TICKET_LIST_CAPACITY c
	LOGGER a
	PLAYER_TICKET_LEVEL b
	chunksToUpdateFutures j
	mainThreadExecutor o
	naturalSpawnChunkCounter g
	playerTicketManager i
	playersPerChunk d
	simulationDistance q
	ticketThrottler k
	ticketThrottlerInput l
	ticketThrottlerReleaser m
	ticketTickCounter p
	ticketTracker f
	tickets e
	ticketsToRelease n
	tickingTicketsTracker h
	addPlayer (Lnet/minecraft/core/SectionPos;Lnet/minecraft/server/level/ServerPlayer;)V a
	addRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V c
	addTicket (JLnet/minecraft/server/level/Ticket;)V a
	addTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V a
	dumpTickets (Ljava/lang/String;)V a
	getChunk (J)Lnet/minecraft/server/level/ChunkHolder; b
	getDebugStatus ()Ljava/lang/String; c
	getNaturalSpawnChunkCount ()I b
	getPlayerTicketLevel ()I g
	getTicketDebugString (J)Ljava/lang/String; e
	getTicketLevelAt (Lnet/minecraft/util/SortedArraySet;)I a
	getTickets (J)Lnet/minecraft/util/SortedArraySet; g
	hasPlayersNearby (J)Z f
	hasTickets ()Z f
	inBlockTickingRange (J)Z d
	inEntityTickingRange (J)Z c
	isChunkToRemove (J)Z a
	purgeStaleTickets ()V a
	removePlayer (Lnet/minecraft/core/SectionPos;Lnet/minecraft/server/level/ServerPlayer;)V b
	removeRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V d
	removeTicket (JLnet/minecraft/server/level/Ticket;)V b
	removeTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V b
	removeTicketsOnClosing ()V e
	runAllUpdates (Lnet/minecraft/server/level/ChunkMap;)Z a
	tickingTracker ()Lnet/minecraft/server/level/TickingTracker; d
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
	updatePlayerTickets (I)V a
	updateSimulationDistance (I)V b
net/minecraft/server/level/DistanceManager$ChunkTicketTracker amv$a
	MAX_LEVEL b
	getLevel (J)I c
	getLevelFromSource (J)I b
	runDistanceUpdates (I)I a
	setLevel (JI)V a
net/minecraft/server/level/DistanceManager$FixedPlayerDistanceChunkTracker amv$b
	chunks a
	maxDistance b
	dumpChunks (Ljava/lang/String;)V a
	getLevel (J)I c
	getLevelFromSource (J)I b
	havePlayer (J)Z d
	onLevelChange (JII)V a
	runAllUpdates ()V a
	setLevel (JI)V a
net/minecraft/server/level/DistanceManager$PlayerTicketTracker amv$c
	queueLevels h
	toUpdate i
	viewDistance g
	haveTicketFor (I)Z c
	onLevelChange (JII)V a
	onLevelChange (JIZZ)V a
	runAllUpdates ()V a
	updateViewDistance (I)V a
net/minecraft/server/level/FullChunkStatus amw
	$VALUES e
	BLOCK_TICKING c
	ENTITY_TICKING d
	FULL b
	INACCESSIBLE a
	$values ()[Lnet/minecraft/server/level/FullChunkStatus; a
	isOrAfter (Lnet/minecraft/server/level/FullChunkStatus;)Z a
net/minecraft/server/level/PlayerMap amx
	players a
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;Z)V a
	getAllPlayers ()Ljava/util/Set; a
	ignorePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	ignored (Lnet/minecraft/server/level/ServerPlayer;)Z e
	ignoredOrUnknown (Lnet/minecraft/server/level/ServerPlayer;)Z d
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	unIgnorePlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
net/minecraft/server/level/PlayerRespawnLogic amy
	getOverworldRespawnPos (Lnet/minecraft/server/level/ServerLevel;II)Lnet/minecraft/core/BlockPos; a
	getSpawnPosInChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/core/BlockPos; a
net/minecraft/server/level/SectionTracker amz
	checkNeighborsAfterUpdate (JIZ)V a
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLevelFromSource (J)I b
	update (JIZ)V b
net/minecraft/server/level/ServerBossEvent ana
	players h
	unmodifiablePlayers i
	visible j
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	broadcast (Ljava/util/function/Function;)V a
	getPlayers ()Ljava/util/Collection; h
	isVisible ()Z g
	removeAllPlayers ()V b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	setColor (Lnet/minecraft/world/BossEvent$BossBarColor;)V a
	setCreateWorldFog (Z)Lnet/minecraft/world/BossEvent; c
	setDarkenScreen (Z)Lnet/minecraft/world/BossEvent; a
	setName (Lnet/minecraft/network/chat/Component;)V a
	setOverlay (Lnet/minecraft/world/BossEvent$BossBarOverlay;)V a
	setPlayBossMusic (Z)Lnet/minecraft/world/BossEvent; b
	setProgress (F)V a
	setVisible (Z)V d
net/minecraft/server/level/ServerChunkCache anb
	CACHE_SIZE l
	CHUNK_STATUSES b
	chunkMap a
	dataStorage h
	distanceManager c
	lastChunk o
	lastChunkPos m
	lastChunkStatus n
	lastInhabitedUpdate i
	lastSpawnState p
	level d
	lightEngine f
	mainThread e
	mainThreadProcessor g
	spawnEnemies j
	spawnFriendlies k
	addEntity (Lnet/minecraft/world/entity/Entity;)V b
	addRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V a
	blockChanged (Lnet/minecraft/core/BlockPos;)V a
	broadcast (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V b
	broadcastAndSend (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V a
	chunkAbsent (Lnet/minecraft/server/level/ChunkHolder;I)Z a
	chunkScanner ()Lnet/minecraft/world/level/chunk/storage/ChunkScanAccess; m
	clearCache ()V r
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkDebugData (Lnet/minecraft/world/level/ChunkPos;)Ljava/lang/String; a
	getChunkForLighting (II)Lnet/minecraft/world/level/chunk/LightChunk; c
	getChunkFuture (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; b
	getChunkFutureMainThread (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; c
	getChunkNow (II)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getDataStorage ()Lnet/minecraft/world/level/storage/DimensionDataStorage; k
	getFullChunk (JLjava/util/function/Consumer;)V a
	getGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; g
	getGeneratorState ()Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; h
	getLastSpawnState ()Lnet/minecraft/world/level/NaturalSpawner$SpawnState; n
	getLevel ()Lnet/minecraft/world/level/BlockGetter; q
	getLevel ()Lnet/minecraft/world/level/Level; c
	getLightEngine ()Lnet/minecraft/server/level/ThreadedLevelLightEngine; a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; p
	getLoadedChunksCount ()I j
	getPendingTasksCount ()I f
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; l
	getTickingGenerated ()I b
	getVisibleChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; b
	hasChunk (II)Z b
	isPositionTicking (J)Z a
	move (Lnet/minecraft/server/level/ServerPlayer;)V a
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
	pollTask ()Z d
	randomState ()Lnet/minecraft/world/level/levelgen/RandomState; i
	removeEntity (Lnet/minecraft/world/entity/Entity;)V a
	removeRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V b
	removeTicketsOnClosing ()V o
	runDistanceManagerUpdates ()Z s
	save (Z)V a
	setSimulationDistance (I)V b
	setSpawnSettings (ZZ)V a
	setViewDistance (I)V a
	storeInCache (JLnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	tick (Ljava/util/function/BooleanSupplier;Z)V a
	tickChunks ()V t
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
net/minecraft/server/level/ServerChunkCache$ChunkAndHolder anb$a
	chunk a
	holder b
	chunk ()Lnet/minecraft/world/level/chunk/LevelChunk; a
	holder ()Lnet/minecraft/server/level/ChunkHolder; b
net/minecraft/server/level/ServerChunkCache$MainThreadExecutor anb$b
	doRunTask (Ljava/lang/Runnable;)V d
	getRunningThread ()Ljava/lang/Thread; aw
	pollTask ()Z x
	scheduleExecutables ()Z av
	shouldRun (Ljava/lang/Runnable;)Z e
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; f
net/minecraft/server/level/ServerEntity anc
	FORCED_POS_UPDATE_PERIOD a
	FORCED_TELEPORT_PERIOD e
	LOGGER b
	TOLERANCE_LEVEL_POSITION d
	TOLERANCE_LEVEL_ROTATION c
	ap o
	broadcast j
	entity g
	lastPassengers r
	level f
	positionCodec k
	teleportDelay q
	tickCount p
	trackDelta i
	trackedDataValues u
	updateInterval h
	wasOnGround t
	wasRiding s
	xRotp m
	yHeadRotp n
	yRotp l
	addPairing (Lnet/minecraft/server/level/ServerPlayer;)V b
	broadcastAndSend (Lnet/minecraft/network/protocol/Packet;)V a
	removePairing (Lnet/minecraft/server/level/ServerPlayer;)V a
	removedPassengers (Ljava/util/List;Ljava/util/List;)Ljava/util/stream/Stream; a
	sendChanges ()V a
	sendDirtyEntityData ()V b
	sendPairingData (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/function/Consumer;)V a
net/minecraft/server/level/ServerLevel and
	EMPTY_TIME_NO_TICK F
	END_SPAWN_POINT a
	LOGGER E
	MAX_SCHEDULED_TICKS_PER_TICK G
	RAIN_DELAY b
	RAIN_DURATION c
	THUNDER_DELAY D
	THUNDER_DURATION d
	blockEvents V
	blockEventsToReschedule W
	blockTicks R
	chunkSource I
	customSpawners Y
	dragonFight Z
	dragonParts aa
	emptyTime P
	entityManager M
	entityTickList L
	fluidTicks S
	gameEventDispatcher N
	handlingTick X
	isUpdatingNavigations U
	navigatingMobs T
	noSave e
	players H
	portalForcer Q
	raids f
	randomSequences ae
	server J
	serverLevelData K
	sleepStatus O
	structureCheck ac
	structureManager ab
	tickTime ad
	addDuringCommandTeleport (Lnet/minecraft/server/level/ServerPlayer;)V a
	addDuringPortalTeleport (Lnet/minecraft/server/level/ServerPlayer;)V b
	addDuringTeleport (Lnet/minecraft/world/entity/Entity;)V d
	addEntity (Lnet/minecraft/world/entity/Entity;)Z j
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z b
	addLegacyChunkEntities (Ljava/util/stream/Stream;)V a
	addNewPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V e
	addRespawnedPlayer (Lnet/minecraft/server/level/ServerPlayer;)V d
	addWithUUID (Lnet/minecraft/world/entity/Entity;)Z c
	addWorldGenChunkEntities (Ljava/util/stream/Stream;)V b
	advanceWeatherCycle ()V at
	announceSleepStatus ()V as
	areEntitiesLoaded (J)Z c
	blockEvent (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;II)V a
	blockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V b
	broadcastDamageEvent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;)V a
	broadcastEntityEvent (Lnet/minecraft/world/entity/Entity;B)V a
	canSleepThroughNights ()Z d
	clearBlockEvents (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	doBlockEvent (Lnet/minecraft/world/level/BlockEventData;)Z a
	dumpBlockEntityTickers (Ljava/io/Writer;)V a
	dumpEntities (Ljava/io/Writer;Ljava/lang/Iterable;)V a
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; I
	explode (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLnet/minecraft/world/level/Level$ExplosionInteraction;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/level/Explosion; a
	fillReportDetails (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReportCategory; a
	findClosestBiome3d (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;III)Lcom/mojang/datafixers/util/Pair; a
	findLightningRod (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; E
	findLightningTargetAround (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; b
	findNearestMapStructure (Lnet/minecraft/tags/TagKey;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)V a
	gatherChunkSourceStats ()Ljava/lang/String; H
	getAllEntities ()Ljava/lang/Iterable; A
	getBlockTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; N
	getBlockTicks ()Lnet/minecraft/world/ticks/LevelTicks; m
	getChunkSource ()Lnet/minecraft/server/level/ServerChunkCache; l
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; L
	getDataStorage ()Lnet/minecraft/world/level/storage/DimensionDataStorage; u
	getDragonFight ()Lnet/minecraft/world/level/dimension/end/EndDragonFight; D
	getDragons ()Ljava/util/List; i
	getEntities ()Lnet/minecraft/world/level/entity/LevelEntityGetter; G
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Predicate;Ljava/util/List;)V a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Predicate;Ljava/util/List;I)V a
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getEntity (Ljava/util/UUID;)Lnet/minecraft/world/entity/Entity; a
	getEntityOrPart (I)Lnet/minecraft/world/entity/Entity; b
	getFluidTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; M
	getFluidTicks ()Lnet/minecraft/world/ticks/LevelTicks; n
	getForcedChunks ()Lit/unimi/dsi/fastutil/longs/LongSet; w
	getFreeMapId ()I v
	getLevel ()Lnet/minecraft/server/level/ServerLevel; E
	getLogicalHeight ()I k
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getPlayers (Ljava/util/function/Predicate;)Ljava/util/List; a
	getPlayers (Ljava/util/function/Predicate;I)Ljava/util/List; a
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; y
	getPortalForcer ()Lnet/minecraft/world/level/portal/PortalForcer; p
	getRaidAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/raid/Raid; d
	getRaids ()Lnet/minecraft/world/entity/raid/Raids; z
	getRandomPlayer ()Lnet/minecraft/server/level/ServerPlayer; j
	getRandomSequence (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/util/RandomSource; a
	getRandomSequences ()Lnet/minecraft/world/RandomSequences; J
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; r
	getScoreboard ()Lnet/minecraft/server/ServerScoreboard; f
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; K
	getSeed ()J C
	getServer ()Lnet/minecraft/server/MinecraftServer; o
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getStructureManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; q
	getTypeCount (Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/lang/String; a
	getUncachedNoiseBiome (III)Lnet/minecraft/core/Holder; a
	getWatchdogStats ()Ljava/lang/String; F
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	isCloseToVillage (Lnet/minecraft/core/BlockPos;I)Z a
	isFlat ()Z B
	isHandlingTick ()Z c
	isNaturalSpawningAllowed (Lnet/minecraft/core/BlockPos;)Z g
	isNaturalSpawningAllowed (Lnet/minecraft/world/level/ChunkPos;)Z a
	isPositionEntityTicking (Lnet/minecraft/core/BlockPos;)Z f
	isPositionTickingWithEntitiesLoaded (J)Z d
	isRaided (Lnet/minecraft/core/BlockPos;)Z e
	isVillage (Lnet/minecraft/core/BlockPos;)Z c
	isVillage (Lnet/minecraft/core/SectionPos;)Z a
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	makeObsidianPlatform (Lnet/minecraft/server/level/ServerLevel;)V a
	mayInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;)Z a
	neighborChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	noSave ()Z t
	onBlockStateChange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	onReputationEvent (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ReputationEventHandler;)V a
	onStructureStartsAvailable (Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	playSeededSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundSource;FFJ)V a
	playSeededSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundSource;FFJ)V a
	players ()Ljava/util/List; x
	removePlayerImmediately (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	resetEmptyTime ()V h
	resetWeatherCycle ()V g
	runBlockEvents ()V av
	save (Lnet/minecraft/util/ProgressListener;ZZ)V a
	saveDebugReport (Ljava/nio/file/Path;)V a
	saveLevelData ()V au
	sectionsToVillage (Lnet/minecraft/core/SectionPos;)I b
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendParticles (Lnet/minecraft/core/particles/ParticleOptions;DDDIDDDD)I a
	sendParticles (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/particles/ParticleOptions;ZDDDIDDDD)Z a
	sendParticles (Lnet/minecraft/server/level/ServerPlayer;ZDDDLnet/minecraft/network/protocol/Packet;)Z a
	setChunkForced (IIZ)Z a
	setDayTime (J)V b
	setDefaultSpawnPos (Lnet/minecraft/core/BlockPos;F)V a
	setDragonFight (Lnet/minecraft/world/level/dimension/end/EndDragonFight;)V a
	setMapData (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setWeatherParameters (IIZZ)V a
	shouldDiscardEntity (Lnet/minecraft/world/entity/Entity;)Z i
	shouldTickBlocksAt (J)Z a
	startTickingChunk (Lnet/minecraft/world/level/chunk/LevelChunk;)V b
	structureManager ()Lnet/minecraft/world/level/StructureManager; a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tickBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V d
	tickChunk (Lnet/minecraft/world/level/chunk/LevelChunk;I)V a
	tickCustomSpawners (ZZ)V a
	tickFluid (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)V a
	tickNonPassenger (Lnet/minecraft/world/entity/Entity;)V a
	tickPassenger (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)V a
	tickPrecipitation (Lnet/minecraft/core/BlockPos;)V a
	tickRateManager ()Lnet/minecraft/world/TickRateManager; s
	tickTime ()V b
	tryAddFreshEntityWithPassengers (Lnet/minecraft/world/entity/Entity;)Z e
	unload (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	updateNeighborsAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	updateNeighborsAtExceptFromFacing (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;)V a
	updateSleepingPlayerList ()V e
	wakeUpAllPlayers ()V ar
net/minecraft/server/level/ServerLevel$EntityCallbacks and$a
	onCreated (Ljava/lang/Object;)V g
	onCreated (Lnet/minecraft/world/entity/Entity;)V a
	onDestroyed (Ljava/lang/Object;)V f
	onDestroyed (Lnet/minecraft/world/entity/Entity;)V b
	onSectionChange (Ljava/lang/Object;)V a
	onSectionChange (Lnet/minecraft/world/entity/Entity;)V g
	onTickingEnd (Ljava/lang/Object;)V d
	onTickingEnd (Lnet/minecraft/world/entity/Entity;)V d
	onTickingStart (Ljava/lang/Object;)V e
	onTickingStart (Lnet/minecraft/world/entity/Entity;)V c
	onTrackingEnd (Ljava/lang/Object;)V b
	onTrackingEnd (Lnet/minecraft/world/entity/Entity;)V f
	onTrackingStart (Ljava/lang/Object;)V c
	onTrackingStart (Lnet/minecraft/world/entity/Entity;)V e
net/minecraft/server/level/ServerPlayer ane
	FLY_STAT_RECORDING_SPEED co
	LOGGER b
	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_XZ cm
	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_Y cn
	advancements cp
	allowsListing da
	camera cG
	canChatColor cE
	chatSession de
	chatVisibility cD
	chunkTrackingView cT
	connection c
	containerCounter df
	containerListener dd
	containerSynchronizer dc
	disconnected cM
	enteredLavaOnVehiclePosition cR
	enteredNetherPosition cQ
	gameMode e
	isChangingDimension cH
	language cO
	lastActionTime cF
	lastFoodSaturationZero cA
	lastRecordedAirLevel ct
	lastRecordedArmor cu
	lastRecordedExperience cx
	lastRecordedFoodLevel cs
	lastRecordedHealthAndAbsorption cr
	lastRecordedLevel cw
	lastSectionPos cS
	lastSentExp cB
	lastSentFood cz
	lastSentHealth cy
	levitationStartPos cK
	levitationStartTime cL
	recipeBook cJ
	requestedViewDistance cN
	respawnAngle cX
	respawnDimension cU
	respawnForced cW
	respawnPosition cV
	seenCredits cI
	server d
	spawnInvulnerableTime cC
	startingToFallPosition cP
	stats cq
	textFilter cY
	textFilteringEnabled cZ
	wardenSpawnTracker db
	wonGame f
	acceptsChatMessages ()Z gv
	acceptsSystemMessages (Z)Z w
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	allowsListing ()Z Z
	attack (Lnet/minecraft/world/entity/Entity;)V d
	awardKillScore (Lnet/minecraft/world/entity/Entity;ILnet/minecraft/world/damagesource/DamageSource;)V a
	awardRecipes (Ljava/util/Collection;)I a
	awardRecipesByKey (Ljava/util/List;)V a
	awardStat (Lnet/minecraft/stats/Stat;I)V a
	bedBlocked (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	bedInRange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	broadcastToPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z a
	calculateGameModeForNewPlayer (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/GameType; b
	canChatInColor ()Z C
	canHarmPlayer (Lnet/minecraft/world/entity/player/Player;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkMovementStatistics (DDD)V b
	checkRidingStatistics (DDD)V r
	clientInformation ()Lnet/minecraft/server/level/ClientInformation; B
	closeContainer ()V r
	completeUsingItem ()V x
	createCommonSpawnInfo (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/network/protocol/game/CommonPlayerSpawnInfo; d
	createEndPlatform (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	createItemCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; k
	crit (Lnet/minecraft/world/entity/Entity;)V a
	didNotMove (DDD)Z s
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	disconnect ()V u
	dismountTo (DDD)V a
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	doCheckFallDamage (DDDZ)V a
	doCloseContainer ()V s
	doTick ()V m
	drop (Lnet/minecraft/world/item/ItemStack;ZZ)Lnet/minecraft/world/entity/item/ItemEntity; a
	drop (Z)Z a
	findDimensionEntryPoint (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/portal/PortalInfo; a
	fudgeSpawnLocation (Lnet/minecraft/server/level/ServerLevel;)V e
	getAdvancements ()Lnet/minecraft/server/PlayerAdvancements; Q
	getCamera ()Lnet/minecraft/world/entity/Entity; K
	getChatSession ()Lnet/minecraft/network/chat/RemoteChatSession; ab
	getChatVisibility ()Lnet/minecraft/world/entity/player/ChatVisiblity; D
	getChunkTrackingView ()Lnet/minecraft/server/level/ChunkTrackingView; W
	getCoprime (I)I u
	getExitPortal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/border/WorldBorder;)Ljava/util/Optional; a
	getIpAddress ()Ljava/lang/String; A
	getLastActionTime ()J M
	getLastSectionPos ()Lnet/minecraft/core/SectionPos; V
	getPermissionLevel ()I F
	getRecipeBook ()Lnet/minecraft/stats/ServerRecipeBook; I
	getRespawnAngle ()F S
	getRespawnDimension ()Lnet/minecraft/resources/ResourceKey; T
	getRespawnPosition ()Lnet/minecraft/core/BlockPos; R
	getStats ()Lnet/minecraft/stats/ServerStatsCounter; H
	getTabListDisplayName ()Lnet/minecraft/network/chat/Component; N
	getTextFilter ()Lnet/minecraft/server/network/TextFilter; X
	getWardenSpawnTracker ()Ljava/util/Optional; aa
	giveExperienceLevels (I)V c
	giveExperiencePoints (I)V d
	handleTeamKill (Lnet/minecraft/world/scores/ScoreHolder;Lnet/minecraft/world/scores/ScoreHolder;[Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;)V a
	hasChangedDimension ()V P
	hasDisconnected ()Z v
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	indicateDamage (DD)V a
	initInventoryMenu ()V h
	initMenu (Lnet/minecraft/world/inventory/AbstractContainerMenu;)V a
	isChangingDimension ()Z O
	isCreative ()Z f
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isPvpAllowed ()Z gt
	isReachableBedBlock (Lnet/minecraft/core/BlockPos;)Z i
	isRespawnForced ()Z U
	isSpectator ()Z P_
	isTextFilteringEnabled ()Z Y
	loadGameTypes (Lnet/minecraft/nbt/CompoundTag;)V c
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)V a
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	mayInteract (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	moveTo (DDD)V e
	nextContainerCounter ()V gu
	onChangedBlock (Lnet/minecraft/core/BlockPos;)V c
	onEffectAdded (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)V a
	onEffectRemoved (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	onEffectUpdated (Lnet/minecraft/world/effect/MobEffectInstance;ZLnet/minecraft/world/entity/Entity;)V a
	onEnchantmentPerformed (Lnet/minecraft/world/item/ItemStack;I)V a
	onEnterCombat ()V g_
	onInsideBlock (Lnet/minecraft/world/level/block/state/BlockState;)V a
	onItemPickup (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	onLeaveCombat ()V h_
	onUpdateAbilities ()V y
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openHorseInventory (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lnet/minecraft/world/Container;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openMenu (Lnet/minecraft/world/MenuProvider;)Ljava/util/OptionalInt; a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;Z)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	processPortalCooldown ()V L
	pushEntities ()V M_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readPlayerMode (Lnet/minecraft/nbt/CompoundTag;Ljava/lang/String;)Lnet/minecraft/world/level/GameType; a
	requestedViewDistance ()I E
	resetFallDistance ()V n
	resetLastActionTime ()V G
	resetRecipes (Ljava/util/Collection;)I b
	resetSentInfo ()V w
	resetStat (Lnet/minecraft/stats/Stat;)V a
	restoreFrom (Lnet/minecraft/server/level/ServerPlayer;Z)V a
	rideTick ()V t
	sendChatMessage (Lnet/minecraft/network/chat/OutgoingChatMessage;ZLnet/minecraft/network/chat/ChatType$Bound;)V a
	sendMerchantOffers (ILnet/minecraft/world/item/trading/MerchantOffers;IIZZ)V a
	sendServerStatus (Lnet/minecraft/network/protocol/status/ServerStatus;)V a
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	sendSystemMessage (Lnet/minecraft/network/chat/Component;Z)V b
	serverLevel ()Lnet/minecraft/server/level/ServerLevel; z
	setCamera (Lnet/minecraft/world/entity/Entity;)V c
	setChatSession (Lnet/minecraft/network/chat/RemoteChatSession;)V a
	setChunkTrackingView (Lnet/minecraft/server/level/ChunkTrackingView;)V a
	setExperienceLevels (I)V b
	setExperiencePoints (I)V a
	setGameMode (Lnet/minecraft/world/level/GameType;)Z a
	setLastSectionPos (Lnet/minecraft/core/SectionPos;)V a
	setPlayerInput (FFZZ)V a
	setRespawnPosition (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;FZZ)V a
	setServerLevel (Lnet/minecraft/server/level/ServerLevel;)V c
	shouldFilterMessageTo (Lnet/minecraft/server/level/ServerPlayer;)Z b
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startSleepInBed (Lnet/minecraft/core/BlockPos;)Lcom/mojang/datafixers/util/Either; a
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	stopRiding ()V ac
	stopSleepInBed (ZZ)V a
	storeGameTypes (Lnet/minecraft/nbt/CompoundTag;)V k
	swing (Lnet/minecraft/world/InteractionHand;)V a
	take (Lnet/minecraft/world/entity/Entity;I)V a
	teleportRelative (DDD)V d
	teleportTo (DDD)V c
	teleportTo (Lnet/minecraft/server/level/ServerLevel;DDDFF)V a
	teleportTo (Lnet/minecraft/server/level/ServerLevel;DDDLjava/util/Set;FF)Z a
	tellNeutralMobsThatIDied ()V gs
	tick ()V l
	trackEnteredOrExitedLavaOnVehicle ()V p
	trackStartFallingPosition ()V o
	travel (Lnet/minecraft/world/phys/Vec3;)V a
	triggerDimensionChangeTriggers (Lnet/minecraft/server/level/ServerLevel;)V f
	triggerRecipeCrafted (Lnet/minecraft/world/item/crafting/RecipeHolder;Ljava/util/List;)V a
	updateInvisibilityStatus ()V J
	updateOptions (Lnet/minecraft/server/level/ClientInformation;)V a
	updateScoreForCriteria (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;I)V a
	updateUsingItem (Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/server/level/ServerPlayerGameMode anf
	LOGGER a
	delayedDestroyPos k
	delayedTickStart l
	destroyPos h
	destroyProgressStart g
	gameModeForPlayer b
	gameTicks i
	hasDelayedDestroy j
	isDestroyingBlock f
	lastSentState m
	level c
	player d
	previousGameModeForPlayer e
	changeGameModeForPlayer (Lnet/minecraft/world/level/GameType;)Z a
	debugLogging (Lnet/minecraft/core/BlockPos;ZILjava/lang/String;)V a
	destroyAndAck (Lnet/minecraft/core/BlockPos;ILjava/lang/String;)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;)Z a
	getGameModeForPlayer ()Lnet/minecraft/world/level/GameType; b
	getPreviousGameModeForPlayer ()Lnet/minecraft/world/level/GameType; c
	handleBlockBreakAction (Lnet/minecraft/core/BlockPos;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Lnet/minecraft/core/Direction;II)V a
	incrementDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;I)F a
	isCreative ()Z e
	isSurvival ()Z d
	setGameModeForPlayer (Lnet/minecraft/world/level/GameType;Lnet/minecraft/world/level/GameType;)V a
	setLevel (Lnet/minecraft/server/level/ServerLevel;)V a
	tick ()V a
	useItem (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/server/level/ThreadedLevelLightEngine ang
	DEFAULT_BATCH_SIZE a
	LOGGER d
	chunkMap g
	lightTasks f
	scheduled j
	sorterMailbox h
	taskMailbox e
	taskPerBatch i
	addTask (IILjava/util/function/IntSupplier;Lnet/minecraft/server/level/ThreadedLevelLightEngine$TaskType;Ljava/lang/Runnable;)V a
	addTask (IILnet/minecraft/server/level/ThreadedLevelLightEngine$TaskType;Ljava/lang/Runnable;)V a
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	initializeLight (Lnet/minecraft/world/level/chunk/ChunkAccess;Z)Ljava/util/concurrent/CompletableFuture; a
	lightChunk (Lnet/minecraft/world/level/chunk/ChunkAccess;Z)Ljava/util/concurrent/CompletableFuture; b
	propagateLightSources (Lnet/minecraft/world/level/ChunkPos;)V b
	queueSectionData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/chunk/DataLayer;)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	runLightUpdates ()I a
	runUpdate ()V f
	setLightEnabled (Lnet/minecraft/world/level/ChunkPos;Z)V a
	tryScheduleUpdate ()V b
	updateChunkStatus (Lnet/minecraft/world/level/ChunkPos;)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
	waitForPendingTasks (II)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/level/ThreadedLevelLightEngine$TaskType ang$a
	$VALUES c
	POST_UPDATE b
	PRE_UPDATE a
	$values ()[Lnet/minecraft/server/level/ThreadedLevelLightEngine$TaskType; a
net/minecraft/server/level/Ticket anh
	createdTick d
	key c
	ticketLevel b
	type a
	compareTo (Lnet/minecraft/server/level/Ticket;)I a
	getTicketLevel ()I b
	getType ()Lnet/minecraft/server/level/TicketType; a
	setCreatedTick (J)V a
	timedOut (J)Z b
net/minecraft/server/level/TicketType ani
	DRAGON b
	FORCED d
	LIGHT e
	PLAYER c
	PORTAL f
	POST_TELEPORT g
	START a
	UNKNOWN h
	comparator j
	name i
	timeout k
	create (Ljava/lang/String;Ljava/util/Comparator;)Lnet/minecraft/server/level/TicketType; a
	create (Ljava/lang/String;Ljava/util/Comparator;I)Lnet/minecraft/server/level/TicketType; a
	getComparator ()Ljava/util/Comparator; a
	timeout ()J b
net/minecraft/server/level/TickingTracker anj
	INITIAL_TICKET_LIST_CAPACITY c
	MAX_LEVEL a
	chunks b
	tickets d
	addTicket (JLnet/minecraft/server/level/Ticket;)V a
	addTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V a
	getLevel (J)I c
	getLevel (Lnet/minecraft/world/level/ChunkPos;)I a
	getLevelFromSource (J)I b
	getTicketDebugString (J)Ljava/lang/String; d
	getTicketLevelAt (Lnet/minecraft/util/SortedArraySet;)I a
	getTickets (J)Lnet/minecraft/util/SortedArraySet; g
	removeTicket (JLnet/minecraft/server/level/Ticket;)V b
	removeTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V b
	replacePlayerTicketsLevel (I)V a
	runAllUpdates ()V a
	setLevel (JI)V a
net/minecraft/server/level/WorldGenRegion ank
	LOGGER a
	WORLDGEN_REGION_RANDOM t
	biomeManager l
	blockTicks j
	cache b
	center c
	currentlyGenerating r
	dimensionType i
	firstPos m
	fluidTicks k
	generatingStatus p
	lastPos n
	level e
	levelData g
	random h
	seed f
	size d
	structureManager o
	subTickCount s
	writeRadiusCutoff q
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z b
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; E_
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; I
	ensureCanWrite (Lnet/minecraft/core/BlockPos;)Z f_
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)V a
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; G_
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; N
	getCenter ()Lnet/minecraft/world/level/ChunkPos; a
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; L
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d_
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFluidTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; M
	getHeight ()I K_
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; E
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; B_
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; z_
	getMinBuildHeight ()I J_
	getNearestPlayer (DDDDLjava/util/function/Predicate;)Lnet/minecraft/world/entity/player/Player; a
	getRandom ()Lnet/minecraft/util/RandomSource; F_
	getSeaLevel ()I A_
	getSeed ()J C
	getServer ()Lnet/minecraft/server/MinecraftServer; o
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getSkyDarken ()I C_
	getUncachedNoiseBiome (III)Lnet/minecraft/core/Holder; a
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; D_
	hasChunk (II)Z b
	isClientSide ()Z y_
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isOldChunkAround (Lnet/minecraft/world/level/ChunkPos;I)Z a
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V f
	nextSubTickCount ()J H_
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	players ()Ljava/util/List; x
	registryAccess ()Lnet/minecraft/core/RegistryAccess; I_
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	setCurrentlyGenerating (Ljava/util/function/Supplier;)V a
net/minecraft/server/level/progress/ChunkProgressListener anm
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/ChunkProgressListenerFactory ann
net/minecraft/server/level/progress/LoggerChunkProgressListener ano
	LOGGER a
	count c
	maxCount b
	nextTickTime e
	startTime d
	getProgress ()I c
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/ProcessorChunkProgressListener anp
	delegate a
	mailbox b
	createStarted (Lnet/minecraft/server/level/progress/ChunkProgressListener;Ljava/util/concurrent/Executor;)Lnet/minecraft/server/level/progress/ProcessorChunkProgressListener; a
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/StoringChunkProgressListener anq
	delegate a
	diameter f
	fullDiameter d
	radius e
	spawnPos c
	started g
	statuses b
	getDiameter ()I d
	getFullDiameter ()I c
	getProgress ()I e
	getStatus (II)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/network/CommonListenerCookie ans
	clientInformation c
	gameProfile a
	latency b
	clientInformation ()Lnet/minecraft/server/level/ClientInformation; c
	createInitial (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/network/CommonListenerCookie; a
	gameProfile ()Lcom/mojang/authlib/GameProfile; a
	latency ()I b
net/minecraft/server/network/ConfigurationTask ant
	start (Ljava/util/function/Consumer;)V a
	type ()Lnet/minecraft/server/network/ConfigurationTask$Type; a
net/minecraft/server/network/ConfigurationTask$Type ant$a
	id a
	id ()Ljava/lang/String; a
net/minecraft/server/network/FilteredText anu
	EMPTY a
	mask c
	raw b
	filtered ()Ljava/lang/String; a
	filteredOrEmpty ()Ljava/lang/String; b
	fullyFiltered (Ljava/lang/String;)Lnet/minecraft/server/network/FilteredText; b
	isFiltered ()Z c
	mask ()Lnet/minecraft/network/chat/FilterMask; e
	passThrough (Ljava/lang/String;)Lnet/minecraft/server/network/FilteredText; a
	raw ()Ljava/lang/String; d
net/minecraft/server/network/LegacyProtocolUtils anv
	CUSTOM_PAYLOAD_PACKET_ID a
	CUSTOM_PAYLOAD_PACKET_PING_CHANNEL b
	DISCONNECT_PACKET_ID e
	FAKE_PROTOCOL_VERSION f
	GET_INFO_PACKET_ID c
	GET_INFO_PACKET_VERSION_1 d
	readLegacyString (Lio/netty/buffer/ByteBuf;)Ljava/lang/String; a
	writeLegacyString (Lio/netty/buffer/ByteBuf;Ljava/lang/String;)V a
net/minecraft/server/network/LegacyQueryHandler anw
	LOGGER a
	server b
	createLegacyDisconnectPacket (Lio/netty/buffer/ByteBufAllocator;Ljava/lang/String;)Lio/netty/buffer/ByteBuf; a
	createVersion0Response (Lnet/minecraft/server/ServerInfo;)Ljava/lang/String; a
	createVersion1Response (Lnet/minecraft/server/ServerInfo;)Ljava/lang/String; b
	readCustomPayloadPacket (Lio/netty/buffer/ByteBuf;)Z a
	sendFlushAndClose (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl anx
	connection b
	server a
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
	isAcceptingMessages ()Z c
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/network/PlayerChunkSender any
	LOGGER c
	MAX_CHUNKS_PER_TICK b
	MAX_UNACKNOWLEDGED_BATCHES e
	MIN_CHUNKS_PER_TICK a
	START_CHUNKS_PER_TICK d
	batchQuota i
	desiredChunksPerTick h
	maxUnacknowledgedBatches k
	memoryConnection g
	pendingChunks f
	unacknowledgedBatches j
	collectChunksToSend (Lnet/minecraft/server/level/ChunkMap;Lnet/minecraft/world/level/ChunkPos;)Ljava/util/List; a
	dropChunk (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/ChunkPos;)V a
	isPending (J)Z a
	markChunkPendingToSend (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	onChunkBatchReceivedByClient (F)V a
	sendChunk (Lnet/minecraft/server/network/ServerGamePacketListenerImpl;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	sendNextChunks (Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/server/network/ServerCommonPacketListenerImpl anz
	LATENCY_CHECK_INTERVAL a
	LOGGER d
	TIMEOUT_DISCONNECTION_MESSAGE e
	connection c
	keepAliveChallenge h
	keepAlivePending g
	keepAliveTime f
	latency i
	server b
	suspendFlushingOnServerThread j
	createCookie (Lnet/minecraft/server/level/ClientInformation;)Lnet/minecraft/server/network/CommonListenerCookie; a
	disconnect (Lnet/minecraft/network/chat/Component;)V b
	getOwner ()Lcom/mojang/authlib/GameProfile; k
	handleCustomPayload (Lnet/minecraft/network/protocol/common/ServerboundCustomPayloadPacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/common/ServerboundKeepAlivePacket;)V a
	handlePong (Lnet/minecraft/network/protocol/common/ServerboundPongPacket;)V a
	handleResourcePackResponse (Lnet/minecraft/network/protocol/common/ServerboundResourcePackPacket;)V a
	isSingleplayerOwner ()Z i
	keepConnectionAlive ()V f
	latency ()I l
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	playerProfile ()Lcom/mojang/authlib/GameProfile; j
	resumeFlushing ()V h
	send (Lnet/minecraft/network/protocol/Packet;)V b
	send (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;)V a
	suspendFlushing ()V g
net/minecraft/server/network/ServerConfigurationPacketListenerImpl aoa
	DISCONNECT_REASON_INVALID_DATA e
	LOGGER d
	clientInformation i
	configurationTasks g
	currentTask h
	gameProfile f
	addOptionalTasks ()V o
	finishCurrentTask (Lnet/minecraft/server/network/ConfigurationTask$Type;)V a
	handleClientInformation (Lnet/minecraft/network/protocol/common/ServerboundClientInformationPacket;)V a
	handleConfigurationFinished (Lnet/minecraft/network/protocol/configuration/ServerboundFinishConfigurationPacket;)V a
	handleResourcePackResponse (Lnet/minecraft/network/protocol/common/ServerboundResourcePackPacket;)V a
	isAcceptingMessages ()Z c
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	playerProfile ()Lcom/mojang/authlib/GameProfile; j
	returnToWorld ()V n
	startConfiguration ()V m
	startNextTask ()V p
	tick ()V e
net/minecraft/server/network/ServerConnectionListener aob
	LOGGER d
	SERVER_EPOLL_EVENT_GROUP b
	SERVER_EVENT_GROUP a
	channels f
	connections g
	running c
	server e
	getConnections ()Ljava/util/List; e
	getServer ()Lnet/minecraft/server/MinecraftServer; d
	startMemoryChannel ()Ljava/net/SocketAddress; a
	startTcpServerListener (Ljava/net/InetAddress;I)V a
	stop ()V b
	tick ()V c
net/minecraft/server/network/ServerConnectionListener$LatencySimulator aob$a
	TIMER a
	delay b
	jitter c
	queuedMessages d
	delayDownstream (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V a
	onTimeout (Lio/netty/util/Timeout;)V a
net/minecraft/server/network/ServerConnectionListener$LatencySimulator$DelayedMessage aob$a$a
	ctx a
	msg b
net/minecraft/server/network/ServerGamePacketListenerImpl aoc
	CHAT_VALIDATION_FAILED j
	LOGGER g
	MAX_INTERACTION_DISTANCE d
	NO_BLOCK_UPDATES_TO_ACK h
	TRACKED_MESSAGE_DISCONNECT_THRESHOLD i
	aboveGroundTickCount F
	aboveGroundVehicleTickCount H
	ackBlockChangesUpTo l
	awaitingPositionFromClient B
	awaitingTeleport C
	awaitingTeleportTime D
	chatMessageChain O
	chatSession K
	chatSpamTickCount m
	chunkSender f
	clientIsFloating E
	clientVehicleIsFloating G
	dropSpamTickCount n
	firstGoodX o
	firstGoodY p
	firstGoodZ q
	knownMovePacketCount J
	lastGoodX r
	lastGoodY s
	lastGoodZ t
	lastSeenMessages M
	lastVehicle u
	messageSignatureCache N
	player e
	receivedMovePacketCount I
	signedMessageDecoder L
	tickCount k
	vehicleFirstGoodX v
	vehicleFirstGoodY w
	vehicleFirstGoodZ x
	vehicleLastGoodX y
	vehicleLastGoodY z
	vehicleLastGoodZ A
	waitingForSwitchToConfig P
	ackBlockChangesUpTo (I)V a
	addPendingMessage (Lnet/minecraft/network/chat/PlayerChatMessage;)V a
	broadcastChatMessage (Lnet/minecraft/network/chat/PlayerChatMessage;)V b
	clampHorizontal (D)D a
	clampVertical (D)D b
	collectSignedArguments (Lnet/minecraft/network/protocol/game/ServerboundChatCommandPacket;Lnet/minecraft/network/chat/SignableCommand;Lnet/minecraft/network/chat/LastSeenMessages;)Ljava/util/Map; a
	containsInvalidValues (DDDFF)Z b
	detectRateSpam ()V r
	filterTextPacket (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture; a
	filterTextPacket (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
	filterTextPacket (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; a
	getPlayer ()Lnet/minecraft/server/level/ServerPlayer; p
	getRemoteAddress ()Ljava/net/SocketAddress; n
	getSignedMessage (Lnet/minecraft/network/protocol/game/ServerboundChatPacket;Lnet/minecraft/network/chat/LastSeenMessages;)Lnet/minecraft/network/chat/PlayerChatMessage; a
	handleAcceptTeleportPacket (Lnet/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ServerboundSwingPacket;)V a
	handleBlockEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ServerboundChatPacket;)V a
	handleChatAck (Lnet/minecraft/network/protocol/game/ServerboundChatAckPacket;)V a
	handleChatCommand (Lnet/minecraft/network/protocol/game/ServerboundChatCommandPacket;)V a
	handleChatSessionUpdate (Lnet/minecraft/network/protocol/game/ServerboundChatSessionUpdatePacket;)V a
	handleChunkBatchReceived (Lnet/minecraft/network/protocol/game/ServerboundChunkBatchReceivedPacket;)V a
	handleClientCommand (Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket;)V a
	handleClientInformation (Lnet/minecraft/network/protocol/common/ServerboundClientInformationPacket;)V a
	handleConfigurationAcknowledged (Lnet/minecraft/network/protocol/game/ServerboundConfigurationAcknowledgedPacket;)V a
	handleContainerButtonClick (Lnet/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket;)V a
	handleContainerClick (Lnet/minecraft/network/protocol/game/ServerboundContainerClickPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ServerboundContainerClosePacket;)V a
	handleContainerSlotStateChanged (Lnet/minecraft/network/protocol/game/ServerboundContainerSlotStateChangedPacket;)V a
	handleCustomCommandSuggestions (Lnet/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket;)V a
	handleEditBook (Lnet/minecraft/network/protocol/game/ServerboundEditBookPacket;)V a
	handleEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundEntityTagQuery;)V a
	handleInteract (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket;)V a
	handleJigsawGenerate (Lnet/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket;)V a
	handleLockDifficulty (Lnet/minecraft/network/protocol/game/ServerboundLockDifficultyPacket;)V a
	handleMessageDecodeFailure (Lnet/minecraft/network/chat/SignedMessageChain$DecodeException;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ServerboundMoveVehiclePacket;)V a
	handlePaddleBoat (Lnet/minecraft/network/protocol/game/ServerboundPaddleBoatPacket;)V a
	handlePickItem (Lnet/minecraft/network/protocol/game/ServerboundPickItemPacket;)V a
	handlePingRequest (Lnet/minecraft/network/protocol/status/ServerboundPingRequestPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ServerboundPlaceRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket;)V a
	handlePlayerAction (Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket;)V a
	handlePlayerCommand (Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket;)V a
	handlePlayerInput (Lnet/minecraft/network/protocol/game/ServerboundPlayerInputPacket;)V a
	handleRecipeBookChangeSettingsPacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket;)V a
	handleRecipeBookSeenRecipePacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket;)V a
	handleRenameItem (Lnet/minecraft/network/protocol/game/ServerboundRenameItemPacket;)V a
	handleSeenAdvancements (Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket;)V a
	handleSelectTrade (Lnet/minecraft/network/protocol/game/ServerboundSelectTradePacket;)V a
	handleSetBeaconPacket (Lnet/minecraft/network/protocol/game/ServerboundSetBeaconPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket;)V a
	handleSetCommandBlock (Lnet/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket;)V a
	handleSetCommandMinecart (Lnet/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket;)V a
	handleSetCreativeModeSlot (Lnet/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket;)V a
	handleSetJigsawBlock (Lnet/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket;)V a
	handleSetStructureBlock (Lnet/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket;)V a
	handleSignUpdate (Lnet/minecraft/network/protocol/game/ServerboundSignUpdatePacket;)V a
	handleTeleportToEntityPacket (Lnet/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket;)V a
	handleUseItem (Lnet/minecraft/network/protocol/game/ServerboundUseItemPacket;)V a
	handleUseItemOn (Lnet/minecraft/network/protocol/game/ServerboundUseItemOnPacket;)V a
	isAcceptingMessages ()Z c
	isChatMessageIllegal (Ljava/lang/String;)Z c
	isPlayerCollidingWithAnythingNew (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/phys/AABB;DDD)Z a
	noBlocksAround (Lnet/minecraft/world/entity/Entity;)Z a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	parseCommand (Ljava/lang/String;)Lcom/mojang/brigadier/ParseResults; b
	performChatCommand (Lnet/minecraft/network/protocol/game/ServerboundChatCommandPacket;Lnet/minecraft/network/chat/LastSeenMessages;)V a
	playerProfile ()Lcom/mojang/authlib/GameProfile; j
	removePlayerFromWorld ()V q
	resetPlayerChatState (Lnet/minecraft/network/chat/RemoteChatSession;)V a
	resetPosition ()V m
	sendDisguisedChatMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType$Bound;)V a
	sendPlayerChatMessage (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/ChatType$Bound;)V a
	shouldHandleMessage (Lnet/minecraft/network/protocol/Packet;)Z a
	signBook (Lnet/minecraft/server/network/FilteredText;Ljava/util/List;I)V a
	switchToConfig ()V o
	teleport (DDDFF)V a
	teleport (DDDFFLjava/util/Set;)V a
	tick ()V e
	tryHandleChat (Lnet/minecraft/network/chat/LastSeenMessages$Update;)Ljava/util/Optional; a
	unpackAndApplyLastSeen (Lnet/minecraft/network/chat/LastSeenMessages$Update;)Ljava/util/Optional; b
	updateBookContents (Ljava/util/List;I)V a
	updateBookPages (Ljava/util/List;Ljava/util/function/UnaryOperator;Lnet/minecraft/world/item/ItemStack;)V a
	updateSignText (Lnet/minecraft/network/protocol/game/ServerboundSignUpdatePacket;Ljava/util/List;)V a
	wasBlockPlacementAttempt (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/server/network/ServerGamePacketListenerImpl$EntityInteraction aoc$a
net/minecraft/server/network/ServerHandshakePacketListenerImpl aod
	IGNORE_STATUS_REASON a
	connection c
	server b
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
	isAcceptingMessages ()Z c
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/network/ServerLoginPacketListenerImpl aoe
	DISCONNECT_UNEXPECTED_QUERY d
	LOGGER b
	MAX_TICKS_BEFORE_LOGIN c
	UNIQUE_THREAD_ID a
	authenticatedProfile k
	challenge e
	connection g
	requestedUsername j
	server f
	serverId l
	state h
	tick i
	disconnect (Lnet/minecraft/network/chat/Component;)V b
	fillListenerSpecificCrashDetails (Lnet/minecraft/CrashReportCategory;)V a
	finishLoginAndWaitForClient (Lcom/mojang/authlib/GameProfile;)V d
	getUserName ()Ljava/lang/String; f
	handleCustomQueryPacket (Lnet/minecraft/network/protocol/login/ServerboundCustomQueryAnswerPacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ServerboundHelloPacket;)V a
	handleKey (Lnet/minecraft/network/protocol/login/ServerboundKeyPacket;)V a
	handleLoginAcknowledgement (Lnet/minecraft/network/protocol/login/ServerboundLoginAcknowledgedPacket;)V a
	isAcceptingMessages ()Z c
	isPlayerAlreadyInWorld (Lcom/mojang/authlib/GameProfile;)Z a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	startClientVerification (Lcom/mojang/authlib/GameProfile;)V b
	tick ()V e
	verifyLoginAndFinishConnectionSetup (Lcom/mojang/authlib/GameProfile;)V c
net/minecraft/server/network/ServerLoginPacketListenerImpl$State aoe$a
	$VALUES i
	ACCEPTED h
	AUTHENTICATING c
	HELLO a
	KEY b
	NEGOTIATING d
	PROTOCOL_SWITCHING g
	VERIFYING e
	WAITING_FOR_DUPE_DISCONNECT f
	$values ()[Lnet/minecraft/server/network/ServerLoginPacketListenerImpl$State; a
net/minecraft/server/network/ServerPlayerConnection aof
	getPlayer ()Lnet/minecraft/server/level/ServerPlayer; p
	send (Lnet/minecraft/network/protocol/Packet;)V b
net/minecraft/server/network/ServerStatusPacketListenerImpl aog
	DISCONNECT_REASON a
	connection c
	hasRequestedStatus d
	status b
	handlePingRequest (Lnet/minecraft/network/protocol/status/ServerboundPingRequestPacket;)V a
	handleStatusRequest (Lnet/minecraft/network/protocol/status/ServerboundStatusRequestPacket;)V a
	isAcceptingMessages ()Z c
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/network/TextFilter aoh
	DUMMY a
	join ()V a
	leave ()V b
	processMessageBundle (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; a
	processStreamMessage (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/network/TextFilterClient aoi
	DEFAULT_ENDPOINT d
	LOGGER a
	THREAD_FACTORY c
	WORKER_COUNT b
	authKey k
	chatEncoder f
	chatEndpoint e
	chatIgnoreStrategy l
	joinEncoder h
	joinEndpoint g
	leaveEncoder j
	leaveEndpoint i
	workerPool m
	createContext (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/network/TextFilter; a
	createFromConfig (Ljava/lang/String;)Lnet/minecraft/server/network/TextFilterClient; a
	drainStream (Ljava/io/InputStream;)V a
	getEndpoint (Ljava/net/URI;Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL; a
	getEndpointFromConfig (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	makeRequest (Lcom/google/gson/JsonObject;Ljava/net/URL;)Ljava/net/HttpURLConnection; c
	parseMask (Ljava/lang/String;Lcom/google/gson/JsonArray;Lnet/minecraft/server/network/TextFilterClient$IgnoreStrategy;)Lnet/minecraft/network/chat/FilterMask; a
	processJoinOrLeave (Lcom/mojang/authlib/GameProfile;Ljava/net/URL;Lnet/minecraft/server/network/TextFilterClient$JoinOrLeaveEncoder;Ljava/util/concurrent/Executor;)V a
	processRequest (Lcom/google/gson/JsonObject;Ljava/net/URL;)V b
	processRequestResponse (Lcom/google/gson/JsonObject;Ljava/net/URL;)Lcom/google/gson/JsonObject; a
	requestMessageProcessing (Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lnet/minecraft/server/network/TextFilterClient$IgnoreStrategy;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/network/TextFilterClient$IgnoreStrategy aoi$a
	IGNORE_FULLY_FILTERED b
	NEVER_IGNORE a
net/minecraft/server/network/TextFilterClient$JoinOrLeaveEncoder aoi$b
net/minecraft/server/network/TextFilterClient$MessageEncoder aoi$c
net/minecraft/server/network/TextFilterClient$PlayerContext aoi$d
	profile c
	streamExecutor d
	join ()V a
	leave ()V b
	processMessageBundle (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; a
	processStreamMessage (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/network/TextFilterClient$RequestFailedException aoi$e
net/minecraft/server/network/config/JoinWorldTask aoj
	TYPE a
	start (Ljava/util/function/Consumer;)V a
	type ()Lnet/minecraft/server/network/ConfigurationTask$Type; a
net/minecraft/server/network/config/ServerResourcePackConfigurationTask aok
	TYPE a
	info b
	start (Ljava/util/function/Consumer;)V a
	type ()Lnet/minecraft/server/network/ConfigurationTask$Type; a
net/minecraft/server/packs/AbstractPackResources aoo
	LOGGER c
	isBuiltin e
	name d
	getMetadataFromStream (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;Ljava/io/InputStream;)Ljava/lang/Object; a
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	isBuiltin ()Z b
	packId ()Ljava/lang/String; a
net/minecraft/server/packs/BuiltInMetadata aop
	EMPTY a
	values b
	get (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	of ()Lnet/minecraft/server/packs/BuiltInMetadata; a
	of (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;Ljava/lang/Object;)Lnet/minecraft/server/packs/BuiltInMetadata; a
	of (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;Ljava/lang/Object;Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;Ljava/lang/Object;)Lnet/minecraft/server/packs/BuiltInMetadata; a
net/minecraft/server/packs/CompositePackResources aoq
	packResourcesStack d
	primaryPackResources c
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	getRootResource ([Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	isBuiltin ()Z b
	listResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/server/packs/PackResources$ResourceOutput;)V a
	packId ()Ljava/lang/String; a
net/minecraft/server/packs/DownloadCacheCleaner aor
	LOGGER a
	listFilesWithModificationTimes (Ljava/nio/file/Path;)Ljava/util/List; a
	prioritizeFilesInDirs (Ljava/util/List;)Ljava/util/List; a
	vacuumCacheDir (Ljava/nio/file/Path;I)V a
net/minecraft/server/packs/DownloadCacheCleaner$PathAndPriority aor$a
	HIGHEST_PRIORITY_FIRST a
	path b
	removalPriority c
	path ()Ljava/nio/file/Path; a
	removalPriority ()I b
net/minecraft/server/packs/DownloadCacheCleaner$PathAndTime aor$b
	NEWEST_FIRST a
	modifiedTime c
	path b
	modifiedTime ()Ljava/nio/file/attribute/FileTime; b
	path ()Ljava/nio/file/Path; a
net/minecraft/server/packs/DownloadQueue aos
	LOGGER a
	MAX_KEPT_PACKS b
	cacheDir c
	eventLog d
	tasks e
	downloadBatch (Lnet/minecraft/server/packs/DownloadQueue$BatchConfig;Ljava/util/Map;)Ljava/util/concurrent/CompletableFuture; a
	getFileInfo (Ljava/nio/file/Path;)Lcom/mojang/datafixers/util/Either; a
	runDownload (Lnet/minecraft/server/packs/DownloadQueue$BatchConfig;Ljava/util/Map;)Lnet/minecraft/server/packs/DownloadQueue$BatchResult; b
net/minecraft/server/packs/DownloadQueue$BatchConfig aos$a
	hashFunction a
	headers c
	listener e
	maxSize b
	proxy d
	hashFunction ()Lcom/google/common/hash/HashFunction; a
	headers ()Ljava/util/Map; c
	listener ()Lnet/minecraft/util/HttpUtil$DownloadProgressListener; e
	maxSize ()I b
	proxy ()Ljava/net/Proxy; d
net/minecraft/server/packs/DownloadQueue$BatchResult aos$b
	downloaded a
	failed b
	downloaded ()Ljava/util/Map; a
	failed ()Ljava/util/Set; b
net/minecraft/server/packs/DownloadQueue$DownloadRequest aos$c
	hash b
	url a
	hash ()Lcom/google/common/hash/HashCode; b
	url ()Ljava/net/URL; a
net/minecraft/server/packs/DownloadQueue$FileInfoEntry aos$d
	CODEC a
	name b
	size c
	name ()Ljava/lang/String; a
	size ()J b
net/minecraft/server/packs/DownloadQueue$LogEntry aos$e
	CODEC a
	errorOrFileInfo f
	hash e
	id b
	time d
	url c
	errorOrFileInfo ()Lcom/mojang/datafixers/util/Either; e
	hash ()Ljava/util/Optional; d
	id ()Ljava/util/UUID; a
	time ()Ljava/time/Instant; c
	url ()Ljava/lang/String; b
net/minecraft/server/packs/FeatureFlagsMetadataSection aot
	CODEC c
	TYPE a
	flags b
	flags ()Lnet/minecraft/world/flag/FeatureFlagSet; a
net/minecraft/server/packs/FilePackResources aou
	LOGGER c
	prefix e
	zipFileAccess d
	addPrefix (Ljava/lang/String;)Ljava/lang/String; a
	extractNamespace (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getPathFromLocation (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; b
	getResource (Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; b
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	getRootResource ([Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	listResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/server/packs/PackResources$ResourceOutput;)V a
net/minecraft/server/packs/FilePackResources$FileResourcesSupplier aou$a
	content a
	isBuiltin b
	openFull (Ljava/lang/String;Lnet/minecraft/server/packs/repository/Pack$Info;)Lnet/minecraft/server/packs/PackResources; a
	openPrimary (Ljava/lang/String;)Lnet/minecraft/server/packs/PackResources; a
net/minecraft/server/packs/FilePackResources$SharedZipFileAccess aou$b
	failedToLoad c
	file a
	zipFile b
	getOrCreateZipFile ()Ljava/util/zip/ZipFile; a
net/minecraft/server/packs/OverlayMetadataSection aov
	CODEC d
	DIR_VALIDATOR c
	TYPE a
	overlays b
	overlays ()Ljava/util/List; a
	overlaysForVersion (I)Ljava/util/List; a
	validateOverlayDir (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; a
net/minecraft/server/packs/OverlayMetadataSection$OverlayEntry aov$a
	CODEC c
	format a
	overlay b
	format ()Lnet/minecraft/util/InclusiveRange; a
	isApplicable (I)Z a
	overlay ()Ljava/lang/String; b
net/minecraft/server/packs/PackResources aow
	METADATA_EXTENSION a
	PACK_META b
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	getRootResource ([Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	isBuiltin ()Z b
	listResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/server/packs/PackResources$ResourceOutput;)V a
	packId ()Ljava/lang/String; a
net/minecraft/server/packs/PackResources$ResourceOutput aow$a
net/minecraft/server/packs/PackType aox
	$VALUES d
	CLIENT_RESOURCES a
	SERVER_DATA b
	directory c
	$values ()[Lnet/minecraft/server/packs/PackType; b
	getDirectory ()Ljava/lang/String; a
net/minecraft/server/packs/PathPackResources aoy
	LOGGER c
	PATH_JOINER d
	root e
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/resources/ResourceLocation;Ljava/nio/file/Path;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	getRootResource ([Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	listPath (Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/List;Lnet/minecraft/server/packs/PackResources$ResourceOutput;)V a
	listResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/server/packs/PackResources$ResourceOutput;)V a
	returnFileIfExists (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/resources/IoSupplier; b
	validatePath (Ljava/nio/file/Path;)Z a
net/minecraft/server/packs/PathPackResources$PathResourcesSupplier aoy$a
	content a
	isBuiltin b
	openFull (Ljava/lang/String;Lnet/minecraft/server/packs/repository/Pack$Info;)Lnet/minecraft/server/packs/PackResources; a
	openPrimary (Ljava/lang/String;)Lnet/minecraft/server/packs/PackResources; a
net/minecraft/server/packs/VanillaPackResources aoz
	LOGGER c
	metadata d
	namespaces e
	pathsForType g
	rootPaths f
	asProvider ()Lnet/minecraft/server/packs/resources/ResourceProvider; c
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	getResources (Lnet/minecraft/server/packs/PackResources$ResourceOutput;Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/List;)V a
	getRootResource ([Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	isBuiltin ()Z b
	listRawPaths (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/Consumer;)V a
	listResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/server/packs/PackResources$ResourceOutput;)V a
	packId ()Ljava/lang/String; a
net/minecraft/server/packs/VanillaPackResourcesBuilder apa
	LOGGER b
	ROOT_DIR_BY_TYPE c
	developmentConfig a
	metadata f
	namespaces g
	pathsForType e
	rootPaths d
	applyDevelopmentConfig ()Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; b
	build ()Lnet/minecraft/server/packs/VanillaPackResources; c
	copyAndReverse (Ljava/util/Collection;)Ljava/util/List; a
	exposeNamespace ([Ljava/lang/String;)Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; a
	pushAssetPath (Lnet/minecraft/server/packs/PackType;Ljava/nio/file/Path;)Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; a
	pushClasspathResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/Class;)Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; a
	pushJarResources ()Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; a
	pushPathForType (Lnet/minecraft/server/packs/PackType;Ljava/nio/file/Path;)V b
	pushRootPath (Ljava/nio/file/Path;)V c
	pushUniversalPath (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; a
	safeGetPath (Ljava/net/URI;)Ljava/nio/file/Path; a
	setMetadata (Lnet/minecraft/server/packs/BuiltInMetadata;)Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; a
	validateDirPath (Ljava/nio/file/Path;)Z b
net/minecraft/server/packs/linkfs/DummyFileAttributes apb
	EPOCH a
net/minecraft/server/packs/linkfs/LinkFSFileStore apc
	name a
net/minecraft/server/packs/linkfs/LinkFSPath apd
	DIRECTORY_ATTRIBUTES a
	FILE_ATTRIBUTES b
	PATH_COMPARATOR c
	fileSystem e
	name d
	parent f
	pathContents i
	pathString h
	pathToRoot g
	createRelativePath (Lnet/minecraft/server/packs/linkfs/LinkFSPath;Ljava/lang/String;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; a
	exists ()Z g
	getBasicAttributeView ()Ljava/nio/file/attribute/BasicFileAttributeView; j
	getBasicAttributes ()Ljava/nio/file/attribute/BasicFileAttributes; k
	getDirectoryContents ()Lnet/minecraft/server/packs/linkfs/PathContents$DirectoryContents; i
	getFileName ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; c
	getFileSystem ()Lnet/minecraft/server/packs/linkfs/LinkFileSystem; a
	getName (I)Lnet/minecraft/server/packs/linkfs/LinkFSPath; a
	getParent ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; d
	getRoot ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; b
	getTargetPath ()Ljava/nio/file/Path; h
	hasRealContents ()Z m
	isRelativeOrMissing (Lnet/minecraft/server/packs/linkfs/PathContents;)Z a
	normalize ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; e
	pathToRoot ()Ljava/util/List; l
	pathToString ()Ljava/lang/String; n
	relativize (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; b
	resolve (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; a
	resolve (Ljava/util/List;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; a
	resolveName (Ljava/lang/String;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; a
	subpath (II)Lnet/minecraft/server/packs/linkfs/LinkFSPath; a
	toAbsolutePath ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; f
	toLinkPath (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; c
	toRealPath ([Ljava/nio/file/LinkOption;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; a
net/minecraft/server/packs/linkfs/LinkFSProvider ape
	SCHEME a
	toLinkPath (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; a
net/minecraft/server/packs/linkfs/LinkFileSystem apf
	PATH_SEPARATOR a
	PATH_SPLITTER c
	VIEWS b
	provider e
	root f
	store d
	buildPath (Lnet/minecraft/server/packs/linkfs/LinkFileSystem$DirectoryEntry;Lnet/minecraft/server/packs/linkfs/LinkFileSystem;Ljava/lang/String;Lnet/minecraft/server/packs/linkfs/LinkFSPath;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; a
	builder ()Lnet/minecraft/server/packs/linkfs/LinkFileSystem$Builder; c
	rootPath ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; b
	store ()Ljava/nio/file/FileStore; a
net/minecraft/server/packs/linkfs/LinkFileSystem$Builder apf$a
	root a
	build (Ljava/lang/String;)Ljava/nio/file/FileSystem; a
	put (Ljava/util/List;Ljava/lang/String;Ljava/nio/file/Path;)Lnet/minecraft/server/packs/linkfs/LinkFileSystem$Builder; a
	put (Ljava/util/List;Ljava/nio/file/Path;)Lnet/minecraft/server/packs/linkfs/LinkFileSystem$Builder; a
net/minecraft/server/packs/linkfs/LinkFileSystem$DirectoryEntry apf$b
	children a
	files b
	children ()Ljava/util/Map; a
	files ()Ljava/util/Map; b
net/minecraft/server/packs/linkfs/PathContents apg
	MISSING a
	RELATIVE b
net/minecraft/server/packs/linkfs/PathContents$DirectoryContents apg$a
	children c
	children ()Ljava/util/Map; a
net/minecraft/server/packs/linkfs/PathContents$FileContents apg$b
	contents c
	contents ()Ljava/nio/file/Path; a
net/minecraft/server/packs/metadata/MetadataSectionSerializer api
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/server/packs/metadata/MetadataSectionType apj
	fromCodec (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/server/packs/metadata/MetadataSectionType; a
	toJson (Ljava/lang/Object;)Lcom/google/gson/JsonObject; a
net/minecraft/server/packs/metadata/pack/PackMetadataSection apk
	CODEC a
	TYPE b
	description c
	packFormat d
	supportedFormats e
	description ()Lnet/minecraft/network/chat/Component; a
	packFormat ()I b
	supportedFormats ()Ljava/util/Optional; c
net/minecraft/server/packs/repository/BuiltInPackSource apo
	LOGGER b
	VANILLA_ID a
	packDir e
	packType c
	validator f
	vanillaPack d
	createBuiltinPack (Ljava/lang/String;Lnet/minecraft/server/packs/repository/Pack$ResourcesSupplier;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/server/packs/repository/Pack; a
	createVanillaPack (Lnet/minecraft/server/packs/PackResources;)Lnet/minecraft/server/packs/repository/Pack; a
	discoverPacksInPath (Ljava/nio/file/Path;Ljava/util/function/BiConsumer;)V a
	fixedResources (Lnet/minecraft/server/packs/PackResources;)Lnet/minecraft/server/packs/repository/Pack$ResourcesSupplier; b
	getPackTitle (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	getVanillaPack ()Lnet/minecraft/server/packs/VanillaPackResources; a
	listBundledPacks (Ljava/util/function/Consumer;)V a
	pathToId (Ljava/nio/file/Path;)Ljava/lang/String; a
	populatePackList (Ljava/util/function/BiConsumer;)V a
net/minecraft/server/packs/repository/FolderRepositorySource app
	LOGGER a
	folder b
	packSource d
	packType c
	validator e
	discoverPacks (Ljava/nio/file/Path;Lnet/minecraft/world/level/validation/DirectoryValidator;ZLjava/util/function/BiConsumer;)V a
	nameFromPath (Ljava/nio/file/Path;)Ljava/lang/String; a
net/minecraft/server/packs/repository/FolderRepositorySource$FolderPackDetector app$a
	isBuiltin a
	createDirectoryPack (Ljava/nio/file/Path;)Ljava/lang/Object; c
	createDirectoryPack (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/repository/Pack$ResourcesSupplier; b
	createZipPack (Ljava/nio/file/Path;)Ljava/lang/Object; d
	createZipPack (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/repository/Pack$ResourcesSupplier; a
net/minecraft/server/packs/repository/Pack apq
	LOGGER a
	defaultPosition f
	fixedPosition h
	id b
	info e
	packSource i
	required g
	resources c
	title d
	create (Ljava/lang/String;Lnet/minecraft/network/chat/Component;ZLnet/minecraft/server/packs/repository/Pack$ResourcesSupplier;Lnet/minecraft/server/packs/repository/Pack$Info;Lnet/minecraft/server/packs/repository/Pack$Position;ZLnet/minecraft/server/packs/repository/PackSource;)Lnet/minecraft/server/packs/repository/Pack; a
	getChatLink (Z)Lnet/minecraft/network/chat/Component; a
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; c
	getDeclaredPackVersions (Ljava/lang/String;Lnet/minecraft/server/packs/metadata/pack/PackMetadataSection;)Lnet/minecraft/util/InclusiveRange; a
	getDefaultPosition ()Lnet/minecraft/server/packs/repository/Pack$Position; i
	getDescription ()Lnet/minecraft/network/chat/Component; b
	getId ()Ljava/lang/String; f
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; j
	getRequestedFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; d
	getTitle ()Lnet/minecraft/network/chat/Component; a
	isFixedPosition ()Z h
	isRequired ()Z g
	open ()Lnet/minecraft/server/packs/PackResources; e
	readMetaAndCreate (Ljava/lang/String;Lnet/minecraft/network/chat/Component;ZLnet/minecraft/server/packs/repository/Pack$ResourcesSupplier;Lnet/minecraft/server/packs/PackType;Lnet/minecraft/server/packs/repository/Pack$Position;Lnet/minecraft/server/packs/repository/PackSource;)Lnet/minecraft/server/packs/repository/Pack; a
	readPackInfo (Ljava/lang/String;Lnet/minecraft/server/packs/repository/Pack$ResourcesSupplier;I)Lnet/minecraft/server/packs/repository/Pack$Info; a
net/minecraft/server/packs/repository/Pack$Info apq$a
	compatibility b
	description a
	overlays d
	requestedFeatures c
	compatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; b
	description ()Lnet/minecraft/network/chat/Component; a
	overlays ()Ljava/util/List; d
	requestedFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; c
net/minecraft/server/packs/repository/Pack$Position apq$b
	$VALUES c
	BOTTOM b
	TOP a
	$values ()[Lnet/minecraft/server/packs/repository/Pack$Position; b
	insert (Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I a
	opposite ()Lnet/minecraft/server/packs/repository/Pack$Position; a
net/minecraft/server/packs/repository/Pack$ResourcesSupplier apq$c
	openFull (Ljava/lang/String;Lnet/minecraft/server/packs/repository/Pack$Info;)Lnet/minecraft/server/packs/PackResources; a
	openPrimary (Ljava/lang/String;)Lnet/minecraft/server/packs/PackResources; a
net/minecraft/server/packs/repository/PackCompatibility apr
	$VALUES f
	COMPATIBLE c
	TOO_NEW b
	TOO_OLD a
	confirmation e
	description d
	$values ()[Lnet/minecraft/server/packs/repository/PackCompatibility; d
	forVersion (Lnet/minecraft/util/InclusiveRange;I)Lnet/minecraft/server/packs/repository/PackCompatibility; a
	getConfirmation ()Lnet/minecraft/network/chat/Component; c
	getDescription ()Lnet/minecraft/network/chat/Component; b
	isCompatible ()Z a
net/minecraft/server/packs/repository/PackDetector aps
	validator a
	createDirectoryPack (Ljava/nio/file/Path;)Ljava/lang/Object; c
	createZipPack (Ljava/nio/file/Path;)Ljava/lang/Object; d
	detectPackResources (Ljava/nio/file/Path;Ljava/util/List;)Ljava/lang/Object; a
net/minecraft/server/packs/repository/PackRepository apt
	available b
	selected c
	sources a
	addPack (Ljava/lang/String;)Z a
	discoverAvailable ()Ljava/util/Map; h
	getAvailableIds ()Ljava/util/Collection; b
	getAvailablePacks ()Ljava/util/Collection; c
	getAvailablePacks (Ljava/util/Collection;)Ljava/util/stream/Stream; c
	getPack (Ljava/lang/String;)Lnet/minecraft/server/packs/repository/Pack; c
	getRequestedFeatureFlags ()Lnet/minecraft/world/flag/FeatureFlagSet; e
	getSelectedIds ()Ljava/util/Collection; d
	getSelectedPacks ()Ljava/util/Collection; f
	isAvailable (Ljava/lang/String;)Z d
	openAllSelected ()Ljava/util/List; g
	rebuildSelected (Ljava/util/Collection;)Ljava/util/List; b
	reload ()V a
	removePack (Ljava/lang/String;)Z b
	setSelected (Ljava/util/Collection;)V a
net/minecraft/server/packs/repository/PackSource apu
	BUILT_IN c
	DEFAULT b
	FEATURE d
	NO_DECORATION a
	SERVER f
	WORLD e
	create (Ljava/util/function/UnaryOperator;Z)Lnet/minecraft/server/packs/repository/PackSource; a
	decorate (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	decorateWithSource (Ljava/lang/String;)Ljava/util/function/UnaryOperator; a
	shouldAddAutomatically ()Z a
net/minecraft/server/packs/repository/RepositorySource apv
net/minecraft/server/packs/repository/ServerPacksSource apw
	BUILT_IN_METADATA d
	FEATURE_FLAGS_METADATA_SECTION c
	PACKS_DIR f
	VANILLA_NAME e
	VERSION_METADATA_SECTION b
	createBuiltinPack (Ljava/lang/String;Lnet/minecraft/server/packs/repository/Pack$ResourcesSupplier;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/server/packs/repository/Pack; a
	createPackRepository (Ljava/nio/file/Path;Lnet/minecraft/world/level/validation/DirectoryValidator;)Lnet/minecraft/server/packs/repository/PackRepository; a
	createPackRepository (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Lnet/minecraft/server/packs/repository/PackRepository; a
	createVanillaPack (Lnet/minecraft/server/packs/PackResources;)Lnet/minecraft/server/packs/repository/Pack; a
	createVanillaPackSource ()Lnet/minecraft/server/packs/VanillaPackResources; b
	createVanillaTrustedRepository ()Lnet/minecraft/server/packs/repository/PackRepository; c
	getPackTitle (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
net/minecraft/server/packs/resources/CloseableResourceManager apy
net/minecraft/server/packs/resources/FallbackResourceManager apz
	LOGGER b
	fallbacks a
	namespace d
	type c
	applyPackFiltersToExistingResources (Lnet/minecraft/server/packs/resources/FallbackResourceManager$PackEntry;Ljava/util/Map;)V a
	convertToMetadata (Lnet/minecraft/server/packs/resources/IoSupplier;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	createResource (Lnet/minecraft/server/packs/PackResources;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/resources/IoSupplier;Lnet/minecraft/server/packs/resources/IoSupplier;)Lnet/minecraft/server/packs/resources/Resource; a
	createStackMetadataFinder (Lnet/minecraft/resources/ResourceLocation;I)Lnet/minecraft/server/packs/resources/IoSupplier; a
	getMetadataLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; d
	getNamespaces ()Ljava/util/Set; a
	getResourceLocationFromMetadata (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; c
	getResourceStack (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	isMetadata (Lnet/minecraft/resources/ResourceLocation;)Z b
	listPackResources (Lnet/minecraft/server/packs/resources/FallbackResourceManager$PackEntry;Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/Map;)V a
	listPacks ()Ljava/util/stream/Stream; b
	listResourceStacks (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; c
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; b
	parseMetadata (Lnet/minecraft/server/packs/resources/IoSupplier;)Lnet/minecraft/server/packs/resources/ResourceMetadata; b
	push (Lnet/minecraft/server/packs/PackResources;)V a
	push (Lnet/minecraft/server/packs/PackResources;Ljava/util/function/Predicate;)V a
	pushFilterOnly (Ljava/lang/String;Ljava/util/function/Predicate;)V a
	pushInternal (Ljava/lang/String;Lnet/minecraft/server/packs/PackResources;Ljava/util/function/Predicate;)V a
	wrapForDebug (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/PackResources;Lnet/minecraft/server/packs/resources/IoSupplier;)Lnet/minecraft/server/packs/resources/IoSupplier; a
net/minecraft/server/packs/resources/FallbackResourceManager$EntryStack apz$b
	fileLocation a
	fileSources c
	metaSources d
	metadataLocation b
	fileLocation ()Lnet/minecraft/resources/ResourceLocation; a
	fileSources ()Ljava/util/List; c
	metaSources ()Ljava/util/Map; d
	metadataLocation ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/server/packs/resources/FallbackResourceManager$LeakedResourceWarningInputStream apz$c
	closed b
	message a
net/minecraft/server/packs/resources/FallbackResourceManager$PackEntry apz$d
	filter c
	name a
	resources b
	filter ()Ljava/util/function/Predicate; c
	filterAll (Ljava/util/Collection;)V a
	isFiltered (Lnet/minecraft/resources/ResourceLocation;)Z a
	name ()Ljava/lang/String; a
	resources ()Lnet/minecraft/server/packs/PackResources; b
net/minecraft/server/packs/resources/FallbackResourceManager$ResourceWithSource apz$e
	resource b
	source a
	resource ()Lnet/minecraft/server/packs/resources/IoSupplier; b
	source ()Lnet/minecraft/server/packs/PackResources; a
net/minecraft/server/packs/resources/IoSupplier aqa
net/minecraft/server/packs/resources/MultiPackResourceManager aqb
	LOGGER a
	namespacedManagers b
	packs c
	checkTrailingDirectoryPath (Ljava/lang/String;)V a
	getNamespaces ()Ljava/util/Set; a
	getPackFilterSection (Lnet/minecraft/server/packs/PackResources;)Lnet/minecraft/server/packs/resources/ResourceFilterSection; a
	getResourceStack (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	listPacks ()Ljava/util/stream/Stream; b
	listResourceStacks (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; c
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; b
net/minecraft/server/packs/resources/PreparableReloadListener aqc
	getName ()Ljava/lang/String; c
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier aqc$a
	wait (Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/ProfiledReloadInstance aqd
	LOGGER c
	total d
	finish (Ljava/util/List;)Ljava/util/List; a
net/minecraft/server/packs/resources/ProfiledReloadInstance$State aqd$a
	name a
	preparationNanos d
	preparationResult b
	reloadNanos e
	reloadResult c
net/minecraft/server/packs/resources/ReloadInstance aqe
	checkExceptions ()V d
	done ()Ljava/util/concurrent/CompletableFuture; a
	getActualProgress ()F b
	isDone ()Z c
net/minecraft/server/packs/resources/ReloadableResourceManager aqf
	LOGGER a
	listeners c
	resources b
	type d
	createReload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lnet/minecraft/server/packs/resources/ReloadInstance; a
	getNamespaces ()Ljava/util/Set; a
	getResourceStack (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	listPacks ()Ljava/util/stream/Stream; b
	listResourceStacks (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; c
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; b
	registerReloadListener (Lnet/minecraft/server/packs/resources/PreparableReloadListener;)V a
net/minecraft/server/packs/resources/Resource aqg
	cachedMetadata d
	metadataSupplier c
	source a
	streamSupplier b
	isBuiltin ()Z c
	metadata ()Lnet/minecraft/server/packs/resources/ResourceMetadata; f
	open ()Ljava/io/InputStream; d
	openAsReader ()Ljava/io/BufferedReader; e
	source ()Lnet/minecraft/server/packs/PackResources; a
	sourcePackId ()Ljava/lang/String; b
net/minecraft/server/packs/resources/ResourceFilterSection aqh
	CODEC b
	TYPE a
	blockList c
	isNamespaceFiltered (Ljava/lang/String;)Z a
	isPathFiltered (Ljava/lang/String;)Z b
net/minecraft/server/packs/resources/ResourceManager aqi
	getNamespaces ()Ljava/util/Set; a
	getResourceStack (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	listPacks ()Ljava/util/stream/Stream; b
	listResourceStacks (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; c
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; b
net/minecraft/server/packs/resources/ResourceManager$Empty aqi$a
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/server/packs/resources/ResourceManager$Empty; c
	getNamespaces ()Ljava/util/Set; a
	getResourceStack (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	listPacks ()Ljava/util/stream/Stream; b
	listResourceStacks (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; c
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; b
net/minecraft/server/packs/resources/ResourceManagerReloadListener aqj
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/ResourceMetadata aqk
	EMPTY a
	EMPTY_SUPPLIER b
	copySection (Lnet/minecraft/server/packs/resources/ResourceMetadata$Builder;Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)V a
	copySections (Ljava/util/Collection;)Lnet/minecraft/server/packs/resources/ResourceMetadata; a
	fromJsonStream (Ljava/io/InputStream;)Lnet/minecraft/server/packs/resources/ResourceMetadata; a
	getSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/util/Optional; a
net/minecraft/server/packs/resources/ResourceMetadata$Builder aqk$a
	map a
	build ()Lnet/minecraft/server/packs/resources/ResourceMetadata; a
	put (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;Ljava/lang/Object;)Lnet/minecraft/server/packs/resources/ResourceMetadata$Builder; a
net/minecraft/server/packs/resources/ResourceProvider aql
net/minecraft/server/packs/resources/SimpleJsonResourceReloadListener aqm
	LOGGER a
	directory c
	gson b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/util/Map; a
	scanDirectory (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/lang/String;Lcom/google/gson/Gson;Ljava/util/Map;)V a
net/minecraft/server/packs/resources/SimplePreparableReloadListener aqn
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/SimpleReloadInstance aqo
	EXTRA_RELOAD_PROGRESS_WEIGHT d
	LISTENER_PROGRESS_WEIGHT e
	PREPARATION_PROGRESS_WEIGHT c
	allDone b
	allPreparations a
	doneTaskCounter k
	finishedReloads i
	listenerCount g
	preparingListeners f
	startedReloads h
	startedTaskCounter j
	create (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Z)Lnet/minecraft/server/packs/resources/ReloadInstance; a
	done ()Ljava/util/concurrent/CompletableFuture; a
	getActualProgress ()F b
	of (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/packs/resources/SimpleReloadInstance; a
net/minecraft/server/packs/resources/SimpleReloadInstance$StateFactory aqo$a
net/minecraft/server/players/BanListEntry aqq
	DATE_FORMAT a
	EXPIRES_NEVER b
	created c
	expires e
	reason f
	source d
	getCreated ()Ljava/util/Date; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	getExpires ()Ljava/util/Date; c
	getReason ()Ljava/lang/String; d
	getSource ()Ljava/lang/String; b
	hasExpired ()Z f
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/GameProfileCache aqr
	GAMEPROFILES_EXPIRATION_MONTHS c
	GAMEPROFILES_MRU_LIMIT b
	LOGGER a
	executor l
	file j
	gson i
	operationCount k
	profileRepository h
	profilesByName e
	profilesByUUID f
	requests g
	usesAuthentication d
	add (Lcom/mojang/authlib/GameProfile;)V a
	clearExecutor ()V a
	createDateFormat ()Ljava/text/DateFormat; f
	createUnknownProfile (Ljava/lang/String;)Ljava/util/Optional; c
	get (Ljava/lang/String;)Ljava/util/Optional; a
	get (Ljava/util/UUID;)Ljava/util/Optional; a
	getAsync (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; b
	getNextOperation ()J e
	getTopMRUProfiles (I)Ljava/util/stream/Stream; a
	load ()Ljava/util/List; b
	lookupGameProfile (Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Ljava/util/Optional; a
	readGameProfile (Lcom/google/gson/JsonElement;Ljava/text/DateFormat;)Ljava/util/Optional; a
	safeAdd (Lnet/minecraft/server/players/GameProfileCache$GameProfileInfo;)V a
	save ()V c
	setExecutor (Ljava/util/concurrent/Executor;)V a
	setUsesAuthentication (Z)V a
	usesAuthentication ()Z d
	writeGameProfile (Lnet/minecraft/server/players/GameProfileCache$GameProfileInfo;Ljava/text/DateFormat;)Lcom/google/gson/JsonElement; a
net/minecraft/server/players/GameProfileCache$GameProfileInfo aqr$a
	expirationDate b
	lastAccess c
	profile a
	getExpirationDate ()Ljava/util/Date; b
	getLastAccess ()J c
	getProfile ()Lcom/mojang/authlib/GameProfile; a
	setLastAccess (J)V a
net/minecraft/server/players/IpBanList aqs
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	get (Ljava/net/SocketAddress;)Lnet/minecraft/server/players/IpBanListEntry; b
	getIpFromAddress (Ljava/net/SocketAddress;)Ljava/lang/String; c
	isBanned (Ljava/lang/String;)Z a
	isBanned (Ljava/net/SocketAddress;)Z a
net/minecraft/server/players/IpBanListEntry aqt
	createIpInfo (Lcom/google/gson/JsonObject;)Ljava/lang/String; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/OldUsersConverter aqu
	LOGGER e
	OLD_IPBANLIST a
	OLD_OPLIST c
	OLD_USERBANLIST b
	OLD_WHITELIST d
	areOldPlayersConverted (Lnet/minecraft/server/MinecraftServer;)Z f
	areOldUserlistsRemoved ()Z a
	convertIpBanlist (Lnet/minecraft/server/MinecraftServer;)Z b
	convertMobOwnerIfNecessary (Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/util/UUID; a
	convertOpsList (Lnet/minecraft/server/MinecraftServer;)Z c
	convertPlayers (Lnet/minecraft/server/dedicated/DedicatedServer;)Z a
	convertUserBanlist (Lnet/minecraft/server/MinecraftServer;)Z a
	convertWhiteList (Lnet/minecraft/server/MinecraftServer;)Z d
	ensureDirectoryExists (Ljava/io/File;)V a
	getWorldPlayersDirectory (Lnet/minecraft/server/MinecraftServer;)Ljava/io/File; g
	lookupPlayers (Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V a
	parseDate (Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date; a
	readOldListFormat (Ljava/io/File;Ljava/util/Map;)Ljava/util/List; a
	renameOldFile (Ljava/io/File;)V b
	serverReadyAfterUserconversion (Lnet/minecraft/server/MinecraftServer;)Z e
net/minecraft/server/players/OldUsersConverter$ConversionError aqu$a
net/minecraft/server/players/PlayerList aqv
	ALLOW_LOGOUTIVATOR z
	BAN_DATE_FORMAT j
	CHAT_FILTERED_FULL f
	DUPLICATE_LOGIN_DISCONNECT_MESSAGE g
	IPBANLIST_FILE c
	LOGGER a
	OPLIST_FILE d
	SEND_PLAYER_INFO_INTERVAL i
	USERBANLIST_FILE b
	WHITELIST_FILE e
	advancements s
	allowCheatsForAllPlayers y
	bans n
	doWhiteList u
	ipBans o
	maxPlayers h
	ops p
	playerIo t
	players l
	playersByUUID m
	registries v
	sendAllPlayerInfoIn A
	server k
	simulationDistance x
	stats r
	viewDistance w
	whitelist q
	addWorldborderListener (Lnet/minecraft/server/level/ServerLevel;)V a
	broadcast (Lnet/minecraft/world/entity/player/Player;DDDDLnet/minecraft/resources/ResourceKey;Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAll (Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAll (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/resources/ResourceKey;)V a
	broadcastChatMessage (Lnet/minecraft/network/chat/PlayerChatMessage;Ljava/util/function/Predicate;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/network/chat/ChatType$Bound;)V a
	broadcastChatMessage (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/ChatType$Bound;)V a
	broadcastChatMessage (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/network/chat/ChatType$Bound;)V a
	broadcastSystemMessage (Lnet/minecraft/network/chat/Component;Ljava/util/function/Function;Z)V a
	broadcastSystemMessage (Lnet/minecraft/network/chat/Component;Z)V a
	broadcastSystemToAllExceptTeam (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V b
	broadcastSystemToTeam (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V a
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z d
	canPlayerLogin (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/Component; a
	deop (Lcom/mojang/authlib/GameProfile;)V b
	disconnectAllPlayersWithProfile (Lcom/mojang/authlib/GameProfile;)Z e
	getBans ()Lnet/minecraft/server/players/UserBanList; f
	getIpBans ()Lnet/minecraft/server/players/IpBanList; g
	getMaxPlayers ()I n
	getOpNames ()[Ljava/lang/String; l
	getOps ()Lnet/minecraft/server/players/ServerOpList; k
	getPlayer (Ljava/util/UUID;)Lnet/minecraft/server/level/ServerPlayer; a
	getPlayerAdvancements (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/PlayerAdvancements; f
	getPlayerByName (Ljava/lang/String;)Lnet/minecraft/server/level/ServerPlayer; a
	getPlayerCount ()I m
	getPlayerForLogin (Lcom/mojang/authlib/GameProfile;Lnet/minecraft/server/level/ClientInformation;)Lnet/minecraft/server/level/ServerPlayer; a
	getPlayerNamesArray ()[Ljava/lang/String; e
	getPlayerStats (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/stats/ServerStatsCounter; a
	getPlayers ()Ljava/util/List; t
	getPlayersWithAddress (Ljava/lang/String;)Ljava/util/List; b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getSimulationDistance ()I q
	getSingleplayerData ()Lnet/minecraft/nbt/CompoundTag; r
	getViewDistance ()I p
	getWhiteList ()Lnet/minecraft/server/players/UserWhiteList; i
	getWhiteListNames ()[Ljava/lang/String; j
	isAllowCheatsForAllPlayers ()Z v
	isOp (Lcom/mojang/authlib/GameProfile;)Z f
	isUsingWhitelist ()Z o
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z c
	load (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/nbt/CompoundTag; a
	op (Lcom/mojang/authlib/GameProfile;)V a
	placeNewPlayer (Lnet/minecraft/network/Connection;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/network/CommonListenerCookie;)V a
	reloadResources ()V u
	reloadWhiteList ()V a
	remove (Lnet/minecraft/server/level/ServerPlayer;)V c
	removeAll ()V s
	respawn (Lnet/minecraft/server/level/ServerPlayer;Z)Lnet/minecraft/server/level/ServerPlayer; a
	save (Lnet/minecraft/server/level/ServerPlayer;)V b
	saveAll ()V h
	sendAllPlayerInfo (Lnet/minecraft/server/level/ServerPlayer;)V e
	sendLevelInfo (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/level/ServerLevel;)V a
	sendPlayerPermissionLevel (Lnet/minecraft/server/level/ServerPlayer;)V d
	sendPlayerPermissionLevel (Lnet/minecraft/server/level/ServerPlayer;I)V a
	setAllowCheatsForAllPlayers (Z)V b
	setSimulationDistance (I)V b
	setUsingWhiteList (Z)V a
	setViewDistance (I)V a
	tick ()V d
	updateEntireScoreboard (Lnet/minecraft/server/ServerScoreboard;Lnet/minecraft/server/level/ServerPlayer;)V a
	verifyChatTrusted (Lnet/minecraft/network/chat/PlayerChatMessage;)Z a
net/minecraft/server/players/ServerOpList aqw
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z a
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
net/minecraft/server/players/ServerOpListEntry aqx
	bypassesPlayerLimit b
	level a
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	getBypassesPlayerLimit ()Z b
	getLevel ()I a
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/SleepStatus aqy
	activePlayers a
	sleepingPlayers b
	amountSleeping ()I b
	areEnoughDeepSleeping (ILjava/util/List;)Z a
	areEnoughSleeping (I)Z a
	removeAllSleepers ()V a
	sleepersNeeded (I)I b
	update (Ljava/util/List;)Z a
net/minecraft/server/players/StoredUserEntry aqz
	user a
	getUser ()Ljava/lang/Object; g
	hasExpired ()Z f
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/StoredUserList ara
	GSON b
	LOGGER a
	file c
	map d
	add (Lnet/minecraft/server/players/StoredUserEntry;)V a
	contains (Ljava/lang/Object;)Z d
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	get (Ljava/lang/Object;)Lnet/minecraft/server/players/StoredUserEntry; b
	getEntries ()Ljava/util/Collection; d
	getFile ()Ljava/io/File; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isEmpty ()Z c
	load ()V f
	remove (Ljava/lang/Object;)V c
	remove (Lnet/minecraft/server/players/StoredUserEntry;)V b
	removeExpired ()V g
	save ()V e
net/minecraft/server/players/UserBanList arb
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isBanned (Lcom/mojang/authlib/GameProfile;)Z a
net/minecraft/server/players/UserBanListEntry arc
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/UserWhiteList ard
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z a
net/minecraft/server/players/UserWhiteListEntry are
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/rcon/NetworkDataOutputStream arg
	dataOutputStream b
	outputStream a
	reset ()V b
	toByteArray ()[B a
	write (I)V a
	writeBytes ([B)V a
	writeFloat (F)V a
	writeInt (I)V b
	writeShort (S)V a
	writeString (Ljava/lang/String;)V a
net/minecraft/server/rcon/PktUtils arh
	HEX_CHAR b
	MAX_PACKET_SIZE a
	intFromByteArray ([BI)I a
	intFromByteArray ([BII)I b
	intFromNetworkByteArray ([BII)I c
	stringFromByteArray ([BII)Ljava/lang/String; a
	toHexString (B)Ljava/lang/String; a
net/minecraft/server/rcon/RconConsoleSource ari
	RCON b
	RCON_COMPONENT c
	buffer d
	server e
	acceptsFailure ()Z x_
	acceptsSuccess ()Z l_
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; g
	getCommandResponse ()Ljava/lang/String; f
	prepareForCommand ()V e
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	shouldInformAdmins ()Z W_
net/minecraft/server/rcon/thread/GenericThread ark
	LOGGER d
	MAX_STOP_WAIT f
	UNIQUE_THREAD_ID e
	name b
	running a
	thread c
	isRunning ()Z c
	start ()Z a
	stop ()V b
net/minecraft/server/rcon/thread/QueryThreadGs4 arl
	CHALLENGE_CHECK_INTERVAL g
	GAME_ID f
	GAME_TYPE e
	LOGGER d
	RESPONSE_CACHE_TIME h
	buffer p
	hostIp q
	lastChallengeCheck i
	lastRulesResponse u
	maxPlayers l
	port j
	rulesResponse t
	serverInterface v
	serverIp r
	serverName m
	serverPort k
	socket o
	validChallenges s
	worldName n
	buildRuleResponse (Ljava/net/DatagramPacket;)[B b
	create (Lnet/minecraft/server/ServerInterface;)Lnet/minecraft/server/rcon/thread/QueryThreadGs4; a
	getIdentBytes (Ljava/net/SocketAddress;)[B a
	initSocket ()Z e
	processPacket (Ljava/net/DatagramPacket;)Z a
	pruneChallenges ()V d
	recoverSocketError (Ljava/lang/Exception;)V a
	sendChallenge (Ljava/net/DatagramPacket;)V d
	sendTo ([BLjava/net/DatagramPacket;)V a
	start ()Z a
	validChallenge (Ljava/net/DatagramPacket;)Ljava/lang/Boolean; c
net/minecraft/server/rcon/thread/QueryThreadGs4$RequestChallenge arl$a
	challenge b
	challengeBytes d
	ident e
	identBytes c
	time a
	before (J)Ljava/lang/Boolean; a
	getChallenge ()I a
	getChallengeBytes ()[B b
	getIdent ()Ljava/lang/String; d
	getIdentBytes ()[B c
net/minecraft/server/rcon/thread/RconClient arm
	LOGGER d
	SERVERDATA_AUTH e
	SERVERDATA_AUTH_FAILURE i
	SERVERDATA_AUTH_RESPONSE h
	SERVERDATA_EXECCOMMAND f
	SERVERDATA_RESPONSE_VALUE g
	authed j
	buf l
	client k
	rconPassword m
	serverInterface n
	closeSocket ()V e
	send (IILjava/lang/String;)V a
	sendAuthFailure ()V d
	sendCmdResponse (ILjava/lang/String;)V a
	stop ()V b
net/minecraft/server/rcon/thread/RconThread arn
	LOGGER d
	clients g
	rconPassword f
	serverInterface h
	socket e
	clearClients ()V d
	closeSocket (Ljava/net/ServerSocket;)V a
	create (Lnet/minecraft/server/ServerInterface;)Lnet/minecraft/server/rcon/thread/RconThread; a
	stop ()V b
net/minecraft/sounds/Music arp
	CODEC a
	event b
	maxDelay d
	minDelay c
	replaceCurrentMusic e
	getEvent ()Lnet/minecraft/core/Holder; a
	getMaxDelay ()I c
	getMinDelay ()I b
	replaceCurrentMusic ()Z d
net/minecraft/sounds/Musics arq
	CREATIVE b
	CREDITS c
	END e
	END_BOSS d
	FIVE_MINUTES l
	GAME g
	MENU a
	ONE_SECOND h
	TEN_MINUTES j
	THIRTY_SECONDS i
	TWENTY_MINUTES k
	UNDER_WATER f
	createGameMusic (Lnet/minecraft/core/Holder;)Lnet/minecraft/sounds/Music; a
net/minecraft/sounds/SoundEvent arr
	CODEC b
	DEFAULT_RANGE c
	DIRECT_CODEC a
	location d
	newSystem f
	range e
	create (Lnet/minecraft/resources/ResourceLocation;Ljava/util/Optional;)Lnet/minecraft/sounds/SoundEvent; a
	createFixedRangeEvent (Lnet/minecraft/resources/ResourceLocation;F)Lnet/minecraft/sounds/SoundEvent; a
	createVariableRangeEvent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/sounds/SoundEvent; a
	fixedRange ()Ljava/util/Optional; b
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getRange (F)F a
	readFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/sounds/SoundEvent; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/sounds/SoundEvents ars
	ALLAY_AMBIENT_WITHOUT_ITEM b
	ALLAY_AMBIENT_WITH_ITEM a
	ALLAY_DEATH c
	ALLAY_HURT d
	ALLAY_ITEM_GIVEN e
	ALLAY_ITEM_TAKEN f
	ALLAY_THROW g
	AMBIENT_BASALT_DELTAS_ADDITIONS i
	AMBIENT_BASALT_DELTAS_LOOP j
	AMBIENT_BASALT_DELTAS_MOOD k
	AMBIENT_CAVE h
	AMBIENT_CRIMSON_FOREST_ADDITIONS l
	AMBIENT_CRIMSON_FOREST_LOOP m
	AMBIENT_CRIMSON_FOREST_MOOD n
	AMBIENT_NETHER_WASTES_ADDITIONS o
	AMBIENT_NETHER_WASTES_LOOP p
	AMBIENT_NETHER_WASTES_MOOD q
	AMBIENT_SOUL_SAND_VALLEY_ADDITIONS r
	AMBIENT_SOUL_SAND_VALLEY_LOOP s
	AMBIENT_SOUL_SAND_VALLEY_MOOD t
	AMBIENT_UNDERWATER_ENTER x
	AMBIENT_UNDERWATER_EXIT y
	AMBIENT_UNDERWATER_LOOP z
	AMBIENT_UNDERWATER_LOOP_ADDITIONS A
	AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE B
	AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE C
	AMBIENT_WARPED_FOREST_ADDITIONS u
	AMBIENT_WARPED_FOREST_LOOP v
	AMBIENT_WARPED_FOREST_MOOD w
	AMETHYST_BLOCK_BREAK D
	AMETHYST_BLOCK_CHIME E
	AMETHYST_BLOCK_FALL F
	AMETHYST_BLOCK_HIT G
	AMETHYST_BLOCK_PLACE H
	AMETHYST_BLOCK_RESONATE I
	AMETHYST_BLOCK_STEP J
	AMETHYST_CLUSTER_BREAK K
	AMETHYST_CLUSTER_FALL L
	AMETHYST_CLUSTER_HIT M
	AMETHYST_CLUSTER_PLACE N
	AMETHYST_CLUSTER_STEP O
	ANCIENT_DEBRIS_BREAK P
	ANCIENT_DEBRIS_FALL T
	ANCIENT_DEBRIS_HIT S
	ANCIENT_DEBRIS_PLACE R
	ANCIENT_DEBRIS_STEP Q
	ANVIL_BREAK U
	ANVIL_DESTROY V
	ANVIL_FALL W
	ANVIL_HIT X
	ANVIL_LAND Y
	ANVIL_PLACE Z
	ANVIL_STEP aa
	ANVIL_USE ab
	ARMOR_EQUIP_CHAIN ac
	ARMOR_EQUIP_DIAMOND ad
	ARMOR_EQUIP_ELYTRA ae
	ARMOR_EQUIP_GENERIC af
	ARMOR_EQUIP_GOLD ag
	ARMOR_EQUIP_IRON ah
	ARMOR_EQUIP_LEATHER ai
	ARMOR_EQUIP_NETHERITE aj
	ARMOR_EQUIP_TURTLE ak
	ARMOR_STAND_BREAK al
	ARMOR_STAND_FALL am
	ARMOR_STAND_HIT an
	ARMOR_STAND_PLACE ao
	ARROW_HIT ap
	ARROW_HIT_PLAYER aq
	ARROW_SHOOT ar
	AXE_SCRAPE at
	AXE_STRIP as
	AXE_WAX_OFF au
	AXOLOTL_ATTACK av
	AXOLOTL_DEATH aw
	AXOLOTL_HURT ax
	AXOLOTL_IDLE_AIR ay
	AXOLOTL_IDLE_WATER az
	AXOLOTL_SPLASH aA
	AXOLOTL_SWIM aB
	AZALEA_BREAK aC
	AZALEA_FALL aD
	AZALEA_HIT aE
	AZALEA_LEAVES_BREAK aH
	AZALEA_LEAVES_FALL aI
	AZALEA_LEAVES_HIT aJ
	AZALEA_LEAVES_PLACE aK
	AZALEA_LEAVES_STEP aL
	AZALEA_PLACE aF
	AZALEA_STEP aG
	BAMBOO_BREAK aM
	BAMBOO_FALL aN
	BAMBOO_HIT aO
	BAMBOO_PLACE aP
	BAMBOO_SAPLING_BREAK aR
	BAMBOO_SAPLING_HIT aS
	BAMBOO_SAPLING_PLACE aT
	BAMBOO_STEP aQ
	BAMBOO_WOOD_BREAK aU
	BAMBOO_WOOD_BUTTON_CLICK_OFF bd
	BAMBOO_WOOD_BUTTON_CLICK_ON be
	BAMBOO_WOOD_DOOR_CLOSE aZ
	BAMBOO_WOOD_DOOR_OPEN ba
	BAMBOO_WOOD_FALL aV
	BAMBOO_WOOD_FENCE_GATE_CLOSE bh
	BAMBOO_WOOD_FENCE_GATE_OPEN bi
	BAMBOO_WOOD_HANGING_SIGN_BREAK lk
	BAMBOO_WOOD_HANGING_SIGN_FALL ll
	BAMBOO_WOOD_HANGING_SIGN_HIT lm
	BAMBOO_WOOD_HANGING_SIGN_PLACE ln
	BAMBOO_WOOD_HANGING_SIGN_STEP lj
	BAMBOO_WOOD_HIT aW
	BAMBOO_WOOD_PLACE aX
	BAMBOO_WOOD_PRESSURE_PLATE_CLICK_OFF bf
	BAMBOO_WOOD_PRESSURE_PLATE_CLICK_ON bg
	BAMBOO_WOOD_STEP aY
	BAMBOO_WOOD_TRAPDOOR_CLOSE bb
	BAMBOO_WOOD_TRAPDOOR_OPEN bc
	BARREL_CLOSE bj
	BARREL_OPEN bk
	BASALT_BREAK bl
	BASALT_FALL bp
	BASALT_HIT bo
	BASALT_PLACE bn
	BASALT_STEP bm
	BAT_AMBIENT bq
	BAT_DEATH br
	BAT_HURT bs
	BAT_LOOP bt
	BAT_TAKEOFF bu
	BEACON_ACTIVATE bv
	BEACON_AMBIENT bw
	BEACON_DEACTIVATE bx
	BEACON_POWER_SELECT by
	BEEHIVE_DRIP bF
	BEEHIVE_ENTER bG
	BEEHIVE_EXIT bH
	BEEHIVE_SHEAR bI
	BEEHIVE_WORK bJ
	BEE_DEATH bz
	BEE_HURT bA
	BEE_LOOP bC
	BEE_LOOP_AGGRESSIVE bB
	BEE_POLLINATE bE
	BEE_STING bD
	BELL_BLOCK bK
	BELL_RESONATE bL
	BIG_DRIPLEAF_BREAK bM
	BIG_DRIPLEAF_FALL bN
	BIG_DRIPLEAF_HIT bO
	BIG_DRIPLEAF_PLACE bP
	BIG_DRIPLEAF_STEP bQ
	BIG_DRIPLEAF_TILT_DOWN gX
	BIG_DRIPLEAF_TILT_UP gY
	BLASTFURNACE_FIRE_CRACKLE cg
	BLAZE_AMBIENT bR
	BLAZE_BURN bS
	BLAZE_DEATH bT
	BLAZE_HURT bU
	BLAZE_SHOOT bV
	BOAT_PADDLE_LAND bW
	BOAT_PADDLE_WATER bX
	BONE_BLOCK_BREAK bY
	BONE_BLOCK_FALL bZ
	BONE_BLOCK_HIT ca
	BONE_BLOCK_PLACE cb
	BONE_BLOCK_STEP cc
	BONE_MEAL_USE cd
	BOOK_PAGE_TURN ce
	BOOK_PUT cf
	BOTTLE_EMPTY ch
	BOTTLE_FILL ci
	BOTTLE_FILL_DRAGONBREATH cj
	BREEZE_DEATH cr
	BREEZE_HURT cs
	BREEZE_IDLE_AIR cm
	BREEZE_IDLE_GROUND cl
	BREEZE_INHALE ck
	BREEZE_JUMP co
	BREEZE_LAND cp
	BREEZE_SHOOT cn
	BREEZE_SLIDE cq
	BREWING_STAND_BREW ct
	BRUSH_GENERIC cu
	BRUSH_GRAVEL cw
	BRUSH_GRAVEL_COMPLETED cy
	BRUSH_SAND cv
	BRUSH_SAND_COMPLETED cx
	BUBBLE_COLUMN_BUBBLE_POP cz
	BUBBLE_COLUMN_UPWARDS_AMBIENT cA
	BUBBLE_COLUMN_UPWARDS_INSIDE cB
	BUBBLE_COLUMN_WHIRLPOOL_AMBIENT cC
	BUBBLE_COLUMN_WHIRLPOOL_INSIDE cD
	BUCKET_EMPTY cE
	BUCKET_EMPTY_AXOLOTL cF
	BUCKET_EMPTY_FISH cG
	BUCKET_EMPTY_LAVA cH
	BUCKET_EMPTY_POWDER_SNOW cI
	BUCKET_EMPTY_TADPOLE cJ
	BUCKET_FILL cK
	BUCKET_FILL_AXOLOTL cL
	BUCKET_FILL_FISH cM
	BUCKET_FILL_LAVA cN
	BUCKET_FILL_POWDER_SNOW cO
	BUCKET_FILL_TADPOLE cP
	BUNDLE_DROP_CONTENTS cQ
	BUNDLE_INSERT cR
	BUNDLE_REMOVE_ONE cS
	CAKE_ADD_CANDLE cT
	CALCITE_BREAK cU
	CALCITE_FALL cY
	CALCITE_HIT cX
	CALCITE_PLACE cW
	CALCITE_STEP cV
	CAMEL_AMBIENT cZ
	CAMEL_DASH da
	CAMEL_DASH_READY db
	CAMEL_DEATH dc
	CAMEL_EAT dd
	CAMEL_HURT de
	CAMEL_SADDLE df
	CAMEL_SIT dg
	CAMEL_STAND dh
	CAMEL_STEP di
	CAMEL_STEP_SAND dj
	CAMPFIRE_CRACKLE dk
	CANDLE_AMBIENT dl
	CANDLE_BREAK dm
	CANDLE_EXTINGUISH dn
	CANDLE_FALL do
	CANDLE_HIT dp
	CANDLE_PLACE dq
	CANDLE_STEP dr
	CAT_AMBIENT ds
	CAT_BEG_FOR_FOOD dx
	CAT_DEATH du
	CAT_EAT dv
	CAT_HISS dw
	CAT_HURT dy
	CAT_PURR dz
	CAT_PURREOW dA
	CAT_STRAY_AMBIENT dt
	CAVE_VINES_BREAK dB
	CAVE_VINES_FALL dC
	CAVE_VINES_HIT dD
	CAVE_VINES_PICK_BERRIES dG
	CAVE_VINES_PLACE dE
	CAVE_VINES_STEP dF
	CHAIN_BREAK dH
	CHAIN_FALL dI
	CHAIN_HIT dJ
	CHAIN_PLACE dK
	CHAIN_STEP dL
	CHERRY_LEAVES_BREAK dW
	CHERRY_LEAVES_FALL dX
	CHERRY_LEAVES_HIT dY
	CHERRY_LEAVES_PLACE dZ
	CHERRY_LEAVES_STEP ea
	CHERRY_SAPLING_BREAK dR
	CHERRY_SAPLING_FALL dS
	CHERRY_SAPLING_HIT dT
	CHERRY_SAPLING_PLACE dU
	CHERRY_SAPLING_STEP dV
	CHERRY_WOOD_BREAK dM
	CHERRY_WOOD_BUTTON_CLICK_OFF ek
	CHERRY_WOOD_BUTTON_CLICK_ON el
	CHERRY_WOOD_DOOR_CLOSE eg
	CHERRY_WOOD_DOOR_OPEN eh
	CHERRY_WOOD_FALL dN
	CHERRY_WOOD_FENCE_GATE_CLOSE eo
	CHERRY_WOOD_FENCE_GATE_OPEN ep
	CHERRY_WOOD_HANGING_SIGN_BREAK ec
	CHERRY_WOOD_HANGING_SIGN_FALL ed
	CHERRY_WOOD_HANGING_SIGN_HIT ee
	CHERRY_WOOD_HANGING_SIGN_PLACE ef
	CHERRY_WOOD_HANGING_SIGN_STEP eb
	CHERRY_WOOD_HIT dO
	CHERRY_WOOD_PLACE dP
	CHERRY_WOOD_PRESSURE_PLATE_CLICK_OFF em
	CHERRY_WOOD_PRESSURE_PLATE_CLICK_ON en
	CHERRY_WOOD_STEP dQ
	CHERRY_WOOD_TRAPDOOR_CLOSE ei
	CHERRY_WOOD_TRAPDOOR_OPEN ej
	CHEST_CLOSE eq
	CHEST_LOCKED er
	CHEST_OPEN es
	CHICKEN_AMBIENT et
	CHICKEN_DEATH eu
	CHICKEN_EGG ev
	CHICKEN_HURT ew
	CHICKEN_STEP ex
	CHISELED_BOOKSHELF_BREAK ey
	CHISELED_BOOKSHELF_FALL ez
	CHISELED_BOOKSHELF_HIT eA
	CHISELED_BOOKSHELF_INSERT eB
	CHISELED_BOOKSHELF_INSERT_ENCHANTED eC
	CHISELED_BOOKSHELF_PICKUP eE
	CHISELED_BOOKSHELF_PICKUP_ENCHANTED eF
	CHISELED_BOOKSHELF_PLACE eG
	CHISELED_BOOKSHELF_STEP eD
	CHORUS_FLOWER_DEATH eH
	CHORUS_FLOWER_GROW eI
	CHORUS_FRUIT_TELEPORT eJ
	COD_AMBIENT eK
	COD_DEATH eL
	COD_FLOP eM
	COD_HURT eN
	COMPARATOR_CLICK eO
	COMPOSTER_EMPTY eP
	COMPOSTER_FILL eQ
	COMPOSTER_FILL_SUCCESS eR
	COMPOSTER_READY eS
	CONDUIT_ACTIVATE eT
	CONDUIT_AMBIENT eU
	CONDUIT_AMBIENT_SHORT eV
	CONDUIT_ATTACK_TARGET eW
	CONDUIT_DEACTIVATE eX
	COPPER_BREAK ff
	COPPER_BULB_BREAK eY
	COPPER_BULB_FALL fc
	COPPER_BULB_HIT fb
	COPPER_BULB_PLACE fa
	COPPER_BULB_STEP eZ
	COPPER_BULB_TURN_OFF fe
	COPPER_BULB_TURN_ON fd
	COPPER_DOOR_CLOSE fk
	COPPER_DOOR_OPEN fl
	COPPER_FALL fj
	COPPER_GRATE_BREAK fm
	COPPER_GRATE_FALL fq
	COPPER_GRATE_HIT fp
	COPPER_GRATE_PLACE fo
	COPPER_GRATE_STEP fn
	COPPER_HIT fi
	COPPER_PLACE fh
	COPPER_STEP fg
	COPPER_TRAPDOOR_CLOSE fr
	COPPER_TRAPDOOR_OPEN fs
	CORAL_BLOCK_BREAK ft
	CORAL_BLOCK_FALL fu
	CORAL_BLOCK_HIT fv
	CORAL_BLOCK_PLACE fw
	CORAL_BLOCK_STEP fx
	COW_AMBIENT fy
	COW_DEATH fz
	COW_HURT fA
	COW_MILK fB
	COW_STEP fC
	CRAFTER_CRAFT fD
	CRAFTER_FAIL fE
	CREEPER_DEATH fF
	CREEPER_HURT fG
	CREEPER_PRIMED fH
	CROP_BREAK fI
	CROP_PLANTED fJ
	CROSSBOW_HIT fK
	CROSSBOW_LOADING_END fL
	CROSSBOW_LOADING_MIDDLE fM
	CROSSBOW_LOADING_START fN
	CROSSBOW_QUICK_CHARGE_1 fO
	CROSSBOW_QUICK_CHARGE_2 fP
	CROSSBOW_QUICK_CHARGE_3 fQ
	CROSSBOW_SHOOT fR
	DECORATED_POT_BREAK fS
	DECORATED_POT_FALL fT
	DECORATED_POT_HIT fU
	DECORATED_POT_INSERT fV
	DECORATED_POT_INSERT_FAIL fW
	DECORATED_POT_PLACE fY
	DECORATED_POT_SHATTER fZ
	DECORATED_POT_STEP fX
	DEEPSLATE_BREAK gf
	DEEPSLATE_BRICKS_BREAK ga
	DEEPSLATE_BRICKS_FALL gb
	DEEPSLATE_BRICKS_HIT gc
	DEEPSLATE_BRICKS_PLACE gd
	DEEPSLATE_BRICKS_STEP ge
	DEEPSLATE_FALL gg
	DEEPSLATE_HIT gh
	DEEPSLATE_PLACE gi
	DEEPSLATE_STEP gj
	DEEPSLATE_TILES_BREAK gk
	DEEPSLATE_TILES_FALL gl
	DEEPSLATE_TILES_HIT gm
	DEEPSLATE_TILES_PLACE gn
	DEEPSLATE_TILES_STEP go
	DISPENSER_DISPENSE gp
	DISPENSER_FAIL gq
	DISPENSER_LAUNCH gr
	DOLPHIN_AMBIENT gs
	DOLPHIN_AMBIENT_WATER gt
	DOLPHIN_ATTACK gu
	DOLPHIN_DEATH gv
	DOLPHIN_EAT gw
	DOLPHIN_HURT gx
	DOLPHIN_JUMP gy
	DOLPHIN_PLAY gz
	DOLPHIN_SPLASH gA
	DOLPHIN_SWIM gB
	DONKEY_AMBIENT gC
	DONKEY_ANGRY gD
	DONKEY_CHEST gE
	DONKEY_DEATH gF
	DONKEY_EAT gG
	DONKEY_HURT gH
	DRAGON_FIREBALL_EXPLODE hy
	DRIPSTONE_BLOCK_BREAK gI
	DRIPSTONE_BLOCK_FALL gM
	DRIPSTONE_BLOCK_HIT gL
	DRIPSTONE_BLOCK_PLACE gK
	DRIPSTONE_BLOCK_STEP gJ
	DROWNED_AMBIENT gZ
	DROWNED_AMBIENT_WATER ha
	DROWNED_DEATH hb
	DROWNED_DEATH_WATER hc
	DROWNED_HURT hd
	DROWNED_HURT_WATER he
	DROWNED_SHOOT hf
	DROWNED_STEP hg
	DROWNED_SWIM hh
	DYE_USE hi
	EGG_THROW hj
	ELDER_GUARDIAN_AMBIENT hk
	ELDER_GUARDIAN_AMBIENT_LAND hl
	ELDER_GUARDIAN_CURSE hm
	ELDER_GUARDIAN_DEATH hn
	ELDER_GUARDIAN_DEATH_LAND ho
	ELDER_GUARDIAN_FLOP hp
	ELDER_GUARDIAN_HURT hq
	ELDER_GUARDIAN_HURT_LAND hr
	ELYTRA_FLYING hs
	EMPTY qd
	ENCHANTMENT_TABLE_USE ht
	ENDERMAN_AMBIENT hF
	ENDERMAN_DEATH hG
	ENDERMAN_HURT hH
	ENDERMAN_SCREAM hI
	ENDERMAN_STARE hJ
	ENDERMAN_TELEPORT hK
	ENDERMITE_AMBIENT hL
	ENDERMITE_DEATH hM
	ENDERMITE_HURT hN
	ENDERMITE_STEP hO
	ENDER_CHEST_CLOSE hu
	ENDER_CHEST_OPEN hv
	ENDER_DRAGON_AMBIENT hw
	ENDER_DRAGON_DEATH hx
	ENDER_DRAGON_FLAP hz
	ENDER_DRAGON_GROWL hA
	ENDER_DRAGON_HURT hB
	ENDER_DRAGON_SHOOT hC
	ENDER_EYE_DEATH hD
	ENDER_EYE_LAUNCH hE
	ENDER_PEARL_THROW hP
	END_GATEWAY_SPAWN hQ
	END_PORTAL_FRAME_FILL hR
	END_PORTAL_SPAWN hS
	EVOKER_AMBIENT hT
	EVOKER_CAST_SPELL hU
	EVOKER_CELEBRATE hV
	EVOKER_DEATH hW
	EVOKER_FANGS_ATTACK hX
	EVOKER_HURT hY
	EVOKER_PREPARE_ATTACK hZ
	EVOKER_PREPARE_SUMMON ia
	EVOKER_PREPARE_WOLOLO ib
	EXPERIENCE_BOTTLE_THROW ic
	EXPERIENCE_ORB_PICKUP id
	FENCE_GATE_CLOSE ie
	FENCE_GATE_OPEN if
	FIRECHARGE_USE ig
	FIREWORK_ROCKET_BLAST ih
	FIREWORK_ROCKET_BLAST_FAR ii
	FIREWORK_ROCKET_LARGE_BLAST ij
	FIREWORK_ROCKET_LARGE_BLAST_FAR ik
	FIREWORK_ROCKET_LAUNCH il
	FIREWORK_ROCKET_SHOOT im
	FIREWORK_ROCKET_TWINKLE in
	FIREWORK_ROCKET_TWINKLE_FAR io
	FIRE_AMBIENT ip
	FIRE_EXTINGUISH iq
	FISHING_BOBBER_RETRIEVE is
	FISHING_BOBBER_SPLASH it
	FISHING_BOBBER_THROW iu
	FISH_SWIM ir
	FLINTANDSTEEL_USE iv
	FLOWERING_AZALEA_BREAK iw
	FLOWERING_AZALEA_FALL ix
	FLOWERING_AZALEA_HIT iy
	FLOWERING_AZALEA_PLACE iz
	FLOWERING_AZALEA_STEP iA
	FOX_AGGRO iB
	FOX_AMBIENT iC
	FOX_BITE iD
	FOX_DEATH iE
	FOX_EAT iF
	FOX_HURT iG
	FOX_SCREECH iH
	FOX_SLEEP iI
	FOX_SNIFF iJ
	FOX_SPIT iK
	FOX_TELEPORT iL
	FROGLIGHT_BREAK iW
	FROGLIGHT_FALL iX
	FROGLIGHT_HIT iY
	FROGLIGHT_PLACE iZ
	FROGLIGHT_STEP ja
	FROGSPAWNSTEP jb
	FROGSPAWN_BREAK jc
	FROGSPAWN_FALL jd
	FROGSPAWN_HATCH je
	FROGSPAWN_HIT jf
	FROGSPAWN_PLACE jg
	FROG_AMBIENT jh
	FROG_DEATH ji
	FROG_EAT jj
	FROG_HURT jk
	FROG_LAY_SPAWN jl
	FROG_LONG_JUMP jm
	FROG_STEP jn
	FROG_TONGUE jo
	FUNGUS_BREAK qy
	FUNGUS_FALL qC
	FUNGUS_HIT qB
	FUNGUS_PLACE qA
	FUNGUS_STEP qz
	FURNACE_FIRE_CRACKLE ju
	GENERIC_BIG_FALL jv
	GENERIC_BURN jw
	GENERIC_DEATH jx
	GENERIC_DRINK jy
	GENERIC_EAT jz
	GENERIC_EXPLODE jA
	GENERIC_EXTINGUISH_FIRE jB
	GENERIC_HURT jC
	GENERIC_SMALL_FALL jD
	GENERIC_SPLASH jE
	GENERIC_SWIM jF
	GHAST_AMBIENT jG
	GHAST_DEATH jH
	GHAST_HURT jI
	GHAST_SCREAM jJ
	GHAST_SHOOT jK
	GHAST_WARN jL
	GILDED_BLACKSTONE_BREAK jM
	GILDED_BLACKSTONE_FALL jN
	GILDED_BLACKSTONE_HIT jO
	GILDED_BLACKSTONE_PLACE jP
	GILDED_BLACKSTONE_STEP jQ
	GLASS_BREAK jR
	GLASS_FALL jS
	GLASS_HIT jT
	GLASS_PLACE jU
	GLASS_STEP jV
	GLOW_INK_SAC_USE jW
	GLOW_ITEM_FRAME_ADD_ITEM jX
	GLOW_ITEM_FRAME_BREAK jY
	GLOW_ITEM_FRAME_PLACE jZ
	GLOW_ITEM_FRAME_REMOVE_ITEM ka
	GLOW_ITEM_FRAME_ROTATE_ITEM kb
	GLOW_SQUID_AMBIENT kc
	GLOW_SQUID_DEATH kd
	GLOW_SQUID_HURT ke
	GLOW_SQUID_SQUIRT kf
	GOAT_AMBIENT kg
	GOAT_DEATH kh
	GOAT_EAT ki
	GOAT_HORN_BREAK ko
	GOAT_HORN_PLAY kp
	GOAT_HORN_SOUND_VARIANTS lR
	GOAT_HORN_VARIANT_COUNT lQ
	GOAT_HURT kj
	GOAT_LONG_JUMP kk
	GOAT_MILK kl
	GOAT_PREPARE_RAM km
	GOAT_RAM_IMPACT kn
	GOAT_SCREAMING_AMBIENT kq
	GOAT_SCREAMING_DEATH kr
	GOAT_SCREAMING_EAT ks
	GOAT_SCREAMING_HORN_BREAK ky
	GOAT_SCREAMING_HURT kt
	GOAT_SCREAMING_LONG_JUMP ku
	GOAT_SCREAMING_MILK kv
	GOAT_SCREAMING_PREPARE_RAM kw
	GOAT_SCREAMING_RAM_IMPACT kx
	GOAT_STEP kz
	GRASS_BREAK kA
	GRASS_FALL kB
	GRASS_HIT kC
	GRASS_PLACE kD
	GRASS_STEP kE
	GRAVEL_BREAK kF
	GRAVEL_FALL kG
	GRAVEL_HIT kH
	GRAVEL_PLACE kI
	GRAVEL_STEP kJ
	GRINDSTONE_USE kK
	GROWING_PLANT_CROP kL
	GUARDIAN_AMBIENT kM
	GUARDIAN_AMBIENT_LAND kN
	GUARDIAN_ATTACK kO
	GUARDIAN_DEATH kP
	GUARDIAN_DEATH_LAND kQ
	GUARDIAN_FLOP kR
	GUARDIAN_HURT kS
	GUARDIAN_HURT_LAND kT
	HANGING_ROOTS_BREAK kU
	HANGING_ROOTS_FALL kV
	HANGING_ROOTS_HIT kW
	HANGING_ROOTS_PLACE kX
	HANGING_ROOTS_STEP kY
	HANGING_SIGN_BREAK la
	HANGING_SIGN_FALL lb
	HANGING_SIGN_HIT lc
	HANGING_SIGN_PLACE ld
	HANGING_SIGN_STEP kZ
	HOE_TILL lz
	HOGLIN_AMBIENT lA
	HOGLIN_ANGRY lB
	HOGLIN_ATTACK lC
	HOGLIN_CONVERTED_TO_ZOMBIFIED lD
	HOGLIN_DEATH lE
	HOGLIN_HURT lF
	HOGLIN_RETREAT lG
	HOGLIN_STEP lH
	HONEYCOMB_WAX_ON lO
	HONEY_BLOCK_BREAK lI
	HONEY_BLOCK_FALL lJ
	HONEY_BLOCK_HIT lK
	HONEY_BLOCK_PLACE lL
	HONEY_BLOCK_SLIDE lM
	HONEY_BLOCK_STEP lN
	HONEY_DRINK lP
	HORSE_AMBIENT lS
	HORSE_ANGRY lT
	HORSE_ARMOR lU
	HORSE_BREATHE lV
	HORSE_DEATH lW
	HORSE_EAT lX
	HORSE_GALLOP lY
	HORSE_HURT lZ
	HORSE_JUMP ma
	HORSE_LAND mb
	HORSE_SADDLE mc
	HORSE_STEP md
	HORSE_STEP_WOOD me
	HOSTILE_BIG_FALL mf
	HOSTILE_DEATH mg
	HOSTILE_HURT mh
	HOSTILE_SMALL_FALL mi
	HOSTILE_SPLASH mj
	HOSTILE_SWIM mk
	HUSK_AMBIENT ml
	HUSK_CONVERTED_TO_ZOMBIE mm
	HUSK_DEATH mn
	HUSK_HURT mo
	HUSK_STEP mp
	ILLUSIONER_AMBIENT mq
	ILLUSIONER_CAST_SPELL mr
	ILLUSIONER_DEATH ms
	ILLUSIONER_HURT mt
	ILLUSIONER_MIRROR_MOVE mu
	ILLUSIONER_PREPARE_BLINDNESS mv
	ILLUSIONER_PREPARE_MIRROR mw
	INK_SAC_USE mx
	IRON_DOOR_CLOSE my
	IRON_DOOR_OPEN mz
	IRON_GOLEM_ATTACK mA
	IRON_GOLEM_DAMAGE mB
	IRON_GOLEM_DEATH mC
	IRON_GOLEM_HURT mD
	IRON_GOLEM_REPAIR mE
	IRON_GOLEM_STEP mF
	IRON_TRAPDOOR_CLOSE mG
	IRON_TRAPDOOR_OPEN mH
	ITEM_BREAK mN
	ITEM_FRAME_ADD_ITEM mI
	ITEM_FRAME_BREAK mJ
	ITEM_FRAME_PLACE mK
	ITEM_FRAME_REMOVE_ITEM mL
	ITEM_FRAME_ROTATE_ITEM mM
	ITEM_PICKUP mO
	LADDER_BREAK mP
	LADDER_FALL mQ
	LADDER_HIT mR
	LADDER_PLACE mS
	LADDER_STEP mT
	LANTERN_BREAK mU
	LANTERN_FALL mV
	LANTERN_HIT mW
	LANTERN_PLACE mX
	LANTERN_STEP mY
	LARGE_AMETHYST_BUD_BREAK mZ
	LARGE_AMETHYST_BUD_PLACE na
	LAVA_AMBIENT nb
	LAVA_EXTINGUISH nc
	LAVA_POP nd
	LEASH_KNOT_BREAK ne
	LEASH_KNOT_PLACE nf
	LEVER_CLICK ng
	LIGHTNING_BOLT_IMPACT nh
	LIGHTNING_BOLT_THUNDER ni
	LILY_PAD_PLACE Ak
	LINGERING_POTION_THROW nj
	LLAMA_AMBIENT nk
	LLAMA_ANGRY nl
	LLAMA_CHEST nm
	LLAMA_DEATH nn
	LLAMA_EAT no
	LLAMA_HURT np
	LLAMA_SPIT nq
	LLAMA_STEP nr
	LLAMA_SWAG ns
	LODESTONE_BREAK nu
	LODESTONE_COMPASS_LOCK nz
	LODESTONE_FALL ny
	LODESTONE_HIT nx
	LODESTONE_PLACE nw
	LODESTONE_STEP nv
	MAGMA_CUBE_DEATH nA
	MAGMA_CUBE_DEATH_SMALL nt
	MAGMA_CUBE_HURT nB
	MAGMA_CUBE_HURT_SMALL nC
	MAGMA_CUBE_JUMP nD
	MAGMA_CUBE_SQUISH nE
	MAGMA_CUBE_SQUISH_SMALL nF
	MANGROVE_ROOTS_BREAK nG
	MANGROVE_ROOTS_FALL nH
	MANGROVE_ROOTS_HIT nI
	MANGROVE_ROOTS_PLACE nJ
	MANGROVE_ROOTS_STEP nK
	MEDIUM_AMETHYST_BUD_BREAK nL
	MEDIUM_AMETHYST_BUD_PLACE nM
	METAL_BREAK nN
	METAL_FALL nO
	METAL_HIT nP
	METAL_PLACE nQ
	METAL_PRESSURE_PLATE_CLICK_OFF nR
	METAL_PRESSURE_PLATE_CLICK_ON nS
	METAL_STEP nT
	MINECART_INSIDE nV
	MINECART_INSIDE_UNDERWATER nU
	MINECART_RIDING nW
	MOOSHROOM_CONVERT nX
	MOOSHROOM_EAT nY
	MOOSHROOM_MILK nZ
	MOOSHROOM_MILK_SUSPICIOUSLY oa
	MOOSHROOM_SHEAR ob
	MOSS_BREAK om
	MOSS_CARPET_BREAK oc
	MOSS_CARPET_FALL od
	MOSS_CARPET_HIT oe
	MOSS_CARPET_PLACE of
	MOSS_CARPET_STEP og
	MOSS_FALL on
	MOSS_HIT oo
	MOSS_PLACE op
	MOSS_STEP oq
	MUDDY_MANGROVE_ROOTS_BREAK oB
	MUDDY_MANGROVE_ROOTS_FALL oC
	MUDDY_MANGROVE_ROOTS_HIT oD
	MUDDY_MANGROVE_ROOTS_PLACE oE
	MUDDY_MANGROVE_ROOTS_STEP oF
	MUD_BREAK or
	MUD_BRICKS_BREAK ow
	MUD_BRICKS_FALL ox
	MUD_BRICKS_HIT oy
	MUD_BRICKS_PLACE oz
	MUD_BRICKS_STEP oA
	MUD_FALL os
	MUD_HIT ot
	MUD_PLACE ou
	MUD_STEP ov
	MULE_AMBIENT oG
	MULE_ANGRY oH
	MULE_CHEST oI
	MULE_DEATH oJ
	MULE_EAT oK
	MULE_HURT oL
	MUSIC_BIOME_BADLANDS pC
	MUSIC_BIOME_BAMBOO_JUNGLE pF
	MUSIC_BIOME_BASALT_DELTAS pi
	MUSIC_BIOME_CHERRY_GROVE pt
	MUSIC_BIOME_CRIMSON_FOREST pj
	MUSIC_BIOME_DEEP_DARK pk
	MUSIC_BIOME_DESERT pB
	MUSIC_BIOME_DRIPSTONE_CAVES pl
	MUSIC_BIOME_FLOWER_FOREST pA
	MUSIC_BIOME_FOREST pq
	MUSIC_BIOME_FROZEN_PEAKS pv
	MUSIC_BIOME_GROVE pm
	MUSIC_BIOME_JAGGED_PEAKS pn
	MUSIC_BIOME_JUNGLE pD
	MUSIC_BIOME_LUSH_CAVES po
	MUSIC_BIOME_MEADOW ps
	MUSIC_BIOME_NETHER_WASTES pu
	MUSIC_BIOME_OLD_GROWTH_TAIGA pr
	MUSIC_BIOME_SNOWY_SLOPES pw
	MUSIC_BIOME_SOUL_SAND_VALLEY px
	MUSIC_BIOME_SPARSE_JUNGLE pE
	MUSIC_BIOME_STONY_PEAKS py
	MUSIC_BIOME_SWAMP pp
	MUSIC_BIOME_WARPED_FOREST pz
	MUSIC_CREATIVE oM
	MUSIC_CREDITS oN
	MUSIC_DISC_11 oP
	MUSIC_DISC_13 oQ
	MUSIC_DISC_5 oO
	MUSIC_DISC_BLOCKS oR
	MUSIC_DISC_CAT oS
	MUSIC_DISC_CHIRP oT
	MUSIC_DISC_FAR oU
	MUSIC_DISC_MALL oV
	MUSIC_DISC_MELLOHI oW
	MUSIC_DISC_OTHERSIDE pc
	MUSIC_DISC_PIGSTEP oX
	MUSIC_DISC_RELIC pd
	MUSIC_DISC_STAL oY
	MUSIC_DISC_STRAD oZ
	MUSIC_DISC_WAIT pa
	MUSIC_DISC_WARD pb
	MUSIC_DRAGON pe
	MUSIC_END pf
	MUSIC_GAME pg
	MUSIC_MENU ph
	MUSIC_UNDER_WATER pG
	NETHERITE_BLOCK_BREAK qN
	NETHERITE_BLOCK_FALL qR
	NETHERITE_BLOCK_HIT qQ
	NETHERITE_BLOCK_PLACE qP
	NETHERITE_BLOCK_STEP qO
	NETHERRACK_BREAK qS
	NETHERRACK_FALL qW
	NETHERRACK_HIT qV
	NETHERRACK_PLACE qU
	NETHERRACK_STEP qT
	NETHER_BRICKS_BREAK pH
	NETHER_BRICKS_FALL pL
	NETHER_BRICKS_HIT pK
	NETHER_BRICKS_PLACE pJ
	NETHER_BRICKS_STEP pI
	NETHER_GOLD_ORE_BREAK uo
	NETHER_GOLD_ORE_FALL up
	NETHER_GOLD_ORE_HIT uq
	NETHER_GOLD_ORE_PLACE ur
	NETHER_GOLD_ORE_STEP us
	NETHER_ORE_BREAK ut
	NETHER_ORE_FALL uu
	NETHER_ORE_HIT uv
	NETHER_ORE_PLACE uw
	NETHER_ORE_STEP ux
	NETHER_SPROUTS_BREAK qt
	NETHER_SPROUTS_FALL qx
	NETHER_SPROUTS_HIT qw
	NETHER_SPROUTS_PLACE qv
	NETHER_SPROUTS_STEP qu
	NETHER_WART_BREAK pM
	NETHER_WART_PLANTED pN
	NETHER_WOOD_BREAK pO
	NETHER_WOOD_BUTTON_CLICK_OFF pX
	NETHER_WOOD_BUTTON_CLICK_ON pY
	NETHER_WOOD_DOOR_CLOSE pT
	NETHER_WOOD_DOOR_OPEN pU
	NETHER_WOOD_FALL pP
	NETHER_WOOD_FENCE_GATE_CLOSE qb
	NETHER_WOOD_FENCE_GATE_OPEN qc
	NETHER_WOOD_HANGING_SIGN_BREAK lf
	NETHER_WOOD_HANGING_SIGN_FALL lg
	NETHER_WOOD_HANGING_SIGN_HIT lh
	NETHER_WOOD_HANGING_SIGN_PLACE li
	NETHER_WOOD_HANGING_SIGN_STEP le
	NETHER_WOOD_HIT pQ
	NETHER_WOOD_PLACE pR
	NETHER_WOOD_PRESSURE_PLATE_CLICK_OFF pZ
	NETHER_WOOD_PRESSURE_PLATE_CLICK_ON qa
	NETHER_WOOD_STEP pS
	NETHER_WOOD_TRAPDOOR_CLOSE pV
	NETHER_WOOD_TRAPDOOR_OPEN pW
	NOTE_BLOCK_BANJO rm
	NOTE_BLOCK_BASEDRUM qX
	NOTE_BLOCK_BASS qY
	NOTE_BLOCK_BELL qZ
	NOTE_BLOCK_BIT rl
	NOTE_BLOCK_CHIME ra
	NOTE_BLOCK_COW_BELL rj
	NOTE_BLOCK_DIDGERIDOO rk
	NOTE_BLOCK_FLUTE rb
	NOTE_BLOCK_GUITAR rc
	NOTE_BLOCK_HARP rd
	NOTE_BLOCK_HAT re
	NOTE_BLOCK_IMITATE_CREEPER rp
	NOTE_BLOCK_IMITATE_ENDER_DRAGON rq
	NOTE_BLOCK_IMITATE_PIGLIN rs
	NOTE_BLOCK_IMITATE_SKELETON ro
	NOTE_BLOCK_IMITATE_WITHER_SKELETON rr
	NOTE_BLOCK_IMITATE_ZOMBIE rn
	NOTE_BLOCK_IRON_XYLOPHONE ri
	NOTE_BLOCK_PLING rf
	NOTE_BLOCK_SNARE rg
	NOTE_BLOCK_XYLOPHONE rh
	NYLIUM_BREAK qo
	NYLIUM_FALL qs
	NYLIUM_HIT qr
	NYLIUM_PLACE qq
	NYLIUM_STEP qp
	OCELOT_AMBIENT ru
	OCELOT_DEATH rv
	OCELOT_HURT rt
	PACKED_MUD_BREAK qe
	PACKED_MUD_FALL qf
	PACKED_MUD_HIT qg
	PACKED_MUD_PLACE qh
	PACKED_MUD_STEP qi
	PAINTING_BREAK rw
	PAINTING_PLACE rx
	PANDA_AGGRESSIVE_AMBIENT rF
	PANDA_AMBIENT rA
	PANDA_BITE rI
	PANDA_CANT_BREED rE
	PANDA_DEATH rB
	PANDA_EAT rC
	PANDA_HURT rH
	PANDA_PRE_SNEEZE ry
	PANDA_SNEEZE rz
	PANDA_STEP rD
	PANDA_WORRIED_AMBIENT rG
	PARROT_AMBIENT rJ
	PARROT_DEATH rK
	PARROT_EAT rL
	PARROT_FLY rM
	PARROT_HURT rN
	PARROT_IMITATE_BLAZE rO
	PARROT_IMITATE_BREEZE rP
	PARROT_IMITATE_CREEPER rQ
	PARROT_IMITATE_DROWNED rR
	PARROT_IMITATE_ELDER_GUARDIAN rS
	PARROT_IMITATE_ENDERMITE rU
	PARROT_IMITATE_ENDER_DRAGON rT
	PARROT_IMITATE_EVOKER rV
	PARROT_IMITATE_GHAST rW
	PARROT_IMITATE_GUARDIAN rX
	PARROT_IMITATE_HOGLIN rY
	PARROT_IMITATE_HUSK rZ
	PARROT_IMITATE_ILLUSIONER sa
	PARROT_IMITATE_MAGMA_CUBE sb
	PARROT_IMITATE_PHANTOM sc
	PARROT_IMITATE_PIGLIN sd
	PARROT_IMITATE_PIGLIN_BRUTE se
	PARROT_IMITATE_PILLAGER sf
	PARROT_IMITATE_RAVAGER sg
	PARROT_IMITATE_SHULKER sh
	PARROT_IMITATE_SILVERFISH si
	PARROT_IMITATE_SKELETON sj
	PARROT_IMITATE_SLIME sk
	PARROT_IMITATE_SPIDER sl
	PARROT_IMITATE_STRAY sm
	PARROT_IMITATE_VEX sn
	PARROT_IMITATE_VINDICATOR so
	PARROT_IMITATE_WARDEN sp
	PARROT_IMITATE_WITCH sq
	PARROT_IMITATE_WITHER sr
	PARROT_IMITATE_WITHER_SKELETON ss
	PARROT_IMITATE_ZOGLIN st
	PARROT_IMITATE_ZOMBIE su
	PARROT_IMITATE_ZOMBIE_VILLAGER sv
	PARROT_STEP sw
	PHANTOM_AMBIENT sx
	PHANTOM_BITE sy
	PHANTOM_DEATH sz
	PHANTOM_FLAP sA
	PHANTOM_HURT sB
	PHANTOM_SWOOP sC
	PIGLIN_ADMIRING_ITEM sI
	PIGLIN_AMBIENT sJ
	PIGLIN_ANGRY sK
	PIGLIN_BRUTE_AMBIENT sS
	PIGLIN_BRUTE_ANGRY sT
	PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED sX
	PIGLIN_BRUTE_DEATH sU
	PIGLIN_BRUTE_HURT sV
	PIGLIN_BRUTE_STEP sW
	PIGLIN_CELEBRATE sL
	PIGLIN_CONVERTED_TO_ZOMBIFIED sR
	PIGLIN_DEATH sM
	PIGLIN_HURT sO
	PIGLIN_JEALOUS sN
	PIGLIN_RETREAT sP
	PIGLIN_STEP sQ
	PIG_AMBIENT sD
	PIG_DEATH sE
	PIG_HURT sF
	PIG_SADDLE sG
	PIG_STEP sH
	PILLAGER_AMBIENT sY
	PILLAGER_CELEBRATE sZ
	PILLAGER_DEATH ta
	PILLAGER_HURT tb
	PINK_PETALS_BREAK oh
	PINK_PETALS_FALL oi
	PINK_PETALS_HIT oj
	PINK_PETALS_PLACE ok
	PINK_PETALS_STEP ol
	PISTON_CONTRACT tc
	PISTON_EXTEND td
	PLAYER_ATTACK_CRIT te
	PLAYER_ATTACK_KNOCKBACK tf
	PLAYER_ATTACK_NODAMAGE tg
	PLAYER_ATTACK_STRONG th
	PLAYER_ATTACK_SWEEP ti
	PLAYER_ATTACK_WEAK tj
	PLAYER_BIG_FALL tk
	PLAYER_BREATH tl
	PLAYER_BURP tm
	PLAYER_DEATH tn
	PLAYER_HURT to
	PLAYER_HURT_DROWN tp
	PLAYER_HURT_FREEZE tq
	PLAYER_HURT_ON_FIRE tr
	PLAYER_HURT_SWEET_BERRY_BUSH ts
	PLAYER_LEVELUP tt
	PLAYER_SMALL_FALL tu
	PLAYER_SPLASH tv
	PLAYER_SPLASH_HIGH_SPEED tw
	PLAYER_SWIM tx
	PLAYER_TELEPORT ty
	POINTED_DRIPSTONE_BREAK gN
	POINTED_DRIPSTONE_DRIP_LAVA gT
	POINTED_DRIPSTONE_DRIP_LAVA_INTO_CAULDRON gV
	POINTED_DRIPSTONE_DRIP_WATER gU
	POINTED_DRIPSTONE_DRIP_WATER_INTO_CAULDRON gW
	POINTED_DRIPSTONE_FALL gR
	POINTED_DRIPSTONE_HIT gQ
	POINTED_DRIPSTONE_LAND gS
	POINTED_DRIPSTONE_PLACE gP
	POINTED_DRIPSTONE_STEP gO
	POLAR_BEAR_AMBIENT tz
	POLAR_BEAR_AMBIENT_BABY tA
	POLAR_BEAR_DEATH tB
	POLAR_BEAR_HURT tC
	POLAR_BEAR_STEP tD
	POLAR_BEAR_WARNING tE
	POLISHED_DEEPSLATE_BREAK tF
	POLISHED_DEEPSLATE_FALL tG
	POLISHED_DEEPSLATE_HIT tH
	POLISHED_DEEPSLATE_PLACE tI
	POLISHED_DEEPSLATE_STEP tJ
	POLISHED_TUFF_BREAK zd
	POLISHED_TUFF_FALL ze
	POLISHED_TUFF_HIT zf
	POLISHED_TUFF_PLACE zg
	POLISHED_TUFF_STEP zh
	PORTAL_AMBIENT tK
	PORTAL_TRAVEL tL
	PORTAL_TRIGGER tM
	POWDER_SNOW_BREAK tN
	POWDER_SNOW_FALL tO
	POWDER_SNOW_HIT tP
	POWDER_SNOW_PLACE tQ
	POWDER_SNOW_STEP tR
	PUFFER_FISH_AMBIENT tS
	PUFFER_FISH_BLOW_OUT tT
	PUFFER_FISH_BLOW_UP tU
	PUFFER_FISH_DEATH tV
	PUFFER_FISH_FLOP tW
	PUFFER_FISH_HURT tX
	PUFFER_FISH_STING tY
	PUMPKIN_CARVE tZ
	RABBIT_AMBIENT ua
	RABBIT_ATTACK ub
	RABBIT_DEATH uc
	RABBIT_HURT ud
	RABBIT_JUMP ue
	RAID_HORN uf
	RAVAGER_AMBIENT ug
	RAVAGER_ATTACK uh
	RAVAGER_CELEBRATE ui
	RAVAGER_DEATH uj
	RAVAGER_HURT uk
	RAVAGER_ROAR un
	RAVAGER_STEP ul
	RAVAGER_STUNNED um
	REDSTONE_TORCH_BURNOUT uy
	RESPAWN_ANCHOR_AMBIENT uz
	RESPAWN_ANCHOR_CHARGE uA
	RESPAWN_ANCHOR_DEPLETE uB
	RESPAWN_ANCHOR_SET_SPAWN uC
	ROOTED_DIRT_BREAK uD
	ROOTED_DIRT_FALL uE
	ROOTED_DIRT_HIT uF
	ROOTED_DIRT_PLACE uG
	ROOTED_DIRT_STEP uH
	ROOTS_BREAK jp
	ROOTS_FALL jt
	ROOTS_HIT js
	ROOTS_PLACE jr
	ROOTS_STEP jq
	SALMON_AMBIENT uI
	SALMON_DEATH uJ
	SALMON_FLOP uK
	SALMON_HURT uL
	SAND_BREAK uM
	SAND_FALL uN
	SAND_HIT uO
	SAND_PLACE uP
	SAND_STEP uQ
	SCAFFOLDING_BREAK uR
	SCAFFOLDING_FALL uS
	SCAFFOLDING_HIT uT
	SCAFFOLDING_PLACE uU
	SCAFFOLDING_STEP uV
	SCULK_BLOCK_BREAK uY
	SCULK_BLOCK_CHARGE uX
	SCULK_BLOCK_FALL uZ
	SCULK_BLOCK_HIT va
	SCULK_BLOCK_PLACE vb
	SCULK_BLOCK_SPREAD uW
	SCULK_BLOCK_STEP vc
	SCULK_CATALYST_BLOOM vd
	SCULK_CATALYST_BREAK ve
	SCULK_CATALYST_FALL vf
	SCULK_CATALYST_HIT vg
	SCULK_CATALYST_PLACE vh
	SCULK_CATALYST_STEP vi
	SCULK_CLICKING vj
	SCULK_CLICKING_STOP vk
	SCULK_SENSOR_BREAK vl
	SCULK_SENSOR_FALL vm
	SCULK_SENSOR_HIT vn
	SCULK_SENSOR_PLACE vo
	SCULK_SENSOR_STEP vp
	SCULK_SHRIEKER_BREAK vq
	SCULK_SHRIEKER_FALL vr
	SCULK_SHRIEKER_HIT vs
	SCULK_SHRIEKER_PLACE vt
	SCULK_SHRIEKER_SHRIEK vu
	SCULK_SHRIEKER_STEP vv
	SCULK_VEIN_BREAK vw
	SCULK_VEIN_FALL vx
	SCULK_VEIN_HIT vy
	SCULK_VEIN_PLACE vz
	SCULK_VEIN_STEP vA
	SHEEP_AMBIENT vB
	SHEEP_DEATH vC
	SHEEP_HURT vD
	SHEEP_SHEAR vE
	SHEEP_STEP vF
	SHIELD_BLOCK vG
	SHIELD_BREAK vH
	SHOVEL_FLATTEN vN
	SHROOMLIGHT_BREAK vI
	SHROOMLIGHT_FALL vM
	SHROOMLIGHT_HIT vL
	SHROOMLIGHT_PLACE vK
	SHROOMLIGHT_STEP vJ
	SHULKER_AMBIENT vO
	SHULKER_BOX_CLOSE vP
	SHULKER_BOX_OPEN vQ
	SHULKER_BULLET_HIT vR
	SHULKER_BULLET_HURT vS
	SHULKER_CLOSE vT
	SHULKER_DEATH vU
	SHULKER_HURT vV
	SHULKER_HURT_CLOSED vW
	SHULKER_OPEN vX
	SHULKER_SHOOT vY
	SHULKER_TELEPORT vZ
	SILVERFISH_AMBIENT wa
	SILVERFISH_DEATH wb
	SILVERFISH_HURT wc
	SILVERFISH_STEP wd
	SKELETON_AMBIENT we
	SKELETON_CONVERTED_TO_STRAY wf
	SKELETON_DEATH wg
	SKELETON_HORSE_AMBIENT wh
	SKELETON_HORSE_AMBIENT_WATER wl
	SKELETON_HORSE_DEATH wi
	SKELETON_HORSE_GALLOP_WATER wm
	SKELETON_HORSE_HURT wj
	SKELETON_HORSE_JUMP_WATER wn
	SKELETON_HORSE_STEP_WATER wo
	SKELETON_HORSE_SWIM wk
	SKELETON_HURT wp
	SKELETON_SHOOT wq
	SKELETON_STEP wr
	SLIME_ATTACK ws
	SLIME_BLOCK_BREAK wx
	SLIME_BLOCK_FALL wy
	SLIME_BLOCK_HIT wz
	SLIME_BLOCK_PLACE wA
	SLIME_BLOCK_STEP wB
	SLIME_DEATH wt
	SLIME_DEATH_SMALL xi
	SLIME_HURT wu
	SLIME_HURT_SMALL xj
	SLIME_JUMP wv
	SLIME_JUMP_SMALL xk
	SLIME_SQUISH ww
	SLIME_SQUISH_SMALL xl
	SMALL_AMETHYST_BUD_BREAK wC
	SMALL_AMETHYST_BUD_PLACE wD
	SMALL_DRIPLEAF_BREAK wE
	SMALL_DRIPLEAF_FALL wF
	SMALL_DRIPLEAF_HIT wG
	SMALL_DRIPLEAF_PLACE wH
	SMALL_DRIPLEAF_STEP wI
	SMITHING_TABLE_USE xm
	SMOKER_SMOKE xn
	SNIFFER_DEATH xs
	SNIFFER_DIGGING xx
	SNIFFER_DIGGING_STOP xy
	SNIFFER_DROP_SEED xt
	SNIFFER_EAT xp
	SNIFFER_EGG_CRACK xB
	SNIFFER_EGG_HATCH xC
	SNIFFER_EGG_PLOP xA
	SNIFFER_HAPPY xz
	SNIFFER_HURT xr
	SNIFFER_IDLE xq
	SNIFFER_SCENTING xu
	SNIFFER_SEARCHING xw
	SNIFFER_SNIFFING xv
	SNIFFER_STEP xo
	SNOWBALL_THROW xD
	SNOW_BREAK xE
	SNOW_FALL xF
	SNOW_GOLEM_AMBIENT xG
	SNOW_GOLEM_DEATH xH
	SNOW_GOLEM_HURT xI
	SNOW_GOLEM_SHEAR xK
	SNOW_GOLEM_SHOOT xJ
	SNOW_HIT xL
	SNOW_PLACE xM
	SNOW_STEP xN
	SOUL_ESCAPE wT
	SOUL_SAND_BREAK wJ
	SOUL_SAND_FALL wN
	SOUL_SAND_HIT wM
	SOUL_SAND_PLACE wL
	SOUL_SAND_STEP wK
	SOUL_SOIL_BREAK wO
	SOUL_SOIL_FALL wS
	SOUL_SOIL_HIT wR
	SOUL_SOIL_PLACE wQ
	SOUL_SOIL_STEP wP
	SPIDER_AMBIENT xO
	SPIDER_DEATH xP
	SPIDER_HURT xQ
	SPIDER_STEP xR
	SPLASH_POTION_BREAK xS
	SPLASH_POTION_THROW xT
	SPONGE_ABSORB xZ
	SPONGE_BREAK xU
	SPONGE_FALL xV
	SPONGE_HIT xW
	SPONGE_PLACE xX
	SPONGE_STEP xY
	SPORE_BLOSSOM_BREAK wU
	SPORE_BLOSSOM_FALL wV
	SPORE_BLOSSOM_HIT wW
	SPORE_BLOSSOM_PLACE wX
	SPORE_BLOSSOM_STEP wY
	SPYGLASS_STOP_USING yb
	SPYGLASS_USE ya
	SQUID_AMBIENT yc
	SQUID_DEATH yd
	SQUID_HURT ye
	SQUID_SQUIRT yf
	STEM_BREAK qj
	STEM_FALL qn
	STEM_HIT qm
	STEM_PLACE ql
	STEM_STEP qk
	STONE_BREAK yg
	STONE_BUTTON_CLICK_OFF yh
	STONE_BUTTON_CLICK_ON yi
	STONE_FALL yj
	STONE_HIT yk
	STONE_PLACE yl
	STONE_PRESSURE_PLATE_CLICK_OFF ym
	STONE_PRESSURE_PLATE_CLICK_ON yn
	STONE_STEP yo
	STRAY_AMBIENT yp
	STRAY_DEATH yq
	STRAY_HURT yr
	STRAY_STEP ys
	STRIDER_AMBIENT wZ
	STRIDER_DEATH xc
	STRIDER_EAT xg
	STRIDER_HAPPY xa
	STRIDER_HURT xd
	STRIDER_RETREAT xb
	STRIDER_SADDLE xh
	STRIDER_STEP xe
	STRIDER_STEP_LAVA xf
	SUSPICIOUS_GRAVEL_BREAK iR
	SUSPICIOUS_GRAVEL_FALL iV
	SUSPICIOUS_GRAVEL_HIT iU
	SUSPICIOUS_GRAVEL_PLACE iT
	SUSPICIOUS_GRAVEL_STEP iS
	SUSPICIOUS_SAND_BREAK iM
	SUSPICIOUS_SAND_FALL iQ
	SUSPICIOUS_SAND_HIT iP
	SUSPICIOUS_SAND_PLACE iO
	SUSPICIOUS_SAND_STEP iN
	SWEET_BERRY_BUSH_BREAK yt
	SWEET_BERRY_BUSH_PICK_BERRIES yv
	SWEET_BERRY_BUSH_PLACE yu
	TADPOLE_DEATH yw
	TADPOLE_FLOP yx
	TADPOLE_GROW_UP yy
	TADPOLE_HURT yz
	THORNS_HIT yA
	TNT_PRIMED yB
	TOTEM_USE yC
	TRIAL_SPAWNER_AMBIENT lv
	TRIAL_SPAWNER_BREAK lo
	TRIAL_SPAWNER_CLOSE_SHUTTER lx
	TRIAL_SPAWNER_DETECT_PLAYER lu
	TRIAL_SPAWNER_EJECT_ITEM ly
	TRIAL_SPAWNER_FALL ls
	TRIAL_SPAWNER_HIT lr
	TRIAL_SPAWNER_OPEN_SHUTTER lw
	TRIAL_SPAWNER_PLACE lq
	TRIAL_SPAWNER_SPAWN_MOB lt
	TRIAL_SPAWNER_STEP lp
	TRIDENT_HIT yD
	TRIDENT_HIT_GROUND yE
	TRIDENT_RETURN yF
	TRIDENT_RIPTIDE_1 yG
	TRIDENT_RIPTIDE_2 yH
	TRIDENT_RIPTIDE_3 yI
	TRIDENT_THROW yJ
	TRIDENT_THUNDER yK
	TRIPWIRE_ATTACH yL
	TRIPWIRE_CLICK_OFF yM
	TRIPWIRE_CLICK_ON yN
	TRIPWIRE_DETACH yO
	TROPICAL_FISH_AMBIENT yP
	TROPICAL_FISH_DEATH yQ
	TROPICAL_FISH_FLOP yR
	TROPICAL_FISH_HURT yS
	TUFF_BREAK yT
	TUFF_BRICKS_BREAK yY
	TUFF_BRICKS_FALL yZ
	TUFF_BRICKS_HIT za
	TUFF_BRICKS_PLACE zb
	TUFF_BRICKS_STEP zc
	TUFF_FALL yX
	TUFF_HIT yW
	TUFF_PLACE yV
	TUFF_STEP yU
	TURTLE_AMBIENT_LAND zi
	TURTLE_DEATH zj
	TURTLE_DEATH_BABY zk
	TURTLE_EGG_BREAK zl
	TURTLE_EGG_CRACK zm
	TURTLE_EGG_HATCH zn
	TURTLE_HURT zo
	TURTLE_HURT_BABY zp
	TURTLE_LAY_EGG zq
	TURTLE_SHAMBLE zr
	TURTLE_SHAMBLE_BABY zs
	TURTLE_SWIM zt
	UI_BUTTON_CLICK zu
	UI_CARTOGRAPHY_TABLE_TAKE_RESULT zx
	UI_LOOM_SELECT_PATTERN zv
	UI_LOOM_TAKE_RESULT zw
	UI_STONECUTTER_SELECT_RECIPE zz
	UI_STONECUTTER_TAKE_RESULT zy
	UI_TOAST_CHALLENGE_COMPLETE zA
	UI_TOAST_IN zB
	UI_TOAST_OUT zC
	VEX_AMBIENT zD
	VEX_CHARGE zE
	VEX_DEATH zF
	VEX_HURT zG
	VILLAGER_AMBIENT zH
	VILLAGER_CELEBRATE zI
	VILLAGER_DEATH zJ
	VILLAGER_HURT zK
	VILLAGER_NO zL
	VILLAGER_TRADE zM
	VILLAGER_WORK_ARMORER zO
	VILLAGER_WORK_BUTCHER zP
	VILLAGER_WORK_CARTOGRAPHER zQ
	VILLAGER_WORK_CLERIC zR
	VILLAGER_WORK_FARMER zS
	VILLAGER_WORK_FISHERMAN zT
	VILLAGER_WORK_FLETCHER zU
	VILLAGER_WORK_LEATHERWORKER zV
	VILLAGER_WORK_LIBRARIAN zW
	VILLAGER_WORK_MASON zX
	VILLAGER_WORK_SHEPHERD zY
	VILLAGER_WORK_TOOLSMITH zZ
	VILLAGER_WORK_WEAPONSMITH Aa
	VILLAGER_YES zN
	VINDICATOR_AMBIENT Ab
	VINDICATOR_CELEBRATE Ac
	VINDICATOR_DEATH Ad
	VINDICATOR_HURT Ae
	VINE_BREAK Af
	VINE_FALL Ag
	VINE_HIT Ah
	VINE_PLACE Ai
	VINE_STEP Aj
	WANDERING_TRADER_AMBIENT Al
	WANDERING_TRADER_DEATH Am
	WANDERING_TRADER_DISAPPEARED An
	WANDERING_TRADER_DRINK_MILK Ao
	WANDERING_TRADER_DRINK_POTION Ap
	WANDERING_TRADER_HURT Aq
	WANDERING_TRADER_NO Ar
	WANDERING_TRADER_REAPPEARED As
	WANDERING_TRADER_TRADE At
	WANDERING_TRADER_YES Au
	WARDEN_AGITATED Av
	WARDEN_AMBIENT Aw
	WARDEN_ANGRY Ax
	WARDEN_ATTACK_IMPACT Ay
	WARDEN_DEATH Az
	WARDEN_DIG AA
	WARDEN_EMERGE AB
	WARDEN_HEARTBEAT AC
	WARDEN_HURT AD
	WARDEN_LISTENING AE
	WARDEN_LISTENING_ANGRY AF
	WARDEN_NEARBY_CLOSE AG
	WARDEN_NEARBY_CLOSER AH
	WARDEN_NEARBY_CLOSEST AI
	WARDEN_ROAR AJ
	WARDEN_SNIFF AK
	WARDEN_SONIC_BOOM AL
	WARDEN_SONIC_CHARGE AM
	WARDEN_STEP AN
	WARDEN_TENDRIL_CLICKS AO
	WART_BLOCK_BREAK qI
	WART_BLOCK_FALL qM
	WART_BLOCK_HIT qL
	WART_BLOCK_PLACE qK
	WART_BLOCK_STEP qJ
	WATER_AMBIENT AR
	WAXED_HANGING_SIGN_INTERACT_FAIL AP
	WAXED_SIGN_INTERACT_FAIL AQ
	WEATHER_RAIN AS
	WEATHER_RAIN_ABOVE AT
	WEEPING_VINES_BREAK qD
	WEEPING_VINES_FALL qH
	WEEPING_VINES_HIT qG
	WEEPING_VINES_PLACE qF
	WEEPING_VINES_STEP qE
	WET_GRASS_BREAK AU
	WET_GRASS_FALL AV
	WET_GRASS_HIT AW
	WET_GRASS_PLACE AX
	WET_GRASS_STEP AY
	WET_SPONGE_BREAK AZ
	WET_SPONGE_FALL Ba
	WET_SPONGE_HIT Bb
	WET_SPONGE_PLACE Bc
	WET_SPONGE_STEP Bd
	WIND_BURST Be
	WITCH_AMBIENT Bf
	WITCH_CELEBRATE Bg
	WITCH_DEATH Bh
	WITCH_DRINK Bi
	WITCH_HURT Bj
	WITCH_THROW Bk
	WITHER_AMBIENT Bl
	WITHER_BREAK_BLOCK Bm
	WITHER_DEATH Bn
	WITHER_HURT Bo
	WITHER_SHOOT Bp
	WITHER_SKELETON_AMBIENT Bq
	WITHER_SKELETON_DEATH Br
	WITHER_SKELETON_HURT Bs
	WITHER_SKELETON_STEP Bt
	WITHER_SPAWN Bu
	WOLF_AMBIENT Bv
	WOLF_DEATH Bw
	WOLF_GROWL Bx
	WOLF_HOWL By
	WOLF_HURT Bz
	WOLF_PANT BA
	WOLF_SHAKE BB
	WOLF_STEP BC
	WOLF_WHINE BD
	WOODEN_BUTTON_CLICK_OFF BI
	WOODEN_BUTTON_CLICK_ON BJ
	WOODEN_DOOR_CLOSE BE
	WOODEN_DOOR_OPEN BF
	WOODEN_PRESSURE_PLATE_CLICK_OFF BK
	WOODEN_PRESSURE_PLATE_CLICK_ON BL
	WOODEN_TRAPDOOR_CLOSE BG
	WOODEN_TRAPDOOR_OPEN BH
	WOOD_BREAK BM
	WOOD_FALL BN
	WOOD_HIT BO
	WOOD_PLACE BP
	WOOD_STEP BQ
	WOOL_BREAK BR
	WOOL_FALL BS
	WOOL_HIT BT
	WOOL_PLACE BU
	WOOL_STEP BV
	ZOGLIN_AMBIENT BW
	ZOGLIN_ANGRY BX
	ZOGLIN_ATTACK BY
	ZOGLIN_DEATH BZ
	ZOGLIN_HURT Ca
	ZOGLIN_STEP Cb
	ZOMBIE_AMBIENT Cc
	ZOMBIE_ATTACK_IRON_DOOR Ce
	ZOMBIE_ATTACK_WOODEN_DOOR Cd
	ZOMBIE_BREAK_WOODEN_DOOR Cf
	ZOMBIE_CONVERTED_TO_DROWNED Cg
	ZOMBIE_DEATH Ch
	ZOMBIE_DESTROY_EGG Ci
	ZOMBIE_HORSE_AMBIENT Cj
	ZOMBIE_HORSE_DEATH Ck
	ZOMBIE_HORSE_HURT Cl
	ZOMBIE_HURT Cm
	ZOMBIE_INFECT Cn
	ZOMBIE_STEP Cs
	ZOMBIE_VILLAGER_AMBIENT Ct
	ZOMBIE_VILLAGER_CONVERTED Cu
	ZOMBIE_VILLAGER_CURE Cv
	ZOMBIE_VILLAGER_DEATH Cw
	ZOMBIE_VILLAGER_HURT Cx
	ZOMBIE_VILLAGER_STEP Cy
	ZOMBIFIED_PIGLIN_AMBIENT Co
	ZOMBIFIED_PIGLIN_ANGRY Cp
	ZOMBIFIED_PIGLIN_DEATH Cq
	ZOMBIFIED_PIGLIN_HURT Cr
	register (Ljava/lang/String;)Lnet/minecraft/sounds/SoundEvent; a
	register (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/sounds/SoundEvent; a
	register (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/sounds/SoundEvent; a
	register (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;F)Lnet/minecraft/core/Holder; a
	registerForHolder (Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; b
	registerForHolder (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/core/Holder$Reference; b
	registerForHolder (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/core/Holder$Reference; b
	registerGoatHornSoundVariants ()Lcom/google/common/collect/ImmutableList; a
net/minecraft/sounds/SoundSource art
	$VALUES l
	AMBIENT i
	BLOCKS e
	HOSTILE f
	MASTER a
	MUSIC b
	NEUTRAL g
	PLAYERS h
	RECORDS c
	VOICE j
	WEATHER d
	name k
	$values ()[Lnet/minecraft/sounds/SoundSource; b
	getName ()Ljava/lang/String; a
net/minecraft/stats/RecipeBook arv
	bookSettings c
	highlight b
	known a
	add (Lnet/minecraft/resources/ResourceLocation;)V a
	add (Lnet/minecraft/world/item/crafting/RecipeHolder;)V a
	addHighlight (Lnet/minecraft/resources/ResourceLocation;)V d
	addHighlight (Lnet/minecraft/world/item/crafting/RecipeHolder;)V f
	contains (Lnet/minecraft/resources/ResourceLocation;)Z b
	contains (Lnet/minecraft/world/item/crafting/RecipeHolder;)Z b
	copyOverData (Lnet/minecraft/stats/RecipeBook;)V a
	getBookSettings ()Lnet/minecraft/stats/RecipeBookSettings; a
	isFiltering (Lnet/minecraft/world/inventory/RecipeBookMenu;)Z a
	isFiltering (Lnet/minecraft/world/inventory/RecipeBookType;)Z b
	isOpen (Lnet/minecraft/world/inventory/RecipeBookType;)Z a
	remove (Lnet/minecraft/resources/ResourceLocation;)V c
	remove (Lnet/minecraft/world/item/crafting/RecipeHolder;)V c
	removeHighlight (Lnet/minecraft/world/item/crafting/RecipeHolder;)V e
	setBookSetting (Lnet/minecraft/world/inventory/RecipeBookType;ZZ)V a
	setBookSettings (Lnet/minecraft/stats/RecipeBookSettings;)V a
	setFiltering (Lnet/minecraft/world/inventory/RecipeBookType;Z)V b
	setOpen (Lnet/minecraft/world/inventory/RecipeBookType;Z)V a
	willHighlight (Lnet/minecraft/world/item/crafting/RecipeHolder;)Z d
net/minecraft/stats/RecipeBookSettings arw
	TAG_FIELDS a
	states b
	copy ()Lnet/minecraft/stats/RecipeBookSettings; a
	isFiltering (Lnet/minecraft/world/inventory/RecipeBookType;)Z b
	isOpen (Lnet/minecraft/world/inventory/RecipeBookType;)Z a
	read (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/stats/RecipeBookSettings; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/stats/RecipeBookSettings; a
	replaceFrom (Lnet/minecraft/stats/RecipeBookSettings;)V a
	setFiltering (Lnet/minecraft/world/inventory/RecipeBookType;Z)V b
	setOpen (Lnet/minecraft/world/inventory/RecipeBookType;Z)V a
	write (Lnet/minecraft/nbt/CompoundTag;)V b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/stats/RecipeBookSettings$TypeSettings arw$a
	filtering b
	open a
	copy ()Lnet/minecraft/stats/RecipeBookSettings$TypeSettings; a
net/minecraft/stats/ServerRecipeBook arx
	LOGGER d
	RECIPE_BOOK_TAG c
	addRecipes (Ljava/util/Collection;Lnet/minecraft/server/level/ServerPlayer;)I a
	fromNbt (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/item/crafting/RecipeManager;)V a
	loadRecipes (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Consumer;Lnet/minecraft/world/item/crafting/RecipeManager;)V a
	removeRecipes (Ljava/util/Collection;Lnet/minecraft/server/level/ServerPlayer;)I b
	sendInitialRecipeBook (Lnet/minecraft/server/level/ServerPlayer;)V a
	sendRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State;Lnet/minecraft/server/level/ServerPlayer;Ljava/util/List;)V a
	toNbt ()Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/stats/ServerStatsCounter ary
	LOGGER b
	dirty e
	file d
	server c
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/nbt/CompoundTag; a
	getDirty ()Ljava/util/Set; d
	getKey (Lnet/minecraft/stats/Stat;)Lnet/minecraft/resources/ResourceLocation; b
	getStat (Lnet/minecraft/stats/StatType;Ljava/lang/String;)Ljava/util/Optional; a
	markAllDirty ()V c
	parseLocal (Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V a
	save ()V a
	sendStats (Lnet/minecraft/server/level/ServerPlayer;)V a
	setValue (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V a
	toJson ()Ljava/lang/String; b
net/minecraft/stats/Stat arz
	formatter n
	type p
	value o
	buildName (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)Ljava/lang/String; a
	format (I)Ljava/lang/String; a
	getType ()Lnet/minecraft/stats/StatType; a
	getValue ()Ljava/lang/Object; b
	locationToKey (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; a
net/minecraft/stats/StatFormatter asa
	DECIMAL_FORMAT a
	DEFAULT b
	DISTANCE d
	DIVIDE_BY_TEN c
	TIME e
net/minecraft/stats/StatType asb
	displayName c
	map b
	registry a
	contains (Ljava/lang/Object;)Z a
	get (Ljava/lang/Object;)Lnet/minecraft/stats/Stat; b
	get (Ljava/lang/Object;Lnet/minecraft/stats/StatFormatter;)Lnet/minecraft/stats/Stat; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
	getRegistry ()Lnet/minecraft/core/Registry; a
net/minecraft/stats/Stats asc
	ANIMALS_BRED P
	AVIATE_ONE_CM B
	BELL_RING az
	BLOCK_MINED a
	BOAT_ONE_CM y
	CLEAN_ARMOR X
	CLEAN_BANNER Y
	CLEAN_SHULKER_BOX Z
	CLIMB_ONE_CM u
	CROUCH_ONE_CM q
	CROUCH_TIME o
	CUSTOM i
	DAMAGE_ABSORBED L
	DAMAGE_BLOCKED_BY_SHIELD K
	DAMAGE_DEALT G
	DAMAGE_DEALT_ABSORBED H
	DAMAGE_DEALT_RESISTED I
	DAMAGE_RESISTED M
	DAMAGE_TAKEN J
	DEATHS N
	DROP F
	EAT_CAKE_SLICE U
	ENCHANT_ITEM ak
	ENTITY_KILLED g
	ENTITY_KILLED_BY h
	FALL_ONE_CM t
	FILL_CAULDRON V
	FISH_CAUGHT R
	FLY_ONE_CM v
	HORSE_ONE_CM A
	INSPECT_DISPENSER ae
	INSPECT_DROPPER ac
	INSPECT_HOPPER ad
	INTERACT_WITH_ANVIL aC
	INTERACT_WITH_BEACON ab
	INTERACT_WITH_BLAST_FURNACE as
	INTERACT_WITH_BREWINGSTAND aa
	INTERACT_WITH_CAMPFIRE av
	INTERACT_WITH_CARTOGRAPHY_TABLE aw
	INTERACT_WITH_CRAFTING_TABLE an
	INTERACT_WITH_FURNACE am
	INTERACT_WITH_GRINDSTONE aD
	INTERACT_WITH_LECTERN au
	INTERACT_WITH_LOOM ax
	INTERACT_WITH_SMITHING_TABLE aF
	INTERACT_WITH_SMOKER at
	INTERACT_WITH_STONECUTTER ay
	ITEM_BROKEN d
	ITEM_CRAFTED b
	ITEM_DROPPED f
	ITEM_PICKED_UP e
	ITEM_USED c
	JUMP E
	LEAVE_GAME j
	MINECART_ONE_CM x
	MOB_KILLS O
	OPEN_BARREL ar
	OPEN_CHEST ao
	OPEN_ENDERCHEST aj
	OPEN_SHULKER_BOX aq
	PIG_ONE_CM z
	PLAYER_KILLS Q
	PLAY_NOTEBLOCK af
	PLAY_RECORD al
	PLAY_TIME k
	POT_FLOWER ah
	RAID_TRIGGER aA
	RAID_WIN aB
	SLEEP_IN_BED ap
	SPRINT_ONE_CM r
	STRIDER_ONE_CM D
	SWIM_ONE_CM C
	TALKED_TO_VILLAGER S
	TARGET_HIT aE
	TIME_SINCE_DEATH m
	TIME_SINCE_REST n
	TOTAL_WORLD_TIME l
	TRADED_WITH_VILLAGER T
	TRIGGER_TRAPPED_CHEST ai
	TUNE_NOTEBLOCK ag
	USE_CAULDRON W
	WALK_ONE_CM p
	WALK_ON_WATER_ONE_CM s
	WALK_UNDER_WATER_ONE_CM w
	makeCustomStat (Ljava/lang/String;Lnet/minecraft/stats/StatFormatter;)Lnet/minecraft/resources/ResourceLocation; a
	makeRegistryStatType (Ljava/lang/String;Lnet/minecraft/core/Registry;)Lnet/minecraft/stats/StatType; a
net/minecraft/stats/StatsCounter asd
	stats a
	getValue (Lnet/minecraft/stats/Stat;)I a
	getValue (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)I a
	increment (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V b
	setValue (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V a
net/minecraft/tags/BannerPatternTags asf
	NO_ITEM_REQUIRED a
	PATTERN_ITEM_CREEPER c
	PATTERN_ITEM_FLOWER b
	PATTERN_ITEM_GLOBE f
	PATTERN_ITEM_MOJANG e
	PATTERN_ITEM_PIGLIN g
	PATTERN_ITEM_SKULL d
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/BiomeTags asg
	ALLOWS_SURFACE_SLIME_SPAWNS aq
	ALLOWS_TROPICAL_FISH_SPAWNS_AT_ANY_HEIGHT an
	HAS_ANCIENT_CITY U
	HAS_BASTION_REMNANT T
	HAS_BURIED_TREASURE p
	HAS_CLOSER_WATER_FOG aa
	HAS_DESERT_PYRAMID q
	HAS_END_CITY W
	HAS_IGLOO r
	HAS_JUNGLE_TEMPLE s
	HAS_MINESHAFT t
	HAS_MINESHAFT_MESA u
	HAS_NETHER_FORTRESS R
	HAS_NETHER_FOSSIL S
	HAS_OCEAN_MONUMENT v
	HAS_OCEAN_RUIN_COLD w
	HAS_OCEAN_RUIN_WARM x
	HAS_PILLAGER_OUTPOST y
	HAS_RUINED_PORTAL_DESERT z
	HAS_RUINED_PORTAL_JUNGLE A
	HAS_RUINED_PORTAL_MOUNTAIN D
	HAS_RUINED_PORTAL_NETHER V
	HAS_RUINED_PORTAL_OCEAN B
	HAS_RUINED_PORTAL_STANDARD E
	HAS_RUINED_PORTAL_SWAMP C
	HAS_SHIPWRECK G
	HAS_SHIPWRECK_BEACHED F
	HAS_STRONGHOLD H
	HAS_SWAMP_HUT J
	HAS_TRAIL_RUINS P
	HAS_TRIAL_CHAMBERS I
	HAS_VILLAGE_DESERT K
	HAS_VILLAGE_PLAINS L
	HAS_VILLAGE_SAVANNA M
	HAS_VILLAGE_SNOWY N
	HAS_VILLAGE_TAIGA O
	HAS_WOODLAND_MANSION Q
	INCREASED_FIRE_BURNOUT ad
	IS_BADLANDS f
	IS_BEACH c
	IS_DEEP_OCEAN a
	IS_END n
	IS_FOREST j
	IS_HILL g
	IS_JUNGLE i
	IS_MOUNTAIN e
	IS_NETHER m
	IS_OCEAN b
	IS_OVERWORLD l
	IS_RIVER d
	IS_SAVANNA k
	IS_TAIGA h
	MINESHAFT_BLOCKING Y
	MORE_FREQUENT_DROWNED_SPAWNS ap
	PLAYS_UNDERWATER_MUSIC Z
	POLAR_BEARS_SPAWN_ON_ALTERNATE_BLOCKS ao
	PRODUCES_CORALS_FROM_BONEMEAL ac
	REDUCED_WATER_AMBIENT_SPAWNS am
	REQUIRED_OCEAN_MONUMENT_SURROUNDING X
	SNOW_GOLEM_MELTS ae
	SPAWNS_COLD_VARIANT_FROGS ai
	SPAWNS_GOLD_RABBITS ak
	SPAWNS_SNOW_FOXES ar
	SPAWNS_WARM_VARIANT_FROGS aj
	SPAWNS_WHITE_RABBITS al
	STRONGHOLD_BIASED_TO o
	WATER_ON_MAP_OUTLINES ab
	WITHOUT_PATROL_SPAWNS ag
	WITHOUT_WANDERING_TRADER_SPAWNS ah
	WITHOUT_ZOMBIE_SIEGES af
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/BlockTags ash
	ACACIA_LOGS x
	ALL_HANGING_SIGNS az
	ALL_SIGNS aA
	ANCIENT_CITY_REPLACEABLE bN
	ANIMALS_SPAWNABLE_ON bP
	ANVIL M
	AXOLOTLS_SPAWNABLE_ON bQ
	AZALEA_GROWS_ON bZ
	AZALEA_ROOT_REPLACEABLE bv
	BAMBOO_BLOCKS E
	BAMBOO_PLANTABLE_ON at
	BANNERS G
	BASE_STONE_NETHER bg
	BASE_STONE_OVERWORLD bd
	BEACON_BASE_BLOCKS aL
	BEDS R
	BEEHIVES aF
	BEE_GROWABLES aH
	BIG_DRIPLEAF_PLACEABLE bx
	BIRCH_LOGS w
	BUTTONS f
	CAMEL_SAND_STEP_SOUND_BLOCKS bo
	CAMPFIRES aU
	CANDLES ae
	CANDLE_CAKES bj
	CAULDRONS bk
	CAVE_VINES bs
	CEILING_HANGING_SIGNS ax
	CHERRY_LOGS y
	CLIMBABLE aO
	COAL_ORES ab
	COMBINATION_STEP_SOUND_BLOCKS bn
	COMPLETES_FIND_TREE_TUTORIAL ai
	CONCRETE_POWDER ah
	CONVERTABLE_TO_MUD ca
	COPPER_ORES ad
	CORALS as
	CORAL_BLOCKS ap
	CORAL_PLANTS ar
	CRIMSON_STEMS C
	CROPS aG
	CRYSTAL_SOUND_BLOCKS bl
	DAMPENS_VIBRATIONS bq
	DARK_OAK_LOGS u
	DEAD_BUSH_MAY_PLACE_ON cd
	DEEPSLATE_ORE_REPLACEABLES bf
	DIAMOND_ORES Y
	DIRT af
	DOORS p
	DRAGON_IMMUNE aB
	DRAGON_TRANSPARENT aC
	DRIPSTONE_REPLACEABLE br
	EMERALD_ORES ac
	ENCHANTMENT_POWER_PROVIDER cn
	ENCHANTMENT_POWER_TRANSMITTER co
	ENDERMAN_HOLDABLE ak
	FALL_DAMAGE_RESETTING aP
	FEATURES_CANNOT_REPLACE bH
	FENCES S
	FENCE_GATES aX
	FIRE aJ
	FLOWERS U
	FLOWER_POTS aj
	FOXES_SPAWNABLE_ON bW
	FROGS_SPAWNABLE_ON bY
	FROG_PREFER_JUMP_TO bK
	GEODE_INVALID_BLOCKS bJ
	GOATS_SPAWNABLE_ON bR
	GOLD_ORES W
	GUARDED_BY_PIGLINS aV
	HOGLIN_REPELLENTS aR
	ICE al
	IMPERMEABLE an
	INFINIBURN_END bc
	INFINIBURN_NETHER bb
	INFINIBURN_OVERWORLD ba
	INSIDE_STEP_SOUND_BLOCKS bm
	INVALID_SPAWN_INSIDE ci
	IRON_ORES X
	JUNGLE_LOGS z
	LAPIS_ORES aa
	LAVA_POOL_STONE_CANNOT_REPLACE bI
	LEAVES O
	LOGS t
	LOGS_THAT_BURN r
	LUSH_GROUND_REPLACEABLE bu
	MAINTAINS_FARMLAND cp
	MANGROVE_LOGS B
	MANGROVE_LOGS_CAN_GROW_THROUGH cb
	MANGROVE_ROOTS_CAN_GROW_THROUGH cc
	MINEABLE_WITH_AXE bz
	MINEABLE_WITH_HOE bA
	MINEABLE_WITH_PICKAXE bB
	MINEABLE_WITH_SHOVEL bC
	MOOSHROOMS_SPAWNABLE_ON bS
	MOSS_REPLACEABLE bt
	MUSHROOM_GROW_BLOCK aZ
	NEEDS_DIAMOND_TOOL bE
	NEEDS_IRON_TOOL bF
	NEEDS_STONE_TOOL bG
	NETHER_CARVER_REPLACEABLES bi
	NYLIUM aK
	OAK_LOGS v
	OCCLUDES_VIBRATION_SIGNALS bp
	OVERWORLD_CARVER_REPLACEABLES bh
	OVERWORLD_NATURAL_LOGS s
	PARROTS_SPAWNABLE_ON bT
	PIGLIN_REPELLENTS V
	PLANKS b
	POLAR_BEARS_SPAWNABLE_ON_ALTERNATE bU
	PORTALS aI
	PRESSURE_PLATES l
	PREVENT_MOB_SPAWNING_INSIDE aW
	RABBITS_SPAWNABLE_ON bV
	RAILS N
	REDSTONE_ORES Z
	REPLACEABLE cm
	REPLACEABLE_BY_TREES cf
	SAND H
	SAPLINGS q
	SCULK_REPLACEABLE bL
	SCULK_REPLACEABLE_WORLD_GEN bM
	SHULKER_BOXES aQ
	SIGNS aw
	SLABS K
	SMALL_DRIPLEAF_PLACEABLE bw
	SMALL_FLOWERS Q
	SMELTS_TO_GLASS I
	SNAPS_GOAT_HORN ce
	SNIFFER_DIGGABLE_BLOCK cj
	SNIFFER_EGG_HATCH_BOOST ck
	SNOW by
	SNOW_LAYER_CANNOT_SURVIVE_ON cg
	SNOW_LAYER_CAN_SURVIVE_ON ch
	SOUL_FIRE_BASE_BLOCKS aS
	SOUL_SPEED_BLOCKS aM
	SPRUCE_LOGS A
	STAIRS J
	STANDING_SIGNS au
	STONE_BRICKS c
	STONE_BUTTONS e
	STONE_ORE_REPLACEABLES be
	STONE_PRESSURE_PLATES n
	STRIDER_WARM_BLOCKS aT
	SWORD_EFFICIENT bD
	TALL_FLOWERS T
	TERRACOTTA ag
	TRAIL_RUINS_REPLACEABLE cl
	TRAPDOORS P
	UNDERWATER_BONEMEALS ao
	UNSTABLE_BOTTOM_CENTER aY
	VALID_SPAWN am
	VIBRATION_RESONATORS bO
	WALLS L
	WALL_CORALS aq
	WALL_HANGING_SIGNS ay
	WALL_POST_OVERRIDE aN
	WALL_SIGNS av
	WARPED_STEMS D
	WART_BLOCKS F
	WITHER_IMMUNE aD
	WITHER_SUMMON_BASE_BLOCKS aE
	WOLVES_SPAWNABLE_ON bX
	WOODEN_BUTTONS d
	WOODEN_DOORS h
	WOODEN_FENCES k
	WOODEN_PRESSURE_PLATES m
	WOODEN_SLABS j
	WOODEN_STAIRS i
	WOODEN_TRAPDOORS o
	WOOL a
	WOOL_CARPETS g
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/CatVariantTags asi
	DEFAULT_SPAWNS a
	FULL_MOON_SPAWNS b
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/DamageTypeTags asj
	ALWAYS_HURTS_ENDER_DRAGONS z
	ALWAYS_KILLS_ARMOR_STANDS B
	ALWAYS_MOST_SIGNIFICANT_FALL t
	ALWAYS_TRIGGERS_SILVERFISH y
	AVOIDS_GUARDIAN_THORNS x
	BREEZE_IMMUNE_TO b
	BURNS_ARMOR_STANDS w
	BYPASSES_ARMOR c
	BYPASSES_COOLDOWN f
	BYPASSES_EFFECTS g
	BYPASSES_ENCHANTMENTS i
	BYPASSES_INVULNERABILITY e
	BYPASSES_RESISTANCE h
	BYPASSES_SHIELD d
	CAN_BREAK_ARMOR_STAND C
	DAMAGES_HELMET a
	IGNITES_ARMOR_STANDS v
	IS_DROWNING o
	IS_EXPLOSION m
	IS_FALL n
	IS_FIRE j
	IS_FREEZING p
	IS_LIGHTNING q
	IS_PROJECTILE k
	NO_ANGER r
	NO_IMPACT s
	NO_KNOCKBACK A
	WITCH_RESISTANT_TO l
	WITHER_IMMUNE_TO u
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/EntityTypeTags ask
	ARROWS f
	AXOLOTL_ALWAYS_HOSTILES i
	AXOLOTL_HUNT_TARGETS j
	BEEHIVE_INHABITORS e
	CAN_BREATHE_UNDER_WATER m
	CAN_TURN_IN_BOATS t
	DEFLECTS_ARROWS r
	DEFLECTS_TRIDENTS s
	DISMOUNTS_UNDERWATER p
	FALL_DAMAGE_IMMUNE o
	FREEZE_HURTS_EXTRA_TYPES l
	FREEZE_IMMUNE_ENTITY_TYPES k
	FROG_FOOD n
	IMPACT_PROJECTILES g
	NON_CONTROLLING_RIDER q
	POWDER_SNOW_WALKABLE_MOBS h
	RAIDERS c
	SKELETONS a
	UNDEAD d
	ZOMBIES b
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/FlatLevelGeneratorPresetTags asl
	VISIBLE a
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/FluidTags asm
	LAVA b
	WATER a
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/GameEventTags asn
	ALLAY_CAN_LISTEN e
	IGNORE_VIBRATIONS_SNEAKING d
	SHRIEKER_CAN_LISTEN c
	VIBRATIONS a
	WARDEN_CAN_LISTEN b
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/InstrumentTags aso
	GOAT_HORNS c
	REGULAR_GOAT_HORNS a
	SCREAMING_GOAT_HORNS b
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/ItemTags asp
	ACACIA_LOGS v
	ANVIL K
	ARROWS at
	AXES aO
	AXOLOTL_TEMPT_ITEMS aA
	BAMBOO_BLOCKS C
	BANNERS E
	BEACON_PAYMENT_ITEMS aw
	BEDS P
	BIRCH_LOGS u
	BOATS am
	BOOKSHELF_BOOKS av
	BREAKS_DECORATED_POTS aT
	BUTTONS f
	CANDLES ai
	CHERRY_LOGS w
	CHEST_BOATS an
	CLUSTER_MAX_HARVESTABLES aC
	COALS as
	COAL_ORES ad
	COMPASSES aD
	COMPLETES_FIND_TREE_TUTORIAL al
	COPPER_ORES af
	CREEPER_DROP_MUSIC_DISCS ar
	CREEPER_IGNITERS aF
	CRIMSON_STEMS A
	DAMPENS_VIBRATIONS aB
	DARK_OAK_LOGS s
	DECORATED_POT_INGREDIENTS aM
	DECORATED_POT_SHERDS aL
	DIAMOND_ORES aa
	DIRT aj
	DOORS o
	EMERALD_ORES ae
	FENCES Q
	FENCE_GATES l
	FISHES ao
	FLOWERS S
	FOX_FOOD X
	FREEZE_IMMUNE_WEARABLES az
	GOLD_ORES Y
	HANGING_SIGNS aE
	HOES aP
	IGNORED_BY_PIGLIN_BABIES V
	IRON_ORES Z
	JUNGLE_LOGS x
	LAPIS_ORES ac
	LEAVES M
	LECTERN_BOOKS au
	LOGS r
	LOGS_THAT_BURN q
	MANGROVE_LOGS z
	MUSIC_DISCS aq
	NON_FLAMMABLE_WOOD ag
	NOTE_BLOCK_TOP_INSTRUMENTS aG
	OAK_LOGS t
	PICKAXES aQ
	PIGLIN_FOOD W
	PIGLIN_LOVED U
	PIGLIN_REPELLENTS T
	PLANKS b
	RAILS L
	REDSTONE_ORES ab
	SAND F
	SAPLINGS p
	SHOVELS aR
	SIGNS ap
	SLABS I
	SMALL_FLOWERS O
	SMELTS_TO_GLASS G
	SNIFFER_FOOD aK
	SOUL_FIRE_BASE_BLOCKS ah
	SPRUCE_LOGS y
	STAIRS H
	STONE_BRICKS c
	STONE_BUTTONS e
	STONE_CRAFTING_MATERIALS ay
	STONE_TOOL_MATERIALS ax
	SWORDS aN
	TALL_FLOWERS R
	TERRACOTTA ak
	TOOLS aS
	TRAPDOORS N
	TRIMMABLE_ARMOR aH
	TRIM_MATERIALS aI
	TRIM_TEMPLATES aJ
	VILLAGER_PLANTABLE_SEEDS aU
	WALLS J
	WARPED_STEMS B
	WART_BLOCKS D
	WOODEN_BUTTONS d
	WOODEN_DOORS h
	WOODEN_FENCES k
	WOODEN_PRESSURE_PLATES m
	WOODEN_SLABS j
	WOODEN_STAIRS i
	WOODEN_TRAPDOORS n
	WOOL a
	WOOL_CARPETS g
	bind (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/PaintingVariantTags asq
	PLACEABLE a
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/PoiTypeTags asr
	ACQUIRABLE_JOB_SITE a
	BEE_HOME c
	VILLAGE b
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/StructureTags ass
	CATS_SPAWN_AS_BLACK n
	CATS_SPAWN_IN m
	DOLPHIN_LOCATED b
	EYE_OF_ENDER_LOCATED a
	MINESHAFT p
	OCEAN_RUIN s
	ON_DESERT_VILLAGE_MAPS f
	ON_JUNGLE_EXPLORER_MAPS j
	ON_OCEAN_EXPLORER_MAPS d
	ON_PLAINS_VILLAGE_MAPS g
	ON_SAVANNA_VILLAGE_MAPS e
	ON_SNOWY_VILLAGE_MAPS i
	ON_SWAMP_EXPLORER_MAPS k
	ON_TAIGA_VILLAGE_MAPS h
	ON_TREASURE_MAPS l
	ON_WOODLAND_EXPLORER_MAPS c
	RUINED_PORTAL r
	SHIPWRECK q
	VILLAGE o
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/TagBuilder ast
	entries a
	add (Lnet/minecraft/tags/TagEntry;)Lnet/minecraft/tags/TagBuilder; a
	addElement (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagBuilder; a
	addOptionalElement (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagBuilder; b
	addOptionalTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagBuilder; d
	addTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagBuilder; c
	build ()Ljava/util/List; b
	create ()Lnet/minecraft/tags/TagBuilder; a
net/minecraft/tags/TagEntry asu
	CODEC a
	FULL_CODEC b
	id c
	required e
	tag d
	build (Lnet/minecraft/tags/TagEntry$Lookup;Ljava/util/function/Consumer;)Z a
	element (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagEntry; a
	elementOrTag ()Lnet/minecraft/util/ExtraCodecs$TagOrElementLocation; a
	optionalElement (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagEntry; b
	optionalTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagEntry; d
	tag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagEntry; c
	verifyIfPresent (Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z a
	visitOptionalDependencies (Ljava/util/function/Consumer;)V b
	visitRequiredDependencies (Ljava/util/function/Consumer;)V a
net/minecraft/tags/TagEntry$Lookup asu$a
	element (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	tag (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Collection; b
net/minecraft/tags/TagFile asv
	CODEC a
	entries b
	replace c
	entries ()Ljava/util/List; a
	replace ()Z b
net/minecraft/tags/TagKey asw
	VALUES c
	location b
	registry a
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; d
	codec (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; a
	create (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagKey; a
	hashedCodec (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; b
	isFor (Lnet/minecraft/resources/ResourceKey;)Z c
	location ()Lnet/minecraft/resources/ResourceLocation; b
	registry ()Lnet/minecraft/resources/ResourceKey; a
net/minecraft/tags/TagLoader asx
	LOGGER a
	directory c
	idToValue b
	build (Ljava/util/Map;)Ljava/util/Map; a
	build (Lnet/minecraft/tags/TagEntry$Lookup;Ljava/util/List;)Lcom/mojang/datafixers/util/Either; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)Ljava/util/Map; a
	loadAndBuild (Lnet/minecraft/server/packs/resources/ResourceManager;)Ljava/util/Map; b
net/minecraft/tags/TagLoader$EntryWithSource asx$a
	entry a
	source b
	entry ()Lnet/minecraft/tags/TagEntry; a
	source ()Ljava/lang/String; b
net/minecraft/tags/TagLoader$SortingEntry asx$b
	entries a
	entries ()Ljava/util/List; a
	visitOptionalDependencies (Ljava/util/function/Consumer;)V b
	visitRequiredDependencies (Ljava/util/function/Consumer;)V a
net/minecraft/tags/TagManager asy
	CUSTOM_REGISTRY_DIRECTORIES a
	registryAccess b
	results c
	createLoader (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;Lnet/minecraft/core/RegistryAccess$RegistryEntry;)Ljava/util/concurrent/CompletableFuture; a
	getResult ()Ljava/util/List; a
	getTagDir (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/String; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/tags/TagManager$LoadResult asy$a
	key a
	tags b
	key ()Lnet/minecraft/resources/ResourceKey; a
	tags ()Ljava/util/Map; b
net/minecraft/tags/TagNetworkSerialization asz
	deserializeTagsFromNetwork (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Registry;Lnet/minecraft/tags/TagNetworkSerialization$NetworkPayload;Lnet/minecraft/tags/TagNetworkSerialization$TagOutput;)V a
	serializeTagsToNetwork (Lnet/minecraft/core/LayeredRegistryAccess;)Ljava/util/Map; a
	serializeToNetwork (Lnet/minecraft/core/Registry;)Lnet/minecraft/tags/TagNetworkSerialization$NetworkPayload; a
net/minecraft/tags/TagNetworkSerialization$NetworkPayload asz$a
	tags a
	isEmpty ()Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/tags/TagNetworkSerialization$NetworkPayload; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/tags/TagNetworkSerialization$TagOutput asz$b
net/minecraft/tags/WorldPresetTags ata
	EXTENDED b
	NORMAL a
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/util/AbortableIterationConsumer atc
net/minecraft/util/AbortableIterationConsumer$Continuation atc$a
	$VALUES c
	ABORT b
	CONTINUE a
	$values ()[Lnet/minecraft/util/AbortableIterationConsumer$Continuation; b
	shouldAbort ()Z a
net/minecraft/util/ArrayListDeque atd
	MIN_GROWTH a
	contents b
	head c
	size d
	capacity ()I a
	copyCount ([Ljava/lang/Object;I)V a
	getIndex (I)I a
	getInner (I)Ljava/lang/Object; c
	grow ()V b
	verifyIndexInRange (I)V b
	verifyIndexInRange (II)V a
net/minecraft/util/ArrayListDeque$DescendingIterator atd$a
	index b
net/minecraft/util/BitStorage ate
	copy ()Lnet/minecraft/util/BitStorage; d
	get (I)I a
	getAll (Ljava/util/function/IntConsumer;)V a
	getAndSet (II)I a
	getBits ()I c
	getRaw ()[J a
	getSize ()I b
	set (II)V b
	unpack ([I)V a
net/minecraft/util/Brightness atf
	CODEC b
	FULL_BRIGHT c
	LIGHT_VALUE_CODEC a
	block d
	sky e
	block ()I b
	pack ()I a
	sky ()I c
	unpack (I)Lnet/minecraft/util/Brightness; a
net/minecraft/util/ByIdMap atg
	continuous (Ljava/util/function/ToIntFunction;[Ljava/lang/Object;Lnet/minecraft/util/ByIdMap$OutOfBoundsStrategy;)Ljava/util/function/IntFunction; a
	createMap (Ljava/util/function/ToIntFunction;[Ljava/lang/Object;)Ljava/util/function/IntFunction; a
	createSortedArray (Ljava/util/function/ToIntFunction;[Ljava/lang/Object;)[Ljava/lang/Object; b
	sparse (Ljava/util/function/ToIntFunction;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/IntFunction; a
net/minecraft/util/ByIdMap$OutOfBoundsStrategy atg$a
	$VALUES d
	CLAMP c
	WRAP b
	ZERO a
	$values ()[Lnet/minecraft/util/ByIdMap$OutOfBoundsStrategy; a
net/minecraft/util/ClassInstanceMultiMap ath
	allInstances c
	baseClass b
	byClass a
	find (Ljava/lang/Class;)Ljava/util/Collection; a
	getAllInstances ()Ljava/util/List; a
net/minecraft/util/ColorRGBA ati
	CODEC a
	CUSTOM_COLOR_PREFIX c
	rgba b
	formatValue ()Ljava/lang/String; b
	rgba ()I a
net/minecraft/util/CommonColors atj
	BLACK b
	GRAY c
	LIGHT_GRAY d
	RED e
	SOFT_RED f
	SOFT_YELLOW h
	WHITE a
	YELLOW g
net/minecraft/util/CommonLinks atk
	ACCESSIBILITY_HELP l
	ACCOUNT_SETTINGS g
	ATTRIBUTION d
	BLOCKING_HELP o
	BUY_MINECRAFT_JAVA f
	BUY_REALMS r
	EULA b
	GDPR a
	GENERAL_HELP k
	LICENSES e
	PRIVACY_STATEMENT c
	REALMS_CONTENT_CREATION t
	REALMS_TERMS s
	RELEASE_FEEDBACK i
	REPORTING_HELP m
	SNAPSHOT_BUGS_FEEDBACK j
	SNAPSHOT_FEEDBACK h
	START_REALMS_TRIAL q
	SUSPENSION_HELP n
	SYMLINK_HELP p
	extendRealms (Ljava/lang/String;Ljava/util/UUID;)Ljava/lang/String; a
	extendRealms (Ljava/lang/String;Ljava/util/UUID;Z)Ljava/lang/String; a
net/minecraft/util/CrudeIncrementalIntIdentityHashBiMap atl
	EMPTY_SLOT c
	LOADFACTOR d
	NOT_FOUND b
	byId g
	keys e
	nextId h
	size i
	values f
	add (Ljava/lang/Object;)I c
	addMapping (Ljava/lang/Object;I)V a
	byId (I)Ljava/lang/Object; a
	clear ()V a
	contains (I)Z d
	contains (Ljava/lang/Object;)Z b
	copy ()Lnet/minecraft/util/CrudeIncrementalIntIdentityHashBiMap; c
	create (I)Lnet/minecraft/util/CrudeIncrementalIntIdentityHashBiMap; c
	findEmpty (I)I g
	getId (Ljava/lang/Object;)I a
	getValue (I)I e
	grow (I)V f
	hash (Ljava/lang/Object;)I d
	indexOf (Ljava/lang/Object;I)I b
	nextId ()I d
	size ()I b
net/minecraft/util/Crypt atm
	ASYMMETRIC_ALGORITHM j
	ASYMMETRIC_BITS k
	BYTE_ENCODING l
	HASH_ALGORITHM m
	MIME_ENCODER e
	MIME_LINE_SEPARATOR d
	PEM_RSA_PRIVATE_KEY_FOOTER o
	PEM_RSA_PRIVATE_KEY_HEADER n
	PRIVATE_KEY_CODEC g
	PUBLIC_KEY_CODEC f
	RSA_PUBLIC_KEY_FOOTER p
	RSA_PUBLIC_KEY_HEADER c
	SIGNATURE_BYTES b
	SIGNING_ALGORITHM a
	SYMMETRIC_ALGORITHM h
	SYMMETRIC_BITS i
	byteToPrivateKey ([B)Ljava/security/PrivateKey; b
	byteToPublicKey ([B)Ljava/security/PublicKey; a
	cipherData (ILjava/security/Key;[B)[B a
	decryptByteToSecretKey (Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey; a
	decryptUsingKey (Ljava/security/Key;[B)[B b
	digestData (Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B a
	digestData ([[B)[B a
	encryptUsingKey (Ljava/security/Key;[B)[B a
	generateKeyPair ()Ljava/security/KeyPair; b
	generateSecretKey ()Ljavax/crypto/SecretKey; a
	getCipher (ILjava/security/Key;)Ljavax/crypto/Cipher; a
	pemRsaPrivateKeyToString (Ljava/security/PrivateKey;)Ljava/lang/String; a
	rsaPublicKeyToString (Ljava/security/PublicKey;)Ljava/lang/String; a
	rsaStringToKey (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/util/Crypt$ByteArrayToKeyFunction;)Ljava/security/Key; a
	setupCipher (ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher; a
	stringToPemRsaPrivateKey (Ljava/lang/String;)Ljava/security/PrivateKey; a
	stringToRsaPublicKey (Ljava/lang/String;)Ljava/security/PublicKey; b
net/minecraft/util/Crypt$ByteArrayToKeyFunction atm$a
net/minecraft/util/Crypt$SaltSignaturePair atm$b
	EMPTY a
	salt b
	signature c
	isValid ()Z a
	salt ()J c
	saltAsBytes ()[B b
	signature ()[B d
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/util/Crypt$SaltSignaturePair;)V a
net/minecraft/util/Crypt$SaltSupplier atm$c
	secureRandom a
	getLong ()J a
net/minecraft/util/CryptException atn
net/minecraft/util/CsvOutput ato
	FIELD_SEPARATOR b
	LINE_SEPARATOR a
	columnCount d
	output c
	builder ()Lnet/minecraft/util/CsvOutput$Builder; a
	getStringValue (Ljava/lang/Object;)Ljava/lang/String; a
	writeLine (Ljava/util/stream/Stream;)V a
	writeRow ([Ljava/lang/Object;)V a
net/minecraft/util/CsvOutput$Builder ato$a
	headers a
	addColumn (Ljava/lang/String;)Lnet/minecraft/util/CsvOutput$Builder; a
	build (Ljava/io/Writer;)Lnet/minecraft/util/CsvOutput; a
net/minecraft/util/CubicSampler atp
	GAUSSIAN_SAMPLE_BREADTH b
	GAUSSIAN_SAMPLE_KERNEL c
	GAUSSIAN_SAMPLE_RADIUS a
	gaussianSampleVec3 (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/util/CubicSampler$Vec3Fetcher;)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/util/CubicSampler$Vec3Fetcher atp$a
net/minecraft/util/CubicSpline atq
	builder (Lnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline$Builder; a
	builder (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline$Builder; a
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	constant (F)Lnet/minecraft/util/CubicSpline; a
	mapAll (Lnet/minecraft/util/CubicSpline$CoordinateVisitor;)Lnet/minecraft/util/CubicSpline; a
	parityString ()Ljava/lang/String; a
net/minecraft/util/CubicSpline$Builder atq$b
	coordinate a
	derivatives e
	locations c
	valueTransformer b
	values d
	addPoint (FF)Lnet/minecraft/util/CubicSpline$Builder; a
	addPoint (FFF)Lnet/minecraft/util/CubicSpline$Builder; a
	addPoint (FLnet/minecraft/util/CubicSpline;)Lnet/minecraft/util/CubicSpline$Builder; a
	addPoint (FLnet/minecraft/util/CubicSpline;F)Lnet/minecraft/util/CubicSpline$Builder; a
	build ()Lnet/minecraft/util/CubicSpline; a
net/minecraft/util/CubicSpline$Constant atq$c
	value b
	apply (Ljava/lang/Object;)F a
	mapAll (Lnet/minecraft/util/CubicSpline$CoordinateVisitor;)Lnet/minecraft/util/CubicSpline; a
	maxValue ()F c
	minValue ()F b
	parityString ()Ljava/lang/String; a
	value ()F d
net/minecraft/util/CubicSpline$CoordinateVisitor atq$d
net/minecraft/util/CubicSpline$Multipoint atq$e
	coordinate b
	derivatives e
	locations c
	maxValue g
	minValue f
	values d
	apply (Ljava/lang/Object;)F a
	coordinate ()Lnet/minecraft/util/ToFloatFunction; d
	create (Lnet/minecraft/util/ToFloatFunction;[FLjava/util/List;[F)Lnet/minecraft/util/CubicSpline$Multipoint; a
	derivatives ()[F g
	findIntervalStart ([FF)I a
	linearExtend (F[FF[FI)F a
	locations ()[F e
	mapAll (Lnet/minecraft/util/CubicSpline$CoordinateVisitor;)Lnet/minecraft/util/CubicSpline; a
	maxValue ()F c
	minValue ()F b
	parityString ()Ljava/lang/String; a
	toString ([F)Ljava/lang/String; a
	validateSizes ([FLjava/util/List;[F)V a
	values ()Ljava/util/List; f
net/minecraft/util/DebugBuffer atr
	data a
	index b
	dump ()Ljava/util/List; a
	push (Ljava/lang/Object;)V a
net/minecraft/util/DelegateDataOutput ats
	parent a
net/minecraft/util/DependencySorter att
	contents a
	addDependencyIfNotCyclic (Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)V b
	addEntry (Ljava/lang/Object;Lnet/minecraft/util/DependencySorter$Entry;)Lnet/minecraft/util/DependencySorter; a
	isCyclic (Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)Z a
	orderByDependencies (Ljava/util/function/BiConsumer;)V a
	visitDependenciesAndElement (Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V a
net/minecraft/util/DependencySorter$Entry att$a
	visitOptionalDependencies (Ljava/util/function/Consumer;)V b
	visitRequiredDependencies (Ljava/util/function/Consumer;)V a
net/minecraft/util/DirectoryLock atu
	DUMMY d
	LOCK_FILE a
	lock c
	lockFile b
	create (Ljava/nio/file/Path;)Lnet/minecraft/util/DirectoryLock; a
	isLocked (Ljava/nio/file/Path;)Z b
	isValid ()Z a
net/minecraft/util/DirectoryLock$LockException atu$a
	alreadyLocked (Ljava/nio/file/Path;)Lnet/minecraft/util/DirectoryLock$LockException; a
net/minecraft/util/ExceptionCollector atv
	result a
	add (Ljava/lang/Throwable;)V a
	throwIfPresent ()V a
net/minecraft/util/ExtraCodecs atw
	AXISANGLE4F f
	BASE64_STRING n
	BIT_SET s
	CODEPOINT w
	ESCAPED_STRING o
	FLAT_JSON c
	GAME_PROFILE u
	GAME_PROFILE_WITHOUT_PROPERTIES z
	INSTANT_ISO8601 m
	JAVA b
	JSON a
	MATRIX4F h
	NON_EMPTY_STRING v
	NON_NEGATIVE_INT i
	PATTERN l
	POSITIVE_FLOAT k
	POSITIVE_INT j
	PROPERTY y
	PROPERTY_MAP t
	QUATERNIONF g
	QUATERNIONF_COMPONENTS e
	RESOURCE_PATH_CODEC x
	TAG_OR_ELEMENT_ID p
	VECTOR3F d
	fromOptionalLong r
	toOptionalLong q
	asOptionalLong (Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec; a
	catchDecoderException (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; c
	converter (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Codec; a
	dispatchOptionalValue (Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec; a
	either (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/ExtraCodecs$EitherCodec; c
	ensureHomogenous (Ljava/util/function/Function;)Ljava/util/function/Function; b
	floatRangeMinExclusiveWithMessage (FFLjava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	idResolverCodec (Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;I)Lcom/mojang/serialization/Codec; a
	intRange (II)Lcom/mojang/serialization/Codec; a
	intRangeWithMessage (IILjava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	intervalCodec (Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	lazyInitializedCodec (Ljava/util/function/Supplier;)Lcom/mojang/serialization/Codec; a
	nonEmptyHolderSet (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
	nonEmptyList (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	object2BooleanMap (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; d
	orCompressed (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
	orCompressed (Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec; a
	orElsePartial (Ljava/lang/Object;)Lcom/mojang/serialization/Codec$ResultFunction; a
	overrideLifecycle (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	recursive (Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	retrieveContext (Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec; a
	sizeLimitedString (II)Lcom/mojang/serialization/Codec; b
	strictOptionalField (Lcom/mojang/serialization/Codec;Ljava/lang/String;)Lcom/mojang/serialization/MapCodec; a
	strictOptionalField (Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/Object;)Lcom/mojang/serialization/MapCodec; a
	strictUnboundedMap (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/ExtraCodecs$StrictUnboundedMapCodec; d
	stringResolverCodec (Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	temporalCodec (Ljava/time/format/DateTimeFormatter;)Lcom/mojang/serialization/Codec; a
	validate (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	validate (Lcom/mojang/serialization/MapCodec;Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec; a
	withAlternative (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; e
	withAlternative (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	xor (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
net/minecraft/util/ExtraCodecs$EitherCodec atw$b
	first a
	second b
	encode (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/util/ExtraCodecs$RecursiveCodec atw$c
	name a
	wrapped b
net/minecraft/util/ExtraCodecs$StrictOptionalFieldCodec atw$d
	elementCodec b
	name a
	encode (Ljava/util/Optional;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder; a
net/minecraft/util/ExtraCodecs$StrictUnboundedMapCodec atw$e
	elementCodec b
	keyCodec a
	encode (Ljava/util/Map;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/util/ExtraCodecs$TagOrElementLocation atw$f
	id a
	tag b
	decoratedId ()Ljava/lang/String; c
	id ()Lnet/minecraft/resources/ResourceLocation; a
	tag ()Z b
net/minecraft/util/ExtraCodecs$XorCodec atw$g
	first a
	second b
	encode (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	first ()Lcom/mojang/serialization/Codec; a
	second ()Lcom/mojang/serialization/Codec; b
net/minecraft/util/FastBufferedInputStream atx
	DEFAULT_BUFFER_SIZE a
	buffer c
	in b
	limit d
	position e
	bytesInBuffer ()I a
	fill ()V b
net/minecraft/util/FastColor aty
net/minecraft/util/FastColor$ABGR32 aty$a
	alpha (I)I a
	blue (I)I d
	color (II)I a
	color (IIII)I a
	green (I)I c
	opaque (I)I f
	red (I)I b
	transparent (I)I e
net/minecraft/util/FastColor$ARGB32 aty$b
	alpha (I)I a
	blue (I)I d
	color (IIII)I a
	green (I)I c
	lerp (FII)I a
	multiply (II)I a
	red (I)I b
net/minecraft/util/FileZipper atz
	LOGGER a
	fs d
	outputFile b
	tempFile c
	add (Ljava/nio/file/Path;)V a
	add (Ljava/nio/file/Path;Ljava/io/File;)V a
	add (Ljava/nio/file/Path;Ljava/lang/String;)V a
net/minecraft/util/FormattedCharSequence aua
	EMPTY a
net/minecraft/util/FormattedCharSink aub
net/minecraft/util/FutureChain auc
	LOGGER b
	closed e
	executor d
	head c
net/minecraft/util/Graph aud
	depthFirstSearch (Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;Ljava/util/function/Consumer;Ljava/lang/Object;)Z a
net/minecraft/util/GsonHelper aue
	GSON a
	convertToBigDecimal (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal; j
	convertToBigInteger (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger; k
	convertToBoolean (Lcom/google/gson/JsonElement;Ljava/lang/String;)Z c
	convertToByte (Lcom/google/gson/JsonElement;Ljava/lang/String;)B h
	convertToCharacter (Lcom/google/gson/JsonElement;Ljava/lang/String;)C i
	convertToDouble (Lcom/google/gson/JsonElement;Ljava/lang/String;)D d
	convertToFloat (Lcom/google/gson/JsonElement;Ljava/lang/String;)F e
	convertToInt (Lcom/google/gson/JsonElement;Ljava/lang/String;)I g
	convertToItem (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lnet/minecraft/core/Holder; b
	convertToJsonArray (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray; n
	convertToJsonObject (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject; m
	convertToLong (Lcom/google/gson/JsonElement;Ljava/lang/String;)J f
	convertToObject (Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	convertToShort (Lcom/google/gson/JsonElement;Ljava/lang/String;)S l
	convertToString (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; b
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object; b
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object; a
	fromNullableJson (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; a
	fromNullableJson (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object; a
	fromNullableJson (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; a
	fromNullableJson (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; a
	fromNullableJson (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object; b
	getAsBigDecimal (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal; r
	getAsBigDecimal (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal; a
	getAsBigInteger (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger; s
	getAsBigInteger (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger; a
	getAsBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z k
	getAsBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z a
	getAsByte (Lcom/google/gson/JsonObject;Ljava/lang/String;)B p
	getAsByte (Lcom/google/gson/JsonObject;Ljava/lang/String;B)B a
	getAsCharacter (Lcom/google/gson/JsonObject;Ljava/lang/String;)C q
	getAsCharacter (Lcom/google/gson/JsonObject;Ljava/lang/String;C)C a
	getAsDouble (Lcom/google/gson/JsonObject;Ljava/lang/String;)D l
	getAsDouble (Lcom/google/gson/JsonObject;Ljava/lang/String;D)D a
	getAsFloat (Lcom/google/gson/JsonObject;Ljava/lang/String;)F m
	getAsFloat (Lcom/google/gson/JsonObject;Ljava/lang/String;F)F a
	getAsInt (Lcom/google/gson/JsonObject;Ljava/lang/String;)I o
	getAsInt (Lcom/google/gson/JsonObject;Ljava/lang/String;I)I a
	getAsItem (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/core/Holder; j
	getAsItem (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/core/Holder;)Lnet/minecraft/core/Holder; a
	getAsJsonArray (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray; v
	getAsJsonArray (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray; a
	getAsJsonObject (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject; u
	getAsJsonObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject; a
	getAsLong (Lcom/google/gson/JsonObject;Ljava/lang/String;)J n
	getAsLong (Lcom/google/gson/JsonObject;Ljava/lang/String;J)J a
	getAsObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	getAsObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	getAsShort (Lcom/google/gson/JsonObject;Ljava/lang/String;)S t
	getAsShort (Lcom/google/gson/JsonObject;Ljava/lang/String;S)S a
	getAsString (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; i
	getAsString (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	getNonNull (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonElement; h
	getType (Lcom/google/gson/JsonElement;)Ljava/lang/String; d
	isArrayNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z d
	isBooleanValue (Lcom/google/gson/JsonElement;)Z c
	isBooleanValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z c
	isNumberValue (Lcom/google/gson/JsonElement;)Z b
	isNumberValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z b
	isObjectNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z e
	isStringValue (Lcom/google/gson/JsonElement;)Z a
	isStringValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z a
	isValidNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z g
	isValidPrimitive (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z f
	parse (Ljava/io/Reader;)Lcom/google/gson/JsonObject; a
	parse (Ljava/io/Reader;Z)Lcom/google/gson/JsonObject; a
	parse (Ljava/lang/String;)Lcom/google/gson/JsonObject; a
	parse (Ljava/lang/String;Z)Lcom/google/gson/JsonObject; a
	parseArray (Ljava/io/Reader;)Lcom/google/gson/JsonArray; b
	parseArray (Ljava/lang/String;)Lcom/google/gson/JsonArray; b
	sortByKeyIfNeeded (Ljava/util/Collection;Ljava/util/Comparator;)Ljava/util/Collection; a
	toStableString (Lcom/google/gson/JsonElement;)Ljava/lang/String; e
	writeValue (Lcom/google/gson/stream/JsonWriter;Lcom/google/gson/JsonElement;Ljava/util/Comparator;)V a
net/minecraft/util/HttpUtil auf
	LOGGER a
	cachedFilePath (Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)Ljava/nio/file/Path; a
	checkExistingFile (Ljava/nio/file/Path;Lcom/google/common/hash/HashFunction;Lcom/google/common/hash/HashCode;)Z a
	downloadAndHash (Lcom/google/common/hash/HashFunction;ILnet/minecraft/util/HttpUtil$DownloadProgressListener;Ljava/io/InputStream;Ljava/nio/file/Path;)Lcom/google/common/hash/HashCode; a
	downloadFile (Ljava/nio/file/Path;Ljava/net/URL;Ljava/util/Map;Lcom/google/common/hash/HashFunction;Lcom/google/common/hash/HashCode;ILjava/net/Proxy;Lnet/minecraft/util/HttpUtil$DownloadProgressListener;)Ljava/nio/file/Path; a
	getAvailablePort ()I a
	hashFile (Ljava/nio/file/Path;Lcom/google/common/hash/HashFunction;)Lcom/google/common/hash/HashCode; a
	isPortAvailable (I)Z a
	updateModificationTime (Ljava/nio/file/Path;)V a
net/minecraft/util/HttpUtil$DownloadProgressListener auf$a
	downloadStart (Ljava/util/OptionalLong;)V a
	downloadedBytes (J)V a
	requestFinished (Z)V a
	requestStart ()V a
net/minecraft/util/InclusiveRange aug
	INT a
	maxInclusive c
	minInclusive b
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	codec (Lcom/mojang/serialization/Codec;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/Codec; a
	contains (Lnet/minecraft/util/InclusiveRange;)Z a
	create (Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/DataResult; a
	isValueInRange (Ljava/lang/Comparable;)Z a
	maxInclusive ()Ljava/lang/Comparable; b
	minInclusive ()Ljava/lang/Comparable; a
net/minecraft/util/JavaOps auh
	INSTANCE a
	getMapEntries (Ljava/util/Map;)Ljava/util/stream/Stream; a
	mapLikeToMap (Lcom/mojang/serialization/MapLike;)Ljava/util/Map; a
net/minecraft/util/JavaOps$FixedMapBuilder auh$a
	append (Ljava/lang/Object;Ljava/lang/Object;Lcom/google/common/collect/ImmutableMap$Builder;)Lcom/google/common/collect/ImmutableMap$Builder; a
	build (Lcom/google/common/collect/ImmutableMap$Builder;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	initBuilder ()Lcom/google/common/collect/ImmutableMap$Builder; a
net/minecraft/util/KeyDispatchDataCodec aui
	codec a
	codec ()Lcom/mojang/serialization/Codec; a
	of (Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/KeyDispatchDataCodec; a
	of (Lcom/mojang/serialization/MapCodec;)Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/util/LazyLoadedValue auj
	factory a
	get ()Ljava/lang/Object; a
net/minecraft/util/LinearCongruentialGenerator auk
	INCREMENT b
	MULTIPLIER a
	next (JJ)J a
net/minecraft/util/LowerCaseEnumTypeAdapterFactory aul
	toLowercase (Ljava/lang/Object;)Ljava/lang/String; a
net/minecraft/util/MemoryReserve aum
	reserve a
	allocate ()V a
	release ()V b
net/minecraft/util/ModCheck aun
	confidence a
	description b
	confidence ()Lnet/minecraft/util/ModCheck$Confidence; c
	description ()Ljava/lang/String; d
	fullDescription ()Ljava/lang/String; b
	identify (Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/util/ModCheck; a
	merge (Lnet/minecraft/util/ModCheck;)Lnet/minecraft/util/ModCheck; a
	shouldReportAsModified ()Z a
net/minecraft/util/ModCheck$Confidence aun$a
	$VALUES f
	DEFINITELY c
	PROBABLY_NOT a
	VERY_LIKELY b
	description d
	shouldReportAsModified e
	$values ()[Lnet/minecraft/util/ModCheck$Confidence; a
net/minecraft/util/Mth auo
	ASIN_TAB w
	COS_TAB x
	DEG_TO_RAD d
	EPSILON f
	FRAC_BIAS v
	FRAC_EXP t
	HALF_PI b
	LUT_SIZE u
	MULTIPLY_DE_BRUIJN_BIT_POSITION r
	ONE_SIXTH s
	PI a
	RAD_TO_DEG e
	RANDOM q
	SIN p
	SIN_SCALE o
	SQRT_OF_TWO g
	TWO_PI c
	UUID_VARIANT m
	UUID_VARIANT_2 n
	UUID_VERSION k
	UUID_VERSION_TYPE_4 l
	X_AXIS i
	Y_AXIS h
	Z_AXIS j
	abs (F)F e
	abs (I)I a
	absMax (DD)D a
	approach (FFF)F d
	approachDegrees (FFF)F e
	atan2 (DD)D d
	binarySearch (IILjava/util/function/IntPredicate;)I a
	catmullrom (FFFFF)F a
	ceil (D)I c
	ceil (F)I f
	ceillog2 (I)I e
	clamp (DDD)D a
	clamp (FFF)F a
	clamp (III)I a
	clamp (JJJ)J a
	clampedLerp (DDD)D b
	clampedLerp (FFF)F b
	clampedMap (DDDDD)D a
	clampedMap (FFFFF)F b
	color (FFF)I f
	cos (F)F b
	createInsecureUUID ()Ljava/util/UUID; a
	createInsecureUUID (Lnet/minecraft/util/RandomSource;)Ljava/util/UUID; a
	degreesDifference (FF)F c
	degreesDifferenceAbs (FF)F d
	equal (DD)Z b
	equal (FF)Z a
	fastInvCubeRoot (F)F j
	fastInvSqrt (D)D g
	floor (D)I a
	floor (F)I d
	floorDiv (II)I a
	frac (D)D e
	frac (F)F h
	getInt (Ljava/lang/String;I)I a
	getSeed (III)J b
	getSeed (Lnet/minecraft/core/Vec3i;)J a
	hsvToRgb (FFF)I h
	invSqrt (D)D f
	invSqrt (F)F i
	inverseLerp (DDD)D c
	inverseLerp (FFF)F g
	isMultipleOf (II)Z c
	isPowerOfTwo (I)Z d
	length (DD)D f
	length (DDD)D g
	lengthSquared (DD)D e
	lengthSquared (DDD)D f
	lerp (DDD)D d
	lerp (FFF)F i
	lerp2 (DDDDDD)D a
	lerp3 (DDDDDDDDDDD)D a
	lerpDiscrete (FII)I b
	lerpInt (FII)I a
	lfloor (D)J b
	log2 (I)I f
	map (DDDDD)D b
	map (FFFFF)F c
	murmurHash3Mixer (I)I g
	nextDouble (Lnet/minecraft/util/RandomSource;DD)D a
	nextFloat (Lnet/minecraft/util/RandomSource;FF)F a
	nextInt (Lnet/minecraft/util/RandomSource;II)I a
	normal (Lnet/minecraft/util/RandomSource;FF)F c
	outFromOrigin (III)Ljava/util/stream/IntStream; c
	outFromOrigin (IIII)Ljava/util/stream/IntStream; a
	positiveCeilDiv (II)I e
	positiveModulo (DD)D c
	positiveModulo (FF)F b
	positiveModulo (II)I b
	quantize (DI)I a
	randomBetween (Lnet/minecraft/util/RandomSource;FF)F b
	randomBetweenInclusive (Lnet/minecraft/util/RandomSource;II)I b
	rayIntersectsAABB (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;)Z a
	rotLerp (DDD)D e
	rotLerp (FFF)F j
	rotateIfNecessary (FFF)F c
	rotationAroundAxis (Lorg/joml/Vector3f;Lorg/joml/Quaternionf;Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf; a
	roundToward (II)I d
	sign (D)I j
	sin (F)F a
	smallestEncompassingPowerOfTwo (I)I c
	smoothstep (D)D h
	smoothstepDerivative (D)D i
	sqrt (F)F c
	square (D)D k
	square (F)F k
	square (I)I h
	square (J)J a
	triangleWave (FF)F e
	wobble (D)D l
	wrapDegrees (D)D d
	wrapDegrees (F)F g
	wrapDegrees (I)I b
net/minecraft/util/NativeModuleLister aup
	CODEPAGE_MASK d
	DEFAULT_CODEPAGE e
	DEFAULT_LANG c
	LANG_MASK b
	LOGGER a
	addCrashSection (Lnet/minecraft/CrashReportCategory;)V a
	findLangAndCodepage ([I)Ljava/util/OptionalInt; a
	langTableKey (Ljava/lang/String;II)Ljava/lang/String; a
	listModules ()Ljava/util/List; a
	queryVersionString (Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Ljava/lang/String; b
	queryVersionValue (Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Lcom/sun/jna/Pointer; a
	tryGetVersion (Ljava/lang/String;)Ljava/util/Optional; a
net/minecraft/util/NativeModuleLister$NativeModuleInfo aup$a
	name a
	version b
net/minecraft/util/NativeModuleLister$NativeModuleVersion aup$b
	company c
	description a
	version b
net/minecraft/util/OptionEnum auq
	getCaption ()Lnet/minecraft/network/chat/Component; d
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/util/ParticleUtils aur
	getRandomSpeedRanges (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/phys/Vec3; a
	spawnParticleBelow (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/particles/ParticleOptions;)V a
	spawnParticleOnFace (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/world/phys/Vec3;D)V a
	spawnParticlesAlongAxis (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;DLnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/util/valueproviders/UniformInt;)V a
	spawnParticlesOnBlockFace (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/core/Direction;Ljava/util/function/Supplier;D)V a
	spawnParticlesOnBlockFaces (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/util/valueproviders/IntProvider;)V a
net/minecraft/util/PngInfo aus
	IHDR_SIZE e
	IHDR_TYPE d
	PNG_HEADER c
	height b
	width a
	fromBytes ([B)Lnet/minecraft/util/PngInfo; a
	fromStream (Ljava/io/InputStream;)Lnet/minecraft/util/PngInfo; a
	height ()I b
	validateHeader (Ljava/nio/ByteBuffer;)V a
	width ()I a
net/minecraft/util/ProblemReporter aut
	forChild (Ljava/lang/String;)Lnet/minecraft/util/ProblemReporter; a
	report (Ljava/lang/String;)V b
net/minecraft/util/ProblemReporter$Collector aut$a
	path b
	pathCache c
	problems a
	forChild (Ljava/lang/String;)Lnet/minecraft/util/ProblemReporter; a
	get ()Lcom/google/common/collect/Multimap; a
	getPath ()Ljava/lang/String; b
	report (Ljava/lang/String;)V b
net/minecraft/util/ProgressListener auu
	progressStage (Lnet/minecraft/network/chat/Component;)V c
	progressStagePercentage (I)V a
	progressStart (Lnet/minecraft/network/chat/Component;)V b
	progressStartNoAbort (Lnet/minecraft/network/chat/Component;)V a
	stop ()V a
net/minecraft/util/RandomSource auv
	GAUSSIAN_SPREAD_FACTOR a
	consumeCount (I)V b
	create ()Lnet/minecraft/util/RandomSource; a
	create (J)Lnet/minecraft/util/RandomSource; a
	createNewThreadLocalInstance ()Lnet/minecraft/util/RandomSource; c
	createThreadSafe ()Lnet/minecraft/util/RandomSource; b
	fork ()Lnet/minecraft/util/RandomSource; d
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	nextBoolean ()Z h
	nextDouble ()D j
	nextFloat ()F i
	nextGaussian ()D k
	nextInt ()I f
	nextInt (I)I a
	nextInt (II)I b
	nextIntBetweenInclusive (II)I a
	nextLong ()J g
	setSeed (J)V b
	triangle (DD)D a
net/minecraft/util/ResourceLocationPattern auw
	CODEC a
	locationPredicate f
	namespacePattern b
	namespacePredicate c
	pathPattern d
	pathPredicate e
	locationPredicate ()Ljava/util/function/Predicate; c
	namespacePredicate ()Ljava/util/function/Predicate; a
	pathPredicate ()Ljava/util/function/Predicate; b
net/minecraft/util/SampleLogger auy
	CAPACITY a
	samples b
	size d
	start c
	capacity ()I a
	get (I)J a
	logSample (J)V a
	reset ()V c
	size ()I b
	wrapIndex (I)I b
net/minecraft/util/SegmentedAnglePrecision auz
	angleToDegree d
	degreeToAngle c
	mask a
	precision b
	fromDegrees (F)I b
	fromDegreesWithTurns (F)I a
	fromDirection (Lnet/minecraft/core/Direction;)I a
	getMask ()I a
	isSameAxis (II)Z a
	normalize (I)I c
	toDegrees (I)F b
	toDegreesWithTurns (I)F a
net/minecraft/util/SequencedPriorityIterator ava
	valuesByPriority a
	add (Ljava/lang/Object;I)V a
net/minecraft/util/SignatureUpdater avb
net/minecraft/util/SignatureUpdater$Output avb$a
net/minecraft/util/SignatureValidator avc
	LOGGER b
	NO_VALIDATION a
	from (Lcom/mojang/authlib/yggdrasil/ServicesKeySet;Lcom/mojang/authlib/yggdrasil/ServicesKeyType;)Lnet/minecraft/util/SignatureValidator; a
	from (Ljava/security/PublicKey;Ljava/lang/String;)Lnet/minecraft/util/SignatureValidator; a
	validate ([B[B)Z a
	verifySignature (Lnet/minecraft/util/SignatureUpdater;[BLjava/security/Signature;)Z a
net/minecraft/util/Signer avd
	LOGGER a
	from (Ljava/security/PrivateKey;Ljava/lang/String;)Lnet/minecraft/util/Signer; a
	sign ([B)[B a
net/minecraft/util/SimpleBitStorage ave
	MAGIC a
	bits c
	data b
	divideAdd h
	divideMul g
	divideShift i
	mask d
	size e
	valuesPerLong f
	cellIndex (I)I b
	copy ()Lnet/minecraft/util/BitStorage; d
	get (I)I a
	getAll (Ljava/util/function/IntConsumer;)V a
	getAndSet (II)I a
	getBits ()I c
	getRaw ()[J a
	getSize ()I b
	set (II)V b
	unpack ([I)V a
net/minecraft/util/SimpleBitStorage$InitializationException ave$a
net/minecraft/util/SingleKeyCache avf
	cacheKey b
	cachedValue c
	computeValue a
	getValue (Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/util/SmoothDouble avg
	lastAmount c
	remainingValue b
	targetValue a
	getNewDeltaValue (DD)D a
	reset ()V a
net/minecraft/util/SortedArraySet avh
	DEFAULT_INITIAL_CAPACITY a
	comparator b
	contents c
	size d
	addInternal (Ljava/lang/Object;I)V a
	addOrGet (Ljava/lang/Object;)Ljava/lang/Object; a
	castRawArray ([Ljava/lang/Object;)[Ljava/lang/Object; a
	create ()Lnet/minecraft/util/SortedArraySet; a
	create (I)Lnet/minecraft/util/SortedArraySet; a
	create (Ljava/util/Comparator;)Lnet/minecraft/util/SortedArraySet; a
	create (Ljava/util/Comparator;I)Lnet/minecraft/util/SortedArraySet; a
	findIndex (Ljava/lang/Object;)I c
	first ()Ljava/lang/Object; b
	get (Ljava/lang/Object;)Ljava/lang/Object; b
	getInsertionPosition (I)I b
	getInternal (I)Ljava/lang/Object; e
	grow (I)V c
	last ()Ljava/lang/Object; c
	removeInternal (I)V d
net/minecraft/util/SortedArraySet$ArrayIterator avh$a
	index b
	last c
net/minecraft/util/SpawnUtil avi
	moveToPossibleSpawnPosition (Lnet/minecraft/server/level/ServerLevel;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/util/SpawnUtil$Strategy;)Z a
	trySpawnMob (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;IIILnet/minecraft/util/SpawnUtil$Strategy;)Ljava/util/Optional; a
net/minecraft/util/SpawnUtil$Strategy avi$a
	LEGACY_IRON_GOLEM a
	ON_TOP_OF_COLLIDER b
net/minecraft/util/StringDecomposer avj
	REPLACEMENT_CHAR a
	STOP_ITERATION b
	feedChar (Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;IC)Z a
	filterBrokenSurrogates (Ljava/lang/String;)Ljava/lang/String; a
	getPlainText (Lnet/minecraft/network/chat/FormattedText;)Ljava/lang/String; a
	iterate (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
	iterateBackwards (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z b
	iterateFormatted (Ljava/lang/String;ILnet/minecraft/network/chat/Style;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
	iterateFormatted (Ljava/lang/String;ILnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
	iterateFormatted (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z c
	iterateFormatted (Lnet/minecraft/network/chat/FormattedText;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
net/minecraft/util/StringRepresentable avk
	PRE_BUILT_MAP_THRESHOLD W
	createNameLookup ([Lnet/minecraft/util/StringRepresentable;Ljava/util/function/Function;)Ljava/util/function/Function; a
	fromEnum (Ljava/util/function/Supplier;)Lnet/minecraft/util/StringRepresentable$EnumCodec; a
	fromEnumWithMapping (Ljava/util/function/Supplier;Ljava/util/function/Function;)Lnet/minecraft/util/StringRepresentable$EnumCodec; a
	fromValues (Ljava/util/function/Supplier;)Lcom/mojang/serialization/Codec; b
	getSerializedName ()Ljava/lang/String; c
	keys ([Lnet/minecraft/util/StringRepresentable;)Lcom/mojang/serialization/Keyable; a
net/minecraft/util/StringRepresentable$EnumCodec avk$a
	resolver a
	byName (Ljava/lang/String;)Ljava/lang/Enum; a
	byName (Ljava/lang/String;Ljava/lang/Enum;)Ljava/lang/Enum; a
net/minecraft/util/StringRepresentable$StringRepresentableCodec avk$b
	codec a
	encode (Lnet/minecraft/util/StringRepresentable;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/util/StringUtil avl
	LINE_END_PATTERN c
	LINE_PATTERN b
	STRIP_COLOR_PATTERN a
	endsWithNewLine (Ljava/lang/String;)Z d
	formatTickDuration (IF)Ljava/lang/String; a
	isNullOrEmpty (Ljava/lang/String;)Z b
	lineCount (Ljava/lang/String;)I c
	stripColor (Ljava/lang/String;)Ljava/lang/String; a
	trimChatMessage (Ljava/lang/String;)Ljava/lang/String; e
	truncateStringIfNecessary (Ljava/lang/String;IZ)Ljava/lang/String; a
net/minecraft/util/TaskChainer avm
	LOGGER a
net/minecraft/util/ThreadingDetector avn
	LOGGER a
	fullException f
	lock c
	name b
	stackTraceLock d
	threadThatFailedToAcquire e
	checkAndLock ()V a
	checkAndUnlock ()V b
	makeThreadingException (Ljava/lang/String;Ljava/lang/Thread;)Lnet/minecraft/ReportedException; a
	stackTrace (Ljava/lang/Thread;)Ljava/lang/String; a
net/minecraft/util/TimeSource avo
net/minecraft/util/TimeSource$NanoTimeSource avo$a
net/minecraft/util/TimeUtil avp
	MILLISECONDS_PER_SECOND c
	NANOSECONDS_PER_MILLISECOND b
	NANOSECONDS_PER_SECOND a
	SECONDS_PER_HOUR d
	rangeOfSeconds (II)Lnet/minecraft/util/valueproviders/UniformInt; a
net/minecraft/util/ToFloatFunction avq
	IDENTITY a
	apply (Ljava/lang/Object;)F a
	comap (Ljava/util/function/Function;)Lnet/minecraft/util/ToFloatFunction; a
	createUnlimited (Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)Lnet/minecraft/util/ToFloatFunction; a
	maxValue ()F c
	minValue ()F b
net/minecraft/util/Tuple avr
	getA ()Ljava/lang/Object; a
	getB ()Ljava/lang/Object; b
	setA (Ljava/lang/Object;)V a
	setB (Ljava/lang/Object;)V b
net/minecraft/util/Unit avs
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/util/Unit; a
net/minecraft/util/VisibleForDebug avt
net/minecraft/util/ZeroBitStorage avu
	RAW a
	size b
	copy ()Lnet/minecraft/util/BitStorage; d
	get (I)I a
	getAll (Ljava/util/function/IntConsumer;)V a
	getAndSet (II)I a
	getBits ()I c
	getRaw ()[J a
	getSize ()I b
	set (II)V b
	unpack ([I)V a
net/minecraft/util/datafix/ComponentDataFixUtils avv
	EMPTY_CONTENTS a
	createEmptyComponent (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
	createPlainTextComponent (Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
	createTextComponentJson (Ljava/lang/String;)Ljava/lang/String; a
	createTranslatableComponent (Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; b
	wrapLiteralStringAsComponent (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/DataFixTypes avw
	$VALUES v
	ADVANCEMENTS p
	CHUNK c
	ENTITY_CHUNK s
	HOTBAR d
	LEVEL a
	OPTIONS e
	PLAYER b
	POI_CHUNK q
	SAVED_DATA_COMMAND_STORAGE h
	SAVED_DATA_FORCED_CHUNKS i
	SAVED_DATA_MAP_DATA j
	SAVED_DATA_MAP_INDEX k
	SAVED_DATA_RAIDS l
	SAVED_DATA_RANDOM_SEQUENCES m
	SAVED_DATA_SCOREBOARD n
	SAVED_DATA_STRUCTURE_FEATURE_INDICES o
	STATS g
	STRUCTURE f
	TYPES_FOR_LEVEL_LIST t
	WORLD_GEN_SETTINGS r
	type u
	$values ()[Lnet/minecraft/util/datafix/DataFixTypes; b
	currentVersion ()I a
	update (Lcom/mojang/datafixers/DataFixer;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; a
	update (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/nbt/CompoundTag;II)Lnet/minecraft/nbt/CompoundTag; a
	updateToCurrentVersion (Lcom/mojang/datafixers/DataFixer;Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic; a
	updateToCurrentVersion (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/nbt/CompoundTag;I)Lnet/minecraft/nbt/CompoundTag; a
	wrapCodec (Lcom/mojang/serialization/Codec;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/serialization/Codec; a
net/minecraft/util/datafix/DataFixers avx
	BLENDING_VERSION a
	SAME b
	SAME_NAMESPACED c
	dataFixer d
	addFixers (Lcom/mojang/datafixers/DataFixerBuilder;)V a
	createFixerUpper (Ljava/util/Set;)Lcom/mojang/datafixers/DataFixer; a
	createRenamer (Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/UnaryOperator; a
	createRenamer (Ljava/util/Map;)Ljava/util/function/UnaryOperator; a
	getDataFixer ()Lcom/mojang/datafixers/DataFixer; a
net/minecraft/util/datafix/PackedBitStorage avy
	BIT_TO_LONG_SHIFT a
	bits c
	data b
	mask d
	size e
	get (I)I a
	getBits ()I b
	getRaw ()[J a
	set (II)V a
net/minecraft/util/datafix/fixes/AbstractArrowPickupFix avz
	updateEntity (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
	updatePickup (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateProjectiles (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/AbstractPoiSectionFix awa
	name a
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	processRecords (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
	processSection (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	processSectionRecords (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/AbstractUUIDFix awb
	typeReference a
	createUUIDFromLongs (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; d
	createUUIDFromML (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; a
	createUUIDFromString (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional; a
	createUUIDTag (Lcom/mojang/serialization/Dynamic;JJ)Ljava/util/Optional; a
	replaceUUIDLeastMost (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; c
	replaceUUIDMLTag (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; b
	replaceUUIDString (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; a
	updateNamedChoice (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/AddFlagIfNotPresentFix awc
	flagKey c
	flagValue b
	name a
	typeReference d
net/minecraft/util/datafix/fixes/AddNewChoices awd
	name a
	type b
	cap (Ljava/lang/String;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/AdvancementsFix awe
	RENAMES a
net/minecraft/util/datafix/fixes/AdvancementsRenameFix awf
	name a
	renamer b
net/minecraft/util/datafix/fixes/AttributesRename awg
	RENAMES a
	fixEntity (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; b
	fixItemStackTag (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixName (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BedItemColorFix awh
net/minecraft/util/datafix/fixes/BiomeFix awi
	BIOMES a
net/minecraft/util/datafix/fixes/BitStorageAlignFix awj
	BIT_TO_LONG_SHIFT a
	HEIGHTMAP_BITS e
	HEIGHTMAP_SIZE f
	SECTION_HEIGHT c
	SECTION_SIZE d
	SECTION_WIDTH b
	addPadding (II[J)[J a
	updateBitStorage (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; a
	updateHeightmaps (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateSections (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlendingDataFix awk
	STATUSES_TO_SKIP_BLENDING b
	name a
	updateBlendingData (Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; a
	updateChunkTag (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlendingDataRemoveFromNetherEndFix awl
	updateChunkTag (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityBannerColorFix awm
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix awn
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntityCustomNameToComponentFix awo
net/minecraft/util/datafix/fixes/BlockEntityIdFix awp
	ID_MAP a
net/minecraft/util/datafix/fixes/BlockEntityJukeboxFix awq
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntityKeepPacked awr
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityRenameFix aws
	name a
	nameChangeLookup b
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/UnaryOperator;)Lcom/mojang/datafixers/DataFix; a
net/minecraft/util/datafix/fixes/BlockEntityShulkerBoxColorFix awt
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntitySignDoubleSidedEditableTextFix awu
	DEFAULT_COLOR b
	FILTERED_CORRECT a
	createDefaultText (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	createEmptyLines (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixFrontTextTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	getLines (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/stream/Stream; a
net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix awv
	GSON a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateLine (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityUUIDFix aww
	updateConduit (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateSkull (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/BlockNameFlatteningFix awx
net/minecraft/util/datafix/fixes/BlockRenameFix awy
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; a
	fixBlock (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw awz
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; b
net/minecraft/util/datafix/fixes/BlockStateData axa
	BLOCK_DEFAULTS d
	FILTER_ME a
	ID_BY_OLD e
	ID_BY_OLD_NAME f
	LOGGER b
	MAP c
	bootstrap0 ()V a
	bootstrap1 ()V b
	bootstrap10 ()V k
	bootstrap11 ()V l
	bootstrap12 ()V m
	bootstrap13 ()V n
	bootstrap14 ()V o
	bootstrap15 ()V p
	bootstrap2 ()V c
	bootstrap3 ()V d
	bootstrap4 ()V e
	bootstrap5 ()V f
	bootstrap6 ()V g
	bootstrap7 ()V h
	bootstrap8 ()V i
	bootstrap9 ()V j
	finalizeMaps ()V q
	getTag (I)Lcom/mojang/serialization/Dynamic; b
	parse (Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; b
	register (ILjava/lang/String;[Ljava/lang/String;)V a
	upgradeBlock (I)Ljava/lang/String; a
	upgradeBlock (Ljava/lang/String;)Ljava/lang/String; a
	upgradeBlockStateTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockStateStructureTemplateFix axb
net/minecraft/util/datafix/fixes/CatTypeFix axc
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/CauldronRenameFix axd
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/CavesAndCliffsRenames axe
	RENAMES a
net/minecraft/util/datafix/fixes/ChunkBedBlockEntityInjecterFix axf
	cap (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/templates/List$ListType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/ChunkBiomeFix axg
net/minecraft/util/datafix/fixes/ChunkDeleteIgnoredLightDataFix axh
net/minecraft/util/datafix/fixes/ChunkDeleteLightFix axi
net/minecraft/util/datafix/fixes/ChunkHeightAndBiomeFix axj
	BIOMES_BY_ID s
	BIOME_CONTAINER_LAYER_SIZE p
	BIOME_CONTAINER_SIZE q
	BIOME_CONTAINER_TOP_LAYER_OFFSET r
	BLOCKS_BEFORE_FEATURE_STATUS o
	BLOCKS_PER_SECTION b
	DATAFIXER_CONTEXT_TAG a
	DEFAULT_BIOME c
	HEIGHTMAP_BITS i
	HEIGHTMAP_MASK j
	HEIGHTMAP_OFFSET k
	HEIGHTMAP_TYPES l
	LONGS_PER_SECTION h
	NAME d
	NEW_MIN_SECTION_Y g
	NEW_SECTION_COUNT f
	OLD_SECTION_COUNT e
	STATUS_IS_OR_AFTER_NOISE n
	STATUS_IS_OR_AFTER_SURFACE m
	addPaddingEntries (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
	ceillog2 (I)I a
	getBiomeContainers (Lcom/mojang/serialization/Dynamic;ZILorg/apache/commons/lang3/mutable/MutableBoolean;)[Lcom/mojang/serialization/Dynamic; a
	getFixedHeightmap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	getOldBiome ([II)I a
	makeBiomeContainer (Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lcom/mojang/serialization/Dynamic; a
	makeOptimizedPalettedContainer (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	makePalettedContainer (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	makePalettedContainer (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	padPaletteEntries (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Ljava/util/List;)Lcom/mojang/serialization/Dynamic; a
	predictChunkStatusBeforeSurface (Lcom/mojang/serialization/Dynamic;Ljava/util/Set;)Lcom/mojang/serialization/Dynamic; a
	shiftUpgradeData (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateCarvingMasks (Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; a
	updateChunkTag (Lcom/mojang/serialization/Dynamic;ZZZLjava/util/function/Supplier;)Lcom/mojang/serialization/Dynamic; a
	updateHeightmaps (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/ChunkLightRemoveFix axk
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix axl
	AIR C
	BANNER_BLOCK_MAP B
	BED_BLOCK_MAP A
	DOOR_MAP x
	DYE_COLOR_MAP z
	EAST_MASK f
	FIX k
	FLOWER_POT_MAP v
	LOGGER i
	NORTH_EAST_MASK g
	NORTH_MASK h
	NORTH_WEST_MASK a
	NOTE_BLOCK_MAP y
	PUMPKIN l
	SIZE D
	SKULL_MAP w
	SNOWY_GRASS n
	SNOWY_MYCELIUM o
	SNOWY_PODZOL m
	SOUTH_EAST_MASK e
	SOUTH_MASK d
	SOUTH_WEST_MASK c
	UPPER_LARGE_FERN s
	UPPER_LILAC q
	UPPER_PEONY u
	UPPER_ROSE_BUSH t
	UPPER_SUNFLOWER p
	UPPER_TALL_GRASS r
	VIRTUAL j
	WEST_MASK b
	addBanners (Ljava/util/Map;ILjava/lang/String;)V b
	addBeds (Ljava/util/Map;ILjava/lang/String;)V a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	getName (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; a
	getProperty (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/lang/String; a
	getSideMask (ZZZZ)I a
	idFor (Lnet/minecraft/util/CrudeIncrementalIntIdentityHashBiMap;Lcom/mojang/serialization/Dynamic;)I a
	mapDoor (Ljava/util/Map;Ljava/lang/String;I)V a
	mapSkull (Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$DataLayer axl$a
	NIBBLE_SIZE b
	SIZE a
	data c
	get (III)I a
	getPosition (I)I b
	isFirst (I)Z a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction axl$b
	$VALUES i
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	axis g
	axisDirection h
	$values ()[Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction; c
	getAxis ()Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis; b
	getAxisDirection ()Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection; a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis axl$b$a
	$VALUES d
	X a
	Y b
	Z c
	$values ()[Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis; a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection axl$b$b
	$VALUES d
	NEGATIVE b
	POSITIVE a
	step c
	$values ()[Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection; b
	getStep ()I a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section axl$c
	buffer i
	hasData e
	listTag c
	palette b
	section d
	seen h
	toFix f
	update g
	y a
	addFix (II)V a
	getBlock (I)Lcom/mojang/serialization/Dynamic; a
	setBlock (ILcom/mojang/serialization/Dynamic;)V a
	upgrade (I)I b
	write ()Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$UpgradeChunk axl$d
	blockEntities f
	level c
	sections b
	sides a
	x d
	z e
	getBlock (I)Lcom/mojang/serialization/Dynamic; a
	getBlockEntity (I)Lcom/mojang/serialization/Dynamic; b
	getSection (I)Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section; d
	relative (ILnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction;)I a
	removeBlockEntity (I)Lcom/mojang/serialization/Dynamic; c
	setBlock (ILcom/mojang/serialization/Dynamic;)V a
	write ()Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkProtoTickListFix axm
	ALWAYS_WATERLOGGED b
	SECTION_WIDTH a
	createTick (Lcom/mojang/serialization/Dynamic;Ljava/util/function/Supplier;IIIILjava/util/function/Function;)Lcom/mojang/serialization/Dynamic; a
	getBlock (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; a
	getLiquid (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; b
	makeTickList (Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;BIILjava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkProtoTickListFix$PoorMansPalettedContainer axm$a
	SIZE_BITS a
	bits d
	data c
	mask e
	palette b
	valuesPerLong f
	data ()[J b
	get (III)Lcom/mojang/serialization/Dynamic; a
	getIndex (III)I b
	palette ()Ljava/util/List; a
net/minecraft/util/datafix/fixes/ChunkRenamesFix axn
	appendChunkName (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	mergeRemainders (Lcom/mojang/datafixers/Typed;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	renameField (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; a
	renameFieldHelper (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/ChunkStatusFix axo
net/minecraft/util/datafix/fixes/ChunkStatusFix2 axp
	RENAMES_AND_DOWNGRADES a
net/minecraft/util/datafix/fixes/ChunkStructuresTemplateRenameFix axq
	RENAMES a
	fixChildren (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixTag (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkToProtochunkFix axr
	NUM_SECTIONS a
	fixChunkData (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	packOffsetCoordinates (III)S a
	repackBiomes (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	repackTicks (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/ColorlessShulkerEntityFix axs
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/CriteriaRenameFix axt
	advancementId b
	conversions c
	name a
	fixAdvancements (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/DecoratedPotFieldRenameFix axu
	DECORATED_POT_ID a
net/minecraft/util/datafix/fixes/DropInvalidSignDataFix axv
	FIELDS_TO_DROP a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixText (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/DyeItemRenameFix axw
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/EffectDurationFix axx
	ITEM_TYPES a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	fixEffect (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateEntity (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/EntityArmorStandSilentFix axy
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityBlockStateFix axz
	MAP a
	getBlockId (Ljava/lang/String;)I a
	updateBlockToBlockState (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; a
	updateEntity (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
	updateFallingBlock (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityBrushableBlockFieldsRenameFix aya
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	renameField (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityCatSplitFix ayb
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityCodSalmonFix ayc
	RENAMED_EGG_IDS b
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityCustomNameToComponentFix ayd
	fixTagCustomName (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityElderGuardianSplitFix aye
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityEquipmentToArmorAndHandFix ayf
	cap (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/EntityGoatMissingStateFix ayg
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityHealthFix ayh
	ENTITIES a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityHorseSaddleFix ayi
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityHorseSplitFix ayj
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityIdFix ayk
	ID_MAP a
net/minecraft/util/datafix/fixes/EntityItemFrameDirectionFix ayl
	direction2dTo3d (B)B a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix aym
	MINECART_BY_ID a
net/minecraft/util/datafix/fixes/EntityPaintingFieldsRenameFix ayn
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	renameField (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityPaintingItemFrameDirectionFix ayo
	DIRECTIONS a
	doFix (Lcom/mojang/serialization/Dynamic;ZZ)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityPaintingMotiveFix ayp
	MAP a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityProjectileOwnerFix ayq
	createUUIDArray (JJ)[I a
	setUUID (Lcom/mojang/serialization/Dynamic;JJ)Lcom/mojang/serialization/Dynamic; a
	updateEntity (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
	updateItemPotion (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateOwnerArrow (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateOwnerLlamaSpit (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateOwnerThrowable (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateProjectiles (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityPufferfishRenameFix ayr
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityRavagerRenameFix ays
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityRedundantChanceTagsFix ayt
	FLOAT_LIST_CODEC a
	isZeroList (Lcom/mojang/serialization/OptionalDynamic;I)Z a
net/minecraft/util/datafix/fixes/EntityRenameFix ayu
	name a
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
	getEntity (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityRidingToPassengersFix ayv
	cap (Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/EntityShulkerColorFix ayw
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityShulkerRotationFix ayx
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntitySkeletonSplitFix ayy
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityStringUuidFix ayz
net/minecraft/util/datafix/fixes/EntityTheRenameningFix aza
	MINECRAFT_BRED d
	RENAMED_BLOCKS b
	RENAMED_IDS a
	RENAMED_ITEMS c
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityTippedArrowFix azb
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityUUIDFix azc
	ABSTRACT_HORSES c
	ANIMALS e
	LIVING_ENTITIES g
	LOGGER b
	MOBS f
	PROJECTILES h
	TAMEABLE_ANIMALS d
	updateAnimal (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; m
	updateAnimalOwner (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; l
	updateAreaEffectCloud (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; g
	updateEntityUUID (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateEvokerFangs (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; e
	updateFox (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; j
	updateHurtBy (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; k
	updateItem (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; i
	updateLivingEntity (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateMob (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; n
	updatePiglin (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateProjectile (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; o
	updateShulkerBullet (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; h
	updateZombieVillager (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; f
net/minecraft/util/datafix/fixes/EntityVariantFix azd
	fieldName a
	idConversions b
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateAndRename (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityWolfColorFix aze
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityZombieSplitFix azf
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityZombieVillagerTypeFix azg
	PROFESSION_MAX a
	RANDOM b
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	getVillagerProfession (I)I a
net/minecraft/util/datafix/fixes/EntityZombifiedPiglinRenameFix azh
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/FeatureFlagRemoveFix azi
	flagsToRemove b
	name a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/FilteredBooksFix azj
	fixItemStackTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/FilteredSignsFix azk
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/FixProjectileStoredItem azl
	EMPTY_POTION a
	castUnchecked (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; c
	chainAllFilters ([Ljava/util/function/Function;)Ljava/util/function/Function; a
	createItemStack (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
	fixArrow (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; a
	fixChoice (Ljava/lang/String;Lnet/minecraft/util/datafix/fixes/FixProjectileStoredItem$SubFixer;)Ljava/util/function/Function; a
	fixChoiceCap (Ljava/lang/String;Lnet/minecraft/util/datafix/fixes/FixProjectileStoredItem$SubFixer;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Ljava/util/function/Function; a
	fixSpectralArrow (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; b
	getArrowType (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/FixProjectileStoredItem$SubFixer azl$a
net/minecraft/util/datafix/fixes/ForcePoiRebuild azm
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/FurnaceRecipeFix azn
	cap (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
	updateFurnaceContents (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/GoatHornIdFix azo
	INSTRUMENTS a
	fixItemStackTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/GossipUUIDFix azp
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/HeightmapRenamingFix azq
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/IglooMetadataRemovalFix azr
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	isIglooPiece (Lcom/mojang/serialization/Dynamic;)Z c
	removeIglooPieces (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/ItemBannerColorFix azs
net/minecraft/util/datafix/fixes/ItemCustomNameToComponentFix azt
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ItemIdFix azu
	ITEM_NAMES a
	getItem (I)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemLoreFix azv
	fixLoreList (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
net/minecraft/util/datafix/fixes/ItemPotionFix azw
	DEFAULT a
	POTIONS c
	SPLASH b
net/minecraft/util/datafix/fixes/ItemRemoveBlockEntityTagFix azx
	items a
net/minecraft/util/datafix/fixes/ItemRenameFix azy
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; a
	fixItem (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix azz
	NAMES_BY_COLOR a
net/minecraft/util/datafix/fixes/ItemSpawnEggFix baa
	ID_TO_ENTITY a
net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix bab
	MAP a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ItemStackMapIdFix bac
net/minecraft/util/datafix/fixes/ItemStackSpawnEggFix bad
	MAP b
	itemType a
net/minecraft/util/datafix/fixes/ItemStackTagFix bae
	idFilter b
	name a
	fixItemStackTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ItemStackTheFlatteningFix baf
	DAMAGE_IDS c
	IDS b
	MAP a
	updateItem (Ljava/lang/String;I)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemStackUUIDFix bag
	updateAttributeModifiers (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateSkullOwner (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/ItemWaterPotionFix bah
net/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix bai
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/JigsawPropertiesFix baj
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/JigsawRotationFix bak
	RENAMES a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/LeavesFix bal
	DECAY_DISTANCE j
	DIRECTIONS i
	EAST_MASK f
	LEAVES m
	LOGS n
	NORTH_EAST_MASK g
	NORTH_MASK h
	NORTH_WEST_MASK a
	SIZE l
	SIZE_BITS k
	SOUTH_EAST_MASK e
	SOUTH_MASK d
	SOUTH_WEST_MASK c
	WEST_MASK b
	getIndex (III)I a
	getSideMask (ZZZZ)I a
	getX (I)I a
	getY (I)I b
	getZ (I)I c
net/minecraft/util/datafix/fixes/LeavesFix$LeavesSection bal$a
	DECAYABLE i
	DISTANCE j
	PERSISTENT h
	leaveIds k
	logIds l
	stateToIdMap m
	getDistance (I)I d
	isLeaf (I)Z b
	isLog (I)Z a
	makeLeafTag (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/serialization/Dynamic; a
	setDistance (III)V a
	skippable ()Z a
net/minecraft/util/datafix/fixes/LeavesFix$Section bal$b
	BLOCK_STATES_TAG a
	NAME_TAG b
	PROPERTIES_TAG c
	blockStateType h
	index f
	palette e
	paletteFinder d
	storage g
	getBlock (I)I c
	getIndex ()I c
	getStateId (Ljava/lang/String;ZI)I a
	isSkippable ()Z b
	readStorage (Lcom/mojang/serialization/Dynamic;)V a
	skippable ()Z a
	write (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/LegacyDragonFightFix bam
net/minecraft/util/datafix/fixes/LevelDataGeneratorOptionsFix ban
	GENERATOR_OPTIONS b
	MAP a
	convert (Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
	getLayerInfoFromString (Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; a
	getLayersInfoFromString (Ljava/lang/String;)Ljava/util/List; b
net/minecraft/util/datafix/fixes/LevelFlatGeneratorInfoFix bao
	AMOUNT_SPLITTER f
	BLOCK_SPLITTER g
	DEFAULT a
	GENERATOR_OPTIONS b
	LAYER_SPLITTER d
	OLD_AMOUNT_SPLITTER e
	SPLITTER c
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixString (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/LevelLegacyWorldGenSettingsFix bap
	OLD_SETTINGS_KEYS b
	WORLD_GEN_SETTINGS a
net/minecraft/util/datafix/fixes/LevelUUIDFix baq
	LOGGER b
	updateCustomBossEvents (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateDragonFight (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateWanderingTrader (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/MapIdFix bar
net/minecraft/util/datafix/fixes/MemoryExpiryDataFix bas
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateBrain (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateMemories (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateMemoryEntry (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; a
	wrapMemoryValue (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
net/minecraft/util/datafix/fixes/MissingDimensionFix bat
	fields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; a
	flatType (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/Type; a
	optionalFields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; b
	optionalFields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; a
	recreateSettings (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/MobEffectIdFix bau
	ID_MAP a
	MOB_EFFECT_INSTANCE_CARRIER_ITEMS b
	blockEntityFixer ()Lcom/mojang/datafixers/TypeRewriteRule; a
	entityFixer ()Lcom/mojang/datafixers/TypeRewriteRule; b
	fixAreaEffectCloudTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; e
	fixArrowTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	fixMooshroomTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	fixSuspiciousStewTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; g
	getAndConvertMobEffectId (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional; a
	itemStackFixer ()Lcom/mojang/datafixers/TypeRewriteRule; d
	playerFixer ()Lcom/mojang/datafixers/TypeRewriteRule; c
	renameField (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
	replaceField (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;)Lcom/mojang/serialization/Dynamic; a
	setFieldIfPresent (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/util/Optional;)Lcom/mojang/serialization/Dynamic; a
	updateLivingEntityTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; f
	updateMobEffectIdField (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
	updateMobEffectIdField (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; b
	updateMobEffectInstance (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateMobEffectInstanceList (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; c
	updateNamedChoice (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
	updateSuspiciousStewEntry (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateSuspiciousStewEntry (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/MobSpawnerEntityIdentifiersFix bav
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/NamedEntityFix baw
	entityName b
	name a
	type c
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/NamedEntityWriteReadFix bax
	entityName b
	name a
	type c
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/NamespacedTypeRenameFix bay
	name a
	renamer c
	type b
net/minecraft/util/datafix/fixes/NewVillageFix baz
	cap (Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/ObjectiveDisplayNameFix bba
net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix bbb
	getRenderType (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/OminousBannerBlockEntityRenameFix bbc
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/OminousBannerRenameFix bbd
	fixItemStackTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/OptionsAccessibilityOnboardFix bbe
net/minecraft/util/datafix/fixes/OptionsAddTextBackgroundFix bbf
	calculateBackground (Ljava/lang/String;)D a
net/minecraft/util/datafix/fixes/OptionsAmbientOcclusionFix bbg
	updateValue (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/OptionsForceVBOFix bbh
net/minecraft/util/datafix/fixes/OptionsKeyLwjgl3Fix bbi
	KEY_UNKNOWN a
	MAP b
net/minecraft/util/datafix/fixes/OptionsKeyTranslationFix bbj
net/minecraft/util/datafix/fixes/OptionsLowerCaseLanguageFix bbk
net/minecraft/util/datafix/fixes/OptionsProgrammerArtFix bbl
	fixList (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/OptionsRenameFieldFix bbm
	fieldFrom b
	fieldTo c
	fixName a
net/minecraft/util/datafix/fixes/OverreachingTickFix bbn
	extractOverreachingTicks (Lcom/mojang/serialization/Dynamic;IILjava/util/Optional;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/PlayerUUIDFix bbo
net/minecraft/util/datafix/fixes/PoiTypeRemoveFix bbp
	typesToKeep a
	processRecords (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
	shouldKeepRecord (Lcom/mojang/serialization/Dynamic;)Z a
net/minecraft/util/datafix/fixes/PoiTypeRenameFix bbq
	renamer a
	processRecords (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
net/minecraft/util/datafix/fixes/PrimedTntBlockStateFixer bbr
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	insertBlockState (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	renameFuse (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/RandomSequenceSettingsFix bbs
net/minecraft/util/datafix/fixes/RecipesFix bbt
	RECIPES a
net/minecraft/util/datafix/fixes/RecipesRenameningFix bbu
	RECIPES a
net/minecraft/util/datafix/fixes/RedstoneWireConnectionsFix bbv
	isConnected (Ljava/lang/String;)Z a
	updateRedstoneConnections (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/References bbw
	ADVANCEMENTS p
	BIOME G
	BLOCK_ENTITY s
	BLOCK_NAME y
	BLOCK_STATE u
	CHUNK c
	ENTITY x
	ENTITY_CHUNK r
	ENTITY_NAME v
	ENTITY_TREE w
	GAME_EVENT_NAME A
	HOTBAR d
	ITEM_NAME z
	ITEM_STACK t
	LEVEL a
	MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST H
	OBJECTIVE D
	OPTIONS e
	PLAYER b
	POI_CHUNK q
	RECIPE F
	SAVED_DATA_COMMAND_STORAGE h
	SAVED_DATA_FORCED_CHUNKS i
	SAVED_DATA_MAP_DATA j
	SAVED_DATA_MAP_INDEX k
	SAVED_DATA_RAIDS l
	SAVED_DATA_RANDOM_SEQUENCES m
	SAVED_DATA_SCOREBOARD o
	SAVED_DATA_STRUCTURE_FEATURE_INDICES n
	STATS g
	STRUCTURE f
	STRUCTURE_FEATURE C
	TEAM E
	UNTAGGED_SPAWNER B
	WORLD_GEN_SETTINGS I
net/minecraft/util/datafix/fixes/RemapChunkStatusFix bbx
	mapper b
	name a
	fixStatus (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/RemoveGolemGossipFix bby
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixValue (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/RenamedCoralFansFix bbz
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/RenamedCoralFix bca
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/ReorganizePoi bcb
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/SavedDataFeaturePoolElementFix bcc
	FEATURES c
	INDEX_PATTERN a
	PIECE_TYPE b
	fixFeature (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	get (Lcom/mojang/serialization/Dynamic;[Ljava/lang/String;)Lcom/mojang/serialization/OptionalDynamic; a
	getReplacement (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; a
	updateChildren (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateChildren (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
net/minecraft/util/datafix/fixes/SavedDataUUIDFix bcd
	LOGGER b
net/minecraft/util/datafix/fixes/ScoreboardDisplaySlotFix bce
	SLOT_RENAMES a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/SimpleEntityRenameFix bcf
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/SimplestEntityRenameFix bcg
	name a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/SpawnerDataFix bch
	wrapEntityToSpawnData (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	wrapSpawnPotentialsToWeightedEntries (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; b
net/minecraft/util/datafix/fixes/StatsCounterFix bci
	BLOCK_KEY d
	CUSTOM_MAP c
	ENTITIES h
	ENTITY_KEYS g
	ITEM_KEYS f
	NEW_BLOCK_KEY e
	NEW_CUSTOM_KEY i
	SKIP b
	SPECIAL_OBJECTIVE_CRITERIA a
	makeObjectiveFixer ()Lcom/mojang/datafixers/TypeRewriteRule; b
	makeStatFixer ()Lcom/mojang/datafixers/TypeRewriteRule; a
	unpackLegacyKey (Ljava/lang/String;)Lnet/minecraft/util/datafix/fixes/StatsCounterFix$StatType; a
	upgradeBlock (Ljava/lang/String;)Ljava/lang/String; c
	upgradeItem (Ljava/lang/String;)Ljava/lang/String; b
net/minecraft/util/datafix/fixes/StatsCounterFix$StatType bci$a
	type a
	typeKey b
	type ()Ljava/lang/String; a
	typeKey ()Ljava/lang/String; b
net/minecraft/util/datafix/fixes/StatsRenameFix bcj
	name a
	renames b
	createCriteriaRule ()Lcom/mojang/datafixers/TypeRewriteRule; a
	createStatRule ()Lcom/mojang/datafixers/TypeRewriteRule; b
net/minecraft/util/datafix/fixes/StriderGravityFix bck
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/StructureReferenceCountFix bcl
	setCountToAtLeastOne (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/StructureSettingsFlattenFix bcm
	fixDimension (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; a
	fixStructures (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix bcn
	CONVERSION_MAP a
	findUpdatedStructureType (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	guessConfiguration (Lcom/mojang/serialization/Dynamic;Lnet/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$Conversion;)Ljava/util/Optional; a
	updateReference (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; b
	updateReferences (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateStart (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
	updateStarts (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$Conversion bcn$a
	biomeMapping a
	fallback b
	biomeMapped (Ljava/util/Map;Ljava/lang/String;)Lnet/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$Conversion; a
	biomeMapping ()Ljava/util/Map; a
	fallback ()Ljava/lang/String; b
	trivial (Ljava/lang/String;)Lnet/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$Conversion; a
	unpack (Ljava/util/Map;)Ljava/util/Map; a
net/minecraft/util/datafix/fixes/TeamDisplayNameFix bco
net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix bcp
	LOGGER a
	SIZE b
	SIZE_BITS c
net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix$TrappedChestSection bcp$a
	chestIds h
	isTrappedChest (I)Z a
	skippable ()Z a
net/minecraft/util/datafix/fixes/VariantRenameFix bcq
	renames a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/VillagerDataFix bcr
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	upgradeData (II)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/VillagerFollowRangeFix bcs
	NEW_BASE_VALUE b
	ORIGINAL_VALUE a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixValue (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/VillagerRebuildLevelAndXpFix bct
	LEVEL_XP_THRESHOLDS b
	TRADES_PER_LEVEL a
	addLevel (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; a
	addXpFromLevel (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; b
	getMinXpPerLevel (I)I a
net/minecraft/util/datafix/fixes/VillagerTradeFix bcu
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateItemStack (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/WallPropertyFix bcv
	WALL_BLOCKS a
	fixWallProperty (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
	mapProperty (Ljava/lang/String;)Ljava/lang/String; a
	upgradeBlockStateTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/WeaponSmithChestLootTableFix bcw
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/WorldGenSettingsDisallowOldCustomWorldsFix bcx
net/minecraft/util/datafix/fixes/WorldGenSettingsFix bcy
	DEFAULTS j
	DESERT_PYRAMID b
	END_CITY g
	IGLOO c
	JUNGLE_TEMPLE d
	OCEAN_MONUMENT i
	PILLAGER_OUTPOST f
	SWAMP_HUT e
	VILLAGE a
	WOODLAND_MANSION h
	defaultOverworld (Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic; a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixFlatStructures (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/OptionalDynamic;)Ljava/util/Map; a
	getInt (Ljava/lang/String;I)I a
	getInt (Ljava/lang/String;II)I a
	noise (JLcom/mojang/serialization/DynamicLike;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	setSpacing (Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;I)V a
	vanillaBiomeSource (Lcom/mojang/serialization/Dynamic;JZZ)Lcom/mojang/serialization/Dynamic; a
	vanillaLevels (Lcom/mojang/serialization/Dynamic;JLcom/mojang/serialization/Dynamic;Z)Ljava/lang/Object; a
net/minecraft/util/datafix/fixes/WorldGenSettingsFix$StructureFeatureConfiguration bcy$a
	CODEC a
	salt d
	separation c
	spacing b
	serialize (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/WorldGenSettingsHeightAndBiomeFix bcz
	NAME b
	WAS_PREVIOUSLY_INCREASED_KEY a
	updateLayers (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/WriteAndReadFix bda
	name a
	type b
net/minecraft/util/datafix/fixes/ZombieVillagerRebuildXpFix bdb
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/schemas/NamespacedSchema bde
	NAMESPACED_STRING b
	NAMESPACED_STRING_CODEC a
	ensureNamespaced (Ljava/lang/String;)Ljava/lang/String; a
	namespacedString ()Lcom/mojang/datafixers/types/Type; a
net/minecraft/util/datafix/schemas/V100 bdf
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V102 bdg
net/minecraft/util/datafix/schemas/V1022 bdh
net/minecraft/util/datafix/schemas/V106 bdi
net/minecraft/util/datafix/schemas/V107 bdj
net/minecraft/util/datafix/schemas/V1125 bdk
net/minecraft/util/datafix/schemas/V135 bdl
net/minecraft/util/datafix/schemas/V143 bdm
net/minecraft/util/datafix/schemas/V1451 bdn
net/minecraft/util/datafix/schemas/V1451_1 bdo
net/minecraft/util/datafix/schemas/V1451_2 bdp
net/minecraft/util/datafix/schemas/V1451_3 bdq
net/minecraft/util/datafix/schemas/V1451_4 bdr
net/minecraft/util/datafix/schemas/V1451_5 bds
net/minecraft/util/datafix/schemas/V1451_6 bdt
	REPACK_OBJECTIVE_ID d
	SPECIAL_OBJECTIVE_MARKER b
	UNPACK_OBJECTIVE_ID c
	createCriterionTypes (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; a
	packNamespacedWithDot (Ljava/lang/String;)Ljava/lang/String; b
net/minecraft/util/datafix/schemas/V1460 bdu
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1466 bdv
net/minecraft/util/datafix/schemas/V1470 bdw
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1481 bdx
net/minecraft/util/datafix/schemas/V1483 bdy
net/minecraft/util/datafix/schemas/V1486 bdz
net/minecraft/util/datafix/schemas/V1510 bea
net/minecraft/util/datafix/schemas/V1800 beb
net/minecraft/util/datafix/schemas/V1801 bec
net/minecraft/util/datafix/schemas/V1904 bed
net/minecraft/util/datafix/schemas/V1906 bee
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1909 bef
net/minecraft/util/datafix/schemas/V1920 beg
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1928 beh
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1929 bei
net/minecraft/util/datafix/schemas/V1931 bej
net/minecraft/util/datafix/schemas/V2100 bek
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2501 bel
	registerFurnace (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2502 bem
net/minecraft/util/datafix/schemas/V2505 ben
net/minecraft/util/datafix/schemas/V2509 beo
net/minecraft/util/datafix/schemas/V2519 bep
net/minecraft/util/datafix/schemas/V2522 beq
net/minecraft/util/datafix/schemas/V2551 ber
net/minecraft/util/datafix/schemas/V2568 bes
net/minecraft/util/datafix/schemas/V2571 bet
net/minecraft/util/datafix/schemas/V2684 beu
net/minecraft/util/datafix/schemas/V2686 bev
net/minecraft/util/datafix/schemas/V2688 bew
net/minecraft/util/datafix/schemas/V2704 bex
net/minecraft/util/datafix/schemas/V2707 bey
net/minecraft/util/datafix/schemas/V2831 bez
net/minecraft/util/datafix/schemas/V2832 bfa
net/minecraft/util/datafix/schemas/V2842 bfb
net/minecraft/util/datafix/schemas/V3076 bfc
net/minecraft/util/datafix/schemas/V3078 bfd
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V3081 bfe
net/minecraft/util/datafix/schemas/V3082 bff
net/minecraft/util/datafix/schemas/V3083 bfg
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V3202 bfh
net/minecraft/util/datafix/schemas/V3203 bfi
net/minecraft/util/datafix/schemas/V3204 bfj
net/minecraft/util/datafix/schemas/V3325 bfk
net/minecraft/util/datafix/schemas/V3326 bfl
net/minecraft/util/datafix/schemas/V3327 bfm
net/minecraft/util/datafix/schemas/V3328 bfn
net/minecraft/util/datafix/schemas/V3438 bfo
net/minecraft/util/datafix/schemas/V3448 bfp
net/minecraft/util/datafix/schemas/V3682 bfq
net/minecraft/util/datafix/schemas/V3683 bfr
net/minecraft/util/datafix/schemas/V3685 bfs
	abstractArrow (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
net/minecraft/util/datafix/schemas/V3689 bft
net/minecraft/util/datafix/schemas/V501 bfu
net/minecraft/util/datafix/schemas/V700 bfv
net/minecraft/util/datafix/schemas/V701 bfw
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V702 bfx
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V703 bfy
net/minecraft/util/datafix/schemas/V704 bfz
	ADD_NAMES b
	ITEM_TO_BLOCKENTITY a
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V705 bga
	ADD_NAMES b
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
	registerThrowableProjectile (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
net/minecraft/util/datafix/schemas/V808 bgb
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V99 bgc
	ADD_NAMES a
	ITEM_TO_BLOCKENTITY c
	LOGGER b
	addNames (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object; a
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V d
	registerMinecart (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V c
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
	registerThrowableProjectile (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
net/minecraft/util/eventlog/EventLogDirectory bge
	COMPRESSED_EXTENSION c
	COMPRESS_BUFFER_SIZE b
	LOGGER a
	extension e
	root d
	createNewFile (Ljava/time/LocalDate;)Lnet/minecraft/util/eventlog/EventLogDirectory$RawFile; a
	listFiles ()Lnet/minecraft/util/eventlog/EventLogDirectory$FileList; a
	open (Ljava/nio/file/Path;Ljava/lang/String;)Lnet/minecraft/util/eventlog/EventLogDirectory; a
	parseFile (Ljava/nio/file/Path;)Lnet/minecraft/util/eventlog/EventLogDirectory$File; a
	tryCompress (Ljava/nio/file/Path;Ljava/nio/file/Path;)V a
	writeCompressed (Ljava/nio/channels/ReadableByteChannel;Ljava/nio/file/Path;)V a
net/minecraft/util/eventlog/EventLogDirectory$CompressedFile bge$a
	id b
	path a
	compress ()Lnet/minecraft/util/eventlog/EventLogDirectory$CompressedFile; b
	id ()Lnet/minecraft/util/eventlog/EventLogDirectory$FileId; d
	openReader ()Ljava/io/Reader; a
	path ()Ljava/nio/file/Path; c
net/minecraft/util/eventlog/EventLogDirectory$File bge$b
	compress ()Lnet/minecraft/util/eventlog/EventLogDirectory$CompressedFile; b
	id ()Lnet/minecraft/util/eventlog/EventLogDirectory$FileId; d
	openReader ()Ljava/io/Reader; a
	path ()Ljava/nio/file/Path; c
net/minecraft/util/eventlog/EventLogDirectory$FileId bge$c
	DATE_FORMATTER c
	date a
	index b
	date ()Ljava/time/LocalDate; a
	index ()I b
	parse (Ljava/lang/String;)Lnet/minecraft/util/eventlog/EventLogDirectory$FileId; a
	toFileName (Ljava/lang/String;)Ljava/lang/String; b
net/minecraft/util/eventlog/EventLogDirectory$FileList bge$d
	files a
	compressAll ()Lnet/minecraft/util/eventlog/EventLogDirectory$FileList; a
	ids ()Ljava/util/Set; c
	prune (Ljava/time/LocalDate;I)Lnet/minecraft/util/eventlog/EventLogDirectory$FileList; a
	stream ()Ljava/util/stream/Stream; b
net/minecraft/util/eventlog/EventLogDirectory$RawFile bge$e
	id b
	path a
	compress ()Lnet/minecraft/util/eventlog/EventLogDirectory$CompressedFile; b
	id ()Lnet/minecraft/util/eventlog/EventLogDirectory$FileId; d
	openChannel ()Ljava/nio/channels/FileChannel; e
	openReader ()Ljava/io/Reader; a
	path ()Ljava/nio/file/Path; c
net/minecraft/util/eventlog/JsonEventLog bgf
	GSON a
	channel c
	codec b
	referenceCount d
	open (Lcom/mojang/serialization/Codec;Ljava/nio/file/Path;)Lnet/minecraft/util/eventlog/JsonEventLog; a
	openReader ()Lnet/minecraft/util/eventlog/JsonEventLogReader; a
	releaseReference ()V b
	write (Ljava/lang/Object;)V a
net/minecraft/util/eventlog/JsonEventLogReader bgg
	create (Lcom/mojang/serialization/Codec;Ljava/io/Reader;)Lnet/minecraft/util/eventlog/JsonEventLogReader; a
	next ()Ljava/lang/Object; a
net/minecraft/util/monitoring/jmx/MinecraftServerStatistics bgi
	LOGGER a
	attributeDescriptionByName d
	mBeanInfo c
	server b
	getAverageTickTime ()F a
	getTickTimes ()[J b
	registerJmxMonitoring (Lnet/minecraft/server/MinecraftServer;)V a
net/minecraft/util/monitoring/jmx/MinecraftServerStatistics$AttributeDescription bgi$a
	description c
	getter b
	name a
	type d
	asMBeanAttributeInfo ()Ljavax/management/MBeanAttributeInfo; a
net/minecraft/util/profiling/ActiveProfiler bgl
	LOGGER c
	WARNING_TIME_NANOS a
	chartedPaths o
	currentEntry m
	entries f
	getRealTime h
	getTickTime g
	path k
	paths d
	startTimeNano i
	startTimeTicks j
	startTimes e
	started l
	warn n
	endTick ()V b
	getChartedPaths ()Ljava/util/Set; e
	getCurrentEntry ()Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; f
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; c
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
	incrementCounter (Ljava/lang/String;I)V a
	incrementCounter (Ljava/util/function/Supplier;I)V a
	markForCharting (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V a
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
net/minecraft/util/profiling/ActiveProfiler$PathEntry bgl$a
	accumulatedDuration c
	count d
	counters e
	maxDuration a
	minDuration b
	getCount ()J c
	getCounters ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; d
	getDuration ()J a
	getMaxDuration ()J b
net/minecraft/util/profiling/ContinuousProfiler bgm
	profiler c
	realTime a
	tickCount b
	disable ()V b
	enable ()V c
	getFiller ()Lnet/minecraft/util/profiling/ProfilerFiller; d
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; e
	isEnabled ()Z a
net/minecraft/util/profiling/EmptyProfileResults bgn
	EMPTY a
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getProfilerResults ()Ljava/lang/String; e
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	saveResults (Ljava/nio/file/Path;)Z a
net/minecraft/util/profiling/FilledProfileResults bgo
	COUNTER_ENTRY_COMPARATOR e
	EMPTY b
	LOGGER a
	SPLITTER c
	endTimeNano i
	endTimeTicks j
	entries f
	startTimeNano g
	startTimeTicks h
	tickDuration k
	appendCounterResults (ILjava/lang/String;Lnet/minecraft/util/profiling/FilledProfileResults$CounterCollector;ILjava/lang/StringBuilder;)V a
	appendCounters (Ljava/util/Map;Ljava/lang/StringBuilder;I)V a
	appendProfilerResults (ILjava/lang/String;Ljava/lang/StringBuilder;)V a
	getComment ()Ljava/lang/String; i
	getCounterValues ()Ljava/util/Map; h
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ProfilerPathEntry; c
	getProfilerResults ()Ljava/lang/String; e
	getProfilerResults (JI)Ljava/lang/String; a
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTickDuration ()I f
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	indentLine (Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder; a
	isDirectChild (Ljava/lang/String;Ljava/lang/String;)Z a
	saveResults (Ljava/nio/file/Path;)Z a
net/minecraft/util/profiling/FilledProfileResults$CounterCollector bgo$a
	children c
	selfValue a
	totalValue b
	addValue (Ljava/util/Iterator;J)V a
net/minecraft/util/profiling/InactiveProfiler bgp
	INSTANCE a
	endTick ()V b
	getChartedPaths ()Ljava/util/Set; e
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; c
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
	incrementCounter (Ljava/lang/String;I)V a
	incrementCounter (Ljava/util/function/Supplier;I)V a
	markForCharting (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V a
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
net/minecraft/util/profiling/ProfileCollector bgq
	getChartedPaths ()Ljava/util/Set; e
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; c
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
net/minecraft/util/profiling/ProfileResults bgr
	PATH_SEPARATOR d
	demanglePath (Ljava/lang/String;)Ljava/lang/String; b
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getNanoDuration ()J g
	getProfilerResults ()Ljava/lang/String; e
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTickDuration ()I f
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	saveResults (Ljava/nio/file/Path;)Z a
net/minecraft/util/profiling/ProfilerFiller bgs
	ROOT b
	endTick ()V b
	incrementCounter (Ljava/lang/String;)V d
	incrementCounter (Ljava/lang/String;I)V a
	incrementCounter (Ljava/util/function/Supplier;)V c
	incrementCounter (Ljava/util/function/Supplier;I)V a
	markForCharting (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V a
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
	tee (Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/util/profiling/ProfilerFiller; a
net/minecraft/util/profiling/ProfilerPathEntry bgt
	getCount ()J c
	getCounters ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; d
	getDuration ()J a
	getMaxDuration ()J b
net/minecraft/util/profiling/ResultField bgu
	count c
	globalPercentage b
	name d
	percentage a
	compareTo (Lnet/minecraft/util/profiling/ResultField;)I a
	getColor ()I a
net/minecraft/util/profiling/SingleTickProfiler bgv
	LOGGER a
	location e
	profiler f
	realTime b
	saveThreshold c
	tick d
	createTickProfiler (Ljava/lang/String;)Lnet/minecraft/util/profiling/SingleTickProfiler; a
	decorateFiller (Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/SingleTickProfiler;)Lnet/minecraft/util/profiling/ProfilerFiller; a
	endTick ()V b
	startTick ()Lnet/minecraft/util/profiling/ProfilerFiller; a
net/minecraft/util/profiling/jfr/Environment bgw
	$VALUES d
	CLIENT a
	SERVER b
	description c
	$values ()[Lnet/minecraft/util/profiling/jfr/Environment; b
	from (Lnet/minecraft/server/MinecraftServer;)Lnet/minecraft/util/profiling/jfr/Environment; a
	getDescription ()Ljava/lang/String; a
net/minecraft/util/profiling/jfr/JfrProfiler bgx
	CUSTOM_EVENTS g
	DATE_TIME_FORMATTER i
	FLIGHT_RECORDER_CONFIG h
	INSTANCE j
	LOGGER f
	NETWORK_CATEGORY d
	ROOT_CATEGORY a
	TICK_CATEGORY c
	WORLD_GEN_CATEGORY b
	currentAverageTickTime l
	networkTrafficByAddress m
	recording k
	getInstance ()Lnet/minecraft/util/profiling/jfr/JfrProfiler; a
	isAvailable ()Z d
	isRunning ()Z c
	networkStatFor (Ljava/net/SocketAddress;)Lnet/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$SumAggregation; a
	onChunkGenerate (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; a
	onPacketReceived (Lnet/minecraft/network/ConnectionProtocol;ILjava/net/SocketAddress;I)V a
	onPacketSent (Lnet/minecraft/network/ConnectionProtocol;ILjava/net/SocketAddress;I)V b
	onServerTick (F)V a
	onWorldLoadedStarted ()Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; e
	setupSummaryListener ()V f
	start (Ljava/io/Reader;Lnet/minecraft/util/profiling/jfr/Environment;)Z a
	start (Lnet/minecraft/util/profiling/jfr/Environment;)Z a
	stop ()Ljava/nio/file/Path; b
net/minecraft/util/profiling/jfr/JvmProfiler bgy
	INSTANCE e
	isAvailable ()Z d
	isRunning ()Z c
	onChunkGenerate (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; a
	onPacketReceived (Lnet/minecraft/network/ConnectionProtocol;ILjava/net/SocketAddress;I)V a
	onPacketSent (Lnet/minecraft/network/ConnectionProtocol;ILjava/net/SocketAddress;I)V b
	onServerTick (F)V a
	onWorldLoadedStarted ()Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; e
	start (Lnet/minecraft/util/profiling/jfr/Environment;)Z a
	stop ()Ljava/nio/file/Path; b
net/minecraft/util/profiling/jfr/JvmProfiler$NoOpProfiler bgy$a
	LOGGER b
	noOpCommit a
	isAvailable ()Z d
	isRunning ()Z c
	onChunkGenerate (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; a
	onPacketReceived (Lnet/minecraft/network/ConnectionProtocol;ILjava/net/SocketAddress;I)V a
	onPacketSent (Lnet/minecraft/network/ConnectionProtocol;ILjava/net/SocketAddress;I)V b
	onServerTick (F)V a
	onWorldLoadedStarted ()Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; e
	start (Lnet/minecraft/util/profiling/jfr/Environment;)Z a
	stop ()Ljava/nio/file/Path; b
net/minecraft/util/profiling/jfr/Percentiles bgz
	DEFAULT_INDEXES a
	evaluate ([D)Ljava/util/Map; a
	evaluate ([J)Ljava/util/Map; a
	sorted (Ljava/util/Map;)Ljava/util/Map; a
net/minecraft/util/profiling/jfr/SummaryReporter bha
	LOGGER a
	onDeregistration b
	infoWithFallback (Ljava/util/function/Supplier;)V a
	recordingStopped (Ljava/nio/file/Path;)V a
	warnWithFallback (Ljava/util/function/Supplier;Ljava/lang/Throwable;)V a
net/minecraft/util/profiling/jfr/callback/ProfiledDuration bhb
net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$Fields net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$a
	CHUNK_POS_X c
	CHUNK_POS_Z d
	LEVEL f
	STATUS e
	WORLD_POS_X a
	WORLD_POS_Z b
net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$Fields net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$a
	RECEIVED_BYTES c
	RECEIVED_PACKETS e
	REMOTE_ADDRESS a
	SENT_BYTES b
	SENT_PACKETS d
net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$SumAggregation net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b
	event e
	receivedBytes c
	receivedPackets d
	sentBytes a
	sentPackets b
	commitEvent ()V a
	trackReceivedPacket (I)V b
	trackSentPacket (I)V a
net/minecraft/util/profiling/jfr/event/PacketEvent bhd
net/minecraft/util/profiling/jfr/event/PacketEvent$Fields bhd$a
	BYTES d
	PACKET_ID c
	PROTOCOL_ID b
	REMOTE_ADDRESS a
net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$Fields net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$a
	AVERAGE_TICK_DURATION a
net/minecraft/util/profiling/jfr/parse/JfrStatsParser bhg
	chunkGenStats c
	cpuLoadStat d
	fileReads h
	fileWrites g
	garbageCollections i
	gcHeapStats k
	gcTotalDuration j
	receivedPackets e
	recordingEnded b
	recordingStarted a
	sentPackets f
	threadAllocationStats l
	tickTimes m
	worldCreationDuration n
	appendFileIO (Ljdk/jfr/consumer/RecordedEvent;Ljava/util/List;Ljava/lang/String;)V a
	capture (Ljava/util/stream/Stream;)V a
	collectPacketStats (Ljava/time/Duration;Ljava/util/Map;)Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary; a
	incrementPacket (Ljdk/jfr/consumer/RecordedEvent;ILjava/util/Map;)V a
	parse (Ljava/nio/file/Path;)Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult; a
	results ()Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult; a
net/minecraft/util/profiling/jfr/parse/JfrStatsParser$MutableCountAndSize bhg$a
	count a
	totalSize b
	increment (I)V a
	toCountAndSize ()Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize; a
net/minecraft/util/profiling/jfr/parse/JfrStatsResult bhh
	chunkGenStats m
	cpuLoadStats f
	fileReads l
	fileWrites k
	heapSummary g
	receivedPacketsSummary i
	recordingDuration c
	recordingEnded b
	recordingStarted a
	sentPacketsSummary j
	threadAllocationSummary h
	tickTimes e
	worldCreationDuration d
	asJson ()Ljava/lang/String; b
	chunkGenStats ()Ljava/util/List; o
	chunkGenSummary ()Ljava/util/List; a
	cpuLoadStats ()Ljava/util/List; h
	fileReads ()Lnet/minecraft/util/profiling/jfr/stats/FileIOStat$Summary; n
	fileWrites ()Lnet/minecraft/util/profiling/jfr/stats/FileIOStat$Summary; m
	heapSummary ()Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary; i
	receivedPacketsSummary ()Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary; k
	recordingDuration ()Ljava/time/Duration; e
	recordingEnded ()Ljava/time/Instant; d
	recordingStarted ()Ljava/time/Instant; c
	sentPacketsSummary ()Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary; l
	threadAllocationSummary ()Lnet/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary; j
	tickTimes ()Ljava/util/List; g
	worldCreationDuration ()Ljava/time/Duration; f
net/minecraft/util/profiling/jfr/serialize/JfrResultJsonSerializer bhj
	BYTES_PER_SECOND b
	COUNT c
	COUNT_PER_SECOND f
	DURATION_NANOS_TOTAL d
	TOTAL_BYTES e
	gson a
	chunkGen (Ljava/util/List;)Lcom/google/gson/JsonElement; a
	cpu (Ljava/util/List;)Lcom/google/gson/JsonElement; c
	fileIO (Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult;)Lcom/google/gson/JsonElement; b
	fileIoSummary (Lnet/minecraft/util/profiling/jfr/stats/FileIOStat$Summary;)Lcom/google/gson/JsonElement; a
	format (Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult;)Ljava/lang/String; a
	heap (Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary;)Lcom/google/gson/JsonElement; a
	network (Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult;)Lcom/google/gson/JsonElement; c
	packets (Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary;)Lcom/google/gson/JsonElement; a
	serverTicks (Ljava/util/List;)Lcom/google/gson/JsonElement; b
	threadAllocations (Lnet/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary;)Lcom/google/gson/JsonElement; a
net/minecraft/util/profiling/jfr/stats/ChunkGenStat bhl
	chunkPos b
	duration a
	level e
	status d
	worldPos c
	chunkPos ()Lnet/minecraft/world/level/ChunkPos; b
	duration ()Ljava/time/Duration; a
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/ChunkGenStat; a
	level ()Ljava/lang/String; e
	status ()Lnet/minecraft/world/level/chunk/ChunkStatus; d
	worldPos ()Lnet/minecraft/server/level/ColumnPos; c
net/minecraft/util/profiling/jfr/stats/CpuLoadStat bhm
	jvm a
	system c
	userJvm b
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/CpuLoadStat; a
	jvm ()D a
	system ()D c
	userJvm ()D b
net/minecraft/util/profiling/jfr/stats/FileIOStat bhn
	bytes c
	duration a
	path b
	bytes ()J c
	duration ()Ljava/time/Duration; a
	path ()Ljava/lang/String; b
	summary (Ljava/time/Duration;Ljava/util/List;)Lnet/minecraft/util/profiling/jfr/stats/FileIOStat$Summary; a
net/minecraft/util/profiling/jfr/stats/FileIOStat$Summary bhn$a
	bytesPerSecond b
	counts c
	countsPerSecond d
	timeSpentInIO e
	topTenContributorsByTotalBytes f
	totalBytes a
	bytesPerSecond ()D b
	counts ()J c
	countsPerSecond ()D d
	timeSpentInIO ()Ljava/time/Duration; e
	topTenContributorsByTotalBytes ()Ljava/util/List; f
	totalBytes ()J a
net/minecraft/util/profiling/jfr/stats/GcHeapStat bho
	heapUsed b
	timestamp a
	timing c
	calculateAllocationRatePerSecond (Ljava/util/List;)D a
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat; a
	heapUsed ()J b
	summary (Ljava/time/Duration;Ljava/util/List;Ljava/time/Duration;I)Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary; a
	timestamp ()Ljava/time/Instant; a
	timing ()Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat$Timing; c
net/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary bho$a
	allocationRateBytesPerSecond d
	duration a
	gcTotalDuration b
	totalGCs c
	allocationRateBytesPerSecond ()D e
	duration ()Ljava/time/Duration; b
	gcOverHead ()F a
	gcTotalDuration ()Ljava/time/Duration; c
	totalGCs ()I d
net/minecraft/util/profiling/jfr/stats/GcHeapStat$Timing bho$b
	$VALUES c
	AFTER_GC b
	BEFORE_GC a
	$values ()[Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat$Timing; a
net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary bhp
	largestSizeContributors b
	recordingDuration c
	totalPacketCountAndSize a
	getCountsPerSecond ()D a
	getSizePerSecond ()D b
	getTotalCount ()J c
	getTotalSize ()J d
	largestSizeContributors ()Ljava/util/List; e
net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize bhp$a
	SIZE_THEN_COUNT c
	totalCount a
	totalSize b
	add (Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize;)Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize; a
	totalCount ()J a
	totalSize ()J b
net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketIdentification bhp$b
	PACKET_NAME_BY_ID d
	direction a
	packetId c
	protocolId b
	direction ()Lnet/minecraft/network/protocol/PacketFlow; b
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketIdentification; a
	packetId ()I d
	packetName ()Ljava/lang/String; a
	protocolId ()Ljava/lang/String; c
net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat bhq
	UNKNOWN_THREAD d
	threadName b
	timestamp a
	totalBytes c
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/ThreadAllocationStat; a
	summary (Ljava/util/List;)Lnet/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary; a
	threadName ()Ljava/lang/String; b
	timestamp ()Ljava/time/Instant; a
	totalBytes ()J c
net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary bhq$a
	allocationsPerSecondByThread a
	allocationsPerSecondByThread ()Ljava/util/Map; a
net/minecraft/util/profiling/jfr/stats/TickTimeStat bhr
	currentAverage b
	timestamp a
	currentAverage ()Ljava/time/Duration; b
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/TickTimeStat; a
	timestamp ()Ljava/time/Instant; a
net/minecraft/util/profiling/jfr/stats/TimedStat bhs
	duration ()Ljava/time/Duration; a
net/minecraft/util/profiling/jfr/stats/TimedStatSummary bht
	count d
	fastest a
	percentilesNanos e
	secondSlowest c
	slowest b
	totalDuration f
	count ()I d
	fastest ()Lnet/minecraft/util/profiling/jfr/stats/TimedStat; a
	percentilesNanos ()Ljava/util/Map; e
	secondSlowest ()Lnet/minecraft/util/profiling/jfr/stats/TimedStat; c
	slowest ()Lnet/minecraft/util/profiling/jfr/stats/TimedStat; b
	summary (Ljava/util/List;)Lnet/minecraft/util/profiling/jfr/stats/TimedStatSummary; a
	totalDuration ()Ljava/time/Duration; f
net/minecraft/util/profiling/metrics/MetricCategory bhv
	$VALUES k
	CHUNK_RENDERING f
	CHUNK_RENDERING_DISPATCHING g
	CPU h
	EVENT_LOOPS b
	GPU i
	JVM e
	MAIL_BOXES c
	PATH_FINDING a
	TICK_LOOP d
	description j
	$values ()[Lnet/minecraft/util/profiling/metrics/MetricCategory; b
	getDescription ()Ljava/lang/String; a
net/minecraft/util/profiling/metrics/MetricSampler bhw
	beforeTick h
	category c
	currentValue i
	isRunning g
	name b
	sampler d
	thresholdTest a
	ticks e
	values f
	builder (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)Lnet/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder; a
	create (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lnet/minecraft/util/profiling/metrics/MetricSampler; a
	create (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/function/DoubleSupplier;)Lnet/minecraft/util/profiling/metrics/MetricSampler; a
	getCategory ()Lnet/minecraft/util/profiling/metrics/MetricCategory; e
	getName ()Ljava/lang/String; d
	getSampler ()Ljava/util/function/DoubleSupplier; c
	onEndTick (I)V a
	onFinished ()V b
	onStartTick ()V a
	result ()Lnet/minecraft/util/profiling/metrics/MetricSampler$SamplerResult; f
	triggersThreshold ()Z g
	verifyRunning ()V h
net/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder bhw$a
	beforeTick e
	category b
	context d
	name a
	sampler c
	thresholdTest f
	build ()Lnet/minecraft/util/profiling/metrics/MetricSampler; a
	withBeforeTick (Ljava/util/function/Consumer;)Lnet/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder; a
	withThresholdAlert (Lnet/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest;)Lnet/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder; a
net/minecraft/util/profiling/metrics/MetricSampler$SamplerResult bhw$b
	firstTick b
	lastTick c
	recording a
	getFirstTick ()I a
	getLastTick ()I b
	valueAtTick (I)D a
net/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest bhw$c
net/minecraft/util/profiling/metrics/MetricSampler$ValueIncreasedByPercentage bhw$d
	percentageIncreaseThreshold a
	previousValue b
net/minecraft/util/profiling/metrics/MetricsRegistry bhx
	INSTANCE a
	measuredInstances b
	add (Lnet/minecraft/util/profiling/metrics/ProfilerMeasured;)V a
	aggregateDuplicates (Ljava/util/Map;)Ljava/util/List; a
	getRegisteredSamplers ()Ljava/util/List; a
net/minecraft/util/profiling/metrics/MetricsRegistry$AggregatedMetricSampler bhx$a
	delegates b
	averageValueFromDelegates (Ljava/util/List;)D c
	beforeTick (Ljava/util/List;)V b
	thresholdTest (Ljava/util/List;)Lnet/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest; a
net/minecraft/util/profiling/metrics/MetricsSamplerProvider bhy
	samplers (Ljava/util/function/Supplier;)Ljava/util/Set; a
net/minecraft/util/profiling/metrics/ProfilerMeasured bhz
	profiledMetrics ()Ljava/util/List; bp
net/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder bib
	PROFILING_MAX_DURATION_SECONDS a
	currentTick l
	deadlineNano k
	deviationsBySampler c
	globalOnReportFinished b
	ioExecutor e
	killSwitch n
	metricsPersister f
	metricsSamplerProvider i
	onProfilingEnd g
	onReportFinished h
	singleTickProfiler m
	taskProfiler d
	thisTickSamplers o
	wallTimeSource j
	cancel ()V b
	cleanup (Ljava/util/Collection;)V a
	createStarted (Lnet/minecraft/util/profiling/metrics/MetricsSamplerProvider;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Lnet/minecraft/util/profiling/metrics/storage/MetricsPersister;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lnet/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder; a
	end ()V a
	endTick ()V d
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; f
	isRecording ()Z e
	registerGlobalCompletionCallback (Ljava/util/function/Consumer;)V a
	scheduleSaveResults (Lnet/minecraft/util/profiling/ProfileResults;)V a
	startTick ()V c
	verifyStarted ()V g
net/minecraft/util/profiling/metrics/profiling/InactiveMetricsRecorder bic
	INSTANCE a
	cancel ()V b
	end ()V a
	endTick ()V d
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; f
	isRecording ()Z e
	startTick ()V c
net/minecraft/util/profiling/metrics/profiling/MetricsRecorder bid
	cancel ()V b
	end ()V a
	endTick ()V d
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; f
	isRecording ()Z e
	startTick ()V c
net/minecraft/util/profiling/metrics/profiling/ProfilerSamplerAdapter bie
	previouslyFoundSamplerNames a
	newSamplersFoundInProfiler (Ljava/util/function/Supplier;)Ljava/util/Set; a
	samplerForProfilingPath (Ljava/util/function/Supplier;Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;)Lnet/minecraft/util/profiling/metrics/MetricSampler; a
net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider bif
	LOGGER a
	samplerFactory c
	samplers b
	runtimeIndependentSamplers ()Ljava/util/Set; a
	samplers (Ljava/util/function/Supplier;)Ljava/util/Set; a
	tickTimeSampler (Ljava/util/function/LongSupplier;)Lnet/minecraft/util/profiling/metrics/MetricSampler; a
net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$CpuStats bif$a
	currentLoad e
	lastPollMs f
	nrOfCpus a
	previousCpuLoadTick d
	processor c
	systemInfo b
	loadForCpu (I)D a
net/minecraft/util/profiling/metrics/storage/MetricsPersister bih
	DEVIATIONS_DIR_NAME c
	LOGGER e
	METRICS_DIR_NAME b
	PROFILING_RESULTS_DIR a
	PROFILING_RESULT_FILENAME d
	rootFolderName f
	saveCategory (Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/List;Ljava/nio/file/Path;)V a
	saveDeviations (Ljava/util/Map;Ljava/nio/file/Path;)V a
	saveMetrics (Ljava/util/Set;Ljava/nio/file/Path;)V a
	saveProfilingTaskExecutionResult (Lnet/minecraft/util/profiling/ProfileResults;Ljava/nio/file/Path;)V a
	saveReports (Ljava/util/Set;Ljava/util/Map;Lnet/minecraft/util/profiling/ProfileResults;)Ljava/nio/file/Path; a
net/minecraft/util/profiling/metrics/storage/RecordedDeviation bii
	profilerResultAtTick c
	tick b
	timestamp a
net/minecraft/util/random/SimpleWeightedRandomList bil
	builder ()Lnet/minecraft/util/random/SimpleWeightedRandomList$Builder; a
	empty ()Lnet/minecraft/util/random/SimpleWeightedRandomList; b
	getRandomValue (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	single (Ljava/lang/Object;)Lnet/minecraft/util/random/SimpleWeightedRandomList; a
	wrappedCodec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
	wrappedCodecAllowingEmpty (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
net/minecraft/util/random/SimpleWeightedRandomList$Builder bil$a
	result a
	add (Ljava/lang/Object;)Lnet/minecraft/util/random/SimpleWeightedRandomList$Builder; a
	add (Ljava/lang/Object;I)Lnet/minecraft/util/random/SimpleWeightedRandomList$Builder; a
	build ()Lnet/minecraft/util/random/SimpleWeightedRandomList; a
net/minecraft/util/random/Weight bim
	CODEC a
	LOGGER c
	ONE b
	value d
	asInt ()I a
	of (I)Lnet/minecraft/util/random/Weight; a
	validateWeight (I)V b
net/minecraft/util/random/WeightedEntry bin
	getWeight ()Lnet/minecraft/util/random/Weight; a
	wrap (Ljava/lang/Object;I)Lnet/minecraft/util/random/WeightedEntry$Wrapper; a
net/minecraft/util/random/WeightedEntry$IntrusiveBase bin$a
	weight a
	getWeight ()Lnet/minecraft/util/random/Weight; a
net/minecraft/util/random/WeightedEntry$Wrapper bin$b
	data a
	weight b
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getData ()Ljava/lang/Object; b
	getWeight ()Lnet/minecraft/util/random/Weight; a
net/minecraft/util/random/WeightedRandom bio
	getRandomItem (Lnet/minecraft/util/RandomSource;Ljava/util/List;)Ljava/util/Optional; a
	getRandomItem (Lnet/minecraft/util/RandomSource;Ljava/util/List;I)Ljava/util/Optional; a
	getTotalWeight (Ljava/util/List;)I a
	getWeightedItem (Ljava/util/List;I)Ljava/util/Optional; a
net/minecraft/util/random/WeightedRandomList bip
	items b
	totalWeight a
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; c
	create ()Lnet/minecraft/util/random/WeightedRandomList; c
	create (Ljava/util/List;)Lnet/minecraft/util/random/WeightedRandomList; a
	create ([Lnet/minecraft/util/random/WeightedEntry;)Lnet/minecraft/util/random/WeightedRandomList; a
	getRandom (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; b
	isEmpty ()Z d
	unwrap ()Ljava/util/List; e
net/minecraft/util/thread/BlockableEventLoop bir
	LOGGER c
	blockingCount e
	name b
	pendingRunnables d
	doRunTask (Ljava/lang/Runnable;)V d
	dropAllTasks ()V bt
	executeBlocking (Ljava/lang/Runnable;)V h
	executeIfPossible (Ljava/lang/Runnable;)V c
	getPendingTasksCount ()I br
	getRunningThread ()Ljava/lang/Thread; aw
	isSameThread ()Z bq
	managedBlock (Ljava/util/function/BooleanSupplier;)V c
	name ()Ljava/lang/String; bs
	pollTask ()Z x
	profiledMetrics ()Ljava/util/List; bp
	runAllTasks ()V bu
	scheduleExecutables ()Z av
	shouldRun (Ljava/lang/Runnable;)Z e
	submit (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; g
	submit (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; a
	submitAsync (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; a
	tell (Ljava/lang/Object;)V a
	tell (Ljava/lang/Runnable;)V i
	waitForTasks ()V bv
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; f
net/minecraft/util/thread/NamedThreadFactory bis
	LOGGER a
	group b
	namePrefix d
	threadNumber c
net/minecraft/util/thread/ProcessorHandle bit
	ask (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; b
	askEither (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; c
	name ()Ljava/lang/String; bs
	of (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/util/thread/ProcessorHandle; a
	tell (Ljava/lang/Object;)V a
net/minecraft/util/thread/ProcessorMailbox biu
	CLOSED_BIT b
	LOGGER a
	SCHEDULED_BIT c
	dispatcher f
	name g
	queue e
	status d
	canBeScheduled ()Z f
	create (Ljava/util/concurrent/Executor;Ljava/lang/String;)Lnet/minecraft/util/thread/ProcessorMailbox; a
	hasWork ()Z c
	name ()Ljava/lang/String; bs
	pollTask ()Z h
	pollUntil (Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I a
	profiledMetrics ()Ljava/util/List; bp
	registerForExecution ()V i
	runAll ()V a
	setAsIdle ()V e
	setAsScheduled ()Z d
	shouldProcess ()Z g
	size ()I b
	tell (Ljava/lang/Object;)V a
net/minecraft/util/thread/ReentrantBlockableEventLoop biv
	reentrantCount b
	doRunTask (Ljava/lang/Runnable;)V d
	runningTask ()Z bw
	scheduleExecutables ()Z av
net/minecraft/util/thread/StrictQueue biw
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	push (Ljava/lang/Object;)Z a
	size ()I c
net/minecraft/util/thread/StrictQueue$FixedPriorityQueue biw$a
	queues a
	size b
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	pop ()Ljava/lang/Runnable; d
	push (Ljava/lang/Object;)Z a
	push (Lnet/minecraft/util/thread/StrictQueue$IntRunnable;)Z a
	size ()I c
net/minecraft/util/thread/StrictQueue$IntRunnable biw$b
	priority a
	task b
	getPriority ()I a
net/minecraft/util/thread/StrictQueue$QueueStrictQueue biw$c
	queue a
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	push (Ljava/lang/Object;)Z a
	size ()I c
net/minecraft/util/valueproviders/BiasedToBottomInt biy
	CODEC a
	maxInclusive f
	minInclusive b
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	of (II)Lnet/minecraft/util/valueproviders/BiasedToBottomInt; a
	sample (Lnet/minecraft/util/RandomSource;)I a
net/minecraft/util/valueproviders/ClampedInt biz
	CODEC a
	maxInclusive g
	minInclusive f
	source b
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	of (Lnet/minecraft/util/valueproviders/IntProvider;II)Lnet/minecraft/util/valueproviders/ClampedInt; a
	sample (Lnet/minecraft/util/RandomSource;)I a
net/minecraft/util/valueproviders/ClampedNormalFloat bja
	CODEC a
	deviation d
	max f
	mean b
	min e
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	of (FFFF)Lnet/minecraft/util/valueproviders/ClampedNormalFloat; a
	sample (Lnet/minecraft/util/RandomSource;)F a
	sample (Lnet/minecraft/util/RandomSource;FFFF)F a
net/minecraft/util/valueproviders/ClampedNormalInt bjb
	CODEC a
	deviation f
	max_inclusive h
	mean b
	min_inclusive g
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	of (FFII)Lnet/minecraft/util/valueproviders/ClampedNormalInt; a
	sample (Lnet/minecraft/util/RandomSource;)I a
	sample (Lnet/minecraft/util/RandomSource;FFFF)I a
net/minecraft/util/valueproviders/ConstantFloat bjc
	CODEC b
	ZERO a
	value d
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	getValue ()F d
	of (F)Lnet/minecraft/util/valueproviders/ConstantFloat; a
	sample (Lnet/minecraft/util/RandomSource;)F a
net/minecraft/util/valueproviders/ConstantInt bjd
	CODEC b
	ZERO a
	value f
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	getValue ()I d
	of (I)Lnet/minecraft/util/valueproviders/ConstantInt; a
	sample (Lnet/minecraft/util/RandomSource;)I a
net/minecraft/util/valueproviders/FloatProvider bje
	CODEC c
	CONSTANT_OR_DISPATCH_CODEC a
	codec (FF)Lcom/mojang/serialization/Codec; a
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
net/minecraft/util/valueproviders/FloatProviderType bjf
	CLAMPED_NORMAL c
	CONSTANT a
	TRAPEZOID d
	UNIFORM b
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/valueproviders/FloatProviderType; a
net/minecraft/util/valueproviders/IntProvider bjg
	CODEC c
	CONSTANT_OR_DISPATCH_CODEC a
	NON_NEGATIVE_CODEC d
	POSITIVE_CODEC e
	codec (II)Lcom/mojang/serialization/Codec; b
	codec (IILcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	sample (Lnet/minecraft/util/RandomSource;)I a
net/minecraft/util/valueproviders/IntProviderType bjh
	BIASED_TO_BOTTOM c
	CLAMPED d
	CLAMPED_NORMAL f
	CONSTANT a
	UNIFORM b
	WEIGHTED_LIST e
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/valueproviders/IntProviderType; a
net/minecraft/util/valueproviders/MultipliedFloats bji
	values a
	sample (Lnet/minecraft/util/RandomSource;)F a
net/minecraft/util/valueproviders/SampledFloat bjj
	sample (Lnet/minecraft/util/RandomSource;)F a
net/minecraft/util/valueproviders/TrapezoidFloat bjk
	CODEC a
	max d
	min b
	plateau e
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	of (FFF)Lnet/minecraft/util/valueproviders/TrapezoidFloat; a
	sample (Lnet/minecraft/util/RandomSource;)F a
net/minecraft/util/valueproviders/UniformFloat bjl
	CODEC a
	maxExclusive d
	minInclusive b
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	of (FF)Lnet/minecraft/util/valueproviders/UniformFloat; b
	sample (Lnet/minecraft/util/RandomSource;)F a
net/minecraft/util/valueproviders/UniformInt bjm
	CODEC a
	maxInclusive f
	minInclusive b
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	of (II)Lnet/minecraft/util/valueproviders/UniformInt; a
	sample (Lnet/minecraft/util/RandomSource;)I a
net/minecraft/util/valueproviders/WeightedListInt bjn
	CODEC a
	distribution b
	maxValue g
	minValue f
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	sample (Lnet/minecraft/util/RandomSource;)I a
net/minecraft/util/worldupdate/WorldUpgrader bjp
	LOGGER a
	REGEX q
	THREAD_FACTORY b
	converted m
	dataFixer h
	dimensions c
	eraseCache e
	finished j
	levelStorage f
	levels d
	overworldDataStorage r
	progress k
	progressMap o
	running i
	skipped n
	status p
	thread g
	totalChunks l
	cancel ()V a
	dimensionProgress (Lnet/minecraft/resources/ResourceKey;)F a
	getAllChunkPos (Lnet/minecraft/resources/ResourceKey;)Ljava/util/List; b
	getConverted ()I f
	getProgress ()F d
	getSkipped ()I g
	getStatus ()Lnet/minecraft/network/chat/Component; h
	getTotalChunks ()I e
	isFinished ()Z b
	levels ()Ljava/util/Set; c
	work ()V i
net/minecraft/world/BossEvent bjr
	color c
	createWorldFog g
	darkenScreen e
	id h
	name a
	overlay d
	playBossMusic f
	progress b
	getColor ()Lnet/minecraft/world/BossEvent$BossBarColor; l
	getId ()Ljava/util/UUID; i
	getName ()Lnet/minecraft/network/chat/Component; j
	getOverlay ()Lnet/minecraft/world/BossEvent$BossBarOverlay; m
	getProgress ()F k
	setColor (Lnet/minecraft/world/BossEvent$BossBarColor;)V a
	setCreateWorldFog (Z)Lnet/minecraft/world/BossEvent; c
	setDarkenScreen (Z)Lnet/minecraft/world/BossEvent; a
	setName (Lnet/minecraft/network/chat/Component;)V a
	setOverlay (Lnet/minecraft/world/BossEvent$BossBarOverlay;)V a
	setPlayBossMusic (Z)Lnet/minecraft/world/BossEvent; b
	setProgress (F)V a
	shouldCreateWorldFog ()Z p
	shouldDarkenScreen ()Z n
	shouldPlayBossMusic ()Z o
net/minecraft/world/BossEvent$BossBarColor bjr$a
	$VALUES j
	BLUE b
	GREEN d
	PINK a
	PURPLE f
	RED c
	WHITE g
	YELLOW e
	formatting i
	name h
	$values ()[Lnet/minecraft/world/BossEvent$BossBarColor; c
	byName (Ljava/lang/String;)Lnet/minecraft/world/BossEvent$BossBarColor; a
	getFormatting ()Lnet/minecraft/ChatFormatting; a
	getName ()Ljava/lang/String; b
net/minecraft/world/BossEvent$BossBarOverlay bjr$b
	$VALUES g
	NOTCHED_10 c
	NOTCHED_12 d
	NOTCHED_20 e
	NOTCHED_6 b
	PROGRESS a
	name f
	$values ()[Lnet/minecraft/world/BossEvent$BossBarOverlay; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/BossEvent$BossBarOverlay; a
	getName ()Ljava/lang/String; a
net/minecraft/world/Clearable bjs
	clearContent ()V a
	tryClear (Ljava/lang/Object;)V a_
net/minecraft/world/CompoundContainer bjt
	container1 c
	container2 d
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	clearContent ()V a
	contains (Lnet/minecraft/world/Container;)Z a
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getMaxStackSize ()I ak_
	isEmpty ()Z ai_
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V d_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c
net/minecraft/world/Container bju
	DEFAULT_DISTANCE_LIMIT o_
	LARGE_MAX_STACK_SIZE n_
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	canTakeItem (Lnet/minecraft/world/Container;ILnet/minecraft/world/item/ItemStack;)Z a
	countItem (Lnet/minecraft/world/item/Item;)I a_
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getMaxStackSize ()I ak_
	hasAnyMatching (Ljava/util/function/Predicate;)Z a_
	hasAnyOf (Ljava/util/Set;)Z a
	isEmpty ()Z ai_
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V d_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stillValidBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/entity/player/Player;)Z a
	stillValidBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/entity/player/Player;I)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c
net/minecraft/world/ContainerHelper bjv
	clearOrCountMatchingItems (Lnet/minecraft/world/Container;Ljava/util/function/Predicate;IZ)I a
	clearOrCountMatchingItems (Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Predicate;IZ)I a
	loadAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;)V b
	removeItem (Ljava/util/List;II)Lnet/minecraft/world/item/ItemStack; a
	saveAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;)Lnet/minecraft/nbt/CompoundTag; a
	saveAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;Z)Lnet/minecraft/nbt/CompoundTag; a
	takeItem (Ljava/util/List;I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/ContainerListener bjw
	containerChanged (Lnet/minecraft/world/Container;)V a
net/minecraft/world/Containers bjx
	dropContents (Lnet/minecraft/world/level/Level;DDDLnet/minecraft/world/Container;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/NonNullList;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/Container;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/Container;)V a
	dropContentsOnDestroy (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	dropItemStack (Lnet/minecraft/world/level/Level;DDDLnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/Difficulty bjy
	$VALUES i
	BY_ID f
	CODEC e
	EASY b
	HARD d
	NORMAL c
	PEACEFUL a
	id g
	key h
	$values ()[Lnet/minecraft/world/Difficulty; f
	byId (I)Lnet/minecraft/world/Difficulty; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/Difficulty; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
	getId ()I a
	getInfo ()Lnet/minecraft/network/chat/Component; d
	getKey ()Ljava/lang/String; e
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/DifficultyInstance bjz
	DIFFICULTY_TIME_GLOBAL_OFFSET a
	MAX_DIFFICULTY_TIME_GLOBAL b
	MAX_DIFFICULTY_TIME_LOCAL c
	base d
	effectiveDifficulty e
	calculateDifficulty (Lnet/minecraft/world/Difficulty;JJF)F a
	getDifficulty ()Lnet/minecraft/world/Difficulty; a
	getEffectiveDifficulty ()F b
	getSpecialMultiplier ()F d
	isHard ()Z c
	isHarderThan (F)Z a
net/minecraft/world/InteractionHand bka
	$VALUES c
	MAIN_HAND a
	OFF_HAND b
	$values ()[Lnet/minecraft/world/InteractionHand; a
net/minecraft/world/InteractionResult bkb
	$VALUES f
	CONSUME b
	CONSUME_PARTIAL c
	FAIL e
	PASS d
	SUCCESS a
	$values ()[Lnet/minecraft/world/InteractionResult; d
	consumesAction ()Z a
	shouldAwardStats ()Z c
	shouldSwing ()Z b
	sidedSuccess (Z)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/InteractionResultHolder bkc
	object b
	result a
	consume (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; b
	fail (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; d
	getObject ()Ljava/lang/Object; b
	getResult ()Lnet/minecraft/world/InteractionResult; a
	pass (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; c
	sidedSuccess (Ljava/lang/Object;Z)Lnet/minecraft/world/InteractionResultHolder; a
	success (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/LockCode bkd
	NO_LOCK a
	TAG_LOCK b
	key c
	addToTag (Lnet/minecraft/nbt/CompoundTag;)V a
	fromTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/LockCode; b
	unlocksWith (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/MenuProvider bke
	getDisplayName ()Lnet/minecraft/network/chat/Component; Q_
net/minecraft/world/Nameable bkf
	getCustomName ()Lnet/minecraft/network/chat/Component; af
	getDisplayName ()Lnet/minecraft/network/chat/Component; Q_
	getName ()Lnet/minecraft/network/chat/Component; ad
	hasCustomName ()Z ae
net/minecraft/world/RandomSequence bkg
	CODEC a
	source b
	createSequence (JLjava/util/Optional;)Lnet/minecraft/world/level/levelgen/XoroshiroRandomSource; a
	random ()Lnet/minecraft/util/RandomSource; a
	seedForKey (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/RandomSupport$Seed128bit; a
net/minecraft/world/RandomSequences bkh
	LOGGER a
	includeSequenceId e
	includeWorldSeed d
	salt c
	sequences f
	worldSeed b
	clear ()I a
	createSequence (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/RandomSequence; c
	createSequence (Lnet/minecraft/resources/ResourceLocation;IZZ)Lnet/minecraft/world/RandomSequence; b
	factory (J)Lnet/minecraft/world/level/saveddata/SavedData$Factory; a
	forAllSequences (Ljava/util/function/BiConsumer;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/util/RandomSource; a
	getBooleanWithDefault (Lnet/minecraft/nbt/CompoundTag;Ljava/lang/String;Z)Z a
	load (JLnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/RandomSequences; a
	reset (Lnet/minecraft/resources/ResourceLocation;)V b
	reset (Lnet/minecraft/resources/ResourceLocation;IZZ)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setSeedDefaults (IZZ)V a
net/minecraft/world/RandomSequences$DirtyMarkingRandomSource bkh$a
	random c
	fork ()Lnet/minecraft/util/RandomSource; d
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	nextBoolean ()Z h
	nextDouble ()D j
	nextFloat ()F i
	nextGaussian ()D k
	nextInt ()I f
	nextInt (I)I a
	nextLong ()J g
	setSeed (J)V b
net/minecraft/world/RandomizableContainer bki
	LOOT_TABLE_SEED_TAG d
	LOOT_TABLE_TAG c
	getBlockPos ()Lnet/minecraft/core/BlockPos; aB_
	getLevel ()Lnet/minecraft/world/level/Level; i
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; az_
	getLootTableSeed ()J aA_
	setBlockEntityLootTable (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/resources/ResourceLocation;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;J)V a
	setLootTableSeed (J)V a
	tryLoadLootTable (Lnet/minecraft/nbt/CompoundTag;)Z c_
	trySaveLootTable (Lnet/minecraft/nbt/CompoundTag;)Z d_
	unpackLootTable (Lnet/minecraft/world/entity/player/Player;)V e_
net/minecraft/world/SimpleContainer bkj
	items d
	listeners e
	size c
	addItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	addListener (Lnet/minecraft/world/ContainerListener;)V a
	canAddItem (Lnet/minecraft/world/item/ItemStack;)Z b
	clearContent ()V a
	createTag ()Lnet/minecraft/nbt/ListTag; g
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getItems ()Lnet/minecraft/core/NonNullList; h
	isEmpty ()Z ai_
	moveItemToEmptySlots (Lnet/minecraft/world/item/ItemStack;)V c
	moveItemToOccupiedSlotsWithSameType (Lnet/minecraft/world/item/ItemStack;)V d
	moveItemsBetweenStacks (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	removeAllItems ()Ljava/util/List; f
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	removeItemType (Lnet/minecraft/world/item/Item;I)Lnet/minecraft/world/item/ItemStack; a
	removeListener (Lnet/minecraft/world/ContainerListener;)V b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/SimpleMenuProvider bkk
	menuConstructor b
	title a
	getDisplayName ()Lnet/minecraft/network/chat/Component; Q_
net/minecraft/world/TickRateManager bkl
	MIN_TICKRATE a
	frozenTicksToRun d
	isFrozen f
	nanosecondsPerTick c
	runGameElements e
	tickrate b
	frozenTicksToRun ()I k
	isEntityFrozen (Lnet/minecraft/world/entity/Entity;)Z a
	isFrozen ()Z l
	isSteppingForward ()Z j
	millisecondsPerTick ()F g
	nanosecondsPerTick ()J h
	runsNormally ()Z i
	setFrozen (Z)V a
	setFrozenTicksToRun (I)V c
	setTickRate (F)V a
	tick ()V m
	tickrate ()F f
net/minecraft/world/WorldlyContainer bkm
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
net/minecraft/world/WorldlyContainerHolder bkn
	getContainer (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/WorldlyContainer; a
net/minecraft/world/damagesource/CombatEntry bko
	damage b
	fallDistance d
	fallLocation c
	source a
	damage ()F b
	fallDistance ()F d
	fallLocation ()Lnet/minecraft/world/damagesource/FallLocation; c
	source ()Lnet/minecraft/world/damagesource/DamageSource; a
net/minecraft/world/damagesource/CombatRules bkp
	ARMOR_PROTECTION_DIVIDER b
	BASE_ARMOR_TOUGHNESS c
	MAX_ARMOR a
	MIN_ARMOR_RATIO d
	NUM_ARMOR_ITEMS e
	getDamageAfterAbsorb (FFF)F a
	getDamageAfterMagicAbsorb (FF)F a
net/minecraft/world/damagesource/CombatTracker bkq
	INTENTIONAL_GAME_DESIGN_STYLE c
	RESET_COMBAT_STATUS_TIME b
	RESET_DAMAGE_STATUS_TIME a
	combatEndTime h
	combatStartTime g
	entries d
	inCombat i
	lastDamageTime f
	mob e
	takingDamage j
	getCombatDuration ()I b
	getDeathMessage ()Lnet/minecraft/network/chat/Component; a
	getDisplayName (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/network/chat/Component; a
	getFallMessage (Lnet/minecraft/world/damagesource/CombatEntry;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/network/chat/Component; a
	getMessageForAssistedFall (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	getMostSignificantFall ()Lnet/minecraft/world/damagesource/CombatEntry; d
	recheckStatus ()V c
	recordDamage (Lnet/minecraft/world/damagesource/DamageSource;F)V a
	shouldEnterCombat (Lnet/minecraft/world/damagesource/DamageSource;)Z a
net/minecraft/world/damagesource/DamageEffects bkr
	$VALUES j
	BURNING d
	CODEC g
	DROWNING c
	FREEZING f
	HURT a
	POKING e
	THORNS b
	id h
	sound i
	$values ()[Lnet/minecraft/world/damagesource/DamageEffects; b
	getSerializedName ()Ljava/lang/String; c
	sound ()Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/world/damagesource/DamageScaling bks
	$VALUES f
	ALWAYS c
	CODEC d
	NEVER a
	WHEN_CAUSED_BY_LIVING_NON_PLAYER b
	id e
	$values ()[Lnet/minecraft/world/damagesource/DamageScaling; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/damagesource/DamageSource bkt
	causingEntity b
	damageSourcePosition d
	directEntity c
	type a
	getDirectEntity ()Lnet/minecraft/world/entity/Entity; c
	getEntity ()Lnet/minecraft/world/entity/Entity; d
	getFoodExhaustion ()F a
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
	getMsgId ()Ljava/lang/String; e
	getSourcePosition ()Lnet/minecraft/world/phys/Vec3; h
	is (Lnet/minecraft/resources/ResourceKey;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	isCreativePlayer ()Z g
	isIndirect ()Z b
	scalesWithDifficulty ()Z f
	sourcePositionRaw ()Lnet/minecraft/world/phys/Vec3; i
	type ()Lnet/minecraft/world/damagesource/DamageType; j
	typeHolder ()Lnet/minecraft/core/Holder; k
net/minecraft/world/damagesource/DamageSources bku
	cactus k
	cramming h
	damageTypes a
	dragonBreath r
	drown i
	dryOut s
	fall l
	fellOutOfWorld n
	flyIntoWall m
	freeze u
	generic o
	genericKill x
	hotFloor f
	inFire b
	inWall g
	lava e
	lightningBolt c
	magic p
	onFire d
	outsideBorder w
	stalagmite v
	starve j
	sweetBerryBush t
	wither q
	anvil (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; b
	arrow (Lnet/minecraft/world/entity/projectile/AbstractArrow;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	badRespawnPointExplosion (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/damagesource/DamageSource; a
	cactus ()Lnet/minecraft/world/damagesource/DamageSource; j
	cramming ()Lnet/minecraft/world/damagesource/DamageSource; g
	dragonBreath ()Lnet/minecraft/world/damagesource/DamageSource; q
	drown ()Lnet/minecraft/world/damagesource/DamageSource; h
	dryOut ()Lnet/minecraft/world/damagesource/DamageSource; r
	explosion (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; d
	explosion (Lnet/minecraft/world/level/Explosion;)Lnet/minecraft/world/damagesource/DamageSource; a
	fall ()Lnet/minecraft/world/damagesource/DamageSource; k
	fallingBlock (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	fallingStalactite (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; c
	fellOutOfWorld ()Lnet/minecraft/world/damagesource/DamageSource; m
	fireball (Lnet/minecraft/world/entity/projectile/Fireball;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	fireworks (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	flyIntoWall ()Lnet/minecraft/world/damagesource/DamageSource; l
	freeze ()Lnet/minecraft/world/damagesource/DamageSource; t
	generic ()Lnet/minecraft/world/damagesource/DamageSource; n
	genericKill ()Lnet/minecraft/world/damagesource/DamageSource; w
	hotFloor ()Lnet/minecraft/world/damagesource/DamageSource; e
	inFire ()Lnet/minecraft/world/damagesource/DamageSource; a
	inWall ()Lnet/minecraft/world/damagesource/DamageSource; f
	indirectMagic (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; c
	lava ()Lnet/minecraft/world/damagesource/DamageSource; d
	lightningBolt ()Lnet/minecraft/world/damagesource/DamageSource; b
	magic ()Lnet/minecraft/world/damagesource/DamageSource; o
	mobAttack (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; b
	mobProjectile (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; a
	noAggroMobAttack (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; c
	onFire ()Lnet/minecraft/world/damagesource/DamageSource; c
	outOfBorder ()Lnet/minecraft/world/damagesource/DamageSource; v
	playerAttack (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/damagesource/DamageSource; a
	sonicBoom (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; e
	source (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/damagesource/DamageSource; a
	source (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	source (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	stalagmite ()Lnet/minecraft/world/damagesource/DamageSource; u
	starve ()Lnet/minecraft/world/damagesource/DamageSource; i
	sting (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; a
	sweetBerryBush ()Lnet/minecraft/world/damagesource/DamageSource; s
	thorns (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; d
	thrown (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; b
	trident (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	wither ()Lnet/minecraft/world/damagesource/DamageSource; p
	witherSkull (Lnet/minecraft/world/entity/projectile/WitherSkull;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
net/minecraft/world/damagesource/DamageType bkv
	CODEC a
	deathMessageType f
	effects e
	exhaustion d
	msgId b
	scaling c
	deathMessageType ()Lnet/minecraft/world/damagesource/DeathMessageType; e
	effects ()Lnet/minecraft/world/damagesource/DamageEffects; d
	exhaustion ()F c
	msgId ()Ljava/lang/String; a
	scaling ()Lnet/minecraft/world/damagesource/DamageScaling; b
net/minecraft/world/damagesource/DamageTypes bkw
	ARROW C
	BAD_RESPAWN_POINT P
	CACTUS j
	CRAMMING g
	DRAGON_BREATH q
	DROWN h
	DRY_OUT r
	EXPLOSION M
	FALL k
	FALLING_ANVIL w
	FALLING_BLOCK v
	FALLING_STALACTITE x
	FELL_OUT_OF_WORLD m
	FIREBALL G
	FIREWORKS F
	FLY_INTO_WALL l
	FREEZE t
	GENERIC n
	GENERIC_KILL R
	HOT_FLOOR e
	INDIRECT_MAGIC K
	IN_FIRE a
	IN_WALL f
	LAVA d
	LIGHTNING_BOLT b
	MAGIC o
	MOB_ATTACK z
	MOB_ATTACK_NO_AGGRO A
	MOB_PROJECTILE E
	ON_FIRE c
	OUTSIDE_BORDER Q
	PLAYER_ATTACK B
	PLAYER_EXPLOSION N
	SONIC_BOOM O
	STALAGMITE u
	STARVE i
	STING y
	SWEET_BERRY_BUSH s
	THORNS L
	THROWN J
	TRIDENT D
	UNATTRIBUTED_FIREBALL H
	WITHER p
	WITHER_SKULL I
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/world/damagesource/DeathMessageType bkx
	$VALUES f
	CODEC d
	DEFAULT a
	FALL_VARIANTS b
	INTENTIONAL_GAME_DESIGN c
	id e
	$values ()[Lnet/minecraft/world/damagesource/DeathMessageType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/damagesource/FallLocation bky
	GENERIC a
	LADDER b
	OTHER_CLIMBABLE g
	SCAFFOLDING f
	TWISTING_VINES e
	VINES c
	WATER h
	WEEPING_VINES d
	id i
	blockToFallLocation (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/damagesource/FallLocation; a
	getCurrentFallLocation (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/FallLocation; a
	id ()Ljava/lang/String; b
	languageKey ()Ljava/lang/String; a
net/minecraft/world/effect/AbsorptionMobEffect bla
	applyEffectTick (Lnet/minecraft/world/entity/LivingEntity;I)V a
	onEffectStarted (Lnet/minecraft/world/entity/LivingEntity;I)V b
	shouldApplyEffectTickThisTick (II)Z a
net/minecraft/world/effect/AttributeModifierTemplate blb
	create (I)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; a
	getAttributeModifierId ()Ljava/util/UUID; a
net/minecraft/world/effect/BadOmenMobEffect blc
	applyEffectTick (Lnet/minecraft/world/entity/LivingEntity;I)V a
	shouldApplyEffectTickThisTick (II)Z a
net/minecraft/world/effect/HealOrHarmMobEffect bld
	isHarm a
	applyEffectTick (Lnet/minecraft/world/entity/LivingEntity;I)V a
	applyInstantenousEffect (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/LivingEntity;ID)V a
net/minecraft/world/effect/HungerMobEffect ble
	applyEffectTick (Lnet/minecraft/world/entity/LivingEntity;I)V a
	shouldApplyEffectTickThisTick (II)Z a
net/minecraft/world/effect/InstantenousMobEffect blf
	isInstantenous ()Z a
	shouldApplyEffectTickThisTick (II)Z a
net/minecraft/world/effect/MobEffect blg
	attributeModifiers a
	builtInRegistryHolder f
	category b
	color c
	descriptionId d
	factorDataFactory e
	addAttributeModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/lang/String;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Lnet/minecraft/world/effect/MobEffect; a
	addAttributeModifiers (Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V a
	applyEffectTick (Lnet/minecraft/world/entity/LivingEntity;I)V a
	applyInstantenousEffect (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/LivingEntity;ID)V a
	builtInRegistryHolder ()Lnet/minecraft/core/Holder$Reference; j
	createFactorData ()Ljava/util/Optional; b
	getAttributeModifiers ()Ljava/util/Map; h
	getCategory ()Lnet/minecraft/world/effect/MobEffectCategory; f
	getColor ()I g
	getDescriptionId ()Ljava/lang/String; d
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	getOrCreateDescriptionId ()Ljava/lang/String; c
	isBeneficial ()Z i
	isInstantenous ()Z a
	onEffectStarted (Lnet/minecraft/world/entity/LivingEntity;I)V b
	removeAttributeModifiers (Lnet/minecraft/world/entity/ai/attributes/AttributeMap;)V a
	setFactorDataFactory (Ljava/util/function/Supplier;)Lnet/minecraft/world/effect/MobEffect; a
	shouldApplyEffectTickThisTick (II)Z a
net/minecraft/world/effect/MobEffect$MobEffectAttributeModifierTemplate blg$a
	amount c
	id b
	operation d
	create (I)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; a
	getAttributeModifierId ()Ljava/util/UUID; a
net/minecraft/world/effect/MobEffectCategory blh
	$VALUES e
	BENEFICIAL a
	HARMFUL b
	NEUTRAL c
	tooltipFormatting d
	$values ()[Lnet/minecraft/world/effect/MobEffectCategory; b
	getTooltipFormatting ()Lnet/minecraft/ChatFormatting; a
net/minecraft/world/effect/MobEffectInstance bli
	INFINITE_DURATION a
	LOGGER b
	TAG_AMBIENT d
	TAG_AMPLIFIER f
	TAG_DURATION g
	TAG_FACTOR_CALCULATION_DATA j
	TAG_HIDDEN_EFFECT e
	TAG_ID c
	TAG_SHOW_ICON i
	TAG_SHOW_PARTICLES h
	ambient n
	amplifier m
	duration l
	effect k
	factorData r
	hiddenEffect q
	showIcon p
	visible o
	compareTo (Lnet/minecraft/world/effect/MobEffectInstance;)I c
	describeDuration ()Ljava/lang/String; l
	endsWithin (I)Z a
	getAmplifier ()I e
	getDescriptionId ()Ljava/lang/String; i
	getDuration ()I d
	getEffect ()Lnet/minecraft/world/effect/MobEffect; c
	getFactorData ()Ljava/util/Optional; a
	hasRemainingDuration ()Z j
	isAmbient ()Z f
	isInfiniteDuration ()Z b
	isShorterDurationThan (Lnet/minecraft/world/effect/MobEffectInstance;)Z d
	isVisible ()Z g
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/effect/MobEffectInstance; b
	loadSpecifiedEffect (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/effect/MobEffectInstance; a
	mapDuration (Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)I a
	onEffectStarted (Lnet/minecraft/world/entity/LivingEntity;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setDetailsFrom (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	showIcon ()Z h
	tick (Lnet/minecraft/world/entity/LivingEntity;Ljava/lang/Runnable;)Z a
	tickDownDuration ()I k
	update (Lnet/minecraft/world/effect/MobEffectInstance;)Z b
	writeDetailsTo (Lnet/minecraft/nbt/CompoundTag;)V c
net/minecraft/world/effect/MobEffectInstance$FactorData bli$a
	CODEC a
	factorCurrent e
	factorPreviousFrame g
	factorStart c
	factorTarget d
	hadEffectLastTick h
	paddingDuration b
	ticksActive f
	getFactor (Lnet/minecraft/world/entity/LivingEntity;F)F a
	tick (Lnet/minecraft/world/effect/MobEffectInstance;)V a
net/minecraft/world/effect/MobEffectUtil blj
	addEffectToPlayersAround (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;DLnet/minecraft/world/effect/MobEffectInstance;I)Ljava/util/List; a
	formatDuration (Lnet/minecraft/world/effect/MobEffectInstance;FF)Lnet/minecraft/network/chat/Component; a
	getDigSpeedAmplification (Lnet/minecraft/world/entity/LivingEntity;)I b
	hasDigSpeed (Lnet/minecraft/world/entity/LivingEntity;)Z a
	hasWaterBreathing (Lnet/minecraft/world/entity/LivingEntity;)Z c
net/minecraft/world/effect/MobEffects blk
	ABSORPTION v
	BAD_OMEN E
	BLINDNESS o
	CONDUIT_POWER C
	CONFUSION i
	DAMAGE_BOOST e
	DAMAGE_RESISTANCE k
	DARKNESS G
	DARKNESS_EFFECT_FACTOR_PADDING_DURATION_TICKS H
	DIG_SLOWDOWN d
	DIG_SPEED c
	DOLPHINS_GRACE D
	FIRE_RESISTANCE l
	GLOWING x
	HARM g
	HEAL f
	HEALTH_BOOST u
	HERO_OF_THE_VILLAGE F
	HUNGER q
	INVISIBILITY n
	JUMP h
	LEVITATION y
	LUCK z
	MOVEMENT_SLOWDOWN b
	MOVEMENT_SPEED a
	NIGHT_VISION p
	POISON s
	REGENERATION j
	SATURATION w
	SLOW_FALLING B
	UNLUCK A
	WATER_BREATHING m
	WEAKNESS r
	WITHER t
	register (Ljava/lang/String;Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffect; a
net/minecraft/world/effect/PoisonMobEffect bll
	applyEffectTick (Lnet/minecraft/world/entity/LivingEntity;I)V a
	shouldApplyEffectTickThisTick (II)Z a
net/minecraft/world/effect/RegenerationMobEffect blm
	applyEffectTick (Lnet/minecraft/world/entity/LivingEntity;I)V a
	shouldApplyEffectTickThisTick (II)Z a
net/minecraft/world/effect/SaturationMobEffect bln
	applyEffectTick (Lnet/minecraft/world/entity/LivingEntity;I)V a
net/minecraft/world/effect/WitherMobEffect blo
	applyEffectTick (Lnet/minecraft/world/entity/LivingEntity;I)V a
	shouldApplyEffectTickThisTick (II)Z a
net/minecraft/world/entity/AgeableMob blq
	BABY_START_AGE b
	DATA_BABY_ID bT
	FORCED_AGE_PARTICLE_TICKS bU
	age c
	forcedAge d
	forcedAgeTimer e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V m
	ageUp (I)V b_
	ageUp (IZ)V a
	aiStep ()V d_
	canBreed ()Z Y_
	defineSynchedData ()V c_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAge ()I h
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getSpeedUpSecondsWhenFeeding (I)I d_
	isBaby ()Z o_
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setAge (I)V c_
	setBaby (Z)V a
net/minecraft/world/entity/AgeableMob$AgeableMobGroupData blq$a
	babySpawnChance c
	groupSize a
	shouldSpawnBaby b
	getBabySpawnChance ()F d
	getGroupSize ()I a
	increaseGroupSizeByOne ()V b
	isShouldSpawnBaby ()Z c
net/minecraft/world/entity/AnimationState blr
	STOPPED a
	accumulatedTime c
	lastTime b
	animateWhen (ZI)V a
	getAccumulatedTime ()J b
	ifStarted (Ljava/util/function/Consumer;)V a
	isStarted ()Z c
	start (I)V a
	startIfStopped (I)V b
	stop ()V a
	updateTime (FF)V a
net/minecraft/world/entity/AreaEffectCloud bls
	DATA_COLOR g
	DATA_PARTICLE i
	DATA_RADIUS f
	DATA_WAITING h
	DEFAULT_RADIUS l
	DEFAULT_WIDTH b
	HEIGHT c
	LOGGER d
	MAX_RADIUS j
	MINIMAL_RADIUS k
	TAG_EFFECTS m
	TIME_BETWEEN_APPLICATIONS e
	duration q
	durationOnUse u
	effects o
	fixedColor t
	owner aF
	ownerUUID aG
	potion n
	radiusOnUse v
	radiusPerTick aE
	reapplicationDelay s
	victims p
	waitTime r
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	defineSynchedData ()V c_
	getColor ()I i
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDuration ()I m
	getDurationOnUse ()I q
	getOwner ()Lnet/minecraft/world/entity/Entity; w
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; s
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; j
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; s_
	getPotion ()Lnet/minecraft/world/item/alchemy/Potion; u
	getRadius ()F h
	getRadiusOnUse ()F o
	getRadiusPerTick ()F p
	getWaitTime ()I r
	isWaiting ()Z k
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshDimensions ()V k_
	setDuration (I)V b
	setDurationOnUse (I)V c
	setFixedColor (I)V a
	setOwner (Lnet/minecraft/world/entity/LivingEntity;)V a
	setParticle (Lnet/minecraft/core/particles/ParticleOptions;)V a
	setPotion (Lnet/minecraft/world/item/alchemy/Potion;)V a
	setRadius (F)V a
	setRadiusOnUse (F)V b
	setRadiusPerTick (F)V c
	setWaitTime (I)V d
	setWaiting (Z)V a
	tick ()V l
	updateColor ()V x
net/minecraft/world/entity/Attackable blt
	getLastAttacker ()Lnet/minecraft/world/entity/LivingEntity; V_
net/minecraft/world/entity/Display blu
	DATA_BILLBOARD_RENDER_CONSTRAINTS_ID aF
	DATA_BRIGHTNESS_OVERRIDE_ID aG
	DATA_GLOW_COLOR_OVERRIDE_ID aM
	DATA_HEIGHT_ID aL
	DATA_LEFT_ROTATION_ID v
	DATA_POS_ROT_INTERPOLATION_DURATION_ID s
	DATA_RIGHT_ROTATION_ID aE
	DATA_SCALE_ID u
	DATA_SHADOW_RADIUS_ID aI
	DATA_SHADOW_STRENGTH_ID aJ
	DATA_TRANSFORMATION_INTERPOLATION_DURATION_ID r
	DATA_TRANSFORMATION_INTERPOLATION_START_DELTA_TICKS_ID q
	DATA_TRANSLATION_ID t
	DATA_VIEW_RANGE_ID aH
	DATA_WIDTH_ID aK
	INITIAL_SHADOW_RADIUS aO
	INITIAL_SHADOW_STRENGTH aP
	LOGGER p
	NO_BRIGHTNESS_OVERRIDE b
	NO_GLOW_COLOR_OVERRIDE aQ
	RENDER_STATE_IDS aN
	TAG_BILLBOARD g
	TAG_BRIGHTNESS h
	TAG_GLOW_COLOR_OVERRIDE n
	TAG_HEIGHT m
	TAG_POS_ROT_INTERPOLATION_DURATION c
	TAG_SHADOW_RADIUS j
	TAG_SHADOW_STRENGTH k
	TAG_TRANSFORMATION f
	TAG_TRANSFORMATION_INTERPOLATION_DURATION d
	TAG_TRANSFORMATION_START_INTERPOLATION e
	TAG_VIEW_RANGE i
	TAG_WIDTH l
	cullingBoundingBox aU
	interpolationDuration aS
	interpolationStartClientTick aR
	lastProgress aT
	posRotInterpolationTarget aY
	renderState aX
	updateInterpolationDuration aW
	updateRenderState o
	updateStartTick aV
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	calculateInterpolationProgress (F)F a
	createFreshRenderState ()Lnet/minecraft/world/entity/Display$RenderState; I
	createInterpolatedRenderState (Lnet/minecraft/world/entity/Display$RenderState;F)Lnet/minecraft/world/entity/Display$RenderState; a
	createTransformation (Lnet/minecraft/network/syncher/SynchedEntityData;)Lcom/mojang/math/Transformation; a
	defineSynchedData ()V c_
	getBillboardConstraints ()Lnet/minecraft/world/entity/Display$BillboardConstraints; x
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; i_
	getBrightnessOverride ()Lnet/minecraft/util/Brightness; y
	getGlowColorOverride ()I E
	getHeight ()F G
	getPackedBrightnessOverride ()I z
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; s_
	getPosRotInterpolationDuration ()I w
	getShadowRadius ()F B
	getShadowStrength ()F C
	getTeamColor ()I j_
	getTransformationInterpolationDelay ()I u
	getTransformationInterpolationDuration ()I s
	getViewRange ()F A
	getWidth ()F D
	isIgnoringBlockTriggers ()Z r_
	lerpTargetX ()D p_
	lerpTargetXRot ()F f_
	lerpTargetY ()D N_
	lerpTargetYRot ()F q_
	lerpTargetZ ()D O_
	lerpTo (DDDFFI)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	renderState ()Lnet/minecraft/world/entity/Display$RenderState; q
	setBillboardConstraints (Lnet/minecraft/world/entity/Display$BillboardConstraints;)V a
	setBrightnessOverride (Lnet/minecraft/util/Brightness;)V a
	setGlowColorOverride (I)V m
	setHeight (F)V w
	setPos (DDD)V a_
	setPosRotInterpolationDuration (I)V d
	setShadowRadius (F)V c
	setShadowStrength (F)V u
	setTransformation (Lcom/mojang/math/Transformation;)V a
	setTransformationInterpolationDelay (I)V c
	setTransformationInterpolationDuration (I)V b
	setViewRange (F)V b
	setWidth (F)V v
	shouldRenderAtSqrDistance (D)Z a
	tick ()V l
	updateCulling ()V H
	updateRenderSubState (ZF)V a
net/minecraft/world/entity/Display$BillboardConstraints blu$a
	$VALUES i
	BY_ID f
	CENTER d
	CODEC e
	FIXED a
	HORIZONTAL c
	VERTICAL b
	id g
	name h
	$values ()[Lnet/minecraft/world/entity/Display$BillboardConstraints; b
	getId ()B a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/Display$BlockDisplay blu$b
	DATA_BLOCK_STATE_ID q
	TAG_BLOCK_STATE p
	blockRenderState r
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	blockRenderState ()Lnet/minecraft/world/entity/Display$BlockDisplay$BlockRenderState; s
	defineSynchedData ()V c_
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; u
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/world/level/block/state/BlockState;)V c
	updateRenderSubState (ZF)V a
net/minecraft/world/entity/Display$BlockDisplay$BlockRenderState blu$b$a
	blockState a
	blockState ()Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/entity/Display$ColorInterpolator blu$c
	current b
	previous a
	current ()I b
	previous ()I a
net/minecraft/world/entity/Display$FloatInterpolator blu$d
net/minecraft/world/entity/Display$GenericInterpolator blu$e
net/minecraft/world/entity/Display$IntInterpolator blu$f
net/minecraft/world/entity/Display$ItemDisplay blu$g
	DATA_ITEM_DISPLAY_ID s
	DATA_ITEM_STACK_ID r
	TAG_ITEM p
	TAG_ITEM_DISPLAY q
	itemRenderState u
	slot t
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V c_
	getItemStack ()Lnet/minecraft/world/item/ItemStack; u
	getItemTransform ()Lnet/minecraft/world/item/ItemDisplayContext; w
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	itemRenderState ()Lnet/minecraft/world/entity/Display$ItemDisplay$ItemRenderState; s
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItemStack (Lnet/minecraft/world/item/ItemStack;)V a
	setItemTransform (Lnet/minecraft/world/item/ItemDisplayContext;)V a
	updateRenderSubState (ZF)V a
net/minecraft/world/entity/Display$ItemDisplay$ItemRenderState blu$g$a
	itemStack a
	itemTransform b
	itemStack ()Lnet/minecraft/world/item/ItemStack; a
	itemTransform ()Lnet/minecraft/world/item/ItemDisplayContext; b
net/minecraft/world/entity/Display$LinearFloatInterpolator blu$h
	current b
	previous a
	current ()F b
	previous ()F a
net/minecraft/world/entity/Display$LinearIntInterpolator blu$i
	current b
	previous a
	current ()I b
	previous ()I a
net/minecraft/world/entity/Display$PosRotInterpolationTarget blu$j
	steps a
	targetX b
	targetXRot f
	targetY c
	targetYRot e
	targetZ d
	applyLerpStep (Lnet/minecraft/world/entity/Entity;)V b
	applyTargetPosAndRot (Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/entity/Display$RenderState blu$k
	billboardConstraints b
	brightnessOverride c
	glowColorOverride f
	shadowRadius d
	shadowStrength e
	transformation a
	billboardConstraints ()Lnet/minecraft/world/entity/Display$BillboardConstraints; b
	brightnessOverride ()I c
	glowColorOverride ()I f
	shadowRadius ()Lnet/minecraft/world/entity/Display$FloatInterpolator; d
	shadowStrength ()Lnet/minecraft/world/entity/Display$FloatInterpolator; e
	transformation ()Lnet/minecraft/world/entity/Display$GenericInterpolator; a
net/minecraft/world/entity/Display$TextDisplay blu$l
	DATA_BACKGROUND_COLOR_ID aO
	DATA_LINE_WIDTH_ID aN
	DATA_STYLE_FLAGS_ID aQ
	DATA_TEXT_ID aM
	DATA_TEXT_OPACITY_ID aP
	FLAG_ALIGN_LEFT t
	FLAG_ALIGN_RIGHT u
	FLAG_SEE_THROUGH r
	FLAG_SHADOW q
	FLAG_USE_DEFAULT_BACKGROUND s
	INITIAL_BACKGROUND v
	INITIAL_TEXT_OPACITY aL
	TAG_ALIGNMENT aK
	TAG_BACKGROUND_COLOR aG
	TAG_LINE_WIDTH aE
	TAG_SEE_THROUGH aI
	TAG_SHADOW aH
	TAG_TEXT p
	TAG_TEXT_OPACITY aF
	TAG_USE_DEFAULT_BACKGROUND aJ
	TEXT_RENDER_STATE_IDS aR
	clientDisplayCache aS
	textRenderState aT
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	cacheDisplay (Lnet/minecraft/world/entity/Display$TextDisplay$LineSplitter;)Lnet/minecraft/world/entity/Display$TextDisplay$CachedInfo; a
	createFreshTextRenderState ()Lnet/minecraft/world/entity/Display$TextDisplay$TextRenderState; A
	createInterpolatedTextRenderState (Lnet/minecraft/world/entity/Display$TextDisplay$TextRenderState;F)Lnet/minecraft/world/entity/Display$TextDisplay$TextRenderState; a
	defineSynchedData ()V c_
	getAlign (B)Lnet/minecraft/world/entity/Display$TextDisplay$Align; a
	getBackgroundColor ()I y
	getFlags ()B z
	getLineWidth ()I w
	getText ()Lnet/minecraft/network/chat/Component; u
	getTextOpacity ()B x
	loadFlag (BLnet/minecraft/nbt/CompoundTag;Ljava/lang/String;B)B a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setBackgroundColor (I)V c
	setFlags (B)V d
	setLineWidth (I)V b
	setText (Lnet/minecraft/network/chat/Component;)V c
	setTextOpacity (B)V c
	storeFlag (BLnet/minecraft/nbt/CompoundTag;Ljava/lang/String;B)V b
	textRenderState ()Lnet/minecraft/world/entity/Display$TextDisplay$TextRenderState; s
	updateRenderSubState (ZF)V a
net/minecraft/world/entity/Display$TextDisplay$Align blu$l$a
	$VALUES f
	CENTER a
	CODEC d
	LEFT b
	RIGHT c
	name e
	$values ()[Lnet/minecraft/world/entity/Display$TextDisplay$Align; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/Display$TextDisplay$CachedInfo blu$l$b
	lines a
	width b
	lines ()Ljava/util/List; a
	width ()I b
net/minecraft/world/entity/Display$TextDisplay$CachedLine blu$l$c
	contents a
	width b
	contents ()Lnet/minecraft/util/FormattedCharSequence; a
	width ()I b
net/minecraft/world/entity/Display$TextDisplay$LineSplitter blu$l$d
net/minecraft/world/entity/Display$TextDisplay$TextRenderState blu$l$e
	backgroundColor d
	flags e
	lineWidth b
	text a
	textOpacity c
	backgroundColor ()Lnet/minecraft/world/entity/Display$IntInterpolator; d
	flags ()B e
	lineWidth ()I b
	text ()Lnet/minecraft/network/chat/Component; a
	textOpacity ()Lnet/minecraft/world/entity/Display$IntInterpolator; c
net/minecraft/world/entity/Display$TransformationInterpolator blu$m
	current b
	previous a
	current ()Lcom/mojang/math/Transformation; b
	get (F)Lcom/mojang/math/Transformation; a
	previous ()Lcom/mojang/math/Transformation; a
net/minecraft/world/entity/Entity blv
	BASE_TICKS_REQUIRED_TO_FREEZE F
	BOARDING_COOLDOWN y
	BREATHING_DISTANCE_BELOW_EYES E
	DATA_AIR_SUPPLY_ID aT
	DATA_CUSTOM_NAME aU
	DATA_CUSTOM_NAME_VISIBLE aV
	DATA_NO_GRAVITY aX
	DATA_POSE as
	DATA_SHARED_FLAGS_ID ao
	DATA_SILENT aW
	DATA_TICKS_FROZEN aY
	DEFAULT_BB_HEIGHT W
	DEFAULT_BB_WIDTH V
	DELTA_AFFECTED_BY_BLOCKS_BELOW_0_2 B
	DELTA_AFFECTED_BY_BLOCKS_BELOW_0_5 C
	DELTA_AFFECTED_BY_BLOCKS_BELOW_1_0 D
	EMPTY_LIST e
	ENTITY_COUNTER d
	FLAG_FALL_FLYING ar
	FLAG_GLOWING aq
	FLAG_INVISIBLE aS
	FLAG_ONFIRE ap
	FLAG_SHIFT_KEY_DOWN aP
	FLAG_SPRINTING aQ
	FLAG_SWIMMING aR
	FREEZE_HURT_FREQUENCY G
	ID_TAG w
	INITIAL_AABB k
	LAVA_FAST_FLOW_SCALE m
	LAVA_SLOW_FLOW_SCALE n
	LOGGER c
	MAX_ENTITY_TAG_COUNT A
	PASSENGERS_TAG x
	TOTAL_AIR_SUPPLY z
	UUID_TAG H
	WATER_FLOW_SCALE l
	bb aI
	blockPosition v
	blocksBuilding I
	boardingCooldown J
	chunkPosition aE
	crystalSoundIntensity bk
	deltaMovement aF
	dimensions bh
	entityData an
	eyeHeight bi
	fallDistance ab
	feetBlockState bn
	firstTick am
	fluidHeight aj
	fluidOnEyes aO
	flyDist aa
	hasGlowingTag bd
	hasImpulse au
	hasVisualFire bm
	horizontalCollision P
	hurtMarked T
	id q
	invulnerable bc
	invulnerableTime al
	isInPowderSnow aA
	isInsidePortal av
	lastCrystalSoundPlayTick bl
	level t
	levelCallback aZ
	mainSupportingBlockPos aD
	maxUpStep aM
	minorHorizontalCollision S
	moveDist Z
	nextStep aL
	noCulling at
	noPhysics af
	onGround aJ
	onGroundNoBlocks bj
	packetPositionCodec ba
	passengers r
	pistonDeltas bf
	pistonDeltasGameTime bg
	portalCooldown bb
	portalEntrancePos ax
	portalTime aw
	position u
	random ag
	remainingFireTicks aN
	removalReason aK
	stringUUID az
	stuckSpeedMultiplier U
	tags be
	tickCount ah
	type p
	uuid ay
	vehicle s
	verticalCollision Q
	verticalCollisionBelow R
	viewScale o
	walkDist Y
	walkDistO X
	wasEyeInWater ak
	wasInPowderSnow aB
	wasOnFire aC
	wasTouchingWater ai
	xOld ac
	xRot aH
	xRotO O
	xo K
	yOld ad
	yRot aG
	yRotO N
	yo L
	zOld ae
	zo M
	absMoveTo (DDD)V h
	absMoveTo (DDDFF)V a
	acceptsFailure ()Z x_
	acceptsSuccess ()Z l_
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addDeltaMovement (Lnet/minecraft/world/phys/Vec3;)V h
	addPassenger (Lnet/minecraft/world/entity/Entity;)V p
	addTag (Ljava/lang/String;)Z a
	animateHurt (F)V m
	applyPistonMovementRestriction (Lnet/minecraft/core/Direction$Axis;D)D a
	awardKillScore (Lnet/minecraft/world/entity/Entity;ILnet/minecraft/world/damagesource/DamageSource;)V a
	baseTick ()V as
	blockPosition ()Lnet/minecraft/core/BlockPos; dm
	broadcastToPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z a
	calculateUpVector (FF)Lnet/minecraft/world/phys/Vec3; c
	calculateViewVector (FF)Lnet/minecraft/world/phys/Vec3; b
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z r
	canBeCollidedWith ()Z bz
	canBeHitByProjectile ()Z bs
	canChangeDimensions ()Z ct
	canCollideWith (Lnet/minecraft/world/entity/Entity;)Z h
	canControlVehicle ()Z bR
	canFreeze ()Z dA
	canRide (Lnet/minecraft/world/entity/Entity;)Z o
	canSpawnSprintParticle ()Z bl
	canSprint ()Z dF
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	checkBelowWorld ()V at
	checkDespawn ()V dy
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkInsideBlocks ()V aQ
	checkSlowFallDistance ()V cn
	checkSupportingBlock (ZLnet/minecraft/world/phys/Vec3;)V b
	chunkPosition ()Lnet/minecraft/world/level/ChunkPos; do
	clearFire ()V aA
	closerThan (Lnet/minecraft/world/entity/Entity;D)Z a
	closerThan (Lnet/minecraft/world/entity/Entity;DD)Z a
	collide (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	collideBoundingBox (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/Level;Ljava/util/List;)Lnet/minecraft/world/phys/Vec3; a
	collideWithShapes (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/List;)Lnet/minecraft/world/phys/Vec3; a
	copyPosition (Lnet/minecraft/world/entity/Entity;)V v
	couldAcceptPassenger ()Z bD
	countPlayerPassengers ()I cU
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; dd
	createHoverEvent ()Lnet/minecraft/network/chat/HoverEvent; cG
	damageSources ()Lnet/minecraft/world/damagesource/DamageSources; dN
	dampensVibrations ()Z aX
	defineSynchedData ()V c_
	discard ()V am
	dismountTo (DDD)V a
	dismountsUnderwater ()Z bQ
	displayFireAnimation ()Z cv
	distanceTo (Lnet/minecraft/world/entity/Entity;)F e
	distanceToSqr (DDD)D i
	distanceToSqr (Lnet/minecraft/world/entity/Entity;)D f
	distanceToSqr (Lnet/minecraft/world/phys/Vec3;)D f
	doEnchantDamageEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V a
	doWaterSplashEffect ()V bi
	ejectPassengers ()V bB
	extinguishFire ()V aF
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	findDimensionEntryPoint (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/portal/PortalInfo; a
	fireImmune ()Z aY
	fixupDimensions ()V cD
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;)V a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; dj
	getAirSupply ()I ci
	getAllSlots ()Ljava/lang/Iterable; bM
	getArmorSlots ()Ljava/lang/Iterable; bL
	getBbHeight ()F dh
	getBbWidth ()F dg
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getBlockJumpFactor ()F aK
	getBlockPosBelowThatAffectsMyMovement ()Lnet/minecraft/core/BlockPos; aI
	getBlockSpeedFactor ()F aL
	getBlockStateOn ()Lnet/minecraft/world/level/block/state/BlockState; bk
	getBlockStateOnLegacy ()Lnet/minecraft/world/level/block/state/BlockState; bj
	getBlockX ()I dq
	getBlockY ()I ds
	getBlockZ ()I dw
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; cH
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; i_
	getCollisionHorizontalEscapeVector (DDF)Lnet/minecraft/world/phys/Vec3; a
	getCommandSenderWorld ()Lnet/minecraft/world/level/Level; cK
	getControlledVehicle ()Lnet/minecraft/world/entity/Entity; da
	getControllingPassenger ()Lnet/minecraft/world/entity/LivingEntity; cN
	getCustomName ()Lnet/minecraft/network/chat/Component; af
	getDeltaMovement ()Lnet/minecraft/world/phys/Vec3; dp
	getDimensionChangingDelay ()I bJ
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDirection ()Lnet/minecraft/core/Direction; cE
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; Q_
	getEncodeId ()Ljava/lang/String; bw
	getEntityData ()Lnet/minecraft/network/syncher/SynchedEntityData; an
	getExitPortal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/border/WorldBorder;)Ljava/util/Optional; a
	getEyeHeight ()F cI
	getEyeHeight (Lnet/minecraft/world/entity/Pose;)F d
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getEyePosition ()Lnet/minecraft/world/phys/Vec3; br
	getEyePosition (F)Lnet/minecraft/world/phys/Vec3; j
	getEyeY ()D dv
	getFeetBlockState ()Lnet/minecraft/world/level/block/state/BlockState; dn
	getFireImmuneTicks ()I dc
	getFirstPassenger ()Lnet/minecraft/world/entity/Entity; cQ
	getFluidHeight (Lnet/minecraft/tags/TagKey;)D b
	getFluidJumpThreshold ()D df
	getForward ()Lnet/minecraft/world/phys/Vec3; bH
	getHandHoldingItemAngle (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/phys/Vec3; a
	getHandSlots ()Ljava/lang/Iterable; bK
	getId ()I aj
	getIndirectPassengers ()Ljava/lang/Iterable; cT
	getIndirectPassengersStream ()Ljava/util/stream/Stream; B
	getInputVector (Lnet/minecraft/world/phys/Vec3;FF)Lnet/minecraft/world/phys/Vec3; a
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cJ
	getLeashOffset (F)Lnet/minecraft/world/phys/Vec3; p
	getLightLevelDependentMagicValue ()F bo
	getLightProbePosition (F)Lnet/minecraft/world/phys/Vec3; k
	getLookAngle ()Lnet/minecraft/world/phys/Vec3; bF
	getMaxAirSupply ()I ch
	getMaxFallDistance ()I cu
	getMotionDirection ()Lnet/minecraft/core/Direction; cF
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aW
	getMyRidingOffset (Lnet/minecraft/world/entity/Entity;)F k
	getName ()Lnet/minecraft/network/chat/Component; ad
	getNameTagOffsetY ()F di
	getOnPos ()Lnet/minecraft/core/BlockPos; aJ
	getOnPos (F)Lnet/minecraft/core/BlockPos; d
	getOnPosLegacy ()Lnet/minecraft/core/BlockPos; aH
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getPassengerRidingPosition (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3; m
	getPassengers ()Ljava/util/List; cP
	getPassengersAndSelf ()Ljava/util/stream/Stream; cS
	getPercentFrozen ()F ck
	getPermissionLevel ()I F
	getPickRadius ()F bE
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dz
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; s_
	getPortalCooldown ()I av
	getPortalWaitTime ()I ax
	getPose ()Lnet/minecraft/world/entity/Pose; ap
	getPosition (F)Lnet/minecraft/world/phys/Vec3; l
	getPositionCodec ()Lnet/minecraft/network/protocol/game/VecDeltaCodec; ah
	getPrimaryStepSoundBlockPos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; e
	getRandomX (D)D d
	getRandomY ()D du
	getRandomZ (D)D g
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	getRemainingFireTicks ()I az
	getRemovalReason ()Lnet/minecraft/world/entity/Entity$RemovalReason; dI
	getRootVehicle ()Lnet/minecraft/world/entity/Entity; cW
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; q
	getRotationVector ()Lnet/minecraft/world/phys/Vec2; bG
	getScoreboardName ()Ljava/lang/String; cy
	getSelfAndPassengers ()Ljava/util/stream/Stream; cR
	getServer ()Lnet/minecraft/server/MinecraftServer; cL
	getSharedFlag (I)Z i
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; db
	getStringUUID ()Ljava/lang/String; cx
	getSwimHighSpeedSplashSound ()Lnet/minecraft/sounds/SoundEvent; aP
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aN
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aO
	getTags ()Ljava/util/Set; ak
	getTeam ()Lnet/minecraft/world/scores/PlayerTeam; cg
	getTeamColor ()I j_
	getTicksFrozen ()I cj
	getTicksRequiredToFreeze ()I cm
	getType ()Lnet/minecraft/world/entity/EntityType; ai
	getTypeName ()Lnet/minecraft/network/chat/Component; co
	getUUID ()Ljava/util/UUID; cw
	getUpVector (F)Lnet/minecraft/world/phys/Vec3; i
	getVehicle ()Lnet/minecraft/world/entity/Entity; cZ
	getViewScale ()D cA
	getViewVector (F)Lnet/minecraft/world/phys/Vec3; f
	getViewXRot (F)F g
	getViewYRot (F)F h
	getVisualRotationYInDegrees ()F dD
	getX ()D dr
	getX (D)D c
	getXRot ()F dE
	getY ()D dt
	getY (D)D e
	getYHeadRot ()F cp
	getYRot ()F dC
	getZ ()D dx
	getZ (D)D f
	handleDamageEvent (Lnet/minecraft/world/damagesource/DamageSource;)V c
	handleEntityEvent (B)V b
	handleInsidePortal (Lnet/minecraft/core/BlockPos;)V f
	handleNetherPortal ()V bI
	hasControllingPassenger ()Z cO
	hasCustomName ()Z ae
	hasExactlyOnePlayerPassenger ()Z cV
	hasGlowingTag ()Z cc
	hasIndirectPassenger (Lnet/minecraft/world/entity/Entity;)Z z
	hasPassenger (Ljava/util/function/Predicate;)Z a
	hasPassenger (Lnet/minecraft/world/entity/Entity;)Z x
	hasPermissions (I)Z l
	hasPose (Lnet/minecraft/world/entity/Pose;)Z c
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	ignoreExplosion (Lnet/minecraft/world/level/Explosion;)Z a
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	is (Lnet/minecraft/world/entity/Entity;)Z t
	isAlive ()Z bx
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z s
	isAlliedTo (Lnet/minecraft/world/scores/Team;)Z a
	isAlwaysTicking ()Z dL
	isAttackable ()Z cq
	isColliding (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isControlledByLocalInstance ()Z cX
	isCrouching ()Z bX
	isCurrentlyGlowing ()Z cd
	isCustomNameVisible ()Z cB
	isDescending ()Z bW
	isDiscrete ()Z bV
	isEffectiveAi ()Z cY
	isEyeInFluid (Lnet/minecraft/tags/TagKey;)Z a
	isFlapping ()Z aT
	isFree (DDD)Z g
	isFree (Lnet/minecraft/world/phys/AABB;)Z b
	isFreezing ()Z dB
	isFullyFrozen ()Z cl
	isHorizontalCollisionMinor (Lnet/minecraft/world/phys/Vec3;)Z c
	isIgnoringBlockTriggers ()Z r_
	isInBubbleColumn ()Z x
	isInLava ()Z bn
	isInLiquid ()Z bd
	isInRain ()Z u
	isInWall ()Z by
	isInWater ()Z aZ
	isInWaterOrBubble ()Z bc
	isInWaterOrRain ()Z ba
	isInWaterRainOrBubble ()Z bb
	isInvisible ()Z ce
	isInvisibleTo (Lnet/minecraft/world/entity/player/Player;)Z d
	isInvulnerable ()Z cr
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isNoGravity ()Z aV
	isOnFire ()Z bN
	isOnPortalCooldown ()Z aw
	isOnRails ()Z cf
	isPassenger ()Z bO
	isPassengerOfSameVehicle (Lnet/minecraft/world/entity/Entity;)Z y
	isPickable ()Z bt
	isPushable ()Z bu
	isPushedByFluid ()Z cz
	isRemoved ()Z dH
	isShiftKeyDown ()Z bS
	isSilent ()Z aU
	isSpectator ()Z P_
	isSprinting ()Z bY
	isStateClimbable (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	isSteppingCarefully ()Z bT
	isSupportedBy (Lnet/minecraft/core/BlockPos;)Z d
	isSuppressingBounce ()Z bU
	isSwimming ()Z bZ
	isUnderWater ()Z be
	isVehicle ()Z bP
	isVisuallyCrawling ()Z cb
	isVisuallySwimming ()Z ca
	kill ()V al
	killedEntity (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	lavaHurt ()V ay
	lerpHeadTo (FI)V a
	lerpMotion (DDD)V l
	lerpPositionAndRotationStep (IDDDDD)V a
	lerpTargetX ()D p_
	lerpTargetXRot ()F f_
	lerpTargetY ()D N_
	lerpTargetYRot ()F q_
	lerpTargetZ ()D O_
	lerpTo (DDDFFI)V a
	level ()Lnet/minecraft/world/level/Level; dM
	limitPistonMovement (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; d
	load (Lnet/minecraft/nbt/CompoundTag;)V g
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	makeBoundingBox ()Lnet/minecraft/world/phys/AABB; aq
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	markHurt ()V bq
	maxUpStep ()F dG
	mayInteract (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	maybeBackOffFromEdge (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/MoverType;)Lnet/minecraft/world/phys/Vec3; a
	mirror (Lnet/minecraft/world/level/block/Mirror;)F a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	moveRelative (FLnet/minecraft/world/phys/Vec3;)V a
	moveTo (DDD)V e
	moveTo (DDDFF)V b
	moveTo (Lnet/minecraft/core/BlockPos;FF)V a
	moveTo (Lnet/minecraft/world/phys/Vec3;)V e
	moveTowardsClosestSpace (DDD)V m
	newDoubleList ([D)Lnet/minecraft/nbt/ListTag; a
	newFloatList ([F)Lnet/minecraft/nbt/ListTag; a
	nextStep ()F aM
	onAboveBubbleCol (Z)V k
	onBelowWorld ()V aB
	onClientRemoval ()V ao
	onFlap ()V aS
	onGround ()Z aC
	onInsideBlock (Lnet/minecraft/world/level/block/state/BlockState;)V a
	onInsideBubbleColumn (Z)V l
	onPassengerTurned (Lnet/minecraft/world/entity/Entity;)V j
	onSyncedDataUpdated (Ljava/util/List;)V b
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onlyOpCanSetNbt ()Z cM
	pick (DFZ)Lnet/minecraft/world/phys/HitResult; a
	playAmethystStepSound ()V s
	playCombinationStepSounds (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	playEntityOnFireExtinguishedSound ()V aE
	playMuffledStepSound (Lnet/minecraft/world/level/block/state/BlockState;)V b
	playSound (Lnet/minecraft/sounds/SoundEvent;)V a
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	playSwimSound (F)V e
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	position ()Lnet/minecraft/world/phys/Vec3; dk
	positionRider (Lnet/minecraft/world/entity/Entity;)V i
	positionRider (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V a
	processFlappingMovement ()V aG
	processPortalCooldown ()V L
	push (DDD)V j
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reapplyPosition ()V ar
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	refreshDimensions ()V k_
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	removeAction (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; c
	removeAfterChangingDimensions ()V cs
	removePassenger (Lnet/minecraft/world/entity/Entity;)V q
	removeTag (Ljava/lang/String;)Z b
	removeVehicle ()V bC
	repositionEntityAfterLoad ()Z bv
	resetFallDistance ()V n
	restoreFrom (Lnet/minecraft/world/entity/Entity;)V w
	rideTick ()V t
	ridingOffset (Lnet/minecraft/world/entity/Entity;)F l
	rotate (Lnet/minecraft/world/level/block/Rotation;)F a
	save (Lnet/minecraft/nbt/CompoundTag;)Z e
	saveAsPassenger (Lnet/minecraft/nbt/CompoundTag;)Z d
	saveWithoutId (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; f
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	setAirSupply (I)V j
	setBoundingBox (Lnet/minecraft/world/phys/AABB;)V a
	setCustomName (Lnet/minecraft/network/chat/Component;)V b
	setCustomNameVisible (Z)V n
	setDeltaMovement (DDD)V o
	setDeltaMovement (Lnet/minecraft/world/phys/Vec3;)V g
	setGlowingTag (Z)V i
	setId (I)V e
	setInvisible (Z)V j
	setInvulnerable (Z)V m
	setIsInPowderSnow (Z)V o
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setLevelCallback (Lnet/minecraft/world/level/entity/EntityInLevelCallback;)V a
	setMaxUpStep (F)V t
	setNoGravity (Z)V e
	setOldPosAndRot ()V bp
	setOnGround (Z)V c
	setOnGroundWithKnownMovement (ZLnet/minecraft/world/phys/Vec3;)V a
	setPortalCooldown ()V au
	setPortalCooldown (I)V f
	setPos (DDD)V a_
	setPos (Lnet/minecraft/world/phys/Vec3;)V b
	setPosRaw (DDD)V p
	setPose (Lnet/minecraft/world/entity/Pose;)V b
	setRemainingFireTicks (I)V h
	setRemoved (Lnet/minecraft/world/entity/Entity$RemovalReason;)V b
	setRot (FF)V a
	setSecondsOnFire (I)V g
	setSharedFlag (IZ)V b
	setSharedFlagOnFire (Z)V a_
	setShiftKeyDown (Z)V f
	setSilent (Z)V d
	setSprinting (Z)V g
	setSwimming (Z)V h
	setTicksFrozen (I)V k
	setUUID (Ljava/util/UUID;)V a_
	setViewScale (D)V b
	setXRot (F)V s
	setYBodyRot (F)V o
	setYHeadRot (F)V n
	setYRot (F)V r
	shouldBeSaved ()Z dK
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
	shouldInformAdmins ()Z W_
	shouldPlayAmethystStepSound (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	shouldRender (DDD)Z k
	shouldRenderAtSqrDistance (D)Z a
	shouldShowName ()Z cC
	showVehicleHealth ()Z bA
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z u
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/item/ItemEntity; b
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnAtLocation (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnAtLocation (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnSprintParticle ()V bm
	startRiding (Lnet/minecraft/world/entity/Entity;)Z n
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
	stopRiding ()V ac
	stopSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V d
	syncPacketPositionCodec (DDD)V f
	teleportPassengers ()V z
	teleportRelative (DDD)V d
	teleportTo (DDD)V c
	teleportTo (Lnet/minecraft/server/level/ServerLevel;DDDLjava/util/Set;FF)Z a
	teleportToWithTicket (DDD)V n
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V l
	touchingUnloadedChunk ()Z de
	trackingPosition ()Lnet/minecraft/world/phys/Vec3; dl
	tryCheckInsideBlocks ()V aD
	turn (DD)V b
	unRide ()V ag
	unsetRemoved ()V dJ
	updateDynamicGameEventListener (Ljava/util/function/BiConsumer;)V a
	updateFluidHeightAndDoFluidPushing (Lnet/minecraft/tags/TagKey;D)Z a
	updateFluidOnEyes ()V y
	updateInWaterStateAndDoFluidPushing ()Z bg
	updateInWaterStateAndDoWaterCurrentPushing ()V bh
	updateSwimming ()V bf
	vibrationAndSoundEffectsFromBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZZLnet/minecraft/world/phys/Vec3;)Z a
	walkingStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	waterSwimSound ()V aR
net/minecraft/world/entity/Entity$MoveFunction blv$a
net/minecraft/world/entity/Entity$MovementEmission blv$b
	$VALUES g
	ALL d
	EVENTS c
	NONE a
	SOUNDS b
	events f
	sounds e
	$values ()[Lnet/minecraft/world/entity/Entity$MovementEmission; d
	emitsAnything ()Z a
	emitsEvents ()Z b
	emitsSounds ()Z c
net/minecraft/world/entity/Entity$RemovalReason blv$c
	$VALUES h
	CHANGED_DIMENSION e
	DISCARDED b
	KILLED a
	UNLOADED_TO_CHUNK c
	UNLOADED_WITH_PLAYER d
	destroy f
	save g
	$values ()[Lnet/minecraft/world/entity/Entity$RemovalReason; c
	shouldDestroy ()Z a
	shouldSave ()Z b
net/minecraft/world/entity/EntityDimensions blw
	fixed c
	height b
	width a
	fixed (FF)Lnet/minecraft/world/entity/EntityDimensions; c
	makeBoundingBox (DDD)Lnet/minecraft/world/phys/AABB; a
	makeBoundingBox (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; a
	scalable (FF)Lnet/minecraft/world/entity/EntityDimensions; b
	scale (F)Lnet/minecraft/world/entity/EntityDimensions; a
	scale (FF)Lnet/minecraft/world/entity/EntityDimensions; a
net/minecraft/world/entity/EntityEvent blx
	ARMORSTAND_WOBBLE E
	ATTACK_BLOCKED B
	BAD_OMEN_TRIGGERED M
	CANCEL_SHAKE_WETNESS Y
	CHEST_BREAK S
	DEATH b
	DOLPHIN_LOOKING_FOR_TREASURE H
	EAT_GRASS i
	END_RAM aa
	FEET_BREAK U
	FIREWORKS_EXPLODE p
	FISHING_ROD_REEL_IN D
	FOX_EAT N
	FULL_DEBUG_INFO v
	GUARDIAN_ATTACK_SOUND t
	HEAD_BREAK R
	HONEY_JUMP W
	HONEY_SLIDE V
	IN_LOVE_HEARTS q
	JUMP a
	LEGS_BREAK T
	LOVE_HEARTS k
	MAINHAND_BREAK P
	OFFER_FLOWER j
	OFFHAND_BREAK Q
	PERMISSION_LEVEL_ADMINS z
	PERMISSION_LEVEL_ALL w
	PERMISSION_LEVEL_GAMEMASTERS y
	PERMISSION_LEVEL_MODERATORS x
	PERMISSION_LEVEL_OWNERS A
	POOF ab
	RAVAGER_STUNNED I
	REDUCED_DEBUG_INFO u
	SHAKE_WETNESS g
	SHIELD_DISABLED C
	SILVERFISH_MERGE_ANIM s
	SNIFFER_DIGGING_SOUND ae
	SONIC_CHARGE ad
	SQUID_ANIM_SYNCH r
	START_ATTACKING c
	START_RAM Z
	STOP_ATTACKING d
	STOP_OFFER_FLOWER F
	SWAP_HANDS X
	TALISMAN_ACTIVATE G
	TAMING_FAILED e
	TAMING_SUCCEEDED f
	TELEPORT O
	TENDRILS_SHIVER ac
	TRUSTING_FAILED J
	TRUSTING_SUCCEEDED K
	USE_ITEM_COMPLETE h
	VILLAGER_ANGRY l
	VILLAGER_HAPPY m
	VILLAGER_SWEAT L
	WITCH_HAT_MAGIC n
	ZOMBIE_CONVERTING o
net/minecraft/world/entity/EntitySelector bly
	CAN_BE_COLLIDED_WITH g
	CONTAINER_ENTITY_SELECTOR d
	ENTITY_NOT_BEING_RIDDEN c
	ENTITY_STILL_ALIVE a
	LIVING_ENTITY_STILL_ALIVE b
	NO_CREATIVE_OR_SPECTATOR e
	NO_SPECTATORS f
	notRiding (Lnet/minecraft/world/entity/Entity;)Ljava/util/function/Predicate; b
	pushableBy (Lnet/minecraft/world/entity/Entity;)Ljava/util/function/Predicate; a
	withinDistance (DDDD)Ljava/util/function/Predicate; a
net/minecraft/world/entity/EntitySelector$MobCanWearArmorEntitySelector bly$a
	itemStack a
	test (Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/world/entity/EntityType blz
	ALLAY b
	AREA_EFFECT_CLOUD c
	ARMOR_STAND d
	ARROW e
	AXOLOTL f
	BAT g
	BEE h
	BLAZE i
	BLOCK_DISPLAY j
	BOAT k
	BREEZE l
	CAMEL m
	CAT n
	CAVE_SPIDER o
	CHEST_BOAT p
	CHEST_MINECART q
	CHICKEN r
	COD s
	COMMAND_BLOCK_MINECART t
	COW u
	CREEPER v
	DISPLAY_TRACKING_RANGE bB
	DOLPHIN w
	DONKEY x
	DRAGON_FIREBALL y
	DROWNED z
	EGG A
	ELDER_GUARDIAN B
	ENDERMAN F
	ENDERMITE G
	ENDER_DRAGON D
	ENDER_PEARL E
	END_CRYSTAL C
	ENTITY_TAG a
	EVOKER H
	EVOKER_FANGS I
	EXPERIENCE_BOTTLE J
	EXPERIENCE_ORB K
	EYE_OF_ENDER L
	FALLING_BLOCK M
	FIREBALL ah
	FIREWORK_ROCKET N
	FISHING_BOBBER bw
	FOX O
	FROG P
	FURNACE_MINECART Q
	GHAST R
	GIANT S
	GLOW_ITEM_FRAME T
	GLOW_SQUID U
	GOAT V
	GUARDIAN W
	HOGLIN X
	HOPPER_MINECART Y
	HORSE Z
	HUSK aa
	ILLUSIONER ab
	INTERACTION ac
	IRON_GOLEM ad
	ITEM ae
	ITEM_DISPLAY af
	ITEM_FRAME ag
	LEASH_KNOT ai
	LIGHTNING_BOLT aj
	LLAMA ak
	LLAMA_SPIT al
	LOGGER by
	MAGIC_HORSE_WIDTH bA
	MAGMA_CUBE am
	MARKER an
	MINECART ao
	MOOSHROOM ap
	MULE aq
	OCELOT ar
	PAINTING as
	PANDA at
	PARROT au
	PHANTOM av
	PIG aw
	PIGLIN ax
	PIGLIN_BRUTE ay
	PILLAGER az
	PLAYER bv
	POLAR_BEAR aA
	POTION aB
	PUFFERFISH aC
	RABBIT aD
	RAVAGER aE
	SALMON aF
	SHEEP aG
	SHULKER aH
	SHULKER_BULLET aI
	SILVERFISH aJ
	SKELETON aK
	SKELETON_HORSE aL
	SLIME aM
	SMALL_FIREBALL aN
	SNIFFER aO
	SNOWBALL aQ
	SNOW_GOLEM aP
	SPAWNER_MINECART aR
	SPECTRAL_ARROW aS
	SPIDER aT
	SQUID aU
	STRAY aV
	STRIDER aW
	TADPOLE aX
	TEXT_DISPLAY aY
	TNT aZ
	TNT_MINECART ba
	TRADER_LLAMA bb
	TRIDENT bc
	TROPICAL_FISH bd
	TURTLE be
	VEX bf
	VILLAGER bg
	VINDICATOR bh
	WANDERING_TRADER bi
	WARDEN bj
	WIND_CHARGE bk
	WITCH bl
	WITHER bm
	WITHER_SKELETON bn
	WITHER_SKULL bo
	WOLF bp
	ZOGLIN bq
	ZOMBIE br
	ZOMBIE_HORSE bs
	ZOMBIE_VILLAGER bt
	ZOMBIFIED_PIGLIN bu
	builtInRegistryHolder bz
	canSpawnFarFromPlayer bI
	category bD
	clientTrackingRange bJ
	description bM
	descriptionId bL
	dimensions bO
	factory bC
	fireImmune bH
	immuneTo bE
	lootTable bN
	requiredFeatures bP
	serialize bF
	summon bG
	updateInterval bK
	appendCustomEntityStackConfig (Ljava/util/function/Consumer;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Ljava/util/function/Consumer; b
	appendCustomNameConfig (Ljava/util/function/Consumer;Lnet/minecraft/world/item/ItemStack;)Ljava/util/function/Consumer; a
	appendDefaultStackConfig (Ljava/util/function/Consumer;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Ljava/util/function/Consumer; a
	builtInRegistryHolder ()Lnet/minecraft/core/Holder$Reference; r
	by (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; a
	byString (Ljava/lang/String;)Ljava/util/Optional; a
	canSerialize ()Z b
	canSpawnFarFromPlayer ()Z e
	canSummon ()Z c
	clientTrackingRange ()I o
	create (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	create (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Consumer;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; b
	create (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	createDefaultStackConfig (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Ljava/util/function/Consumer; a
	fireImmune ()Z d
	getAABB (DDD)Lnet/minecraft/world/phys/AABB; a
	getBaseClass ()Ljava/lang/Class; a
	getCategory ()Lnet/minecraft/world/entity/MobCategory; f
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; j
	getDescription ()Lnet/minecraft/network/chat/Component; h
	getDescriptionId ()Ljava/lang/String; g
	getDimensions ()Lnet/minecraft/world/entity/EntityDimensions; n
	getHeight ()F l
	getKey (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/resources/ResourceLocation; a
	getWidth ()F k
	getYOffset (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/phys/AABB;)D a
	is (Lnet/minecraft/core/HolderSet;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	isBlockDangerous (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	loadEntitiesRecursive (Ljava/util/List;Lnet/minecraft/world/level/Level;)Ljava/util/stream/Stream; a
	loadEntityRecursive (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;Ljava/util/function/Function;)Lnet/minecraft/world/entity/Entity; a
	loadStaticEntity (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; b
	register (Ljava/lang/String;Lnet/minecraft/world/entity/EntityType$Builder;)Lnet/minecraft/world/entity/EntityType; a
	requiredFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; m
	spawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Consumer;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; a
	toShortString ()Ljava/lang/String; i
	trackDeltas ()Z q
	tryCast (Ljava/lang/Object;)Ljava/lang/Object; a
	tryCast (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/Entity; a
	updateCustomEntityTag (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/nbt/CompoundTag;)V a
	updateInterval ()I p
net/minecraft/world/entity/EntityType$Builder blz$a
	canSpawnFarFromPlayer g
	category b
	clientTrackingRange h
	dimensions j
	factory a
	fireImmune f
	immuneTo c
	requiredFeatures k
	serialize d
	summon e
	updateInterval i
	build (Ljava/lang/String;)Lnet/minecraft/world/entity/EntityType; a
	canSpawnFarFromPlayer ()Lnet/minecraft/world/entity/EntityType$Builder; d
	clientTrackingRange (I)Lnet/minecraft/world/entity/EntityType$Builder; a
	createNothing (Lnet/minecraft/world/entity/MobCategory;)Lnet/minecraft/world/entity/EntityType$Builder; a
	fireImmune ()Lnet/minecraft/world/entity/EntityType$Builder; c
	immuneTo ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/entity/EntityType$Builder; a
	noSave ()Lnet/minecraft/world/entity/EntityType$Builder; b
	noSummon ()Lnet/minecraft/world/entity/EntityType$Builder; a
	of (Lnet/minecraft/world/entity/EntityType$EntityFactory;Lnet/minecraft/world/entity/MobCategory;)Lnet/minecraft/world/entity/EntityType$Builder; a
	requiredFeatures ([Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/entity/EntityType$Builder; a
	sized (FF)Lnet/minecraft/world/entity/EntityType$Builder; a
	updateInterval (I)Lnet/minecraft/world/entity/EntityType$Builder; b
net/minecraft/world/entity/EntityType$EntityFactory blz$b
net/minecraft/world/entity/EquipmentSlot bma
	$VALUES l
	CHEST e
	CODEC g
	FEET c
	HEAD f
	LEGS d
	MAINHAND a
	OFFHAND b
	filterFlag j
	index i
	name k
	type h
	$values ()[Lnet/minecraft/world/entity/EquipmentSlot; g
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/EquipmentSlot; a
	byTypeAndIndex (Lnet/minecraft/world/entity/EquipmentSlot$Type;I)Lnet/minecraft/world/entity/EquipmentSlot; a
	getFilterFlag ()I d
	getIndex ()I b
	getIndex (I)I a
	getName ()Ljava/lang/String; e
	getSerializedName ()Ljava/lang/String; c
	getType ()Lnet/minecraft/world/entity/EquipmentSlot$Type; a
	isArmor ()Z f
net/minecraft/world/entity/EquipmentSlot$Type bma$a
	$VALUES c
	ARMOR b
	HAND a
	$values ()[Lnet/minecraft/world/entity/EquipmentSlot$Type; a
net/minecraft/world/entity/ExperienceOrb bmb
	ENTITY_SCAN_PERIOD c
	LIFETIME b
	MAX_FOLLOW_DIST d
	ORB_GROUPS_PER_AREA e
	ORB_MERGE_DISTANCE f
	age g
	count j
	followingPlayer k
	health h
	value i
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	award (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;I)V a
	canMerge (Lnet/minecraft/world/entity/ExperienceOrb;)Z a
	canMerge (Lnet/minecraft/world/entity/ExperienceOrb;II)Z a
	defineSynchedData ()V c_
	doWaterSplashEffect ()V bi
	durabilityToXp (I)I c
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; dj
	getBlockPosBelowThatAffectsMyMovement ()Lnet/minecraft/core/BlockPos; aI
	getExperienceValue (I)I b
	getIcon ()I s
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aW
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; db
	getValue ()I q
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAttackable ()Z cq
	merge (Lnet/minecraft/world/entity/ExperienceOrb;)V b
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	repairPlayerItems (Lnet/minecraft/world/entity/player/Player;I)I a
	scanForEntities ()V u
	setUnderwaterMovement ()V w
	tick ()V l
	tryMergeToExisting (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;I)Z b
	xpToDurability (I)I d
net/minecraft/world/entity/FlyingMob bmc
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	onClimbable ()Z e_
	travel (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/GlowSquid bmd
	DATA_DARK_TICKS_REMAINING bX
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	checkGlowSquidSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	defineSynchedData ()V c_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getDarkTicksRemaining ()I A
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getInkParticle ()Lnet/minecraft/core/particles/ParticleOptions; u
	getSquirtSound ()Lnet/minecraft/sounds/SoundEvent; w
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setDarkTicks (I)V c
net/minecraft/world/entity/HasCustomInventoryScreen bme
	openCustomInventoryScreen (Lnet/minecraft/world/entity/player/Player;)V b
net/minecraft/world/entity/HumanoidArm bmf
	$VALUES h
	BY_ID d
	CODEC c
	LEFT a
	RIGHT b
	id e
	name f
	translationKey g
	$values ()[Lnet/minecraft/world/entity/HumanoidArm; f
	getId ()I a
	getKey ()Ljava/lang/String; b
	getOpposite ()Lnet/minecraft/world/entity/HumanoidArm; e
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/Interaction bmg
	DATA_HEIGHT_ID d
	DATA_RESPONSE_ID e
	DATA_WIDTH_ID c
	LOGGER b
	TAG_ATTACK h
	TAG_HEIGHT g
	TAG_INTERACTION i
	TAG_RESPONSE j
	TAG_WIDTH f
	attack k
	interaction l
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canBeHitByProjectile ()Z bs
	defineSynchedData ()V c_
	getDimensions ()Lnet/minecraft/world/entity/EntityDimensions; x
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHeight ()F u
	getLastAttacker ()Lnet/minecraft/world/entity/LivingEntity; V_
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; s_
	getResponse ()Z w
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; q
	getWidth ()F s
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isIgnoringBlockTriggers ()Z r_
	isPickable ()Z bt
	makeBoundingBox ()Lnet/minecraft/world/phys/AABB; aq
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setHeight (F)V b
	setResponse (Z)V a
	setWidth (F)V a
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z u
	tick ()V l
net/minecraft/world/entity/Interaction$PlayerAction bmg$a
	CODEC a
	player b
	timestamp c
	player ()Ljava/util/UUID; a
	timestamp ()J b
net/minecraft/world/entity/ItemBasedSteering bmh
	MAX_BOOST_TIME b
	MIN_BOOST_TIME a
	boostTime g
	boostTimeAccessor d
	boosting f
	entityData c
	hasSaddleAccessor e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	boost (Lnet/minecraft/util/RandomSource;)Z a
	boostFactor ()F c
	boostTimeTotal ()I e
	hasSaddle ()Z d
	onSynced ()V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	setSaddle (Z)V a
	tickBoost ()V b
net/minecraft/world/entity/ItemSteerable bmi
	boost ()Z a
net/minecraft/world/entity/LerpingModel bmj
	getModelRotationValues ()Ljava/util/Map; a
net/minecraft/world/entity/LightningBolt bmk
	DAMAGE_RADIUS d
	DETECTION_RADIUS e
	START_LIFE c
	blocksSetOnFire k
	cause i
	flashes g
	hitEntities j
	life f
	seed b
	visualOnly h
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	clearCopperOnLightningStrike (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V b
	defineSynchedData ()V c_
	getBlocksSetOnFire ()I s
	getCause ()Lnet/minecraft/server/level/ServerPlayer; q
	getHitEntities ()Ljava/util/stream/Stream; u
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; db
	getStrikePosition ()Lnet/minecraft/core/BlockPos; x
	powerLightningRod ()V w
	randomStepCleaningCopper (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; c
	randomWalkCleaningCopper (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;I)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setCause (Lnet/minecraft/server/level/ServerPlayer;)V b
	setVisualOnly (Z)V a
	shouldRenderAtSqrDistance (D)Z a
	spawnFire (I)V b
	tick ()V l
net/minecraft/world/entity/LivingEntity bml
	ARMOR_SLOTS h
	ARMOR_SLOT_OFFSET j
	BASE_JUMP_POWER bF
	DAMAGE_SOURCE_TIMEOUT bB
	DATA_ARROW_COUNT_ID bK
	DATA_EFFECT_AMBIENCE_ID bJ
	DATA_EFFECT_COLOR_ID bI
	DATA_HEALTH_ID bH
	DATA_LIVING_ENTITY_FLAGS t
	DATA_STINGER_COUNT_ID bL
	DEATH_DURATION o
	DEFAULT_BASE_GRAVITY n
	DEFAULT_EYE_HEIGHT u
	EQUIPMENT_SLOT_OFFSET i
	EXTRA_RENDER_CULLING_SIZE_WITH_BIG_HAT aE
	FREE_FALL_EVENTS_PER_ELYTRA_BREAK bE
	HAND_SLOTS g
	LIVING_ENTITY_FLAG_IS_USING q
	LIVING_ENTITY_FLAG_OFF_HAND r
	LIVING_ENTITY_FLAG_SPIN_ATTACK s
	LOGGER b
	MAX_LINE_OF_SIGHT_TEST_RANGE bG
	MIN_MOVEMENT_DISTANCE m
	PLAYER_HURT_EXPERIENCE_TIME l
	SLEEPING_DIMENSIONS v
	SLEEPING_POS_ID bM
	SPEED_MODIFIER_POWDER_SNOW_UUID e
	SPEED_MODIFIER_SOUL_SPEED_UUID d
	SPEED_MODIFIER_SPRINTING bA
	SWING_DURATION k
	TAG_ACTIVE_EFFECTS c
	TICKS_PER_ELYTRA_FREE_FALL_EVENT bD
	USE_ITEM_INTERVAL p
	WAIT_TICKS_BEFORE_ITEM_USE_EFFECTS bC
	absorptionAmount ca
	activeEffects bP
	animStep be
	animStepO bf
	attackAnim aO
	attackStrengthTicker aP
	attributes bN
	autoSpinAttackTicks by
	brain bz
	combatTracker bO
	dead ba
	deathScore bh
	deathTime aM
	discardFriction bS
	effectsDirty bT
	fallFlyTicks bx
	hurtDuration aL
	hurtTime aK
	invulnerableDuration aR
	jumping bj
	lastArmorItemStacks bR
	lastClimbablePos cc
	lastDamageSource cd
	lastDamageStamp ce
	lastHandItemStacks bQ
	lastHurt bi
	lastHurtByMob bU
	lastHurtByMobTimestamp bV
	lastHurtByPlayer aY
	lastHurtByPlayerTime aZ
	lastHurtMob bW
	lastHurtMobTimestamp bX
	lastPos cb
	lerpHeadSteps bu
	lerpSteps bn
	lerpX bo
	lerpXRot bs
	lerpY bp
	lerpYHeadRot bt
	lerpYRot br
	lerpZ bq
	noActionTime bb
	noJumpDelay bZ
	oAttackAnim aN
	oRun bc
	removeArrowTime aI
	removeStingerTime aJ
	rotA aT
	rotOffs bg
	run bd
	skipDropExperience ch
	speed bY
	swimAmount cf
	swimAmountO cg
	swingTime aH
	swinging aF
	swingingArm aG
	timeOffs aS
	useItem bv
	useItemRemaining bw
	walkAnimation aQ
	xxa bk
	yBodyRot aU
	yBodyRotO aV
	yHeadRot aW
	yHeadRotO aX
	yya bl
	zza bm
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEatEffect (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)V a
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)Z b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)Z b
	aiStep ()V d_
	animateHurt (F)V m
	areAllEffectsAmbient (Ljava/util/Collection;)Z c
	attackable ()Z fz
	baseTick ()V as
	blockUsingShield (Lnet/minecraft/world/entity/LivingEntity;)V d
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dP
	breakItem (Lnet/minecraft/world/item/ItemStack;)V i
	broadcastBreakEvent (Lnet/minecraft/world/InteractionHand;)V d
	broadcastBreakEvent (Lnet/minecraft/world/entity/EquipmentSlot;)V d
	calculateEntityAnimation (Z)V q
	calculateFallDamage (FF)I d
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	canAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;)Z a
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	canBeSeenAsEnemy ()Z eo
	canBeSeenByAnyone ()Z ep
	canBreatheUnderwater ()Z dR
	canChangeDimensions ()Z ct
	canDisableShield ()Z fG
	canFreeze ()Z dA
	canSpawnSoulSpeedParticle ()Z dS
	canStandOnFluid (Lnet/minecraft/world/level/material/FluidState;)Z a
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z f
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkAutoSpinAttack (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/phys/AABB;)V a
	checkBedExists ()Z N
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkTotemDeathProtection (Lnet/minecraft/world/damagesource/DamageSource;)Z h
	clearSleepingPos ()V fC
	collectEquipmentChanges ()Ljava/util/Map; G
	completeUsingItem ()V x
	createEquipmentSlotAccess (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/entity/SlotAccess; a
	createLivingAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; dQ
	createWitherRose (Lnet/minecraft/world/entity/LivingEntity;)V f
	decreaseAirSupply (I)I m
	defineSynchedData ()V c_
	detectEquipmentUpdates ()V E
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	dismountVehicle (Lnet/minecraft/world/entity/Entity;)V a
	doAutoAttackOnTouch (Lnet/minecraft/world/entity/LivingEntity;)V g
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	doPush (Lnet/minecraft/world/entity/Entity;)V D
	doesEmitEquipEvent (Lnet/minecraft/world/entity/EquipmentSlot;)Z a
	dropAllDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;)V g
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	dropEquipment ()V ey
	dropExperience ()V ez
	dropFromLootTable (Lnet/minecraft/world/damagesource/DamageSource;Z)V a
	eat (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	entityEventForEquipmentBreak (Lnet/minecraft/world/entity/EquipmentSlot;)B g
	equipmentHasChanged (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	forceAddEffect (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)V c
	getAbsorptionAmount ()F fk
	getActiveEffects ()Ljava/util/Collection; es
	getActiveEffectsMap ()Ljava/util/Map; et
	getArmorCoverPercentage ()F eV
	getArmorSlots ()Ljava/lang/Iterable; bL
	getArmorValue ()I eJ
	getArrowCount ()I eO
	getAttackAnim (F)F x
	getAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeBaseValue (Lnet/minecraft/core/Holder;)D b
	getAttributeBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D c
	getAttributeValue (Lnet/minecraft/core/Holder;)D a
	getAttributeValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D b
	getAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeMap; eR
	getBedOrientation ()Lnet/minecraft/core/Direction; fF
	getBlockSpeedFactor ()F aL
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; i_
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dO
	getCombatTracker ()Lnet/minecraft/world/damagesource/CombatTracker; eK
	getCurrentSwingDuration ()I B
	getDamageAfterArmorAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F d
	getDamageAfterMagicAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F e
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDismountPoses ()Lcom/google/common/collect/ImmutableList; fA
	getDrinkingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; c
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; d
	getEffect (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; b
	getEquipmentSlot (I)Lnet/minecraft/world/entity/EquipmentSlot; r
	getEquipmentSlotForItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/EquipmentSlot; h
	getExperienceReward ()I ee
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getFallDamageSound (I)Lnet/minecraft/sounds/SoundEvent; d
	getFallFlyingTicks ()I fx
	getFallSounds ()Lnet/minecraft/world/entity/LivingEntity$Fallsounds; eG
	getFluidFallingAdjustedMovement (DZLnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	getFlyingSpeed ()F fe
	getFrictionInfluencedSpeed (F)F A
	getHealth ()F ev
	getHitbox ()Lnet/minecraft/world/phys/AABB; eF
	getHurtDir ()F eE
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; c
	getItemInHand (Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/item/ItemStack; b
	getJumpBoostPower ()F fa
	getJumpPower ()F eZ
	getKillCredit ()Lnet/minecraft/world/entity/LivingEntity; eL
	getLastArmorItem (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; e
	getLastAttacker ()Lnet/minecraft/world/entity/LivingEntity; V_
	getLastClimbablePos ()Ljava/util/Optional; eH
	getLastDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; ex
	getLastHandItem (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; f
	getLastHurtByMob ()Lnet/minecraft/world/entity/LivingEntity; eh
	getLastHurtByMobTimestamp ()I ei
	getLastHurtMob ()Lnet/minecraft/world/entity/LivingEntity; ej
	getLastHurtMobTimestamp ()I ek
	getLocalBoundsForPose (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/phys/AABB; e
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; eA
	getLootTableSeed ()J eB
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; fm
	getMainHandItem ()Lnet/minecraft/world/item/ItemStack; eT
	getMaxAbsorption ()F eN
	getMaxHeadRotationRelativeToBody ()F fg
	getMaxHealth ()F eM
	getMobType ()Lnet/minecraft/world/entity/MobType; eS
	getMyRidingOffset (Lnet/minecraft/world/entity/Entity;)F k
	getNoActionTime ()I el
	getOffhandItem ()Lnet/minecraft/world/item/ItemStack; eU
	getPassengerRidingPosition (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3; m
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; g
	getRandom ()Lnet/minecraft/util/RandomSource; eg
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	getRiddenInput (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; b
	getRiddenSpeed (Lnet/minecraft/world/entity/player/Player;)F e
	getScale ()F dZ
	getSleepingPos ()Ljava/util/Optional; fB
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	getSoundVolume ()F eW
	getSpeed ()F ff
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStingerCount ()I eP
	getSwimAmount (F)F a
	getTicksUsingItem ()I fr
	getUseItem ()Lnet/minecraft/world/item/ItemStack; fp
	getUseItemRemainingTicks ()I fq
	getUsedItemHand ()Lnet/minecraft/world/InteractionHand; fo
	getViewYRot (F)F h
	getVisibilityPercent (Lnet/minecraft/world/entity/Entity;)D B
	getVisualRotationYInDegrees ()F dD
	getVoicePitch ()F eX
	getWaterSlowDown ()F fd
	getYHeadRot ()F cp
	goDownInWater ()V fc
	handleDamageEvent (Lnet/minecraft/world/damagesource/DamageSource;)V c
	handleEntityEvent (B)V b
	handleEquipmentChanges (Ljava/util/Map;)V b
	handleHandSwap (Ljava/util/Map;)V a
	handleOnClimbable (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; j
	handleRelativeFrictionAndCalculateMovement (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	hasEffect (Lnet/minecraft/world/effect/MobEffect;)Z a
	hasItemInSlot (Lnet/minecraft/world/entity/EquipmentSlot;)Z b
	hasLineOfSight (Lnet/minecraft/world/entity/Entity;)Z E
	heal (F)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F)V b
	hurtCurrentlyUsedShield (F)V u
	hurtHelmet (Lnet/minecraft/world/damagesource/DamageSource;F)V c
	increaseAirSupply (I)I n
	indicateDamage (DD)V a
	internalSetAbsorptionAmount (F)V z
	isAffectedByFluids ()Z ea
	isAffectedByPotions ()Z fy
	isAlive ()Z bx
	isAlwaysExperienceDropper ()Z ef
	isAutoSpinAttack ()Z fj
	isBaby ()Z o_
	isBlocking ()Z fu
	isCurrentlyGlowing ()Z cd
	isDamageSourceBlocked (Lnet/minecraft/world/damagesource/DamageSource;)Z f
	isDeadOrDying ()Z ew
	isFallFlying ()Z fw
	isHolding (Ljava/util/function/Predicate;)Z b
	isHolding (Lnet/minecraft/world/item/Item;)Z b
	isImmobile ()Z eY
	isInWall ()Z by
	isInvertedHealAndHarm ()Z eu
	isPickable ()Z bt
	isPushable ()Z bu
	isSensitiveToWater ()Z fh
	isSleeping ()Z fD
	isSuppressingSlidingDownLadder ()Z fv
	isUsingItem ()Z fn
	isVisuallySwimming ()Z ca
	jumpFromGround ()V fb
	jumpInLiquid (Lnet/minecraft/tags/TagKey;)V c
	kill ()V al
	knockback (DDD)V q
	lerpHeadRotationStep (ID)V a
	lerpHeadTo (FI)V a
	lerpTargetX ()D p_
	lerpTargetXRot ()F f_
	lerpTargetY ()D N_
	lerpTargetYRot ()F q_
	lerpTargetZ ()D O_
	lerpTo (DDDFFI)V a
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	makePoofParticles ()V C
	maxUpStep ()F dG
	onAttributeUpdated (Lnet/minecraft/world/entity/ai/attributes/Attribute;)V d
	onBelowWorld ()V aB
	onChangedBlock (Lnet/minecraft/core/BlockPos;)V c
	onClimbable ()Z e_
	onEffectAdded (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)V a
	onEffectRemoved (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	onEffectUpdated (Lnet/minecraft/world/effect/MobEffectInstance;ZLnet/minecraft/world/entity/Entity;)V a
	onEnterCombat ()V g_
	onEquipItem (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	onItemPickup (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	onLeaveCombat ()V h_
	onSoulSpeedBlock ()Z dU
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playBlockFallSound ()V eI
	playHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)V e
	push (Lnet/minecraft/world/entity/Entity;)V g
	pushEntities ()V M_
	randomTeleport (DDDZ)Z b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	refreshDirtyAttributes ()V y
	releaseUsingItem ()V fs
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	removeAllEffects ()Z er
	removeEffect (Lnet/minecraft/world/effect/MobEffect;)Z d
	removeEffectNoUpdate (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; c
	removeEffectParticles ()V eq
	removeFrost ()V dX
	removeSoulSpeed ()V dV
	resetForwardDirectionOfRelativePortalPosition (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; i
	rideTick ()V t
	sendEffectToPassengers (Lnet/minecraft/world/effect/MobEffectInstance;)V d
	serverAiStep ()V fi
	setAbsorptionAmount (F)V y
	setArrowCount (I)V p
	setDiscardFriction (Z)V p
	setHealth (F)V c
	setItemInHand (Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setJumping (Z)V r
	setLastArmorItem (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V b
	setLastHandItem (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V c
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setLastHurtByPlayer (Lnet/minecraft/world/entity/player/Player;)V c
	setLastHurtMob (Lnet/minecraft/world/entity/Entity;)V A
	setLivingEntityFlag (IZ)V c
	setNoActionTime (I)V o
	setPosToBed (Lnet/minecraft/core/BlockPos;)V a
	setRecordPlayingNearby (Lnet/minecraft/core/BlockPos;Z)V a
	setSleepingPos (Lnet/minecraft/core/BlockPos;)V g
	setSpeed (F)V w
	setSprinting (Z)V g
	setStingerCount (I)V q
	setYBodyRot (F)V o
	setYHeadRot (F)V n
	shouldDiscardFriction ()Z em
	shouldDropExperience ()Z ec
	shouldDropLoot ()Z ed
	shouldRemoveSoulSpeed (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	shouldShowName ()Z cC
	shouldTriggerItemUseEffects ()Z K
	skipDropExperience ()V eC
	spawnItemParticles (Lnet/minecraft/world/item/ItemStack;I)V a
	spawnSoulSpeedParticle ()V dT
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	startUsingItem (Lnet/minecraft/world/InteractionHand;)V c
	stopRiding ()V ac
	stopSleeping ()V fE
	stopUsingItem ()V ft
	swapHandItems ()V D
	swing (Lnet/minecraft/world/InteractionHand;)V a
	swing (Lnet/minecraft/world/InteractionHand;Z)V a
	take (Lnet/minecraft/world/entity/Entity;I)V a
	tick ()V l
	tickDeath ()V eb
	tickEffects ()V en
	tickHeadTurn (FF)F e
	tickRidden (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)V a
	trapdoorUsableAsLadder (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z c
	travel (Lnet/minecraft/world/phys/Vec3;)V a
	travelRidden (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)V c
	triggerItemUseEffects (Lnet/minecraft/world/item/ItemStack;I)V b
	tryAddFrost ()V dY
	tryAddSoulSpeed ()V dW
	updateEffectVisibility ()V fl
	updateFallFlying ()V H
	updateGlowingStatus ()V u
	updateInvisibilityStatus ()V J
	updateSwimAmount ()V M
	updateSwingTime ()V eQ
	updateUsingItem (Lnet/minecraft/world/item/ItemStack;)V a
	updateWalkAnimation (F)V v
	updatingUsingItem ()V I
	verifyEquippedItem (Lnet/minecraft/world/item/ItemStack;)V e
	wasExperienceConsumed ()Z eD
	wouldNotSuffocateAtTargetPose (Lnet/minecraft/world/entity/Pose;)Z f
net/minecraft/world/entity/LivingEntity$Fallsounds bml$a
	big b
	small a
	big ()Lnet/minecraft/sounds/SoundEvent; b
	small ()Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/world/entity/Marker bmm
	DATA_TAG b
	data c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addPassenger (Lnet/minecraft/world/entity/Entity;)V p
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z r
	couldAcceptPassenger ()Z bD
	defineSynchedData ()V c_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; dj
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; s_
	isIgnoringBlockTriggers ()Z r_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	tick ()V l
net/minecraft/world/entity/Mob bmn
	DATA_MOB_FLAGS_ID b
	DEFAULT_ATTACK_REACH bT
	DEFAULT_EQUIPMENT_DROP_CHANCE bF
	ITEM_PICKUP_REACH bS
	LEASH_TAG bE
	MAX_ENCHANTED_ARMOR_CHANCE bC
	MAX_ENCHANTED_WEAPON_CHANCE bD
	MAX_PICKUP_LOOT_CHANCE bB
	MAX_WEARING_ARMOR_CHANCE bA
	MOB_FLAG_AGGRESSIVE e
	MOB_FLAG_LEFTHANDED d
	MOB_FLAG_NO_AI c
	PICKUP_REACH f
	PRESERVE_ITEM_DROP_CHANCE bG
	UPDATE_GOAL_SELECTOR_EVERY_N_TICKS bH
	ambientSoundTime bI
	armorDropChances bR
	armorItems bY
	bodyRotationControl bU
	canPickUpLoot bZ
	delayedLeashHolderId cf
	goalSelector bO
	handDropChances bQ
	handItems bX
	jumpControl bM
	leashHolder ce
	leashInfoTag cg
	lookControl bK
	lootTable cc
	lootTableSeed cd
	moveControl bL
	navigation bN
	pathfindingMalus cb
	persistenceRequired ca
	restrictCenter ch
	restrictRadius ci
	sensing bW
	target bV
	targetSelector bP
	xpReward bJ
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	ate ()V P
	baseTick ()V as
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z j
	canPickUpLoot ()Z fK
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	canReplaceEqualItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z f
	checkAndHandleImportantInteractions (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; c
	checkDespawn ()V dy
	checkMobSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkSpawnRules (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;)Z a
	clearRestriction ()V fP
	convertTo (Lnet/minecraft/world/entity/EntityType;Z)Lnet/minecraft/world/entity/Mob; a
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; H
	createMobAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; C
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	dropFromLootTable (Lnet/minecraft/world/damagesource/DamageSource;Z)V a
	dropLeash (ZZ)V a
	enchantSpawnedArmor (Lnet/minecraft/util/RandomSource;FLnet/minecraft/world/entity/EquipmentSlot;)V a
	enchantSpawnedWeapon (Lnet/minecraft/util/RandomSource;F)V a
	equipItemIfPossible (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; i
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getAmbientSoundInterval ()I Q
	getArmorSlots ()Ljava/lang/Iterable; bL
	getAttackBoundingBox ()Lnet/minecraft/world/phys/AABB; fX
	getControllingPassenger ()Lnet/minecraft/world/entity/LivingEntity; cN
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; U
	getEquipmentDropChance (Lnet/minecraft/world/entity/EquipmentSlot;)F f
	getEquipmentForSlot (Lnet/minecraft/world/entity/EquipmentSlot;I)Lnet/minecraft/world/item/Item; a
	getExperienceReward ()I ee
	getHandSlots ()Ljava/lang/Iterable; bK
	getHeadRotSpeed ()I fH
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; c
	getJumpControl ()Lnet/minecraft/world/entity/ai/control/JumpControl; M
	getLeashHolder ()Lnet/minecraft/world/entity/Entity; fT
	getLookControl ()Lnet/minecraft/world/entity/ai/control/LookControl; I
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; eA
	getLootTableSeed ()J eB
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; fm
	getMaxFallDistance ()I cu
	getMaxHeadXRot ()I aa
	getMaxHeadYRot ()I ab
	getMaxSpawnClusterSize ()I fI
	getMoveControl ()Lnet/minecraft/world/entity/ai/control/MoveControl; K
	getNavigation ()Lnet/minecraft/world/entity/ai/navigation/PathNavigation; N
	getPathfindingMalus (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)F a
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dz
	getPickupReach ()Lnet/minecraft/core/Vec3i; V
	getRestrictCenter ()Lnet/minecraft/core/BlockPos; fN
	getRestrictRadius ()F fO
	getSensing ()Lnet/minecraft/world/entity/ai/sensing/Sensing; O
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; q
	handleEntityEvent (B)V b
	hasRestriction ()Z fQ
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAggressive ()Z fW
	isEffectiveAi ()Z cY
	isLeashed ()Z fS
	isLeftHanded ()Z fV
	isMaxGroupSizeReached (I)Z d
	isNoAi ()Z fU
	isPersistenceRequired ()Z fL
	isSunBurnTick ()Z fY
	isWithinMeleeAttackRange (Lnet/minecraft/world/entity/LivingEntity;)Z i
	isWithinRestriction ()Z fM
	isWithinRestriction (Lnet/minecraft/core/BlockPos;)Z a
	jumpInLiquid (Lnet/minecraft/tags/TagKey;)V c
	lookAt (Lnet/minecraft/world/entity/Entity;FF)V a
	maybeDisableShield (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onOffspringSpawnedFromEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;)V a
	onPathfindingDone ()V G
	onPathfindingStart ()V E
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playAmbientSound ()V R
	playHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)V e
	populateDefaultEquipmentEnchantments (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	removeAfterChangingDimensions ()V cs
	removeAllGoals (Ljava/util/function/Predicate;)V c
	removeFreeWill ()V fZ
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z W
	resetAmbientSoundTime ()V u
	restoreLeashFromSave ()V ga
	restrictTo (Lnet/minecraft/core/BlockPos;I)V a
	rotlerp (FFF)F a
	sendDebugPackets ()V Y
	serverAiStep ()V fi
	setAggressive (Z)V v
	setBaby (Z)V a
	setCanPickUpLoot (Z)V s
	setDelayedLeashHolderId (I)V r
	setDropChance (Lnet/minecraft/world/entity/EquipmentSlot;F)V a
	setGuaranteedDrop (Lnet/minecraft/world/entity/EquipmentSlot;)V e
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setItemSlotAndDropWhenKilled (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V b
	setLeashedTo (Lnet/minecraft/world/entity/Entity;Z)V b
	setLeftHanded (Z)V u
	setNoAi (Z)V t
	setPathfindingMalus (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;F)V a
	setPersistenceRequired ()V fJ
	setSpeed (F)V w
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	setXxa (F)V C
	setYya (F)V B
	setZza (F)V A
	shouldDespawnInPeaceful ()Z X
	shouldPassengersInheritMalus ()Z D
	spawnAnim ()V S
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	tick ()V l
	tickHeadTurn (FF)F e
	tickLeash ()V fR
	updateControlFlags ()V T
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z k
net/minecraft/world/entity/MobCategory bmo
	$VALUES p
	AMBIENT c
	AXOLOTLS d
	CODEC i
	CREATURE b
	MISC h
	MONSTER a
	UNDERGROUND_WATER_CREATURE e
	WATER_AMBIENT g
	WATER_CREATURE f
	despawnDistance o
	isFriendly k
	isPersistent l
	max j
	name m
	noDespawnDistance n
	$values ()[Lnet/minecraft/world/entity/MobCategory; h
	getDespawnDistance ()I f
	getMaxInstancesPerChunk ()I b
	getName ()Ljava/lang/String; a
	getNoDespawnDistance ()I g
	getSerializedName ()Ljava/lang/String; c
	isFriendly ()Z d
	isPersistent ()Z e
net/minecraft/world/entity/MobSpawnType bmp
	$VALUES r
	BREEDING e
	BUCKET l
	CHUNK_GENERATION b
	COMMAND n
	CONVERSION i
	DISPENSER o
	EVENT h
	JOCKEY g
	MOB_SUMMONED f
	NATURAL a
	PATROL p
	REINFORCEMENT j
	SPAWNER c
	SPAWN_EGG m
	STRUCTURE d
	TRIAL_SPAWNER q
	TRIGGERED k
	$values ()[Lnet/minecraft/world/entity/MobSpawnType; a
	ignoresLightRequirements (Lnet/minecraft/world/entity/MobSpawnType;)Z b
	isSpawner (Lnet/minecraft/world/entity/MobSpawnType;)Z a
net/minecraft/world/entity/MobType bmq
	ARTHROPOD c
	ILLAGER d
	UNDEAD b
	UNDEFINED a
	WATER e
net/minecraft/world/entity/MoverType bmr
	$VALUES f
	PISTON c
	PLAYER b
	SELF a
	SHULKER e
	SHULKER_BOX d
	$values ()[Lnet/minecraft/world/entity/MoverType; a
net/minecraft/world/entity/NeutralMob bms
	TAG_ANGER_TIME b_
	TAG_ANGRY_AT c_
	addPersistentAngerSaveData (Lnet/minecraft/nbt/CompoundTag;)V c
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	forgetCurrentTargetAndRefreshUniversalAnger ()V ab_
	getLastHurtByMob ()Lnet/minecraft/world/entity/LivingEntity; eh
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; q
	isAngry ()Z aa_
	isAngryAt (Lnet/minecraft/world/entity/LivingEntity;)Z a_
	isAngryAtAllPlayers (Lnet/minecraft/world/level/Level;)Z a_
	playerDied (Lnet/minecraft/world/entity/player/Player;)V a_
	readPersistentAngerSaveData (Lnet/minecraft/world/level/Level;Lnet/minecraft/nbt/CompoundTag;)V a
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setLastHurtByPlayer (Lnet/minecraft/world/entity/player/Player;)V c
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	startPersistentAngerTimer ()V c
	stopBeingAngry ()V X_
	updatePersistentAnger (Lnet/minecraft/server/level/ServerLevel;Z)V a
net/minecraft/world/entity/OwnableEntity bmt
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; R_
	getOwnerUUID ()Ljava/util/UUID; d
	level ()Lnet/minecraft/world/level/EntityGetter; e
net/minecraft/world/entity/PathfinderMob bmu
	DEFAULT_WALK_TARGET_VALUE bS
	checkSpawnRules (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;)Z a
	followLeashSpeed ()D gd
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;)F h
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isPanicking ()Z gb
	isPathFinding ()Z ga
	onLeashDistance (F)V D
	shouldStayCloseToLeashHolder ()Z gc
	tickLeash ()V fR
net/minecraft/world/entity/PlayerRideable bmv
net/minecraft/world/entity/PlayerRideableJumping bmw
	canJump ()Z a
	getJumpCooldown ()I ad_
	handleStartJump (I)V c
	handleStopJump ()V b
	onPlayerJump (I)V b
net/minecraft/world/entity/Pose bmx
	$VALUES s
	CROAKING i
	CROUCHING f
	DIGGING o
	DYING h
	EMERGING n
	FALL_FLYING b
	INHALING r
	LONG_JUMPING g
	ROARING l
	SHOOTING q
	SITTING k
	SLEEPING c
	SLIDING p
	SNIFFING m
	SPIN_ATTACK e
	STANDING a
	SWIMMING d
	USING_TONGUE j
	$values ()[Lnet/minecraft/world/entity/Pose; a
net/minecraft/world/entity/PowerableMob bmy
	isPowered ()Z a
net/minecraft/world/entity/RelativeMovement bmz
	$VALUES i
	ALL f
	ROTATION g
	X a
	X_ROT e
	Y b
	Y_ROT d
	Z c
	bit h
	$values ()[Lnet/minecraft/world/entity/RelativeMovement; b
	getMask ()I a
	isSet (I)Z b
	pack (Ljava/util/Set;)I a
	unpack (I)Ljava/util/Set; a
net/minecraft/world/entity/ReputationEventHandler bna
	onReputationEventFrom (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/entity/Saddleable bnb
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	getSaddleSoundEvent ()Lnet/minecraft/sounds/SoundEvent; Z_
	isSaddleable ()Z g
	isSaddled ()Z i
net/minecraft/world/entity/Shearable bnc
	readyForShearing ()Z a
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/SlotAccess bnd
	NULL b
	forContainer (Lnet/minecraft/world/Container;I)Lnet/minecraft/world/entity/SlotAccess; a
	forContainer (Lnet/minecraft/world/Container;ILjava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; a
	forEquipmentSlot (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/entity/SlotAccess; a
	forEquipmentSlot (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; a
	get ()Lnet/minecraft/world/item/ItemStack; a
	set (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/entity/SpawnGroupData bne
net/minecraft/world/entity/SpawnPlacements bnf
	DATA_BY_TYPE a
	checkSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	getHeightmapType (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; b
	getPlacementType (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/SpawnPlacements$Type; a
	register (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/entity/SpawnPlacements$Type;Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/entity/SpawnPlacements$SpawnPredicate;)V a
net/minecraft/world/entity/SpawnPlacements$Data bnf$a
	heightMap a
	placement b
	predicate c
net/minecraft/world/entity/SpawnPlacements$SpawnPredicate bnf$b
net/minecraft/world/entity/SpawnPlacements$Type bnf$c
	$VALUES e
	IN_LAVA d
	IN_WATER b
	NO_RESTRICTIONS c
	ON_GROUND a
	$values ()[Lnet/minecraft/world/entity/SpawnPlacements$Type; a
net/minecraft/world/entity/TamableAnimal bng
	DATA_FLAGS_ID bT
	DATA_OWNERUUID_ID bU
	orderedToSit bW
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	defineSynchedData ()V c_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getOwnerUUID ()Ljava/util/UUID; d
	getTeam ()Lnet/minecraft/world/scores/PlayerTeam; cg
	handleEntityEvent (B)V b
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z s
	isInSittingPose ()Z A
	isOrderedToSit ()Z ge
	isOwnedBy (Lnet/minecraft/world/entity/LivingEntity;)Z j
	isTame ()Z u
	level ()Lnet/minecraft/world/level/EntityGetter; e
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTameGoals ()V w
	setInSittingPose (Z)V y
	setOrderedToSit (Z)V z
	setOwnerUUID (Ljava/util/UUID;)V b
	setTame (Z)V x
	spawnTamingParticles (Z)V w
	tame (Lnet/minecraft/world/entity/player/Player;)V f
	wantsToAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/Targeting bnh
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; q
net/minecraft/world/entity/TraceableEntity bni
	getOwner ()Lnet/minecraft/world/entity/Entity; w
net/minecraft/world/entity/VariantHolder bnj
	getVariant ()Ljava/lang/Object; c
	setVariant (Ljava/lang/Object;)V a
net/minecraft/world/entity/WalkAnimationState bnk
	position c
	speed b
	speedOld a
	isMoving ()Z c
	position ()F b
	position (F)F c
	setSpeed (F)V a
	speed ()F a
	speed (F)F b
	update (FF)V a
net/minecraft/world/entity/ai/Brain bnl
	LOGGER a
	SCHEDULE_UPDATE_DELAY c
	activeActivities k
	activityMemoriesToEraseWhenStopped i
	activityRequirements h
	availableBehaviorsByPriority f
	codec b
	coreActivities j
	defaultActivity l
	lastScheduleUpdate m
	memories d
	schedule g
	sensors e
	activityRequirementsAreMet (Lnet/minecraft/world/entity/schedule/Activity;)Z f
	addActivity (Lnet/minecraft/world/entity/schedule/Activity;ILcom/google/common/collect/ImmutableList;)V a
	addActivity (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;)V a
	addActivityAndRemoveMemoriesWhenStopped (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;Ljava/util/Set;)V a
	addActivityAndRemoveMemoryWhenStopped (Lnet/minecraft/world/entity/schedule/Activity;ILcom/google/common/collect/ImmutableList;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V a
	addActivityWithConditions (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V a
	checkMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryStatus;)Z a
	clearMemories ()V a
	codec (Ljava/util/Collection;Ljava/util/Collection;)Lcom/mojang/serialization/Codec; b
	copyWithoutBehaviors ()Lnet/minecraft/world/entity/ai/Brain; i
	createPriorityPairs (ILcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList; a
	eraseMemoriesForOtherActivitesThan (Lnet/minecraft/world/entity/schedule/Activity;)V e
	eraseMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V b
	forgetOutdatedMemories ()V k
	getActiveActivities ()Ljava/util/Set; d
	getActiveNonCoreActivity ()Ljava/util/Optional; g
	getMemories ()Ljava/util/Map; b
	getMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; c
	getMemoryInternal (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; d
	getRunningBehaviors ()Ljava/util/List; e
	getSchedule ()Lnet/minecraft/world/entity/schedule/Schedule; c
	getTimeUntilExpiry (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)J e
	hasMemoryValue (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Z a
	isActive (Lnet/minecraft/world/entity/schedule/Activity;)Z c
	isEmptyCollection (Ljava/lang/Object;)Z a
	isMemoryValue (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;)Z b
	memories ()Ljava/util/stream/Stream; j
	provider (Ljava/util/Collection;Ljava/util/Collection;)Lnet/minecraft/world/entity/ai/Brain$Provider; a
	removeAllBehaviors ()V h
	serializeStart (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult; a
	setActiveActivity (Lnet/minecraft/world/entity/schedule/Activity;)V d
	setActiveActivityIfPossible (Lnet/minecraft/world/entity/schedule/Activity;)V a
	setActiveActivityToFirstValid (Ljava/util/List;)V a
	setCoreActivities (Ljava/util/Set;)V a
	setDefaultActivity (Lnet/minecraft/world/entity/schedule/Activity;)V b
	setMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;)V a
	setMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)V a
	setMemoryInternal (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)V b
	setMemoryWithExpiry (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;J)V a
	setSchedule (Lnet/minecraft/world/entity/schedule/Schedule;)V a
	startEachNonRunningBehavior (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V d
	stopAll (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	tickEachRunningBehavior (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V e
	tickSensors (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V c
	updateActivityFromSchedule (JJ)V a
	useDefaultActivity ()V f
net/minecraft/world/entity/ai/Brain$MemoryValue bnl$a
	type a
	value b
	createUnchecked (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/Brain$MemoryValue; a
	serialize (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)V a
	setMemoryInternal (Lnet/minecraft/world/entity/ai/Brain;)V a
net/minecraft/world/entity/ai/Brain$Provider bnl$b
	codec c
	memoryTypes a
	sensorTypes b
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
net/minecraft/world/entity/ai/attributes/Attribute bnm
	MAX_NAME_LENGTH a
	defaultValue b
	descriptionId d
	syncable c
	getDefaultValue ()D a
	getDescriptionId ()Ljava/lang/String; c
	isClientSyncable ()Z b
	sanitizeValue (D)D a
	setSyncable (Z)Lnet/minecraft/world/entity/ai/attributes/Attribute; a
net/minecraft/world/entity/ai/attributes/AttributeInstance bnn
	attribute a
	baseValue e
	cachedValue g
	dirty f
	modifierById c
	modifiersByOperation b
	onDirty h
	permanentModifiers d
	addModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V d
	addPermanentModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V c
	addTransientModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V b
	calculateValue ()D h
	getAttribute ()Lnet/minecraft/world/entity/ai/attributes/Attribute; a
	getBaseValue ()D b
	getModifier (Ljava/util/UUID;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; a
	getModifiers ()Ljava/util/Set; c
	getModifiers (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/util/Set; a
	getModifiersOrEmpty (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/util/Collection; b
	getValue ()D f
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)Z a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeModifier (Ljava/util/UUID;)V b
	removeModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V e
	removeModifiers ()V e
	removePermanentModifier (Ljava/util/UUID;)Z c
	replaceFrom (Lnet/minecraft/world/entity/ai/attributes/AttributeInstance;)V a
	save ()Lnet/minecraft/nbt/CompoundTag; g
	setBaseValue (D)V a
	setDirty ()V d
net/minecraft/world/entity/ai/attributes/AttributeMap bno
	LOGGER a
	attributes b
	dirtyAttributes c
	supplier d
	addTransientAttributeModifiers (Lcom/google/common/collect/Multimap;)V b
	assignValues (Lnet/minecraft/world/entity/ai/attributes/AttributeMap;)V a
	getBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D d
	getDirtyAttributes ()Ljava/util/Set; a
	getInstance (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getInstance (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getModifierValue (Lnet/minecraft/core/Holder;Ljava/util/UUID;)D b
	getModifierValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)D b
	getSyncableAttributes ()Ljava/util/Collection; b
	getValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D c
	hasAttribute (Lnet/minecraft/core/Holder;)Z b
	hasAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Z b
	hasModifier (Lnet/minecraft/core/Holder;Ljava/util/UUID;)Z a
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)Z a
	load (Lnet/minecraft/nbt/ListTag;)V a
	onAttributeModified (Lnet/minecraft/world/entity/ai/attributes/AttributeInstance;)V a
	removeAttributeModifiers (Lcom/google/common/collect/Multimap;)V a
	save ()Lnet/minecraft/nbt/ListTag; c
net/minecraft/world/entity/ai/attributes/AttributeModifier bnp
	CODEC a
	LOGGER b
	amount c
	id f
	name e
	operation d
	getAmount ()D c
	getId ()Ljava/util/UUID; a
	getOperation ()Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; b
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; a
	save ()Lnet/minecraft/nbt/CompoundTag; d
net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation bnp$a
	$VALUES h
	ADDITION a
	CODEC d
	MULTIPLY_BASE b
	MULTIPLY_TOTAL c
	OPERATIONS e
	name f
	value g
	$values ()[Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; b
	fromValue (I)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; a
	getSerializedName ()Ljava/lang/String; c
	toValue ()I a
net/minecraft/world/entity/ai/attributes/AttributeSupplier bnq
	instances a
	builder ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	createInstance (Ljava/util/function/Consumer;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeInstance (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; d
	getBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D b
	getModifierValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)D a
	getValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D a
	hasAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Z c
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)Z b
net/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder bnq$a
	builder a
	instanceFrozen b
	add (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	add (Lnet/minecraft/world/entity/ai/attributes/Attribute;D)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	build ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier; a
	create (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; b
net/minecraft/world/entity/ai/attributes/Attributes bnr
	ARMOR a
	ARMOR_TOUGHNESS b
	ATTACK_DAMAGE c
	ATTACK_KNOCKBACK d
	ATTACK_SPEED e
	FLYING_SPEED f
	FOLLOW_RANGE g
	JUMP_STRENGTH h
	KNOCKBACK_RESISTANCE i
	LUCK j
	MAX_ABSORPTION k
	MAX_HEALTH l
	MOVEMENT_SPEED m
	SPAWN_REINFORCEMENTS_CHANCE n
	register (Ljava/lang/String;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/Attribute; a
net/minecraft/world/entity/ai/attributes/DefaultAttributes bns
	LOGGER a
	SUPPLIERS b
	getSupplier (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier; a
	hasSupplier (Lnet/minecraft/world/entity/EntityType;)Z b
	validate ()V a
net/minecraft/world/entity/ai/attributes/RangedAttribute bnt
	maxValue c
	minValue b
	getMaxValue ()D e
	getMinValue ()D d
	sanitizeValue (D)D a
net/minecraft/world/entity/ai/behavior/AcquirePoi bnv
	SCAN_RANGE a
	create (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;ZLjava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	create (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;ZLjava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	findPathToPois (Lnet/minecraft/world/entity/Mob;Ljava/util/Set;)Lnet/minecraft/world/level/pathfinder/Path; a
net/minecraft/world/entity/ai/behavior/AcquirePoi$JitteredLinearRetry bnv$a
	MAX_INTERVAL_INCREASE b
	MAX_RETRY_PATHFINDING_INTERVAL c
	MIN_INTERVAL_INCREASE a
	currentDelay g
	nextScheduledAttemptTimestamp f
	previousAttemptTimestamp e
	random d
	isStillValid (J)Z b
	markAttempt (J)V a
	shouldRetry (J)Z c
net/minecraft/world/entity/ai/behavior/AnimalMakeLove bnw
	BREED_RANGE c
	MAX_DURATION e
	MIN_DURATION d
	partnerType f
	spawnChildAtTime h
	speedModifier g
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;)Z a
	findValidBreedPartner (Lnet/minecraft/world/entity/animal/Animal;)Ljava/util/Optional; c
	getBreedTarget (Lnet/minecraft/world/entity/animal/Animal;)Lnet/minecraft/world/entity/animal/Animal; a
	hasBreedTargetOfRightType (Lnet/minecraft/world/entity/animal/Animal;)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V c
net/minecraft/world/entity/ai/behavior/AnimalPanic bnx
	DEFAULT_SHOULD_PANIC_PREDICATE g
	PANIC_DISTANCE_HORIZONTAL e
	PANIC_DISTANCE_VERTICAL f
	PANIC_MAX_DURATION d
	PANIC_MIN_DURATION c
	shouldPanic i
	speedMultiplier h
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	getPanicPos (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/phys/Vec3; a
	lookForWater (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)Ljava/util/Optional; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V d
net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite bny
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/BabyFollowAdult bnz
	create (Lnet/minecraft/util/valueproviders/UniformInt;F)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	create (Lnet/minecraft/util/valueproviders/UniformInt;Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
net/minecraft/world/entity/ai/behavior/BackUpIfTooClose boa
	create (IF)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
net/minecraft/world/entity/ai/behavior/BecomePassiveIfMemoryPresent bob
	create (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;I)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/Behavior boc
	DEFAULT_DURATION a
	endTimestamp d
	entryCondition b
	maxDuration f
	minDuration e
	status c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	debugString ()Ljava/lang/String; b
	doStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V g
	getStatus ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; a
	hasRequiredMemories (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tickOrStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V f
	timedOut (J)Z a
	tryStart (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z e
net/minecraft/world/entity/ai/behavior/Behavior$Status boc$a
	$VALUES c
	RUNNING b
	STOPPED a
	$values ()[Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; a
net/minecraft/world/entity/ai/behavior/BehaviorControl bod
	debugString ()Ljava/lang/String; b
	doStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V g
	getStatus ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; a
	tickOrStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V f
	tryStart (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z e
net/minecraft/world/entity/ai/behavior/BehaviorUtils boe
	canSee (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z b
	entityIsVisible (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/LivingEntity;)Z a
	findSectionClosestToVillage (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/SectionPos;I)Lnet/minecraft/core/SectionPos; a
	getLivingEntityFromUUIDMemory (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; a
	getNearestTarget (Lnet/minecraft/world/entity/LivingEntity;Ljava/util/Optional;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	getRandomSwimmablePos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; a
	getTargetNearestMe (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	isBreeding (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isOtherTargetMuchFurtherAwayThanCurrentAttackTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;D)Z a
	isWithinAttackRange (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;I)Z a
	lockGazeAndWalkToEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;F)V a
	lookAtEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V c
	lookAtEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V a
	setWalkAndLookTargetMemories (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;FI)V a
	setWalkAndLookTargetMemories (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;FI)V a
	setWalkAndLookTargetMemories (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/behavior/PositionTracker;FI)V a
	setWalkAndLookTargetMemoriesToEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;F)V b
	targetIsValid (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/function/Predicate;)Z a
	targetIsValid (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/EntityType;)Z a
	throwItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/Vec3;)V a
	throwItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;F)V a
net/minecraft/world/entity/ai/behavior/BlockPosTracker bof
	blockPos a
	centerPosition b
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/CelebrateVillagersSurvivedRaid bog
	currentRaid c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getFirework (Lnet/minecraft/world/item/DyeColor;I)Lnet/minecraft/world/item/ItemStack; a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry boh
	create (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/util/valueproviders/UniformInt;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/CountDownCooldownTicks boi
	cooldownTicks c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	getCooldownTickMemory (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/Croak boj
	CROAK_TICKS c
	TIME_OUT_DURATION d
	croakCounter e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)V d
net/minecraft/world/entity/ai/behavior/CrossbowAttack bok
	TIMEOUT c
	attackDelay d
	crossbowState e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	crossbowAttack (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	getAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; b
	lookAtTarget (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
net/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState bok$a
	$VALUES e
	CHARGED c
	CHARGING b
	READY_TO_ATTACK d
	UNCHARGED a
	$values ()[Lnet/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState; a
net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting bol
	create (ILjava/util/function/BiPredicate;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	isVehicleValid (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)Z a
net/minecraft/world/entity/ai/behavior/DoNothing bom
	endTimestamp d
	maxDuration b
	minDuration a
	status c
	debugString ()Ljava/lang/String; b
	doStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V g
	getStatus ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; a
	tickOrStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V f
	tryStart (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z e
net/minecraft/world/entity/ai/behavior/EntityTracker bon
	entity a
	trackEyeHeight b
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	getEntity ()Lnet/minecraft/world/entity/Entity; c
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/EraseMemoryIf boo
	create (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/FollowTemptation bop
	BACKED_UP_CLOSE_ENOUGH_DIST e
	DEFAULT_CLOSE_ENOUGH_DIST d
	TEMPTATION_COOLDOWN c
	closeEnoughDistance g
	speedModifier f
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)Z a
	getSpeedModifier (Lnet/minecraft/world/entity/PathfinderMob;)F a
	getTemptingPlayer (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/Optional; b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/GateBehavior boq
	behaviors e
	entryCondition a
	exitErasedMemories b
	orderPolicy c
	runningPolicy d
	status f
	debugString ()Ljava/lang/String; b
	doStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V g
	getStatus ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; a
	hasRequiredMemories (Lnet/minecraft/world/entity/LivingEntity;)Z a
	tickOrStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V f
	tryStart (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z e
net/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy boq$a
	$VALUES d
	ORDERED a
	SHUFFLED b
	consumer c
	$values ()[Lnet/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy; a
	apply (Lnet/minecraft/world/entity/ai/behavior/ShufflingList;)V a
net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy boq$b
	$VALUES c
	RUN_ONE a
	TRY_ALL b
	$values ()[Lnet/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy; a
	apply (Ljava/util/stream/Stream;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/GiveGiftToHero bor
	GIFTS g
	MAX_TIME_BETWEEN_GIFTS e
	MIN_TIME_BETWEEN_GIFTS d
	SPEED_MODIFIER h
	THROW_GIFT_AT_DISTANCE c
	TIME_TO_DELAY_FOR_HEAD_TO_FINISH_TURNING f
	giftGivenDuringThisRun j
	timeSinceStart k
	timeUntilNextGift i
	calculateTimeUntilNextGift (Lnet/minecraft/server/level/ServerLevel;)I a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getItemToThrow (Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/List; a
	getNearestTargetableHero (Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; c
	isHero (Lnet/minecraft/world/entity/player/Player;)Z a
	isHeroVisible (Lnet/minecraft/world/entity/npc/Villager;)Z b
	isWithinThrowingDistance (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/player/Player;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	throwGift (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/LivingEntity;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/GoAndGiveItemsToTarget bos
	CLOSE_ENOUGH_DISTANCE_TO_TARGET c
	ITEM_PICKUP_COOLDOWN_AFTER_THROWING d
	speedModifier f
	targetPositionGetter e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canThrowItemToTarget (Lnet/minecraft/world/entity/LivingEntity;)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getThrowPosition (Lnet/minecraft/world/entity/ai/behavior/PositionTracker;)Lnet/minecraft/world/phys/Vec3; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	throwItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/Vec3;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	triggerDropItemOnBlock (Lnet/minecraft/world/entity/ai/behavior/PositionTracker;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/world/entity/ai/behavior/GoToClosestVillage bot
	create (FI)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite bou
	TICKS_UNTIL_TIMEOUT d
	speedModifier c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
net/minecraft/world/entity/ai/behavior/GoToTargetLocation bov
	create (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;IF)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	getNearbyPos (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getRandomOffset (Lnet/minecraft/util/RandomSource;)I a
net/minecraft/world/entity/ai/behavior/GoToWantedItem bow
	create (FZI)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	create (Ljava/util/function/Predicate;FZI)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/HarvestFarmland box
	HARVEST_DURATION d
	SPEED_MODIFIER c
	aboveFarmlandPos e
	nextOkStartTime f
	timeWorkedSoFar g
	validFarmlandAroundVillager h
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getValidFarmland (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/core/BlockPos; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	validPos (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/ai/behavior/InsideBrownianWalk boy
	create (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/InteractWith boz
	of (Lnet/minecraft/world/entity/EntityType;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	of (Lnet/minecraft/world/entity/EntityType;ILnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/InteractWithDoor bpa
	COOLDOWN_BEFORE_RERUNNING_IN_SAME_NODE a
	MAX_DISTANCE_TO_HOLD_DOOR_OPEN_FOR_OTHER_MOBS c
	SKIP_CLOSING_DOOR_IF_FURTHER_AWAY_THAN b
	areOtherMobsComingThroughDoor (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;Ljava/util/Optional;)Z a
	closeDoorsThatIHaveOpenedOrPassedThrough (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Set;Ljava/util/Optional;)V a
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	isDoorTooFarAway (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/GlobalPos;)Z a
	isMobComingThroughDoor (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/core/BlockPos;)Z a
	rememberDoorToClose (Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;Ljava/util/Optional;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; a
net/minecraft/world/entity/ai/behavior/JumpOnBed bpb
	COOLDOWN_BETWEEN_JUMPS f
	MAX_JUMPS e
	MAX_TIME_TO_REACH_BED c
	MIN_JUMPS d
	remainingCooldownUntilNextJump k
	remainingJumps j
	remainingTimeToReachBed i
	speedModifier g
	targetBed h
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	getNearestBed (Lnet/minecraft/world/entity/Mob;)Ljava/util/Optional; a
	isBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	nearBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z b
	onBedSurface (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z d
	onOrOverBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z c
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
	startWalkingTowardsBed (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V d
	timedOut (J)Z a
	tiredOfJumping (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z f
	tiredOfWalking (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z e
net/minecraft/world/entity/ai/behavior/LocateHidingPlace bpc
	create (IFI)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
net/minecraft/world/entity/ai/behavior/LongJumpMidJump bpd
	TIME_OUT_DURATION c
	landingSound e
	timeBetweenLongJumps d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
net/minecraft/world/entity/ai/behavior/LongJumpToPreferredBlock bpe
	currentlyWantingPreferredOnes p
	notPrefferedJumpCandidates o
	preferredBlockTag m
	preferredBlocksChance n
	getJumpCandidate (Lnet/minecraft/server/level/ServerLevel;)Ljava/util/Optional; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos bpf
	ALLOWED_ANGLES o
	FIND_JUMP_TRIES c
	MIN_PATHFIND_DISTANCE_TO_VALID_JUMP d
	PREPARE_JUMP_DURATION m
	TIME_OUT_DURATION n
	acceptableLandingSpot r
	chosenJump j
	findJumpTries k
	getJumpSound q
	initialPosition i
	jumpCandidates h
	maxJumpVelocity g
	maxLongJumpHeight e
	maxLongJumpWidth f
	prepareJumpStart l
	timeBetweenLongJumps p
	calculateOptimalJumpVector (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	defaultAcceptableLandingSpot (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Z a
	getJumpCandidate (Lnet/minecraft/server/level/ServerLevel;)Ljava/util/Optional; a
	isAcceptableLandingPosition (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Z a
	pickCandidate (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos$PossibleJump bpf$a
	jumpTarget a
	getJumpTarget ()Lnet/minecraft/core/BlockPos; b
net/minecraft/world/entity/ai/behavior/LongJumpUtil bpg
	calculateJumpVectorForAngle (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/phys/Vec3;FIZ)Ljava/util/Optional; a
	isClearTransition (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/EntityDimensions;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink bph
	speedModifier c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	followPlayer (Lnet/minecraft/world/entity/npc/Villager;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/LookAtTargetSink bpi
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
net/minecraft/world/entity/ai/behavior/MeleeAttack bpj
	create (I)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	isHoldingUsableProjectileWeapon (Lnet/minecraft/world/entity/Mob;)Z a
net/minecraft/world/entity/ai/behavior/Mount bpk
	CLOSE_ENOUGH_TO_START_RIDING_DIST a
	create (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot bpl
	create (F)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	getOutdoorPosition (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; a
	hasNoBlocksAbove (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/ai/behavior/MoveToTargetSink bpm
	MAX_COOLDOWN_BEFORE_RETRYING c
	lastTargetPos f
	path e
	remainingCooldown d
	speedModifier g
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	isWalkTargetSpectator (Lnet/minecraft/world/entity/ai/memory/WalkTarget;)Z a
	reachedTarget (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/memory/WalkTarget;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V d
	tryComputePath (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/memory/WalkTarget;J)Z a
net/minecraft/world/entity/ai/behavior/OneShot bpn
	status a
	debugString ()Ljava/lang/String; b
	doStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V g
	getStatus ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; a
	tickOrStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V f
	tryStart (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z e
net/minecraft/world/entity/ai/behavior/PlayTagWithOtherKids bpo
	AVERAGE_WAIT_TIME_BETWEEN_RUNS f
	CHASE_SPEED_MODIFIER d
	FLEE_SPEED_MODIFIER c
	MAX_CHASERS_PER_TARGET e
	MAX_FLEE_XZ_DIST a
	MAX_FLEE_Y_DIST b
	chaseKid (Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;Lnet/minecraft/world/entity/LivingEntity;)V a
	checkHowManyChasersEachFriendHas (Ljava/util/List;)Ljava/util/Map; b
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	findSomeoneBeingChased (Ljava/util/List;)Ljava/util/Optional; a
	isChasingSomeone (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isFriendChasingMe (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	whoAreYouChasing (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
net/minecraft/world/entity/ai/behavior/PoiCompetitorScan bpp
	competesForSameJobsite (Lnet/minecraft/core/GlobalPos;Lnet/minecraft/core/Holder;Lnet/minecraft/world/entity/npc/Villager;)Z a
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	hasMatchingProfession (Lnet/minecraft/core/Holder;Lnet/minecraft/world/entity/npc/VillagerProfession;)Z a
	selectWinner (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/world/entity/npc/Villager; a
net/minecraft/world/entity/ai/behavior/PositionTracker bpq
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget bpr
	TIME_OUT_DURATION c
	getCooldownOnFail d
	getPrepareRamSound j
	maxRamDistance f
	minRamDistance e
	ramCandidate l
	ramPrepareTime i
	ramTargeting h
	reachedRamPositionTimestamp k
	walkSpeed g
	calculateRammingStartPosition (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)Z c
	chooseRamPosition (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)V b
	getEdgeOfBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; a
	isWalkableBlock (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V d
net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget$RamCandidate bpr$a
	startPosition a
	target c
	targetPosition b
	getStartPosition ()Lnet/minecraft/core/BlockPos; a
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; c
	getTargetPosition ()Lnet/minecraft/core/BlockPos; b
net/minecraft/world/entity/ai/behavior/RamTarget bps
	RAM_SPEED_FORCE_FACTOR d
	TIME_OUT_DURATION c
	getHornBreakSound k
	getImpactSound j
	getKnockbackForce h
	getTimeBetweenRams e
	ramDirection i
	ramTargeting f
	speed g
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/goat/Goat;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/goat/Goat;)Z a
	finishRam (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/goat/Goat;)V b
	hasRammedHornBreakingBlock (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/goat/Goat;)Z c
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/goat/Goat;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/goat/Goat;J)V c
net/minecraft/world/entity/ai/behavior/RandomLookAround bpt
	interval c
	maxYaw d
	minPitch e
	pitchRange f
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/RandomStroll bpu
	MAX_XZ_DIST a
	MAX_Y_DIST b
	SWIM_XY_DISTANCE_TIERS c
	fly (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; b
	getTargetFlyPos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; a
	getTargetSwimPos (Lnet/minecraft/world/entity/PathfinderMob;)Lnet/minecraft/world/phys/Vec3; a
	stroll (F)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	stroll (FII)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	stroll (FZ)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	strollFlyOrSwim (FLjava/util/function/Function;Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	swim (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; c
net/minecraft/world/entity/ai/behavior/ReactToBell bpv
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/ResetProfession bpw
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/ResetRaidStatus bpx
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/RingBell bpy
	BELL_RING_CHANCE b
	RING_BELL_FROM_DISTANCE a
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/RunOne bpz
net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget bqa
	BATCH_SIZE b
	CACHE_TIMEOUT a
	OK_DISTANCE_SQR d
	RATE c
	create (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/SetEntityLookTarget bqb
	create (F)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	create (Ljava/util/function/Predicate;F)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	create (Lnet/minecraft/world/entity/EntityType;F)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	create (Lnet/minecraft/world/entity/MobCategory;F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/SetEntityLookTargetSometimes bqc
	create (FLnet/minecraft/util/valueproviders/UniformInt;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	create (FLnet/minecraft/util/valueproviders/UniformInt;Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	create (Lnet/minecraft/world/entity/EntityType;FLnet/minecraft/util/valueproviders/UniformInt;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/SetEntityLookTargetSometimes$Ticker bqc$a
	interval a
	ticksUntilNextStart b
	tickDownAndCheck (Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/entity/ai/behavior/SetHiddenState bqd
	HIDE_TIMEOUT a
	create (II)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/SetLookAndInteract bqe
	create (Lnet/minecraft/world/entity/EntityType;I)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/SetRaidStatus bqf
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom bqg
	create (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZLjava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	entity (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZ)Lnet/minecraft/world/entity/ai/behavior/OneShot; b
	pos (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZ)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromAttackTargetIfTargetOutOfReach bqh
	PROJECTILE_ATTACK_RANGE_BUFFER a
	create (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	create (Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory bqi
	create (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIII)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromLookTarget bqj
	create (FI)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	create (Ljava/util/function/Predicate;Ljava/util/function/Function;I)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer bqk
	MAX_LOOK_TIME c
	STARTING_LOOK_TIME d
	cycleCounter g
	displayIndex h
	displayItems f
	lookTime i
	playerItemStack e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	clearHeldItem (Lnet/minecraft/world/entity/npc/Villager;)V c
	displayAsHeldItem (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/item/ItemStack;)V a
	displayCyclingItems (Lnet/minecraft/world/entity/npc/Villager;)V e
	displayFirstItem (Lnet/minecraft/world/entity/npc/Villager;)V a
	findItemsToDisplay (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/npc/Villager;)V a
	lookAtTarget (Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/world/entity/LivingEntity; d
	playerItemStackMatchesCostOfOffer (Lnet/minecraft/world/item/trading/MerchantOffer;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	updateDisplayItems (Lnet/minecraft/world/entity/npc/Villager;)V b
net/minecraft/world/entity/ai/behavior/ShufflingList bql
	entries a
	random b
	add (Ljava/lang/Object;I)Lnet/minecraft/world/entity/ai/behavior/ShufflingList; a
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	shuffle ()Lnet/minecraft/world/entity/ai/behavior/ShufflingList; a
	stream ()Ljava/util/stream/Stream; b
net/minecraft/world/entity/ai/behavior/ShufflingList$WeightedEntry bql$a
	data a
	randWeight c
	weight b
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getData ()Ljava/lang/Object; a
	getRandWeight ()D c
	getWeight ()I b
	setRandom (F)V a
net/minecraft/world/entity/ai/behavior/SleepInBed bqm
	COOLDOWN_AFTER_BEING_WOKEN c
	nextOkStartTime d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/SocializeAtBell bqn
	SPEED_MODIFIER a
	create ()Lnet/minecraft/world/entity/ai/behavior/OneShot; a
net/minecraft/world/entity/ai/behavior/StartAttacking bqo
	create (Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	create (Ljava/util/function/Predicate;Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/StartCelebratingIfTargetDead bqp
	create (ILjava/util/function/BiPredicate;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/StayCloseToTarget bqq
	create (Ljava/util/function/Function;Ljava/util/function/Predicate;IIF)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid bqr
	TIMEOUT_TO_GET_WITHIN_ATTACK_RANGE a
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	create (Ljava/util/function/BiConsumer;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	create (Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	create (Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;Z)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	isTiredOfTryingToReachTarget (Lnet/minecraft/world/entity/LivingEntity;Ljava/util/Optional;)Z a
net/minecraft/world/entity/ai/behavior/StopBeingAngryIfTargetDead bqs
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/StrollAroundPoi bqt
	MIN_TIME_BETWEEN_STROLLS a
	STROLL_MAX_XZ_DIST b
	STROLL_MAX_Y_DIST c
	create (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
net/minecraft/world/entity/ai/behavior/StrollToPoi bqu
	create (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FII)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/StrollToPoiList bqv
	create (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIILnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/Swim bqw
	chance c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
net/minecraft/world/entity/ai/behavior/TradeWithVillager bqx
	INTERACT_DIST_SQR c
	SPEED_MODIFIER d
	trades e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	figureOutWhatIAmWillingToTrade (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Set; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	throwHalfStack (Lnet/minecraft/world/entity/npc/Villager;Ljava/util/Set;Lnet/minecraft/world/entity/LivingEntity;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/TriggerGate bqy
	triggerGate (Ljava/util/List;Lnet/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy;Lnet/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy;)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	triggerOneShuffled (Ljava/util/List;)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
net/minecraft/world/entity/ai/behavior/TryFindLand bqz
	COOLDOWN_TICKS a
	create (IF)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/TryFindLandNearWater bra
	create (IF)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/TryFindWater brb
	create (IF)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/TryLaySpawnOnWaterNearLand brc
	create (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/UpdateActivityFromSchedule brd
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/UseBonemeal bre
	BONEMEALING_DURATION c
	cropPos g
	lastBonemealingSession e
	nextWorkCycleTime d
	timeWorkedSoFar f
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	pickNextTarget (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; b
	setCurrentCropAsTarget (Lnet/minecraft/world/entity/npc/Villager;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	validPos (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi brf
	MAX_DISTANCE a
	bedIsOccupied (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	create (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/VillageBoundRandomStroll brg
	MAX_XZ_DIST a
	MAX_Y_DIST b
	create (F)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	create (FII)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
net/minecraft/world/entity/ai/behavior/VillagerCalmDown brh
	SAFE_DISTANCE_FROM_DANGER a
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/VillagerGoalPackages bri
	STROLL_SPEED_MODIFIER a
	getCorePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; a
	getFullLookBehavior ()Lcom/mojang/datafixers/util/Pair; a
	getHidePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; i
	getIdlePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; e
	getMeetPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; d
	getMinimalLookBehavior ()Lcom/mojang/datafixers/util/Pair; b
	getPanicPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; f
	getPlayPackage (F)Lcom/google/common/collect/ImmutableList; a
	getPreRaidPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; g
	getRaidPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; h
	getRestPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; c
	getWorkPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; b
	raidExistsAndActive (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	raidExistsAndNotVictory (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z b
net/minecraft/world/entity/ai/behavior/VillagerMakeLove brj
	INTERACT_DIST_SQR c
	SPEED_MODIFIER d
	birthTimestamp e
	breed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; b
	canReach (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Holder;)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	giveBedToChild (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;)V a
	isBreedingPossible (Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	takeVacantBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tryToGiveBirth (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger brk
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	hasHostile (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isHurt (Lnet/minecraft/world/entity/LivingEntity;)Z c
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/WakeUp brl
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/WorkAtComposter brm
	COMPOSTABLE_ITEMS c
	compostItems (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/GlobalPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	makeBread (Lnet/minecraft/world/entity/npc/Villager;)V a
	spawnComposterFillEffects (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	useWorkstation (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/WorkAtPoi brn
	CHECK_COOLDOWN c
	DISTANCE d
	lastCheck e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	useWorkstation (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/YieldJobSite bro
	canReachPos (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/ai/village/poi/PoiType;)Z a
	create (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	nearbyWantsJobsite (Lnet/minecraft/core/Holder;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder brp
	trigger a
	create (Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	create (Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWithResult;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; a
	get (Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWithResult; b
	instance ()Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance; a
	sequence (Lnet/minecraft/world/entity/ai/behavior/declarative/Trigger;Lnet/minecraft/world/entity/ai/behavior/declarative/Trigger;)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	triggerIf (Ljava/util/function/BiPredicate;)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	triggerIf (Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	triggerIf (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/behavior/OneShot;)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	unbox (Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; a
net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Constant brp$a
net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance brp$b
	absent (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; c
	ap2 (Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; a
	ap3 (Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; a
	ap4 (Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; a
	get (Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;)Ljava/lang/Object; b
	ifTriggered (Lnet/minecraft/world/entity/ai/behavior/declarative/Trigger;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; a
	map (Ljava/util/function/Function;Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; a
	point (Ljava/lang/Object;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; a
	point (Ljava/util/function/Supplier;Ljava/lang/Object;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; a
	present (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; b
	registered (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; a
	tryGet (Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;)Ljava/util/Optional; a
net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$Mu brp$b$a
net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Mu brp$c
net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$PureMemory brp$d
net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWithResult brp$e
	debugString ()Ljava/lang/String; a
	tryTrigger (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Ljava/lang/Object; a
net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWrapper brp$f
net/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor brq
	brain a
	memoryType b
	value c
	erase ()V b
	set (Ljava/lang/Object;)V a
	setOrErase (Ljava/util/Optional;)V a
	setWithExpiry (Ljava/lang/Object;J)V a
	value ()Lcom/mojang/datafixers/kinds/App; a
net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition brr
	condition ()Lnet/minecraft/world/entity/ai/memory/MemoryStatus; b
	createAccessor (Lnet/minecraft/world/entity/ai/Brain;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor; a
	memory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Absent brr$a
	memory a
	condition ()Lnet/minecraft/world/entity/ai/memory/MemoryStatus; b
	createAccessor (Lnet/minecraft/world/entity/ai/Brain;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor; a
	memory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Present brr$b
	memory a
	condition ()Lnet/minecraft/world/entity/ai/memory/MemoryStatus; b
	createAccessor (Lnet/minecraft/world/entity/ai/Brain;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor; a
	memory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Registered brr$c
	memory a
	condition ()Lnet/minecraft/world/entity/ai/memory/MemoryStatus; b
	createAccessor (Lnet/minecraft/world/entity/ai/Brain;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor; a
	memory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
net/minecraft/world/entity/ai/behavior/declarative/Trigger brs
net/minecraft/world/entity/ai/behavior/warden/Digging brv
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V c
net/minecraft/world/entity/ai/behavior/warden/Emerging brw
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V c
net/minecraft/world/entity/ai/behavior/warden/ForceUnmount brx
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
net/minecraft/world/entity/ai/behavior/warden/Roar bry
	ROAR_ANGER_INCREASE d
	TICKS_BEFORE_PLAYING_ROAR_SOUND c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V c
net/minecraft/world/entity/ai/behavior/warden/SetRoarTarget brz
	create (Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/warden/SetWardenLookTarget bsa
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/warden/Sniffing bsb
	ANGER_FROM_SNIFFING_MAX_DISTANCE_XZ c
	ANGER_FROM_SNIFFING_MAX_DISTANCE_Y d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V c
net/minecraft/world/entity/ai/behavior/warden/SonicBoom bsc
	COOLDOWN c
	DISTANCE_XZ d
	DISTANCE_Y e
	DURATION i
	KNOCKBACK_HORIZONTAL g
	KNOCKBACK_VERTICAL f
	TICKS_BEFORE_PLAYING_SOUND h
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;)Z a
	setCooldown (Lnet/minecraft/world/entity/LivingEntity;I)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V c
net/minecraft/world/entity/ai/behavior/warden/TryToSniff bsd
	SNIFF_COOLDOWN a
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/control/BodyRotationControl bsf
	DELAY_UNTIL_STARTING_TO_FACE_FORWARD c
	HEAD_STABLE_ANGLE b
	HOW_LONG_IT_TAKES_TO_FACE_FORWARD d
	headStableTime e
	lastStableYHeadRot f
	mob a
	clientTick ()V a
	isMoving ()Z f
	notCarryingMobPassengers ()Z e
	rotateBodyIfNecessary ()V b
	rotateHeadIfNecessary ()V c
	rotateHeadTowardsFront ()V d
net/minecraft/world/entity/ai/control/Control bsg
net/minecraft/world/entity/ai/control/FlyingMoveControl bsh
	hoversInPlace m
	maxTurn l
	tick ()V a
net/minecraft/world/entity/ai/control/JumpControl bsi
	jump a
	mob b
	jump ()V a
	tick ()V b
net/minecraft/world/entity/ai/control/LookControl bsj
	lookAtCooldown d
	mob a
	wantedX e
	wantedY f
	wantedZ g
	xMaxRotAngle c
	yMaxRotSpeed b
	clampHeadRotationToBody ()V b
	getWantedX ()D e
	getWantedY ()D f
	getWantedY (Lnet/minecraft/world/entity/Entity;)D b
	getWantedZ ()D g
	getXRotD ()Ljava/util/Optional; h
	getYRotD ()Ljava/util/Optional; i
	isLookingAtTarget ()Z d
	resetXRotOnTick ()Z c
	rotateTowards (FFF)F a
	setLookAt (DDD)V a
	setLookAt (DDDFF)V a
	setLookAt (Lnet/minecraft/world/entity/Entity;)V a
	setLookAt (Lnet/minecraft/world/entity/Entity;FF)V a
	setLookAt (Lnet/minecraft/world/phys/Vec3;)V a
	tick ()V a
net/minecraft/world/entity/ai/control/MoveControl bsk
	MAX_TURN c
	MIN_SPEED a
	MIN_SPEED_SQR b
	mob d
	operation k
	speedModifier h
	strafeForwards i
	strafeRight j
	wantedX e
	wantedY f
	wantedZ g
	getSpeedModifier ()D c
	getWantedX ()D d
	getWantedY ()D e
	getWantedZ ()D f
	hasWanted ()Z b
	isWalkable (FF)Z b
	rotlerp (FFF)F a
	setWantedPosition (DDDD)V a
	strafe (FF)V a
	tick ()V a
net/minecraft/world/entity/ai/control/MoveControl$Operation bsk$a
	$VALUES e
	JUMPING d
	MOVE_TO b
	STRAFE c
	WAIT a
	$values ()[Lnet/minecraft/world/entity/ai/control/MoveControl$Operation; a
net/minecraft/world/entity/ai/control/SmoothSwimmingLookControl bsl
	HEAD_TILT_X i
	HEAD_TILT_Y j
	maxYRotFromCenter h
	tick ()V a
net/minecraft/world/entity/ai/control/SmoothSwimmingMoveControl bsm
	FULL_SPEED_TURN_THRESHOLD l
	STOP_TURN_THRESHOLD m
	applyGravity r
	inWaterSpeedModifier p
	maxTurnX n
	maxTurnY o
	outsideWaterSpeedModifier q
	getTurningSpeedFactor (F)F a
	tick ()V a
net/minecraft/world/entity/ai/goal/AvoidEntityGoal bso
	avoidClass f
	avoidEntityTargeting k
	avoidPredicate g
	maxDist c
	mob a
	path d
	pathNav e
	predicateOnAvoidEntity h
	sprintSpeedModifier j
	toAvoid b
	walkSpeedModifier i
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BegGoal bsp
	begTargeting f
	level c
	lookDistance d
	lookTime e
	player b
	wolf a
	canContinueToUse ()Z b
	canUse ()Z a
	playerHoldingInteresting (Lnet/minecraft/world/entity/player/Player;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BoatGoals bsq
	$VALUES c
	GO_IN_BOAT_DIRECTION b
	GO_TO_BOAT a
	$values ()[Lnet/minecraft/world/entity/ai/goal/BoatGoals; a
net/minecraft/world/entity/ai/goal/BreakDoorGoal bsr
	DEFAULT_DOOR_BREAK_TIME g
	breakTime a
	doorBreakTime c
	lastBreakProgress b
	validDifficulties h
	canContinueToUse ()Z b
	canUse ()Z a
	getDoorBreakTime ()I f
	isValidDifficulty (Lnet/minecraft/world/Difficulty;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BreathAirGoal bss
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	findAirPosition ()V h
	givesAir (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isInterruptable ()Z S_
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/BreedGoal bst
	PARTNER_TARGETING d
	animal a
	level b
	loveTime f
	partner c
	partnerClass e
	speedModifier g
	breed ()V g
	canContinueToUse ()Z b
	canUse ()Z a
	getFreePartner ()Lnet/minecraft/world/entity/animal/Animal; h
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/CatLieOnBedGoal bsu
	cat g
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	nextStartTick (Lnet/minecraft/world/entity/PathfinderMob;)I a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/CatSitOnBlockGoal bsv
	cat g
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/ClimbOnTopOfPowderSnowGoal bsw
	level b
	mob a
	canUse ()Z a
	requiresUpdateEveryTick ()Z T_
	tick ()V e
net/minecraft/world/entity/ai/goal/DolphinJumpGoal bsx
	STEPS_TO_CHECK a
	breached d
	dolphin b
	interval c
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z S_
	start ()V c
	stop ()V d
	surfaceIsClear (Lnet/minecraft/core/BlockPos;III)Z b
	tick ()V e
	waterIsClear (Lnet/minecraft/core/BlockPos;III)Z a
net/minecraft/world/entity/ai/goal/DoorInteractGoal bsy
	doorOpenDirX b
	doorOpenDirZ c
	doorPos e
	hasDoor f
	mob d
	passed a
	canContinueToUse ()Z b
	canUse ()Z a
	isOpen ()Z h
	requiresUpdateEveryTick ()Z T_
	setOpen (Z)V a
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/EatBlockGoal bsz
	EAT_ANIMATION_TICKS a
	IS_TALL_GRASS b
	eatAnimationTick e
	level d
	mob c
	canContinueToUse ()Z b
	canUse ()Z a
	getEatAnimationTick ()I h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FleeSunGoal bta
	level f
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	getHidePos ()Lnet/minecraft/world/phys/Vec3; i
	setWantedPos ()Z h
	start ()V c
net/minecraft/world/entity/ai/goal/FloatGoal btb
	mob a
	canUse ()Z a
	requiresUpdateEveryTick ()Z T_
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowBoatGoal btc
	currentGoal d
	following c
	mob b
	timeToRecalcPath a
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z S_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowFlockLeaderGoal btd
	INTERVAL_TICKS a
	mob b
	nextStartTick d
	timeToRecalcPath c
	canContinueToUse ()Z b
	canUse ()Z a
	nextStartTick (Lnet/minecraft/world/entity/animal/AbstractSchoolingFish;)I a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowMobGoal bte
	areaSize i
	followPredicate b
	followingMob c
	mob a
	navigation e
	oldWaterCost h
	speedModifier d
	stopDistance g
	timeToRecalcPath f
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowOwnerGoal btf
	MAX_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING c
	MAX_VERTICAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING d
	MIN_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING b
	TELEPORT_WHEN_DISTANCE_IS a
	canFly n
	level g
	navigation i
	oldWaterCost m
	owner f
	speedModifier h
	startDistance l
	stopDistance k
	tamable e
	timeToRecalcPath j
	canContinueToUse ()Z b
	canTeleportTo (Lnet/minecraft/core/BlockPos;)Z a
	canUse ()Z a
	maybeTeleportTo (III)Z a
	randomIntInclusive (II)I a
	start ()V c
	stop ()V d
	teleportToOwner ()V i
	tick ()V e
	unableToMove ()Z h
net/minecraft/world/entity/ai/goal/FollowParentGoal btg
	DONT_FOLLOW_IF_CLOSER_THAN c
	HORIZONTAL_SCAN_RANGE a
	VERTICAL_SCAN_RANGE b
	animal d
	parent e
	speedModifier f
	timeToRecalcPath g
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/Goal bth
	flags a
	adjustedTickDelay (I)I a
	canContinueToUse ()Z b
	canUse ()Z a
	getFlags ()Ljava/util/EnumSet; j
	isInterruptable ()Z S_
	reducedTickDelay (I)I b
	requiresUpdateEveryTick ()Z T_
	setFlags (Ljava/util/EnumSet;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/Goal$Flag bth$a
	$VALUES e
	JUMP c
	LOOK b
	MOVE a
	TARGET d
	$values ()[Lnet/minecraft/world/entity/ai/goal/Goal$Flag; a
net/minecraft/world/entity/ai/goal/GoalSelector bti
	LOGGER a
	NO_GOAL b
	availableGoals d
	disabledFlags f
	lockedFlags c
	newGoalRate h
	profiler e
	tickCount g
	addGoal (ILnet/minecraft/world/entity/ai/goal/Goal;)V a
	disableControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;)V a
	enableControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;)V b
	getAvailableGoals ()Ljava/util/Set; b
	getRunningGoals ()Ljava/util/stream/Stream; c
	goalCanBeReplacedForAllFlags (Lnet/minecraft/world/entity/ai/goal/WrappedGoal;Ljava/util/Map;)Z a
	goalContainsAnyFlags (Lnet/minecraft/world/entity/ai/goal/WrappedGoal;Ljava/util/EnumSet;)Z a
	removeAllGoals (Ljava/util/function/Predicate;)V a
	removeGoal (Lnet/minecraft/world/entity/ai/goal/Goal;)V a
	setControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;Z)V a
	setNewGoalRate (I)V a
	tick ()V a
	tickRunningGoals (Z)V a
net/minecraft/world/entity/ai/goal/GolemRandomStrollInVillageGoal btj
	POI_SECTION_SCAN_RADIUS i
	RANDOM_POS_XY_DISTANCE k
	RANDOM_POS_Y_DISTANCE l
	VILLAGER_SCAN_RADIUS j
	doesVillagerWantGolem (Lnet/minecraft/world/entity/npc/Villager;)Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
	getPositionTowardsAnywhere ()Lnet/minecraft/world/phys/Vec3; k
	getPositionTowardsPoi ()Lnet/minecraft/world/phys/Vec3; m
	getPositionTowardsVillagerWhoWantsGolem ()Lnet/minecraft/world/phys/Vec3; l
	getRandomPoiWithinSection (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/core/BlockPos; a
	getRandomVillageSection ()Lnet/minecraft/core/SectionPos; n
net/minecraft/world/entity/ai/goal/InteractGoal btk
net/minecraft/world/entity/ai/goal/JumpGoal btl
net/minecraft/world/entity/ai/goal/LandOnOwnersShoulderGoal btm
	entity a
	isSittingOnShoulder c
	owner b
	canUse ()Z a
	isInterruptable ()Z S_
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/LeapAtTargetGoal btn
	mob a
	target b
	yd c
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/LlamaFollowCaravanGoal bto
	CARAVAN_LIMIT c
	distCheckCounter d
	llama a
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	firstIsLeashed (Lnet/minecraft/world/entity/animal/horse/Llama;I)Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/LookAtPlayerGoal btp
	DEFAULT_PROBABILITY a
	lookAt c
	lookAtContext g
	lookAtType f
	lookDistance d
	lookTime h
	mob b
	onlyHorizontal i
	probability e
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/LookAtTradingPlayerGoal btq
	villager h
	canUse ()Z a
net/minecraft/world/entity/ai/goal/MeleeAttackGoal btr
	COOLDOWN_BETWEEN_CAN_USE_CHECKS l
	attackInterval j
	followingTargetEvenIfNotSeen c
	lastCanUseCheck k
	mob a
	path d
	pathedTargetX e
	pathedTargetY f
	pathedTargetZ g
	speedModifier b
	ticksUntilNextAttack i
	ticksUntilNextPathRecalculation h
	canContinueToUse ()Z b
	canPerformAttack (Lnet/minecraft/world/entity/LivingEntity;)Z b
	canUse ()Z a
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;)V a
	getAttackInterval ()I l
	getTicksUntilNextAttack ()I k
	isTimeToAttack ()Z i
	requiresUpdateEveryTick ()Z T_
	resetAttackCooldown ()V h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/MoveBackToVillageGoal bts
	MAX_XZ_DIST i
	MAX_Y_DIST j
	canUse ()Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal btt
	canDealWithDoors h
	distanceToPoi g
	mob a
	onlyAtNight e
	path c
	poiPos d
	speedModifier b
	visited f
	canContinueToUse ()Z b
	canUse ()Z a
	hasNotVisited (Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	updateVisited ()V h
net/minecraft/world/entity/ai/goal/MoveToBlockGoal btu
	GIVE_UP_TICKS g
	INTERVAL_TICKS i
	STAY_TICKS h
	blockPos e
	maxStayTicks j
	mob a
	nextStartTick c
	reachedTarget k
	searchRange l
	speedModifier b
	tryTicks d
	verticalSearchRange m
	verticalSearchStart f
	acceptedDistance ()D i
	canContinueToUse ()Z b
	canUse ()Z a
	findNearestBlock ()Z n
	getMoveToTarget ()Lnet/minecraft/core/BlockPos; k
	isReachedTarget ()Z m
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	moveMobToBlock ()V h
	nextStartTick (Lnet/minecraft/world/entity/PathfinderMob;)I a
	requiresUpdateEveryTick ()Z T_
	shouldRecalculatePath ()Z l
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/MoveTowardsRestrictionGoal btv
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/MoveTowardsTargetGoal btw
	mob a
	speedModifier f
	target b
	wantedX c
	wantedY d
	wantedZ e
	within g
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/OcelotAttackGoal btx
	attackTime c
	mob a
	target b
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z T_
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/OfferFlowerGoal bty
	OFFER_TARGER_CONTEXT b
	OFFER_TICKS a
	golem c
	tick e
	villager d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/OpenDoorGoal btz
	closeDoor a
	forgetTime b
	canContinueToUse ()Z b
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/PanicGoal bua
	WATER_CHECK_DISTANCE_VERTICAL a
	isRunning g
	mob b
	posX d
	posY e
	posZ f
	speedModifier c
	canContinueToUse ()Z b
	canUse ()Z a
	findRandomPosition ()Z i
	isRunning ()Z k
	lookForWater (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/core/BlockPos; a
	shouldPanic ()Z h
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/PathfindToRaidGoal bub
	RECRUITMENT_SEARCH_TICK_DELAY a
	SPEED_MODIFIER b
	mob c
	recruitmentTick d
	canContinueToUse ()Z b
	canUse ()Z a
	recruitNearby (Lnet/minecraft/world/entity/raid/Raid;)V a
	tick ()V e
net/minecraft/world/entity/ai/goal/RandomLookAroundGoal buc
	lookTime d
	mob a
	relX b
	relZ c
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z T_
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/RandomStandGoal bud
	horse a
	nextStand b
	canContinueToUse ()Z b
	canUse ()Z a
	playStandSound ()V h
	requiresUpdateEveryTick ()Z T_
	resetStandInterval (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)V a
	start ()V c
net/minecraft/world/entity/ai/goal/RandomStrollGoal bue
	DEFAULT_INTERVAL a
	checkNoActionTime i
	forceTrigger h
	interval g
	mob b
	speedModifier f
	wantedX c
	wantedY d
	wantedZ e
	canContinueToUse ()Z b
	canUse ()Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
	setInterval (I)V c
	start ()V c
	stop ()V d
	trigger ()V i
net/minecraft/world/entity/ai/goal/RandomSwimmingGoal buf
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
net/minecraft/world/entity/ai/goal/RangedAttackGoal bug
	attackIntervalMax h
	attackIntervalMin g
	attackRadius i
	attackRadiusSqr j
	attackTime d
	mob a
	rangedAttackMob b
	seeTime f
	speedModifier e
	target c
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z T_
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedBowAttackGoal buh
	attackIntervalMin c
	attackRadiusSqr d
	attackTime e
	mob a
	seeTime f
	speedModifier b
	strafingBackwards h
	strafingClockwise g
	strafingTime i
	canContinueToUse ()Z b
	canUse ()Z a
	isHoldingBow ()Z h
	requiresUpdateEveryTick ()Z T_
	setMinAttackInterval (I)V c
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal bui
	PATHFINDING_DELAY_RANGE a
	attackDelay g
	attackRadiusSqr e
	crossbowState c
	mob b
	seeTime f
	speedModifier d
	updatePathDelay h
	canContinueToUse ()Z b
	canRun ()Z k
	canUse ()Z a
	isHoldingCrossbow ()Z h
	isValidTarget ()Z i
	requiresUpdateEveryTick ()Z T_
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState bui$a
	$VALUES e
	CHARGED c
	CHARGING b
	READY_TO_ATTACK d
	UNCHARGED a
	$values ()[Lnet/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState; a
net/minecraft/world/entity/ai/goal/RemoveBlockGoal buj
	WAIT_AFTER_BLOCK_FOUND j
	blockToRemove g
	removerMob h
	ticksSinceReachedGoal i
	canUse ()Z a
	getPosWithBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/core/BlockPos; a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	playBreakSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	playDestroyProgressSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RestrictSunGoal buk
	mob a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal bul
	horse a
	posX c
	posY d
	posZ e
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/SitWhenOrderedToGoal bum
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/StrollThroughVillageGoal bun
	DISTANCE_THRESHOLD a
	interval c
	mob b
	wantedPos d
	canContinueToUse ()Z b
	canUse ()Z a
	moveRandomly ()V h
	tick ()V e
net/minecraft/world/entity/ai/goal/SwellGoal buo
	creeper a
	target b
	canUse ()Z a
	requiresUpdateEveryTick ()Z T_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/TemptGoal bup
	TEMP_TARGETING c
	calmDown k
	canScare n
	isRunning l
	items m
	mob a
	pRotX i
	pRotY j
	player b
	px f
	py g
	pz h
	speedModifier e
	targetingConditions d
	canContinueToUse ()Z b
	canScare ()Z h
	canUse ()Z a
	isRunning ()Z i
	shouldFollow (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/TradeWithPlayerGoal buq
	mob a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/TryFindWaterGoal bur
	mob a
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/UseItemGoal bus
	canUseSelector c
	finishUsingSound d
	item b
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal but
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
net/minecraft/world/entity/ai/goal/WaterAvoidingRandomStrollGoal buu
	PROBABILITY i
	probability j
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
net/minecraft/world/entity/ai/goal/WrappedGoal buv
	goal a
	isRunning c
	priority b
	adjustedTickDelay (I)I a
	canBeReplacedBy (Lnet/minecraft/world/entity/ai/goal/WrappedGoal;)Z a
	canContinueToUse ()Z b
	canUse ()Z a
	getFlags ()Ljava/util/EnumSet; j
	getGoal ()Lnet/minecraft/world/entity/ai/goal/Goal; k
	getPriority ()I i
	isInterruptable ()Z S_
	isRunning ()Z h
	requiresUpdateEveryTick ()Z T_
	setFlags (Ljava/util/EnumSet;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/ZombieAttackGoal buw
	raiseArmTicks c
	zombie b
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/target/DefendVillageTargetGoal buy
	attackTargeting c
	golem a
	potentialTarget b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/HurtByTargetGoal buz
	ALERT_RANGE_Y b
	HURT_BY_TARGETING a
	alertSameType c
	timestamp d
	toIgnoreAlert j
	toIgnoreDamage i
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	alertOthers ()V h
	canUse ()Z a
	setAlertOthers ([Ljava/lang/Class;)Lnet/minecraft/world/entity/ai/goal/target/HurtByTargetGoal; a
	start ()V c
net/minecraft/world/entity/ai/goal/target/NearestAttackableTargetGoal bva
	DEFAULT_RANDOM_INTERVAL i
	randomInterval b
	target c
	targetConditions d
	targetType a
	canUse ()Z a
	findTarget ()V h
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
	start ()V c
net/minecraft/world/entity/ai/goal/target/NearestAttackableWitchTargetGoal bvb
	canAttack i
	canUse ()Z a
	setCanAttack (Z)V a
net/minecraft/world/entity/ai/goal/target/NearestHealableRaiderTargetGoal bvc
	DEFAULT_COOLDOWN i
	cooldown j
	canUse ()Z a
	decrementCooldown ()V k
	getCooldown ()I i
	start ()V c
net/minecraft/world/entity/ai/goal/target/NonTameRandomTargetGoal bvd
	tamableMob i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/ai/goal/target/OwnerHurtByTargetGoal bve
	ownerLastHurtBy b
	tameAnimal a
	timestamp c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/OwnerHurtTargetGoal bvf
	ownerLastHurt b
	tameAnimal a
	timestamp c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/ResetUniversalAngerTargetGoal bvg
	ALERT_RANGE_Y a
	alertOthersOfSameType c
	lastHurtByPlayerTimestamp d
	mob b
	canUse ()Z a
	getNearbyMobsOfSameType ()Ljava/util/List; i
	start ()V c
	wasHurtByPlayer ()Z h
net/minecraft/world/entity/ai/goal/target/TargetGoal bvh
	CANT_REACH_CACHE c
	CAN_REACH_CACHE b
	EMPTY_REACH_CACHE a
	mob e
	mustReach d
	mustSee f
	reachCache i
	reachCacheTime j
	targetMob g
	unseenMemoryTicks h
	unseenTicks k
	canAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;)Z a
	canContinueToUse ()Z b
	canReach (Lnet/minecraft/world/entity/LivingEntity;)Z a
	getFollowDistance ()D l
	setUnseenMemoryTicks (I)Lnet/minecraft/world/entity/ai/goal/target/TargetGoal; c
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/gossip/GossipContainer bvj
	DISCARD_THRESHOLD a
	LOGGER b
	gossips c
	add (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;I)V a
	decay ()V b
	getCountForType (Lnet/minecraft/world/entity/ai/gossip/GossipType;Ljava/util/function/DoublePredicate;)J a
	getGossipEntries ()Ljava/util/Map; a
	getOrCreate (Ljava/util/UUID;)Lnet/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips; a
	getReputation (Ljava/util/UUID;Ljava/util/function/Predicate;)I a
	mergeValuesForAddition (Lnet/minecraft/world/entity/ai/gossip/GossipType;II)I a
	mergeValuesForTransfer (II)I a
	remove (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	remove (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;I)V b
	remove (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	selectGossipsForTransfer (Lnet/minecraft/util/RandomSource;I)Ljava/util/Collection; a
	store (Lcom/mojang/serialization/DynamicOps;)Ljava/lang/Object; a
	transferFrom (Lnet/minecraft/world/entity/ai/gossip/GossipContainer;Lnet/minecraft/util/RandomSource;I)V a
	unpack ()Ljava/util/stream/Stream; c
	update (Lcom/mojang/serialization/Dynamic;)V a
net/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips bvj$a
	entries a
	decay ()V a
	isEmpty ()Z b
	makeSureValueIsntTooLowOrTooHigh (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	remove (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V b
	unpack (Ljava/util/UUID;)Ljava/util/stream/Stream; a
	weightedValue (Ljava/util/function/Predicate;)I a
net/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry bvj$b
	CODEC a
	LIST_CODEC b
	target c
	type d
	value e
	target ()Ljava/util/UUID; b
	type ()Lnet/minecraft/world/entity/ai/gossip/GossipType; c
	value ()I d
	weightedValue ()I a
net/minecraft/world/entity/ai/gossip/GossipType bvk
	$VALUES o
	CODEC n
	MAJOR_NEGATIVE a
	MAJOR_POSITIVE d
	MINOR_NEGATIVE b
	MINOR_POSITIVE c
	REPUTATION_CHANGE_PER_EVENT f
	REPUTATION_CHANGE_PER_EVERLASTING_MEMORY g
	REPUTATION_CHANGE_PER_TRADE h
	TRADING e
	decayPerDay l
	decayPerTransfer m
	id i
	max k
	weight j
	$values ()[Lnet/minecraft/world/entity/ai/gossip/GossipType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/ai/memory/ExpirableValue bvm
	timeToLive b
	value a
	canExpire ()Z e
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getTimeToLive ()J b
	getValue ()Ljava/lang/Object; c
	hasExpired ()Z d
	of (Ljava/lang/Object;)Lnet/minecraft/world/entity/ai/memory/ExpirableValue; a
	of (Ljava/lang/Object;J)Lnet/minecraft/world/entity/ai/memory/ExpirableValue; a
	tick ()V a
net/minecraft/world/entity/ai/memory/MemoryModuleType bvn
	ADMIRING_DISABLED af
	ADMIRING_ITEM ac
	ANGRY_AT aa
	ATE_RECENTLY au
	ATTACK_COOLING_DOWN p
	ATTACK_TARGET o
	AVOID_TARGET z
	BREED_TARGET r
	BREEZE_JUMP_COOLDOWN aT
	BREEZE_JUMP_INHALING aY
	BREEZE_JUMP_TARGET aZ
	BREEZE_SHOOT aU
	BREEZE_SHOOT_CHARGING aV
	BREEZE_SHOOT_COOLDOWN aX
	BREEZE_SHOOT_RECOVERING aW
	CANT_REACH_WALK_TARGET_SINCE E
	CELEBRATE_LOCATION ah
	DANCING ai
	DIG_COOLDOWN aD
	DISABLE_WALK_TO_ADMIRE_ITEM ae
	DISTURBANCE_LOCATION ay
	DOORS_TO_CLOSE v
	DUMMY a
	GAZE_COOLDOWN_TICKS P
	GOLEM_DETECTED_RECENTLY F
	HAS_HUNTING_COOLDOWN T
	HEARD_BELL_TIME D
	HIDING_PLACE C
	HOME b
	HUNTED_RECENTLY ag
	HURT_BY x
	HURT_BY_ENTITY y
	INTERACTABLE_DOORS u
	INTERACTION_TARGET q
	IS_EMERGING aB
	IS_IN_WATER W
	IS_PANICKING Y
	IS_PREGNANT X
	IS_SNIFFING aA
	IS_TEMPTED Q
	ITEM_PICKUP_COOLDOWN_TICKS aO
	JOB_SITE c
	LAST_SLEPT G
	LAST_WOKEN H
	LAST_WORKED_AT_POI I
	LIKED_NOTEBLOCK_COOLDOWN_TICKS aN
	LIKED_NOTEBLOCK_POSITION aM
	LIKED_PLAYER aL
	LONG_JUMP_COOLDOWN_TICKS R
	LONG_JUMP_MID_JUMP S
	LOOK_TARGET n
	MEETING_POINT e
	NEARBY_ADULT_PIGLINS am
	NEAREST_ATTACKABLE B
	NEAREST_BED w
	NEAREST_HOSTILE A
	NEAREST_LIVING_ENTITIES g
	NEAREST_PLAYERS j
	NEAREST_PLAYER_HOLDING_WANTED_ITEM at
	NEAREST_REPELLENT av
	NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD al
	NEAREST_VISIBLE_ADULT J
	NEAREST_VISIBLE_ADULT_HOGLINS ao
	NEAREST_VISIBLE_ADULT_PIGLIN ap
	NEAREST_VISIBLE_ADULT_PIGLINS an
	NEAREST_VISIBLE_ATTACKABLE_PLAYER l
	NEAREST_VISIBLE_BABY_HOGLIN ak
	NEAREST_VISIBLE_HUNTABLE_HOGLIN aj
	NEAREST_VISIBLE_LIVING_ENTITIES h
	NEAREST_VISIBLE_NEMESIS L
	NEAREST_VISIBLE_PLAYER k
	NEAREST_VISIBLE_WANTED_ITEM K
	NEAREST_VISIBLE_ZOMBIFIED aq
	PACIFIED aw
	PATH t
	PLAY_DEAD_TICKS M
	POTENTIAL_JOB_SITE d
	RAM_COOLDOWN_TICKS U
	RAM_TARGET V
	RECENT_PROJECTILE az
	RIDE_TARGET s
	ROAR_SOUND_COOLDOWN aE
	ROAR_SOUND_DELAY aC
	ROAR_TARGET ax
	SECONDARY_JOB_SITE f
	SNIFFER_DIGGING aR
	SNIFFER_EXPLORED_POSITIONS aP
	SNIFFER_HAPPY aS
	SNIFFER_SNIFFING_TARGET aQ
	SNIFF_COOLDOWN aF
	SONIC_BOOM_COOLDOWN aI
	SONIC_BOOM_SOUND_COOLDOWN aJ
	SONIC_BOOM_SOUND_DELAY aK
	TEMPTATION_COOLDOWN_TICKS O
	TEMPTING_PLAYER N
	TIME_TRYING_TO_REACH_ADMIRE_ITEM ad
	TOUCH_COOLDOWN aG
	UNIVERSAL_ANGER ab
	UNREACHABLE_TONGUE_TARGETS Z
	VIBRATION_COOLDOWN aH
	VISIBLE_ADULT_HOGLIN_COUNT as
	VISIBLE_ADULT_PIGLIN_COUNT ar
	VISIBLE_VILLAGER_BABIES i
	WALK_TARGET m
	codec ba
	getCodec ()Ljava/util/Optional; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
net/minecraft/world/entity/ai/memory/MemoryStatus bvo
	$VALUES d
	REGISTERED c
	VALUE_ABSENT b
	VALUE_PRESENT a
	$values ()[Lnet/minecraft/world/entity/ai/memory/MemoryStatus; a
net/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities bvp
	EMPTY a
	lineOfSightTest c
	nearbyEntities b
	contains (Ljava/util/function/Predicate;)Z d
	contains (Lnet/minecraft/world/entity/LivingEntity;)Z a
	empty ()Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities; a
	find (Ljava/util/function/Predicate;)Ljava/util/stream/Stream; c
	findAll (Ljava/util/function/Predicate;)Ljava/lang/Iterable; b
	findClosest (Ljava/util/function/Predicate;)Ljava/util/Optional; a
net/minecraft/world/entity/ai/memory/WalkTarget bvq
	closeEnoughDist c
	speedModifier b
	target a
	getCloseEnoughDist ()I c
	getSpeedModifier ()F b
	getTarget ()Lnet/minecraft/world/entity/ai/behavior/PositionTracker; a
net/minecraft/world/entity/ai/navigation/AmphibiousPathNavigation bvs
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	canUpdatePath ()Z a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getGroundY (Lnet/minecraft/world/phys/Vec3;)D a
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	setCanFloat (Z)V a
net/minecraft/world/entity/ai/navigation/FlyingPathNavigation bvt
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	canOpenDoors ()Z e
	canPassDoors ()Z d
	canUpdatePath ()Z a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	setCanOpenDoors (Z)V b
	setCanPassDoors (Z)V c
	tick ()V c
net/minecraft/world/entity/ai/navigation/GroundPathNavigation bvu
	avoidSun p
	canOpenDoors ()Z f
	canPassDoors ()Z e
	canUpdatePath ()Z a
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getSurfaceY ()I s
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	hasValidPathType (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z a
	setAvoidSun (Z)V d
	setCanOpenDoors (Z)V b
	setCanPassDoors (Z)V c
	setCanWalkOverFences (Z)V e
	trimPath ()V U_
net/minecraft/world/entity/ai/navigation/PathNavigation bvv
	MAX_TIME_RECOMPUTE p
	STUCK_CHECK_INTERVAL q
	STUCK_THRESHOLD_DISTANCE_FACTOR r
	hasDelayedRecomputation m
	isStuck w
	lastStuckCheck f
	lastStuckCheckPos g
	lastTimeoutCheck j
	level b
	maxDistanceToWaypoint l
	maxVisitedNodesMultiplier u
	mob a
	nodeEvaluator o
	path c
	pathFinder v
	reachRange t
	speedModifier d
	targetPos s
	tick e
	timeLastRecompute n
	timeoutCachedNode h
	timeoutLimit k
	timeoutTimer i
	canCutCorner (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z b
	canFloat ()Z p
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	canUpdatePath ()Z a
	createPath (DDDI)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/Set;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/Set;IZI)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/Set;IZIF)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/stream/Stream;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/core/BlockPos;II)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	doStuckDetection (Lnet/minecraft/world/phys/Vec3;)V b
	followThePath ()V k
	getGroundY (Lnet/minecraft/world/phys/Vec3;)D a
	getMaxDistanceToWaypoint ()F q
	getNodeEvaluator ()Lnet/minecraft/world/level/pathfinder/NodeEvaluator; o
	getPath ()Lnet/minecraft/world/level/pathfinder/Path; j
	getTargetPos ()Lnet/minecraft/core/BlockPos; h
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	isClearForMovementBetween (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Z)Z a
	isDone ()Z l
	isInProgress ()Z m
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	isStuck ()Z r
	moveTo (DDDD)Z a
	moveTo (Lnet/minecraft/world/entity/Entity;D)Z a
	moveTo (Lnet/minecraft/world/level/pathfinder/Path;D)Z a
	recomputePath ()V i
	resetMaxVisitedNodesMultiplier ()V g
	resetStuckTimeout ()V f
	setCanFloat (Z)V a
	setMaxVisitedNodesMultiplier (F)V a
	setSpeedModifier (D)V a
	shouldRecomputePath (Lnet/minecraft/core/BlockPos;)Z b
	shouldTargetNextNodeInDirection (Lnet/minecraft/world/phys/Vec3;)Z c
	stop ()V n
	tick ()V c
	timeoutPath ()V e
	trimPath ()V U_
net/minecraft/world/entity/ai/navigation/WallClimberNavigation bvw
	pathToPosition p
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	moveTo (Lnet/minecraft/world/entity/Entity;D)Z a
	tick ()V c
net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation bvx
	allowBreaching p
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	canUpdatePath ()Z a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getGroundY (Lnet/minecraft/world/phys/Vec3;)D a
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	setCanFloat (Z)V a
net/minecraft/world/entity/ai/sensing/AdultSensor bwa
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
	setNearestVisibleAdult (Lnet/minecraft/world/entity/AgeableMob;Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities;)V a
net/minecraft/world/entity/ai/sensing/AxolotlAttackablesSensor bwb
	TARGET_DETECTION_DISTANCE a
	getMemory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; b
	isClose (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z f
	isHostileTarget (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isHuntTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z e
	isMatchingEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/sensing/BreezeAttackEntitySensor bwc
	BREEZE_SENSOR_RADIUS a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/breeze/Breeze;)V a
	radiusXZ ()I b
	radiusY ()I c
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/DummySensor bwd
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/FrogAttackablesSensor bwe
	TARGET_DETECTION_DISTANCE a
	getMemory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; b
	isMatchingEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isUnreachableAttackTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z e
net/minecraft/world/entity/ai/sensing/GolemSensor bwf
	GOLEM_SCAN_RATE a
	MEMORY_TIME_TO_LIVE c
	checkForNearbyGolem (Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	golemDetected (Lnet/minecraft/world/entity/LivingEntity;)V b
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/HoglinSpecificSensor bwg
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)V a
	findNearestRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; b
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/HurtBySensor bwh
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/IsInWaterSensor bwi
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestBedSensor bwj
	BATCH_SIZE c
	CACHE_TIMEOUT a
	RATE d
	batchCache e
	lastUpdate g
	triedCount f
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestItemSensor bwk
	MAX_DISTANCE_TO_WANTED_ITEM a
	XZ_RANGE c
	Y_RANGE d
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor bwl
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	radiusXZ ()I b
	radiusY ()I c
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestVisibleLivingEntitySensor bwm
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	getMemory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; b
	getNearestEntity (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; b
	getVisibleEntities (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	isMatchingEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/PiglinBruteSpecificSensor bwn
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/PiglinSpecificSensor bwo
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	findNearestRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; c
	isValidRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/PlayerSensor bwp
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/SecondaryPoiSensor bwq
	SCAN_RATE a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/Sensing bwr
	mob a
	seen b
	unseen c
	hasLineOfSight (Lnet/minecraft/world/entity/Entity;)Z a
	tick ()V a
net/minecraft/world/entity/ai/sensing/Sensor bws
	ATTACK_TARGET_CONDITIONS f
	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_AND_LINE_OF_SIGHT i
	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING g
	ATTACK_TARGET_CONDITIONS_IGNORE_LINE_OF_SIGHT h
	DEFAULT_SCAN_RATE c
	RANDOM a
	TARGETING_RANGE b
	TARGET_CONDITIONS d
	TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING e
	scanRate j
	timeToTick k
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	isEntityAttackable (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z c
	isEntityAttackableIgnoringLineOfSight (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z d
	isEntityTargetable (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z b
	requires ()Ljava/util/Set; a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/ai/sensing/SensorType bwt
	AXOLOTL_ATTACKABLES o
	AXOLOTL_TEMPTATIONS p
	BREEZE_ATTACK_ENTITY_SENSOR x
	CAMEL_TEMPTATIONS s
	DUMMY a
	FROG_ATTACKABLES t
	FROG_TEMPTATIONS r
	GOAT_TEMPTATIONS q
	GOLEM_DETECTED j
	HOGLIN_SPECIFIC_SENSOR m
	HURT_BY f
	IS_IN_WATER u
	NEAREST_ADULT n
	NEAREST_BED e
	NEAREST_ITEMS b
	NEAREST_LIVING_ENTITIES c
	NEAREST_PLAYERS d
	PIGLIN_BRUTE_SPECIFIC_SENSOR l
	PIGLIN_SPECIFIC_SENSOR k
	SECONDARY_POIS i
	SNIFFER_TEMPTATIONS w
	VILLAGER_BABIES h
	VILLAGER_HOSTILES g
	WARDEN_ENTITY_SENSOR v
	factory y
	create ()Lnet/minecraft/world/entity/ai/sensing/Sensor; a
	register (Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/world/entity/ai/sensing/SensorType; a
net/minecraft/world/entity/ai/sensing/TemptingSensor bwu
	TEMPTATION_RANGE a
	TEMPT_TARGETING c
	temptations d
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)V a
	isTemptation (Lnet/minecraft/world/item/ItemStack;)Z a
	playerHoldingTemptation (Lnet/minecraft/world/entity/player/Player;)Z a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor bwv
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	getNearestVillagerBabies (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/List; a
	getVisibleEntities (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities; c
	isVillagerBaby (Lnet/minecraft/world/entity/LivingEntity;)Z b
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor bww
	ACCEPTABLE_DISTANCE_FROM_HOSTILES a
	getMemory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; b
	isClose (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z e
	isHostile (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isMatchingEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/sensing/WardenEntitySensor bwx
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;)V a
	getClosest (Lnet/minecraft/world/entity/monster/warden/Warden;Ljava/util/function/Predicate;)Ljava/util/Optional; a
	radiusXZ ()I b
	radiusY ()I c
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/targeting/TargetingConditions bwz
	DEFAULT a
	MIN_VISIBILITY_DISTANCE_FOR_INVISIBLE_TARGET b
	checkLineOfSight e
	isCombat c
	range d
	selector g
	testInvisible f
	copy ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; c
	forCombat ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	forNonCombat ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; b
	ignoreInvisibilityTesting ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; e
	ignoreLineOfSight ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; d
	range (D)Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	selector (Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	test (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/util/AirAndWaterRandomPos bxb
	generateRandomPos (Lnet/minecraft/world/entity/PathfinderMob;IIIDDDZ)Lnet/minecraft/core/BlockPos; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;IIIDDD)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/util/AirRandomPos bxc
	getPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IIILnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/util/DefaultRandomPos bxd
	generateRandomPosTowardDirection (Lnet/minecraft/world/entity/PathfinderMob;IZLnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; a
	getPosAway (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	getPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/util/GoalUtils bxe
	hasGroundPathNavigation (Lnet/minecraft/world/entity/Mob;)Z a
	hasMalus (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z b
	isNotStable (Lnet/minecraft/world/entity/ai/navigation/PathNavigation;Lnet/minecraft/core/BlockPos;)Z a
	isOutsideLimits (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	isRestricted (ZLnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z a
	isSolid (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z c
	isWater (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z a
	mobRestricted (Lnet/minecraft/world/entity/PathfinderMob;I)Z a
net/minecraft/world/entity/ai/util/HoverRandomPos bxf
	getPos (Lnet/minecraft/world/entity/PathfinderMob;IIDDFII)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/util/LandRandomPos bxg
	generateRandomPosTowardDirection (Lnet/minecraft/world/entity/PathfinderMob;IZLnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;IILjava/util/function/ToDoubleFunction;)Lnet/minecraft/world/phys/Vec3; a
	getPosAway (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; b
	getPosInDirection (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;Z)Lnet/minecraft/world/phys/Vec3; a
	getPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	movePosUpOutOfSolid (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/entity/ai/util/RandomPos bxh
	RANDOM_POS_ATTEMPTS a
	generateRandomDirection (Lnet/minecraft/util/RandomSource;II)Lnet/minecraft/core/BlockPos; a
	generateRandomDirectionWithinRadians (Lnet/minecraft/util/RandomSource;IIIDDD)Lnet/minecraft/core/BlockPos; a
	generateRandomPos (Ljava/util/function/Supplier;Ljava/util/function/ToDoubleFunction;)Lnet/minecraft/world/phys/Vec3; a
	generateRandomPos (Lnet/minecraft/world/entity/PathfinderMob;Ljava/util/function/Supplier;)Lnet/minecraft/world/phys/Vec3; a
	generateRandomPosTowardDirection (Lnet/minecraft/world/entity/PathfinderMob;ILnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	moveUpOutOfSolid (Lnet/minecraft/core/BlockPos;ILjava/util/function/Predicate;)Lnet/minecraft/core/BlockPos; a
	moveUpToAboveSolid (Lnet/minecraft/core/BlockPos;IILjava/util/function/Predicate;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/entity/ai/village/ReputationEventType bxj
	GOLEM_KILLED b
	TRADE e
	VILLAGER_HURT c
	VILLAGER_KILLED d
	ZOMBIE_VILLAGER_CURED a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/village/ReputationEventType; a
net/minecraft/world/entity/ai/village/VillageSiege bxk
	LOGGER a
	hasSetupSiege b
	nextSpawnTime e
	siegeState c
	spawnX f
	spawnY g
	spawnZ h
	zombiesToSpawn d
	findRandomSpawnPos (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
	trySpawn (Lnet/minecraft/server/level/ServerLevel;)V b
	tryToSetupSiege (Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/ai/village/VillageSiege$State bxk$a
	$VALUES d
	SIEGE_CAN_ACTIVATE a
	SIEGE_DONE c
	SIEGE_TONIGHT b
	$values ()[Lnet/minecraft/world/entity/ai/village/VillageSiege$State; a
net/minecraft/world/entity/ai/village/poi/PoiManager bxm
	MAX_VILLAGE_DISTANCE a
	VILLAGE_SECTION_SIZE b
	distanceTracker d
	loadedChunks e
	add (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Holder;)V a
	checkConsistencyWithBlocks (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/chunk/LevelChunkSection;)V a
	ensureLoadedAndValid (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;I)V a
	exists (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	existsAtPosition (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;)Z a
	find (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; d
	findAll (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	findAllClosestFirstWithType (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; c
	findAllWithType (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; b
	findClosest (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; e
	findClosest (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; d
	findClosestWithType (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; e
	getCountInRange (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)J a
	getFreeTickets (Lnet/minecraft/core/BlockPos;)I d
	getInChunk (Ljava/util/function/Predicate;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	getInRange (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; c
	getInSquare (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; b
	getRandom (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;Lnet/minecraft/core/BlockPos;ILnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	getType (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; c
	isVillageCenter (J)Z g
	mayHavePoi (Lnet/minecraft/world/level/chunk/LevelChunkSection;)Z a
	onSectionLoad (J)V b
	release (Lnet/minecraft/core/BlockPos;)Z b
	remove (Lnet/minecraft/core/BlockPos;)V a
	sectionsToVillage (Lnet/minecraft/core/SectionPos;)I a
	setDirty (J)V a
	take (Ljava/util/function/Predicate;Ljava/util/function/BiPredicate;Lnet/minecraft/core/BlockPos;I)Ljava/util/Optional; a
	tick (Ljava/util/function/BooleanSupplier;)V a
	updateFromSection (Lnet/minecraft/world/level/chunk/LevelChunkSection;Lnet/minecraft/core/SectionPos;Ljava/util/function/BiConsumer;)V a
net/minecraft/world/entity/ai/village/poi/PoiManager$DistanceTracker bxm$a
	levels b
	getLevel (J)I c
	getLevelFromSource (J)I b
	runAllUpdates ()V a
	setLevel (JI)V a
net/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy bxm$b
	$VALUES e
	ANY c
	HAS_SPACE a
	IS_OCCUPIED b
	test d
	$values ()[Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy; b
	getTest ()Ljava/util/function/Predicate; a
net/minecraft/world/entity/ai/village/poi/PoiRecord bxn
	freeTickets c
	poiType b
	pos a
	setDirty d
	acquireTicket ()Z b
	codec (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; a
	getFreeTickets ()I a
	getPoiType ()Lnet/minecraft/core/Holder; g
	getPos ()Lnet/minecraft/core/BlockPos; f
	hasSpace ()Z d
	isOccupied ()Z e
	releaseTicket ()Z c
net/minecraft/world/entity/ai/village/poi/PoiSection bxo
	LOGGER a
	byType c
	isValid e
	records b
	setDirty d
	add (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Holder;)V a
	add (Lnet/minecraft/world/entity/ai/village/poi/PoiRecord;)Z a
	clear ()V b
	codec (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; a
	exists (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	getFreeTickets (Lnet/minecraft/core/BlockPos;)I b
	getPoiRecord (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; e
	getRecords (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	getType (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; d
	isValid ()Z a
	refresh (Ljava/util/function/Consumer;)V a
	release (Lnet/minecraft/core/BlockPos;)Z c
	remove (Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/entity/ai/village/poi/PoiType bxp
	NONE a
	matchingStates b
	maxTickets c
	validRange d
	is (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	matchingStates ()Ljava/util/Set; a
	maxTickets ()I b
	validRange ()I c
net/minecraft/world/entity/ai/village/poi/PoiTypes bxq
	ARMORER a
	BEDS u
	BEEHIVE p
	BEE_NEST q
	BUTCHER b
	CARTOGRAPHER c
	CAULDRONS v
	CLERIC d
	FARMER e
	FISHERMAN f
	FLETCHER g
	HOME n
	LEATHERWORKER h
	LIBRARIAN i
	LIGHTNING_ROD t
	LODESTONE s
	MASON j
	MEETING o
	NETHER_PORTAL r
	SHEPHERD k
	TOOLSMITH l
	TYPE_BY_STATE w
	WEAPONSMITH m
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/entity/ai/village/poi/PoiType; a
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	forState (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; a
	getBlockStates (Lnet/minecraft/world/level/block/Block;)Ljava/util/Set; a
	hasPoi (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;Ljava/util/Set;II)Lnet/minecraft/world/entity/ai/village/poi/PoiType; a
	registerBlockStates (Lnet/minecraft/core/Holder;Ljava/util/Set;)V a
net/minecraft/world/entity/ambient/AmbientCreature bxs
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/entity/ambient/Bat bxt
	BAT_RESTING_TARGETING bU
	DATA_ID_FLAGS bS
	FLAG_RESTING bT
	FLAP_LENGTH_SECONDS b
	TICKS_PER_FLAP c
	flyAnimationState d
	restAnimationState e
	targetPosition bV
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkBatSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	doPush (Lnet/minecraft/world/entity/Entity;)V D
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aW
	getSoundVolume ()F eW
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVoicePitch ()F eX
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFlapping ()Z aT
	isHalloween ()Z A
	isIgnoringBlockTriggers ()Z r_
	isPushable ()Z bu
	isResting ()Z w
	pushEntities ()V M_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setResting (Z)V w
	setupAnimationStates ()V ga
	tick ()V l
net/minecraft/world/entity/animal/AbstractFish bxv
	FROM_BUCKET b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	canRandomSwim ()Z ge
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V c_
	fromBucket ()Z w
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; gf
	getMaxSpawnClusterSize ()I fI
	getPickupSound ()Lnet/minecraft/sounds/SoundEvent; A
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aN
	loadFromBucketTag (Lnet/minecraft/nbt/CompoundTag;)V c
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z W
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V l
	setFromBucket (Z)V w
	travel (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/animal/AbstractFish$FishMoveControl bxv$a
	fish l
	tick ()V a
net/minecraft/world/entity/animal/AbstractFish$FishSwimGoal bxv$b
	fish i
	canUse ()Z a
net/minecraft/world/entity/animal/AbstractGolem bxw
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getAmbientSoundInterval ()I Q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	removeWhenFarAway (D)Z h
net/minecraft/world/entity/animal/AbstractSchoolingFish bxx
	leader b
	schoolSize c
	addFollower ()V gn
	addFollowers (Ljava/util/stream/Stream;)V a
	canBeFollowed ()Z gj
	canRandomSwim ()Z ge
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getMaxSchoolSize ()I gg
	getMaxSpawnClusterSize ()I fI
	hasFollowers ()Z gk
	inRangeOfLeader ()Z gl
	isFollower ()Z gh
	pathToLeader ()V gm
	registerGoals ()V B
	removeFollower ()V go
	startFollowing (Lnet/minecraft/world/entity/animal/AbstractSchoolingFish;)Lnet/minecraft/world/entity/animal/AbstractSchoolingFish; a
	stopFollowing ()V gi
	tick ()V l
net/minecraft/world/entity/animal/AbstractSchoolingFish$SchoolSpawnGroupData bxx$a
	leader a
net/minecraft/world/entity/animal/Animal bxy
	PARENT_AGE_AFTER_BREEDING bV
	inLove bT
	loveCause bU
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	canFallInLove ()Z gf
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	checkAnimalSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	customServerAiStep ()V Z
	finalizeSpawnChildFromBreeding (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/AgeableMob;)V a
	getAmbientSoundInterval ()I Q
	getExperienceReward ()I ee
	getInLoveTime ()I gg
	getLoveCause ()Lnet/minecraft/server/level/ServerPlayer; gh
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleEntityEvent (B)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isBrightEnoughToSpawn (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isInLove ()Z gi
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	resetLove ()V gj
	setInLove (Lnet/minecraft/world/entity/player/Player;)V g
	setInLoveTime (I)V s
	spawnChildFromBreeding (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;)V a
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/animal/Bee bxz
	COOLDOWN_BEFORE_LOCATING_NEW_FLOWER cE
	COOLDOWN_BEFORE_LOCATING_NEW_HIVE cC
	DATA_FLAGS_ID cd
	DATA_REMAINING_ANGER_TIME ce
	FLAG_HAS_NECTAR ch
	FLAG_HAS_STUNG cg
	FLAG_ROLL cf
	FLAP_DEGREES_PER_TICK bT
	HIVE_CLOSE_ENOUGH_DISTANCE cq
	HIVE_SEARCH_DISTANCE cs
	MAX_CROPS_GROWABLE cm
	MIN_ATTACK_DIST cl
	PATHFIND_TO_HIVE_WHEN_CLOSER_THAN cr
	PERSISTENT_ANGER_TIME ct
	POISON_SECONDS_HARD co
	POISON_SECONDS_NORMAL cn
	STING_DEATH_COUNTDOWN ci
	TAG_CANNOT_ENTER_HIVE_TICKS bX
	TAG_CROPS_GROWN_SINCE_POLLINATION bW
	TAG_FLOWER_POS cb
	TAG_HAS_NECTAR ca
	TAG_HAS_STUNG bZ
	TAG_HIVE_POS cc
	TAG_TICKS_SINCE_POLLINATION bY
	TICKS_BEFORE_GOING_TO_KNOWN_FLOWER cj
	TICKS_PER_FLAP bU
	TICKS_WITHOUT_NECTAR_BEFORE_GOING_HOME ck
	TOO_FAR_DISTANCE cp
	beePollinateGoal cI
	goToHiveGoal cJ
	goToKnownFlowerGoal cK
	hivePos cH
	numCropsGrownSincePollination cB
	persistentAngerTarget cu
	remainingCooldownBeforeLocatingNewFlower cF
	remainingCooldownBeforeLocatingNewHive cD
	rollAmount cw
	rollAmountO cx
	savedFlowerPos cG
	stayOutOfHiveCountdown cA
	ticksWithoutNectarSinceExitingHive cz
	timeSinceSting cy
	underWaterTicks cL
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	closerThan (Lnet/minecraft/core/BlockPos;I)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gq
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	doesHiveHaveSpace (Lnet/minecraft/core/BlockPos;)Z k
	dropOffNectar ()V gs
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBlacklistedHives ()Ljava/util/List; ge
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Bee; b
	getCropsGrownSincePollination ()I gx
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getFlag (I)Z u
	getGoalSelector ()Lnet/minecraft/world/entity/ai/goal/GoalSelector; gn
	getHivePos ()Lnet/minecraft/core/BlockPos; gm
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cJ
	getMobType ()Lnet/minecraft/world/entity/MobType; eS
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getRollAmount (F)F E
	getSavedFlowerPos ()Lnet/minecraft/core/BlockPos; u
	getSoundVolume ()F eW
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTravellingTicks ()I A
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasHive ()Z gl
	hasNectar ()Z go
	hasSavedFlowerPos ()Z w
	hasStung ()Z gp
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	incrementNumCropsGrownSincePollination ()V gz
	isFlapping ()Z aT
	isFlowerValid (Lnet/minecraft/core/BlockPos;)Z m
	isFlying ()Z gr
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isHiveNearFire ()Z gw
	isHiveValid ()Z gA
	isRolling ()Z gB
	isTiredOfLookingForNectar ()Z gt
	isTooFarAway (Lnet/minecraft/core/BlockPos;)Z l
	jumpInLiquid (Lnet/minecraft/tags/TagKey;)V c
	pathfindRandomlyTowards (Lnet/minecraft/core/BlockPos;)V j
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	resetNumCropsGrownSincePollination ()V gy
	resetTicksWithoutNectarSinceExitingHive ()V gk
	sendDebugPackets ()V Y
	setFlag (IZ)V d
	setHasNectar (Z)V w
	setHasStung (Z)V x
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setRolling (Z)V y
	setSavedFlowerPos (Lnet/minecraft/core/BlockPos;)V i
	setStayOutOfHiveCountdown (I)V t
	spawnFluidParticle (Lnet/minecraft/world/level/Level;DDDDDLnet/minecraft/core/particles/ParticleOptions;)V a
	startPersistentAngerTimer ()V c
	tick ()V l
	updateRollAmount ()V gv
	wantsToEnterHive ()Z gu
net/minecraft/world/entity/animal/Bee$BaseBeeGoal bxz$a
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeAttackGoal bxz$b
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeBecomeAngryTargetGoal bxz$c
	beeCanTarget ()Z i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeEnterHiveGoal bxz$d
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	start ()V c
net/minecraft/world/entity/animal/Bee$BeeGoToHiveGoal bxz$e
	MAX_BLACKLISTED_TARGETS e
	MAX_TRAVELLING_TICKS b
	TICKS_BEFORE_HIVE_DROP h
	blacklistedTargets f
	lastPath g
	ticksStuck i
	travellingTicks d
	blacklistTarget (Lnet/minecraft/core/BlockPos;)V c
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	canContinueToUse ()Z b
	canUse ()Z a
	clearBlacklist ()V k
	dropAndBlacklistHive ()V l
	dropHive ()V m
	hasReachedTarget (Lnet/minecraft/core/BlockPos;)Z d
	isTargetBlacklisted (Lnet/minecraft/core/BlockPos;)Z b
	pathfindDirectlyTowards (Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeGoToKnownFlowerGoal bxz$f
	MAX_TRAVELLING_TICKS c
	travellingTicks d
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
	wantsToGoToKnownFlower ()Z k
net/minecraft/world/entity/animal/Bee$BeeGrowCropGoal bxz$g
	GROW_CHANCE b
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeHurtByOtherGoal bxz$h
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/Bee$BeeLocateHiveGoal bxz$i
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	findNearbyHivesWithSpace ()Ljava/util/List; k
	start ()V c
net/minecraft/world/entity/animal/Bee$BeeLookControl bxz$j
	resetXRotOnTick ()Z c
	tick ()V a
net/minecraft/world/entity/animal/Bee$BeePollinateGoal bxz$k
	ARRIVAL_THRESHOLD g
	HOVER_HEIGHT_WITHIN_FLOWER j
	HOVER_POS_OFFSET k
	MAX_FIND_FLOWER_RETRY_COOLDOWN e
	MAX_POLLINATING_TICKS q
	MIN_FIND_FLOWER_RETRY_COOLDOWN d
	MIN_POLLINATION_TICKS c
	POSITION_CHANGE_CHANCE h
	SPEED_MODIFIER i
	VALID_POLLINATION_BLOCKS f
	hoverPos o
	lastSoundPlayedTick m
	pollinating n
	pollinatingTicks p
	successfulPollinatingTicks l
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	findNearbyFlower ()Ljava/util/Optional; p
	findNearestBlock (Ljava/util/function/Predicate;D)Ljava/util/Optional; a
	getOffset ()F o
	hasPollinatedLongEnough ()Z k
	isPollinating ()Z l
	requiresUpdateEveryTick ()Z T_
	setWantedPos ()V n
	start ()V c
	stop ()V d
	stopPollinating ()V m
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeWanderGoal bxz$l
	WANDER_THRESHOLD b
	canContinueToUse ()Z b
	canUse ()Z a
	findPos ()Lnet/minecraft/world/phys/Vec3; h
	start ()V c
net/minecraft/world/entity/animal/Bucketable bya
	bucketMobPickup (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	fromBucket ()Z w
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getPickupSound ()Lnet/minecraft/sounds/SoundEvent; A
	loadDefaultDataFromBucketTag (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/nbt/CompoundTag;)V a
	loadFromBucketTag (Lnet/minecraft/nbt/CompoundTag;)V c
	saveDefaultDataToBucketTag (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/item/ItemStack;)V a
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V l
	setFromBucket (Z)V w
net/minecraft/world/entity/animal/Cat byb
	DATA_COLLAR_COLOR cd
	DATA_VARIANT_ID ca
	IS_LYING cb
	RELAX_STATE_ONE cc
	SPRINT_SPEED_MOD bY
	TEMPT_INGREDIENT bZ
	TEMPT_SPEED_MOD bW
	WALK_SPEED_MOD bX
	avoidPlayersGoal ce
	lieDownAmount cg
	lieDownAmountO ch
	lieDownAmountOTail cj
	lieDownAmountTail ci
	relaxStateOneAmount ck
	relaxStateOneAmountO cl
	temptGoal cf
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gq
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getAmbientSoundInterval ()I Q
	getAttackDamage ()F gr
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Cat; b
	getCollarColor ()Lnet/minecraft/world/item/DyeColor; go
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLieDownAmount (F)F E
	getLieDownAmountTail (F)F F
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getRelaxStateOneAmount (F)F G
	getResourceLocation ()Lnet/minecraft/resources/ResourceLocation; gk
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/animal/CatVariant; gl
	handleLieDown ()V gs
	hiss ()V gp
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isLying ()Z gm
	isRelaxStateOne ()Z gn
	isSteppingCarefully ()Z bT
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTameGoals ()V w
	registerGoals ()V B
	removeWhenFarAway (D)Z h
	setCollarColor (Lnet/minecraft/world/item/DyeColor;)V a
	setLying (Z)V A
	setRelaxStateOne (Z)V B
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/animal/CatVariant;)V a
	tick ()V l
	updateLieDownAmount ()V gt
	updateRelaxStateOneAmount ()V gu
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/animal/Cat$CatAvoidEntityGoal byb$a
	cat i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Cat$CatRelaxOnOwnerGoal byb$b
	cat a
	goalPos c
	onBedTicks d
	ownerPlayer b
	canContinueToUse ()Z b
	canUse ()Z a
	giveMorningGift ()V i
	spaceIsOccupied ()Z h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Cat$CatTemptGoal byb$c
	cat d
	selectedPlayer c
	canScare ()Z h
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/animal/CatVariant byc
	ALL_BLACK k
	BLACK b
	BRITISH_SHORTHAIR e
	CALICO f
	JELLIE j
	PERSIAN g
	RAGDOLL h
	RED c
	SIAMESE d
	TABBY a
	WHITE i
	texture l
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/entity/animal/CatVariant; a
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/world/entity/animal/CatVariant; a
	texture ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/entity/animal/Chicken byd
	FOOD_ITEMS cb
	eggTime bZ
	flap bT
	flapSpeed bU
	flapping bY
	isChickenJockey ca
	nextFlap cc
	oFlap bX
	oFlapSpeed bW
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Chicken; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getExperienceReward ()I ee
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	isChickenJockey ()Z w
	isFlapping ()Z aT
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	onFlap ()V aS
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	positionRider (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	removeWhenFarAway (D)Z h
	setChickenJockey (Z)V w
net/minecraft/world/entity/animal/Cod bye
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; gf
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
net/minecraft/world/entity/animal/Cow byf
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Cow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getSoundVolume ()F eW
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	registerGoals ()V B
net/minecraft/world/entity/animal/Dolphin byg
	ALLOWED_ITEMS c
	GOT_FISH e
	MOISTNESS_LEVEL bT
	SWIM_WITH_PLAYER_TARGETING bU
	TOTAL_AIR_SUPPLY b
	TOTAL_MOISTNESS_LEVEL bV
	TREASURE_POS d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canRide (Lnet/minecraft/world/entity/Entity;)Z o
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z f
	closeToNextPos ()Z gf
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; ge
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V c_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxAirSupply ()I ch
	getMaxHeadXRot ()I aa
	getMaxHeadYRot ()I ab
	getMoistnessLevel ()I A
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aN
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aO
	getTreasurePos ()Lnet/minecraft/core/BlockPos; u
	gotFish ()Z w
	handleAirSupply (I)V b
	handleEntityEvent (B)V b
	increaseAirSupply (I)I n
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	setGotFish (Z)V w
	setMoisntessLevel (I)V c
	setTreasurePos (Lnet/minecraft/core/BlockPos;)V i
	tick ()V l
	travel (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/animal/Dolphin$DolphinSwimToTreasureGoal byg$a
	dolphin a
	stuck b
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z S_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Dolphin$DolphinSwimWithPlayerGoal byg$b
	dolphin a
	player c
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Dolphin$PlayWithItemsGoal byg$c
	cooldown b
	canUse ()Z a
	drop (Lnet/minecraft/world/item/ItemStack;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/FlyingAnimal byh
	isFlying ()Z gr
net/minecraft/world/entity/animal/Fox byi
	ALLOWED_ITEMS cf
	AVOID_PLAYERS ci
	DATA_FLAGS_ID bY
	DATA_TRUSTED_ID_0 cd
	DATA_TRUSTED_ID_1 ce
	DATA_TYPE_ID bX
	FLAG_CROUCHING bT
	FLAG_DEFENDING cc
	FLAG_FACEPLANTED cb
	FLAG_INTERESTED bU
	FLAG_POUNCING bW
	FLAG_SITTING bZ
	FLAG_SLEEPING ca
	MIN_TICKS_BEFORE_EAT cj
	STALKABLE_PREY ch
	TRUSTED_TARGET_SELECTOR cg
	crouchAmount cp
	crouchAmountO cq
	fishTargetGoal cm
	interestedAngle cn
	interestedAngleO co
	landTargetGoal ck
	ticksSinceEaten cr
	turtleEggTargetGoal cl
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addTrustedUUID (Ljava/util/UUID;)V b
	aiStep ()V d_
	calculateFallDamage (FF)I d
	canEat (Lnet/minecraft/world/item/ItemStack;)Z l
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z j
	canMove ()Z gt
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z f
	checkFoxSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	clearStates ()V gs
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	defineSynchedData ()V c_
	dropAllDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;)V g
	dropItemStack (Lnet/minecraft/world/item/ItemStack;)V o
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Fox; b
	getCrouchAmount (F)F F
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; d
	getFlag (I)Z t
	getHeadRollAngle (F)F E
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cJ
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTrustedUUIDs ()Ljava/util/List; gp
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/animal/Fox$Type; w
	handleEntityEvent (B)V b
	isCrouching ()Z bX
	isDefending ()Z gq
	isFaceplanted ()Z ge
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isFullyCrouched ()Z gm
	isImmobile ()Z eY
	isInterested ()Z gn
	isJumping ()Z gl
	isPathClear (Lnet/minecraft/world/entity/animal/Fox;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isPouncing ()Z gk
	isSitting ()Z A
	isSleeping ()Z fD
	onOffspringSpawnedFromEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playAmbientSound ()V R
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	setDefending (Z)V B
	setFaceplanted (Z)V A
	setFlag (IZ)V d
	setIsCrouching (Z)V y
	setIsInterested (Z)V z
	setIsPouncing (Z)V x
	setSitting (Z)V w
	setSleeping (Z)V C
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	setTargetGoals ()V go
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/animal/Fox$Type;)V a
	spitOutItem (Lnet/minecraft/world/item/ItemStack;)V n
	tick ()V l
	trusts (Ljava/util/UUID;)Z c
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
	wakeUp ()V gr
net/minecraft/world/entity/animal/Fox$DefendTrustedTargetGoal byi$a
	timestamp l
	trustedLastHurt k
	trustedLastHurtBy j
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FaceplantGoal byi$b
	countdown a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxAlertableEntitiesSelector byi$c
	test (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/animal/Fox$FoxBehaviorGoal byi$d
	alertableTargeting b
	alertable ()Z i
	hasShelter ()Z h
net/minecraft/world/entity/animal/Fox$FoxBreedGoal byi$e
	breed ()V g
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxEatBerriesGoal byi$f
	WAIT_TICKS i
	ticksWaited g
	acceptedDistance ()D i
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	onReachedTarget ()V o
	pickGlowBerry (Lnet/minecraft/world/level/block/state/BlockState;)V a
	pickSweetBerries (Lnet/minecraft/world/level/block/state/BlockState;)V b
	shouldRecalculatePath ()Z l
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxFloatGoal byi$g
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxFollowParentGoal byi$h
	fox e
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxGroupData byi$i
	type a
net/minecraft/world/entity/animal/Fox$FoxLookAtPlayerGoal byi$j
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Fox$FoxLookControl byi$k
	resetXRotOnTick ()Z c
	tick ()V a
net/minecraft/world/entity/animal/Fox$FoxMeleeAttackGoal byi$l
	canUse ()Z a
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;)V a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxMoveControl byi$m
	tick ()V a
net/minecraft/world/entity/animal/Fox$FoxPanicGoal byi$n
	shouldPanic ()Z h
net/minecraft/world/entity/animal/Fox$FoxPounceGoal byi$o
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z S_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxSearchForItemsGoal byi$p
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxStrollThroughVillageGoal byi$q
	canContinueToUse ()Z b
	canFoxMove ()Z h
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$PerchAndSearchGoal byi$r
	lookTime e
	looksRemaining f
	relX c
	relZ d
	canContinueToUse ()Z b
	canUse ()Z a
	resetLook ()V k
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$SeekShelterGoal byi$s
	interval c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$SleepGoal byi$t
	WAIT_TIME_BEFORE_SLEEP c
	countdown d
	canContinueToUse ()Z b
	canSleep ()Z k
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Fox$StalkPreyGoal byi$u
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$Type byi$v
	$VALUES g
	BY_ID d
	CODEC c
	RED a
	SNOW b
	id e
	name f
	$values ()[Lnet/minecraft/world/entity/animal/Fox$Type; b
	byBiome (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/animal/Fox$Type; a
	byId (I)Lnet/minecraft/world/entity/animal/Fox$Type; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/Fox$Type; a
	getId ()I a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/animal/FrogVariant byj
	COLD c
	TEMPERATE a
	WARM b
	texture d
	register (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/world/entity/animal/FrogVariant; a
	texture ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/entity/animal/IronGolem byk
	DATA_FLAGS_ID c
	IRON_INGOT_HEAL_AMOUNT d
	PERSISTENT_ANGER_TIME bU
	attackAnimationTick e
	offerFlowerTick bT
	persistentAngerTarget bW
	remainingPersistentAngerTime bV
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	canSpawnSprintParticle ()Z bl
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	decreaseAirSupply (I)I m
	defineSynchedData ()V c_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	doPush (Lnet/minecraft/world/entity/Entity;)V D
	getAttackAnimationTick ()I A
	getAttackDamage ()F gg
	getCrackiness ()Lnet/minecraft/world/entity/animal/IronGolem$Crackiness; w
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cJ
	getOfferFlowerTick ()I ge
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	handleEntityEvent (B)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPlayerCreated ()Z gf
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	offerFlower (Z)V w
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setPlayerCreated (Z)V x
	setRemainingPersistentAngerTime (I)V a
	startPersistentAngerTimer ()V c
net/minecraft/world/entity/animal/IronGolem$Crackiness byk$a
	$VALUES g
	BY_DAMAGE e
	HIGH d
	LOW b
	MEDIUM c
	NONE a
	fraction f
	$values ()[Lnet/minecraft/world/entity/animal/IronGolem$Crackiness; a
	byFraction (F)Lnet/minecraft/world/entity/animal/IronGolem$Crackiness; a
net/minecraft/world/entity/animal/MushroomCow byl
	DATA_TYPE bT
	MUTATE_CHANCE bU
	TAG_STEW_EFFECTS bW
	lastLightningBoltUUID bY
	stewEffects bX
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkMushroomSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	defineSynchedData ()V c_
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Cow; b
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/MushroomCow; c
	getEffectsFromItemStack (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; l
	getOffspringType (Lnet/minecraft/world/entity/animal/MushroomCow;)Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; a
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; w
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z a
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType;)V a
	shear (Lnet/minecraft/sounds/SoundSource;)V a
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
net/minecraft/world/entity/animal/MushroomCow$MushroomType byl$a
	$VALUES f
	BROWN b
	CODEC c
	RED a
	blockState e
	type d
	$values ()[Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; b
	byType (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; a
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/animal/Ocelot bym
	CROUCH_SPEED_MOD bT
	DATA_TRUSTING bY
	SPRINT_SPEED_MOD bW
	TEMPT_INGREDIENT bX
	WALK_SPEED_MOD bU
	ocelotAvoidPlayersGoal bZ
	temptGoal ca
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkOcelotSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getAmbientSoundInterval ()I Q
	getAttackDamage ()F ge
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Ocelot; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cJ
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	handleEntityEvent (B)V b
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isSteppingCarefully ()Z bT
	isTrusting ()Z A
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTrustingGoals ()V w
	registerGoals ()V B
	removeWhenFarAway (D)Z h
	setTrusting (Z)V w
	spawnTrustingParticles (Z)V x
net/minecraft/world/entity/animal/Ocelot$OcelotAvoidEntityGoal bym$a
	ocelot i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Ocelot$OcelotTemptGoal bym$b
	ocelot c
	canScare ()Z h
net/minecraft/world/entity/animal/Panda byn
	BREED_TARGETING cc
	DATA_ID_FLAGS cb
	EAT_COUNTER bY
	EAT_TICK_INTERVAL ch
	FLAG_ON_BACK cg
	FLAG_ROLL ce
	FLAG_SIT cf
	FLAG_SNEEZE cd
	HIDDEN_GENE_ID ca
	MAIN_GENE_ID bZ
	PANDA_ITEMS ct
	SNEEZE_COUNTER bX
	TOTAL_ROLL_STEPS bT
	TOTAL_UNHAPPY_TIME ci
	UNHAPPY_COUNTER bW
	didBite ck
	gotBamboo cj
	lookAtPlayerGoal cs
	onBackAmount co
	onBackAmountO cp
	rollAmount cq
	rollAmountO cr
	rollCounter bU
	rollDelta cl
	sitAmount cm
	sitAmountO cn
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEatingParticles ()V gB
	afterSneeze ()V gG
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canPerformAction ()Z gy
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z f
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gp
	defineSynchedData ()V c_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	eat (Z)V y
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getEatCounter ()I gz
	getFlag (I)Z w
	getHiddenGene ()Lnet/minecraft/world/entity/animal/Panda$Gene; gn
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLieOnBackAmount (F)F F
	getMainGene ()Lnet/minecraft/world/entity/animal/Panda$Gene; gm
	getOneOfGenesRandomly ()Lnet/minecraft/world/entity/animal/Panda$Gene; gH
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getRollAmount (F)F G
	getSitAmount (F)F E
	getSneezeCounter ()I gl
	getUnhappyCounter ()I u
	getVariant ()Lnet/minecraft/world/entity/animal/Panda$Gene; gq
	handleEating ()V gA
	handleRoll ()V gF
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAggressive ()Z fW
	isBrown ()Z gu
	isEating ()Z gk
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isFoodOrCake (Lnet/minecraft/world/item/ItemStack;)Z l
	isLazy ()Z gr
	isOnBack ()Z ge
	isPlayful ()Z gt
	isRolling ()Z go
	isScared ()Z gw
	isSitting ()Z A
	isSneezing ()Z w
	isWeak ()Z gv
	isWorried ()Z gs
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	roll (Z)V A
	setAttributes ()V gx
	setEatCounter (I)V v
	setFlag (IZ)V d
	setGeneFromParents (Lnet/minecraft/world/entity/animal/Panda;Lnet/minecraft/world/entity/animal/Panda;)V a
	setHiddenGene (Lnet/minecraft/world/entity/animal/Panda$Gene;)V b
	setMainGene (Lnet/minecraft/world/entity/animal/Panda$Gene;)V a
	setOnBack (Z)V x
	setSneezeCounter (I)V u
	setUnhappyCounter (I)V t
	sit (Z)V w
	sneeze (Z)V z
	tick ()V l
	tryToSit ()V gI
	updateOnBackAnimation ()V gD
	updateRollAmount ()V gE
	updateSitAmount ()V gC
net/minecraft/world/entity/animal/Panda$Gene byn$a
	$VALUES n
	AGGRESSIVE g
	BROWN e
	BY_ID i
	CODEC h
	LAZY b
	MAX_GENE j
	NORMAL a
	PLAYFUL d
	WEAK f
	WORRIED c
	id k
	isRecessive m
	name l
	$values ()[Lnet/minecraft/world/entity/animal/Panda$Gene; d
	byId (I)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	getId ()I a
	getRandom (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	getSerializedName ()Ljava/lang/String; c
	getVariantFromGenes (Lnet/minecraft/world/entity/animal/Panda$Gene;Lnet/minecraft/world/entity/animal/Panda$Gene;)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	isRecessive ()Z b
net/minecraft/world/entity/animal/Panda$PandaAttackGoal byn$b
	panda b
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaAvoidGoal byn$c
	panda i
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaBreedGoal byn$d
	panda d
	unhappyCooldown e
	canFindBamboo ()Z h
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaHurtByTargetGoal byn$e
	panda a
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/Panda$PandaLieOnBackGoal byn$f
	cooldown b
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Panda$PandaLookAtPlayerGoal byn$g
	panda h
	canContinueToUse ()Z b
	canUse ()Z a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
	tick ()V e
net/minecraft/world/entity/animal/Panda$PandaMoveControl byn$h
	panda l
	tick ()V a
net/minecraft/world/entity/animal/Panda$PandaPanicGoal byn$i
	panda h
	canContinueToUse ()Z b
	shouldPanic ()Z h
net/minecraft/world/entity/animal/Panda$PandaRollGoal byn$j
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z S_
	start ()V c
net/minecraft/world/entity/animal/Panda$PandaSitGoal byn$k
	cooldown b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Panda$PandaSneezeGoal byn$l
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Parrot byo
	DATA_VARIANT_ID ca
	MOB_SOUND_MAP ce
	NOT_PARROT_PREDICATE cb
	POISONOUS_FOOD cc
	TAME_FOOD cd
	flap bW
	flapSpeed bX
	flapping cf
	jukebox ci
	nextFlap cg
	oFlap bZ
	oFlapSpeed bY
	partyParrot ch
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	calculateFlapping ()V go
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkParrotSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gk
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V c_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	doPush (Lnet/minecraft/world/entity/Entity;)V D
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbient (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/sounds/SoundEvent; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getImitatedSound (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/sounds/SoundEvent; b
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cJ
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getPitch (Lnet/minecraft/util/RandomSource;)F a
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; db
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/animal/Parrot$Variant; gm
	getVoicePitch ()F eX
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	imitateNearbyMobs (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)Z a
	isBaby ()Z o_
	isFlapping ()Z aT
	isFlying ()Z gr
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isPartyParrot ()Z gl
	isPushable ()Z bu
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onFlap ()V aS
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	setRecordPlayingNearby (Lnet/minecraft/core/BlockPos;Z)V a
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/animal/Parrot$Variant;)V a
net/minecraft/world/entity/animal/Parrot$ParrotWanderGoal byo$a
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
	getTreePos ()Lnet/minecraft/world/phys/Vec3; k
net/minecraft/world/entity/animal/Parrot$Variant byo$b
	$VALUES j
	BLUE b
	BY_ID g
	CODEC f
	GRAY e
	GREEN c
	RED_BLUE a
	YELLOW_BLUE d
	id h
	name i
	$values ()[Lnet/minecraft/world/entity/animal/Parrot$Variant; b
	byId (I)Lnet/minecraft/world/entity/animal/Parrot$Variant; a
	getId ()I a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/animal/Pig byp
	DATA_BOOST_TIME bU
	DATA_SADDLE_ID bT
	FOOD_ITEMS bW
	steering bX
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	boost ()Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	defineSynchedData ()V c_
	dropEquipment ()V ey
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Pig; b
	getControllingPassenger ()Lnet/minecraft/world/entity/LivingEntity; cN
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cJ
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getRiddenInput (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; b
	getRiddenSpeed (Lnet/minecraft/world/entity/player/Player;)F e
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isSaddleable ()Z g
	isSaddled ()Z i
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tickRidden (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/animal/PolarBear byq
	DATA_STANDING_ID bT
	PERSISTENT_ANGER_TIME bZ
	STAND_ANIMATION_TICKS bU
	clientSideStandAnimation bX
	clientSideStandAnimationO bW
	persistentAngerTarget cb
	remainingPersistentAngerTime ca
	warningSoundTicks bY
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkPolarBearSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	defineSynchedData ()V c_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getStandingAnimationScale (F)F E
	getWaterSlowDown ()F fd
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isStanding ()Z A
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	playWarningSound ()V w
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setStanding (Z)V w
	startPersistentAngerTimer ()V c
	tick ()V l
net/minecraft/world/entity/animal/PolarBear$PolarBearAttackPlayersGoal byq$a
	canUse ()Z a
	getFollowDistance ()D l
net/minecraft/world/entity/animal/PolarBear$PolarBearHurtByTargetGoal byq$b
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	start ()V c
net/minecraft/world/entity/animal/PolarBear$PolarBearMeleeAttackGoal byq$c
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;)V a
	stop ()V d
net/minecraft/world/entity/animal/PolarBear$PolarBearPanicGoal byq$d
	shouldPanic ()Z h
net/minecraft/world/entity/animal/Pufferfish byr
	PUFF_STATE e
	SCARY_MOB bV
	STATE_FULL d
	STATE_MID c
	STATE_SMALL b
	deflateTimer bU
	inflateCounter bT
	targetingConditions bW
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	defineSynchedData ()V c_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; gf
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPuffState ()I gg
	getScale (I)F s
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	setPuffState (I)V c
	tick ()V l
	touch (Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/entity/animal/Pufferfish$PufferfishPuffGoal byr$a
	fish a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Rabbit bys
	ATTACK_SPEED_MOD bY
	BREED_SPEED_MOD bU
	DATA_TYPE_ID cb
	EVIL_ARMOR_VALUE ca
	EVIL_ATTACK_POWER bZ
	FLEE_SPEED_MOD bX
	FOLLOW_SPEED_MOD bW
	KILLER_BUNNY cc
	MORE_CARROTS_DELAY cd
	STROLL_SPEED_MOD bT
	jumpDelayTicks ch
	jumpDuration cf
	jumpTicks ce
	moreCarrotTicks ci
	wasOnGround cg
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	canSpawnSprintParticle ()Z bl
	checkLandingDelay ()V gn
	checkRabbitSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; w
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	disableJumpControl ()V gl
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	enableJumpControl ()V gk
	facePoint (DD)V c
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Rabbit; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getJumpCompletion (F)F E
	getJumpPower ()F eZ
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; A
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cJ
	getRandomRabbitVariant (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/animal/Rabbit$Variant; a
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; db
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/animal/Rabbit$Variant; ge
	handleEntityEvent (B)V b
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isTemptingItem (Lnet/minecraft/world/item/ItemStack;)Z l
	jumpFromGround ()V fb
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	setJumping (Z)V r
	setLandingDelay ()V gm
	setSpeedModifier (D)V i
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/animal/Rabbit$Variant;)V a
	startJumping ()V u
	wantsMoreFood ()Z go
net/minecraft/world/entity/animal/Rabbit$RabbitAvoidEntityGoal bys$a
	rabbit i
	canUse ()Z a
net/minecraft/world/entity/animal/Rabbit$RabbitGroupData bys$b
	variant a
net/minecraft/world/entity/animal/Rabbit$RabbitJumpControl bys$c
	canJump c
	rabbit b
	canJump ()Z d
	setCanJump (Z)V a
	tick ()V b
	wantJump ()Z c
net/minecraft/world/entity/animal/Rabbit$RabbitMoveControl bys$d
	nextJumpSpeed m
	rabbit l
	setWantedPosition (DDDD)V a
	tick ()V a
net/minecraft/world/entity/animal/Rabbit$RabbitPanicGoal bys$e
	rabbit h
	tick ()V e
net/minecraft/world/entity/animal/Rabbit$RaidGardenGoal bys$f
	canRaid i
	rabbit g
	wantsToRaid h
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	tick ()V e
net/minecraft/world/entity/animal/Rabbit$Variant bys$g
	$VALUES l
	BLACK c
	BROWN a
	BY_ID i
	CODEC h
	EVIL g
	GOLD e
	SALT f
	WHITE b
	WHITE_SPLOTCHED d
	id j
	name k
	$values ()[Lnet/minecraft/world/entity/animal/Rabbit$Variant; b
	byId (I)Lnet/minecraft/world/entity/animal/Rabbit$Variant; a
	getSerializedName ()Ljava/lang/String; c
	id ()I a
net/minecraft/world/entity/animal/Salmon byt
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; gf
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxSchoolSize ()I gg
net/minecraft/world/entity/animal/Sheep byu
	COLORARRAY_BY_COLOR bX
	DATA_WOOL_ID bU
	EAT_ANIMATION_TICKS bT
	ITEM_BY_DYE bW
	eatAnimationTick bY
	eatBlockGoal bZ
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	ate ()V P
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	createSheepColor (Lnet/minecraft/world/item/DyeColor;)[F c
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Sheep; b
	getColor ()Lnet/minecraft/world/item/DyeColor; w
	getColorArray (Lnet/minecraft/world/item/DyeColor;)[F a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; U
	getHeadEatAngleScale (F)F F
	getHeadEatPositionScale (F)F E
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getOffspringColor (Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/animal/Animal;)Lnet/minecraft/world/item/DyeColor; a
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getRandomSheepColor (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/DyeColor; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V b
	isSheared ()Z A
	makeContainer (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/inventory/CraftingContainer; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z a
	registerGoals ()V B
	setColor (Lnet/minecraft/world/item/DyeColor;)V b
	setSheared (Z)V w
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/animal/ShoulderRidingEntity byv
	RIDE_COOLDOWN bW
	rideCooldownCounter bX
	canSitOnShoulder ()Z gn
	setEntityOnShoulder (Lnet/minecraft/server/level/ServerPlayer;)Z b
	tick ()V l
net/minecraft/world/entity/animal/SnowGolem byw
	DATA_PUMPKIN_ID b
	EYE_HEIGHT d
	PUMPKIN_FLAG c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	defineSynchedData ()V c_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cJ
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hasPumpkin ()Z w
	isSensitiveToWater ()Z fh
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z a
	registerGoals ()V B
	setPumpkin (Z)V w
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/animal/Squid byx
	oldTentacleAngle bW
	oldTentacleMovement bU
	rotateSpeed bZ
	speed bX
	tentacleAngle bV
	tentacleMovement bT
	tentacleSpeed bY
	tx ca
	ty cb
	tz cc
	xBodyRot b
	xBodyRotO c
	zBodyRot d
	zBodyRotO e
	aiStep ()V d_
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; ge
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getInkParticle ()Lnet/minecraft/core/particles/ParticleOptions; u
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aW
	getSoundVolume ()F eW
	getSquirtSound ()Lnet/minecraft/sounds/SoundEvent; w
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V b
	hasMovementVector ()Z gf
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	registerGoals ()V B
	rotateVector (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; j
	setMovementVector (FFF)V a
	spawnInk ()V A
	travel (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/animal/Squid$SquidFleeGoal byx$a
	SQUID_FLEE_MAX_DISTANCE d
	SQUID_FLEE_MIN_DISTANCE c
	SQUID_FLEE_SPEED b
	fleeTicks e
	canUse ()Z a
	requiresUpdateEveryTick ()Z T_
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Squid$SquidRandomMovementGoal byx$b
	squid b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/animal/TropicalFish byy
	BUCKET_VARIANT_TAG b
	COMMON_VARIANTS c
	DATA_ID_TYPE_VARIANT d
	isSchool e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkTropicalFishSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	defineSynchedData ()V c_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBaseColor ()Lnet/minecraft/world/item/DyeColor; gn
	getBaseColor (I)Lnet/minecraft/world/item/DyeColor; s
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; gf
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPackedVariant ()I gq
	getPattern (I)Lnet/minecraft/world/entity/animal/TropicalFish$Pattern; u
	getPatternColor ()Lnet/minecraft/world/item/DyeColor; go
	getPatternColor (I)Lnet/minecraft/world/item/DyeColor; t
	getPredefinedName (I)Ljava/lang/String; c
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/animal/TropicalFish$Pattern; gp
	isMaxGroupSizeReached (I)Z d
	packVariant (Lnet/minecraft/world/entity/animal/TropicalFish$Pattern;Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/item/DyeColor;)I a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V l
	setPackedVariant (I)V v
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/animal/TropicalFish$Pattern;)V a
net/minecraft/world/entity/animal/TropicalFish$Base byy$a
	$VALUES d
	LARGE b
	SMALL a
	id c
	$values ()[Lnet/minecraft/world/entity/animal/TropicalFish$Base; a
net/minecraft/world/entity/animal/TropicalFish$Pattern byy$b
	$VALUES s
	BETTY k
	BLOCKFISH j
	BRINELY e
	BY_ID n
	CLAYFISH l
	CODEC m
	DASHER d
	FLOPPER g
	GLITTER i
	KOB a
	SNOOPER c
	SPOTTY f
	STRIPEY h
	SUNSTREAK b
	base q
	displayName p
	name o
	packedId r
	$values ()[Lnet/minecraft/world/entity/animal/TropicalFish$Pattern; e
	base ()Lnet/minecraft/world/entity/animal/TropicalFish$Base; a
	byId (I)Lnet/minecraft/world/entity/animal/TropicalFish$Pattern; a
	displayName ()Lnet/minecraft/network/chat/Component; d
	getPackedId ()I b
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/animal/TropicalFish$TropicalFishGroupData byy$c
	variant b
net/minecraft/world/entity/animal/TropicalFish$Variant byy$d
	baseColor b
	pattern a
	patternColor c
	baseColor ()Lnet/minecraft/world/item/DyeColor; c
	getPackedId ()I a
	pattern ()Lnet/minecraft/world/entity/animal/TropicalFish$Pattern; b
	patternColor ()Lnet/minecraft/world/item/DyeColor; d
net/minecraft/world/entity/animal/Turtle byz
	BABY_ON_LAND_SELECTOR bU
	FOOD_ITEMS bT
	GOING_HOME ca
	HAS_EGG bX
	HOME_POS bW
	LAYING_EGG bY
	TRAVELLING cb
	TRAVEL_POS bZ
	layEggCounter cc
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V m
	aiStep ()V d_
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canFallInLove ()Z gf
	checkTurtleSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; A
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V c_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getAmbientSoundInterval ()I Q
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHomePos ()Lnet/minecraft/core/BlockPos; ge
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMobType ()Lnet/minecraft/world/entity/MobType; eS
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getScale ()F dZ
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aN
	getTravelPos ()Lnet/minecraft/core/BlockPos; gk
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasEgg ()Z u
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isGoingHome ()Z gl
	isLayingEgg ()Z w
	isPushedByFluid ()Z cz
	isTravelling ()Z gm
	nextStep ()F aM
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	playSwimSound (F)V e
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	setGoingHome (Z)V y
	setHasEgg (Z)V w
	setHomePos (Lnet/minecraft/core/BlockPos;)V i
	setLayingEgg (Z)V x
	setTravelPos (Lnet/minecraft/core/BlockPos;)V j
	setTravelling (Z)V z
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	travel (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/animal/Turtle$TurtleBreedGoal byz$a
	turtle d
	breed ()V g
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtleGoHomeGoal byz$b
	GIVE_UP_TICKS e
	closeToHomeTryTicks d
	speedModifier b
	stuck c
	turtle a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Turtle$TurtleGoToWaterGoal byz$c
	GIVE_UP_TICKS g
	turtle h
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	shouldRecalculatePath ()Z l
net/minecraft/world/entity/animal/Turtle$TurtleLayEggGoal byz$d
	turtle g
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	tick ()V e
net/minecraft/world/entity/animal/Turtle$TurtleMoveControl byz$e
	turtle l
	tick ()V a
	updateSpeed ()V g
net/minecraft/world/entity/animal/Turtle$TurtlePanicGoal byz$f
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtlePathNavigation byz$g
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/animal/Turtle$TurtleRandomStrollGoal byz$h
	turtle i
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtleTravelGoal byz$i
	speedModifier b
	stuck c
	turtle a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/WaterAnimal bza
	baseTick ()V as
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkSurfaceWaterAnimalSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	getAmbientSoundInterval ()I Q
	getExperienceReward ()I ee
	getMobType ()Lnet/minecraft/world/entity/MobType; eS
	handleAirSupply (I)V b
	isPushedByFluid ()Z cz
net/minecraft/world/entity/animal/Wolf bzb
	DATA_COLLAR_COLOR bY
	DATA_INTERESTED_ID bX
	DATA_REMAINING_ANGER_TIME bZ
	PERSISTENT_ANGER_TIME ci
	PREY_SELECTOR bW
	START_HEALTH ca
	TAME_HEALTH cb
	interestedAngle cc
	interestedAngleO cd
	isShaking cf
	isWet ce
	persistentAngerTarget cj
	shakeAnim cg
	shakeAnimO ch
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	cancelShake ()V gp
	checkWolfSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gk
	defineSynchedData ()V c_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBodyRollAngle (FF)F f
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Wolf; b
	getCollarColor ()Lnet/minecraft/world/item/DyeColor; gn
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHeadRollAngle (F)F F
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cJ
	getMaxHeadXRot ()I aa
	getMaxSpawnClusterSize ()I fI
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getSoundVolume ()F eW
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTailAngle ()F gm
	getWetShade (F)F E
	handleEntityEvent (B)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isInterested ()Z go
	isWet ()Z gl
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	setCollarColor (Lnet/minecraft/world/item/DyeColor;)V a
	setIsInterested (Z)V A
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setTame (Z)V x
	startPersistentAngerTimer ()V c
	tick ()V l
	wantsToAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/animal/Wolf$WolfAvoidEntityGoal bzb$a
	wolf j
	avoidLlama (Lnet/minecraft/world/entity/animal/horse/Llama;)Z a
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Wolf$WolfPanicGoal bzb$b
	shouldPanic ()Z h
net/minecraft/world/entity/animal/allay/Allay bzc
	DANCING_LOOP_DURATION bV
	DATA_CAN_DUPLICATE cb
	DATA_DANCING ca
	DUPLICATION_COOLDOWN_TICKS bY
	DUPLICATION_ITEM bX
	ITEM_PICKUP_REACH bT
	LIFTING_ITEM_ANIMATION_DURATION bU
	LOGGER e
	MEMORY_TYPES c
	NUM_OF_DUPLICATION_HEARTS bZ
	SENSOR_TYPES b
	SPINNING_ANIMATION_DURATION bW
	THROW_SOUND_PITCHES d
	dancingAnimationTicks cl
	duplicationCooldown ci
	dynamicJukeboxListener cf
	dynamicVibrationListener cc
	holdingItemAnimationTicks cj
	holdingItemAnimationTicks0 ck
	inventory cg
	jukeboxPos ch
	spinningAnimationTicks cm
	spinningAnimationTicks0 cn
	vibrationData cd
	vibrationUser ce
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	allayConsidersItemEqual (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z d
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dP
	canDuplicate ()Z gn
	canPickUpLoot ()Z fK
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z f
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	dropEquipment ()V ey
	duplicateAllay ()V gl
	equipmentHasChanged (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dO
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHoldingItemAnimationProgress (F)F E
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getInventory ()Lnet/minecraft/world/SimpleContainer; A
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cJ
	getPickupReach ()Lnet/minecraft/core/Vec3i; V
	getSoundVolume ()F eW
	getSpinningProgress (F)F F
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVibrationData ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data; gg
	getVibrationUser ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User; gh
	handleEntityEvent (B)V b
	hasItemInHand ()Z w
	hasNonMatchingPotion (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z e
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isDancing ()Z ge
	isDuplicationItem (Lnet/minecraft/world/item/ItemStack;)Z l
	isFlapping ()Z aT
	isOnPickupCooldown ()Z gi
	isSpinning ()Z gf
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeInteractionItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	removeWhenFarAway (D)Z h
	resetDuplicationCooldown ()V gm
	ridingOffset (Lnet/minecraft/world/entity/Entity;)F l
	sendDebugPackets ()V Y
	setDancing (Z)V w
	setJukeboxPlaying (Lnet/minecraft/core/BlockPos;Z)V b
	shouldStayCloseToLeashHolder ()Z gc
	shouldStopDancing ()Z gj
	spawnHeartParticle ()V go
	tick ()V l
	travel (Lnet/minecraft/world/phys/Vec3;)V a
	updateDuplicationCooldown ()V gk
	updateDynamicGameEventListener (Ljava/util/function/BiConsumer;)V a
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z k
net/minecraft/world/entity/animal/allay/Allay$JukeboxListener bzc$a
	listenerRadius c
	listenerSource b
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	handleGameEvent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Lnet/minecraft/world/phys/Vec3;)Z a
net/minecraft/world/entity/animal/allay/Allay$VibrationUser bzc$b
	VIBRATION_EVENT_LISTENER_RANGE b
	positionSource c
	canReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)Z a
	getListenableEvents ()Lnet/minecraft/tags/TagKey; c
	getListenerRadius ()I a
	getPositionSource ()Lnet/minecraft/world/level/gameevent/PositionSource; b
	onReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V a
net/minecraft/world/entity/animal/allay/AllayAi bzd
	CLOSE_ENOUGH_TO_TARGET e
	DISTANCE_TO_WANTED_ITEM k
	GIVE_ITEM_TIMEOUT_DURATION l
	MAX_LOOK_DISTANCE g
	MAX_WAIT_DURATION i
	MIN_WAIT_DURATION h
	SPEED_MULTIPLIER_WHEN_FOLLOWING_DEPOSIT_TARGET b
	SPEED_MULTIPLIER_WHEN_IDLING a
	SPEED_MULTIPLIER_WHEN_PANICKING d
	SPEED_MULTIPLIER_WHEN_RETRIEVING_ITEM c
	TIME_TO_FORGET_NOTEBLOCK j
	TOO_FAR_FROM_TARGET f
	getItemDepositPosition (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; b
	getLikedPlayer (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	getLikedPlayerPositionTracker (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; d
	hasWantedItem (Lnet/minecraft/world/entity/LivingEntity;)Z c
	hearNoteblock (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)V a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	shouldDepositItemsAtLikedNoteblock (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/core/GlobalPos;)Z a
	updateActivity (Lnet/minecraft/world/entity/animal/allay/Allay;)V a
net/minecraft/world/entity/animal/axolotl/Axolotl bzf
	AXOLOTL_TOTAL_AIR_SUPPLY cd
	DATA_PLAYING_DEAD cb
	DATA_VARIANT ca
	FROM_BUCKET cc
	MEMORY_TYPES bW
	PLAYER_REGEN_DETECTION_RANGE bX
	RARE_VARIANT_CHANCE bY
	REGEN_BUFF_BASE_DURATION ch
	REGEN_BUFF_MAX_DURATION cf
	REHYDRATE_AIR_SUPPLY ce
	SENSOR_TYPES bU
	TOTAL_PLAYDEAD_TIME bT
	VARIANT_TAG bZ
	modelRotationValues cg
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applySupportingEffects (Lnet/minecraft/world/entity/player/Player;)V f
	baseTick ()V as
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dP
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBeSeenAsEnemy ()Z eo
	checkAxolotlSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gl
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	fromBucket ()Z w
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dO
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxAirSupply ()I ch
	getMaxHeadXRot ()I aa
	getMaxHeadYRot ()I ab
	getMobType ()Lnet/minecraft/world/entity/MobType; eS
	getModelRotationValues ()Ljava/util/Map; a
	getPickupSound ()Lnet/minecraft/sounds/SoundEvent; A
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aN
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aO
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; ge
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleAirSupply (I)V t
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isPlayingDead ()Z gk
	isPushedByFluid ()Z cz
	loadFromBucketTag (Lnet/minecraft/nbt/CompoundTag;)V c
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onStopAttacking (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;Lnet/minecraft/world/entity/LivingEntity;)V a
	playAmbientSound ()V R
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	rehydrate ()V u
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z W
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V l
	sendDebugPackets ()V Y
	setFromBucket (Z)V w
	setPlayingDead (Z)V x
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant;)V a
	travel (Lnet/minecraft/world/phys/Vec3;)V a
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
	useRareVariant (Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlGroupData bzf$a
	types a
	getVariant (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; a
net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlLookControl bzf$b
	tick ()V a
net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlMoveControl bzf$c
	axolotl l
	tick ()V a
net/minecraft/world/entity/animal/axolotl/Axolotl$Variant bzf$d
	$VALUES k
	BLUE e
	BY_ID g
	CODEC f
	CYAN d
	GOLD c
	LUCY a
	WILD b
	common j
	id h
	name i
	$values ()[Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; d
	byId (I)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; a
	getCommonSpawnVariant (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; a
	getId ()I a
	getName ()Ljava/lang/String; b
	getRareSpawnVariant (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; b
	getSerializedName ()Ljava/lang/String; c
	getSpawnVariant (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; a
net/minecraft/world/entity/animal/axolotl/AxolotlAi bzg
	ADULT_FOLLOW_RANGE a
	SPEED_MULTIPLIER_ON_LAND c
	SPEED_MULTIPLIER_WHEN_CHASING_IN_WATER e
	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT_IN_WATER f
	SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER d
	SPEED_MULTIPLIER_WHEN_MAKING_LOVE b
	canSetWalkTargetFromLookTarget (Lnet/minecraft/world/entity/LivingEntity;)Z a
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Ljava/util/Optional; b
	getSpeedModifier (Lnet/minecraft/world/entity/LivingEntity;)F d
	getSpeedModifierChasing (Lnet/minecraft/world/entity/LivingEntity;)F b
	getSpeedModifierFollowingAdult (Lnet/minecraft/world/entity/LivingEntity;)F c
	getTemptations ()Lnet/minecraft/world/item/crafting/Ingredient; a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initFightActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	initPlayDeadActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	updateActivity (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)V a
net/minecraft/world/entity/animal/axolotl/PlayDead bzh
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;J)V b
net/minecraft/world/entity/animal/axolotl/ValidatePlayDead bzi
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/animal/camel/Camel bzk
	BABY_SCALE bU
	DASH bY
	DASH_COOLDOWN_TICKS bW
	DASH_HORIZONTAL_MOMENTUM cy
	DASH_MINIMUM_DURATION_TICKS cz
	DASH_VERTICAL_MOMENTUM cx
	IDLE_MINIMAL_DURATION_TICKS cC
	LAST_POSE_CHANGE_TICK bZ
	MAX_HEAD_Y_ROT bX
	RUNNING_SPEED_BONUS cw
	SITDOWN_DURATION_TICKS cA
	SITTING_DIMENSIONS cE
	SITTING_HEIGHT_DIFFERENCE cD
	STANDUP_DURATION_TICKS cB
	TEMPTATION_ITEM bT
	dashAnimationState ce
	dashCooldown cF
	idleAnimationState cd
	idleAnimationTimeout cG
	sitAnimationState ca
	sitPoseAnimationState cb
	sitUpAnimationState cc
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dP
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z r
	canCamelChangePose ()Z ge
	canJump ()Z a
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canPerformRearing ()Z gk
	canSprint ()Z dF
	clampHeadRotationToBody (Lnet/minecraft/world/entity/Entity;F)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; H
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	executeRidersJump (FLnet/minecraft/world/phys/Vec3;)V b
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBodyAnchorAnimationYOffset (ZFLnet/minecraft/world/entity/EntityDimensions;F)D a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/camel/Camel; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; gl
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getJumpCooldown ()I ad_
	getLeashOffset (F)Lnet/minecraft/world/phys/Vec3; p
	getMaxHeadYRot ()I ab
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getPoseTime ()J gs
	getRiddenInput (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; b
	getRiddenRotation (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec2; j
	getRiddenSpeed (Lnet/minecraft/world/entity/player/Player;)F e
	getSaddleSoundEvent ()Lnet/minecraft/sounds/SoundEvent; Z_
	getScale ()F dZ
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEating (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Z a
	handleStartJump (I)V c
	handleStopJump ()V b
	isCamelSitting ()Z gm
	isCamelVisuallySitting ()Z gn
	isDashing ()Z A
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isInPoseTransition ()Z go
	isTamed ()Z gt
	isVisuallySittingDown ()Z gR
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onLeashDistance (F)V D
	onPlayerJump (I)V b
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	openCustomInventoryScreen (Lnet/minecraft/world/entity/player/Player;)V b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refuseToMove ()Z w
	registerGoals ()V B
	resetLastPoseChangeTick (J)V a
	resetLastPoseChangeTickToFullStand (J)V b
	sendDebugPackets ()V Y
	setDashing (Z)V w
	setupAnimationStates ()V gQ
	sitDown ()V gp
	standUp ()V gq
	standUpInstantly ()V gr
	tick ()V l
	tickRidden (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)V a
	travel (Lnet/minecraft/world/phys/Vec3;)V a
	updateWalkAnimation (F)V v
net/minecraft/world/entity/animal/camel/Camel$CamelBodyRotationControl bzk$a
	clientTick ()V a
net/minecraft/world/entity/animal/camel/Camel$CamelLookControl bzk$b
	tick ()V a
net/minecraft/world/entity/animal/camel/Camel$CamelMoveControl bzk$c
	tick ()V a
net/minecraft/world/entity/animal/camel/CamelAi bzl
	ADULT_FOLLOW_RANGE f
	MEMORY_TYPES h
	SENSOR_TYPES g
	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT d
	SPEED_MULTIPLIER_WHEN_IDLING b
	SPEED_MULTIPLIER_WHEN_MAKING_LOVE e
	SPEED_MULTIPLIER_WHEN_PANICKING a
	SPEED_MULTIPLIER_WHEN_TEMPTED c
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; a
	getTemptations ()Lnet/minecraft/world/item/crafting/Ingredient; b
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initMemories (Lnet/minecraft/world/entity/animal/camel/Camel;Lnet/minecraft/util/RandomSource;)V a
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	updateActivity (Lnet/minecraft/world/entity/animal/camel/Camel;)V a
net/minecraft/world/entity/animal/camel/CamelAi$CamelPanic bzl$a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
net/minecraft/world/entity/animal/camel/CamelAi$RandomSitting bzl$b
	minimalPoseTicks c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/camel/Camel;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/camel/Camel;J)V a
net/minecraft/world/entity/animal/frog/Frog bzn
	DATA_TONGUE_TARGET_ID cd
	DATA_VARIANT_ID cc
	FROG_FALL_DAMAGE_REDUCTION ce
	MEMORY_TYPES bW
	SENSOR_TYPES bU
	TEMPTATION_ITEM bT
	VARIANT_KEY bX
	croakAnimationState bZ
	jumpAnimationState bY
	swimIdleAnimationState cb
	tongueAnimationState ca
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dP
	calculateFallDamage (FF)I d
	canEat (Lnet/minecraft/world/entity/LivingEntity;)Z j
	checkFrogSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; ge
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	eraseTongueTarget ()V u
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dO
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHeadRotSpeed ()I fH
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxHeadYRot ()I ab
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getTongueTarget ()Ljava/util/Optional; w
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/animal/FrogVariant; A
	isBaby ()Z o_
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isPushedByFluid ()Z cz
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	sendDebugPackets ()V Y
	setBaby (Z)V a
	setTongueTarget (Lnet/minecraft/world/entity/Entity;)V a
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/animal/FrogVariant;)V a
	spawnChildFromBreeding (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;)V a
	tick ()V l
	travel (Lnet/minecraft/world/phys/Vec3;)V a
	updateWalkAnimation (F)V v
net/minecraft/world/entity/animal/frog/Frog$FrogLookControl bzn$a
	resetXRotOnTick ()Z c
net/minecraft/world/entity/animal/frog/Frog$FrogNodeEvaluator bzn$b
	belowPos l
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; a
net/minecraft/world/entity/animal/frog/Frog$FrogPathNavigation bzn$c
	canCutCorner (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z b
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
net/minecraft/world/entity/animal/frog/FrogAi bzo
	MAX_JUMP_VELOCITY i
	MAX_LONG_JUMP_HEIGHT g
	MAX_LONG_JUMP_WIDTH h
	SPEED_MULTIPLIER_IN_WATER e
	SPEED_MULTIPLIER_ON_LAND d
	SPEED_MULTIPLIER_WHEN_IDLING c
	SPEED_MULTIPLIER_WHEN_MAKING_LOVE b
	SPEED_MULTIPLIER_WHEN_PANICKING a
	SPEED_MULTIPLIER_WHEN_TEMPTED j
	TIME_BETWEEN_LONG_JUMPS f
	canAttack (Lnet/minecraft/world/entity/animal/frog/Frog;)Z b
	getTemptations ()Lnet/minecraft/world/item/crafting/Ingredient; a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initJumpActivity (Lnet/minecraft/world/entity/ai/Brain;)V f
	initLaySpawnActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	initMemories (Lnet/minecraft/world/entity/animal/frog/Frog;Lnet/minecraft/util/RandomSource;)V a
	initSwimActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initTongueActivity (Lnet/minecraft/world/entity/ai/Brain;)V g
	isAcceptableLandingSpot (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Z a
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	updateActivity (Lnet/minecraft/world/entity/animal/frog/Frog;)V a
net/minecraft/world/entity/animal/frog/ShootTongue bzp
	CATCH_ANIMATION_DURATION d
	EATING_DISTANCE h
	EATING_MOVEMENT_FACTOR i
	MAX_UNREACHBLE_TONGUE_TARGETS_IN_MEMORY g
	TIME_OUT_DURATION c
	TONGUE_ANIMATION_DURATION e
	UNREACHABLE_TONGUE_TARGETS_COOLDOWN_DURATION f
	calculatePathCounter k
	eatAnimationTimer j
	eatSound m
	itemSpawnPos n
	state o
	tongueSound l
	addUnreachableTargetToMemory (Lnet/minecraft/world/entity/animal/frog/Frog;Lnet/minecraft/world/entity/LivingEntity;)V b
	canPathfindToTarget (Lnet/minecraft/world/entity/animal/frog/Frog;Lnet/minecraft/world/entity/LivingEntity;)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;)Z a
	eatEntity (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;)V b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)V d
net/minecraft/world/entity/animal/frog/ShootTongue$State bzp$a
	$VALUES e
	CATCH_ANIMATION b
	DONE d
	EAT_ANIMATION c
	MOVE_TO_TARGET a
	$values ()[Lnet/minecraft/world/entity/animal/frog/ShootTongue$State; a
net/minecraft/world/entity/animal/frog/Tadpole bzq
	HITBOX_HEIGHT d
	HITBOX_WIDTH c
	MEMORY_TYPES bT
	SENSOR_TYPES e
	age bU
	ticksToBeFrog b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageUp ()V gi
	ageUp (I)V c
	aiStep ()V d_
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dP
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gg
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	customServerAiStep ()V Z
	feed (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	fromBucket ()Z w
	getAge ()I gh
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dO
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; gf
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPickupSound ()Lnet/minecraft/sounds/SoundEvent; A
	getTicksLeftUntilAdult ()I gj
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	loadFromBucketTag (Lnet/minecraft/nbt/CompoundTag;)V c
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V l
	sendDebugPackets ()V Y
	setAge (I)V s
	setFromBucket (Z)V w
	shouldDropExperience ()Z ec
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V b
net/minecraft/world/entity/animal/frog/TadpoleAi bzr
	SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER b
	SPEED_MULTIPLIER_WHEN_PANICKING a
	SPEED_MULTIPLIER_WHEN_TEMPTED c
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	updateActivity (Lnet/minecraft/world/entity/animal/frog/Tadpole;)V a
net/minecraft/world/entity/animal/goat/Goat bzt
	ADULT_ATTACK_DAMAGE ca
	BABY_ATTACK_DAMAGE cb
	DATA_HAS_LEFT_HORN cd
	DATA_HAS_RIGHT_HORN ce
	DATA_IS_SCREAMING_GOAT cc
	GOAT_FALL_DAMAGE_REDUCTION bX
	GOAT_SCREAMING_CHANCE bY
	LONG_JUMPING_DIMENSIONS bT
	MEMORY_TYPES bW
	SENSOR_TYPES bU
	UNIHORN_CHANCE bZ
	isLoweringHead cf
	lowerHeadTick cg
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addHorns ()V gm
	ageBoundaryReached ()V m
	aiStep ()V d_
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dP
	calculateFallDamage (FF)I d
	checkGoatSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; w
	createHorn ()Lnet/minecraft/world/item/ItemStack; u
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	dropHorn ()Z gl
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dO
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/goat/Goat; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxHeadYRot ()I ab
	getMilkingSound ()Lnet/minecraft/sounds/SoundEvent; A
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getRammingXHeadRot ()F gp
	handleEntityEvent (B)V b
	hasLeftHorn ()Z ge
	hasRightHorn ()Z gk
	isScreamingGoat ()Z go
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeHorns ()V gn
	sendDebugPackets ()V Y
	setScreamingGoat (Z)V w
	setYHeadRot (F)V n
net/minecraft/world/entity/animal/goat/GoatAi bzu
	ADULT_FOLLOW_RANGE i
	ADULT_RAM_KNOCKBACK_FORCE g
	BABY_RAM_KNOCKBACK_FORCE h
	MAX_JUMP_VELOCITY e
	MAX_LONG_JUMP_HEIGHT c
	MAX_LONG_JUMP_WIDTH d
	RAM_MAX_DISTANCE b
	RAM_MIN_DISTANCE f
	RAM_PREPARE_TIME a
	RAM_TARGET_CONDITIONS s
	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT l
	SPEED_MULTIPLIER_WHEN_IDLING k
	SPEED_MULTIPLIER_WHEN_MAKING_LOVE j
	SPEED_MULTIPLIER_WHEN_PANICKING n
	SPEED_MULTIPLIER_WHEN_PREPARING_TO_RAM o
	SPEED_MULTIPLIER_WHEN_RAMMING t
	SPEED_MULTIPLIER_WHEN_TEMPTED m
	TIME_BETWEEN_LONG_JUMPS p
	TIME_BETWEEN_RAMS q
	TIME_BETWEEN_RAMS_SCREAMER r
	getTemptations ()Lnet/minecraft/world/item/crafting/Ingredient; a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initLongJumpActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initMemories (Lnet/minecraft/world/entity/animal/goat/Goat;Lnet/minecraft/util/RandomSource;)V a
	initRamActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	updateActivity (Lnet/minecraft/world/entity/animal/goat/Goat;)V a
net/minecraft/world/entity/animal/horse/AbstractChestedHorse bzw
	DATA_ID_CHEST bU
	INV_CHEST_COUNT bT
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createBaseChestedHorseAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	defineSynchedData ()V c_
	dropEquipment ()V ey
	equipChest (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V d
	getInventoryColumns ()I gm
	getInventorySize ()I ac_
	getPassengersRidingOffsetY (Lnet/minecraft/world/entity/EntityDimensions;F)F a
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	hasChest ()Z w
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playChestEquipsSound ()V ge
	randomizeAttributes (Lnet/minecraft/util/RandomSource;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setChest (Z)V w
net/minecraft/world/entity/animal/horse/AbstractHorse bzx
	BACKWARDS_MOVE_SPEED_FACTOR ca
	BREEDING_CROSS_FACTOR ci
	CHEST_SLOT_OFFSET cg
	DATA_ID_FLAGS cw
	EQUIPMENT_SLOT_OFFSET cf
	FLAG_BRED cz
	FLAG_EATING cA
	FLAG_OPEN_MOUTH cC
	FLAG_SADDLE cy
	FLAG_STANDING cB
	FLAG_TAME cx
	FOOD_ITEMS ce
	INVENTORY_SLOT_OFFSET ch
	INV_BASE_COUNT cl
	INV_SLOT_ARMOR ck
	INV_SLOT_SADDLE cj
	MAX_HEALTH bZ
	MAX_JUMP_STRENGTH bX
	MAX_MOVEMENT_SPEED bU
	MIN_HEALTH bY
	MIN_JUMP_STRENGTH bW
	MIN_MOVEMENT_SPEED bT
	MOMMY_TARGETING cd
	PARENT_HORSE_SELECTOR cc
	SIDEWAYS_MOVE_SPEED_FACTOR cb
	allowStandSliding cs
	canGallop ct
	eatAnim cG
	eatAnimO cH
	eatingCounter cD
	gallopSoundCounter cu
	inventory cp
	isJumping co
	mouthAnim cK
	mouthAnimO cL
	mouthCounter cE
	owner cM
	playerJumpPendingScale cr
	sprintCounter cn
	standAnim cI
	standAnimO cJ
	standCounter cF
	tailCounter cm
	temper cq
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V gu
	aiStep ()V d_
	calculateFallDamage (FF)I d
	canEatGrass ()Z gH
	canJump ()Z a
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canParent ()Z gM
	canPerformRearing ()Z gk
	canWearArmor ()Z gN
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	containerChanged (Lnet/minecraft/world/Container;)V a
	createBaseHorseAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gE
	createEquipmentSlotAccess (ILjava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; a
	createInventory ()V gA
	createOffspringAttribute (DDDDLnet/minecraft/util/RandomSource;)D a
	defineSynchedData ()V c_
	doPlayerRide (Lnet/minecraft/world/entity/player/Player;)V f
	dropEquipment ()V ey
	eating ()V u
	equipArmor (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V b
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	executeRidersJump (FLnet/minecraft/world/phys/Vec3;)V b
	fedFood (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/InteractionResult; c
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	followMommy ()V gG
	generateJumpStrength (Ljava/util/function/DoubleSupplier;)D a
	generateMaxHealth (Ljava/util/function/IntUnaryOperator;)F a
	generateSpeed (Ljava/util/function/DoubleSupplier;)D b
	getAmbientSoundInterval ()I Q
	getAmbientStandInterval ()I gP
	getAmbientStandSound ()Lnet/minecraft/sounds/SoundEvent; gI
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; gD
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getControllingPassenger ()Lnet/minecraft/world/entity/LivingEntity; cN
	getCustomJump ()D gC
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDismountLocationInDirection (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; a
	getEatAnim (F)F E
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; gl
	getFlag (I)Z t
	getInventorySize ()I ac_
	getMaxSpawnClusterSize ()I fI
	getMaxTemper ()I gF
	getMouthAnim (F)F G
	getOwnerUUID ()Ljava/util/UUID; d
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getPassengersRidingOffsetY (Lnet/minecraft/world/entity/EntityDimensions;F)F a
	getRiddenInput (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; b
	getRiddenRotation (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec2; j
	getRiddenSpeed (Lnet/minecraft/world/entity/player/Player;)F e
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	getSoundVolume ()F eW
	getStandAnim (F)F F
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTemper ()I gz
	handleEating (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Z a
	handleEntityEvent (B)V b
	handleStartJump (I)V c
	handleStopJump ()V b
	hasInventoryChanged (Lnet/minecraft/world/Container;)Z b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z l
	isBred ()Z gy
	isEating ()Z gw
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isImmobile ()Z eY
	isJumping ()Z gv
	isPushable ()Z bu
	isSaddleable ()Z g
	isSaddled ()Z i
	isStanding ()Z gx
	isTamed ()Z gt
	isWearingArmor ()Z gO
	isWoodSoundType (Lnet/minecraft/world/level/block/SoundType;)Z b
	level ()Lnet/minecraft/world/level/EntityGetter; e
	makeMad ()V gK
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	modifyTemper (I)I v
	moveTail ()V w
	onClimbable ()Z e_
	onLeashDistance (F)V D
	onPlayerJump (I)V b
	openCustomInventoryScreen (Lnet/minecraft/world/entity/player/Player;)V b
	openMouth ()V ge
	playGallopSound (Lnet/minecraft/world/level/block/SoundType;)V a
	playJumpSound ()V gL
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	positionRider (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V a
	randomizeAttributes (Lnet/minecraft/util/RandomSource;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	setBred (Z)V z
	setEating (Z)V A
	setFlag (IZ)V d
	setIsJumping (Z)V y
	setOffspringAttribute (Lnet/minecraft/world/entity/AgeableMob;Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lnet/minecraft/world/entity/ai/attributes/Attribute;DD)V a
	setOffspringAttributes (Lnet/minecraft/world/entity/AgeableMob;Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)V a
	setOwnerUUID (Ljava/util/UUID;)V b
	setStanding (Z)V B
	setTamed (Z)V x
	setTemper (I)V u
	spawnTamingParticles (Z)V C
	standIfPossible ()V gJ
	tameWithName (Lnet/minecraft/world/entity/player/Player;)Z h
	tick ()V l
	tickRidden (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)V a
	updateContainerEquipment ()V gB
net/minecraft/world/entity/animal/horse/Donkey bzy
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; gD
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; gl
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
net/minecraft/world/entity/animal/horse/Horse bzz
	ARMOR_MODIFIER_UUID bT
	DATA_ID_TYPE_VARIANT bU
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canWearArmor ()Z gN
	containerChanged (Lnet/minecraft/world/Container;)V a
	defineSynchedData ()V c_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; gD
	getArmor ()Lnet/minecraft/world/item/ItemStack; u
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; gl
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMarkings ()Lnet/minecraft/world/entity/animal/horse/Markings; ge
	getTypeVariant ()I gm
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/animal/horse/Variant; w
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z l
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playGallopSound (Lnet/minecraft/world/level/block/SoundType;)V a
	randomizeAttributes (Lnet/minecraft/util/RandomSource;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setArmor (Lnet/minecraft/world/item/ItemStack;)V n
	setArmorEquipment (Lnet/minecraft/world/item/ItemStack;)V o
	setTypeVariant (I)V w
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/animal/horse/Variant;)V a
	setVariantAndMarkings (Lnet/minecraft/world/entity/animal/horse/Variant;Lnet/minecraft/world/entity/animal/horse/Markings;)V a
	updateContainerEquipment ()V gB
net/minecraft/world/entity/animal/horse/Horse$HorseGroupData bzz$a
	variant a
net/minecraft/world/entity/animal/horse/Llama caa
	DATA_STRENGTH_ID bX
	DATA_SWAG_ID bY
	DATA_VARIANT_ID bZ
	FOOD_ITEMS bW
	MAX_STRENGTH bU
	caravanHead cb
	caravanTail cc
	didSpit ca
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canEatGrass ()Z gH
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canPerformRearing ()Z gk
	canWearArmor ()Z gN
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	containerChanged (Lnet/minecraft/world/Container;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gp
	defineSynchedData ()V c_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	followLeashSpeed ()D gd
	followMommy ()V gG
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; gD
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/horse/Llama; b
	getCaravanHead ()Lnet/minecraft/world/entity/animal/horse/Llama; gT
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getDyeColor (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/DyeColor; n
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; gl
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getInventoryColumns ()I gm
	getInventorySize ()I ac_
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cJ
	getMaxTemper ()I gF
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getStrength ()I go
	getSwag ()Lnet/minecraft/world/item/DyeColor; gr
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/animal/horse/Llama$Variant; gq
	handleEating (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Z a
	hasCaravanTail ()Z gR
	inCaravan ()Z gS
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z l
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isImmobile ()Z eY
	isSaddleable ()Z g
	isTraderLlama ()Z gn
	isWearingArmor ()Z gO
	joinCaravan (Lnet/minecraft/world/entity/animal/horse/Llama;)V a
	leaveCaravan ()V gQ
	makeNewLlama ()Lnet/minecraft/world/entity/animal/horse/Llama; gs
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	playChestEquipsSound ()V ge
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	setDidSpit (Z)V D
	setRandomStrength (Lnet/minecraft/util/RandomSource;)V b
	setStrength (I)V w
	setSwag (Lnet/minecraft/world/item/DyeColor;)V a
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/animal/horse/Llama$Variant;)V a
	spit (Lnet/minecraft/world/entity/LivingEntity;)V k
	updateContainerEquipment ()V gB
net/minecraft/world/entity/animal/horse/Llama$LlamaAttackWolfGoal caa$a
	getFollowDistance ()D l
net/minecraft/world/entity/animal/horse/Llama$LlamaGroupData caa$b
	variant a
net/minecraft/world/entity/animal/horse/Llama$LlamaHurtByTargetGoal caa$c
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/horse/Llama$Variant caa$d
	$VALUES i
	BROWN c
	BY_ID f
	CODEC e
	CREAMY a
	GRAY d
	WHITE b
	id g
	name h
	$values ()[Lnet/minecraft/world/entity/animal/horse/Llama$Variant; b
	byId (I)Lnet/minecraft/world/entity/animal/horse/Llama$Variant; a
	getId ()I a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/animal/horse/Markings cab
	$VALUES h
	BLACK_DOTS e
	BY_ID f
	NONE a
	WHITE b
	WHITE_DOTS d
	WHITE_FIELD c
	id g
	$values ()[Lnet/minecraft/world/entity/animal/horse/Markings; b
	byId (I)Lnet/minecraft/world/entity/animal/horse/Markings; a
	getId ()I a
net/minecraft/world/entity/animal/horse/Mule cac
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; gD
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; gl
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	playChestEquipsSound ()V ge
net/minecraft/world/entity/animal/horse/SkeletonHorse cad
	TRAP_MAX_LIFE bU
	isTrap bW
	skeletonTrapGoal bT
	trapTime bX
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V gu
	aiStep ()V d_
	checkSkeletonHorseSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMobType ()Lnet/minecraft/world/entity/MobType; eS
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aN
	getWaterSlowDown ()F fd
	isTrap ()Z w
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playJumpSound ()V gL
	playSwimSound (F)V e
	randomizeAttributes (Lnet/minecraft/util/RandomSource;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setTrap (Z)V w
net/minecraft/world/entity/animal/horse/SkeletonTrapGoal cae
	horse a
	canUse ()Z a
	createHorse (Lnet/minecraft/world/DifficultyInstance;)Lnet/minecraft/world/entity/animal/horse/AbstractHorse; a
	createSkeleton (Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)Lnet/minecraft/world/entity/monster/Skeleton; a
	disenchant (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	tick ()V e
net/minecraft/world/entity/animal/horse/TraderLlama caf
	despawnDelay bU
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	canDespawn ()Z gW
	doPlayerRide (Lnet/minecraft/world/entity/player/Player;)V f
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	isLeashedToSomethingOtherThanTheWanderingTrader ()Z gY
	isLeashedToWanderingTrader ()Z gX
	isTraderLlama ()Z gn
	makeNewLlama ()Lnet/minecraft/world/entity/animal/horse/Llama; gs
	maybeDespawn ()V gV
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	setDespawnDelay (I)V w
net/minecraft/world/entity/animal/horse/TraderLlama$TraderLlamaDefendWanderingTraderGoal caf$a
	llama a
	ownerLastHurtBy b
	timestamp c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/horse/Variant cag
	$VALUES l
	BLACK e
	BROWN d
	BY_ID i
	CHESTNUT c
	CODEC h
	CREAMY b
	DARK_BROWN g
	GRAY f
	WHITE a
	id j
	name k
	$values ()[Lnet/minecraft/world/entity/animal/horse/Variant; b
	byId (I)Lnet/minecraft/world/entity/animal/horse/Variant; a
	getId ()I a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/animal/horse/ZombieHorse cah
	addBehaviourGoals ()V gu
	checkZombieHorseSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMobType ()Lnet/minecraft/world/entity/MobType; eS
	getPassengersRidingOffsetY (Lnet/minecraft/world/entity/EntityDimensions;F)F a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	randomizeAttributes (Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/entity/animal/sniffer/Sniffer cak
	DATA_DROP_SEED_AT_TICK ch
	DATA_STATE cg
	DIGGING_BB_HEIGHT_OFFSET ce
	DIGGING_DIMENSIONS cf
	DIGGING_DROP_SEED_OFFSET_TICKS cc
	DIGGING_PARTICLES_AMOUNT cb
	DIGGING_PARTICLES_DELAY_TICKS bZ
	DIGGING_PARTICLES_DURATION_TICKS ca
	SNIFFER_BABY_AGE_TICKS cd
	diggingAnimationState bX
	feelingHappyAnimationState bT
	risingAnimationState bY
	scentingAnimationState bU
	sniffingAnimationState bW
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dP
	calculateDigPosition ()Ljava/util/Optional; gl
	canDig ()Z gm
	canDig (Lnet/minecraft/core/BlockPos;)Z i
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canPlayDiggingSound ()Z gk
	canSniff ()Z ge
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	customServerAiStep ()V Z
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	dropSeed ()V gt
	emitDiggingParticles (Lnet/minecraft/world/entity/AnimationState;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; i_
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dO
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; d
	getExploredPositions ()Ljava/util/stream/Stream; gu
	getHeadBlock ()Lnet/minecraft/core/BlockPos; gn
	getHeadPosition ()Lnet/minecraft/world/phys/Vec3; go
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxHeadYRot ()I ab
	getNameTagOffsetY ()F di
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getState ()Lnet/minecraft/world/entity/animal/sniffer/Sniffer$State; gp
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isSearching ()Z w
	isTempted ()Z A
	jumpFromGround ()V fb
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onDiggingComplete (Z)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; w
	onDiggingStart ()Lnet/minecraft/world/entity/animal/sniffer/Sniffer; gs
	onPathfindingDone ()V G
	onPathfindingStart ()V E
	onScentingStart ()Lnet/minecraft/world/entity/animal/sniffer/Sniffer; gr
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playSearchingSound ()V gv
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	resetAnimations ()V gq
	sendDebugPackets ()V Y
	setBaby (Z)V a
	setState (Lnet/minecraft/world/entity/animal/sniffer/Sniffer$State;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; b
	spawnChildFromBreeding (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;)V a
	storeExploredPosition (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; j
	tick ()V l
	transitionTo (Lnet/minecraft/world/entity/animal/sniffer/Sniffer$State;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; a
net/minecraft/world/entity/animal/sniffer/Sniffer$State cak$a
	$VALUES h
	DIGGING f
	FEELING_HAPPY b
	IDLING a
	RISING g
	SCENTING c
	SEARCHING e
	SNIFFING d
	$values ()[Lnet/minecraft/world/entity/animal/sniffer/Sniffer$State; a
net/minecraft/world/entity/animal/sniffer/SnifferAi cal
	LOGGER c
	MAX_LOOK_DISTANCE d
	MEMORY_TYPES b
	SENSOR_TYPES a
	SNIFFING_COOLDOWN_TICKS e
	SPEED_MULTIPLIER_WHEN_IDLING f
	SPEED_MULTIPLIER_WHEN_PANICKING g
	SPEED_MULTIPLIER_WHEN_SNIFFING h
	SPEED_MULTIPLIER_WHEN_TEMPTED i
	getTemptations ()Lnet/minecraft/world/item/crafting/Ingredient; a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initDigActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	initSniffingActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	resetSniffing (Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; b
	updateActivity (Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)V a
net/minecraft/world/entity/animal/sniffer/SnifferAi$Digging cal$a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V c
net/minecraft/world/entity/animal/sniffer/SnifferAi$FeelingHappy cal$b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V c
net/minecraft/world/entity/animal/sniffer/SnifferAi$FinishedDigging cal$c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V c
net/minecraft/world/entity/animal/sniffer/SnifferAi$Scenting cal$d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V c
net/minecraft/world/entity/animal/sniffer/SnifferAi$Searching cal$e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V c
net/minecraft/world/entity/animal/sniffer/SnifferAi$Sniffing cal$f
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V c
net/minecraft/world/entity/boss/EnderDragonPart cam
	name c
	parentMob b
	size d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V c_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; dj
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dz
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	is (Lnet/minecraft/world/entity/Entity;)Z t
	isPickable ()Z bt
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldBeSaved ()Z dK
net/minecraft/world/entity/boss/enderdragon/EndCrystal can
	DATA_BEAM_TARGET c
	DATA_SHOW_BOTTOM d
	time b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V c_
	getBeamTarget ()Lnet/minecraft/core/BlockPos; q
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aW
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dz
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bt
	kill ()V al
	onDestroyedBy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setBeamTarget (Lnet/minecraft/core/BlockPos;)V a
	setShowBottom (Z)V a
	shouldRenderAtSqrDistance (D)Z a
	showsBottom ()Z s
	tick ()V l
net/minecraft/world/entity/boss/enderdragon/EnderDragon cao
	CRYSTAL_DESTROY_TARGETING bZ
	DATA_PHASE b
	DRAGON_DEATH_TIME_KEY cd
	DRAGON_PHASE_KEY ce
	GROWL_INTERVAL_MAX cb
	GROWL_INTERVAL_MIN ca
	LOGGER bY
	SITTING_ALLOWED_DAMAGE_PERCENTAGE cc
	body ch
	dragonDeathTime bV
	dragonFight cn
	fightOrigin co
	flapTime bT
	growlTime cq
	head e
	inWall bU
	nearestCrystal bX
	neck cg
	nodeAdjacency ct
	nodes cs
	oFlapTime bS
	openSet cu
	phaseManager cp
	posPointer d
	positions c
	sittingDamageReceived cr
	subEntities cf
	tail1 ci
	tail2 cj
	tail3 ck
	wing1 cl
	wing2 cm
	yRotA bW
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)Z b
	aiStep ()V d_
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	canChangeDimensions ()Z ct
	canRide (Lnet/minecraft/world/entity/Entity;)Z o
	checkCrystals ()V ge
	checkDespawn ()V dy
	checkWalls (Lnet/minecraft/world/phys/AABB;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; w
	defineSynchedData ()V c_
	findClosestNode ()I A
	findClosestNode (DDD)I r
	findPath (IILnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Path; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getDragonFight ()Lnet/minecraft/world/level/dimension/end/EndDragonFight; gc
	getFightOrigin ()Lnet/minecraft/core/BlockPos; u
	getHeadLookVector (F)Lnet/minecraft/world/phys/Vec3; D
	getHeadPartYOffset (I[D[D)F a
	getHeadYOffset ()F gd
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLatencyPos (IF)[D a
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getPhaseManager ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager; gb
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; db
	getSoundVolume ()F eW
	getSubEntities ()[Lnet/minecraft/world/entity/boss/EnderDragonPart; ga
	hurt (Ljava/util/List;)V c
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurt (Lnet/minecraft/world/entity/boss/EnderDragonPart;Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFlapping ()Z aT
	isPickable ()Z bt
	kill ()V al
	knockBack (Ljava/util/List;)V a
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;)V a
	onFlap ()V aS
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z g
	reconstructPath (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Path; a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	rotWrap (D)F i
	setDragonFight (Lnet/minecraft/world/level/dimension/end/EndDragonFight;)V a
	setFightOrigin (Lnet/minecraft/core/BlockPos;)V h
	tickDeath ()V eb
	tickPart (Lnet/minecraft/world/entity/boss/EnderDragonPart;DDD)V a
net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonPhaseInstance caq
	dragon a
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getTurnSpeed ()F h
	isSitting ()Z a
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonSittingPhase car
	isSitting ()Z a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/DragonChargePlayerPhase cas
	CHARGE_RECOVERY_TIME c
	LOGGER b
	targetLocation d
	timeSinceCharge e
	begin ()V d
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	setTarget (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonDeathPhase cat
	targetLocation b
	time c
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonHoldingPatternPhase cau
	NEW_TARGET_TARGETING b
	clockwise e
	currentPath c
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	strafePlayer (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonHoverPhase cav
	targetLocation b
	begin ()V d
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	isSitting ()Z a
net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingApproachPhase caw
	NEAR_EGG_TARGETING b
	currentPath c
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingPhase cax
	targetLocation b
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	getTurnSpeed ()F h
net/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance cay
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	getTurnSpeed ()F h
	isSitting ()Z a
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingAttackingPhase caz
	ROAR_DURATION b
	attackingTicks c
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingFlamingPhase cba
	FLAME_DURATION b
	SITTING_FLAME_ATTACKS_COUNT c
	WARMUP_TIME d
	flame g
	flameCount f
	flameTicks e
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	resetFlameCount ()V j
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingScanningPhase cbb
	CHARGE_TARGETING f
	SITTING_ATTACK_VIEW_RANGE d
	SITTING_ATTACK_Y_VIEW_RANGE c
	SITTING_CHARGE_VIEW_RANGE e
	SITTING_SCANNING_IDLE_TICKS b
	scanTargeting g
	scanningTime h
	begin ()V d
	doServerTick ()V c
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase cbc
	FIREBALL_CHARGE_AMOUNT c
	LOGGER b
	attackTarget g
	currentPath e
	fireballCharge d
	holdingPatternClockwise h
	targetLocation f
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonTakeoffPhase cbd
	currentPath c
	firstTick b
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase cbe
	CHARGING_PLAYER i
	DYING j
	HOLDING_PATTERN a
	HOVERING k
	LANDING d
	LANDING_APPROACH c
	SITTING_ATTACKING h
	SITTING_FLAMING f
	SITTING_SCANNING g
	STRAFE_PLAYER b
	TAKEOFF e
	id n
	instanceClass m
	name o
	phases l
	create (Ljava/lang/Class;Ljava/lang/String;)Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; a
	createInstance (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; a
	getById (I)Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; a
	getConstructor ()Ljava/lang/reflect/Constructor; a
	getCount ()I c
	getId ()I b
net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager cbf
	LOGGER a
	currentPhase d
	dragon b
	phases c
	getCurrentPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; a
	getPhase (Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase;)Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; b
	setPhase (Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase;)V a
net/minecraft/world/entity/boss/wither/WitherBoss cbi
	DATA_ID_INV bT
	DATA_TARGETS e
	DATA_TARGET_A b
	DATA_TARGET_B c
	DATA_TARGET_C d
	INVULNERABLE_TICKS bU
	LIVING_ENTITY_SELECTOR cd
	TARGETING_CONDITIONS ce
	bossEvent cc
	destroyBlocksTick cb
	idleHeadUpdates ca
	nextHeadUpdate bZ
	xRotHeads bV
	xRotOHeads bX
	yRotHeads bW
	yRotOHeads bY
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)Z b
	aiStep ()V d_
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	canChangeDimensions ()Z ct
	canDestroy (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	canRide (Lnet/minecraft/world/entity/Entity;)Z o
	checkDespawn ()V dy
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; w
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAlternativeTarget (I)I t
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHeadX (I)D u
	getHeadXRot (I)F c
	getHeadY (I)D v
	getHeadYRot (I)F b
	getHeadZ (I)D w
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getInvulnerableTicks ()I A
	getMobType ()Lnet/minecraft/world/entity/MobType; eS
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPowered ()Z a
	makeInvulnerable ()V u
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	performRangedAttack (IDDDZ)V a
	performRangedAttack (ILnet/minecraft/world/entity/LivingEntity;)V a
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	rotlerp (FFF)F a
	setAlternativeTarget (II)V a
	setCustomName (Lnet/minecraft/network/chat/Component;)V b
	setInvulnerableTicks (I)V s
	startSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
	stopSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V d
net/minecraft/world/entity/boss/wither/WitherBoss$WitherDoNothingGoal cbi$a
	canUse ()Z a
net/minecraft/world/entity/decoration/ArmorStand cbk
	BABY_DIMENSIONS bS
	CHEST_OFFSET bU
	CLIENT_FLAG_MARKER bB
	CLIENT_FLAG_NO_BASEPLATE bA
	CLIENT_FLAG_SHOW_ARMS f
	CLIENT_FLAG_SMALL e
	DATA_BODY_POSE bE
	DATA_CLIENT_FLAGS bC
	DATA_HEAD_POSE bD
	DATA_LEFT_ARM_POSE bF
	DATA_LEFT_LEG_POSE bH
	DATA_RIGHT_ARM_POSE bG
	DATA_RIGHT_LEG_POSE bI
	DEFAULT_BODY_POSE bM
	DEFAULT_HEAD_POSE bL
	DEFAULT_LEFT_ARM_POSE bN
	DEFAULT_LEFT_LEG_POSE bP
	DEFAULT_RIGHT_ARM_POSE bO
	DEFAULT_RIGHT_LEG_POSE bQ
	DISABLE_PUTTING_OFFSET d
	DISABLE_TAKING_OFFSET c
	ENABLE_ARMS bK
	FEET_OFFSET bT
	HEAD_OFFSET bW
	LEGS_OFFSET bV
	MARKER_DIMENSIONS bR
	RIDABLE_MINECARTS bX
	WOBBLE_TIME b
	armorItems bZ
	bodyPose cd
	disabledSlots cb
	handItems bY
	headPose cc
	invisible ca
	lastHit bJ
	leftArmPose ce
	leftLegPose cg
	rightArmPose cf
	rightLegPose ch
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	attackable ()Z fz
	brokenByAnything (Lnet/minecraft/world/damagesource/DamageSource;)V i
	brokenByPlayer (Lnet/minecraft/world/damagesource/DamageSource;)V h
	canBeSeenByAnyone ()Z ep
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z f
	causeDamage (Lnet/minecraft/world/damagesource/DamageSource;F)V g
	defineSynchedData ()V c_
	doPush (Lnet/minecraft/world/entity/Entity;)V D
	getArmorSlots ()Ljava/lang/Iterable; bL
	getBodyPose ()Lnet/minecraft/core/Rotations; C
	getClickedSlot (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/EquipmentSlot; j
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDimensionsMarker (Z)Lnet/minecraft/world/entity/EntityDimensions; v
	getFallSounds ()Lnet/minecraft/world/entity/LivingEntity$Fallsounds; eG
	getHandSlots ()Ljava/lang/Iterable; bK
	getHeadPose ()Lnet/minecraft/core/Rotations; B
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; c
	getLeftArmPose ()Lnet/minecraft/core/Rotations; D
	getLeftLegPose ()Lnet/minecraft/core/Rotations; G
	getLightProbePosition (F)Lnet/minecraft/world/phys/Vec3; k
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; fm
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dz
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; s_
	getRightArmPose ()Lnet/minecraft/core/Rotations; E
	getRightLegPose ()Lnet/minecraft/core/Rotations; H
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V b
	hasPhysics ()Z I
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	ignoreExplosion (Lnet/minecraft/world/level/Explosion;)Z a
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAffectedByPotions ()Z fy
	isBaby ()Z o_
	isDisabled (Lnet/minecraft/world/entity/EquipmentSlot;)Z e
	isEffectiveAi ()Z cY
	isIgnoringBlockTriggers ()Z r_
	isMarker ()Z A
	isNoBasePlate ()Z y
	isPickable ()Z bt
	isPushable ()Z bu
	isShowArms ()Z w
	isSmall ()Z u
	kill ()V al
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playBrokenSound ()V N
	pushEntities ()V M_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readPose (Lnet/minecraft/nbt/CompoundTag;)V c
	refreshDimensions ()V k_
	setBit (BIZ)B a
	setBodyPose (Lnet/minecraft/core/Rotations;)V b
	setHeadPose (Lnet/minecraft/core/Rotations;)V a
	setInvisible (Z)V j
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setLeftArmPose (Lnet/minecraft/core/Rotations;)V c
	setLeftLegPose (Lnet/minecraft/core/Rotations;)V e
	setMarker (Z)V u
	setNoBasePlate (Z)V s
	setRightArmPose (Lnet/minecraft/core/Rotations;)V d
	setRightLegPose (Lnet/minecraft/core/Rotations;)V f
	setShowArms (Z)V a
	setSmall (Z)V t
	setYBodyRot (F)V o
	setYHeadRot (F)V n
	shouldRenderAtSqrDistance (D)Z a
	showBreakingParticles ()V M
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z u
	swapItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Z a
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V l
	tickHeadTurn (FF)F e
	travel (Lnet/minecraft/world/phys/Vec3;)V a
	updateInvisibilityStatus ()V J
	writePose ()Lnet/minecraft/nbt/CompoundTag; K
net/minecraft/world/entity/decoration/GlowItemFrame cbl
	getAddItemSound ()Lnet/minecraft/sounds/SoundEvent; w
	getBreakSound ()Lnet/minecraft/sounds/SoundEvent; s
	getFrameItemStack ()Lnet/minecraft/world/item/ItemStack; y
	getPlaceSound ()Lnet/minecraft/sounds/SoundEvent; u
	getRemoveItemSound ()Lnet/minecraft/sounds/SoundEvent; q
	getRotateItemSound ()Lnet/minecraft/sounds/SoundEvent; x
net/minecraft/world/entity/decoration/HangingEntity cbm
	HANGING_ENTITY b
	LOGGER e
	checkInterval f
	direction d
	pos c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V c_
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getDirection ()Lnet/minecraft/core/Direction; cE
	getHeight ()I C
	getPos ()Lnet/minecraft/core/BlockPos; E
	getWidth ()I B
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bt
	mirror (Lnet/minecraft/world/level/block/Mirror;)F a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	offs (I)D b
	playPlacementSound ()V D
	push (DDD)V j
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V z
	refreshDimensions ()V k_
	repositionEntityAfterLoad ()Z bv
	rotate (Lnet/minecraft/world/level/block/Rotation;)F a
	setDirection (Lnet/minecraft/core/Direction;)V a
	setPos (DDD)V a_
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z u
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/item/ItemEntity; a
	survives ()Z A
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V l
net/minecraft/world/entity/decoration/ItemFrame cbn
	DATA_ITEM g
	DATA_ROTATION h
	LOGGER f
	NUM_ROTATIONS e
	dropChance i
	fixed j
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V c_
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	dropItem (Lnet/minecraft/world/entity/Entity;Z)V b
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; dj
	getAddItemSound ()Lnet/minecraft/sounds/SoundEvent; w
	getAnalogOutput ()I K
	getBreakSound ()Lnet/minecraft/sounds/SoundEvent; s
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getFrameItemStack ()Lnet/minecraft/world/item/ItemStack; y
	getFramedMapId ()Ljava/util/OptionalInt; H
	getHeight ()I C
	getItem ()Lnet/minecraft/world/item/ItemStack; G
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dz
	getPlaceSound ()Lnet/minecraft/sounds/SoundEvent; u
	getRemoveItemSound ()Lnet/minecraft/sounds/SoundEvent; q
	getRotateItemSound ()Lnet/minecraft/sounds/SoundEvent; x
	getRotation ()I J
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	getVisualRotationYInDegrees ()F dD
	getWidth ()I B
	hasFramedMap ()Z I
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	kill ()V al
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onItemChanged (Lnet/minecraft/world/item/ItemStack;)V d
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playPlacementSound ()V D
	push (DDD)V j
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V z
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	removeFramedMap (Lnet/minecraft/world/item/ItemStack;)V c
	setDirection (Lnet/minecraft/core/Direction;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;Z)V a
	setRotation (I)V b
	setRotation (IZ)V a
	shouldRenderAtSqrDistance (D)Z a
	survives ()Z A
net/minecraft/world/entity/decoration/LeashFenceKnotEntity cbo
	OFFSET_Y e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; dj
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getHeight ()I C
	getOrCreateKnot (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity; b
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dz
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; q
	getWidth ()I B
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	playPlacementSound ()V D
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V z
	setDirection (Lnet/minecraft/core/Direction;)V a
	shouldRenderAtSqrDistance (D)Z a
	survives ()Z A
net/minecraft/world/entity/decoration/Painting cbp
	DATA_PAINTING_VARIANT_ID f
	DEFAULT_VARIANT g
	VARIANT_TAG e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	create (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Ljava/util/Optional; a
	defineSynchedData ()V c_
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; dj
	getDefaultVariant ()Lnet/minecraft/core/Holder; s
	getHeight ()I C
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dz
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/core/Holder; q
	getWidth ()I B
	lerpTo (DDDFFI)V a
	loadVariant (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; c
	moveTo (DDDFF)V b
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playPlacementSound ()V D
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/core/Holder;)V a
	storeVariant (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/Holder;)V a
	trackingPosition ()Lnet/minecraft/world/phys/Vec3; dl
	variantArea (Lnet/minecraft/core/Holder;)I b
net/minecraft/world/entity/decoration/PaintingVariant cbq
	height b
	width a
	getHeight ()I b
	getWidth ()I a
net/minecraft/world/entity/decoration/PaintingVariants cbr
	ALBAN c
	AZTEC b
	AZTEC2 d
	BOMB e
	BURNING_SKULL x
	BUST p
	COURBET i
	CREEBET l
	DONKEY_KONG z
	EARTH A
	FIGHTERS u
	FIRE D
	GRAHAM n
	KEBAB a
	MATCH o
	PIGSCENE w
	PLANT f
	POINTER v
	POOL h
	SEA j
	SKELETON y
	SKULL_AND_ROSES s
	STAGE q
	SUNSET k
	VOID r
	WANDERER m
	WASTELAND g
	WATER C
	WIND B
	WITHER t
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/entity/decoration/PaintingVariant; a
	create (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/entity/item/FallingBlockEntity cbt
	DATA_START_POS e
	LOGGER f
	blockData d
	blockState g
	cancelDrop h
	dropItem c
	fallDamageMax j
	fallDamagePerDistance k
	hurtEntities i
	time b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	callOnBrokenAfterFall (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	defineSynchedData ()V c_
	disableDrop ()V s
	displayFireAnimation ()Z cv
	fall (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/entity/item/FallingBlockEntity; a
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; dj
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; u
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aW
	getStartPos ()Lnet/minecraft/core/BlockPos; q
	getTypeName ()Lnet/minecraft/network/chat/Component; co
	isAttackable ()Z cq
	isPickable ()Z bt
	onlyOpCanSetNbt ()Z cM
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	setHurtsEntities (FI)V b
	setStartPos (Lnet/minecraft/core/BlockPos;)V a
	tick ()V l
net/minecraft/world/entity/item/ItemEntity cbu
	DATA_ITEM c
	INFINITE_LIFETIME f
	INFINITE_PICKUP_DELAY e
	LIFETIME d
	age g
	bobOffs b
	cachedThrower k
	health i
	pickupDelay h
	target l
	thrower j
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	areMergable (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	copy ()Lnet/minecraft/world/entity/item/ItemEntity; D
	dampensVibrations ()Z aX
	defineSynchedData ()V c_
	fireImmune ()Z aY
	getAge ()I s
	getBlockPosBelowThatAffectsMyMovement ()Lnet/minecraft/core/BlockPos; aI
	getItem ()Lnet/minecraft/world/item/ItemStack; q
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aW
	getName ()Lnet/minecraft/network/chat/Component; ad
	getOwner ()Lnet/minecraft/world/entity/Entity; w
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; db
	getSpin (F)F a
	getVisualRotationYInDegrees ()F dD
	hasPickUpDelay ()Z z
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAttackable ()Z cq
	isMergable ()Z I
	makeFakeItem ()V C
	merge (Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;)V a
	merge (Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	merge (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; a
	mergeWithNeighbours ()V H
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	restoreFrom (Lnet/minecraft/world/entity/Entity;)V w
	setDefaultPickUpDelay ()V u
	setExtendedLifetime ()V B
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
	setNeverPickUp ()V y
	setNoPickUpDelay ()V x
	setPickUpDelay (I)V b
	setTarget (Ljava/util/UUID;)V b
	setThrower (Lnet/minecraft/world/entity/Entity;)V a
	setUnderLavaMovement ()V G
	setUnderwaterMovement ()V E
	setUnlimitedLifetime ()V A
	tick ()V l
	tryToMerge (Lnet/minecraft/world/entity/item/ItemEntity;)V a
net/minecraft/world/entity/item/PrimedTnt cbv
	DATA_BLOCK_STATE_ID d
	DATA_FUSE_ID c
	DEFAULT_FUSE_TIME e
	TAG_BLOCK_STATE f
	TAG_FUSE b
	owner g
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V c_
	explode ()V x
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; u
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getFuse ()I s
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aW
	getOwner ()Lnet/minecraft/world/entity/Entity; w
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; q
	isPickable ()Z bt
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	restoreFrom (Lnet/minecraft/world/entity/Entity;)V w
	setBlockState (Lnet/minecraft/world/level/block/state/BlockState;)V c
	setFuse (I)V b
	tick ()V l
net/minecraft/world/entity/monster/AbstractIllager cbx
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; u
	getMobType ()Lnet/minecraft/world/entity/MobType; eS
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	registerGoals ()V B
	ridingOffset (Lnet/minecraft/world/entity/Entity;)F l
net/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose cbx$a
	$VALUES i
	ATTACKING b
	BOW_AND_ARROW d
	CELEBRATING g
	CROSSBOW_CHARGE f
	CROSSBOW_HOLD e
	CROSSED a
	NEUTRAL h
	SPELLCASTING c
	$values ()[Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; a
net/minecraft/world/entity/monster/AbstractIllager$RaiderOpenDoorGoal cbx$b
	canUse ()Z a
net/minecraft/world/entity/monster/AbstractSkeleton cby
	bowGoal b
	meleeGoal c
	aiStep ()V d_
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getMobType ()Lnet/minecraft/world/entity/MobType; eS
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; w
	isShaking ()Z ge
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessWeaponGoal ()V A
	registerGoals ()V B
	rideTick ()V t
	ridingOffset (Lnet/minecraft/world/entity/Entity;)F l
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/monster/Blaze cbz
	DATA_FLAGS_ID d
	allowedHeightOffset b
	nextHeightOffsetChangeTick c
	aiStep ()V d_
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLightLevelDependentMagicValue ()F bo
	isCharged ()Z w
	isOnFire ()Z bN
	isSensitiveToWater ()Z fh
	registerGoals ()V B
	setCharged (Z)V w
net/minecraft/world/entity/monster/Blaze$BlazeAttackGoal cbz$a
	attackStep b
	attackTime c
	blaze a
	lastSeen d
	canUse ()Z a
	getFollowDistance ()D h
	requiresUpdateEveryTick ()Z T_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/CaveSpider cca
	createCaveSpider ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	ridingOffset (Lnet/minecraft/world/entity/Entity;)F l
net/minecraft/world/entity/monster/Creeper ccb
	DATA_IS_IGNITED d
	DATA_IS_POWERED c
	DATA_SWELL_DIR b
	droppedSkulls bW
	explosionRadius bV
	maxSwell bU
	oldSwell e
	swell bT
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canDropMobsSkull ()Z gf
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	defineSynchedData ()V c_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	explodeCreeper ()V gh
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxFallDistance ()I cu
	getSwellDir ()I w
	getSwelling (F)F E
	ignite ()V ge
	increaseDroppedSkulls ()V gg
	isIgnited ()Z A
	isPowered ()Z a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	setSwellDir (I)V b
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	spawnLingeringCloud ()V gi
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V l
net/minecraft/world/entity/monster/CrossbowAttackMob ccc
	getProjectileShotVector (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/Vec3;F)Lorg/joml/Vector3f; a
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; q
	onCrossbowAttackPerformed ()V a
	performCrossbowAttack (Lnet/minecraft/world/entity/LivingEntity;F)V b
	setChargingCrossbow (Z)V b
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/projectile/Projectile;FF)V a
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
net/minecraft/world/entity/monster/Drowned ccd
	NAUTILUS_SHELL_CHANCE b
	groundNavigation d
	searchingForLand bX
	waterNavigation c
	addBehaviourGoals ()V u
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	checkDrownedSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	closeToNextPos ()Z gg
	convertsInWater ()Z gf
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getSkull ()Lnet/minecraft/world/item/ItemStack; ge
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; A
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aN
	isDeepEnoughToSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isPushedByFluid ()Z cz
	isVisuallySwimming ()Z ca
	okTarget (Lnet/minecraft/world/entity/LivingEntity;)Z j
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	setSearchingForLand (Z)V w
	supportsBreakDoorGoal ()Z w
	travel (Lnet/minecraft/world/phys/Vec3;)V a
	updateSwimming ()V bf
	wantsToSwim ()Z go
net/minecraft/world/entity/monster/Drowned$DrownedAttackGoal ccd$a
	drowned b
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/monster/Drowned$DrownedGoToBeachGoal ccd$b
	drowned g
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/monster/Drowned$DrownedGoToWaterGoal ccd$c
	level f
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	getWaterPos ()Lnet/minecraft/world/phys/Vec3; h
	start ()V c
net/minecraft/world/entity/monster/Drowned$DrownedMoveControl ccd$d
	drowned l
	tick ()V a
net/minecraft/world/entity/monster/Drowned$DrownedSwimUpGoal ccd$e
	drowned a
	seaLevel c
	speedModifier b
	stuck d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Drowned$DrownedTridentAttackGoal ccd$f
	drowned a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/monster/ElderGuardian cce
	EFFECT_AMPLIFIER bV
	EFFECT_DISPLAY_LIMIT bW
	EFFECT_DURATION bU
	EFFECT_INTERVAL e
	EFFECT_RADIUS bT
	ELDER_SIZE_SCALE b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	customServerAiStep ()V Z
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getAttackDuration ()I w
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; A
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
net/minecraft/world/entity/monster/EnderMan ccf
	DATA_CARRY_STATE bU
	DATA_CREEPY bV
	DATA_STARED_AT bW
	DELAY_BETWEEN_CREEPY_STARE_SOUND e
	MIN_DEAGGRESSION_TIME bT
	PERSISTENT_ANGER_TIME bZ
	SPEED_MODIFIER_ATTACKING d
	SPEED_MODIFIER_ATTACKING_UUID c
	lastStareSound bX
	persistentAngerTarget cb
	remainingPersistentAngerTime ca
	targetChangeTime bY
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getCarriedBlock ()Lnet/minecraft/world/level/block/state/BlockState; ge
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hasBeenStaredAt ()Z gg
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtWithCleanWater (Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/projectile/ThrownPotion;F)Z a
	isCreepy ()Z gf
	isLookingAtMe (Lnet/minecraft/world/entity/player/Player;)Z g
	isSensitiveToWater ()Z fh
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStareSound ()V w
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	requiresCustomPersistence ()Z W
	setBeingStaredAt ()V gh
	setCarriedBlock (Lnet/minecraft/world/level/block/state/BlockState;)V d
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	startPersistentAngerTimer ()V c
	teleport ()Z A
	teleport (DDD)Z r
	teleportTowards (Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/world/entity/monster/EnderMan$EndermanFreezeWhenLookedAt ccf$a
	enderman a
	target b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanLeaveBlockGoal ccf$b
	enderman a
	canPlaceBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Z a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanLookForPlayerGoal ccf$c
	aggroTime k
	continueAggroTargetConditions n
	enderman i
	isAngerInducing o
	pendingTarget j
	startAggroTargetConditions m
	teleportTime l
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanTakeBlockGoal ccf$d
	enderman a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Endermite ccg
	MAX_LIFE b
	life c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	checkEndermiteSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMobType ()Lnet/minecraft/world/entity/MobType; eS
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aW
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	setYBodyRot (F)V o
	tick ()V l
net/minecraft/world/entity/monster/Enemy cch
	XP_REWARD_BOSS l_
	XP_REWARD_HUGE k_
	XP_REWARD_LARGE j_
	XP_REWARD_MEDIUM i_
	XP_REWARD_NONE g_
	XP_REWARD_SMALL h_
net/minecraft/world/entity/monster/Evoker cci
	wololoTarget e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; w
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; ge
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; af_
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getWololoTarget ()Lnet/minecraft/world/entity/animal/Sheep; gx
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z s
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	setWololoTarget (Lnet/minecraft/world/entity/animal/Sheep;)V a
net/minecraft/world/entity/monster/Evoker$EvokerAttackSpellGoal cci$a
	createSpellEntity (DDDDFI)V a
	getCastingInterval ()I i
	getCastingTime ()I h
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
net/minecraft/world/entity/monster/Evoker$EvokerCastingSpellGoal cci$b
	tick ()V e
net/minecraft/world/entity/monster/Evoker$EvokerSummonSpellGoal cci$c
	vexCountTargeting e
	canUse ()Z a
	getCastingInterval ()I i
	getCastingTime ()I h
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
net/minecraft/world/entity/monster/Evoker$EvokerWololoSpellGoal cci$d
	wololoTargeting e
	canContinueToUse ()Z b
	canUse ()Z a
	getCastWarmupTime ()I n
	getCastingInterval ()I i
	getCastingTime ()I h
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Ghast ccj
	DATA_IS_CHARGING b
	explosionPower c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkGhastSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; A
	defineSynchedData ()V c_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getExplosionPower ()I w
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxSpawnClusterSize ()I fI
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; db
	getSoundVolume ()F eW
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isCharging ()Z u
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isReflectedFireball (Lnet/minecraft/world/damagesource/DamageSource;)Z h
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	ridingOffset (Lnet/minecraft/world/entity/Entity;)F l
	setCharging (Z)V w
	shouldDespawnInPeaceful ()Z X
net/minecraft/world/entity/monster/Ghast$GhastLookGoal ccj$a
	ghast a
	canUse ()Z a
	requiresUpdateEveryTick ()Z T_
	tick ()V e
net/minecraft/world/entity/monster/Ghast$GhastMoveControl ccj$b
	floatDuration m
	ghast l
	canReach (Lnet/minecraft/world/phys/Vec3;I)Z a
	tick ()V a
net/minecraft/world/entity/monster/Ghast$GhastShootFireballGoal ccj$c
	chargeTime a
	ghast b
	canUse ()Z a
	requiresUpdateEveryTick ()Z T_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Ghast$RandomFloatAroundGoal ccj$d
	ghast a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Giant cck
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	ridingOffset (Lnet/minecraft/world/entity/Entity;)F l
net/minecraft/world/entity/monster/Guardian ccl
	ATTACK_TIME c
	DATA_ID_ATTACK_TARGET e
	DATA_ID_MOVING b
	clientSideAttackTime bZ
	clientSideCachedAttackTarget bY
	clientSideSpikesAnimation bW
	clientSideSpikesAnimationO bX
	clientSideTailAnimation bT
	clientSideTailAnimationO bU
	clientSideTailAnimationSpeed bV
	clientSideTouchedGround ca
	randomStrollGoal d
	aiStep ()V d_
	checkGuardianSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; ge
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V c_
	getActiveAttackTarget ()Lnet/minecraft/world/entity/LivingEntity; gh
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getAmbientSoundInterval ()I Q
	getAttackAnimationScale (F)F G
	getAttackDuration ()I w
	getClientSideAttackTime ()F gi
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; A
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxHeadXRot ()I aa
	getMobType ()Lnet/minecraft/world/entity/MobType; eS
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aW
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getSpikesAnimation (F)F F
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTailAnimation (F)F E
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasActiveAttackTarget ()Z gg
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isMoving ()Z gf
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	registerGoals ()V B
	setActiveAttackTarget (I)V b
	setMoving (Z)V w
	travel (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/monster/Guardian$GuardianAttackGoal ccl$a
	attackTime b
	elder c
	guardian a
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z T_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Guardian$GuardianAttackSelector ccl$b
	guardian a
	test (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/monster/Guardian$GuardianMoveControl ccl$c
	guardian l
	tick ()V a
net/minecraft/world/entity/monster/Husk ccm
	checkHuskSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	convertsInWater ()Z gf
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	doUnderWaterConversion ()V gh
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getSkull ()Lnet/minecraft/world/item/ItemStack; ge
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; A
	isSunSensitive ()Z ae_
net/minecraft/world/entity/monster/Illusioner ccn
	ILLUSION_SPREAD bU
	ILLUSION_TRANSITION_TICKS bT
	NUM_ILLUSIONS e
	clientSideIllusionOffsets bW
	clientSideIllusionTicks bV
	aiStep ()V d_
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; w
	defineSynchedData ()V c_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; u
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; i_
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; ge
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; af_
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getIllusionOffsets (F)[Lnet/minecraft/world/phys/Vec3; E
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z s
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	registerGoals ()V B
net/minecraft/world/entity/monster/Illusioner$IllusionerBlindnessSpellGoal ccn$a
	lastTargetId e
	canUse ()Z a
	getCastingInterval ()I i
	getCastingTime ()I h
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
	start ()V c
net/minecraft/world/entity/monster/Illusioner$IllusionerMirrorSpellGoal ccn$b
	canUse ()Z a
	getCastingInterval ()I i
	getCastingTime ()I h
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
net/minecraft/world/entity/monster/MagmaCube cco
	checkMagmaCubeSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	decreaseSquish ()V ga
	getAttackDamage ()F gc
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getJumpDelay ()I A
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; ge
	getLightLevelDependentMagicValue ()F bo
	getParticleType ()Lnet/minecraft/core/particles/ParticleOptions; w
	getSquishSound ()Lnet/minecraft/sounds/SoundEvent; gd
	isDealsDamage ()Z gb
	isOnFire ()Z bN
	jumpFromGround ()V fb
	jumpInLiquid (Lnet/minecraft/tags/TagKey;)V c
	setSize (IZ)V a
net/minecraft/world/entity/monster/Monster ccp
	aiStep ()V d_
	checkAnyLightMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	checkMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	createMonsterAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gk
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getFallSounds ()Lnet/minecraft/world/entity/LivingEntity$Fallsounds; eG
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; g
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; db
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aN
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aO
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isDarkEnoughToSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	isPreventingPlayerRest (Lnet/minecraft/world/entity/player/Player;)Z f
	shouldDespawnInPeaceful ()Z X
	shouldDropExperience ()Z ec
	shouldDropLoot ()Z ed
	updateNoActionTime ()V gj
net/minecraft/world/entity/monster/PatrollingMonster ccq
	patrolLeader c
	patrolTarget b
	patrolling d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canBeLeader ()Z gf
	canJoinPatrol ()Z gl
	checkPatrollingMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	findPatrolTarget ()V gm
	getPatrolTarget ()Lnet/minecraft/core/BlockPos; gg
	hasPatrolTarget ()Z gh
	isPatrolLeader ()Z gi
	isPatrolling ()Z gn
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	removeWhenFarAway (D)Z h
	setPatrolLeader (Z)V w
	setPatrolTarget (Lnet/minecraft/core/BlockPos;)V i
	setPatrolling (Z)V x
net/minecraft/world/entity/monster/PatrollingMonster$LongDistancePatrolGoal ccq$a
	NAVIGATION_FAILED_COOLDOWN a
	cooldownUntil e
	leaderSpeedModifier d
	mob b
	speedModifier c
	canUse ()Z a
	findPatrolCompanions ()Ljava/util/List; h
	moveRandomly ()Z i
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Phantom ccr
	FLAP_DEGREES_PER_TICK b
	ID_SIZE d
	TICKS_PER_FLAP c
	anchorPoint bS
	attackPhase bT
	moveTargetPoint e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; H
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMobType ()Lnet/minecraft/world/entity/MobType; eS
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getPhantomSize ()I u
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; db
	getSoundVolume ()F eW
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getUniqueFlapTickOffset ()I w
	isFlapping ()Z aT
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	ridingOffset (Lnet/minecraft/world/entity/Entity;)F l
	setPhantomSize (I)V b
	shouldDespawnInPeaceful ()Z X
	shouldRenderAtSqrDistance (D)Z a
	tick ()V l
	updatePhantomSizeInfo ()V A
net/minecraft/world/entity/monster/Phantom$AttackPhase ccr$a
	$VALUES c
	CIRCLE a
	SWOOP b
	$values ()[Lnet/minecraft/world/entity/monster/Phantom$AttackPhase; a
net/minecraft/world/entity/monster/Phantom$PhantomAttackPlayerTargetGoal ccr$b
	attackTargeting b
	nextScanTick c
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/monster/Phantom$PhantomAttackStrategyGoal ccr$c
	nextSweepTick b
	canUse ()Z a
	setAnchorAboveTarget ()V h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Phantom$PhantomBodyRotationControl ccr$d
	clientTick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomCircleAroundAnchorGoal ccr$e
	angle c
	clockwise f
	distance d
	height e
	canUse ()Z a
	selectNext ()V i
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Phantom$PhantomLookControl ccr$f
	tick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomMoveControl ccr$g
	speed m
	tick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomMoveTargetGoal ccr$h
	touchingTarget ()Z h
net/minecraft/world/entity/monster/Phantom$PhantomSweepAttackGoal ccr$i
	CAT_SEARCH_TICK_DELAY c
	catSearchTick e
	isScaredOfCat d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Pillager ccs
	CROSSBOW_POWER bU
	INVENTORY_SIZE e
	IS_CHARGING_CROSSBOW b
	SLOT_OFFSET bT
	inventory bV
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; w
	defineSynchedData ()V c_
	enchantSpawnedWeapon (Lnet/minecraft/util/RandomSource;F)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; u
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; af_
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getInventory ()Lnet/minecraft/world/SimpleContainer; A
	getMaxSpawnClusterSize ()I fI
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z s
	isChargingCrossbow ()Z ge
	onCrossbowAttackPerformed ()V a
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	setChargingCrossbow (Z)V b
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
	wantsItem (Lnet/minecraft/world/item/ItemStack;)Z l
net/minecraft/world/entity/monster/RangedAttackMob cct
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
net/minecraft/world/entity/monster/Ravager ccu
	ATTACK_DURATION bZ
	ATTACK_MOVEMENT_SPEED bU
	BASE_MOVEMENT_SPEED bT
	NO_RAVAGER_AND_ALIVE e
	STUNNED_COLOR bV
	STUNNED_COLOR_BLUE bW
	STUNNED_COLOR_GREEN bX
	STUNNED_COLOR_RED bY
	STUN_DURATION b
	attackTick ca
	roarTick cc
	stunnedTick cb
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	applyRaidBuffs (IZ)V a
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	canBeLeader ()Z gf
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getAttackBoundingBox ()Lnet/minecraft/world/phys/AABB; fX
	getAttackTick ()I w
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; af_
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxHeadYRot ()I ab
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getRoarTick ()I go
	getStunnedTick ()I ge
	handleEntityEvent (B)V b
	hasLineOfSight (Lnet/minecraft/world/entity/Entity;)Z E
	isImmobile ()Z eY
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	roar ()V gq
	strongKnockback (Lnet/minecraft/world/entity/Entity;)V a
	stunEffect ()V gp
	updateControlFlags ()V T
net/minecraft/world/entity/monster/Shulker ccv
	COVERED_ARMOR_MODIFIER bT
	COVERED_ARMOR_MODIFIER_UUID e
	DATA_ATTACH_FACE_ID b
	DATA_COLOR_ID d
	DATA_PEEK_ID c
	DEFAULT_COLOR bW
	FORWARD cb
	MAX_LID_OPEN cg
	MAX_TELEPORT_DISTANCE bX
	NO_COLOR bV
	OTHER_SHULKER_LIMIT bZ
	OTHER_SHULKER_SCAN_RADIUS bY
	PEEK_PER_TICK ca
	TELEPORT_STEPS bU
	clientOldAttachPosition ce
	clientSideTeleportInterpolation cf
	currentPeekAmount cd
	currentPeekAmountO cc
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canBeCollidedWith ()Z bz
	canStayAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; H
	defineSynchedData ()V c_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	findAttachableSurface (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction; i
	findNewAttachment ()V gg
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getAttachFace ()Lnet/minecraft/core/Direction; A
	getClientPeekAmount (F)F E
	getColor ()Lnet/minecraft/world/item/DyeColor; gf
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getDeltaMovement ()Lnet/minecraft/world/phys/Vec3; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxHeadXRot ()I aa
	getMaxHeadYRot ()I ab
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aW
	getPhysicalPeek (F)F G
	getProgressAabb (Lnet/minecraft/core/Direction;F)Lnet/minecraft/world/phys/AABB; a
	getProgressDeltaAabb (Lnet/minecraft/core/Direction;FF)Lnet/minecraft/world/phys/AABB; a
	getRawPeekAmount ()I gl
	getRenderPosition (F)Ljava/util/Optional; F
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; db
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVariant ()Ljava/lang/Object; c
	getVariant ()Ljava/util/Optional; ge
	hitByShulkerBullet ()V gk
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isClosed ()Z gj
	isPositionBlocked (Lnet/minecraft/core/BlockPos;)Z j
	lerpTo (DDDFFI)V a
	makeBoundingBox ()Lnet/minecraft/world/phys/AABB; aq
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onPeekAmountChange ()V gi
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playAmbientSound ()V R
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	registerGoals ()V B
	setAttachFace (Lnet/minecraft/core/Direction;)V a
	setDeltaMovement (Lnet/minecraft/world/phys/Vec3;)V g
	setPos (DDD)V a_
	setRawPeekAmount (I)V b
	setVariant (Ljava/lang/Object;)V a
	setVariant (Ljava/util/Optional;)V a
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	stopRiding ()V ac
	teleportSomewhere ()Z w
	tick ()V l
	updatePeekAmount ()Z gh
net/minecraft/world/entity/monster/Shulker$ShulkerAttackGoal ccv$a
	attackTime b
	canUse ()Z a
	requiresUpdateEveryTick ()Z T_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Shulker$ShulkerBodyRotationControl ccv$b
	clientTick ()V a
net/minecraft/world/entity/monster/Shulker$ShulkerDefenseAttackGoal ccv$c
	canUse ()Z a
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/entity/monster/Shulker$ShulkerLookControl ccv$d
	clampHeadRotationToBody ()V b
	getXRotD ()Ljava/util/Optional; h
	getYRotD ()Ljava/util/Optional; i
net/minecraft/world/entity/monster/Shulker$ShulkerNearestAttackGoal ccv$e
	canUse ()Z a
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/entity/monster/Shulker$ShulkerPeekGoal ccv$f
	peekTime b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Silverfish ccw
	friendsGoal b
	checkSilverfishSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMobType ()Lnet/minecraft/world/entity/MobType; eS
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aW
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	registerGoals ()V B
	setYBodyRot (F)V o
	tick ()V l
net/minecraft/world/entity/monster/Silverfish$SilverfishMergeWithStoneGoal ccw$a
	doMerge j
	selectedDirection i
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Silverfish$SilverfishWakeUpFriendsGoal ccw$b
	lookForFriends b
	silverfish a
	canUse ()Z a
	notifyHurt ()V h
	tick ()V e
net/minecraft/world/entity/monster/Skeleton ccx
	CONVERSION_TAG b
	DATA_STRAY_CONVERSION_ID d
	TOTAL_CONVERSION_TIME c
	conversionTime bT
	inPowderSnowTime e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canFreeze ()Z dA
	defineSynchedData ()V c_
	doFreezeConversion ()V gg
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; w
	isFreezeConverting ()Z gf
	isShaking ()Z ge
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setFreezeConverting (Z)V w
	startFreezeConversion (I)V b
	tick ()V l
net/minecraft/world/entity/monster/Slime ccy
	ID_SIZE bT
	MAX_SIZE c
	MIN_SIZE b
	oSquish bS
	squish e
	targetSquish d
	wasOnGround bU
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkSlimeSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	dealDamage (Lnet/minecraft/world/entity/LivingEntity;)V j
	decreaseSquish ()V ga
	defineSynchedData ()V c_
	doPlayJumpSound ()Z gh
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAttackDamage ()F gc
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getJumpDelay ()I A
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; ge
	getMaxHeadXRot ()I aa
	getParticleType ()Lnet/minecraft/core/particles/ParticleOptions; w
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getSize ()I gf
	getSoundPitch ()F u
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; db
	getSoundVolume ()F eW
	getSquishSound ()Lnet/minecraft/sounds/SoundEvent; gd
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getType ()Lnet/minecraft/world/entity/EntityType; ai
	isDealsDamage ()Z gb
	isTiny ()Z gg
	jumpFromGround ()V fb
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshDimensions ()V k_
	registerGoals ()V B
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	setSize (IZ)V a
	shouldDespawnInPeaceful ()Z X
	tick ()V l
net/minecraft/world/entity/monster/Slime$SlimeAttackGoal ccy$a
	growTiredTimer b
	slime a
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z T_
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeFloatGoal ccy$b
	slime a
	canUse ()Z a
	requiresUpdateEveryTick ()Z T_
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeKeepOnJumpingGoal ccy$c
	slime a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeMoveControl ccy$d
	isAggressive o
	jumpDelay m
	slime n
	yRot l
	setDirection (FZ)V a
	setWantedMovement (D)V a
	tick ()V a
net/minecraft/world/entity/monster/Slime$SlimeRandomDirectionGoal ccy$e
	chosenDegrees b
	nextRandomizeTime c
	slime a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/SpellcasterIllager ccz
	DATA_SPELL_CASTING_ID e
	currentSpell bT
	spellCastingTickCount b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; u
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; ge
	getCurrentSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; gp
	getSpellCastingTime ()I gq
	isCastingSpell ()Z go
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setIsCastingSpell (Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;)V a
	tick ()V l
net/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell ccz$a
	$VALUES j
	BLINDNESS f
	BY_ID g
	DISAPPEAR e
	FANGS c
	NONE a
	SUMMON_VEX b
	WOLOLO d
	id h
	spellColor i
	$values ()[Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; a
	byId (I)Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; a
net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterCastingSpellGoal ccz$b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterUseSpellGoal ccz$c
	attackWarmupDelay b
	nextAttackTickCount c
	canContinueToUse ()Z b
	canUse ()Z a
	getCastWarmupTime ()I n
	getCastingInterval ()I i
	getCastingTime ()I h
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Spider cda
	DATA_FLAGS_ID b
	SPIDER_SPECIAL_EFFECT_CHANCE c
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; w
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V c_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMobType ()Lnet/minecraft/world/entity/MobType; eS
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	isClimbing ()Z A
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	onClimbable ()Z e_
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	registerGoals ()V B
	ridingOffset (Lnet/minecraft/world/entity/Entity;)F l
	setClimbing (Z)V w
	tick ()V l
net/minecraft/world/entity/monster/Spider$SpiderAttackGoal cda$a
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/monster/Spider$SpiderEffectsGroupData cda$b
	effect a
	setRandomEffect (Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/entity/monster/Spider$SpiderTargetGoal cda$c
	canUse ()Z a
net/minecraft/world/entity/monster/Stray cdb
	checkStraySpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; w
net/minecraft/world/entity/monster/Strider cdc
	DATA_BOOST_TIME ca
	DATA_SADDLE_ID cc
	DATA_SUFFOCATING cb
	FOOD_ITEMS bY
	STEERING_MODIFIER bX
	SUFFOCATE_STEERING_MODIFIER bW
	SUFFOCATING_MODIFIER bU
	SUFFOCATING_MODIFIER_UUID bT
	TEMPT_ITEMS bZ
	steering cd
	temptGoal ce
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	boost ()Z a
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z r
	canStandOnFluid (Lnet/minecraft/world/level/material/FluidState;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkStriderSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; w
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V c_
	dropEquipment ()V ey
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	floatStrider ()V ge
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/monster/Strider; b
	getControllingPassenger ()Lnet/minecraft/world/entity/LivingEntity; cN
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cJ
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getRiddenInput (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; b
	getRiddenSpeed (Lnet/minecraft/world/entity/player/Player;)F e
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isBeingTempted ()Z A
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isOnFire ()Z bN
	isSaddleable ()Z g
	isSaddled ()Z i
	isSensitiveToWater ()Z fh
	isSuffocating ()Z u
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	nextStep ()F aM
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	setSuffocating (Z)V w
	shouldPassengersInheritMalus ()Z D
	spawnJockey (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/SpawnGroupData;)Lnet/minecraft/world/entity/SpawnGroupData; a
	tick ()V l
	tickRidden (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/monster/Strider$StriderGoToLavaGoal cdc$a
	strider g
	canContinueToUse ()Z b
	canUse ()Z a
	getMoveToTarget ()Lnet/minecraft/core/BlockPos; k
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	shouldRecalculatePath ()Z l
net/minecraft/world/entity/monster/Strider$StriderPathNavigation cdc$b
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	hasValidPathType (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z a
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/monster/Vex cdd
	DATA_FLAGS_ID d
	FLAG_IS_CHARGING e
	FLAP_DEGREES_PER_TICK b
	TICKS_PER_FLAP c
	boundOrigin bU
	hasLimitedLife bV
	limitedLifeTicks bW
	owner bT
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	defineSynchedData ()V c_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBoundOrigin ()Lnet/minecraft/core/BlockPos; ge
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLightLevelDependentMagicValue ()F bo
	getOwner ()Lnet/minecraft/world/entity/Entity; w
	getOwner ()Lnet/minecraft/world/entity/Mob; A
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVexFlag (I)Z c
	isCharging ()Z gf
	isFlapping ()Z aT
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	restoreFrom (Lnet/minecraft/world/entity/Entity;)V w
	ridingOffset (Lnet/minecraft/world/entity/Entity;)F l
	setBoundOrigin (Lnet/minecraft/core/BlockPos;)V i
	setIsCharging (Z)V w
	setLimitedLife (I)V b
	setOwner (Lnet/minecraft/world/entity/Mob;)V a
	setVexFlag (IZ)V a
	tick ()V l
net/minecraft/world/entity/monster/Vex$VexChargeAttackGoal cdd$a
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z T_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Vex$VexCopyOwnerTargetGoal cdd$b
	copyOwnerTargeting b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Vex$VexMoveControl cdd$c
	tick ()V a
net/minecraft/world/entity/monster/Vex$VexRandomMoveGoal cdd$d
	canContinueToUse ()Z b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Vindicator cde
	DOOR_BREAKING_PREDICATE e
	TAG_JOHNNY b
	isJohnny bT
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; w
	customServerAiStep ()V Z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; u
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; af_
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z s
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	setCustomName (Lnet/minecraft/network/chat/Component;)V b
net/minecraft/world/entity/monster/Vindicator$VindicatorBreakDoorGoal cde$a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Vindicator$VindicatorJohnnyAttackGoal cde$b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Witch cdf
	DATA_USING_ITEM bT
	SPEED_MODIFIER_DRINKING e
	SPEED_MODIFIER_DRINKING_UUID b
	attackPlayersGoal bW
	healRaidersGoal bV
	usingTime bU
	aiStep ()V d_
	applyRaidBuffs (IZ)V a
	canBeLeader ()Z gf
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; w
	defineSynchedData ()V c_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; af_
	getDamageAfterMagicAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F e
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V b
	isDrinkingPotion ()Z u
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	registerGoals ()V B
	setUsingItem (Z)V y
net/minecraft/world/entity/monster/WitherSkeleton cdg
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; w
	populateDefaultEquipmentEnchantments (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	registerGoals ()V B
	ridingOffset (Lnet/minecraft/world/entity/Entity;)F l
net/minecraft/world/entity/monster/Zoglin cdh
	ATTACK_DAMAGE bV
	ATTACK_DURATION bZ
	ATTACK_INTERVAL bX
	ATTACK_KNOCKBACK bT
	BABY_ATTACK_DAMAGE bW
	BABY_ATTACK_INTERVAL bY
	DATA_BABY_ID d
	KNOCKBACK_RESISTANCE bU
	MAX_HEALTH e
	MEMORY_TYPES c
	MOVEMENT_SPEED_WHEN_FIGHTING ca
	SENSOR_TYPES b
	SPEED_MULTIPLIER_WHEN_IDLING cb
	attackAnimationRemainingTicks cc
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dP
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	findNearestValidAttackTarget ()Ljava/util/Optional; gg
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getAttackAnimationRemainingTicks ()I ge
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dO
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMobType ()Lnet/minecraft/world/entity/MobType; eS
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	handleEntityEvent (B)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V a
	initFightActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	isAdult ()Z w
	isBaby ()Z o_
	isTargetable (Lnet/minecraft/world/entity/LivingEntity;)Z j
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playAngrySound ()V gf
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	sendDebugPackets ()V Y
	setAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)V k
	setBaby (Z)V a
	updateActivity ()V A
net/minecraft/world/entity/monster/Zombie cdi
	BABY_EYE_HEIGHT_ADJUSTMENT bW
	BREAK_DOOR_CHANCE bZ
	DATA_BABY_ID d
	DATA_DROWNED_CONVERSION_ID bY
	DATA_SPECIAL_TYPE_ID bX
	DOOR_BREAKING_PREDICATE ca
	REINFORCEMENT_ATTEMPTS bT
	REINFORCEMENT_RANGE_MAX bU
	REINFORCEMENT_RANGE_MIN bV
	SPEED_MODIFIER_BABY c
	SPEED_MODIFIER_BABY_UUID b
	ZOMBIE_LEADER_CHANCE e
	breakDoorGoal cb
	canBreakDoors cc
	conversionTime ce
	inWaterTime cd
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V u
	aiStep ()V d_
	canBreakDoors ()Z gm
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z j
	convertToZombieType (Lnet/minecraft/world/entity/EntityType;)V b
	convertsInWater ()Z gf
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gi
	defineSynchedData ()V c_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	doUnderWaterConversion ()V gh
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getExperienceReward ()I ee
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMobType ()Lnet/minecraft/world/entity/MobType; eS
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getSkull ()Lnet/minecraft/world/item/ItemStack; ge
	getSpawnAsBabyOdds (Lnet/minecraft/util/RandomSource;)Z a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; A
	handleAttributes (F)V E
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isBaby ()Z o_
	isSunSensitive ()Z ae_
	isUnderWaterConverting ()Z gl
	killedEntity (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	randomizeReinforcementsChance ()V gn
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	ridingOffset (Lnet/minecraft/world/entity/Entity;)F l
	setBaby (Z)V a
	setCanBreakDoors (Z)V x
	startUnderWaterConversion (I)V b
	supportsBreakDoorGoal ()Z w
	tick ()V l
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z k
net/minecraft/world/entity/monster/Zombie$ZombieAttackTurtleEggGoal cdi$a
	acceptedDistance ()D i
	playBreakSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	playDestroyProgressSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/entity/monster/Zombie$ZombieGroupData cdi$b
	canSpawnJockey b
	isBaby a
net/minecraft/world/entity/monster/ZombieVillager cdj
	DATA_CONVERTING_ID c
	DATA_VILLAGER_DATA d
	LOGGER b
	MAX_SPECIAL_BLOCKS_COUNT bZ
	SPECIAL_BLOCK_RADIUS ca
	VILLAGER_CONVERSION_WAIT_MAX bY
	VILLAGER_CONVERSION_WAIT_MIN bX
	conversionStarter cc
	gossips cd
	tradeOffers ce
	villagerConversionTime cb
	villagerXp cf
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	convertsInWater ()Z gf
	defineSynchedData ()V c_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getConversionProgress ()I gr
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getSkull ()Lnet/minecraft/world/item/ItemStack; ge
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; A
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; gp
	getVillagerXp ()I gq
	getVoicePitch ()F eX
	handleEntityEvent (B)V b
	isConverting ()Z go
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	setGossips (Lnet/minecraft/nbt/Tag;)V a
	setTradeOffers (Lnet/minecraft/nbt/CompoundTag;)V c
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
	setVillagerXp (I)V b
	startConverting (Ljava/util/UUID;I)V a
	tick ()V l
net/minecraft/world/entity/monster/ZombifiedPiglin cdk
	ALERT_INTERVAL cd
	ALERT_RANGE_Y cc
	FIRST_ANGER_SOUND_DELAY bX
	PERSISTENT_ANGER_TIME bZ
	SPEED_MODIFIER_ATTACKING d
	SPEED_MODIFIER_ATTACKING_UUID c
	ZOMBIFIED_PIGLIN_BABY_EYE_HEIGHT_ADJUSTMENT cg
	ZOMBIFIED_PIGLIN_EYE_HEIGHT cf
	persistentAngerTarget cb
	playFirstAngerSoundIn bY
	remainingPersistentAngerTime ca
	ticksUntilNextAlert ce
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V u
	alertOthers ()V gr
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkZombifiedPiglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	convertsInWater ()Z gf
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; go
	customServerAiStep ()V Z
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getSkull ()Lnet/minecraft/world/item/ItemStack; ge
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	isPreventingPlayerRest (Lnet/minecraft/world/entity/player/Player;)Z f
	maybeAlertOthers ()V gq
	maybePlayFirstAngerSound ()V gp
	playAngerSound ()V gs
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	randomizeReinforcementsChance ()V gn
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	startPersistentAngerTimer ()V c
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z k
net/minecraft/world/entity/monster/breeze/Breeze cdl
	FALL_DISTANCE_SOUND_TRIGGER_THRESHOLD ca
	IDLE_PARTICLES_AMOUNT bV
	JUMP_CIRCLE_DISTANCE_Y bZ
	JUMP_DUST_PARTICLES_AMOUNT bW
	JUMP_TRAIL_DURATION_TICKS bY
	JUMP_TRAIL_PARTICLES_AMOUNT bX
	SLIDE_PARTICLES_AMOUNT bU
	idle b
	inhale bT
	jumpTrailStartedTick cb
	longJump d
	shoot e
	slide c
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dP
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	customServerAiStep ()V Z
	emitGroundParticles (I)V b
	emitJumpDustParticles ()Lnet/minecraft/world/entity/monster/breeze/Breeze; A
	emitJumpTrailParticles ()V ge
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dO
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getFluidJumpThreshold ()D df
	getHeadRotSpeed ()I fH
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxHeadYRot ()I ab
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aW
	getSnoutYPosition ()D gf
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; db
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playAmbientSound ()V R
	resetAnimations ()V gg
	resetJumpTrail ()Lnet/minecraft/world/entity/monster/breeze/Breeze; w
	sendDebugPackets ()V Y
	tick ()V l
	withinInnerCircleRange (Lnet/minecraft/world/phys/Vec3;)Z l
	withinMiddleCircleRange (Lnet/minecraft/world/phys/Vec3;)Z k
	withinOuterCircleRange (Lnet/minecraft/world/phys/Vec3;)Z j
net/minecraft/world/entity/monster/breeze/BreezeAi cdm
	JUMP_CIRCLE_INNER_RADIUS b
	JUMP_CIRCLE_MIDDLE_RADIUS c
	JUMP_CIRCLE_OUTER_RADIUS d
	MEMORY_TYPES f
	SENSOR_TYPES e
	SPEED_MULTIPLIER_WHEN_SLIDING a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initFightActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
net/minecraft/world/entity/monster/breeze/BreezeAi$SlideToTargetSink cdm$a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
net/minecraft/world/entity/monster/breeze/LongJump cdn
	ALLOWED_ANGLES i
	INHALING_DURATION_TICKS g
	JUMP_COOLDOWN_TICKS e
	JUMP_COOLDOWN_WHEN_HURT_TICKS f
	MAX_JUMP_VELOCITY h
	MAX_LINE_OF_SIGHT_TEST_RANGE d
	REQUIRED_AIR_BLOCKS_ABOVE c
	calculateOptimalJumpVector (Lnet/minecraft/world/entity/monster/breeze/Breeze;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/phys/Vec3;)Ljava/util/Optional; a
	canJumpFromCurrentPosition (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/breeze/Breeze;)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/breeze/Breeze;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/breeze/Breeze;)Z a
	finishedInhaling (Lnet/minecraft/world/entity/monster/breeze/Breeze;)Z a
	finishedJumping (Lnet/minecraft/world/entity/monster/breeze/Breeze;)Z b
	hasLineOfSight (Lnet/minecraft/world/entity/monster/breeze/Breeze;Lnet/minecraft/world/phys/Vec3;)Z a
	outOfAggroRange (Lnet/minecraft/world/entity/monster/breeze/Breeze;Lnet/minecraft/world/entity/LivingEntity;)Z a
	randomPointBehindTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/phys/Vec3; a
	snapToSurface (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/core/BlockPos; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/breeze/Breeze;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/breeze/Breeze;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/breeze/Breeze;J)V c
	tooCloseForJump (Lnet/minecraft/world/entity/monster/breeze/Breeze;Lnet/minecraft/world/entity/LivingEntity;)Z b
net/minecraft/world/entity/monster/breeze/Shoot cdo
	ATTACK_RANGE_MAX_SQRT d
	ATTACK_RANGE_MIN_SQRT c
	PROJECTILE_MOVEMENT_SCALE g
	SHOOT_COOLDOWN_TICKS j
	SHOOT_INITIAL_DELAY_TICKS h
	SHOOT_RECOVER_DELAY_TICKS i
	UNCERTAINTY_BASE e
	UNCERTAINTY_MULTIPLIER f
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/breeze/Breeze;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/breeze/Breeze;)Z a
	isFacingTarget (Lnet/minecraft/world/entity/monster/breeze/Breeze;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isTargetWithinRange (Lnet/minecraft/world/entity/monster/breeze/Breeze;Lnet/minecraft/world/entity/LivingEntity;)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/breeze/Breeze;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/breeze/Breeze;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/breeze/Breeze;J)V d
net/minecraft/world/entity/monster/breeze/ShootWhenStuck cdp
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/breeze/Breeze;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/breeze/Breeze;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/breeze/Breeze;J)V b
net/minecraft/world/entity/monster/breeze/Slide cdq
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/breeze/Breeze;)Z a
	randomPointInMiddleCircle (Lnet/minecraft/world/entity/monster/breeze/Breeze;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/breeze/Breeze;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/breeze/Breeze;J)V b
net/minecraft/world/entity/monster/hoglin/Hoglin cds
	ATTACK_DAMAGE cc
	ATTACK_KNOCKBACK ca
	BABY_ATTACK_DAMAGE cd
	CONVERSION_TIME ce
	DATA_IMMUNE_TO_ZOMBIFICATION bW
	KNOCKBACK_RESISTANCE cb
	MAX_HEALTH bY
	MEMORY_TYPES bU
	MOVEMENT_SPEED_WHEN_FIGHTING bZ
	PROBABILITY_OF_SPAWNING_AS_BABY bX
	SENSOR_TYPES bT
	attackAnimationRemainingTicks cf
	cannotBeHunted ch
	timeInOverworld cg
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V m
	aiStep ()V d_
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dP
	canBeHunted ()Z gk
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canFallInLove ()Z gf
	checkHoglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getAttackAnimationRemainingTicks ()I ge
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dO
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getExperienceReward ()I ee
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; db
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aN
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aO
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleEntityEvent (B)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAdult ()Z w
	isConverting ()Z A
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isImmuneToZombification ()Z gl
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playSoundEvent (Lnet/minecraft/sounds/SoundEvent;)V b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	sendDebugPackets ()V Y
	setCannotBeHunted (Z)V x
	setImmuneToZombification (Z)V w
	shouldDropExperience ()Z ec
net/minecraft/world/entity/monster/hoglin/HoglinAi cdt
	ADULT_FOLLOW_RANGE j
	ATTACK_DURATION d
	ATTACK_INTERVAL g
	BABY_ATTACK_INTERVAL h
	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_IDLING e
	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_RETREATING f
	REPELLENT_DETECTION_RANGE_HORIZONTAL a
	REPELLENT_DETECTION_RANGE_VERTICAL b
	REPELLENT_PACIFY_TIME i
	RETREAT_DURATION c
	SPEED_MULTIPLIER_WHEN_AVOIDING_REPELLENT k
	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT o
	SPEED_MULTIPLIER_WHEN_IDLING n
	SPEED_MULTIPLIER_WHEN_MAKING_LOVE m
	SPEED_MULTIPLIER_WHEN_RETREATING l
	broadcastAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V h
	broadcastRetreat (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V c
	createIdleMovementBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; a
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; d
	getSoundForActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/sounds/SoundEvent; a
	getSoundForCurrentActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; b
	getVisibleAdultHoglins (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/List; g
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initFightActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initRetreatActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	isBreeding (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z i
	isNearRepellent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z h
	isPacified (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z c
	isPosNearNearestRepellent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/core/BlockPos;)Z a
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeRetaliate (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V f
	onHitTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V a
	piglinsOutnumberHoglins (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z f
	retreatFromNearestTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V d
	setAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V g
	setAttackTargetIfCloserThanCurrent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V i
	setAvoidTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V e
	updateActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)V a
	wantsToStopFleeing (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z e
	wasHurtBy (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/monster/hoglin/HoglinBase cdu
	ATTACK_ANIMATION_DURATION m_
	getAttackAnimationRemainingTicks ()I ge
	hurtAndThrowTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	throwTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/monster/piglin/AbstractPiglin cdx
	CONVERSION_TIME c
	DATA_IMMUNE_TO_ZOMBIFICATION b
	PIGLIN_EYE_HEIGHT d
	timeInOverworld e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyOpenDoorsAbility ()V A
	canHunt ()Z u
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getArmPose ()Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; gg
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; q
	isAdult ()Z gf
	isConverting ()Z ge
	isHoldingMeleeWeapon ()Z gh
	isImmuneToZombification ()Z w
	playAmbientSound ()V R
	playConvertedSound ()V gi
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	ridingOffset (Lnet/minecraft/world/entity/Entity;)F l
	sendDebugPackets ()V Y
	setImmuneToZombification (Z)V w
net/minecraft/world/entity/monster/piglin/Piglin cdy
	ATTACK_DAMAGE cc
	BABY_EYE_HEIGHT_ADJUSTMENT ch
	CHANCE_OF_WEARING_EACH_ARMOUR_ITEM ce
	CROSSBOW_POWER cd
	DATA_BABY_ID bV
	DATA_IS_CHARGING_CROSSBOW bW
	DATA_IS_DANCING bX
	MAX_HEALTH ca
	MAX_PASSENGERS_ON_ONE_HOGLIN cf
	MEMORY_TYPES bU
	MOVEMENT_SPEED_WHEN_FIGHTING cb
	PROBABILITY_OF_SPAWNING_AS_BABY cg
	PROBABILITY_OF_SPAWNING_WITH_CROSSBOW_INSTEAD_OF_SWORD ci
	SENSOR_TYPES bT
	SPEED_MODIFIER_BABY bZ
	SPEED_MODIFIER_BABY_UUID bY
	cannotHunt ck
	inventory cj
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addToInventory (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; l
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dP
	canAddToInventory (Lnet/minecraft/world/item/ItemStack;)Z m
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	canHunt ()Z u
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;)Z p
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	checkPiglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gl
	createSpawnWeapon ()Lnet/minecraft/world/item/ItemStack; gn
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getArmPose ()Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; gg
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dO
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getExperienceReward ()I ee
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getInventory ()Lnet/minecraft/world/SimpleContainer; A
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTopPassenger (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/entity/Entity; b
	holdInMainHand (Lnet/minecraft/world/item/ItemStack;)V n
	holdInOffHand (Lnet/minecraft/world/item/ItemStack;)V o
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isBaby ()Z o_
	isChargingCrossbow ()Z go
	isDancing ()Z gm
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeWearArmor (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/util/RandomSource;)V a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onCrossbowAttackPerformed ()V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playConvertedSound ()V gi
	playSoundEvent (Lnet/minecraft/sounds/SoundEvent;)V b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	setBaby (Z)V a
	setCannotHunt (Z)V y
	setChargingCrossbow (Z)V b
	setDancing (Z)V x
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
	shouldDespawnInPeaceful ()Z X
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z k
net/minecraft/world/entity/monster/piglin/PiglinAi cdz
	ADMIRE_DURATION g
	ANGER_DURATION f
	AVOID_ZOMBIFIED_DURATION A
	BABY_AVOID_NEMESIS_DURATION B
	BABY_FLEE_DURATION_AFTER_GETTING_HIT l
	BARTERING_ITEM c
	CELEBRATION_TIME k
	DESIRED_DISTANCE_FROM_ENTITY_WHEN_AVOIDING t
	DESIRED_DISTANCE_FROM_ZOMBIFIED z
	EAT_COOLDOWN s
	HIT_BY_PLAYER_MEMORY_TIMEOUT m
	HOW_LONG_TIME_TO_DISABLE_ADMIRE_WALKING_IF_CANT_REACH_ITEM j
	INTERACTION_RANGE w
	MAX_DISTANCE_TO_WALK_TO_ITEM h
	MAX_LOOK_DIST u
	MAX_LOOK_DIST_FOR_PLAYER_HOLDING_LOVED_ITEM v
	MAX_TIME_TO_WALK_TO_ITEM i
	MAX_WALK_DISTANCE_TO_START_RIDING n
	MELEE_ATTACK_COOLDOWN r
	MIN_DESIRED_DIST_FROM_TARGET_WHEN_HOLDING_CROSSBOW x
	PLAYER_ANGER_RANGE e
	PROBABILITY_OF_CELEBRATION_DANCE C
	REPELLENT_DETECTION_RANGE_HORIZONTAL a
	REPELLENT_DETECTION_RANGE_VERTICAL b
	RETREAT_DURATION q
	RIDE_DURATION p
	RIDE_START_INTERVAL o
	SPEED_MULTIPLIER_WHEN_AVOIDING D
	SPEED_MULTIPLIER_WHEN_DANCING I
	SPEED_MULTIPLIER_WHEN_GOING_TO_CELEBRATE_LOCATION H
	SPEED_MULTIPLIER_WHEN_GOING_TO_WANTED_ITEM G
	SPEED_MULTIPLIER_WHEN_IDLING J
	SPEED_MULTIPLIER_WHEN_MOUNTING F
	SPEED_MULTIPLIER_WHEN_RETREATING E
	SPEED_WHEN_STRAFING_BACK_FROM_TARGET y
	TIME_BETWEEN_HUNTS d
	admireGoldItem (Lnet/minecraft/world/entity/LivingEntity;)V d
	angerNearbyPiglins (Lnet/minecraft/world/entity/player/Player;Z)V a
	avoidRepellent ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; d
	avoidZombified ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; f
	babyAvoidNemesis ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; e
	babySometimesRideBabyHoglin ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; g
	broadcastAngerTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V b
	broadcastRetreat (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V c
	broadcastUniversalAnger (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)V a
	canAdmire (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)Z b
	cancelAdmiring (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V b
	createIdleLookBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; b
	createIdleMovementBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; c
	createLookBehaviors ()Lcom/google/common/collect/ImmutableList; a
	doesntSeeAnyPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z f
	dontKillAnyMoreHoglinsForAWhile (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)V c
	eat (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V o
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; i
	getAdultPiglins (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/List; e
	getAngerTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/Optional; f
	getAvoidTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; e
	getBarterResponseItems (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/List; g
	getNearestVisibleTargetablePlayer (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/Optional; b
	getRandomNearbyPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Lnet/minecraft/world/phys/Vec3; p
	getSoundForActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/sounds/SoundEvent; a
	getSoundForCurrentActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; c
	getVisibleAdultPiglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/List; d
	hasCrossbow (Lnet/minecraft/world/entity/LivingEntity;)Z c
	hasEatenRecently (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z q
	hoglinsOutnumberPiglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z n
	holdInOffhand (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)V c
	initAdmireItemActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initCelebrateActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V a
	initFightActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initMemories (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/util/RandomSource;)V a
	initRetreatActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	initRideHoglinActivity (Lnet/minecraft/world/entity/ai/Brain;)V f
	isAdmiringDisabled (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z t
	isAdmiringItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z r
	isBabyRidingBaby (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z f
	isBarterCurrency (Lnet/minecraft/world/item/ItemStack;)Z b
	isFood (Lnet/minecraft/world/item/ItemStack;)Z c
	isHoldingItemInOffHand (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z u
	isIdle (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Z d
	isLovedItem (Lnet/minecraft/world/item/ItemStack;)Z a
	isNearAvoidTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z j
	isNearRepellent (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z s
	isNearZombified (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z h
	isNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)Z b
	isNotHoldingLovedItemInOffHand (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z v
	isPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isWearingGold (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isZombified (Lnet/minecraft/world/entity/EntityType;)Z a
	makeBrain (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeRetaliate (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V a
	mobInteract (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	pickUpItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/item/ItemEntity;)V a
	piglinsEqualOrOutnumberHoglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z m
	putInInventory (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)V d
	removeOneItemFromItemEntity (Lnet/minecraft/world/entity/item/ItemEntity;)Lnet/minecraft/world/item/ItemStack; a
	retreatFromNearestTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V d
	seesPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z e
	setAngerTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V c
	setAngerTargetIfCloserThanCurrent (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V e
	setAngerTargetToNearestTargetablePlayerIfFound (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V d
	setAvoidTargetAndDontHuntForAWhile (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V e
	stopHoldingOffHandItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;Z)V a
	stopWalking (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V k
	throwItems (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;)V a
	throwItemsTowardPlayer (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/player/Player;Ljava/util/List;)V a
	throwItemsTowardPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;Lnet/minecraft/world/phys/Vec3;)V a
	throwItemsTowardRandomPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;)V b
	updateActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V a
	wantsToDance (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	wantsToPickup (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)Z a
	wantsToStopFleeing (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z l
	wantsToStopRiding (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/Entity;)Z a
	wasHurtBy (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V a
	wasHurtRecently (Lnet/minecraft/world/entity/LivingEntity;)Z g
net/minecraft/world/entity/monster/piglin/PiglinArmPose cea
	$VALUES g
	ADMIRING_ITEM d
	ATTACKING_WITH_MELEE_WEAPON a
	CROSSBOW_CHARGE c
	CROSSBOW_HOLD b
	DANCING e
	DEFAULT f
	$values ()[Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; a
net/minecraft/world/entity/monster/piglin/PiglinBrute ceb
	ATTACK_DAMAGE bX
	MAX_HEALTH bV
	MEMORY_TYPES bU
	MOVEMENT_SPEED_WHEN_FIGHTING bW
	SENSOR_TYPES bT
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dP
	canHunt ()Z u
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; A
	customServerAiStep ()V Z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getArmPose ()Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; gg
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dO
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	playAngrySound ()V gl
	playConvertedSound ()V gi
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z k
net/minecraft/world/entity/monster/piglin/PiglinBruteAi cec
	ACTIVITY_SOUND_LIKELIHOOD_PER_TICK c
	ANGER_DURATION a
	HOME_CLOSE_ENOUGH_DISTANCE h
	HOME_STROLL_AROUND_DISTANCE j
	HOME_TOO_FAR_DISTANCE i
	INTERACTION_RANGE e
	MAX_LOOK_DIST d
	MELEE_ATTACK_COOLDOWN b
	SPEED_MULTIPLIER_WHEN_IDLING g
	TARGETING_RANGE f
	createIdleLookBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; a
	createIdleMovementBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; b
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/Optional; a
	getTargetIfWithinRange (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; a
	initCoreActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)V b
	initFightActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)V d
	initIdleActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)V c
	initMemories (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V a
	isNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)Z a
	makeBrain (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	maybePlayActivitySound (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V c
	playActivitySound (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V d
	setAngerTarget (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/LivingEntity;)V b
	updateActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V b
	wasHurtBy (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/LivingEntity;)V a
net/minecraft/world/entity/monster/piglin/RememberIfHoglinWasKilled ced
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/monster/piglin/StartAdmiringItemIfSeen cee
	create (I)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/monster/piglin/StartHuntingHoglin cef
	create ()Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	hasHuntedRecently (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Z a
net/minecraft/world/entity/monster/piglin/StopAdmiringIfItemTooFarAway ceg
	create (I)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/monster/piglin/StopAdmiringIfTiredOfTryingToReachItem ceh
	create (II)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/monster/piglin/StopHoldingItemIfNoLongerAdmiring cei
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/monster/warden/AngerLevel cek
	$VALUES h
	AGITATED b
	ANGRY c
	CALM a
	SORTED_LEVELS d
	ambientSound f
	listeningSound g
	minimumAnger e
	$values ()[Lnet/minecraft/world/entity/monster/warden/AngerLevel; e
	byAnger (I)Lnet/minecraft/world/entity/monster/warden/AngerLevel; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; b
	getListeningSound ()Lnet/minecraft/sounds/SoundEvent; c
	getMinimumAnger ()I a
	isAngry ()Z d
net/minecraft/world/entity/monster/warden/AngerManagement cel
	CONVERSION_DELAY a
	DEFAULT_ANGER_DECREASE f
	MAX_ANGER b
	SUSPECT_ANGER_PAIR i
	angerBySuspect d
	angerByUuid e
	conversionDelay g
	filter j
	highestAnger h
	suspectSorter k
	suspects c
	clearAnger (Lnet/minecraft/world/entity/Entity;)V a
	codec (Ljava/util/function/Predicate;)Lcom/mojang/serialization/Codec; a
	convertFromUuids (Lnet/minecraft/server/level/ServerLevel;)V a
	createUuidAngerPairs ()Ljava/util/List; b
	getActiveAnger (Lnet/minecraft/world/entity/Entity;)I b
	getActiveEntity ()Ljava/util/Optional; a
	getTopSuspect ()Lnet/minecraft/world/entity/Entity; d
	increaseAnger (Lnet/minecraft/world/entity/Entity;I)I a
	sortAndUpdateHighestAnger ()V c
	tick (Lnet/minecraft/server/level/ServerLevel;Ljava/util/function/Predicate;)V a
net/minecraft/world/entity/monster/warden/AngerManagement$Sorter cel$a
	angerManagement a
	angerManagement ()Lnet/minecraft/world/entity/monster/warden/AngerManagement; a
	compare (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)I a
net/minecraft/world/entity/monster/warden/Warden cem
	ANGERMANAGEMENT_TICK_DELAY ci
	ATTACK_DAMAGE cc
	ATTACK_KNOCKBACK cb
	CLIENT_ANGER_LEVEL cd
	DARKNESS_DISPLAY_LIMIT ce
	DARKNESS_DURATION cf
	DARKNESS_INTERVAL ch
	DARKNESS_RADIUS cg
	DEFAULT_ANGER cj
	DIGGING_PARTICLES_AMOUNT co
	DIGGING_PARTICLES_DURATION cp
	DIGGING_PARTICLES_OFFSET cq
	KNOCKBACK_RESISTANCE ca
	LOGGER bV
	MAX_HEALTH bY
	MOVEMENT_SPEED_WHEN_FIGHTING bZ
	ON_HURT_ANGER_BOOST cl
	PROJECTILE_ANGER ck
	PROJECTILE_ANGER_DISTANCE cr
	RECENT_PROJECTILE_TICK_THRESHOLD cm
	TIME_TO_USE_MELEE_UNTIL_SONIC_BOOM bX
	TOUCH_COOLDOWN_TICKS cn
	VIBRATION_COOLDOWN_TICKS bW
	angerManagement cA
	attackAnimationState bT
	diggingAnimationState e
	dynamicGameEventListener cx
	emergeAnimationState d
	heartAnimation cu
	heartAnimationO cw
	roarAnimationState b
	sniffAnimationState c
	sonicBoomAnimationState bU
	tendrilAnimation cs
	tendrilAnimationO ct
	vibrationData cz
	vibrationUser cy
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyDarknessAround (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;I)V a
	canDisableShield ()Z fG
	canRide (Lnet/minecraft/world/entity/Entity;)Z o
	canTargetEntity (Lnet/minecraft/world/entity/Entity;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	clearAnger (Lnet/minecraft/world/entity/Entity;)V b
	clientDiggingParticles (Lnet/minecraft/world/entity/AnimationState;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; u
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	customServerAiStep ()V Z
	dampensVibrations ()Z aX
	defineSynchedData ()V c_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z C
	doPush (Lnet/minecraft/world/entity/Entity;)V D
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getActiveAnger ()I go
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; dj
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getAngerLevel ()Lnet/minecraft/world/entity/monster/warden/AngerLevel; A
	getAngerManagement ()Lnet/minecraft/world/entity/monster/warden/AngerManagement; gf
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dO
	getClientAngerLevel ()I w
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getEntityAngryAt ()Ljava/util/Optional; ge
	getHeartAnimation (F)F F
	getHeartBeatDelay ()I gm
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getSoundVolume ()F eW
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; q
	getTendrilAnimation (F)F E
	getVibrationData ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data; gg
	getVibrationUser ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User; gh
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleEntityEvent (B)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	ignoreExplosion (Lnet/minecraft/world/level/Explosion;)Z a
	increaseAngerAt (Lnet/minecraft/world/entity/Entity;)V c
	increaseAngerAt (Lnet/minecraft/world/entity/Entity;IZ)V a
	isDiggingOrEmerging ()Z gi
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isPushable ()Z bu
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	nextStep ()F aM
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playListeningSound ()V gn
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	removeWhenFarAway (D)Z h
	sendDebugPackets ()V Y
	setAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)V j
	syncClientAngerLevel ()V gl
	tick ()V l
	updateDynamicGameEventListener (Ljava/util/function/BiConsumer;)V a
net/minecraft/world/entity/monster/warden/Warden$VibrationUser cem$a
	GAME_EVENT_LISTENER_RANGE b
	positionSource c
	canReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)Z a
	canTriggerAvoidVibration ()Z d
	getListenableEvents ()Lnet/minecraft/tags/TagKey; c
	getListenerRadius ()I a
	getPositionSource ()Lnet/minecraft/world/level/gameevent/PositionSource; b
	onReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V a
net/minecraft/world/entity/monster/warden/WardenAi cen
	DIGGING_COOLDOWN c
	DIGGING_DURATION h
	DIG_COOLDOWN_SETTER m
	DISTURBANCE_LOCATION_EXPIRY_TIME j
	EMERGE_DURATION a
	MELEE_ATTACK_COOLDOWN g
	MEMORY_TYPES l
	ROAR_DURATION b
	SENSOR_TYPES k
	SNIFFING_DURATION i
	SPEED_MULTIPLIER_WHEN_FIGHTING f
	SPEED_MULTIPLIER_WHEN_IDLING d
	SPEED_MULTIPLIER_WHEN_INVESTIGATING e
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V a
	initDiggingActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initEmergeActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initFightActivity (Lnet/minecraft/world/entity/monster/warden/Warden;Lnet/minecraft/world/entity/ai/Brain;)V a
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initInvestigateActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	initRoarActivity (Lnet/minecraft/world/entity/ai/Brain;)V g
	initSniffingActivity (Lnet/minecraft/world/entity/ai/Brain;)V f
	isTarget (Lnet/minecraft/world/entity/monster/warden/Warden;Lnet/minecraft/world/entity/LivingEntity;)Z a
	makeBrain (Lnet/minecraft/world/entity/monster/warden/Warden;Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	onTargetInvalid (Lnet/minecraft/world/entity/monster/warden/Warden;Lnet/minecraft/world/entity/LivingEntity;)V b
	setDigCooldown (Lnet/minecraft/world/entity/LivingEntity;)V a
	setDisturbanceLocation (Lnet/minecraft/world/entity/monster/warden/Warden;Lnet/minecraft/core/BlockPos;)V a
	updateActivity (Lnet/minecraft/world/entity/monster/warden/Warden;)V a
net/minecraft/world/entity/monster/warden/WardenSpawnTracker ceo
	CODEC a
	DECREASE_WARNING_LEVEL_EVERY_INTERVAL e
	MAX_WARNING_LEVEL b
	PLAYER_SEARCH_RADIUS c
	WARNING_CHECK_DIAMETER d
	WARNING_LEVEL_INCREASE_COOLDOWN f
	cooldownTicks i
	ticksSinceLastWarning g
	warningLevel h
	copyData (Lnet/minecraft/world/entity/monster/warden/WardenSpawnTracker;)V a
	decreaseWarningLevel ()V f
	getNearbyPlayers (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Ljava/util/List; b
	getWarningLevel ()I c
	hasNearbyWarden (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	increaseWarningLevel ()V e
	onCooldown ()Z d
	reset ()V b
	setWarningLevel (I)V a
	tick ()V a
	tryWarn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerPlayer;)Ljava/util/OptionalInt; a
net/minecraft/world/entity/npc/AbstractVillager ceq
	DATA_UNHAPPY_COUNTER bV
	VILLAGER_INVENTORY_SIZE bW
	VILLAGER_SLOT_OFFSET bT
	inventory bY
	offers bU
	tradingPlayer bX
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addOffersFromItemListings (Lnet/minecraft/world/item/trading/MerchantOffers;[Lnet/minecraft/world/entity/npc/VillagerTrades$ItemListing;I)V a
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	defineSynchedData ()V c_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getInventory ()Lnet/minecraft/world/SimpleContainer; A
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; gi
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; gg
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; q
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTradeUpdatedSound (Z)Lnet/minecraft/sounds/SoundEvent; w
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; ge
	getUnhappyCounter ()I u
	getVillagerXp ()I w
	isClientSide ()Z gm
	isTrading ()Z gf
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V l
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V t
	playCelebrateSound ()V gj
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	setUnhappyCounter (I)V s
	showProgressBar ()Z gh
	stopTrading ()V gk
	updateTrades ()V gl
net/minecraft/world/entity/npc/CatSpawner cer
	TICK_DELAY a
	nextTick b
	spawnCat (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)I a
	spawnInHut (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)I b
	spawnInVillage (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)I a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/entity/npc/ClientSideMerchant ces
	offers b
	source a
	xp c
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; gi
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; gg
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; ge
	getVillagerXp ()I w
	isClientSide ()Z gm
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V l
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V t
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	showProgressBar ()Z gh
net/minecraft/world/entity/npc/InventoryCarrier cet
	TAG_INVENTORY d_
	getInventory ()Lnet/minecraft/world/SimpleContainer; A
	pickUpItem (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/npc/InventoryCarrier;Lnet/minecraft/world/entity/item/ItemEntity;)V a
	readInventoryFromTag (Lnet/minecraft/nbt/CompoundTag;)V c
	writeInventoryToTag (Lnet/minecraft/nbt/CompoundTag;)V a_
net/minecraft/world/entity/npc/Npc ceu
net/minecraft/world/entity/npc/Villager cev
	BREEDING_FOOD_THRESHOLD bV
	DATA_VILLAGER_DATA ca
	FOOD_POINTS bW
	GOSSIP_COOLDOWN ce
	GOSSIP_DECAY_INTERVAL cf
	HOW_FAR_AWAY_TO_TALK_TO_OTHER_VILLAGERS_ABOUT_GOLEMS ch
	HOW_MANY_VILLAGERS_NEED_TO_AGREE_TO_SPAWN_A_GOLEM ci
	LOGGER bZ
	MAX_GOSSIP_TOPICS cd
	MEMORY_TYPES cy
	POI_MEMORIES bY
	REPUTATION_CHANGE_PER_EVENT cg
	SENSOR_TYPES cz
	SPEED_MODIFIER bX
	TIME_SINCE_SLEEPING_FOR_GOLEM_SPAWNING cj
	TRADES_PER_LEVEL cb
	WANTED_ITEMS cc
	assignProfessionWhenSpawned cx
	chasing cn
	foodLevel co
	gossips cp
	increaseProfessionLevelOnUpdate cl
	lastGossipDecayTime cr
	lastGossipTime cq
	lastRestockCheckDayTime cw
	lastRestockGameTime ct
	lastTradedPlayer cm
	numberOfRestocksToday cu
	updateMerchantTimer ck
	villagerXp cs
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V m
	allowedToRestock ()Z gE
	assignProfessionWhenSpawned ()Z go
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dP
	canBreed ()Z Y_
	canRestock ()Z gq
	catchUpDemand ()V gF
	countFoodPointsInInventory ()I gM
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gn
	customServerAiStep ()V Z
	defineSynchedData ()V c_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	digestFood (I)V v
	eatAndDigestFood ()V gv
	eatUntilFull ()V gJ
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dO
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/npc/Villager; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getGossips ()Lnet/minecraft/world/entity/ai/gossip/GossipContainer; gz
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPlayerReputation (Lnet/minecraft/world/entity/player/Player;)I g
	getTypeName ()Lnet/minecraft/network/chat/Component; co
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; gp
	getVillagerXp ()I w
	golemSpawnConditionsMet (J)Z b
	gossip (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	handleEntityEvent (B)V b
	hasExcessFood ()Z gw
	hasFarmSeeds ()Z gy
	hungry ()Z gI
	increaseMerchantCareer ()V gL
	isChasing ()Z gu
	isClientSide ()Z gm
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeDecayGossip ()V gN
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	needsToRestock ()Z gD
	onReputationEventFrom (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playWorkSound ()V gt
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshBrain (Lnet/minecraft/server/level/ServerLevel;)V c
	registerBrainGoals (Lnet/minecraft/world/entity/ai/Brain;)V a
	releaseAllPois ()V gH
	releasePoi (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V a
	removeWhenFarAway (D)Z h
	resendOffersToTradingPlayer ()V gC
	resetNumberOfRestocks ()V gO
	resetSpecialPrices ()V gB
	restock ()V gr
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	sendDebugPackets ()V Y
	setChasing (Z)V x
	setGossips (Lnet/minecraft/nbt/Tag;)V a
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V b
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	setUnhappy ()V gA
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
	setVillagerXp (I)V u
	shouldIncreaseLevel ()Z gK
	shouldRestock ()Z gs
	spawnGolemIfNeeded (Lnet/minecraft/server/level/ServerLevel;JI)V a
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	startTrading (Lnet/minecraft/world/entity/player/Player;)V h
	stopSleeping ()V fE
	stopTrading ()V gk
	tellWitnessesThatIWasMurdered (Lnet/minecraft/world/entity/Entity;)V a
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V l
	updateDemand ()V gG
	updateSpecialPrices (Lnet/minecraft/world/entity/player/Player;)V i
	updateTrades ()V gl
	wantsMoreFood ()Z gx
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z k
	wantsToSpawnGolem (J)Z a
net/minecraft/world/entity/npc/VillagerData cew
	CODEC c
	MAX_VILLAGER_LEVEL b
	MIN_VILLAGER_LEVEL a
	NEXT_LEVEL_XP_THRESHOLDS d
	level g
	profession f
	type e
	canLevelUp (I)Z d
	getLevel ()I c
	getMaxXpPerLevel (I)I c
	getMinXpPerLevel (I)I b
	getProfession ()Lnet/minecraft/world/entity/npc/VillagerProfession; b
	getType ()Lnet/minecraft/world/entity/npc/VillagerType; a
	setLevel (I)Lnet/minecraft/world/entity/npc/VillagerData; a
	setProfession (Lnet/minecraft/world/entity/npc/VillagerProfession;)Lnet/minecraft/world/entity/npc/VillagerData; a
	setType (Lnet/minecraft/world/entity/npc/VillagerType;)Lnet/minecraft/world/entity/npc/VillagerData; a
net/minecraft/world/entity/npc/VillagerDataHolder cex
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/npc/VillagerType; a
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; gp
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/npc/VillagerType;)V a
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
net/minecraft/world/entity/npc/VillagerProfession cey
	ALL_ACQUIRABLE_JOBS a
	ARMORER c
	BUTCHER d
	CARTOGRAPHER e
	CLERIC f
	FARMER g
	FISHERMAN h
	FLETCHER i
	LEATHERWORKER j
	LIBRARIAN k
	MASON l
	NITWIT m
	NONE b
	SHEPHERD n
	TOOLSMITH o
	WEAPONSMITH p
	acquirableJobSite s
	heldJobSite r
	name q
	requestedItems t
	secondaryPoi u
	workSound v
	acquirableJobSite ()Ljava/util/function/Predicate; c
	heldJobSite ()Ljava/util/function/Predicate; b
	name ()Ljava/lang/String; a
	register (Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/entity/npc/VillagerProfession; a
	register (Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/entity/npc/VillagerProfession; a
	register (Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/entity/npc/VillagerProfession; a
	register (Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/entity/npc/VillagerProfession; a
	requestedItems ()Lcom/google/common/collect/ImmutableSet; d
	secondaryPoi ()Lcom/google/common/collect/ImmutableSet; e
	workSound ()Lnet/minecraft/sounds/SoundEvent; f
net/minecraft/world/entity/npc/VillagerTrades cez
	COMMON_ITEMS_SUPPLY f
	DEFAULT_SUPPLY e
	DESERT_MAP s
	EXPERIMENTAL_TRADES c
	EXPERIMENTAL_WANDERING_TRADER_TRADES d
	HIGH_TIER_PRICE_MULTIPLIER r
	JUNGLE_MAP x
	LOW_TIER_PRICE_MULTIPLIER q
	PLAINS_MAP u
	SAVANNA_MAP t
	SNOWY_MAP w
	SWAMP_MAP y
	TAIGA_MAP v
	TRADES a
	UNCOMMON_ITEMS_SUPPLY g
	WANDERING_TRADER_TRADES b
	XP_LEVEL_1_BUY i
	XP_LEVEL_1_SELL h
	XP_LEVEL_2_BUY k
	XP_LEVEL_2_SELL j
	XP_LEVEL_3_BUY m
	XP_LEVEL_3_SELL l
	XP_LEVEL_4_BUY o
	XP_LEVEL_4_SELL n
	XP_LEVEL_5_TRADE p
	commonBooks (I)Lnet/minecraft/world/entity/npc/VillagerTrades$ItemListing; a
	enchant (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/enchantment/Enchantment;I)Lnet/minecraft/world/item/ItemStack; a
	potion (Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/item/ItemStack; a
	specialBooks ()Lnet/minecraft/world/entity/npc/VillagerTrades$ItemListing; a
	toIntMap (Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; a
net/minecraft/world/entity/npc/VillagerTrades$DyedArmorForEmeralds cez$a
	item a
	maxUses c
	value b
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
	getRandomDye (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/DyeItem; a
net/minecraft/world/entity/npc/VillagerTrades$EmeraldForItems cez$b
	emeraldAmount d
	itemStack a
	maxUses b
	priceMultiplier e
	villagerXp c
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EmeraldsForVillagerTypeItem cez$c
	cost b
	maxUses c
	trades a
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EnchantBookForEmeralds cez$d
	maxLevel d
	minLevel c
	tradeableEnchantments b
	villagerXp a
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EnchantedItemForEmeralds cez$e
	baseEmeraldCost b
	itemStack a
	maxUses c
	priceMultiplier e
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$FailureItemListing cez$f
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemListing cez$g
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemsAndEmeraldsToItems cez$h
	emeraldCost b
	fromItem a
	maxUses d
	priceMultiplier f
	toItem c
	villagerXp e
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemsForEmeralds cez$i
	emeraldCost b
	itemStack a
	maxUses c
	priceMultiplier e
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$SuspiciousStewForEmerald cez$j
	effects a
	priceMultiplier c
	xp b
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$TippedArrowForItemsAndEmeralds cez$k
	emeraldCost c
	fromCount g
	fromItem f
	maxUses d
	priceMultiplier h
	toCount b
	toItem a
	villagerXp e
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$TreasureMapForEmeralds cez$l
	destination b
	destinationType d
	displayName c
	emeraldCost a
	maxUses e
	villagerXp f
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$TypeSpecificTrade cez$m
	trades a
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
	oneTradeInBiomes (Lnet/minecraft/world/entity/npc/VillagerTrades$ItemListing;[Lnet/minecraft/world/entity/npc/VillagerType;)Lnet/minecraft/world/entity/npc/VillagerTrades$TypeSpecificTrade; a
	trades ()Ljava/util/Map; a
net/minecraft/world/entity/npc/VillagerType cfa
	BY_BIOME i
	DESERT a
	JUNGLE b
	PLAINS c
	SAVANNA d
	SNOW e
	SWAMP f
	TAIGA g
	name h
	byBiome (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/npc/VillagerType; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/npc/VillagerType; a
net/minecraft/world/entity/npc/WanderingTrader cfb
	NUMBER_OF_TRADE_OFFERS bV
	despawnDelay bX
	wanderTarget bW
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	experimentalUpdateTrades ()V go
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; y
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getDespawnDelay ()I gn
	getDrinkingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; c
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; gi
	getTradeUpdatedSound (Z)Lnet/minecraft/sounds/SoundEvent; w
	getWanderTarget ()Lnet/minecraft/core/BlockPos; gr
	maybeDespawn ()V gp
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	removeWhenFarAway (D)Z h
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	setDespawnDelay (I)V u
	setWanderTarget (Lnet/minecraft/core/BlockPos;)V i
	showProgressBar ()Z gh
	updateTrades ()V gl
net/minecraft/world/entity/npc/WanderingTrader$WanderToPositionGoal cfb$a
	speedModifier c
	stopDistance b
	trader a
	canUse ()Z a
	isTooFarAway (Lnet/minecraft/core/BlockPos;D)Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/npc/WanderingTraderSpawner cfc
	DEFAULT_SPAWN_DELAY a
	DEFAULT_TICK_DELAY b
	MAX_SPAWN_CHANCE d
	MIN_SPAWN_CHANCE c
	NUMBER_OF_SPAWN_ATTEMPTS g
	SPAWN_CHANCE_INCREASE e
	SPAWN_ONE_IN_X_CHANCE f
	random h
	serverLevelData i
	spawnChance l
	spawnDelay k
	tickDelay j
	findSpawnPositionNear (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/core/BlockPos; a
	hasEnoughSpace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	spawn (Lnet/minecraft/server/level/ServerLevel;)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
	tryToSpawnLlamaFor (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/WanderingTrader;I)V a
net/minecraft/world/entity/player/Abilities cff
	flying b
	flyingSpeed f
	instabuild d
	invulnerable a
	mayBuild e
	mayfly c
	walkingSpeed g
	addSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	getFlyingSpeed ()F a
	getWalkingSpeed ()F b
	loadSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	setFlyingSpeed (F)V a
	setWalkingSpeed (F)V b
net/minecraft/world/entity/player/ChatVisiblity cfg
	$VALUES g
	BY_ID d
	FULL a
	HIDDEN c
	SYSTEM b
	id e
	key f
	$values ()[Lnet/minecraft/world/entity/player/ChatVisiblity; c
	byId (I)Lnet/minecraft/world/entity/player/ChatVisiblity; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/world/entity/player/Inventory cfh
	ALL_ARMOR_SLOTS g
	HELMET_SLOT_ONLY h
	INVENTORY_SIZE d
	NOT_FOUND_INDEX f
	POP_TIME_DURATION c
	SELECTION_SIZE n
	SLOT_OFFHAND e
	armor j
	compartments o
	items i
	offhand k
	player m
	selected l
	timesChanged p
	add (ILnet/minecraft/world/item/ItemStack;)Z c
	add (Lnet/minecraft/world/item/ItemStack;)Z e
	addResource (ILnet/minecraft/world/item/ItemStack;)I d
	addResource (Lnet/minecraft/world/item/ItemStack;)I i
	clearContent ()V a
	clearOrCountMatchingItems (Ljava/util/function/Predicate;ILnet/minecraft/world/Container;)I a
	contains (Lnet/minecraft/tags/TagKey;)Z a
	contains (Lnet/minecraft/world/item/ItemStack;)Z h
	dropAll ()V k
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	findSlotMatchingItem (Lnet/minecraft/world/item/ItemStack;)I b
	findSlotMatchingUnusedItem (Lnet/minecraft/world/item/ItemStack;)I c
	getArmor (I)Lnet/minecraft/world/item/ItemStack; e
	getContainerSize ()I b
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F a
	getFreeSlot ()I h
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getName ()Lnet/minecraft/network/chat/Component; ad
	getSelected ()Lnet/minecraft/world/item/ItemStack; f
	getSelectionSize ()I g
	getSlotWithRemainingSpace (Lnet/minecraft/world/item/ItemStack;)I d
	getSuitableHotbarSlot ()I i
	getTimesChanged ()I l
	hasRemainingSpaceForItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F[I)V a
	isEmpty ()Z ai_
	isHotbarSlot (I)Z d
	load (Lnet/minecraft/nbt/ListTag;)V b
	pickSlot (I)V c
	placeItemBackInInventory (Lnet/minecraft/world/item/ItemStack;)V f
	placeItemBackInInventory (Lnet/minecraft/world/item/ItemStack;Z)V a
	removeFromSelected (Z)Lnet/minecraft/world/item/ItemStack; a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItem (Lnet/minecraft/world/item/ItemStack;)V g
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	replaceWith (Lnet/minecraft/world/entity/player/Inventory;)V a
	save (Lnet/minecraft/nbt/ListTag;)Lnet/minecraft/nbt/ListTag; a
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setPickedItem (Lnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	swapPaint (D)V a
	tick ()V j
net/minecraft/world/entity/player/Player cfi
	CROUCH_BB_HEIGHT bH
	DATA_PLAYER_ABSORPTION_ID d
	DATA_PLAYER_MAIN_HAND bN
	DATA_PLAYER_MODE_CUSTOMISATION bM
	DATA_SCORE_ID e
	DATA_SHOULDER_LEFT bO
	DATA_SHOULDER_RIGHT bP
	DEFAULT_EYE_HEIGHT bK
	DEFAULT_MAIN_HAND bB
	DEFAULT_MODEL_CUSTOMIZATION bC
	ENDER_SLOT_OFFSET bG
	LOGGER b
	MAX_HEALTH bD
	MAX_NAME_LENGTH bA
	POSES c
	SLEEP_DURATION bE
	STANDING_DIMENSIONS bL
	SWIMMING_BB_HEIGHT bJ
	SWIMMING_BB_WIDTH bI
	WAKE_UP_DURATION bF
	abilities co
	bob bW
	containerMenu bS
	cooldowns ct
	defaultFlySpeed cj
	enchantmentSeed ci
	enderChestInventory bQ
	experienceLevel cf
	experienceProgress ch
	fishing ck
	foodData bT
	gameProfile cq
	hurtDir cl
	inventory cm
	inventoryMenu bR
	jumpTriggerTime bU
	lastDeathLocation cu
	lastItemInMainHand cs
	lastLevelUpTime cp
	oBob bV
	reducedDebugInfo cr
	sleepCounter cn
	takeXpDelay bX
	timeEntitySatOnShoulder f
	totalExperience cg
	wasUnderwater ce
	xCloak cb
	xCloakO bY
	yCloak cc
	yCloakO bZ
	zCloak cd
	zCloakO ca
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addItem (Lnet/minecraft/world/item/ItemStack;)Z i
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	aiStep ()V d_
	animateHurt (F)V m
	attack (Lnet/minecraft/world/entity/Entity;)V d
	awardRecipes (Ljava/util/Collection;)I a
	awardRecipesByKey (Ljava/util/List;)V a
	awardStat (Lnet/minecraft/resources/ResourceLocation;)V a
	awardStat (Lnet/minecraft/resources/ResourceLocation;I)V a
	awardStat (Lnet/minecraft/stats/Stat;)V b
	awardStat (Lnet/minecraft/stats/Stat;I)V a
	blockActionRestricted (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/GameType;)Z a
	blockUsingShield (Lnet/minecraft/world/entity/LivingEntity;)V d
	canBeHitByProjectile ()Z bs
	canBeSeenAsEnemy ()Z eo
	canEat (Z)Z t
	canHarmPlayer (Lnet/minecraft/world/entity/player/Player;)Z a
	canPlayerFitWithinBlocksAndEntitiesWhen (Lnet/minecraft/world/entity/Pose;)Z g
	canSprint ()Z dF
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z f
	canUseGameMasterBlocks ()Z gp
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	causeFoodExhaustion (F)V A
	closeContainer ()V r
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fH
	createItemCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; k
	crit (Lnet/minecraft/world/entity/Entity;)V a
	decorateDisplayNameComponent (Lnet/minecraft/network/chat/MutableComponent;)Lnet/minecraft/network/chat/MutableComponent; a
	defineSynchedData ()V c_
	destroyVanishingCursedItems ()V fO
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	disableShield (Z)V s
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	doAutoAttackOnTouch (Lnet/minecraft/world/entity/LivingEntity;)V g
	doCloseContainer ()V s
	doWaterSplashEffect ()V bi
	doesEmitEquipEvent (Lnet/minecraft/world/entity/EquipmentSlot;)Z a
	drop (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/world/entity/item/ItemEntity; a
	drop (Lnet/minecraft/world/item/ItemStack;ZZ)Lnet/minecraft/world/entity/item/ItemEntity; a
	dropEquipment ()V ey
	eat (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	findRespawnPositionAndUseSpawnBlock (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;FZZ)Ljava/util/Optional; a
	freeAt (Lnet/minecraft/core/BlockPos;)Z h
	getAbilities ()Lnet/minecraft/world/entity/player/Abilities; fT
	getAbsorptionAmount ()F fk
	getArmorSlots ()Ljava/lang/Iterable; bL
	getAttackStrengthScale (F)F B
	getBlockSpeedFactor ()F aL
	getCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; gn
	getCurrentItemAttackStrengthDelay ()F gl
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; n_
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F d
	getDimensionChangingDelay ()I bJ
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDismountPoses ()Lcom/google/common/collect/ImmutableList; fA
	getDisplayName ()Lnet/minecraft/network/chat/Component; Q_
	getEnchantmentSeed ()I ga
	getEnderChestInventory ()Lnet/minecraft/world/inventory/PlayerEnderChestContainer; gf
	getExperienceReward ()I ee
	getFallSounds ()Lnet/minecraft/world/entity/LivingEntity$Fallsounds; eG
	getFireImmuneTicks ()I dc
	getFlyingSpeed ()F fe
	getFoodData ()Lnet/minecraft/world/food/FoodData; gc
	getGameProfile ()Lcom/mojang/authlib/GameProfile; fR
	getHandSlots ()Ljava/lang/Iterable; bK
	getHurtDir ()F eE
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getInventory ()Lnet/minecraft/world/entity/player/Inventory; fS
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; c
	getLastDeathLocation ()Ljava/util/Optional; gr
	getLuck ()F go
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; fm
	getMaxHeadRotationRelativeToBody ()F fg
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aW
	getName ()Lnet/minecraft/network/chat/Component; ad
	getPickRange (Z)F v
	getPortalWaitTime ()I ax
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; g
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; q
	getScore ()I fN
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; gh
	getScoreboardName ()Ljava/lang/String; cy
	getShoulderEntityLeft ()Lnet/minecraft/nbt/CompoundTag; gj
	getShoulderEntityRight ()Lnet/minecraft/nbt/CompoundTag; gk
	getSleepTimer ()I fW
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; db
	getSpeed ()F ff
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimHighSpeedSplashSound ()Lnet/minecraft/sounds/SoundEvent; aP
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aN
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aO
	getWardenSpawnTracker ()Ljava/util/Optional; aa
	getXpNeededForNextLevel ()I gb
	giveExperienceLevels (I)V c
	giveExperiencePoints (I)V d
	handleEntityEvent (B)V b
	hasContainerOpen ()Z fU
	hasCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z e
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F)V b
	hurtCurrentlyUsedShield (F)V u
	hurtHelmet (Lnet/minecraft/world/damagesource/DamageSource;F)V c
	increaseScore (I)V s
	interactOn (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	internalSetAbsorptionAmount (F)V z
	isAboveGround ()Z A
	isAffectedByFluids ()Z ea
	isAlwaysExperienceDropper ()Z ef
	isAlwaysTicking ()Z dL
	isCreative ()Z f
	isHurt ()Z gd
	isImmobile ()Z eY
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isLocalPlayer ()Z g
	isModelPartShown (Lnet/minecraft/world/entity/player/PlayerModelPart;)Z a
	isPushedByFluid ()Z cz
	isReducedDebugInfo ()Z gi
	isScoping ()Z gq
	isSecondaryUseActive ()Z fI
	isSleepingLongEnough ()Z fV
	isSpectator ()Z P_
	isStayingOnGroundSurface ()Z fK
	isSwimming ()Z bZ
	isTextFilteringEnabled ()Z Y
	isValidUsername (Ljava/lang/String;)Z c
	jumpFromGround ()V fb
	killedEntity (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	mayBuild ()Z ge
	mayUseItemAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;)Z a
	maybeBackOffFromEdge (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/MoverType;)Lnet/minecraft/world/phys/Vec3; a
	moveCloak ()V w
	onEnchantmentPerformed (Lnet/minecraft/world/item/ItemStack;I)V a
	onSoulSpeedBlock ()Z dU
	onUpdateAbilities ()V y
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openHorseInventory (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lnet/minecraft/world/Container;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openJigsawBlock (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity;)V a
	openMenu (Lnet/minecraft/world/MenuProvider;)Ljava/util/OptionalInt; a
	openMinecartCommandBlock (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	openStructureBlock (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;Z)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playShoulderEntityAmbientSound (Lnet/minecraft/nbt/CompoundTag;)V c
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	removeEntitiesOnShoulder ()V gg
	removeVehicle ()V bC
	resetAttackStrengthTicker ()V gm
	resetRecipes (Ljava/util/Collection;)I b
	resetStat (Lnet/minecraft/stats/Stat;)V a
	respawn ()V fQ
	respawnEntityOnShoulder (Lnet/minecraft/nbt/CompoundTag;)V k
	rideTick ()V t
	ridingOffset (Lnet/minecraft/world/entity/Entity;)F l
	sendMerchantOffers (ILnet/minecraft/world/item/trading/MerchantOffers;IIZZ)V a
	serverAiStep ()V fi
	setEntityOnShoulder (Lnet/minecraft/nbt/CompoundTag;)Z h
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setLastDeathLocation (Ljava/util/Optional;)V a
	setMainArm (Lnet/minecraft/world/entity/HumanoidArm;)V a
	setReducedDebugInfo (Z)V u
	setRemainingFireTicks (I)V h
	setScore (I)V r
	setShoulderEntityLeft (Lnet/minecraft/nbt/CompoundTag;)V i
	setShoulderEntityRight (Lnet/minecraft/nbt/CompoundTag;)V j
	shouldBeSaved ()Z dK
	shouldRemoveSoulSpeed (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	shouldShowName ()Z cC
	startAutoSpinAttack (I)V t
	startFallFlying ()V fY
	startSleepInBed (Lnet/minecraft/core/BlockPos;)Lcom/mojang/datafixers/util/Either; a
	stopFallFlying ()V fZ
	stopSleepInBed (ZZ)V a
	stopSleeping ()V fE
	sweepAttack ()V fP
	tick ()V l
	touch (Lnet/minecraft/world/entity/Entity;)V c
	travel (Lnet/minecraft/world/phys/Vec3;)V a
	triggerRecipeCrafted (Lnet/minecraft/world/item/crafting/RecipeHolder;Ljava/util/List;)V a
	tryToStartFallFlying ()Z fX
	turtleHelmetTick ()V u
	updateIsUnderwater ()Z fL
	updatePlayerPose ()V fM
	updateSwimming ()V bf
	updateTutorialInventoryAction (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V a
	wantsToStopRiding ()Z fJ
net/minecraft/world/entity/player/Player$BedSleepingProblem cfi$a
	$VALUES h
	NOT_POSSIBLE_HERE a
	NOT_POSSIBLE_NOW b
	NOT_SAFE f
	OBSTRUCTED d
	OTHER_PROBLEM e
	TOO_FAR_AWAY c
	message g
	$values ()[Lnet/minecraft/world/entity/player/Player$BedSleepingProblem; b
	getMessage ()Lnet/minecraft/network/chat/Component; a
net/minecraft/world/entity/player/PlayerModelPart cfj
	$VALUES l
	CAPE a
	HAT g
	JACKET b
	LEFT_PANTS_LEG e
	LEFT_SLEEVE c
	RIGHT_PANTS_LEG f
	RIGHT_SLEEVE d
	bit h
	id j
	mask i
	name k
	$values ()[Lnet/minecraft/world/entity/player/PlayerModelPart; e
	getBit ()I b
	getId ()Ljava/lang/String; c
	getMask ()I a
	getName ()Lnet/minecraft/network/chat/Component; d
net/minecraft/world/entity/player/ProfileKeyPair cfk
	CODEC a
	privateKey b
	publicKey c
	refreshedAfter d
	dueRefresh ()Z a
	privateKey ()Ljava/security/PrivateKey; b
	publicKey ()Lnet/minecraft/world/entity/player/ProfilePublicKey; c
	refreshedAfter ()Ljava/time/Instant; d
net/minecraft/world/entity/player/ProfilePublicKey cfl
	EXPIRED_PROFILE_PUBLIC_KEY a
	EXPIRY_GRACE_PERIOD b
	INVALID_SIGNATURE e
	TRUSTED_CODEC c
	data d
	createSignatureValidator ()Lnet/minecraft/util/SignatureValidator; a
	createValidated (Lnet/minecraft/util/SignatureValidator;Ljava/util/UUID;Lnet/minecraft/world/entity/player/ProfilePublicKey$Data;)Lnet/minecraft/world/entity/player/ProfilePublicKey; a
	data ()Lnet/minecraft/world/entity/player/ProfilePublicKey$Data; b
net/minecraft/world/entity/player/ProfilePublicKey$Data cfl$a
	CODEC a
	MAX_KEY_SIGNATURE_SIZE e
	expiresAt b
	key c
	keySignature d
	expiresAt ()Ljava/time/Instant; b
	hasExpired ()Z a
	hasExpired (Ljava/time/Duration;)Z a
	key ()Ljava/security/PublicKey; c
	keySignature ()[B d
	signedPayload (Ljava/util/UUID;)[B a
	validateSignature (Lnet/minecraft/util/SignatureValidator;Ljava/util/UUID;)Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/entity/player/ProfilePublicKey$ValidationException cfl$b
net/minecraft/world/entity/player/StackedContents cfm
	EMPTY b
	contents a
	accountSimpleStack (Lnet/minecraft/world/item/ItemStack;)V a
	accountStack (Lnet/minecraft/world/item/ItemStack;)V b
	accountStack (Lnet/minecraft/world/item/ItemStack;I)V a
	canCraft (Lnet/minecraft/world/item/crafting/Recipe;Lit/unimi/dsi/fastutil/ints/IntList;)Z a
	canCraft (Lnet/minecraft/world/item/crafting/Recipe;Lit/unimi/dsi/fastutil/ints/IntList;I)Z a
	clear ()V a
	fromStackingIndex (I)Lnet/minecraft/world/item/ItemStack; a
	getBiggestCraftableStack (Lnet/minecraft/world/item/crafting/RecipeHolder;ILit/unimi/dsi/fastutil/ints/IntList;)I a
	getBiggestCraftableStack (Lnet/minecraft/world/item/crafting/RecipeHolder;Lit/unimi/dsi/fastutil/ints/IntList;)I a
	getStackingIndex (Lnet/minecraft/world/item/ItemStack;)I c
	has (I)Z b
	put (II)V b
	take (II)I a
net/minecraft/world/entity/player/StackedContents$RecipePicker cfm$a
	data g
	ingredientCount d
	ingredients c
	itemCount f
	items e
	path h
	recipe b
	dfs (I)Z a
	getIndex (ZII)I d
	getMinIngredientCount ()I b
	getSatisfiedIndex (I)I d
	getUniqueAvailableIngredientItems ()[I a
	getVisitedIndex (ZI)I c
	hasConnection (ZII)Z a
	hasResidual (ZII)Z b
	hasVisited (ZI)Z b
	isSatisfied (I)Z b
	setSatisfied (I)V c
	toggleResidual (ZII)V c
	tryPick (ILit/unimi/dsi/fastutil/ints/IntList;)Z a
	tryPickAll (ILit/unimi/dsi/fastutil/ints/IntList;)I b
	visit (ZI)V a
net/minecraft/world/entity/projectile/AbstractArrow cfo
	ARROW_BASE_DAMAGE f
	FLAG_CRIT i
	FLAG_CROSSBOW k
	FLAG_NOPHYSICS j
	ID_FLAGS g
	PIERCE_LEVEL h
	baseDamage n
	inGround b
	inGroundTime c
	knockback o
	lastState l
	life m
	pickup d
	pickupItemStack s
	piercedAndKilledEntities r
	piercingIgnoreEntityIds q
	shakeTime e
	soundEvent p
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	defineSynchedData ()V c_
	deflect ()V s
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	findHitEntity (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/EntityHitResult; a
	getBaseDamage ()D A
	getDefaultHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; u
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; x
	getKnockback ()I B
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aW
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; y
	getPickupItemStackOrigin ()Lnet/minecraft/world/item/ItemStack; z
	getPierceLevel ()B E
	getWaterInertia ()F G
	isAttackable ()Z cq
	isCritArrow ()Z C
	isNoPhysics ()Z H
	lerpMotion (DDD)V l
	lerpTo (DDDFFI)V a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	resetPiercedEntities ()V N
	setBaseDamage (D)V h
	setCritArrow (Z)V a
	setEnchantmentEffectsFromEntity (Lnet/minecraft/world/entity/LivingEntity;F)V a
	setFlag (IZ)V a
	setKnockback (I)V b
	setNoPhysics (Z)V p
	setOwner (Lnet/minecraft/world/entity/Entity;)V b
	setPierceLevel (B)V a
	setShotFromCrossbow (Z)V q
	setSoundEvent (Lnet/minecraft/sounds/SoundEvent;)V b
	shoot (DDDFF)V c
	shotFromCrossbow ()Z D
	shouldFall ()Z I
	shouldRenderAtSqrDistance (D)Z a
	startFalling ()V M
	tick ()V l
	tickDespawn ()V q
	tryPickup (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/entity/projectile/AbstractArrow$Pickup cfo$a
	$VALUES d
	ALLOWED b
	CREATIVE_ONLY c
	DISALLOWED a
	$values ()[Lnet/minecraft/world/entity/projectile/AbstractArrow$Pickup; a
	byOrdinal (I)Lnet/minecraft/world/entity/projectile/AbstractArrow$Pickup; a
net/minecraft/world/entity/projectile/AbstractHurtingProjectile cfp
	xPower b
	yPower c
	zPower d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	defineSynchedData ()V c_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; dj
	getClipType ()Lnet/minecraft/world/level/ClipContext$Block; ag_
	getInertia ()F x
	getLightLevelDependentMagicValue ()F bo
	getLiquidInertia ()F y
	getPickRadius ()F bE
	getTrailParticle ()Lnet/minecraft/core/particles/ParticleOptions; u
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bt
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	shouldBurn ()Z s
	shouldRenderAtSqrDistance (D)Z a
	tick ()V l
net/minecraft/world/entity/projectile/Arrow cfq
	DEFAULT_ARROW_STACK j
	EVENT_POTION_PUFF i
	EXPOSED_POTION_DECAY_TIME f
	ID_EFFECT_COLOR h
	NO_EFFECT_COLOR g
	effects l
	fixedColor m
	potion k
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	defineSynchedData ()V c_
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	getColor ()I I
	getCustomColor (Lnet/minecraft/world/item/ItemStack;)I c
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; y
	handleEntityEvent (B)V b
	makeParticle (I)V c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setEffectsFromItem (Lnet/minecraft/world/item/ItemStack;)V a
	setFixedColor (I)V d
	tick ()V l
	updateColor ()V M
net/minecraft/world/entity/projectile/DragonFireball cfr
	SPLASH_RANGE e
	getTrailParticle ()Lnet/minecraft/core/particles/ParticleOptions; u
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bt
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	shouldBurn ()Z s
net/minecraft/world/entity/projectile/EvokerFangs cfs
	ATTACK_DURATION b
	ATTACK_TRIGGER_TICKS d
	LIFE_OFFSET c
	clientSideAttackStarted h
	lifeTicks g
	owner i
	ownerUUID j
	sentSpikeEvent f
	warmupDelayTicks e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dealDamageTo (Lnet/minecraft/world/entity/LivingEntity;)V c
	defineSynchedData ()V c_
	getAnimationProgress (F)F a
	getOwner ()Lnet/minecraft/world/entity/Entity; w
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; q
	handleEntityEvent (B)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setOwner (Lnet/minecraft/world/entity/LivingEntity;)V a
	tick ()V l
net/minecraft/world/entity/projectile/EyeOfEnder cft
	DATA_ITEM_STACK b
	life f
	surviveAfterDeath g
	tx c
	ty d
	tz e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V c_
	getItem ()Lnet/minecraft/world/item/ItemStack; q
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; s
	getLightLevelDependentMagicValue ()F bo
	isAttackable ()Z cq
	lerpMotion (DDD)V l
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
	shouldRenderAtSqrDistance (D)Z a
	signalTo (Lnet/minecraft/core/BlockPos;)V a
	tick ()V l
net/minecraft/world/entity/projectile/Fireball cfu
	DATA_ITEM_STACK e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V c_
	getItem ()Lnet/minecraft/world/item/ItemStack; q
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; z
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/projectile/FireworkRocketEntity cfv
	DATA_ATTACHED_TO_TARGET c
	DATA_ID_FIREWORKS_ITEM b
	DATA_SHOT_AT_ANGLE d
	attachedToEntity g
	life e
	lifetime f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dealExplosionDamage ()V y
	defineSynchedData ()V c_
	explode ()V u
	getItem ()Lnet/minecraft/world/item/ItemStack; q
	handleEntityEvent (B)V b
	hasExplosion ()Z x
	isAttachedToEntity ()Z z
	isAttackable ()Z cq
	isShotAtAngle ()Z s
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldRender (DDD)Z k
	shouldRenderAtSqrDistance (D)Z a
	tick ()V l
net/minecraft/world/entity/projectile/FishingHook cfw
	DATA_BITING h
	DATA_HOOKED_ENTITY g
	LOGGER b
	MAX_OUT_OF_WATER_TIME f
	biting d
	currentState p
	fishAngle m
	hookedIn o
	life i
	luck q
	lureSpeed r
	nibble j
	openWater n
	outOfWaterTime e
	syncronizedRandom c
	timeUntilHooked l
	timeUntilLured k
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	calculateOpenWater (Lnet/minecraft/core/BlockPos;)Z b
	canChangeDimensions ()Z ct
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	catchingFish (Lnet/minecraft/core/BlockPos;)V a
	checkCollision ()V x
	defineSynchedData ()V c_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; dj
	getHookedIn ()Lnet/minecraft/world/entity/Entity; u
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aW
	getOpenWaterTypeForArea (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/projectile/FishingHook$OpenWaterType; a
	getOpenWaterTypeForBlock (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/projectile/FishingHook$OpenWaterType; c
	getPlayerOwner ()Lnet/minecraft/world/entity/player/Player; s
	handleEntityEvent (B)V b
	isOpenWaterFishing ()Z q
	lerpTo (DDDFFI)V a
	onClientRemoval ()V ao
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	pullEntity (Lnet/minecraft/world/entity/Entity;)V c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	retrieve (Lnet/minecraft/world/item/ItemStack;)I a
	setHookedEntity (Lnet/minecraft/world/entity/Entity;)V A
	setOwner (Lnet/minecraft/world/entity/Entity;)V b
	shouldRenderAtSqrDistance (D)Z a
	shouldStopFishing (Lnet/minecraft/world/entity/player/Player;)Z a
	tick ()V l
	updateOwnerInfo (Lnet/minecraft/world/entity/projectile/FishingHook;)V a
net/minecraft/world/entity/projectile/FishingHook$FishHookState cfw$a
	$VALUES d
	BOBBING c
	FLYING a
	HOOKED_IN_ENTITY b
	$values ()[Lnet/minecraft/world/entity/projectile/FishingHook$FishHookState; a
net/minecraft/world/entity/projectile/FishingHook$OpenWaterType cfw$b
	$VALUES d
	ABOVE_WATER a
	INSIDE_WATER b
	INVALID c
	$values ()[Lnet/minecraft/world/entity/projectile/FishingHook$OpenWaterType; a
net/minecraft/world/entity/projectile/ItemSupplier cfx
	getItem ()Lnet/minecraft/world/item/ItemStack; q
net/minecraft/world/entity/projectile/LargeFireball cfy
	explosionPower e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/entity/projectile/LlamaSpit cfz
	defineSynchedData ()V c_
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	tick ()V l
net/minecraft/world/entity/projectile/Projectile cga
	cachedOwner c
	hasBeenShot e
	leftOwner d
	ownerUUID b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	checkLeftOwner ()Z s
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; dj
	getEffectSource ()Lnet/minecraft/world/entity/Entity; J
	getOwner ()Lnet/minecraft/world/entity/Entity; w
	lerpMotion (DDD)V l
	lerpRotation (FF)F d
	mayBreak (Lnet/minecraft/world/level/Level;)Z b
	mayInteract (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	ownedBy (Lnet/minecraft/world/entity/Entity;)Z d
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	restoreFrom (Lnet/minecraft/world/entity/Entity;)V w
	setOwner (Lnet/minecraft/world/entity/Entity;)V b
	shoot (DDDFF)V c
	shootFromRotation (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	tick ()V l
	updateRotation ()V K
net/minecraft/world/entity/projectile/ProjectileUtil cgb
	DEFAULT_ENTITY_HIT_RESULT_MARGIN a
	getEntityHitResult (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;D)Lnet/minecraft/world/phys/EntityHitResult; a
	getEntityHitResult (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Lnet/minecraft/world/phys/EntityHitResult; a
	getEntityHitResult (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;F)Lnet/minecraft/world/phys/EntityHitResult; a
	getHitResult (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/Level;FLnet/minecraft/world/level/ClipContext$Block;)Lnet/minecraft/world/phys/HitResult; a
	getHitResultOnMoveVector (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;)Lnet/minecraft/world/phys/HitResult; a
	getHitResultOnMoveVector (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;Lnet/minecraft/world/level/ClipContext$Block;)Lnet/minecraft/world/phys/HitResult; a
	getHitResultOnViewVector (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;D)Lnet/minecraft/world/phys/HitResult; a
	getMobArrow (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
	getWeaponHoldingHand (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/InteractionHand; a
	rotateTowardsMovement (Lnet/minecraft/world/entity/Entity;F)V a
net/minecraft/world/entity/projectile/ShulkerBullet cgc
	SPEED b
	currentMoveDirection d
	finalTarget c
	flightSteps e
	targetDeltaX f
	targetDeltaY g
	targetDeltaZ h
	targetId i
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	checkDespawn ()V dy
	defineSynchedData ()V c_
	destroy ()V s
	getLightLevelDependentMagicValue ()F bo
	getMoveDirection ()Lnet/minecraft/core/Direction; q
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; db
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isOnFire ()Z bN
	isPickable ()Z bt
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	selectNextMoveDirection (Lnet/minecraft/core/Direction$Axis;)V a
	setMoveDirection (Lnet/minecraft/core/Direction;)V a
	shouldRenderAtSqrDistance (D)Z a
	tick ()V l
net/minecraft/world/entity/projectile/SmallFireball cgd
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bt
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/Snowball cge
	getDefaultItem ()Lnet/minecraft/world/item/Item; s
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; y
	handleEntityEvent (B)V b
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/SpectralArrow cgf
	DEFAULT_ARROW_STACK f
	duration g
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	tick ()V l
net/minecraft/world/entity/projectile/ThrowableItemProjectile cgg
	DATA_ITEM_STACK b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V c_
	getDefaultItem ()Lnet/minecraft/world/item/Item; s
	getItem ()Lnet/minecraft/world/item/ItemStack; q
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; u
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/projectile/ThrowableProjectile cgh
	getGravity ()F x
	shouldRenderAtSqrDistance (D)Z a
	tick ()V l
net/minecraft/world/entity/projectile/ThrownEgg cgi
	getDefaultItem ()Lnet/minecraft/world/item/Item; s
	handleEntityEvent (B)V b
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/ThrownEnderpearl cgj
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	getDefaultItem ()Lnet/minecraft/world/item/Item; s
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	tick ()V l
net/minecraft/world/entity/projectile/ThrownExperienceBottle cgk
	getDefaultItem ()Lnet/minecraft/world/item/Item; s
	getGravity ()F x
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
net/minecraft/world/entity/projectile/ThrownPotion cgl
	SPLASH_RANGE b
	SPLASH_RANGE_SQ d
	WATER_SENSITIVE_OR_ON_FIRE c
	applySplash (Ljava/util/List;Lnet/minecraft/world/entity/Entity;)V a
	applyWater ()V y
	dowseFire (Lnet/minecraft/core/BlockPos;)V a
	getDefaultItem ()Lnet/minecraft/world/item/Item; s
	getGravity ()F x
	isLingering ()Z z
	makeAreaOfEffectCloud (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/alchemy/Potion;)V a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
net/minecraft/world/entity/projectile/ThrownTrident cgm
	DEFAULT_ARROW_STACK i
	ID_FOIL h
	ID_LOYALTY g
	clientSideReturnTridentTickCount f
	dealtDamage j
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V c_
	findHitEntity (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/EntityHitResult; a
	getDefaultHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; u
	getWaterInertia ()F G
	isAcceptibleReturnOwner ()Z N
	isChanneling ()Z M
	isFoil ()Z I
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldRender (DDD)Z k
	tick ()V l
	tickDespawn ()V q
	tryPickup (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/entity/projectile/WindCharge cgn
	EXPLOSION_DAMAGE_CALCULATOR e
	canCollideWith (Lnet/minecraft/world/entity/Entity;)Z h
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	explode ()V z
	getClipType ()Lnet/minecraft/world/level/ClipContext$Block; ag_
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getInertia ()F x
	getItem ()Lnet/minecraft/world/item/ItemStack; q
	getLiquidInertia ()F y
	getTrailParticle ()Lnet/minecraft/core/particles/ParticleOptions; u
	makeBoundingBox ()Lnet/minecraft/world/phys/AABB; aq
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	shouldBurn ()Z s
net/minecraft/world/entity/projectile/WindCharge$WindChargeExplosionDamageCalculator cgn$a
	shouldDamageEntity (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/world/entity/projectile/WitherSkull cgo
	DATA_DANGEROUS e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V c_
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getInertia ()F x
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isDangerous ()Z z
	isOnFire ()Z bN
	isPickable ()Z bt
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setDangerous (Z)V a
	shouldBurn ()Z s
net/minecraft/world/entity/raid/Raid cgq
	ATTEMPT_RAID_CLOSE j
	ATTEMPT_RAID_FARTHEST i
	ATTEMPT_RAID_INSIDE k
	DEFAULT_MAX_BAD_OMEN_LEVEL e
	DEFAULT_PRE_RAID_TICKS r
	HERO_OF_THE_VILLAGE_DURATION x
	LOW_MOB_THRESHOLD t
	MAX_CELEBRATION_TICKS c
	MAX_NO_ACTION_TIME b
	NUM_SPAWN_ATTEMPTS n
	OMINOUS_BANNER_PATTERN_NAME o
	OUTSIDE_RAID_BOUNDS_TIMEOUT s
	POST_RAID_TICK_LIMIT q
	RAIDERS_REMAINING p
	RAID_BAR_DEFEAT_COMPONENT w
	RAID_BAR_VICTORY_COMPONENT v
	RAID_NAME_COMPONENT u
	RAID_REMOVAL_THRESHOLD_SQR g
	RAID_TIMEOUT_TICKS m
	SECTION_RADIUS_FOR_FINDING_NEW_VILLAGE_CENTER h
	TICKS_PER_DAY d
	VALID_RAID_RADIUS_SQR f
	VILLAGE_RADIUS_BUFFER a
	VILLAGE_SEARCH_RADIUS l
	active I
	badOmenLevel H
	celebrationTicks Q
	center C
	groupRaiderMap z
	groupToLeaderMap y
	groupsSpawned J
	heroesOfTheVillage A
	id F
	level D
	numGroups O
	postRaidTicks L
	raidCooldownTicks M
	raidEvent K
	random N
	started E
	status P
	ticksActive B
	totalHealth G
	waveSpawnPos R
	absorbBadOmen (Lnet/minecraft/world/entity/player/Player;)V a
	addHeroOfTheVillage (Lnet/minecraft/world/entity/Entity;)V a
	addWaveMob (ILnet/minecraft/world/entity/raid/Raider;)Z b
	addWaveMob (ILnet/minecraft/world/entity/raid/Raider;Z)Z a
	findRandomSpawnPos (II)Lnet/minecraft/core/BlockPos; a
	getAllRaiders ()Ljava/util/Set; h
	getBadOmenLevel ()I m
	getCenter ()Lnet/minecraft/core/BlockPos; t
	getDefaultNumSpawns (Lnet/minecraft/world/entity/raid/Raid$RaiderType;IZ)I a
	getEnchantOdds ()F w
	getGroupsSpawned ()I k
	getHealthOfLivingRaiders ()F q
	getId ()I u
	getLeader (I)Lnet/minecraft/world/entity/raid/Raider; b
	getLeaderBannerInstance ()Lnet/minecraft/world/item/ItemStack; s
	getLevel ()Lnet/minecraft/world/level/Level; i
	getMaxBadOmenLevel ()I l
	getNumGroups (Lnet/minecraft/world/Difficulty;)I a
	getPotentialBonusSpawns (Lnet/minecraft/world/entity/raid/Raid$RaiderType;Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/DifficultyInstance;Z)I a
	getTotalHealth ()F g
	getTotalRaidersAlive ()I r
	getValidSpawnPos (I)Ljava/util/Optional; d
	hasBonusWave ()Z C
	hasFirstWaveSpawned ()Z c
	hasMoreWaves ()Z A
	hasSpawnedBonusWave ()Z D
	isActive ()Z v
	isBetweenWaves ()Z b
	isFinalWave ()Z B
	isLoss ()Z f
	isOver ()Z a
	isStarted ()Z j
	isStopped ()Z d
	isVictory ()Z e
	joinRaid (ILnet/minecraft/world/entity/raid/Raider;Lnet/minecraft/core/BlockPos;Z)V a
	moveRaidCenterToNearbyVillageSection ()V z
	playSound (Lnet/minecraft/core/BlockPos;)V a
	removeFromRaid (Lnet/minecraft/world/entity/raid/Raider;Z)V a
	removeLeader (I)V c
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setBadOmenLevel (I)V a
	setCenter (Lnet/minecraft/core/BlockPos;)V c
	setDirty ()V H
	setLeader (ILnet/minecraft/world/entity/raid/Raider;)V a
	shouldSpawnBonusGroup ()Z E
	shouldSpawnGroup ()Z G
	spawnGroup (Lnet/minecraft/core/BlockPos;)V b
	stop ()V n
	tick ()V o
	updateBossbar ()V p
	updatePlayers ()V y
	updateRaiders ()V F
	validPlayer ()Ljava/util/function/Predicate; x
net/minecraft/world/entity/raid/Raid$RaidStatus cgq$a
	$VALUES f
	LOSS c
	ONGOING a
	STOPPED d
	VALUES e
	VICTORY b
	$values ()[Lnet/minecraft/world/entity/raid/Raid$RaidStatus; b
	getByName (Ljava/lang/String;)Lnet/minecraft/world/entity/raid/Raid$RaidStatus; a
	getName ()Ljava/lang/String; a
net/minecraft/world/entity/raid/Raid$RaiderType cgq$b
	$VALUES i
	EVOKER b
	PILLAGER c
	RAVAGER e
	VALUES f
	VINDICATOR a
	WITCH d
	entityType g
	spawnsPerWaveBeforeBonus h
	$values ()[Lnet/minecraft/world/entity/raid/Raid$RaiderType; a
net/minecraft/world/entity/raid/Raider cgr
	ALLOWED_ITEMS b
	IS_CELEBRATING c
	canJoinRaid bT
	raid d
	ticksOutsideRaid bU
	wave e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V d_
	applyRaidBuffs (IZ)V a
	canJoinPatrol ()Z gl
	canJoinRaid ()Z gr
	defineSynchedData ()V c_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; af_
	getCurrentRaid ()Lnet/minecraft/world/entity/raid/Raid; gs
	getTicksOutsideRaid ()I gw
	getWave ()I gu
	hasActiveRaid ()Z gt
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isCelebrating ()Z gv
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V B
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z W
	setCanJoinRaid (Z)V z
	setCelebrating (Z)V A
	setCurrentRaid (Lnet/minecraft/world/entity/raid/Raid;)V a
	setTicksOutsideRaid (I)V c
	setWave (I)V b
	updateNoActionTime ()V gj
net/minecraft/world/entity/raid/Raider$HoldGroundAttackGoal cgr$a
	hostileRadiusSqr d
	mob c
	shoutTargeting a
	canUse ()Z a
	requiresUpdateEveryTick ()Z T_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/raid/Raider$ObtainRaidLeaderBannerGoal cgr$b
	mob b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/raid/Raider$RaiderCelebration cgr$c
	mob b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/raid/Raider$RaiderMoveThroughVillageGoal cgr$d
	distanceToPoi e
	poiPos c
	raider a
	speedModifier b
	stuck f
	visited d
	canContinueToUse ()Z b
	canUse ()Z a
	hasNotVisited (Lnet/minecraft/core/BlockPos;)Z a
	hasSuitablePoi ()Z i
	isValidRaid ()Z h
	start ()V c
	stop ()V d
	tick ()V e
	updateVisited ()V k
net/minecraft/world/entity/raid/Raids cgs
	RAID_FILE_ID a
	level c
	nextAvailableID d
	raidMap b
	tick e
	canJoinRaid (Lnet/minecraft/world/entity/raid/Raider;Lnet/minecraft/world/entity/raid/Raid;)Z a
	createOrExtendRaid (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/world/entity/raid/Raid; a
	factory (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/saveddata/SavedData$Factory; a
	get (I)Lnet/minecraft/world/entity/raid/Raid; a
	getFileId (Lnet/minecraft/core/Holder;)Ljava/lang/String; a
	getNearbyRaid (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/entity/raid/Raid; a
	getOrCreateRaid (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/raid/Raid; a
	getUniqueId ()I b
	load (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/raid/Raids; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	tick ()V a
net/minecraft/world/entity/schedule/Activity cgu
	ADMIRE_ITEM m
	AVOID n
	CELEBRATE l
	CORE a
	DIG z
	EMERGE y
	FIGHT k
	HIDE j
	IDLE b
	INVESTIGATE w
	LAY_SPAWN u
	LONG_JUMP q
	MEET f
	PANIC g
	PLAY d
	PLAY_DEAD p
	PRE_RAID i
	RAID h
	RAM r
	REST e
	RIDE o
	ROAR x
	SNIFF v
	SWIM t
	TONGUE s
	WORK c
	hashCode B
	name A
	getName ()Ljava/lang/String; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/schedule/Activity; a
net/minecraft/world/entity/schedule/Keyframe cgv
	timeStamp a
	value b
	getTimeStamp ()I a
	getValue ()F b
net/minecraft/world/entity/schedule/Schedule cgw
	EMPTY c
	SIMPLE d
	TOTAL_WORK_TIME b
	VILLAGER_BABY e
	VILLAGER_DEFAULT f
	WORK_START_TIME a
	timelines g
	ensureTimelineExistsFor (Lnet/minecraft/world/entity/schedule/Activity;)V a
	getActivityAt (I)Lnet/minecraft/world/entity/schedule/Activity; a
	getAllTimelinesExceptFor (Lnet/minecraft/world/entity/schedule/Activity;)Ljava/util/List; c
	getTimelineFor (Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/world/entity/schedule/Timeline; b
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/schedule/ScheduleBuilder; a
net/minecraft/world/entity/schedule/ScheduleBuilder cgx
	schedule a
	transitions b
	build ()Lnet/minecraft/world/entity/schedule/Schedule; a
	changeActivityAt (ILnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/world/entity/schedule/ScheduleBuilder; a
net/minecraft/world/entity/schedule/ScheduleBuilder$ActivityTransition cgx$a
	activity b
	time a
	getActivity ()Lnet/minecraft/world/entity/schedule/Activity; b
	getTime ()I a
net/minecraft/world/entity/schedule/Timeline cgy
	keyframes a
	previousIndex b
	addKeyframe (IF)Lnet/minecraft/world/entity/schedule/Timeline; a
	addKeyframes (Ljava/util/Collection;)Lnet/minecraft/world/entity/schedule/Timeline; a
	getKeyframes ()Lcom/google/common/collect/ImmutableList; a
	getValueAt (I)F a
	sortAndDeduplicateKeyframes ()V b
net/minecraft/world/entity/vehicle/AbstractMinecart cha
	DATA_ID_CUSTOM_DISPLAY j
	DATA_ID_DISPLAY_BLOCK e
	DATA_ID_DISPLAY_OFFSET i
	EXITS u
	LOWERED_PASSENGER_ATTACHMENT_Y c
	PASSENGER_ATTACHMENT_Y d
	POSE_DISMOUNT_HEIGHTS k
	WATER_SLOWDOWN_FACTOR b
	flipped l
	lerpSteps n
	lerpX o
	lerpXRot s
	lerpY p
	lerpYRot r
	lerpZ q
	onRails m
	targetDeltaMovement t
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	animateHurt (F)V m
	applyNaturalSlowdown ()V u
	canCollideWith (Lnet/minecraft/world/entity/Entity;)Z h
	comeOffTrack ()V s
	createMinecart (Lnet/minecraft/server/level/ServerLevel;DDDLnet/minecraft/world/entity/vehicle/AbstractMinecart$Type;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/entity/vehicle/AbstractMinecart; a
	defineSynchedData ()V c_
	exits (Lnet/minecraft/world/level/block/state/properties/RailShape;)Lcom/mojang/datafixers/util/Pair; a
	getBlockSpeedFactor ()F aL
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; i_
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; y
	getDefaultDisplayOffset ()I A
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; x
	getDisplayOffset ()I z
	getMaxSpeed ()D q
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; w
	getMotionDirection ()Lnet/minecraft/core/Direction; cF
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aW
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dz
	getPos (DDD)Lnet/minecraft/world/phys/Vec3; q
	getPosOffs (DDDD)Lnet/minecraft/world/phys/Vec3; a
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	hasCustomDisplay ()Z B
	isOnRails ()Z cf
	isPickable ()Z bt
	isPushable ()Z bu
	isRedstoneConductor (Lnet/minecraft/core/BlockPos;)Z a
	lerpMotion (DDD)V l
	lerpTargetX ()D p_
	lerpTargetXRot ()F f_
	lerpTargetY ()D N_
	lerpTargetYRot ()F q_
	lerpTargetZ ()D O_
	lerpTo (DDDFFI)V a
	moveAlongTrack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setCustomDisplay (Z)V a
	setDisplayBlockState (Lnet/minecraft/world/level/block/state/BlockState;)V c
	setDisplayOffset (I)V c
	tick ()V l
net/minecraft/world/entity/vehicle/AbstractMinecart$Type cha$a
	$VALUES h
	CHEST b
	COMMAND_BLOCK g
	FURNACE c
	HOPPER f
	RIDEABLE a
	SPAWNER e
	TNT d
	$values ()[Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; a
net/minecraft/world/entity/vehicle/AbstractMinecartContainer chb
	itemStacks c
	lootTable d
	lootTableSeed e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyNaturalSlowdown ()V u
	clearContent ()V a
	clearItemStacks ()V G
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getItemStacks ()Lnet/minecraft/core/NonNullList; E
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; C
	getLootTableSeed ()J D
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;J)V a
	setLootTableSeed (J)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/entity/vehicle/Boat chc
	BUBBLE_TIME e
	DATA_ID_BUBBLE_TIME l
	DATA_ID_PADDLE_LEFT j
	DATA_ID_PADDLE_RIGHT k
	DATA_ID_TYPE i
	PADDLE_LEFT b
	PADDLE_RIGHT c
	PADDLE_SOUND_TIME d
	PADDLE_SPEED n
	TIME_TO_EJECT m
	bubbleAngle aS
	bubbleAngleO aT
	bubbleColumnDirectionIsDown aQ
	bubbleMultiplier aR
	deltaRotation r
	inputDown aJ
	inputLeft aG
	inputRight aH
	inputUp aI
	invFriction p
	isAboveBubbleColumn aP
	landFriction aL
	lastYd aO
	lerpSteps s
	lerpX t
	lerpXRot aF
	lerpY u
	lerpYRot aE
	lerpZ v
	oldStatus aN
	outOfControlTicks q
	paddlePositions o
	status aM
	waterLevel aK
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	animateHurt (F)V m
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z r
	canBeCollidedWith ()Z bz
	canCollideWith (Lnet/minecraft/world/entity/Entity;)Z h
	canVehicleCollide (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkInWater ()Z D
	clampRotation (Lnet/minecraft/world/entity/Entity;)V b
	controlBoat ()V H
	defineSynchedData ()V c_
	floatBoat ()V G
	getBubbleAngle (F)F a
	getBubbleTime ()I I
	getControllingPassenger ()Lnet/minecraft/world/entity/LivingEntity; cN
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDropItem ()Lnet/minecraft/world/item/Item; ah_
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getGroundFriction ()F w
	getMaxPassengers ()I z
	getMotionDirection ()Lnet/minecraft/core/Direction; cF
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aW
	getPaddleSound ()Lnet/minecraft/sounds/SoundEvent; s
	getPaddleState (I)Z c
	getPassengerAttachmentPoint (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;F)Lorg/joml/Vector3f; a
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dz
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	getRowingTime (IF)F a
	getSinglePassengerXOffset ()F x
	getStatus ()Lnet/minecraft/world/entity/vehicle/Boat$Status; C
	getTypeName ()Lnet/minecraft/network/chat/Component; co
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/vehicle/Boat$Type; y
	getWaterLevelAbove ()F u
	hasEnoughSpaceFor (Lnet/minecraft/world/entity/Entity;)Z a
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isPickable ()Z bt
	isPushable ()Z bu
	isUnderWater ()Z be
	isUnderwater ()Lnet/minecraft/world/entity/vehicle/Boat$Status; E
	lerpTargetX ()D p_
	lerpTargetXRot ()F f_
	lerpTargetY ()D N_
	lerpTargetYRot ()F q_
	lerpTargetZ ()D O_
	lerpTo (DDDFFI)V a
	onAboveBubbleCol (Z)V k
	onPassengerTurned (Lnet/minecraft/world/entity/Entity;)V j
	positionRider (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V a
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setBubbleTime (I)V b
	setInput (ZZZZ)V a
	setPaddleState (ZZ)V a
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/vehicle/Boat$Type;)V a
	tick ()V l
	tickBubbleColumn ()V A
	tickLerp ()V B
net/minecraft/world/entity/vehicle/Boat$Status chc$a
	$VALUES f
	IN_AIR e
	IN_WATER a
	ON_LAND d
	UNDER_FLOWING_WATER c
	UNDER_WATER b
	$values ()[Lnet/minecraft/world/entity/vehicle/Boat$Status; a
net/minecraft/world/entity/vehicle/Boat$Type chc$b
	$VALUES n
	ACACIA e
	BAMBOO i
	BIRCH c
	BY_ID m
	CHERRY f
	CODEC j
	DARK_OAK g
	JUNGLE d
	MANGROVE h
	OAK a
	SPRUCE b
	name k
	planks l
	$values ()[Lnet/minecraft/world/entity/vehicle/Boat$Type; d
	byId (I)Lnet/minecraft/world/entity/vehicle/Boat$Type; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/vehicle/Boat$Type; a
	getName ()Ljava/lang/String; a
	getPlanks ()Lnet/minecraft/world/level/block/Block; b
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/vehicle/ChestBoat chd
	CONTAINER_SIZE i
	itemStacks j
	lootTable k
	lootTableSeed l
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	clearContent ()V a
	clearItemStacks ()V G
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getContainerSize ()I b
	getDropItem ()Lnet/minecraft/world/item/Item; ah_
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getItemStacks ()Lnet/minecraft/core/NonNullList; E
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; C
	getLootTableSeed ()J D
	getMaxPassengers ()I z
	getSinglePassengerXOffset ()F x
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	openCustomInventoryScreen (Lnet/minecraft/world/entity/player/Player;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;)V a
	setLootTableSeed (J)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c
	unpackLootTable (Lnet/minecraft/world/entity/player/Player;)V e
net/minecraft/world/entity/vehicle/ContainerEntity che
	addChestVehicleSaveData (Lnet/minecraft/nbt/CompoundTag;)V c
	chestVehicleDestroyed (Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)V a
	clearChestVehicleContent ()V f
	clearItemStacks ()V G
	getChestVehicleItem (I)Lnet/minecraft/world/item/ItemStack; f_
	getChestVehicleSlot (I)Lnet/minecraft/world/entity/SlotAccess; g_
	getItemStacks ()Lnet/minecraft/core/NonNullList; E
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; C
	getLootTableSeed ()J D
	interactWithContainerVehicle (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/InteractionResult; c_
	isChestVehicleEmpty ()Z g
	isChestVehicleStillValid (Lnet/minecraft/world/entity/player/Player;)Z g
	isEmpty ()Z ai_
	isRemoved ()Z dH
	level ()Lnet/minecraft/world/level/Level; dM
	position ()Lnet/minecraft/world/phys/Vec3; dk
	readChestVehicleSaveData (Lnet/minecraft/nbt/CompoundTag;)V b_
	removeChestVehicleItem (II)Lnet/minecraft/world/item/ItemStack; b
	removeChestVehicleItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; e_
	setChestVehicleItem (ILnet/minecraft/world/item/ItemStack;)V c
	setLootTable (Lnet/minecraft/resources/ResourceLocation;)V a
	setLootTableSeed (J)V a
	unpackChestVehicleLootTable (Lnet/minecraft/world/entity/player/Player;)V f
net/minecraft/world/entity/vehicle/DismountHelper chf
	canDismountTo (Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Z a
	canDismountTo (Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Pose;)Z a
	findCeilingFrom (Lnet/minecraft/core/BlockPos;ILjava/util/function/Function;)D a
	findSafeDismountLocation (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/phys/Vec3; a
	isBlockFloorValid (D)Z a
	nonClimbableShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	offsetsForDirection (Lnet/minecraft/core/Direction;)[[I a
net/minecraft/world/entity/vehicle/Minecart chg
	activateMinecart (IIIZ)V a
	getDropItem ()Lnet/minecraft/world/item/Item; ah_
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; w
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/entity/vehicle/MinecartChest chh
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; y
	getDefaultDisplayOffset ()I A
	getDropItem ()Lnet/minecraft/world/item/Item; ah_
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; w
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c
net/minecraft/world/entity/vehicle/MinecartCommandBlock chi
	ACTIVATION_DELAY i
	DATA_ID_COMMAND_NAME c
	DATA_ID_LAST_OUTPUT d
	commandBlock e
	lastActivated j
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V c_
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; C
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; y
	getDropItem ()Lnet/minecraft/world/item/Item; ah_
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; w
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onlyOpCanSetNbt ()Z cM
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/entity/vehicle/MinecartCommandBlock$MinecartCommandBase chi$a
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; i
	getLevel ()Lnet/minecraft/server/level/ServerLevel; e
	getMinecart ()Lnet/minecraft/world/entity/vehicle/MinecartCommandBlock; h
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	isValid ()Z j
	onUpdated ()V f
net/minecraft/world/entity/vehicle/MinecartFurnace chj
	DATA_ID_FUEL e
	INGREDIENT j
	fuel i
	xPush c
	zPush d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyNaturalSlowdown ()V u
	defineSynchedData ()V c_
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; y
	getDropItem ()Lnet/minecraft/world/item/Item; ah_
	getMaxSpeed ()D q
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; w
	hasFuel ()Z C
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	moveAlongTrack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setHasFuel (Z)V p
	tick ()V l
net/minecraft/world/entity/vehicle/MinecartHopper chk
	enabled i
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; y
	getDefaultDisplayOffset ()I A
	getDropItem ()Lnet/minecraft/world/item/Item; ah_
	getLevelX ()D I
	getLevelY ()D J
	getLevelZ ()D K
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; w
	isEnabled ()Z H
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setEnabled (Z)V p
	suckInItems ()Z M
	tick ()V l
net/minecraft/world/entity/vehicle/MinecartSpawner chl
	spawner c
	ticker d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createTicker (Lnet/minecraft/world/level/Level;)Ljava/lang/Runnable; b
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; y
	getDropItem ()Lnet/minecraft/world/item/Item; ah_
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; w
	getSpawner ()Lnet/minecraft/world/level/BaseSpawner; C
	handleEntityEvent (B)V b
	onlyOpCanSetNbt ()Z cM
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	tick ()V l
net/minecraft/world/entity/vehicle/MinecartTNT chm
	EVENT_PRIME c
	fuse d
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	damageSourceIgnitesTnt (Lnet/minecraft/world/damagesource/DamageSource;)Z e
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	explode (D)V h
	explode (Lnet/minecraft/world/damagesource/DamageSource;D)V a
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; y
	getDropItem ()Lnet/minecraft/world/item/Item; ah_
	getFuse ()I D
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; w
	handleEntityEvent (B)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPrimed ()Z E
	primeFuse ()V C
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
	shouldSourceDestroy (Lnet/minecraft/world/damagesource/DamageSource;)Z d
	tick ()V l
net/minecraft/world/entity/vehicle/VehicleEntity chn
	DATA_ID_DAMAGE h
	DATA_ID_HURT f
	DATA_ID_HURTDIR g
	defineSynchedData ()V c_
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	destroy (Lnet/minecraft/world/item/Item;)V b
	getDamage ()F N
	getDropItem ()Lnet/minecraft/world/item/Item; ah_
	getHurtDir ()I P
	getHurtTime ()I O
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	setDamage (F)V b
	setHurtDir (I)V m
	setHurtTime (I)V d
	shouldSourceDestroy (Lnet/minecraft/world/damagesource/DamageSource;)Z d
net/minecraft/world/flag/FeatureElement chp
	FILTERED_REGISTRIES bx
	isEnabled (Lnet/minecraft/world/flag/FeatureFlagSet;)Z a
	requiredFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; m
net/minecraft/world/flag/FeatureFlag chq
	mask b
	universe a
net/minecraft/world/flag/FeatureFlagRegistry chr
	LOGGER a
	allFlags d
	names c
	universe b
	allFlags ()Lnet/minecraft/world/flag/FeatureFlagSet; a
	codec ()Lcom/mojang/serialization/Codec; b
	fromNames (Ljava/lang/Iterable;)Lnet/minecraft/world/flag/FeatureFlagSet; a
	fromNames (Ljava/lang/Iterable;Ljava/util/function/Consumer;)Lnet/minecraft/world/flag/FeatureFlagSet; a
	isSubset (Lnet/minecraft/world/flag/FeatureFlagSet;)Z a
	subset ([Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/flag/FeatureFlagSet; a
	toNames (Lnet/minecraft/world/flag/FeatureFlagSet;)Ljava/util/Set; b
net/minecraft/world/flag/FeatureFlagRegistry$Builder chr$a
	flags c
	id b
	universe a
	build ()Lnet/minecraft/world/flag/FeatureFlagRegistry; a
	create (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/flag/FeatureFlag; a
	createVanilla (Ljava/lang/String;)Lnet/minecraft/world/flag/FeatureFlag; a
net/minecraft/world/flag/FeatureFlagSet chs
	EMPTY b
	MAX_CONTAINER_SIZE a
	mask d
	universe c
	computeMask (Lnet/minecraft/world/flag/FeatureFlagUniverse;JLjava/lang/Iterable;)J a
	contains (Lnet/minecraft/world/flag/FeatureFlag;)Z b
	create (Lnet/minecraft/world/flag/FeatureFlagUniverse;Ljava/util/Collection;)Lnet/minecraft/world/flag/FeatureFlagSet; a
	isSubsetOf (Lnet/minecraft/world/flag/FeatureFlagSet;)Z a
	join (Lnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/world/flag/FeatureFlagSet; b
	of ()Lnet/minecraft/world/flag/FeatureFlagSet; a
	of (Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/flag/FeatureFlagSet; a
	of (Lnet/minecraft/world/flag/FeatureFlag;[Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/flag/FeatureFlagSet; a
net/minecraft/world/flag/FeatureFlagUniverse cht
	id a
net/minecraft/world/flag/FeatureFlags chu
	BUNDLE b
	CODEC f
	DEFAULT_FLAGS h
	REGISTRY e
	TRADE_REBALANCE d
	UPDATE_1_21 c
	VANILLA a
	VANILLA_SET g
	isExperimental (Lnet/minecraft/world/flag/FeatureFlagSet;)Z a
	printMissingFlags (Lnet/minecraft/world/flag/FeatureFlagRegistry;Lnet/minecraft/world/flag/FeatureFlagSet;Lnet/minecraft/world/flag/FeatureFlagSet;)Ljava/lang/String; a
	printMissingFlags (Lnet/minecraft/world/flag/FeatureFlagSet;Lnet/minecraft/world/flag/FeatureFlagSet;)Ljava/lang/String; a
net/minecraft/world/food/FoodConstants chw
	EXHAUSTION_ATTACK u
	EXHAUSTION_CROUCH w
	EXHAUSTION_DROP e
	EXHAUSTION_HEAL q
	EXHAUSTION_JUMP r
	EXHAUSTION_MINE t
	EXHAUSTION_SPRINT x
	EXHAUSTION_SPRINT_JUMP s
	EXHAUSTION_SWIM y
	EXHAUSTION_WALK v
	FOOD_SATURATION_GOOD n
	FOOD_SATURATION_LOW l
	FOOD_SATURATION_MAX o
	FOOD_SATURATION_NORMAL m
	FOOD_SATURATION_POOR k
	FOOD_SATURATION_SUPERNATURAL p
	HEALTH_TICK_COUNT f
	HEALTH_TICK_COUNT_SATURATED g
	HEAL_LEVEL h
	MAX_FOOD a
	MAX_SATURATION b
	SATURATION_FLOOR d
	SPRINT_LEVEL i
	START_SATURATION c
	STARVE_LEVEL j
net/minecraft/world/food/FoodData chx
	exhaustionLevel c
	foodLevel a
	lastFoodLevel e
	saturationLevel b
	tickTimer d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addExhaustion (F)V a
	eat (IF)V a
	eat (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/ItemStack;)V a
	getExhaustionLevel ()F d
	getFoodLevel ()I a
	getLastFoodLevel ()I b
	getSaturationLevel ()F e
	needsFood ()Z c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setExhaustion (F)V c
	setFoodLevel (I)V a
	setSaturation (F)V b
	tick (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/food/FoodProperties chy
	canAlwaysEat d
	effects f
	fastFood e
	isMeat c
	nutrition a
	saturationModifier b
	canAlwaysEat ()Z d
	getEffects ()Ljava/util/List; f
	getNutrition ()I a
	getSaturationModifier ()F b
	isFastFood ()Z e
	isMeat ()Z c
net/minecraft/world/food/FoodProperties$Builder chy$a
	canAlwaysEat d
	effects f
	fastFood e
	isMeat c
	nutrition a
	saturationModifier b
	alwaysEat ()Lnet/minecraft/world/food/FoodProperties$Builder; b
	build ()Lnet/minecraft/world/food/FoodProperties; d
	effect (Lnet/minecraft/world/effect/MobEffectInstance;F)Lnet/minecraft/world/food/FoodProperties$Builder; a
	fast ()Lnet/minecraft/world/food/FoodProperties$Builder; c
	meat ()Lnet/minecraft/world/food/FoodProperties$Builder; a
	nutrition (I)Lnet/minecraft/world/food/FoodProperties$Builder; a
	saturationMod (F)Lnet/minecraft/world/food/FoodProperties$Builder; a
net/minecraft/world/food/Foods chz
	APPLE a
	BAKED_POTATO b
	BEEF c
	BEETROOT d
	BEETROOT_SOUP e
	BREAD f
	CARROT g
	CHICKEN h
	CHORUS_FRUIT i
	COD j
	COOKED_BEEF k
	COOKED_CHICKEN l
	COOKED_COD m
	COOKED_MUTTON n
	COOKED_PORKCHOP o
	COOKED_RABBIT p
	COOKED_SALMON q
	COOKIE r
	DRIED_KELP s
	ENCHANTED_GOLDEN_APPLE t
	GLOW_BERRIES M
	GOLDEN_APPLE u
	GOLDEN_CARROT v
	HONEY_BOTTLE w
	MELON_SLICE x
	MUSHROOM_STEW y
	MUTTON z
	POISONOUS_POTATO A
	PORKCHOP B
	POTATO C
	PUFFERFISH D
	PUMPKIN_PIE E
	RABBIT F
	RABBIT_STEW G
	ROTTEN_FLESH H
	SALMON I
	SPIDER_EYE J
	SUSPICIOUS_STEW K
	SWEET_BERRIES L
	TROPICAL_FISH N
	stew (I)Lnet/minecraft/world/food/FoodProperties$Builder; a
net/minecraft/world/inventory/AbstractContainerMenu cib
	CARRIED_SLOT_SIZE h
	LOGGER k
	QUICKCRAFT_HEADER_CONTINUE f
	QUICKCRAFT_HEADER_END g
	QUICKCRAFT_HEADER_START e
	QUICKCRAFT_TYPE_CHARITABLE b
	QUICKCRAFT_TYPE_CLONE d
	QUICKCRAFT_TYPE_GREEDY c
	SLOT_CLICKED_OUTSIDE a
	carried n
	containerId j
	containerListeners w
	dataSlots m
	lastSlots l
	menuType s
	quickcraftSlots v
	quickcraftStatus u
	quickcraftType t
	remoteCarried q
	remoteDataSlots p
	remoteSlots o
	slots i
	stateId r
	suppressRemoteUpdates y
	synchronizer x
	addDataSlot (Lnet/minecraft/world/inventory/DataSlot;)Lnet/minecraft/world/inventory/DataSlot; a
	addDataSlots (Lnet/minecraft/world/inventory/ContainerData;)V a
	addSlot (Lnet/minecraft/world/inventory/Slot;)Lnet/minecraft/world/inventory/Slot; a
	addSlotListener (Lnet/minecraft/world/inventory/ContainerListener;)V a
	broadcastChanges ()V d
	broadcastFullState ()V e
	canDragTo (Lnet/minecraft/world/inventory/Slot;)Z b
	canItemQuickReplace (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;Z)Z a
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	checkContainerDataCount (Lnet/minecraft/world/inventory/ContainerData;I)V a
	checkContainerSize (Lnet/minecraft/world/Container;I)V a
	clearContainer (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/Container;)V a
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z b
	clicked (IILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)V a
	createCarriedSlotAccess ()Lnet/minecraft/world/entity/SlotAccess; m
	doClick (IILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)V b
	findSlot (Lnet/minecraft/world/Container;I)Ljava/util/OptionalInt; b
	getCarried ()Lnet/minecraft/world/item/ItemStack; g
	getItems ()Lnet/minecraft/core/NonNullList; c
	getQuickCraftPlaceCount (Ljava/util/Set;ILnet/minecraft/world/item/ItemStack;)I a
	getQuickcraftHeader (I)I d
	getQuickcraftMask (II)I b
	getQuickcraftType (I)I c
	getRedstoneSignalFromBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)I a
	getRedstoneSignalFromContainer (Lnet/minecraft/world/Container;)I b
	getSlot (I)Lnet/minecraft/world/inventory/Slot; b
	getStateId ()I j
	getType ()Lnet/minecraft/world/inventory/MenuType; a
	incrementStateId ()I k
	initializeContents (ILjava/util/List;Lnet/minecraft/world/item/ItemStack;)V a
	isValidQuickcraftType (ILnet/minecraft/world/entity/player/Player;)Z a
	isValidSlotIndex (I)Z a
	moveItemStackTo (Lnet/minecraft/world/item/ItemStack;IIZ)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removeSlotListener (Lnet/minecraft/world/inventory/ContainerListener;)V b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	resetQuickCraft ()V f
	resumeRemoteUpdates ()V i
	sendAllDataToRemote ()V b
	setCarried (Lnet/minecraft/world/item/ItemStack;)V b
	setData (II)V a
	setItem (IILnet/minecraft/world/item/ItemStack;)V a
	setRemoteCarried (Lnet/minecraft/world/item/ItemStack;)V a
	setRemoteSlot (ILnet/minecraft/world/item/ItemStack;)V a
	setRemoteSlotNoCopy (ILnet/minecraft/world/item/ItemStack;)V b
	setSynchronizer (Lnet/minecraft/world/inventory/ContainerSynchronizer;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stillValid (Lnet/minecraft/world/inventory/ContainerLevelAccess;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/Block;)Z a
	suppressRemoteUpdates ()V h
	synchronizeCarriedToRemote ()V l
	synchronizeDataSlotToRemote (II)V d
	synchronizeSlotToRemote (ILnet/minecraft/world/item/ItemStack;Ljava/util/function/Supplier;)V b
	transferState (Lnet/minecraft/world/inventory/AbstractContainerMenu;)V a
	triggerSlotListeners (ILnet/minecraft/world/item/ItemStack;Ljava/util/function/Supplier;)V a
	tryItemClickBehaviourOverride (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	updateDataSlotListeners (II)V c
net/minecraft/world/inventory/AbstractFurnaceMenu cic
	DATA_COUNT o
	FUEL_SLOT l
	INGREDIENT_SLOT k
	INV_SLOT_END r
	INV_SLOT_START q
	RESULT_SLOT m
	SLOT_COUNT n
	USE_ROW_SLOT_END t
	USE_ROW_SLOT_START s
	container u
	data v
	level p
	recipeBookType x
	recipeType w
	canSmelt (Lnet/minecraft/world/item/ItemStack;)Z c
	clearCraftingContent ()V l
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getBurnProgress ()F q
	getGridHeight ()I o
	getGridWidth ()I n
	getLitProgress ()F r
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; t
	getResultSlotIndex ()I m
	getSize ()I p
	isFuel (Lnet/minecraft/world/item/ItemStack;)Z d
	isLit ()Z s
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	recipeMatches (Lnet/minecraft/world/item/crafting/RecipeHolder;)Z a
	shouldMoveToInventory (I)Z e
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/AnvilMenu cid
	ADDITIONAL_SLOT l
	ADDITIONAL_SLOT_X_PLACEMENT F
	COST_ADDED_BASE z
	COST_BASE y
	COST_FAIL x
	COST_INCOMPATIBLE_PENALTY C
	COST_RENAME D
	COST_REPAIR_MATERIAL A
	COST_REPAIR_SACRIFICE B
	DEBUG_COST t
	INPUT_SLOT k
	INPUT_SLOT_X_PLACEMENT E
	LOGGER s
	MAX_NAME_LENGTH n
	RESULT_SLOT m
	RESULT_SLOT_X_PLACEMENT G
	SLOT_Y_PLACEMENT H
	cost w
	itemName v
	repairItemCountCost u
	calculateIncreasedRepairCost (I)I e
	createInputSlotDefinitions ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition; l
	createResult ()V m
	getCost ()I n
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	setItemName (Ljava/lang/String;)Z a
	validateName (Ljava/lang/String;)Ljava/lang/String; b
net/minecraft/world/inventory/BeaconMenu cie
	DATA_COUNT m
	INV_SLOT_END o
	INV_SLOT_START n
	NO_EFFECT r
	PAYMENT_SLOT k
	SLOT_COUNT l
	USE_ROW_SLOT_END q
	USE_ROW_SLOT_START p
	access u
	beacon s
	beaconData v
	paymentSlot t
	decodeEffect (I)Lnet/minecraft/world/effect/MobEffect; e
	encodeEffect (Lnet/minecraft/world/effect/MobEffect;)I a
	getLevels ()I l
	getPrimaryEffect ()Lnet/minecraft/world/effect/MobEffect; m
	getSecondaryEffect ()Lnet/minecraft/world/effect/MobEffect; n
	hasPayment ()Z o
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setData (II)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	updateEffects (Ljava/util/Optional;Ljava/util/Optional;)V a
net/minecraft/world/inventory/BeaconMenu$PaymentSlot cie$a
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/BlastFurnaceMenu cif
net/minecraft/world/inventory/BrewingStandMenu cig
	BOTTLE_SLOT_END l
	BOTTLE_SLOT_START k
	DATA_COUNT p
	FUEL_SLOT n
	INGREDIENT_SLOT m
	INV_SLOT_END r
	INV_SLOT_START q
	SLOT_COUNT o
	USE_ROW_SLOT_END t
	USE_ROW_SLOT_START s
	brewingStand u
	brewingStandData v
	ingredientSlot w
	getBrewingTicks ()I m
	getFuel ()I l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/BrewingStandMenu$FuelSlot cig$a
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	mayPlaceItem (Lnet/minecraft/world/item/ItemStack;)Z b
net/minecraft/world/inventory/BrewingStandMenu$IngredientsSlot cig$b
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/BrewingStandMenu$PotionSlot cig$c
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	mayPlaceItem (Lnet/minecraft/world/item/ItemStack;)Z b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/inventory/CartographyTableMenu cih
	ADDITIONAL_SLOT l
	INV_SLOT_END p
	INV_SLOT_START o
	MAP_SLOT k
	RESULT_SLOT m
	USE_ROW_SLOT_END r
	USE_ROW_SLOT_START q
	access s
	container n
	lastSoundTime t
	resultContainer u
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupResultSlot (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ChestMenu cii
	SLOTS_PER_ROW k
	container l
	containerRows m
	fiveRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; e
	fourRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; d
	getContainer ()Lnet/minecraft/world/Container; l
	getRowCount ()I m
	oneRow (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	sixRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; f
	sixRows (ILnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/Container;)Lnet/minecraft/world/inventory/ChestMenu; b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	threeRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; c
	threeRows (ILnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/Container;)Lnet/minecraft/world/inventory/ChestMenu; a
	twoRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; b
net/minecraft/world/inventory/ClickAction cij
	$VALUES c
	PRIMARY a
	SECONDARY b
	$values ()[Lnet/minecraft/world/inventory/ClickAction; a
net/minecraft/world/inventory/ClickType cik
	$VALUES h
	CLONE d
	PICKUP a
	PICKUP_ALL g
	QUICK_CRAFT f
	QUICK_MOVE b
	SWAP c
	THROW e
	$values ()[Lnet/minecraft/world/inventory/ClickType; a
net/minecraft/world/inventory/ContainerData cil
	get (I)I a
	getCount ()I a
	set (II)V a
net/minecraft/world/inventory/ContainerLevelAccess cim
	NULL a
	create (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/inventory/ContainerLevelAccess; a
	evaluate (Ljava/util/function/BiFunction;)Ljava/util/Optional; a
	evaluate (Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object; a
	execute (Ljava/util/function/BiConsumer;)V a
net/minecraft/world/inventory/ContainerListener cin
	dataChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/inventory/ContainerSynchronizer cio
	sendCarriedChange (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/world/item/ItemStack;)V a
	sendDataChange (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	sendInitialData (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/core/NonNullList;Lnet/minecraft/world/item/ItemStack;[I)V a
	sendSlotChange (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/inventory/CrafterMenu cip
	INV_SLOT_END m
	INV_SLOT_START l
	SLOT_COUNT k
	USE_ROW_SLOT_END o
	USE_ROW_SLOT_START n
	container s
	containerData q
	player r
	resultContainer p
	addSlots (Lnet/minecraft/world/entity/player/Inventory;)V a
	dataChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	getContainer ()Lnet/minecraft/world/Container; m
	isPowered ()Z l
	isSlotDisabled (I)Z e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	refreshRecipeResult ()V n
	setSlotState (IZ)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/CrafterSlot ciq
	menu a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	setChanged ()V b
net/minecraft/world/inventory/CraftingContainer cir
	getHeight ()I g
	getItems ()Ljava/util/List; h
	getWidth ()I f
net/minecraft/world/inventory/CraftingMenu cis
	CRAFT_SLOT_END m
	CRAFT_SLOT_START l
	INV_SLOT_END o
	INV_SLOT_START n
	RESULT_SLOT k
	USE_ROW_SLOT_END q
	USE_ROW_SLOT_START p
	access t
	craftSlots r
	player u
	resultSlots s
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clearCraftingContent ()V l
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getGridHeight ()I o
	getGridWidth ()I n
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; t
	getResultSlotIndex ()I m
	getSize ()I p
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	recipeMatches (Lnet/minecraft/world/item/crafting/RecipeHolder;)Z a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	shouldMoveToInventory (I)Z e
	slotChangedCraftingGrid (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/inventory/ResultContainer;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/DataSlot cit
	prevValue a
	checkAndClearUpdateFlag ()Z c
	forContainer (Lnet/minecraft/world/inventory/ContainerData;I)Lnet/minecraft/world/inventory/DataSlot; a
	get ()I b
	set (I)V a
	shared ([II)Lnet/minecraft/world/inventory/DataSlot; a
	standalone ()Lnet/minecraft/world/inventory/DataSlot; a
net/minecraft/world/inventory/DispenserMenu ciu
	INV_SLOT_END m
	INV_SLOT_START l
	SLOT_COUNT k
	USE_ROW_SLOT_END o
	USE_ROW_SLOT_START n
	dispenser p
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/EnchantmentMenu civ
	EMPTY_SLOT_LAPIS_LAZULI n
	access p
	costs k
	enchantClue l
	enchantSlots o
	enchantmentSeed r
	levelClue m
	random q
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z b
	getEnchantmentList (Lnet/minecraft/world/item/ItemStack;II)Ljava/util/List; a
	getEnchantmentSeed ()I m
	getGoldCount ()I l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/FurnaceFuelSlot ciw
	menu a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I a_
	isBucket (Lnet/minecraft/world/item/ItemStack;)Z c
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/FurnaceMenu cix
net/minecraft/world/inventory/FurnaceResultSlot ciy
	player a
	removeCount b
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V b_
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/GrindstoneMenu ciz
	ADDITIONAL_SLOT m
	INPUT_SLOT l
	INV_SLOT_END p
	INV_SLOT_START o
	MAX_NAME_LENGTH k
	RESULT_SLOT n
	USE_ROW_SLOT_END r
	USE_ROW_SLOT_START q
	access u
	repairSlots t
	resultSlots s
	createResult ()V l
	mergeEnchants (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removeNonCurses (Lnet/minecraft/world/item/ItemStack;II)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/HopperMenu cja
	CONTAINER_SIZE k
	hopper l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/HorseInventoryMenu cjb
	horse l
	horseContainer k
	hasChest (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/InventoryMenu cjc
	ARMOR_SLOT_END p
	ARMOR_SLOT_START o
	BLOCK_ATLAS v
	CONTAINER_ID k
	CRAFT_SLOT_END n
	CRAFT_SLOT_START m
	EMPTY_ARMOR_SLOT_BOOTS z
	EMPTY_ARMOR_SLOT_CHESTPLATE x
	EMPTY_ARMOR_SLOT_HELMET w
	EMPTY_ARMOR_SLOT_LEGGINGS y
	EMPTY_ARMOR_SLOT_SHIELD A
	INV_SLOT_END r
	INV_SLOT_START q
	RESULT_SLOT l
	SHIELD_SLOT u
	SLOT_IDS D
	TEXTURE_EMPTY_SLOTS C
	USE_ROW_SLOT_END t
	USE_ROW_SLOT_START s
	active B
	craftSlots E
	owner G
	resultSlots F
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clearCraftingContent ()V l
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getCraftSlots ()Lnet/minecraft/world/inventory/CraftingContainer; q
	getGridHeight ()I o
	getGridWidth ()I n
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; t
	getResultSlotIndex ()I m
	getSize ()I p
	isHotbarSlot (I)Z f
	onEquipItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	recipeMatches (Lnet/minecraft/world/item/crafting/RecipeHolder;)Z a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	shouldMoveToInventory (I)Z e
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ItemCombinerMenu cjd
	INVENTORY_SLOTS_PER_COLUMN l
	INVENTORY_SLOTS_PER_ROW k
	access o
	inputSlotIndexes m
	inputSlots q
	player p
	resultSlotIndex n
	resultSlots r
	canMoveIntoInputSlots (Lnet/minecraft/world/item/ItemStack;)Z c
	createContainer (I)Lnet/minecraft/world/SimpleContainer; e
	createInputSlotDefinitions ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition; l
	createInputSlots (Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition;)V a
	createInventorySlots (Lnet/minecraft/world/entity/player/Inventory;)V a
	createResult ()V m
	createResultSlot (Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition;)V b
	getInventorySlotEnd ()I p
	getInventorySlotStart ()I n
	getResultSlot ()I o
	getSlotToQuickMoveTo (Lnet/minecraft/world/item/ItemStack;)I d
	getUseRowEnd ()I r
	getUseRowStart ()I q
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition cje
	resultSlot b
	slots a
	create ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$Builder; a
	getInputSlotIndexes ()Ljava/util/List; f
	getNumOfInputSlots ()I d
	getResultSlot ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$SlotDefinition; b
	getResultSlotIndex ()I e
	getSlot (I)Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$SlotDefinition; b
	getSlots ()Ljava/util/List; c
	hasSlot (I)Z a
net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$Builder cje$a
	resultSlot b
	slots a
	build ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition; a
	withResultSlot (III)Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$Builder; a
	withSlot (IIILjava/util/function/Predicate;)Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$Builder; a
net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$SlotDefinition cje$b
	EMPTY e
	mayPlace d
	slotIndex a
	x b
	y c
	mayPlace ()Ljava/util/function/Predicate; d
	slotIndex ()I a
	x ()I b
	y ()I c
net/minecraft/world/inventory/LecternMenu cjf
	BUTTON_NEXT_PAGE l
	BUTTON_PAGE_JUMP_RANGE_START n
	BUTTON_PREV_PAGE k
	BUTTON_TAKE_BOOK m
	DATA_COUNT o
	SLOT_COUNT p
	lectern q
	lecternData r
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z b
	getBook ()Lnet/minecraft/world/item/ItemStack; l
	getPage ()I m
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	setData (II)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/LoomMenu cjg
	INV_SLOT_END m
	INV_SLOT_START l
	PATTERN_NOT_SET k
	USE_ROW_SLOT_END o
	USE_ROW_SLOT_START n
	access p
	bannerSlot t
	dyeSlot u
	inputContainer y
	lastSoundTime x
	outputContainer z
	patternSlot v
	resultSlot w
	selectablePatterns r
	selectedBannerPatternIndex q
	slotUpdateListener s
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z b
	getBannerSlot ()Lnet/minecraft/world/inventory/Slot; n
	getDyeSlot ()Lnet/minecraft/world/inventory/Slot; o
	getPatternSlot ()Lnet/minecraft/world/inventory/Slot; p
	getResultSlot ()Lnet/minecraft/world/inventory/Slot; q
	getSelectablePatterns ()Ljava/util/List; l
	getSelectablePatterns (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; c
	getSelectedBannerPatternIndex ()I m
	isValidPatternIndex (I)Z e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	registerUpdateListener (Ljava/lang/Runnable;)V a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupResultSlot (Lnet/minecraft/core/Holder;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/MenuConstructor cjh
net/minecraft/world/inventory/MenuType cji
	ANVIL i
	BEACON j
	BLAST_FURNACE k
	BREWING_STAND l
	CARTOGRAPHY_TABLE x
	CRAFTER_3x3 h
	CRAFTING m
	ENCHANTMENT n
	FURNACE o
	GENERIC_3x3 g
	GENERIC_9x1 a
	GENERIC_9x2 b
	GENERIC_9x3 c
	GENERIC_9x4 d
	GENERIC_9x5 e
	GENERIC_9x6 f
	GRINDSTONE p
	HOPPER q
	LECTERN r
	LOOM s
	MERCHANT t
	SHULKER_BOX u
	SMITHING v
	SMOKER w
	STONECUTTER y
	constructor A
	requiredFeatures z
	create (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	register (Ljava/lang/String;Lnet/minecraft/world/inventory/MenuType$MenuSupplier;)Lnet/minecraft/world/inventory/MenuType; a
	register (Ljava/lang/String;Lnet/minecraft/world/inventory/MenuType$MenuSupplier;[Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/inventory/MenuType; a
	requiredFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; m
net/minecraft/world/inventory/MenuType$MenuSupplier cji$a
net/minecraft/world/inventory/MerchantContainer cjj
	activeOffer e
	futureXp g
	itemStacks d
	merchant c
	selectionHint f
	clearContent ()V a
	getActiveOffer ()Lnet/minecraft/world/item/trading/MerchantOffer; g
	getContainerSize ()I b
	getFutureXp ()I h
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	isEmpty ()Z ai_
	isPaymentSlot (I)Z d
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setSelectionHint (I)V c
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	updateSellItem ()V f
net/minecraft/world/inventory/MerchantMenu cjk
	BUYSLOT_X t
	INV_SLOT_END o
	INV_SLOT_START n
	PAYMENT1_SLOT k
	PAYMENT2_SLOT l
	RESULT_SLOT m
	ROW_Y u
	SELLSLOT1_X r
	SELLSLOT2_X s
	USE_ROW_SLOT_END q
	USE_ROW_SLOT_START p
	canRestock z
	merchantLevel x
	showProgressBar y
	tradeContainer w
	trader v
	canRestock ()Z o
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	getFutureTraderXp ()I m
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; p
	getTraderLevel ()I n
	getTraderXp ()I l
	moveFromInventoryToPaymentSlot (ILnet/minecraft/world/item/ItemStack;)V c
	playTradeSound ()V r
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setCanRestock (Z)V b
	setMerchantLevel (I)V g
	setOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	setSelectionHint (I)V e
	setShowProgressBar (Z)V a
	setXp (I)V f
	showProgressBar ()Z q
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	tryMoveItems (I)V h
net/minecraft/world/inventory/MerchantResultSlot cjl
	merchant h
	player b
	removeCount c
	slots a
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V b_
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/NonInteractiveResultSlot cjm
	allowModification (Lnet/minecraft/world/entity/player/Player;)Z b
	isFake ()Z f
	isHighlightable ()Z e
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
	safeInsert (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; d
	safeInsert (Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; b
	safeTake (IILnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; b
	tryRemove (IILnet/minecraft/world/entity/player/Player;)Ljava/util/Optional; a
net/minecraft/world/inventory/PlayerEnderChestContainer cjn
	activeChest c
	createTag ()Lnet/minecraft/nbt/ListTag; g
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
	isActiveChest (Lnet/minecraft/world/level/block/entity/EnderChestBlockEntity;)Z b
	setActiveChest (Lnet/minecraft/world/level/block/entity/EnderChestBlockEntity;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V d_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c
net/minecraft/world/inventory/RecipeBookMenu cjo
	clearCraftingContent ()V l
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getGridHeight ()I o
	getGridWidth ()I n
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; t
	getResultSlotIndex ()I m
	getSize ()I p
	handlePlacement (ZLnet/minecraft/world/item/crafting/RecipeHolder;Lnet/minecraft/server/level/ServerPlayer;)V a
	recipeMatches (Lnet/minecraft/world/item/crafting/RecipeHolder;)Z a
	shouldMoveToInventory (I)Z e
net/minecraft/world/inventory/RecipeBookType cjp
	$VALUES e
	BLAST_FURNACE c
	CRAFTING a
	FURNACE b
	SMOKER d
	$values ()[Lnet/minecraft/world/inventory/RecipeBookType; a
net/minecraft/world/inventory/RecipeCraftingHolder cjq
	awardUsedRecipes (Lnet/minecraft/world/entity/player/Player;Ljava/util/List;)V a
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/RecipeHolder; d
	setRecipeUsed (Lnet/minecraft/world/item/crafting/RecipeHolder;)V a
	setRecipeUsed (Lnet/minecraft/world/level/Level;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/RecipeHolder;)Z a
net/minecraft/world/inventory/ResultContainer cjr
	itemStacks c
	recipeUsed d
	clearContent ()V a
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/RecipeHolder; d
	isEmpty ()Z ai_
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setRecipeUsed (Lnet/minecraft/world/item/crafting/RecipeHolder;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ResultSlot cjs
	craftSlots a
	player b
	removeCount c
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V b_
	isFake ()Z f
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onSwapCraft (I)V b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/ShulkerBoxMenu cjt
	CONTAINER_SIZE k
	container l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ShulkerBoxSlot cju
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/SimpleContainerData cjv
	ints a
	get (I)I a
	getCount ()I a
	set (II)V a
net/minecraft/world/inventory/Slot cjw
	container d
	index e
	slot a
	x f
	y g
	allowModification (Lnet/minecraft/world/entity/player/Player;)Z b
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V b_
	getContainerSlot ()I i
	getItem ()Lnet/minecraft/world/item/ItemStack; g
	getMaxStackSize ()I a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I a_
	getNoItemIcon ()Lcom/mojang/datafixers/util/Pair; c
	hasItem ()Z h
	isActive ()Z d
	isFake ()Z f
	isHighlightable ()Z e
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V b
	onSwapCraft (I)V b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
	safeInsert (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; d
	safeInsert (Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; b
	safeTake (IILnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; b
	set (Lnet/minecraft/world/item/ItemStack;)V f
	setByPlayer (Lnet/minecraft/world/item/ItemStack;)V e
	setByPlayer (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	setChanged ()V b
	tryRemove (IILnet/minecraft/world/entity/player/Player;)Ljava/util/Optional; a
net/minecraft/world/inventory/SmithingMenu cjx
	ADDITIONAL_SLOT m
	ADDITIONAL_SLOT_X_PLACEMENT u
	BASE_SLOT l
	BASE_SLOT_X_PLACEMENT t
	RESULT_SLOT n
	RESULT_SLOT_X_PLACEMENT w
	SLOT_Y_PLACEMENT v
	TEMPLATE_SLOT k
	TEMPLATE_SLOT_X_PLACEMENT s
	level x
	recipes z
	selectedRecipe y
	canMoveIntoInputSlots (Lnet/minecraft/world/item/ItemStack;)Z c
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	createInputSlotDefinitions ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition; l
	createResult ()V m
	findSlotMatchingIngredient (Lnet/minecraft/world/item/crafting/SmithingRecipe;Lnet/minecraft/world/item/ItemStack;)Ljava/util/OptionalInt; a
	findSlotToQuickMoveTo (Lnet/minecraft/world/item/ItemStack;)Ljava/util/OptionalInt; e
	getRelevantItems ()Ljava/util/List; n
	getSlotToQuickMoveTo (Lnet/minecraft/world/item/ItemStack;)I d
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	shrinkStackInSlot (I)V e
net/minecraft/world/inventory/SmokerMenu cjy
net/minecraft/world/inventory/StackedContentsCompatible cjz
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
net/minecraft/world/inventory/StonecutterMenu cka
	INPUT_SLOT k
	INV_SLOT_END q
	INV_SLOT_START p
	RESULT_SLOT l
	USE_ROW_SLOT_END s
	USE_ROW_SLOT_START r
	access t
	container o
	input x
	inputSlot m
	lastSoundTime y
	level v
	recipes w
	resultContainer A
	resultSlot n
	selectedRecipeIndex u
	slotUpdateListener z
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z b
	getNumRecipes ()I n
	getRecipes ()Ljava/util/List; m
	getSelectedRecipeIndex ()I l
	getType ()Lnet/minecraft/world/inventory/MenuType; a
	hasInputItem ()Z o
	isValidRecipeIndex (I)Z e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	registerUpdateListener (Ljava/lang/Runnable;)V a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupRecipeList (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;)V a
	setupResultSlot ()V p
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/TransientCraftingContainer ckb
	height e
	items c
	menu f
	width d
	clearContent ()V a
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getContainerSize ()I b
	getHeight ()I g
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getItems ()Ljava/util/List; h
	getWidth ()I f
	isEmpty ()Z ai_
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/tooltip/BundleTooltip ckd
	items a
	weight b
	getItems ()Lnet/minecraft/core/NonNullList; a
	getWeight ()I b
net/minecraft/world/inventory/tooltip/TooltipComponent cke
net/minecraft/world/item/AdventureModeCheck ckg
	checksBlockEntity d
	lastCheckedBlock b
	lastResult c
	tagName a
	areSameBlocks (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;Z)Z a
	test (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/world/item/AirItem ckh
	block a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/item/ArmorItem cki
	ARMOR_MODIFIER_UUID_PER_TYPE e
	DISPENSE_ITEM_BEHAVIOR a
	defaultModifiers h
	defense f
	knockbackResistance c
	material d
	toughness g
	type b
	dispenseArmor (Lnet/minecraft/core/dispenser/BlockSource;Lnet/minecraft/world/item/ItemStack;)Z a
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDefense ()I e
	getEnchantmentValue ()I c
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; as_
	getEquipmentSlot ()Lnet/minecraft/world/entity/EquipmentSlot; g
	getMaterial ()Lnet/minecraft/world/item/ArmorMaterial; d
	getToughness ()F f
	getType ()Lnet/minecraft/world/item/ArmorItem$Type; b
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ArmorItem$Type cki$a
	$VALUES g
	BOOTS d
	CHESTPLATE b
	HELMET a
	LEGGINGS c
	name f
	slot e
	$values ()[Lnet/minecraft/world/item/ArmorItem$Type; c
	getName ()Ljava/lang/String; b
	getSlot ()Lnet/minecraft/world/entity/EquipmentSlot; a
net/minecraft/world/item/ArmorMaterial ckj
	getDefenseForType (Lnet/minecraft/world/item/ArmorItem$Type;)I b
	getDurabilityForType (Lnet/minecraft/world/item/ArmorItem$Type;)I a
	getEnchantmentValue ()I a
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; b
	getKnockbackResistance ()F g
	getName ()Ljava/lang/String; e
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; d
	getToughness ()F f
net/minecraft/world/item/ArmorMaterials ckk
	$VALUES r
	CHAIN b
	CODEC h
	DIAMOND e
	GOLD d
	HEALTH_FUNCTION_FOR_TYPE i
	IRON c
	LEATHER a
	NETHERITE g
	TURTLE f
	durabilityMultiplier k
	enchantmentValue m
	knockbackResistance p
	name j
	protectionFunctionForType l
	repairIngredient q
	sound n
	toughness o
	$values ()[Lnet/minecraft/world/item/ArmorMaterials; o
	getDefenseForType (Lnet/minecraft/world/item/ArmorItem$Type;)I b
	getDurabilityForType (Lnet/minecraft/world/item/ArmorItem$Type;)I a
	getEnchantmentValue ()I a
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; b
	getKnockbackResistance ()F g
	getName ()Ljava/lang/String; e
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; d
	getSerializedName ()Ljava/lang/String; c
	getToughness ()F f
net/minecraft/world/item/ArmorStandItem ckl
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ArrowItem ckm
	createArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
net/minecraft/world/item/AxeItem ckn
	STRIPPABLES a
	evaluateNewBlockState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; a
	getStripped (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BannerItem cko
	PATTERN_PREFIX c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	appendHoverTextFromBannerBlockEntityTag (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)V a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
net/minecraft/world/item/BannerPatternItem ckp
	bannerPattern a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getBannerPattern ()Lnet/minecraft/tags/TagKey; b
	getDisplayName ()Lnet/minecraft/network/chat/MutableComponent; d
net/minecraft/world/item/BedItem ckq
	placeBlock (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/BlockItem ckr
	BLOCK_ENTITY_TAG a
	BLOCK_STATE_TAG b
	block c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	canFitInsideContainerItems ()Z ap_
	canPlace (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	getBlock ()Lnet/minecraft/world/level/block/Block; e
	getBlockEntityData (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/CompoundTag; a
	getDescriptionId ()Ljava/lang/String; a
	getPlaceSound (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/sounds/SoundEvent; a
	getPlacementState (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
	mustSurvive ()Z d
	onDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	place (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/InteractionResult; a
	placeBlock (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	registerBlocks (Ljava/util/Map;Lnet/minecraft/world/item/Item;)V a
	requiredFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; m
	setBlockEntityData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/nbt/CompoundTag;)V a
	updateBlockStateFromTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateCustomBlockEntityTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	updateCustomBlockEntityTag (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Z a
	updatePlacementContext (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/item/context/BlockPlaceContext; b
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Lnet/minecraft/world/level/block/state/BlockState; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BoatItem cks
	ENTITY_PREDICATE a
	hasChest c
	type b
	getBoat (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/HitResult;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/entity/vehicle/Boat; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BoneMealItem ckt
	GRASS_COUNT_MULTIPLIER c
	GRASS_SPREAD_HEIGHT b
	GRASS_SPREAD_WIDTH a
	addGrowthParticles (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	growCrop (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	growWaterPlant (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BookItem cku
	getEnchantmentValue ()I c
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z d_
net/minecraft/world/item/BottleItem ckv
	turnBottleIntoItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BowItem ckw
	DEFAULT_RANGE b
	MAX_DRAW_DURATION a
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getDefaultProjectileRange ()I d
	getPowerForTime (I)F a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BowlFoodItem ckx
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/BrushItem cky
	ANIMATION_DURATION a
	USE_DURATION b
	calculateHitResult (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/phys/HitResult; a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;I)V a
	spawnDustParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/HumanoidArm;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BrushItem$DustParticlesDelta cky$a
	ALONG_SIDE_DELTA d
	OUT_FROM_SIDE_DELTA e
	xd a
	yd b
	zd c
	fromDirection (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/item/BrushItem$DustParticlesDelta; a
	xd ()D a
	yd ()D b
	zd ()D c
net/minecraft/world/item/BucketItem ckz
	content a
	checkExtraContent (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	emptyContents (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/BlockHitResult;)Z a
	getEmptySuccessItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; a
	playEmptySound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BundleItem cla
	BAR_COLOR d
	BUNDLE_IN_BUNDLE_WEIGHT c
	MAX_WEIGHT a
	TAG_ITEMS b
	add (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)I b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	dropContents (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Z a
	getBarColor (Lnet/minecraft/world/item/ItemStack;)I g
	getBarWidth (Lnet/minecraft/world/item/ItemStack;)I f
	getContentWeight (Lnet/minecraft/world/item/ItemStack;)I o
	getContents (Lnet/minecraft/world/item/ItemStack;)Ljava/util/stream/Stream; q
	getFullnessDisplay (Lnet/minecraft/world/item/ItemStack;)F d
	getMatchingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/nbt/ListTag;)Ljava/util/Optional; a
	getTooltipImage (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; h
	getWeight (Lnet/minecraft/world/item/ItemStack;)I k
	isBarVisible (Lnet/minecraft/world/item/ItemStack;)Z e
	onDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	overrideOtherStackedOnMe (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/SlotAccess;)Z a
	overrideStackedOnOther (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;)Z a
	playDropContentsSound (Lnet/minecraft/world/entity/Entity;)V c
	playInsertSound (Lnet/minecraft/world/entity/Entity;)V b
	playRemoveOneSound (Lnet/minecraft/world/entity/Entity;)V a
	removeOne (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; p
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ChorusFruitItem clb
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/CompassItem clc
	LOGGER d
	TAG_LODESTONE_DIMENSION b
	TAG_LODESTONE_POS a
	TAG_LODESTONE_TRACKED c
	addLodestoneTags (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)V a
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
	getLodestoneDimension (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; c
	getLodestonePosition (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/core/GlobalPos; a
	getSpawnPosition (Lnet/minecraft/world/level/Level;)Lnet/minecraft/core/GlobalPos; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	isLodestoneCompass (Lnet/minecraft/world/item/ItemStack;)Z d
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ComplexItem cld
	getUpdatePacket (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	isComplex ()Z al_
net/minecraft/world/item/CreativeModeTab cle
	alignedRight e
	backgroundSuffix b
	canScroll c
	column g
	displayItems j
	displayItemsGenerator n
	displayItemsSearchTab k
	displayName a
	iconGenerator m
	iconItemStack i
	row f
	searchTreeBuilder l
	showTitle d
	type h
	buildContents (Lnet/minecraft/world/item/CreativeModeTab$ItemDisplayParameters;)V a
	builder (Lnet/minecraft/world/item/CreativeModeTab$Row;I)Lnet/minecraft/world/item/CreativeModeTab$Builder; a
	canScroll ()Z e
	column ()I f
	contains (Lnet/minecraft/world/item/ItemStack;)Z a
	getBackgroundSuffix ()Ljava/lang/String; c
	getDisplayItems ()Ljava/util/Collection; l
	getDisplayName ()Lnet/minecraft/network/chat/Component; a
	getIconItem ()Lnet/minecraft/world/item/ItemStack; b
	getSearchTabDisplayItems ()Ljava/util/Collection; m
	getType ()Lnet/minecraft/world/item/CreativeModeTab$Type; k
	hasAnyItems ()Z h
	isAlignedRight ()Z j
	rebuildSearchTree ()V n
	row ()Lnet/minecraft/world/item/CreativeModeTab$Row; g
	setSearchTreeBuilder (Ljava/util/function/Consumer;)V a
	shouldDisplay ()Z i
	showTitle ()Z d
net/minecraft/world/item/CreativeModeTab$Builder cle$a
	EMPTY_GENERATOR a
	alignedRight i
	backgroundSuffix k
	canScroll g
	column c
	displayItemsGenerator f
	displayName d
	iconGenerator e
	row b
	showTitle h
	type j
	alignedRight ()Lnet/minecraft/world/item/CreativeModeTab$Builder; a
	backgroundSuffix (Ljava/lang/String;)Lnet/minecraft/world/item/CreativeModeTab$Builder; a
	build ()Lnet/minecraft/world/item/CreativeModeTab; d
	displayItems (Lnet/minecraft/world/item/CreativeModeTab$DisplayItemsGenerator;)Lnet/minecraft/world/item/CreativeModeTab$Builder; a
	hideTitle ()Lnet/minecraft/world/item/CreativeModeTab$Builder; b
	icon (Ljava/util/function/Supplier;)Lnet/minecraft/world/item/CreativeModeTab$Builder; a
	noScrollBar ()Lnet/minecraft/world/item/CreativeModeTab$Builder; c
	title (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/item/CreativeModeTab$Builder; a
	type (Lnet/minecraft/world/item/CreativeModeTab$Type;)Lnet/minecraft/world/item/CreativeModeTab$Builder; a
net/minecraft/world/item/CreativeModeTab$DisplayItemsGenerator cle$b
net/minecraft/world/item/CreativeModeTab$ItemDisplayBuilder cle$c
	featureFlagSet d
	searchTabContents b
	tab c
	tabContents a
	accept (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V a
net/minecraft/world/item/CreativeModeTab$ItemDisplayParameters cle$d
	enabledFeatures a
	hasPermissions b
	holders c
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; a
	hasPermissions ()Z b
	holders ()Lnet/minecraft/core/HolderLookup$Provider; c
	needsUpdate (Lnet/minecraft/world/flag/FeatureFlagSet;ZLnet/minecraft/core/HolderLookup$Provider;)Z a
net/minecraft/world/item/CreativeModeTab$Output cle$e
	accept (Lnet/minecraft/world/item/ItemStack;)V a
	accept (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V a
	accept (Lnet/minecraft/world/level/ItemLike;)V a
	accept (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V a
	acceptAll (Ljava/util/Collection;)V a
	acceptAll (Ljava/util/Collection;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V a
net/minecraft/world/item/CreativeModeTab$Row cle$f
	$VALUES c
	BOTTOM b
	TOP a
	$values ()[Lnet/minecraft/world/item/CreativeModeTab$Row; a
net/minecraft/world/item/CreativeModeTab$TabVisibility cle$g
	$VALUES d
	PARENT_AND_SEARCH_TABS a
	PARENT_TAB_ONLY b
	SEARCH_TAB_ONLY c
	$values ()[Lnet/minecraft/world/item/CreativeModeTab$TabVisibility; a
net/minecraft/world/item/CreativeModeTab$Type cle$h
	$VALUES e
	CATEGORY a
	HOTBAR c
	INVENTORY b
	SEARCH d
	$values ()[Lnet/minecraft/world/item/CreativeModeTab$Type; a
net/minecraft/world/item/CreativeModeTabs clf
	BUILDING_BLOCKS a
	CACHED_PARAMETERS p
	COLORED_BLOCKS b
	COMBAT i
	FOOD_AND_DRINKS j
	FUNCTIONAL_BLOCKS d
	HOTBAR f
	INGREDIENTS k
	INVENTORY n
	NATURAL_BLOCKS c
	OP_BLOCKS m
	PAINTING_COMPARATOR o
	REDSTONE_BLOCKS e
	SEARCH g
	SPAWN_EGGS l
	TOOLS_AND_UTILITIES h
	allTabs ()Ljava/util/List; d
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/item/CreativeModeTab; a
	buildAllTabContents (Lnet/minecraft/world/item/CreativeModeTab$ItemDisplayParameters;)V a
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	generateEnchantmentBookTypesAllLevels (Lnet/minecraft/world/item/CreativeModeTab$Output;Lnet/minecraft/core/HolderLookup;Ljava/util/Set;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V b
	generateEnchantmentBookTypesOnlyMaxLevel (Lnet/minecraft/world/item/CreativeModeTab$Output;Lnet/minecraft/core/HolderLookup;Ljava/util/Set;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V a
	generateFireworksAllDurations (Lnet/minecraft/world/item/CreativeModeTab$Output;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V b
	generateInstrumentTypes (Lnet/minecraft/world/item/CreativeModeTab$Output;Lnet/minecraft/core/HolderLookup;Lnet/minecraft/world/item/Item;Lnet/minecraft/tags/TagKey;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V a
	generatePotionEffectTypes (Lnet/minecraft/world/item/CreativeModeTab$Output;Lnet/minecraft/core/HolderLookup;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V a
	generatePresetPaintings (Lnet/minecraft/world/item/CreativeModeTab$Output;Lnet/minecraft/core/HolderLookup$RegistryLookup;Ljava/util/function/Predicate;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V a
	generateSuspiciousStews (Lnet/minecraft/world/item/CreativeModeTab$Output;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V a
	getDefaultTab ()Lnet/minecraft/world/item/CreativeModeTab; b
	searchTab ()Lnet/minecraft/world/item/CreativeModeTab; e
	streamAllTabs ()Ljava/util/stream/Stream; f
	tabs ()Ljava/util/List; c
	tryRebuildTabContents (Lnet/minecraft/world/flag/FeatureFlagSet;ZLnet/minecraft/core/HolderLookup$Provider;)Z a
	validate ()V a
net/minecraft/world/item/CrossbowItem clg
	ARROW_POWER k
	DEFAULT_RANGE a
	FIREWORK_POWER r
	MAX_CHARGE_DURATION f
	MID_SOUND_PERCENT j
	START_SOUND_PERCENT i
	TAG_CHARGED b
	TAG_CHARGED_PROJECTILES e
	midLoadSoundPlayed h
	startSoundPlayed g
	addChargedProjectile (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	clearChargedProjectiles (Lnet/minecraft/world/item/ItemStack;)V q
	containsChargedProjectile (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/Item;)Z a
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
	getChargeDuration (Lnet/minecraft/world/item/ItemStack;)I k
	getChargedProjectiles (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; p
	getDefaultProjectileRange ()I d
	getPowerForTime (ILnet/minecraft/world/item/ItemStack;)F a
	getRandomShotPitch (ZLnet/minecraft/util/RandomSource;)F a
	getShootingPower (Lnet/minecraft/world/item/ItemStack;)F o
	getShotPitches (Lnet/minecraft/util/RandomSource;)[F a
	getStartSound (I)Lnet/minecraft/sounds/SoundEvent; a
	getSupportedHeldProjectiles ()Ljava/util/function/Predicate; e
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	isCharged (Lnet/minecraft/world/item/ItemStack;)Z d
	loadProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;ZZ)Z a
	onCrossbowShot (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;I)V a
	performShooting (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;FF)V a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	setCharged (Lnet/minecraft/world/item/ItemStack;Z)V a
	shootProjectile (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;FZFFF)V a
	tryLoadProjectiles (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOnRelease (Lnet/minecraft/world/item/ItemStack;)Z l
net/minecraft/world/item/DebugStickItem clh
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	cycleState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	getNameHelper (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/String; a
	getRelative (Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object; a
	handleInteraction (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/item/ItemStack;)Z a
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	message (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/DiggerItem cli
	attackDamageBaseline c
	blocks a
	defaultModifiers d
	speed b
	getAttackDamage ()F d
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/item/DiscFragmentItem clj
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getDisplayName ()Lnet/minecraft/network/chat/MutableComponent; d
net/minecraft/world/item/DispensibleContainerItem clk
	checkExtraContent (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	emptyContents (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/BlockHitResult;)Z a
net/minecraft/world/item/DoubleHighBlockItem cll
	placeBlock (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/DyeColor clm
	$VALUES z
	BLACK p
	BLUE l
	BROWN m
	BY_FIREWORK_COLOR s
	BY_ID r
	CODEC q
	CYAN j
	GRAY h
	GREEN n
	LIGHT_BLUE d
	LIGHT_GRAY i
	LIME f
	MAGENTA c
	ORANGE b
	PINK g
	PURPLE k
	RED o
	WHITE a
	YELLOW e
	fireworkColor x
	id t
	mapColor v
	name u
	textColor y
	textureDiffuseColors w
	$values ()[Lnet/minecraft/world/item/DyeColor; h
	byFireworkColor (I)Lnet/minecraft/world/item/DyeColor; b
	byId (I)Lnet/minecraft/world/item/DyeColor; a
	byName (Ljava/lang/String;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/DyeColor; a
	getFireworkColor ()I f
	getId ()I a
	getMapColor ()Lnet/minecraft/world/level/material/MapColor; e
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; c
	getTextColor ()I g
	getTextureDiffuseColors ()[F d
net/minecraft/world/item/DyeItem cln
	ITEM_BY_COLOR a
	dyeColor b
	byColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/DyeItem; a
	getDyeColor ()Lnet/minecraft/world/item/DyeColor; d
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	tryApplyToSign (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/SignBlockEntity;ZLnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/item/DyeableArmorItem clo
net/minecraft/world/item/DyeableHorseArmorItem clp
net/minecraft/world/item/DyeableLeatherItem clq
	DEFAULT_LEATHER_COLOR r_
	TAG_COLOR p_
	TAG_DISPLAY q_
	clearColor (Lnet/minecraft/world/item/ItemStack;)V f_
	dyeArmor (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)Lnet/minecraft/world/item/ItemStack; a
	getColor (Lnet/minecraft/world/item/ItemStack;)I e_
	hasCustomColor (Lnet/minecraft/world/item/ItemStack;)Z a
	setColor (Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/world/item/EggItem clr
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ElytraItem cls
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; as_
	getEquipmentSlot ()Lnet/minecraft/world/entity/EquipmentSlot; g
	isFlyEnabled (Lnet/minecraft/world/item/ItemStack;)Z d
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/EmptyMapItem clt
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/EnchantedBookItem clu
	TAG_STORED_ENCHANTMENTS a
	addEnchantment (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	createForEnchantment (Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)Lnet/minecraft/world/item/ItemStack; a
	getEnchantments (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/ListTag; d
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z d_
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
net/minecraft/world/item/EnchantedGoldenAppleItem clv
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
net/minecraft/world/item/EndCrystalItem clw
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/EnderEyeItem clx
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/EnderpearlItem cly
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/Equipable clz
	get (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/Equipable; c_
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; as_
	getEquipmentSlot ()Lnet/minecraft/world/entity/EquipmentSlot; g
	swapWithEquipmentSlot (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ExperienceBottleItem cma
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/FireChargeItem cmb
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FireworkRocketItem cmc
	CRAFTABLE_DURATIONS a
	ROCKET_PLACEMENT_OFFSET k
	TAG_EXPLOSION c
	TAG_EXPLOSIONS d
	TAG_EXPLOSION_COLORS i
	TAG_EXPLOSION_FADECOLORS j
	TAG_EXPLOSION_FLICKER h
	TAG_EXPLOSION_TRAIL g
	TAG_EXPLOSION_TYPE f
	TAG_FIREWORKS b
	TAG_FLIGHT e
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; am_
	setDuration (Lnet/minecraft/world/item/ItemStack;B)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FireworkRocketItem$Shape cmc$a
	$VALUES i
	BURST e
	BY_ID f
	CREEPER d
	LARGE_BALL b
	SMALL_BALL a
	STAR c
	id g
	name h
	$values ()[Lnet/minecraft/world/item/FireworkRocketItem$Shape; c
	byId (I)Lnet/minecraft/world/item/FireworkRocketItem$Shape; a
	getId ()I a
	getName ()Ljava/lang/String; b
net/minecraft/world/item/FireworkStarItem cmd
	appendColors (Lnet/minecraft/network/chat/MutableComponent;[I)Lnet/minecraft/network/chat/Component; a
	appendHoverText (Lnet/minecraft/nbt/CompoundTag;Ljava/util/List;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getColorName (I)Lnet/minecraft/network/chat/Component; a
net/minecraft/world/item/FishingRodItem cme
	getEnchantmentValue ()I c
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/FlintAndSteelItem cmf
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FoodOnAStickItem cmg
	canInteractWith a
	consumeItemDamage b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/GameMasterBlockItem cmh
	getPlacementState (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/item/GlowInkSacItem cmi
	tryApplyToSign (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/SignBlockEntity;ZLnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/item/HangingEntityItem cmj
	TOOLTIP_RANDOM_VARIANT a
	type b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	mayPlace (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Z a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/HangingSignItem cmk
	canPlace (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/item/HoeItem cml
	TILLABLES a
	changeIntoState (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/function/Consumer; b
	changeIntoStateAndDropItem (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/ItemLike;)Ljava/util/function/Consumer; a
	onlyIfAirAbove (Lnet/minecraft/world/item/context/UseOnContext;)Z b
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/HoneyBottleItem cmm
	DRINK_DURATION a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; an_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; ao_
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/HoneycombItem cmn
	WAXABLES a
	WAX_OFF_BY_BLOCK b
	canApplyToSign (Lnet/minecraft/world/level/block/entity/SignText;Lnet/minecraft/world/entity/player/Player;)Z a
	getWaxed (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	tryApplyToSign (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/SignBlockEntity;ZLnet/minecraft/world/entity/player/Player;)Z a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/HorseArmorItem cmo
	TEX_FOLDER a
	protection b
	texture c
	getProtection ()I i
	getTexture ()Lnet/minecraft/resources/ResourceLocation; h
net/minecraft/world/item/InkSacItem cmp
	tryApplyToSign (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/SignBlockEntity;ZLnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/item/Instrument cmq
	CODEC a
	range d
	soundEvent b
	useDuration c
	range ()F c
	soundEvent ()Lnet/minecraft/core/Holder; a
	useDuration ()I b
net/minecraft/world/item/InstrumentItem cmr
	TAG_INSTRUMENT a
	instruments b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	create (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/item/ItemStack; a
	getInstrument (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; d
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	play (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/Instrument;)V a
	setRandom (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/tags/TagKey;Lnet/minecraft/util/RandomSource;)V a
	setSoundVariantId (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Holder;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/Instruments cms
	ADMIRE_GOAT_HORN g
	CALL_GOAT_HORN h
	DREAM_GOAT_HORN j
	FEEL_GOAT_HORN f
	GOAT_HORN_DURATION b
	GOAT_HORN_RANGE_BLOCKS a
	PONDER_GOAT_HORN c
	SEEK_GOAT_HORN e
	SING_GOAT_HORN d
	YEARN_GOAT_HORN i
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/item/Instrument; a
	create (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/item/Item cmt
	BASE_ATTACK_DAMAGE_UUID m
	BASE_ATTACK_SPEED_UUID n
	BY_BLOCK l
	EAT_DURATION p
	LOGGER a
	MAX_BAR_WIDTH q
	MAX_STACK_SIZE o
	builtInRegistryHolder b
	craftingRemainingItem g
	descriptionId h
	foodProperties i
	isFireResistant f
	maxDamage e
	maxStackSize d
	rarity c
	requiredFeatures j
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	asItem ()Lnet/minecraft/world/item/Item; k
	builtInRegistryHolder ()Lnet/minecraft/core/Holder$Reference; j
	byBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; a
	byId (I)Lnet/minecraft/world/item/Item; b
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	canBeDepleted ()Z o
	canBeHurtBy (Lnet/minecraft/world/damagesource/DamageSource;)Z a
	canFitInsideContainerItems ()Z ap_
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getBarColor (Lnet/minecraft/world/item/ItemStack;)I g
	getBarWidth (Lnet/minecraft/world/item/ItemStack;)I f
	getCraftingRemainingItem ()Lnet/minecraft/world/item/Item; s
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; am_
	getDescription ()Lnet/minecraft/network/chat/Component; p
	getDescriptionId ()Ljava/lang/String; a
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; an_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; ao_
	getEnchantmentValue ()I c
	getFoodProperties ()Lnet/minecraft/world/food/FoodProperties; v
	getId (Lnet/minecraft/world/item/Item;)I a
	getMaxDamage ()I n
	getMaxStackSize ()I l
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; m
	getOrCreateDescriptionId ()Ljava/lang/String; q
	getPlayerPOVHitResult (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/ClipContext$Fluid;)Lnet/minecraft/world/phys/BlockHitResult; a
	getRarity (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/Rarity; n
	getTooltipImage (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; h
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	hasCraftingRemainingItem ()Z t
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isBarVisible (Lnet/minecraft/world/item/ItemStack;)Z e
	isComplex ()Z al_
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	isEdible ()Z u
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z d_
	isFireResistant ()Z w
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	onCraftedBy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)V b
	onCraftedPostProcess (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;)V a
	onDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;I)V a
	overrideOtherStackedOnMe (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/SlotAccess;)Z a
	overrideStackedOnOther (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;)Z a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	requiredFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; m
	shouldOverrideMultiplayerNbt ()Z r
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
	useOnRelease (Lnet/minecraft/world/item/ItemStack;)Z l
	verifyTagAfterLoad (Lnet/minecraft/nbt/CompoundTag;)V b
net/minecraft/world/item/Item$Properties cmt$a
	craftingRemainingItem c
	foodProperties e
	isFireResistant f
	maxDamage b
	maxStackSize a
	rarity d
	requiredFeatures g
	craftRemainder (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item$Properties; a
	defaultDurability (I)Lnet/minecraft/world/item/Item$Properties; b
	durability (I)Lnet/minecraft/world/item/Item$Properties; c
	fireResistant ()Lnet/minecraft/world/item/Item$Properties; a
	food (Lnet/minecraft/world/food/FoodProperties;)Lnet/minecraft/world/item/Item$Properties; a
	rarity (Lnet/minecraft/world/item/Rarity;)Lnet/minecraft/world/item/Item$Properties; a
	requiredFeatures ([Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/item/Item$Properties; a
	stacksTo (I)Lnet/minecraft/world/item/Item$Properties; a
net/minecraft/world/item/ItemCooldowns cmu
	cooldowns a
	tickCount b
	addCooldown (Lnet/minecraft/world/item/Item;I)V a
	getCooldownPercent (Lnet/minecraft/world/item/Item;F)F a
	isOnCooldown (Lnet/minecraft/world/item/Item;)Z a
	onCooldownEnded (Lnet/minecraft/world/item/Item;)V c
	onCooldownStarted (Lnet/minecraft/world/item/Item;I)V b
	removeCooldown (Lnet/minecraft/world/item/Item;)V b
	tick ()V a
net/minecraft/world/item/ItemCooldowns$CooldownInstance cmu$a
	endTime b
	startTime a
net/minecraft/world/item/ItemDisplayContext cmv
	$VALUES n
	BY_ID k
	CODEC j
	FIRST_PERSON_LEFT_HAND d
	FIRST_PERSON_RIGHT_HAND e
	FIXED i
	GROUND h
	GUI g
	HEAD f
	NONE a
	THIRD_PERSON_LEFT_HAND b
	THIRD_PERSON_RIGHT_HAND c
	id l
	name m
	$values ()[Lnet/minecraft/world/item/ItemDisplayContext; d
	firstPerson ()Z b
	getId ()B a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/item/ItemFrameItem cmw
	mayPlace (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/item/ItemNameBlockItem cmx
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/item/ItemStack cmy
	ADVANCEMENT_ICON_CODEC b
	ATTRIBUTE_MODIFIER_FORMAT g
	CODEC a
	DISABLED_ITEM_TOOLTIP u
	DONT_HIDE_TOOLTIP v
	EMPTY f
	ITEM_NON_AIR_CODEC n
	ITEM_WITH_COUNT_CODEC c
	LOGGER o
	LORE_STYLE w
	RESULT_CODEC e
	SINGLE_ITEM_CODEC d
	TAG_CAN_DESTROY_BLOCK_LIST r
	TAG_CAN_PLACE_ON_BLOCK_LIST s
	TAG_COLOR m
	TAG_DAMAGE l
	TAG_DISPLAY i
	TAG_DISPLAY_NAME j
	TAG_ENCH h
	TAG_HIDE_FLAGS t
	TAG_LORE k
	TAG_REPAIR_COST q
	TAG_UNBREAKABLE p
	adventureBreakCheck C
	adventurePlaceCheck D
	count x
	entityRepresentation B
	item z
	popTime y
	tag A
	addAttributeModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;Lnet/minecraft/world/entity/EquipmentSlot;)V a
	addTagElement (Ljava/lang/String;Lnet/minecraft/nbt/Tag;)V a
	appendEnchantmentNames (Ljava/util/List;Lnet/minecraft/nbt/ListTag;)V a
	copy ()Lnet/minecraft/world/item/ItemStack; p
	copyAndClear ()Lnet/minecraft/world/item/ItemStack; c
	copyWithCount (I)Lnet/minecraft/world/item/ItemStack; c
	enchant (Lnet/minecraft/world/item/enchantment/Enchantment;I)V a
	expandBlockState (Ljava/lang/String;)Ljava/util/Collection; d
	finishUsingItem (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getBarColor ()I o
	getBarWidth ()I n
	getBaseRepairCost ()I I
	getCount ()I L
	getDamageValue ()I k
	getDescriptionId ()Ljava/lang/String; q
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F a
	getDisplayName ()Lnet/minecraft/network/chat/Component; J
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; N
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; O
	getEnchantmentTags ()Lnet/minecraft/nbt/ListTag; x
	getEntityRepresentation ()Lnet/minecraft/world/entity/Entity; H
	getFrame ()Lnet/minecraft/world/entity/decoration/ItemFrame; G
	getHideFlags ()I P
	getHoverName ()Lnet/minecraft/network/chat/Component; y
	getItem ()Lnet/minecraft/world/item/Item; d
	getItemHolder ()Lnet/minecraft/core/Holder; e
	getMaxDamage ()I l
	getMaxStackSize ()I g
	getOrCreateTag ()Lnet/minecraft/nbt/CompoundTag; w
	getOrCreateTagElement (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	getPopTime ()I K
	getRarity ()Lnet/minecraft/world/item/Rarity; C
	getTag ()Lnet/minecraft/nbt/CompoundTag; v
	getTagElement (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; b
	getTags ()Ljava/util/stream/Stream; f
	getTooltipImage ()Ljava/util/Optional; a
	getTooltipLines (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/TooltipFlag;)Ljava/util/List; a
	getUseAnimation ()Lnet/minecraft/world/item/UseAnim; s
	getUseDuration ()I r
	grow (I)V g
	hasAdventureModeBreakTagForBlock (Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z b
	hasAdventureModePlaceTagForBlock (Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
	hasCustomHoverName ()Z A
	hasFoil ()Z B
	hasTag ()Z u
	hideTooltipPart (Lnet/minecraft/world/item/ItemStack$TooltipPart;)V a
	hurt (ILnet/minecraft/util/RandomSource;Lnet/minecraft/server/level/ServerPlayer;)Z a
	hurtAndBreak (ILnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Consumer;)V a
	hurtEnemy (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/player/Player;)V a
	interactLivingEntity (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	inventoryTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	is (Ljava/util/function/Predicate;)Z a
	is (Lnet/minecraft/core/Holder;)Z a
	is (Lnet/minecraft/core/HolderSet;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	is (Lnet/minecraft/world/item/Item;)Z a
	isBarVisible ()Z m
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	isDamageableItem ()Z i
	isDamaged ()Z j
	isEdible ()Z M
	isEmpty ()Z b
	isEnchantable ()Z D
	isEnchanted ()Z E
	isFramed ()Z F
	isItemEnabled (Lnet/minecraft/world/flag/FeatureFlagSet;)Z a
	isSameItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	isSameItemSameTags (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	isStackable ()Z h
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	mineBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	of (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/item/ItemStack; a
	onCraftedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;I)V a
	onCraftedBySystem (Lnet/minecraft/world/level/Level;)V a
	onDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V b
	overrideOtherStackedOnMe (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/SlotAccess;)Z a
	overrideStackedOnOther (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;)Z a
	releaseUsing (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	removeTagKey (Ljava/lang/String;)V c
	resetHoverName ()V z
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setCount (I)V f
	setDamageValue (I)V b
	setEntityRepresentation (Lnet/minecraft/world/entity/Entity;)V a
	setHoverName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/item/ItemStack; a
	setPopTime (I)V e
	setRepairCost (I)V d
	setTag (Lnet/minecraft/nbt/CompoundTag;)V c
	shouldShowInTooltip (ILnet/minecraft/world/item/ItemStack$TooltipPart;)Z a
	shrink (I)V h
	split (I)Lnet/minecraft/world/item/ItemStack; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
	useOnRelease ()Z t
net/minecraft/world/item/ItemStack$TooltipPart cmy$a
	$VALUES j
	ADDITIONAL f
	CAN_DESTROY d
	CAN_PLACE e
	DYE g
	ENCHANTMENTS a
	MODIFIERS b
	UNBREAKABLE c
	UPGRADES h
	mask i
	$values ()[Lnet/minecraft/world/item/ItemStack$TooltipPart; b
	getMask ()I a
net/minecraft/world/item/ItemStackLinkedSet cmz
	TYPE_AND_TAG a
	createTypeAndTagSet ()Ljava/util/Set; a
	hashStackAndTag (Lnet/minecraft/world/item/ItemStack;)I a
net/minecraft/world/item/ItemUtils cna
	createFilledResult (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	createFilledResult (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/world/item/ItemStack; a
	onContainerDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;Ljava/util/stream/Stream;)V a
	startUsingInstantly (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/Items cnb
	ACACIA_BOAT ob
	ACACIA_BUTTON ml
	ACACIA_CHEST_BOAT oc
	ACACIA_DOOR mM
	ACACIA_FENCE fc
	ACACIA_FENCE_GATE nz
	ACACIA_HANGING_SIGN qo
	ACACIA_LEAVES cx
	ACACIA_LOG bF
	ACACIA_PLANKS O
	ACACIA_PRESSURE_PLATE mA
	ACACIA_SAPLING aa
	ACACIA_SIGN qd
	ACACIA_SLAB dV
	ACACIA_STAIRS gw
	ACACIA_TRAPDOOR ng
	ACACIA_WOOD cn
	ACTIVATOR_RAIL nJ
	AIR a
	ALLAY_SPAWN_EGG sr
	ALLIUM dm
	AMETHYST_BLOCK aH
	AMETHYST_CLUSTER xb
	AMETHYST_SHARD oz
	ANCIENT_DEBRIS aC
	ANDESITE g
	ANDESITE_SLAB lx
	ANDESITE_STAIRS lg
	ANDESITE_WALL gQ
	ANGLER_POTTERY_SHERD xA
	ANVIL hc
	APPLE oq
	ARCHER_POTTERY_SHERD xB
	ARMOR_STAND uy
	ARMS_UP_POTTERY_SHERD xC
	ARROW os
	AXOLOTL_BUCKET qG
	AXOLOTL_SPAWN_EGG ss
	AZALEA cO
	AZALEA_LEAVES cB
	AZURE_BLUET dn
	BAKED_POTATO ua
	BAMBOO dQ
	BAMBOO_BLOCK bN
	BAMBOO_BUTTON mp
	BAMBOO_CHEST_RAFT ok
	BAMBOO_DOOR mQ
	BAMBOO_FENCE fg
	BAMBOO_FENCE_GATE nD
	BAMBOO_HANGING_SIGN qs
	BAMBOO_MOSAIC V
	BAMBOO_MOSAIC_SLAB ea
	BAMBOO_MOSAIC_STAIRS gB
	BAMBOO_PLANKS S
	BAMBOO_PRESSURE_PLATE mE
	BAMBOO_RAFT oj
	BAMBOO_SIGN qh
	BAMBOO_SLAB dZ
	BAMBOO_STAIRS gA
	BAMBOO_TRAPDOOR nk
	BARREL vX
	BARRIER hA
	BASALT fp
	BAT_SPAWN_EGG st
	BEACON gF
	BEDROCK ae
	BEEF rX
	BEEHIVE wp
	BEETROOT vd
	BEETROOT_SEEDS ve
	BEETROOT_SOUP vf
	BEE_NEST wo
	BEE_SPAWN_EGG su
	BELL wf
	BIG_DRIPLEAF dO
	BIRCH_BOAT nX
	BIRCH_BUTTON mj
	BIRCH_CHEST_BOAT nY
	BIRCH_DOOR mK
	BIRCH_FENCE fa
	BIRCH_FENCE_GATE nx
	BIRCH_HANGING_SIGN qm
	BIRCH_LEAVES cv
	BIRCH_LOG bD
	BIRCH_PLANKS M
	BIRCH_PRESSURE_PLATE my
	BIRCH_SAPLING Y
	BIRCH_SIGN qb
	BIRCH_SLAB dT
	BIRCH_STAIRS gu
	BIRCH_TRAPDOOR ne
	BIRCH_WOOD cl
	BLACKSTONE wu
	BLACKSTONE_SLAB wv
	BLACKSTONE_STAIRS ww
	BLACKSTONE_WALL gV
	BLACK_BANNER uX
	BLACK_BED rO
	BLACK_CANDLE wX
	BLACK_CARPET hS
	BLACK_CONCRETE jX
	BLACK_CONCRETE_POWDER kn
	BLACK_DYE ru
	BLACK_GLAZED_TERRACOTTA jH
	BLACK_SHULKER_BOX jr
	BLACK_STAINED_GLASS ir
	BLACK_STAINED_GLASS_PANE iH
	BLACK_TERRACOTTA hz
	BLACK_WOOL di
	BLADE_POTTERY_SHERD xD
	BLAST_FURNACE vZ
	BLAZE_POWDER sl
	BLAZE_ROD sd
	BLAZE_SPAWN_EGG sv
	BLUE_BANNER uT
	BLUE_BED rK
	BLUE_CANDLE wT
	BLUE_CARPET hO
	BLUE_CONCRETE jT
	BLUE_CONCRETE_POWDER kj
	BLUE_DYE rq
	BLUE_GLAZED_TERRACOTTA jD
	BLUE_ICE kU
	BLUE_ORCHID dl
	BLUE_SHULKER_BOX jn
	BLUE_STAINED_GLASS in
	BLUE_STAINED_GLASS_PANE iD
	BLUE_TERRACOTTA hv
	BLUE_WOOL de
	BONE rw
	BONE_BLOCK iZ
	BONE_MEAL rv
	BOOK qM
	BOOKSHELF ez
	BOW or
	BOWL pn
	BRAIN_CORAL kB
	BRAIN_CORAL_BLOCK kw
	BRAIN_CORAL_FAN kL
	BREAD pu
	BREEZE_SPAWN_EGG sw
	BREWER_POTTERY_SHERD xE
	BREWING_STAND sn
	BRICK qI
	BRICKS ey
	BRICK_SLAB ej
	BRICK_STAIRS fW
	BRICK_WALL gI
	BROWN_BANNER uU
	BROWN_BED rL
	BROWN_CANDLE wU
	BROWN_CARPET hP
	BROWN_CONCRETE jU
	BROWN_CONCRETE_POWDER kk
	BROWN_DYE rr
	BROWN_GLAZED_TERRACOTTA jE
	BROWN_MUSHROOM dz
	BROWN_MUSHROOM_BLOCK fN
	BROWN_SHULKER_BOX jo
	BROWN_STAINED_GLASS io
	BROWN_STAINED_GLASS_PANE iE
	BROWN_TERRACOTTA hw
	BROWN_WOOL df
	BRUSH xi
	BUBBLE_CORAL kC
	BUBBLE_CORAL_BLOCK kx
	BUBBLE_CORAL_FAN kM
	BUCKET qv
	BUDDING_AMETHYST aI
	BUNDLE qR
	BURN_POTTERY_SHERD xF
	CACTUS eV
	CAKE ry
	CALCITE l
	CALIBRATED_SCULK_SENSOR lZ
	CAMEL_SPAWN_EGG sy
	CAMPFIRE wk
	CANDLE wH
	CARROT tY
	CARROT_ON_A_STICK nQ
	CARTOGRAPHY_TABLE wa
	CARVED_PUMPKIN fk
	CAT_SPAWN_EGG sx
	CAULDRON so
	CAVE_SPIDER_SPAWN_EGG sz
	CHAIN fR
	CHAINMAIL_BOOTS pC
	CHAINMAIL_CHESTPLATE pA
	CHAINMAIL_HELMET pz
	CHAINMAIL_LEGGINGS pB
	CHAIN_COMMAND_BLOCK iU
	CHARCOAL ou
	CHERRY_BOAT od
	CHERRY_BUTTON mm
	CHERRY_CHEST_BOAT oe
	CHERRY_DOOR mN
	CHERRY_FENCE fd
	CHERRY_FENCE_GATE nA
	CHERRY_HANGING_SIGN qp
	CHERRY_LEAVES cy
	CHERRY_LOG bG
	CHERRY_PLANKS P
	CHERRY_PRESSURE_PLATE mB
	CHERRY_SAPLING ab
	CHERRY_SIGN qe
	CHERRY_SLAB dW
	CHERRY_STAIRS gx
	CHERRY_TRAPDOOR nh
	CHERRY_WOOD co
	CHEST eM
	CHEST_MINECART nM
	CHICKEN rZ
	CHICKEN_SPAWN_EGG sA
	CHIPPED_ANVIL hd
	CHISELED_BOOKSHELF eA
	CHISELED_COPPER aR
	CHISELED_DEEPSLATE fL
	CHISELED_NETHER_BRICKS gd
	CHISELED_POLISHED_BLACKSTONE wB
	CHISELED_QUARTZ_BLOCK hf
	CHISELED_RED_SANDSTONE iQ
	CHISELED_SANDSTONE cJ
	CHISELED_STONE_BRICKS fE
	CHISELED_TUFF q
	CHISELED_TUFF_BRICKS z
	CHORUS_FLOWER eH
	CHORUS_FRUIT uZ
	CHORUS_PLANT eG
	CLAY eW
	CLAY_BALL qJ
	CLOCK qT
	COAL ot
	COAL_BLOCK aD
	COAL_ORE ak
	COARSE_DIRT D
	COAST_ARMOR_TRIM_SMITHING_TEMPLATE xm
	COBBLED_DEEPSLATE j
	COBBLED_DEEPSLATE_SLAB lB
	COBBLED_DEEPSLATE_STAIRS lk
	COBBLED_DEEPSLATE_WALL gY
	COBBLESTONE J
	COBBLESTONE_SLAB ei
	COBBLESTONE_STAIRS eR
	COBBLESTONE_WALL gG
	COBWEB cL
	COCOA_BEANS re
	COD qW
	COD_BUCKET qE
	COD_SPAWN_EGG sB
	COMMAND_BLOCK gE
	COMMAND_BLOCK_MINECART uF
	COMPARATOR lK
	COMPASS qP
	COMPOSTER vW
	CONDUIT kV
	COOKED_BEEF rY
	COOKED_CHICKEN sa
	COOKED_COD ra
	COOKED_MUTTON uH
	COOKED_PORKCHOP pV
	COOKED_RABBIT uu
	COOKED_SALMON rb
	COOKIE rP
	COPPER_BLOCK aK
	COPPER_BULB yc
	COPPER_DOOR mT
	COPPER_GRATE xU
	COPPER_INGOT oD
	COPPER_ORE ao
	COPPER_TRAPDOOR nn
	CORNFLOWER dt
	COW_SPAWN_EGG sC
	CRACKED_DEEPSLATE_BRICKS fI
	CRACKED_DEEPSLATE_TILES fK
	CRACKED_NETHER_BRICKS gc
	CRACKED_POLISHED_BLACKSTONE_BRICKS wF
	CRACKED_STONE_BRICKS fD
	CRAFTER rQ
	CRAFTING_TABLE eN
	CREEPER_BANNER_PATTERN vQ
	CREEPER_HEAD ui
	CREEPER_SPAWN_EGG sD
	CRIMSON_BUTTON mq
	CRIMSON_DOOR mR
	CRIMSON_FENCE fh
	CRIMSON_FENCE_GATE nE
	CRIMSON_FUNGUS dB
	CRIMSON_HANGING_SIGN qt
	CRIMSON_HYPHAE cr
	CRIMSON_NYLIUM H
	CRIMSON_PLANKS T
	CRIMSON_PRESSURE_PLATE mF
	CRIMSON_ROOTS dD
	CRIMSON_SIGN qi
	CRIMSON_SLAB eb
	CRIMSON_STAIRS gC
	CRIMSON_STEM bL
	CRIMSON_TRAPDOOR nl
	CROSSBOW vM
	CRYING_OBSIDIAN wt
	CUT_COPPER aV
	CUT_COPPER_SLAB bd
	CUT_COPPER_STAIRS aZ
	CUT_RED_SANDSTONE iR
	CUT_RED_SANDSTONE_SLAB ep
	CUT_SANDSTONE cK
	CUT_STANDSTONE_SLAB eg
	CYAN_BANNER uR
	CYAN_BED rI
	CYAN_CANDLE wR
	CYAN_CARPET hM
	CYAN_CONCRETE jR
	CYAN_CONCRETE_POWDER kh
	CYAN_DYE ro
	CYAN_GLAZED_TERRACOTTA jB
	CYAN_SHULKER_BOX jl
	CYAN_STAINED_GLASS il
	CYAN_STAINED_GLASS_PANE iB
	CYAN_TERRACOTTA ht
	CYAN_WOOL dc
	DAMAGED_ANVIL he
	DANDELION dj
	DANGER_POTTERY_SHERD xG
	DARK_OAK_BOAT of
	DARK_OAK_BUTTON mn
	DARK_OAK_CHEST_BOAT og
	DARK_OAK_DOOR mO
	DARK_OAK_FENCE fe
	DARK_OAK_FENCE_GATE nB
	DARK_OAK_HANGING_SIGN qq
	DARK_OAK_LEAVES cz
	DARK_OAK_LOG bH
	DARK_OAK_PLANKS Q
	DARK_OAK_PRESSURE_PLATE mC
	DARK_OAK_SAPLING ac
	DARK_OAK_SIGN qf
	DARK_OAK_SLAB dX
	DARK_OAK_STAIRS gy
	DARK_OAK_TRAPDOOR ni
	DARK_OAK_WOOD cp
	DARK_PRISMARINE iK
	DARK_PRISMARINE_SLAB et
	DARK_PRISMARINE_STAIRS iN
	DAYLIGHT_DETECTOR lX
	DEAD_BRAIN_CORAL kF
	DEAD_BRAIN_CORAL_BLOCK kr
	DEAD_BRAIN_CORAL_FAN kQ
	DEAD_BUBBLE_CORAL kG
	DEAD_BUBBLE_CORAL_BLOCK ks
	DEAD_BUBBLE_CORAL_FAN kR
	DEAD_BUSH cQ
	DEAD_FIRE_CORAL kH
	DEAD_FIRE_CORAL_BLOCK kt
	DEAD_FIRE_CORAL_FAN kS
	DEAD_HORN_CORAL kI
	DEAD_HORN_CORAL_BLOCK ku
	DEAD_HORN_CORAL_FAN kT
	DEAD_TUBE_CORAL kJ
	DEAD_TUBE_CORAL_BLOCK kq
	DEAD_TUBE_CORAL_FAN kP
	DEBUG_STICK vq
	DECORATED_POT eB
	DEEPSLATE i
	DEEPSLATE_BRICKS fH
	DEEPSLATE_BRICK_SLAB lD
	DEEPSLATE_BRICK_STAIRS lm
	DEEPSLATE_BRICK_WALL ha
	DEEPSLATE_COAL_ORE al
	DEEPSLATE_COPPER_ORE ap
	DEEPSLATE_DIAMOND_ORE az
	DEEPSLATE_EMERALD_ORE av
	DEEPSLATE_GOLD_ORE ar
	DEEPSLATE_IRON_ORE an
	DEEPSLATE_LAPIS_ORE ax
	DEEPSLATE_REDSTONE_ORE at
	DEEPSLATE_TILES fJ
	DEEPSLATE_TILE_SLAB lE
	DEEPSLATE_TILE_STAIRS ln
	DEEPSLATE_TILE_WALL hb
	DETECTOR_RAIL nH
	DIAMOND ov
	DIAMOND_AXE pf
	DIAMOND_BLOCK aM
	DIAMOND_BOOTS pK
	DIAMOND_CHESTPLATE pI
	DIAMOND_HELMET pH
	DIAMOND_HOE pg
	DIAMOND_HORSE_ARMOR uB
	DIAMOND_LEGGINGS pJ
	DIAMOND_ORE ay
	DIAMOND_PICKAXE pe
	DIAMOND_SHOVEL pd
	DIAMOND_SWORD pc
	DIORITE e
	DIORITE_SLAB lA
	DIORITE_STAIRS lj
	DIORITE_WALL gU
	DIRT C
	DIRT_PATH hV
	DISC_FRAGMENT_5 vH
	DISPENSER lR
	DOLPHIN_SPAWN_EGG sE
	DONKEY_SPAWN_EGG sF
	DRAGON_BREATH vg
	DRAGON_EGG go
	DRAGON_HEAD uj
	DRIED_KELP rU
	DRIED_KELP_BLOCK qK
	DRIPSTONE_BLOCK A
	DROPPER lS
	DROWNED_SPAWN_EGG sG
	DUNE_ARMOR_TRIM_SMITHING_TEMPLATE xl
	ECHO_SHARD xh
	EGG qO
	ELDER_GUARDIAN_SPAWN_EGG sH
	ELYTRA nS
	EMERALD ow
	EMERALD_BLOCK gr
	EMERALD_ORE au
	ENCHANTED_BOOK up
	ENCHANTED_GOLDEN_APPLE pY
	ENCHANTING_TABLE gk
	ENDERMAN_SPAWN_EGG sJ
	ENDERMITE_SPAWN_EGG sK
	ENDER_CHEST gq
	ENDER_DRAGON_SPAWN_EGG sI
	ENDER_EYE sp
	ENDER_PEARL sc
	END_CRYSTAL uY
	END_PORTAL_FRAME gl
	END_ROD eF
	END_STONE gm
	END_STONE_BRICKS gn
	END_STONE_BRICK_SLAB lt
	END_STONE_BRICK_STAIRS lb
	END_STONE_BRICK_WALL gT
	EVOKER_SPAWN_EGG sL
	EXPERIENCE_BOTTLE tR
	EXPLORER_POTTERY_SHERD xH
	EXPOSED_CHISELED_COPPER aS
	EXPOSED_COPPER aO
	EXPOSED_COPPER_BULB yd
	EXPOSED_COPPER_DOOR mU
	EXPOSED_COPPER_GRATE xV
	EXPOSED_COPPER_TRAPDOOR no
	EXPOSED_CUT_COPPER aW
	EXPOSED_CUT_COPPER_SLAB be
	EXPOSED_CUT_COPPER_STAIRS ba
	EYE_ARMOR_TRIM_SMITHING_TEMPLATE xp
	FARMLAND eO
	FEATHER pq
	FERMENTED_SPIDER_EYE sk
	FERN cN
	FILLED_MAP rR
	FIREWORK_ROCKET un
	FIREWORK_STAR uo
	FIRE_CHARGE tS
	FIRE_CORAL kD
	FIRE_CORAL_BLOCK ky
	FIRE_CORAL_FAN kN
	FISHING_ROD qS
	FLETCHING_TABLE wb
	FLINT pT
	FLINT_AND_STEEL op
	FLOWERING_AZALEA cP
	FLOWERING_AZALEA_LEAVES cC
	FLOWER_BANNER_PATTERN vP
	FLOWER_POT tX
	FOX_SPAWN_EGG sM
	FRIEND_POTTERY_SHERD xI
	FROGSPAWN xg
	FROG_SPAWN_EGG sN
	FURNACE eP
	FURNACE_MINECART nN
	GHAST_SPAWN_EGG sO
	GHAST_TEAR se
	GILDED_BLACKSTONE wx
	GLASS cF
	GLASS_BOTTLE si
	GLASS_PANE fS
	GLISTERING_MELON_SLICE sq
	GLOBE_BANNER_PATTERN vT
	GLOWSTONE ft
	GLOWSTONE_DUST qV
	GLOW_BERRIES wj
	GLOW_INK_SAC rd
	GLOW_ITEM_FRAME tW
	GLOW_LICHEN fV
	GLOW_SQUID_SPAWN_EGG sP
	GOAT_HORN vV
	GOAT_SPAWN_EGG sQ
	GOLDEN_APPLE pX
	GOLDEN_AXE oV
	GOLDEN_BOOTS pO
	GOLDEN_CARROT ud
	GOLDEN_CHESTPLATE pM
	GOLDEN_HELMET pL
	GOLDEN_HOE oW
	GOLDEN_HORSE_ARMOR uA
	GOLDEN_LEGGINGS pN
	GOLDEN_PICKAXE oU
	GOLDEN_SHOVEL oT
	GOLDEN_SWORD oS
	GOLD_BLOCK aL
	GOLD_INGOT oF
	GOLD_NUGGET sf
	GOLD_ORE aq
	GRANITE c
	GRANITE_SLAB lw
	GRANITE_STAIRS lf
	GRANITE_WALL gM
	GRASS_BLOCK B
	GRAVEL aj
	GRAY_BANNER uP
	GRAY_BED rG
	GRAY_CANDLE wP
	GRAY_CARPET hK
	GRAY_CONCRETE jP
	GRAY_CONCRETE_POWDER kf
	GRAY_DYE rm
	GRAY_GLAZED_TERRACOTTA jz
	GRAY_SHULKER_BOX jj
	GRAY_STAINED_GLASS ij
	GRAY_STAINED_GLASS_PANE iz
	GRAY_TERRACOTTA hr
	GRAY_WOOL da
	GREEN_BANNER uV
	GREEN_BED rM
	GREEN_CANDLE wV
	GREEN_CARPET hQ
	GREEN_CONCRETE jV
	GREEN_CONCRETE_POWDER kl
	GREEN_DYE rs
	GREEN_GLAZED_TERRACOTTA jF
	GREEN_SHULKER_BOX jp
	GREEN_STAINED_GLASS ip
	GREEN_STAINED_GLASS_PANE iF
	GREEN_TERRACOTTA hx
	GREEN_WOOL dg
	GRINDSTONE wc
	GUARDIAN_SPAWN_EGG sR
	GUNPOWDER pr
	HANGING_ROOTS dN
	HAY_BLOCK hC
	HEARTBREAK_POTTERY_SHERD xK
	HEART_OF_THE_SEA vL
	HEART_POTTERY_SHERD xJ
	HEAVY_WEIGHTED_PRESSURE_PLATE mv
	HOGLIN_SPAWN_EGG sS
	HONEYCOMB wn
	HONEYCOMB_BLOCK wr
	HONEY_BLOCK lO
	HONEY_BOTTLE wq
	HOPPER lQ
	HOPPER_MINECART nP
	HORN_CORAL kE
	HORN_CORAL_BLOCK kz
	HORN_CORAL_FAN kO
	HORSE_SPAWN_EGG sT
	HOST_ARMOR_TRIM_SMITHING_TEMPLATE xz
	HOWL_POTTERY_SHERD xL
	HUSK_SPAWN_EGG sU
	ICE eT
	INFESTED_CHISELED_STONE_BRICKS fz
	INFESTED_COBBLESTONE fv
	INFESTED_CRACKED_STONE_BRICKS fy
	INFESTED_DEEPSLATE fA
	INFESTED_MOSSY_STONE_BRICKS fx
	INFESTED_STONE fu
	INFESTED_STONE_BRICKS fw
	INK_SAC rc
	IRON_AXE pa
	IRON_BARS fQ
	IRON_BLOCK aJ
	IRON_BOOTS pG
	IRON_CHESTPLATE pE
	IRON_DOOR mH
	IRON_GOLEM_SPAWN_EGG sV
	IRON_HELMET pD
	IRON_HOE pb
	IRON_HORSE_ARMOR uz
	IRON_INGOT oB
	IRON_LEGGINGS pF
	IRON_NUGGET vo
	IRON_ORE am
	IRON_PICKAXE oZ
	IRON_SHOVEL oY
	IRON_SWORD oX
	IRON_TRAPDOOR nb
	ITEM_FRAME tV
	JACK_O_LANTERN fl
	JIGSAW om
	JUKEBOX eX
	JUNGLE_BOAT nZ
	JUNGLE_BUTTON mk
	JUNGLE_CHEST_BOAT oa
	JUNGLE_DOOR mL
	JUNGLE_FENCE fb
	JUNGLE_FENCE_GATE ny
	JUNGLE_HANGING_SIGN qn
	JUNGLE_LEAVES cw
	JUNGLE_LOG bE
	JUNGLE_PLANKS N
	JUNGLE_PRESSURE_PLATE mz
	JUNGLE_SAPLING Z
	JUNGLE_SIGN qc
	JUNGLE_SLAB dU
	JUNGLE_STAIRS gv
	JUNGLE_TRAPDOOR nf
	JUNGLE_WOOD cm
	KELP dJ
	KNOWLEDGE_BOOK vp
	LADDER eQ
	LANTERN wg
	LAPIS_BLOCK cH
	LAPIS_LAZULI ox
	LAPIS_ORE aw
	LARGE_AMETHYST_BUD xa
	LARGE_FERN ib
	LAVA_BUCKET qx
	LEAD uD
	LEATHER qA
	LEATHER_BOOTS py
	LEATHER_CHESTPLATE pw
	LEATHER_HELMET pv
	LEATHER_HORSE_ARMOR uC
	LEATHER_LEGGINGS px
	LECTERN lT
	LEVER lV
	LIGHT hB
	LIGHTNING_ROD lW
	LIGHT_BLUE_BANNER uL
	LIGHT_BLUE_BED rC
	LIGHT_BLUE_CANDLE wL
	LIGHT_BLUE_CARPET hG
	LIGHT_BLUE_CONCRETE jL
	LIGHT_BLUE_CONCRETE_POWDER kb
	LIGHT_BLUE_DYE ri
	LIGHT_BLUE_GLAZED_TERRACOTTA jv
	LIGHT_BLUE_SHULKER_BOX jf
	LIGHT_BLUE_STAINED_GLASS if
	LIGHT_BLUE_STAINED_GLASS_PANE iv
	LIGHT_BLUE_TERRACOTTA hn
	LIGHT_BLUE_WOOL cW
	LIGHT_GRAY_BANNER uQ
	LIGHT_GRAY_BED rH
	LIGHT_GRAY_CANDLE wQ
	LIGHT_GRAY_CARPET hL
	LIGHT_GRAY_CONCRETE jQ
	LIGHT_GRAY_CONCRETE_POWDER kg
	LIGHT_GRAY_DYE rn
	LIGHT_GRAY_GLAZED_TERRACOTTA jA
	LIGHT_GRAY_SHULKER_BOX jk
	LIGHT_GRAY_STAINED_GLASS ik
	LIGHT_GRAY_STAINED_GLASS_PANE iA
	LIGHT_GRAY_TERRACOTTA hs
	LIGHT_GRAY_WOOL db
	LIGHT_WEIGHTED_PRESSURE_PLATE mu
	LILAC hX
	LILY_OF_THE_VALLEY du
	LILY_PAD ga
	LIME_BANNER uN
	LIME_BED rE
	LIME_CANDLE wN
	LIME_CARPET hI
	LIME_CONCRETE jN
	LIME_CONCRETE_POWDER kd
	LIME_DYE rk
	LIME_GLAZED_TERRACOTTA jx
	LIME_SHULKER_BOX jh
	LIME_STAINED_GLASS ih
	LIME_STAINED_GLASS_PANE ix
	LIME_TERRACOTTA hp
	LIME_WOOL cY
	LINGERING_POTION vk
	LLAMA_SPAWN_EGG sW
	LODESTONE ws
	LOOM vO
	MAGENTA_BANNER uK
	MAGENTA_BED rB
	MAGENTA_CANDLE wK
	MAGENTA_CARPET hF
	MAGENTA_CONCRETE jK
	MAGENTA_CONCRETE_POWDER ka
	MAGENTA_DYE rh
	MAGENTA_GLAZED_TERRACOTTA ju
	MAGENTA_SHULKER_BOX je
	MAGENTA_STAINED_GLASS ie
	MAGENTA_STAINED_GLASS_PANE iu
	MAGENTA_TERRACOTTA hm
	MAGENTA_WOOL cV
	MAGMA_BLOCK iV
	MAGMA_CREAM sm
	MAGMA_CUBE_SPAWN_EGG sX
	MANGROVE_BOAT oh
	MANGROVE_BUTTON mo
	MANGROVE_CHEST_BOAT oi
	MANGROVE_DOOR mP
	MANGROVE_FENCE ff
	MANGROVE_FENCE_GATE nC
	MANGROVE_HANGING_SIGN qr
	MANGROVE_LEAVES cA
	MANGROVE_LOG bI
	MANGROVE_PLANKS R
	MANGROVE_PRESSURE_PLATE mD
	MANGROVE_PROPAGULE ad
	MANGROVE_ROOTS bJ
	MANGROVE_SIGN qg
	MANGROVE_SLAB dY
	MANGROVE_STAIRS gz
	MANGROVE_TRAPDOOR nj
	MANGROVE_WOOD cq
	MAP uc
	MEDIUM_AMETHYST_BUD wZ
	MELON fT
	MELON_SEEDS rW
	MELON_SLICE rT
	MILK_BUCKET qB
	MINECART nL
	MINER_POTTERY_SHERD xM
	MOJANG_BANNER_PATTERN vS
	MOOSHROOM_SPAWN_EGG sY
	MOSSY_COBBLESTONE eC
	MOSSY_COBBLESTONE_SLAB ls
	MOSSY_COBBLESTONE_STAIRS la
	MOSSY_COBBLESTONE_WALL gH
	MOSSY_STONE_BRICKS fC
	MOSSY_STONE_BRICK_SLAB lq
	MOSSY_STONE_BRICK_STAIRS kY
	MOSSY_STONE_BRICK_WALL gL
	MOSS_BLOCK dM
	MOSS_CARPET dK
	MOURNER_POTTERY_SHERD xN
	MUD G
	MUDDY_MANGROVE_ROOTS bK
	MUD_BRICKS fG
	MUD_BRICK_SLAB el
	MUD_BRICK_STAIRS fY
	MUD_BRICK_WALL gO
	MULE_SPAWN_EGG sZ
	MUSHROOM_STEM fP
	MUSHROOM_STEW po
	MUSIC_DISC_11 vB
	MUSIC_DISC_13 vr
	MUSIC_DISC_5 vF
	MUSIC_DISC_BLOCKS vt
	MUSIC_DISC_CAT vs
	MUSIC_DISC_CHIRP vu
	MUSIC_DISC_FAR vv
	MUSIC_DISC_MALL vw
	MUSIC_DISC_MELLOHI vx
	MUSIC_DISC_OTHERSIDE vD
	MUSIC_DISC_PIGSTEP vG
	MUSIC_DISC_RELIC vE
	MUSIC_DISC_STAL vy
	MUSIC_DISC_STRAD vz
	MUSIC_DISC_WAIT vC
	MUSIC_DISC_WARD vA
	MUTTON uG
	MYCELIUM fZ
	NAME_TAG uE
	NAUTILUS_SHELL vK
	NETHERITE_AXE pk
	NETHERITE_BLOCK aN
	NETHERITE_BOOTS pS
	NETHERITE_CHESTPLATE pQ
	NETHERITE_HELMET pP
	NETHERITE_HOE pl
	NETHERITE_INGOT oG
	NETHERITE_LEGGINGS pR
	NETHERITE_PICKAXE pj
	NETHERITE_SCRAP oH
	NETHERITE_SHOVEL pi
	NETHERITE_SWORD ph
	NETHERITE_UPGRADE_SMITHING_TEMPLATE xj
	NETHERRACK fm
	NETHER_BRICK uq
	NETHER_BRICKS gb
	NETHER_BRICK_FENCE ge
	NETHER_BRICK_SLAB em
	NETHER_BRICK_STAIRS gf
	NETHER_BRICK_WALL gP
	NETHER_GOLD_ORE aA
	NETHER_QUARTZ_ORE aB
	NETHER_SPROUTS dF
	NETHER_STAR ul
	NETHER_WART sg
	NETHER_WART_BLOCK iW
	NOTE_BLOCK me
	OAK_BOAT nT
	OAK_BUTTON mh
	OAK_CHEST_BOAT nU
	OAK_DOOR mI
	OAK_FENCE eY
	OAK_FENCE_GATE nv
	OAK_HANGING_SIGN qk
	OAK_LEAVES ct
	OAK_LOG bB
	OAK_PLANKS K
	OAK_PRESSURE_PLATE mw
	OAK_SAPLING W
	OAK_SIGN pZ
	OAK_SLAB dR
	OAK_STAIRS gs
	OAK_TRAPDOOR nc
	OAK_WOOD cj
	OBSERVER lP
	OBSIDIAN eD
	OCELOT_SPAWN_EGG ta
	OCHRE_FROGLIGHT xd
	ORANGE_BANNER uJ
	ORANGE_BED rA
	ORANGE_CANDLE wJ
	ORANGE_CARPET hE
	ORANGE_CONCRETE jJ
	ORANGE_CONCRETE_POWDER jZ
	ORANGE_DYE rg
	ORANGE_GLAZED_TERRACOTTA jt
	ORANGE_SHULKER_BOX jd
	ORANGE_STAINED_GLASS id
	ORANGE_STAINED_GLASS_PANE it
	ORANGE_TERRACOTTA hl
	ORANGE_TULIP dp
	ORANGE_WOOL cU
	OXEYE_DAISY ds
	OXIDIZED_CHISELED_COPPER aU
	OXIDIZED_COPPER aQ
	OXIDIZED_COPPER_BULB yf
	OXIDIZED_COPPER_DOOR mW
	OXIDIZED_COPPER_GRATE xX
	OXIDIZED_COPPER_TRAPDOOR nq
	OXIDIZED_CUT_COPPER aY
	OXIDIZED_CUT_COPPER_SLAB bg
	OXIDIZED_CUT_COPPER_STAIRS bc
	PACKED_ICE hU
	PACKED_MUD fF
	PAINTING pW
	PANDA_SPAWN_EGG tb
	PAPER qL
	PARROT_SPAWN_EGG tc
	PEARLESCENT_FROGLIGHT xf
	PEONY hZ
	PETRIFIED_OAK_SLAB eh
	PHANTOM_MEMBRANE vJ
	PHANTOM_SPAWN_EGG td
	PIGLIN_BANNER_PATTERN vU
	PIGLIN_BRUTE_SPAWN_EGG tg
	PIGLIN_HEAD uk
	PIGLIN_SPAWN_EGG tf
	PIG_SPAWN_EGG te
	PILLAGER_SPAWN_EGG th
	PINK_BANNER uO
	PINK_BED rF
	PINK_CANDLE wO
	PINK_CARPET hJ
	PINK_CONCRETE jO
	PINK_CONCRETE_POWDER ke
	PINK_DYE rl
	PINK_GLAZED_TERRACOTTA jy
	PINK_PETALS dL
	PINK_SHULKER_BOX ji
	PINK_STAINED_GLASS ii
	PINK_STAINED_GLASS_PANE iy
	PINK_TERRACOTTA hq
	PINK_TULIP dr
	PINK_WOOL cZ
	PISTON lL
	PITCHER_PLANT dx
	PITCHER_POD vc
	PLAYER_HEAD ug
	PLENTY_POTTERY_SHERD xO
	PODZOL E
	POINTED_DRIPSTONE xc
	POISONOUS_POTATO ub
	POLAR_BEAR_SPAWN_EGG ti
	POLISHED_ANDESITE h
	POLISHED_ANDESITE_SLAB lz
	POLISHED_ANDESITE_STAIRS li
	POLISHED_BASALT fq
	POLISHED_BLACKSTONE wy
	POLISHED_BLACKSTONE_BRICKS wC
	POLISHED_BLACKSTONE_BRICK_SLAB wD
	POLISHED_BLACKSTONE_BRICK_STAIRS wE
	POLISHED_BLACKSTONE_BRICK_WALL gX
	POLISHED_BLACKSTONE_BUTTON mg
	POLISHED_BLACKSTONE_PRESSURE_PLATE mt
	POLISHED_BLACKSTONE_SLAB wz
	POLISHED_BLACKSTONE_STAIRS wA
	POLISHED_BLACKSTONE_WALL gW
	POLISHED_DEEPSLATE k
	POLISHED_DEEPSLATE_SLAB lC
	POLISHED_DEEPSLATE_STAIRS ll
	POLISHED_DEEPSLATE_WALL gZ
	POLISHED_DIORITE f
	POLISHED_DIORITE_SLAB lr
	POLISHED_DIORITE_STAIRS kZ
	POLISHED_GRANITE d
	POLISHED_GRANITE_SLAB lo
	POLISHED_GRANITE_STAIRS kW
	POLISHED_TUFF r
	POLISHED_TUFF_SLAB s
	POLISHED_TUFF_STAIRS t
	POLISHED_TUFF_WALL u
	POPPED_CHORUS_FRUIT va
	POPPY dk
	PORKCHOP pU
	POTATO tZ
	POTION sh
	POWDER_SNOW_BUCKET qy
	POWERED_RAIL nG
	PRISMARINE iI
	PRISMARINE_BRICKS iJ
	PRISMARINE_BRICK_SLAB es
	PRISMARINE_BRICK_STAIRS iM
	PRISMARINE_CRYSTALS us
	PRISMARINE_SHARD ur
	PRISMARINE_SLAB er
	PRISMARINE_STAIRS iL
	PRISMARINE_WALL gJ
	PRIZE_POTTERY_SHERD xP
	PUFFERFISH qZ
	PUFFERFISH_BUCKET qC
	PUFFERFISH_SPAWN_EGG tj
	PUMPKIN fj
	PUMPKIN_PIE um
	PUMPKIN_SEEDS rV
	PURPLE_BANNER uS
	PURPLE_BED rJ
	PURPLE_CANDLE wS
	PURPLE_CARPET hN
	PURPLE_CONCRETE jS
	PURPLE_CONCRETE_POWDER ki
	PURPLE_DYE rp
	PURPLE_GLAZED_TERRACOTTA jC
	PURPLE_SHULKER_BOX jm
	PURPLE_STAINED_GLASS im
	PURPLE_STAINED_GLASS_PANE iC
	PURPLE_TERRACOTTA hu
	PURPLE_WOOL dd
	PURPUR_BLOCK eI
	PURPUR_PILLAR eJ
	PURPUR_SLAB eq
	PURPUR_STAIRS eK
	QUARTZ oy
	QUARTZ_BLOCK hg
	QUARTZ_BRICKS hh
	QUARTZ_PILLAR hi
	QUARTZ_SLAB en
	QUARTZ_STAIRS hj
	RABBIT ut
	RABBIT_FOOT uw
	RABBIT_HIDE ux
	RABBIT_SPAWN_EGG tk
	RABBIT_STEW uv
	RAIL nI
	RAISER_ARMOR_TRIM_SMITHING_TEMPLATE xy
	RAVAGER_SPAWN_EGG tl
	RAW_COPPER oC
	RAW_COPPER_BLOCK aF
	RAW_GOLD oE
	RAW_GOLD_BLOCK aG
	RAW_IRON oA
	RAW_IRON_BLOCK aE
	RECOVERY_COMPASS qQ
	REDSTONE lG
	REDSTONE_BLOCK lI
	REDSTONE_LAMP md
	REDSTONE_ORE as
	REDSTONE_TORCH lH
	RED_BANNER uW
	RED_BED rN
	RED_CANDLE wW
	RED_CARPET hR
	RED_CONCRETE jW
	RED_CONCRETE_POWDER km
	RED_DYE rt
	RED_GLAZED_TERRACOTTA jG
	RED_MUSHROOM dA
	RED_MUSHROOM_BLOCK fO
	RED_NETHER_BRICKS iY
	RED_NETHER_BRICK_SLAB ly
	RED_NETHER_BRICK_STAIRS lh
	RED_NETHER_BRICK_WALL gR
	RED_SAND ai
	RED_SANDSTONE iP
	RED_SANDSTONE_SLAB eo
	RED_SANDSTONE_STAIRS iS
	RED_SANDSTONE_WALL gK
	RED_SHULKER_BOX jq
	RED_STAINED_GLASS iq
	RED_STAINED_GLASS_PANE iG
	RED_TERRACOTTA hy
	RED_TULIP do
	RED_WOOL dh
	REINFORCED_DEEPSLATE fM
	REPEATER lJ
	REPEATING_COMMAND_BLOCK iT
	RESPAWN_ANCHOR wG
	RIB_ARMOR_TRIM_SMITHING_TEMPLATE xt
	ROOTED_DIRT F
	ROSE_BUSH hY
	ROTTEN_FLESH sb
	SADDLE nK
	SALMON qX
	SALMON_BUCKET qD
	SALMON_SPAWN_EGG tm
	SAND af
	SANDSTONE cI
	SANDSTONE_SLAB ef
	SANDSTONE_STAIRS gp
	SANDSTONE_WALL gS
	SCAFFOLDING lF
	SCULK gg
	SCULK_CATALYST gi
	SCULK_SENSOR lY
	SCULK_SHRIEKER gj
	SCULK_VEIN gh
	SCUTE oo
	SEAGRASS cR
	SEA_LANTERN iO
	SEA_PICKLE cS
	SENTRY_ARMOR_TRIM_SMITHING_TEMPLATE xk
	SHAPER_ARMOR_TRIM_SMITHING_TEMPLATE xw
	SHEAF_POTTERY_SHERD xQ
	SHEARS rS
	SHEEP_SPAWN_EGG tn
	SHELTER_POTTERY_SHERD xR
	SHIELD vl
	SHORT_GRASS cM
	SHROOMLIGHT wm
	SHULKER_BOX jb
	SHULKER_SHELL vn
	SHULKER_SPAWN_EGG to
	SILENCE_ARMOR_TRIM_SMITHING_TEMPLATE xx
	SILVERFISH_SPAWN_EGG tp
	SKELETON_HORSE_SPAWN_EGG tr
	SKELETON_SKULL ue
	SKELETON_SPAWN_EGG tq
	SKULL_BANNER_PATTERN vR
	SKULL_POTTERY_SHERD xS
	SLIME_BALL qN
	SLIME_BLOCK lN
	SLIME_SPAWN_EGG ts
	SMALL_AMETHYST_BUD wY
	SMALL_DRIPLEAF dP
	SMITHING_TABLE wd
	SMOKER vY
	SMOOTH_BASALT fr
	SMOOTH_QUARTZ eu
	SMOOTH_QUARTZ_SLAB lv
	SMOOTH_QUARTZ_STAIRS le
	SMOOTH_RED_SANDSTONE ev
	SMOOTH_RED_SANDSTONE_SLAB lp
	SMOOTH_RED_SANDSTONE_STAIRS kX
	SMOOTH_SANDSTONE ew
	SMOOTH_SANDSTONE_SLAB lu
	SMOOTH_SANDSTONE_STAIRS ld
	SMOOTH_STONE ex
	SMOOTH_STONE_SLAB ee
	SNIFFER_EGG kp
	SNIFFER_SPAWN_EGG tt
	SNORT_POTTERY_SHERD xT
	SNOUT_ARMOR_TRIM_SMITHING_TEMPLATE xs
	SNOW eS
	SNOWBALL qz
	SNOW_BLOCK eU
	SNOW_GOLEM_SPAWN_EGG tu
	SOUL_CAMPFIRE wl
	SOUL_LANTERN wh
	SOUL_SAND fn
	SOUL_SOIL fo
	SOUL_TORCH fs
	SPAWNER eL
	SPECTRAL_ARROW vi
	SPIDER_EYE sj
	SPIDER_SPAWN_EGG tv
	SPIRE_ARMOR_TRIM_SMITHING_TEMPLATE xu
	SPLASH_POTION vh
	SPONGE cD
	SPORE_BLOSSOM dy
	SPRUCE_BOAT nV
	SPRUCE_BUTTON mi
	SPRUCE_CHEST_BOAT nW
	SPRUCE_DOOR mJ
	SPRUCE_FENCE eZ
	SPRUCE_FENCE_GATE nw
	SPRUCE_HANGING_SIGN ql
	SPRUCE_LEAVES cu
	SPRUCE_LOG bC
	SPRUCE_PLANKS L
	SPRUCE_PRESSURE_PLATE mx
	SPRUCE_SAPLING X
	SPRUCE_SIGN qa
	SPRUCE_SLAB dS
	SPRUCE_STAIRS gt
	SPRUCE_TRAPDOOR nd
	SPRUCE_WOOD ck
	SPYGLASS qU
	SQUID_SPAWN_EGG tw
	STICK pm
	STICKY_PISTON lM
	STONE b
	STONECUTTER we
	STONE_AXE oQ
	STONE_BRICKS fB
	STONE_BRICK_SLAB ek
	STONE_BRICK_STAIRS fX
	STONE_BRICK_WALL gN
	STONE_BUTTON mf
	STONE_HOE oR
	STONE_PICKAXE oP
	STONE_PRESSURE_PLATE ms
	STONE_SHOVEL oO
	STONE_SLAB ed
	STONE_STAIRS lc
	STONE_SWORD oN
	STRAY_SPAWN_EGG tx
	STRIDER_SPAWN_EGG ty
	STRING pp
	STRIPPED_ACACIA_LOG bS
	STRIPPED_ACACIA_WOOD cc
	STRIPPED_BAMBOO_BLOCK ci
	STRIPPED_BIRCH_LOG bQ
	STRIPPED_BIRCH_WOOD ca
	STRIPPED_CHERRY_LOG bT
	STRIPPED_CHERRY_WOOD cd
	STRIPPED_CRIMSON_HYPHAE cg
	STRIPPED_CRIMSON_STEM bW
	STRIPPED_DARK_OAK_LOG bU
	STRIPPED_DARK_OAK_WOOD ce
	STRIPPED_JUNGLE_LOG bR
	STRIPPED_JUNGLE_WOOD cb
	STRIPPED_MANGROVE_LOG bV
	STRIPPED_MANGROVE_WOOD cf
	STRIPPED_OAK_LOG bO
	STRIPPED_OAK_WOOD bY
	STRIPPED_SPRUCE_LOG bP
	STRIPPED_SPRUCE_WOOD bZ
	STRIPPED_WARPED_HYPHAE ch
	STRIPPED_WARPED_STEM bX
	STRUCTURE_BLOCK ol
	STRUCTURE_VOID ja
	SUGAR rx
	SUGAR_CANE dI
	SUNFLOWER hW
	SUSPICIOUS_GRAVEL ah
	SUSPICIOUS_SAND ag
	SUSPICIOUS_STEW vN
	SWEET_BERRIES wi
	TADPOLE_BUCKET qH
	TADPOLE_SPAWN_EGG tz
	TALL_GRASS ia
	TARGET lU
	TERRACOTTA hT
	TIDE_ARMOR_TRIM_SMITHING_TEMPLATE xr
	TINTED_GLASS cG
	TIPPED_ARROW vj
	TNT mc
	TNT_MINECART nO
	TORCH eE
	TORCHFLOWER dw
	TORCHFLOWER_SEEDS vb
	TOTEM_OF_UNDYING vm
	TRADER_LLAMA_SPAWN_EGG tA
	TRAPPED_CHEST mb
	TRIAL_KEY yl
	TRIAL_SPAWNER yk
	TRIDENT vI
	TRIPWIRE_HOOK ma
	TROPICAL_FISH qY
	TROPICAL_FISH_BUCKET qF
	TROPICAL_FISH_SPAWN_EGG tB
	TUBE_CORAL kA
	TUBE_CORAL_BLOCK kv
	TUBE_CORAL_FAN kK
	TUFF m
	TUFF_BRICKS v
	TUFF_BRICK_SLAB w
	TUFF_BRICK_STAIRS x
	TUFF_BRICK_WALL y
	TUFF_SLAB n
	TUFF_STAIRS o
	TUFF_WALL p
	TURTLE_EGG ko
	TURTLE_HELMET on
	TURTLE_SPAWN_EGG tC
	TWISTING_VINES dH
	VERDANT_FROGLIGHT xe
	VEX_ARMOR_TRIM_SMITHING_TEMPLATE xq
	VEX_SPAWN_EGG tD
	VILLAGER_SPAWN_EGG tE
	VINDICATOR_SPAWN_EGG tF
	VINE fU
	WANDERING_TRADER_SPAWN_EGG tG
	WARDEN_SPAWN_EGG tH
	WARD_ARMOR_TRIM_SMITHING_TEMPLATE xo
	WARPED_BUTTON mr
	WARPED_DOOR mS
	WARPED_FENCE fi
	WARPED_FENCE_GATE nF
	WARPED_FUNGUS dC
	WARPED_FUNGUS_ON_A_STICK nR
	WARPED_HANGING_SIGN qu
	WARPED_HYPHAE cs
	WARPED_NYLIUM I
	WARPED_PLANKS U
	WARPED_PRESSURE_PLATE mG
	WARPED_ROOTS dE
	WARPED_SIGN qj
	WARPED_SLAB ec
	WARPED_STAIRS gD
	WARPED_STEM bM
	WARPED_TRAPDOOR nm
	WARPED_WART_BLOCK iX
	WATER_BUCKET qw
	WAXED_CHISELED_COPPER bl
	WAXED_COPPER_BLOCK bh
	WAXED_COPPER_BULB yg
	WAXED_COPPER_DOOR mX
	WAXED_COPPER_GRATE xY
	WAXED_COPPER_TRAPDOOR nr
	WAXED_CUT_COPPER bp
	WAXED_CUT_COPPER_SLAB bx
	WAXED_CUT_COPPER_STAIRS bt
	WAXED_EXPOSED_CHISELED_COPPER bm
	WAXED_EXPOSED_COPPER bi
	WAXED_EXPOSED_COPPER_BULB yh
	WAXED_EXPOSED_COPPER_DOOR mY
	WAXED_EXPOSED_COPPER_GRATE xZ
	WAXED_EXPOSED_COPPER_TRAPDOOR ns
	WAXED_EXPOSED_CUT_COPPER bq
	WAXED_EXPOSED_CUT_COPPER_SLAB by
	WAXED_EXPOSED_CUT_COPPER_STAIRS bu
	WAXED_OXIDIZED_CHISELED_COPPER bo
	WAXED_OXIDIZED_COPPER bk
	WAXED_OXIDIZED_COPPER_BULB yj
	WAXED_OXIDIZED_COPPER_DOOR na
	WAXED_OXIDIZED_COPPER_GRATE yb
	WAXED_OXIDIZED_COPPER_TRAPDOOR nu
	WAXED_OXIDIZED_CUT_COPPER bs
	WAXED_OXIDIZED_CUT_COPPER_SLAB bA
	WAXED_OXIDIZED_CUT_COPPER_STAIRS bw
	WAXED_WEATHERED_CHISELED_COPPER bn
	WAXED_WEATHERED_COPPER bj
	WAXED_WEATHERED_COPPER_BULB yi
	WAXED_WEATHERED_COPPER_DOOR mZ
	WAXED_WEATHERED_COPPER_GRATE ya
	WAXED_WEATHERED_COPPER_TRAPDOOR nt
	WAXED_WEATHERED_CUT_COPPER br
	WAXED_WEATHERED_CUT_COPPER_SLAB bz
	WAXED_WEATHERED_CUT_COPPER_STAIRS bv
	WAYFINDER_ARMOR_TRIM_SMITHING_TEMPLATE xv
	WEATHERED_CHISELED_COPPER aT
	WEATHERED_COPPER aP
	WEATHERED_COPPER_BULB ye
	WEATHERED_COPPER_DOOR mV
	WEATHERED_COPPER_GRATE xW
	WEATHERED_COPPER_TRAPDOOR np
	WEATHERED_CUT_COPPER aX
	WEATHERED_CUT_COPPER_SLAB bf
	WEATHERED_CUT_COPPER_STAIRS bb
	WEEPING_VINES dG
	WET_SPONGE cE
	WHEAT pt
	WHEAT_SEEDS ps
	WHITE_BANNER uI
	WHITE_BED rz
	WHITE_CANDLE wI
	WHITE_CARPET hD
	WHITE_CONCRETE jI
	WHITE_CONCRETE_POWDER jY
	WHITE_DYE rf
	WHITE_GLAZED_TERRACOTTA js
	WHITE_SHULKER_BOX jc
	WHITE_STAINED_GLASS ic
	WHITE_STAINED_GLASS_PANE is
	WHITE_TERRACOTTA hk
	WHITE_TULIP dq
	WHITE_WOOL cT
	WILD_ARMOR_TRIM_SMITHING_TEMPLATE xn
	WITCH_SPAWN_EGG tI
	WITHER_ROSE dv
	WITHER_SKELETON_SKULL uf
	WITHER_SKELETON_SPAWN_EGG tK
	WITHER_SPAWN_EGG tJ
	WOLF_SPAWN_EGG tL
	WOODEN_AXE oL
	WOODEN_HOE oM
	WOODEN_PICKAXE oK
	WOODEN_SHOVEL oJ
	WOODEN_SWORD oI
	WRITABLE_BOOK tT
	WRITTEN_BOOK tU
	YELLOW_BANNER uM
	YELLOW_BED rD
	YELLOW_CANDLE wM
	YELLOW_CARPET hH
	YELLOW_CONCRETE jM
	YELLOW_CONCRETE_POWDER kc
	YELLOW_DYE rj
	YELLOW_GLAZED_TERRACOTTA jw
	YELLOW_SHULKER_BOX jg
	YELLOW_STAINED_GLASS ig
	YELLOW_STAINED_GLASS_PANE iw
	YELLOW_TERRACOTTA ho
	YELLOW_WOOL cX
	ZOGLIN_SPAWN_EGG tM
	ZOMBIE_HEAD uh
	ZOMBIE_HORSE_SPAWN_EGG tO
	ZOMBIE_SPAWN_EGG tN
	ZOMBIE_VILLAGER_SPAWN_EGG tP
	ZOMBIFIED_PIGLIN_SPAWN_EGG tQ
	registerBlock (Lnet/minecraft/world/item/BlockItem;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; a
	registerItem (Ljava/lang/String;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	registerItem (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	registerItem (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
net/minecraft/world/item/KnowledgeBookItem cnc
	LOGGER b
	RECIPE_TAG a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/LeadItem cnd
	bindPlayerMobs (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/InteractionResult; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/LingeringPotionItem cne
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/MapItem cnf
	DEFAULT_MAP_COLOR e
	IMAGE_HEIGHT b
	IMAGE_WIDTH a
	MAP_LOCK_TAG d
	MAP_SCALE_TAG c
	TAG_MAP f
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	create (Lnet/minecraft/world/level/Level;IIBZZ)Lnet/minecraft/world/item/ItemStack; a
	createAndStoreSavedData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;IIIZZLnet/minecraft/resources/ResourceKey;)V a
	createNewSavedData (Lnet/minecraft/world/level/Level;IIIZZLnet/minecraft/resources/ResourceKey;)I a
	getColor (Lnet/minecraft/world/item/ItemStack;)I o
	getCorrectStateForFluidBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getMapId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/Integer; d
	getSavedData (Ljava/lang/Integer;Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getSavedData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; b
	getTooltipForId (I)Lnet/minecraft/network/chat/Component; c
	getTooltipForId (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; k
	getUpdatePacket (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isBiomeWatery ([ZII)Z a
	lockMap (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)V a
	makeKey (I)Ljava/lang/String; a
	onCraftedPostProcess (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;)V a
	renderBiomePreviewMap (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;)V a
	scaleMap (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;I)V a
	storeMapData (Lnet/minecraft/world/item/ItemStack;I)V a
	update (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/MilkBucketItem cng
	DRINK_DURATION a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/MinecartItem cnh
	DISPENSE_ITEM_BEHAVIOR a
	type b
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/MobBucketItem cni
	emptySound b
	type a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	checkExtraContent (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	playEmptySound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	spawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/item/NameTagItem cnj
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/PickaxeItem cnk
net/minecraft/world/item/PlaceOnWaterBlockItem cnl
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/PlayerHeadItem cnm
	TAG_SKULL_OWNER c
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; m
	verifyTagAfterLoad (Lnet/minecraft/nbt/CompoundTag;)V b
net/minecraft/world/item/PotionItem cnn
	DRINK_DURATION a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; am_
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ProjectileWeaponItem cno
	ARROW_ONLY c
	ARROW_OR_FIREWORK d
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getDefaultProjectileRange ()I d
	getEnchantmentValue ()I c
	getHeldProjectile (Lnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Predicate;)Lnet/minecraft/world/item/ItemStack; a
	getSupportedHeldProjectiles ()Ljava/util/function/Predicate; e
net/minecraft/world/item/Rarity cnp
	$VALUES f
	COMMON a
	EPIC d
	RARE c
	UNCOMMON b
	color e
	$values ()[Lnet/minecraft/world/item/Rarity; a
net/minecraft/world/item/RecordItem cnq
	BY_NAME a
	analogOutput b
	lengthInTicks d
	sound c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getAnalogOutput ()I h
	getBySound (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/item/RecordItem; a
	getDisplayName ()Lnet/minecraft/network/chat/MutableComponent; i
	getLengthInTicks ()I y
	getSound ()Lnet/minecraft/sounds/SoundEvent; x
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SaddleItem cnr
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ScaffoldingBlockItem cns
	mustSurvive ()Z d
	updatePlacementContext (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/item/context/BlockPlaceContext; b
net/minecraft/world/item/ServerItemCooldowns cnt
	player a
	onCooldownEnded (Lnet/minecraft/world/item/Item;)V c
	onCooldownStarted (Lnet/minecraft/world/item/Item;I)V b
net/minecraft/world/item/ShearsItem cnu
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ShieldItem cnv
	EFFECTIVE_BLOCK_DELAY a
	MINIMUM_DURABILITY_DAMAGE b
	TAG_BASE_COLOR c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getColor (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/DyeColor; d
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
	getEquipmentSlot ()Lnet/minecraft/world/entity/EquipmentSlot; g
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ShovelItem cnw
	FLATTENABLES a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SignApplicator cnx
	canApplyToSign (Lnet/minecraft/world/level/block/entity/SignText;Lnet/minecraft/world/entity/player/Player;)Z a
	tryApplyToSign (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/SignBlockEntity;ZLnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/item/SignItem cny
	updateCustomBlockEntityTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/SimpleFoiledItem cnz
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
net/minecraft/world/item/SmithingTemplateItem coa
	APPLIES_TO_TITLE d
	ARMOR_TRIM_ADDITIONS_SLOT_DESCRIPTION i
	ARMOR_TRIM_APPLIES_TO f
	ARMOR_TRIM_BASE_SLOT_DESCRIPTION h
	ARMOR_TRIM_INGREDIENTS g
	DESCRIPTION_FORMAT b
	EMPTY_SLOT_AMETHYST_SHARD I
	EMPTY_SLOT_AXE y
	EMPTY_SLOT_BOOTS w
	EMPTY_SLOT_CHESTPLATE u
	EMPTY_SLOT_DIAMOND G
	EMPTY_SLOT_EMERALD F
	EMPTY_SLOT_HELMET t
	EMPTY_SLOT_HOE x
	EMPTY_SLOT_INGOT C
	EMPTY_SLOT_LAPIS_LAZULI H
	EMPTY_SLOT_LEGGINGS v
	EMPTY_SLOT_PICKAXE B
	EMPTY_SLOT_QUARTZ E
	EMPTY_SLOT_REDSTONE_DUST D
	EMPTY_SLOT_SHOVEL A
	EMPTY_SLOT_SWORD z
	INGREDIENTS_TITLE c
	NETHERITE_UPGRADE e
	NETHERITE_UPGRADE_ADDITIONS_SLOT_DESCRIPTION s
	NETHERITE_UPGRADE_APPLIES_TO j
	NETHERITE_UPGRADE_BASE_SLOT_DESCRIPTION r
	NETHERITE_UPGRADE_INGREDIENTS k
	TITLE_FORMAT a
	additionalSlotEmptyIcons P
	additionsSlotDescription N
	appliesTo J
	baseSlotDescription M
	baseSlotEmptyIcons O
	ingredients K
	upgradeDescription L
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	createArmorTrimTemplate (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/item/SmithingTemplateItem; a
	createArmorTrimTemplate (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/item/SmithingTemplateItem; a
	createNetheriteUpgradeIconList ()Ljava/util/List; C
	createNetheriteUpgradeMaterialList ()Ljava/util/List; D
	createNetheriteUpgradeTemplate ()Lnet/minecraft/world/item/SmithingTemplateItem; h
	createTrimmableArmorIconList ()Ljava/util/List; A
	createTrimmableMaterialIconList ()Ljava/util/List; B
	getAdditionSlotDescription ()Lnet/minecraft/network/chat/Component; x
	getAdditionalSlotEmptyIcons ()Ljava/util/List; z
	getBaseSlotDescription ()Lnet/minecraft/network/chat/Component; i
	getBaseSlotEmptyIcons ()Ljava/util/List; y
net/minecraft/world/item/SnowballItem cob
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/SolidBucketItem coc
	placeSound c
	emptyContents (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/BlockHitResult;)Z a
	getDescriptionId ()Ljava/lang/String; a
	getPlaceSound (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/sounds/SoundEvent; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SpawnEggItem cod
	BY_ID a
	backgroundColor b
	defaultType d
	highlightColor c
	byId (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/item/SpawnEggItem; a
	eggs ()Ljava/lang/Iterable; h
	getColor (I)I a
	getType (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/EntityType; a
	requiredFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; m
	spawnOffspringFromSpawnEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	spawnsEntity (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/entity/EntityType;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SpectralArrowItem coe
	createArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
net/minecraft/world/item/SplashPotionItem cof
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/SpyglassItem cog
	USE_DURATION a
	ZOOM_FOV_MODIFIER b
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	stopUsing (Lnet/minecraft/world/entity/LivingEntity;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/StandingAndWallBlockItem coh
	attachmentDirection c
	wallBlock d
	canPlace (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Z a
	getPlacementState (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
	registerBlocks (Ljava/util/Map;Lnet/minecraft/world/item/Item;)V a
net/minecraft/world/item/SuspiciousStewItem coi
	DEFAULT_DURATION b
	EFFECTS_TAG a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	appendMobEffects (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)V b
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	listPotionEffects (Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Consumer;)V a
	saveMobEffects (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)V a
net/minecraft/world/item/SwordItem coj
	attackDamage a
	defaultModifiers b
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	getDamage ()F h
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/item/ThrowablePotionItem cok
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/Tier col
	getAttackDamageBonus ()F c
	getEnchantmentValue ()I e
	getLevel ()I d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; f
	getSpeed ()F b
	getUses ()I a
net/minecraft/world/item/TieredItem com
	tier a
	getEnchantmentValue ()I c
	getTier ()Lnet/minecraft/world/item/Tier; i
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/item/Tiers coo
	$VALUES m
	DIAMOND d
	GOLD e
	IRON c
	NETHERITE f
	STONE b
	WOOD a
	damage j
	enchantmentValue k
	level g
	repairIngredient l
	speed i
	uses h
	$values ()[Lnet/minecraft/world/item/Tiers; m
	getAttackDamageBonus ()F c
	getEnchantmentValue ()I e
	getLevel ()I d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; f
	getSpeed ()F b
	getUses ()I a
net/minecraft/world/item/TippedArrowItem cop
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; am_
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
net/minecraft/world/item/TooltipFlag coq
	ADVANCED b
	NORMAL a
	isAdvanced ()Z a
	isCreative ()Z b
net/minecraft/world/item/TooltipFlag$Default coq$a
	advanced c
	creative d
	advanced ()Z d
	asCreative ()Lnet/minecraft/world/item/TooltipFlag$Default; c
	creative ()Z e
	isAdvanced ()Z a
	isCreative ()Z b
net/minecraft/world/item/TridentItem cor
	BASE_DAMAGE b
	SHOOT_POWER c
	THROW_THRESHOLD_TIME a
	defaultModifiers d
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getEnchantmentValue ()I c
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/UseAnim cos
	$VALUES k
	BLOCK d
	BOW e
	BRUSH j
	CROSSBOW g
	DRINK c
	EAT b
	NONE a
	SPEAR f
	SPYGLASS h
	TOOT_HORN i
	$values ()[Lnet/minecraft/world/item/UseAnim; a
net/minecraft/world/item/Vanishable cot
net/minecraft/world/item/WritableBookItem cou
	makeSureTagIsValid (Lnet/minecraft/nbt/CompoundTag;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/WrittenBookItem cov
	MAX_GENERATION f
	MAX_PAGES e
	PAGE_EDIT_LENGTH c
	PAGE_LENGTH d
	TAG_AUTHOR i
	TAG_FILTERED_PAGES k
	TAG_FILTERED_TITLE h
	TAG_GENERATION r
	TAG_PAGES j
	TAG_RESOLVED s
	TAG_TITLE g
	TITLE_LENGTH a
	TITLE_MAX_LENGTH b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getGeneration (Lnet/minecraft/world/item/ItemStack;)I d
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; m
	getPageCount (Lnet/minecraft/world/item/ItemStack;)I k
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	makeSureTagIsValid (Lnet/minecraft/nbt/CompoundTag;)Z a
	resolveBookComponents (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/player/Player;)Z a
	resolvePage (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/player/Player;Ljava/lang/String;)Ljava/lang/String; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/alchemy/Potion cow
	builtInRegistryHolder c
	effects b
	name a
	builtInRegistryHolder ()Lnet/minecraft/core/Holder$Reference; c
	byName (Ljava/lang/String;)Lnet/minecraft/world/item/alchemy/Potion; a
	getEffects ()Ljava/util/List; a
	getName (Ljava/lang/String;)Ljava/lang/String; b
	hasInstantEffects ()Z b
net/minecraft/world/item/alchemy/PotionBrewing cox
	ALLOWED_CONTAINER e
	ALLOWED_CONTAINERS d
	BREWING_TIME_SECONDS a
	CONTAINER_MIXES c
	POTION_MIXES b
	addContainer (Lnet/minecraft/world/item/Item;)V a
	addContainerRecipe (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;)V a
	addMix (Lnet/minecraft/world/item/alchemy/Potion;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/alchemy/Potion;)V a
	bootStrap ()V a
	hasContainerMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	hasMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	hasPotionMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	isBrewablePotion (Lnet/minecraft/world/item/alchemy/Potion;)Z a
	isContainerIngredient (Lnet/minecraft/world/item/ItemStack;)Z b
	isIngredient (Lnet/minecraft/world/item/ItemStack;)Z a
	isPotionIngredient (Lnet/minecraft/world/item/ItemStack;)Z c
	mix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; d
net/minecraft/world/item/alchemy/PotionBrewing$Mix cox$a
	from a
	ingredient b
	to c
net/minecraft/world/item/alchemy/PotionUtils coy
	EMPTY_COLOR d
	NO_EFFECT e
	TAG_CUSTOM_POTION_COLOR b
	TAG_CUSTOM_POTION_EFFECTS a
	TAG_POTION c
	addPotionTooltip (Ljava/util/List;Ljava/util/List;FF)V a
	addPotionTooltip (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;FF)V a
	getAllEffects (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; a
	getAllEffects (Lnet/minecraft/world/item/alchemy/Potion;Ljava/util/Collection;)Ljava/util/List; a
	getColor (Ljava/util/Collection;)I a
	getColor (Lnet/minecraft/world/item/ItemStack;)I c
	getColor (Lnet/minecraft/world/item/alchemy/Potion;)I a
	getCustomEffects (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; b
	getCustomEffects (Lnet/minecraft/nbt/CompoundTag;Ljava/util/List;)V a
	getCustomEffects (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
	getMobEffects (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	getPotion (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/item/alchemy/Potion; c
	getPotion (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/alchemy/Potion; d
	setCustomEffects (Lnet/minecraft/world/item/ItemStack;Ljava/util/Collection;)Lnet/minecraft/world/item/ItemStack; a
	setPotion (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/alchemy/Potions coz
	AWKWARD f
	EMPTY b
	EMPTY_ID a
	FIRE_RESISTANCE n
	HARMING C
	HEALING A
	INVISIBILITY i
	LEAPING k
	LONG_FIRE_RESISTANCE o
	LONG_INVISIBILITY j
	LONG_LEAPING l
	LONG_NIGHT_VISION h
	LONG_POISON F
	LONG_REGENERATION I
	LONG_SLOWNESS t
	LONG_SLOW_FALLING R
	LONG_STRENGTH L
	LONG_SWIFTNESS q
	LONG_TURTLE_MASTER w
	LONG_WATER_BREATHING z
	LONG_WEAKNESS O
	LUCK P
	MUNDANE d
	NIGHT_VISION g
	POISON E
	REGENERATION H
	SLOWNESS s
	SLOW_FALLING Q
	STRENGTH K
	STRONG_HARMING D
	STRONG_HEALING B
	STRONG_LEAPING m
	STRONG_POISON G
	STRONG_REGENERATION J
	STRONG_SLOWNESS u
	STRONG_STRENGTH M
	STRONG_SWIFTNESS r
	STRONG_TURTLE_MASTER x
	SWIFTNESS p
	THICK e
	TURTLE_MASTER v
	WATER c
	WATER_BREATHING y
	WEAKNESS N
	register (Ljava/lang/String;Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/item/alchemy/Potion; a
	register (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/item/alchemy/Potion; a
net/minecraft/world/item/armortrim/ArmorTrim cpb
	CODEC a
	LOGGER c
	TAG_TRIM_ID b
	UPGRADE_TITLE d
	innerTexture g
	material e
	outerTexture h
	pattern f
	appendUpgradeHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/RegistryAccess;Ljava/util/List;)V a
	getColorPaletteSuffix (Lnet/minecraft/world/item/ArmorMaterial;)Ljava/lang/String; c
	getTrim (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/item/ItemStack;Z)Ljava/util/Optional; a
	hasPatternAndMaterial (Lnet/minecraft/core/Holder;Lnet/minecraft/core/Holder;)Z a
	innerTexture (Lnet/minecraft/world/item/ArmorMaterial;)Lnet/minecraft/resources/ResourceLocation; a
	material ()Lnet/minecraft/core/Holder; b
	outerTexture (Lnet/minecraft/world/item/ArmorMaterial;)Lnet/minecraft/resources/ResourceLocation; b
	pattern ()Lnet/minecraft/core/Holder; a
	setTrim (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/armortrim/ArmorTrim;)Z a
net/minecraft/world/item/armortrim/TrimMaterial cpc
	CODEC b
	DIRECT_CODEC a
	assetName c
	description g
	ingredient d
	itemModelIndex e
	overrideArmorMaterials f
	assetName ()Ljava/lang/String; a
	create (Ljava/lang/String;Lnet/minecraft/world/item/Item;FLnet/minecraft/network/chat/Component;Ljava/util/Map;)Lnet/minecraft/world/item/armortrim/TrimMaterial; a
	description ()Lnet/minecraft/network/chat/Component; e
	ingredient ()Lnet/minecraft/core/Holder; b
	itemModelIndex ()F c
	overrideArmorMaterials ()Ljava/util/Map; d
net/minecraft/world/item/armortrim/TrimMaterials cpd
	AMETHYST j
	COPPER e
	DIAMOND h
	EMERALD g
	GOLD f
	IRON b
	LAPIS i
	NETHERITE c
	QUARTZ a
	REDSTONE d
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	getFromIngredient (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/Item;Lnet/minecraft/network/chat/Style;F)V a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/Item;Lnet/minecraft/network/chat/Style;FLjava/util/Map;)V a
	registryKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/item/armortrim/TrimPattern cpe
	CODEC b
	DIRECT_CODEC a
	assetId c
	decal f
	description e
	templateItem d
	assetId ()Lnet/minecraft/resources/ResourceLocation; a
	copyWithStyle (Lnet/minecraft/core/Holder;)Lnet/minecraft/network/chat/Component; a
	decal ()Z d
	description ()Lnet/minecraft/network/chat/Component; c
	templateItem ()Lnet/minecraft/core/Holder; b
net/minecraft/world/item/armortrim/TrimPatterns cpf
	COAST c
	DUNE b
	EYE f
	HOST p
	RAISER o
	RIB j
	SENTRY a
	SHAPER m
	SILENCE n
	SNOUT i
	SPIRE k
	TIDE h
	VEX g
	WARD e
	WAYFINDER l
	WILD d
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	getFromTemplate (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceKey;)V a
	registryKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/item/context/BlockPlaceContext cph
	relativePos b
	replaceClicked a
	at (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/item/context/BlockPlaceContext; a
	canPlace ()Z b
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getNearestLookingDirection ()Lnet/minecraft/core/Direction; d
	getNearestLookingDirections ()[Lnet/minecraft/core/Direction; f
	getNearestLookingVerticalDirection ()Lnet/minecraft/core/Direction; e
	replacingClickedOnBlock ()Z c
net/minecraft/world/item/context/DirectionalPlaceContext cpi
	direction b
	canPlace ()Z b
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getHorizontalDirection ()Lnet/minecraft/core/Direction; g
	getNearestLookingDirection ()Lnet/minecraft/core/Direction; d
	getNearestLookingDirections ()[Lnet/minecraft/core/Direction; f
	getRotation ()F i
	isSecondaryUseActive ()Z h
	replacingClickedOnBlock ()Z c
net/minecraft/world/item/context/UseOnContext cpj
	hand b
	hitResult c
	itemStack e
	level d
	player a
	getClickLocation ()Lnet/minecraft/world/phys/Vec3; l
	getClickedFace ()Lnet/minecraft/core/Direction; k
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getHand ()Lnet/minecraft/world/InteractionHand; p
	getHitResult ()Lnet/minecraft/world/phys/BlockHitResult; j
	getHorizontalDirection ()Lnet/minecraft/core/Direction; g
	getItemInHand ()Lnet/minecraft/world/item/ItemStack; n
	getLevel ()Lnet/minecraft/world/level/Level; q
	getPlayer ()Lnet/minecraft/world/entity/player/Player; o
	getRotation ()F i
	isInside ()Z m
	isSecondaryUseActive ()Z h
net/minecraft/world/item/crafting/AbstractCookingRecipe cpl
	category b
	cookingTime g
	experience f
	group c
	ingredient d
	result e
	type a
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	category ()Lnet/minecraft/world/item/crafting/CookingBookCategory; f
	getCookingTime ()I d
	getExperience ()F b
	getGroup ()Ljava/lang/String; c
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; e
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/AbstractCookingRecipe$Factory cpl$a
net/minecraft/world/item/crafting/ArmorDyeRecipe cpm
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/BannerDuplicateRecipe cpn
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; a
	getRemainingItems (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/core/NonNullList; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/BlastingRecipe cpo
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; g
net/minecraft/world/item/crafting/BookCloningRecipe cpp
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; a
	getRemainingItems (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/core/NonNullList; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/CampfireCookingRecipe cpq
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; g
net/minecraft/world/item/crafting/CookingBookCategory cpr
	$VALUES f
	BLOCKS b
	CODEC d
	FOOD a
	MISC c
	name e
	$values ()[Lnet/minecraft/world/item/crafting/CookingBookCategory; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/item/crafting/CraftingBookCategory cps
	$VALUES g
	BUILDING a
	CODEC e
	EQUIPMENT c
	MISC d
	REDSTONE b
	name f
	$values ()[Lnet/minecraft/world/item/crafting/CraftingBookCategory; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/item/crafting/CraftingRecipe cpt
	category ()Lnet/minecraft/world/item/crafting/CraftingBookCategory; d
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; e
net/minecraft/world/item/crafting/CustomRecipe cpu
	category a
	category ()Lnet/minecraft/world/item/crafting/CraftingBookCategory; d
	getResultItem (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	isSpecial ()Z aq_
net/minecraft/world/item/crafting/DecoratedPotRecipe cpv
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/FireworkRocketRecipe cpw
	GUNPOWDER_INGREDIENT b
	PAPER_INGREDIENT a
	STAR_INGREDIENT c
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getResultItem (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/FireworkStarFadeRecipe cpx
	STAR_INGREDIENT a
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/FireworkStarRecipe cpy
	FLICKER_INGREDIENT c
	GUNPOWDER_INGREDIENT e
	SHAPE_BY_ITEM d
	SHAPE_INGREDIENT a
	TRAIL_INGREDIENT b
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getResultItem (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/Ingredient cpz
	CODEC b
	CODEC_NONEMPTY c
	EMPTY a
	itemStacks e
	stackingIds f
	values d
	codec (Z)Lcom/mojang/serialization/Codec; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Ingredient; b
	fromValues (Ljava/util/stream/Stream;)Lnet/minecraft/world/item/crafting/Ingredient; b
	getItems ()[Lnet/minecraft/world/item/ItemStack; a
	getStackingIds ()Lit/unimi/dsi/fastutil/ints/IntList; b
	isEmpty ()Z c
	of ()Lnet/minecraft/world/item/crafting/Ingredient; d
	of (Ljava/util/stream/Stream;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of ([Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of ([Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/item/crafting/Ingredient; a
	test (Lnet/minecraft/world/item/ItemStack;)Z a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/item/crafting/Ingredient$ItemValue cpz$a
	CODEC c
	item b
	getItems ()Ljava/util/Collection; a
	item ()Lnet/minecraft/world/item/ItemStack; b
net/minecraft/world/item/crafting/Ingredient$TagValue cpz$b
	CODEC c
	tag b
	getItems ()Ljava/util/Collection; a
	tag ()Lnet/minecraft/tags/TagKey; b
net/minecraft/world/item/crafting/Ingredient$Value cpz$c
	CODEC a
	getItems ()Ljava/util/Collection; a
net/minecraft/world/item/crafting/MapCloningRecipe cqa
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/MapExtendingRecipe cqb
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	findFilledMap (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	isSpecial ()Z aq_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/Recipe cqc
	CODEC h
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getGroup ()Ljava/lang/String; c
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; a
	getResultItem (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; g
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; e
	isIncomplete ()Z i
	isSpecial ()Z aq_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	showNotification ()Z h
net/minecraft/world/item/crafting/RecipeCache cqd
	cachedRecipeManager b
	entries a
	compute (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	get (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/inventory/CraftingContainer;)Ljava/util/Optional; a
	insert (Ljava/util/List;Lnet/minecraft/world/item/crafting/CraftingRecipe;)V a
	moveEntryToFront (I)V a
	validateRecipeManager (Lnet/minecraft/world/level/Level;)V a
net/minecraft/world/item/crafting/RecipeCache$Entry cqd$a
	key a
	value b
	key ()Lnet/minecraft/core/NonNullList; a
	matches (Ljava/util/List;)Z a
	value ()Lnet/minecraft/world/item/crafting/CraftingRecipe; b
net/minecraft/world/item/crafting/RecipeHolder cqe
	id a
	value b
	id ()Lnet/minecraft/resources/ResourceLocation; a
	value ()Lnet/minecraft/world/item/crafting/Recipe; b
net/minecraft/world/item/crafting/RecipeManager cqf
	GSON a
	LOGGER b
	byName d
	hasErrors e
	recipes c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	byKey (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	byType (Lnet/minecraft/world/item/crafting/RecipeType;)Ljava/util/Map; c
	createCheck (Lnet/minecraft/world/item/crafting/RecipeType;)Lnet/minecraft/world/item/crafting/RecipeManager$CachedCheck; b
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/RecipeHolder; a
	getAllRecipesFor (Lnet/minecraft/world/item/crafting/RecipeType;)Ljava/util/List; a
	getRecipeFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getRecipeFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	getRecipeIds ()Ljava/util/stream/Stream; d
	getRecipes ()Ljava/util/Collection; b
	getRecipesFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Ljava/util/List; b
	getRemainingItemsFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Lnet/minecraft/core/NonNullList; c
	hadErrorsLoading ()Z a
	replaceRecipes (Ljava/lang/Iterable;)V a
net/minecraft/world/item/crafting/RecipeManager$CachedCheck cqf$a
	getRecipeFor (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
net/minecraft/world/item/crafting/RecipeSerializer cqg
	ARMOR_DYE c
	BANNER_DUPLICATE k
	BLASTING_RECIPE q
	BOOK_CLONING d
	CAMPFIRE_COOKING_RECIPE s
	DECORATED_POT_RECIPE w
	FIREWORK_ROCKET g
	FIREWORK_STAR h
	FIREWORK_STAR_FADE i
	MAP_CLONING e
	MAP_EXTENDING f
	REPAIR_ITEM o
	SHAPED_RECIPE a
	SHAPELESS_RECIPE b
	SHIELD_DECORATION l
	SHULKER_BOX_COLORING m
	SMELTING_RECIPE p
	SMITHING_TRANSFORM u
	SMITHING_TRIM v
	SMOKING_RECIPE r
	STONECUTTER t
	SUSPICIOUS_STEW n
	TIPPED_ARROW j
	codec ()Lcom/mojang/serialization/Codec; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	register (Ljava/lang/String;Lnet/minecraft/world/item/crafting/RecipeSerializer;)Lnet/minecraft/world/item/crafting/RecipeSerializer; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/crafting/RecipeType cqh
	BLASTING c
	CAMPFIRE_COOKING e
	CRAFTING a
	SMELTING b
	SMITHING g
	SMOKING d
	STONECUTTING f
	register (Ljava/lang/String;)Lnet/minecraft/world/item/crafting/RecipeType; a
net/minecraft/world/item/crafting/RepairItemRecipe cqi
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShapedRecipe cqj
	category d
	group c
	pattern a
	result b
	showNotification e
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	category ()Lnet/minecraft/world/item/crafting/CraftingBookCategory; d
	getGroup ()Ljava/lang/String; c
	getHeight ()I k
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	getWidth ()I j
	isIncomplete ()Z i
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
	showNotification ()Z h
net/minecraft/world/item/crafting/ShapedRecipe$Serializer cqj$a
	CODEC x
	codec ()Lcom/mojang/serialization/Codec; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/ShapedRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/ShapedRecipe;)V a
net/minecraft/world/item/crafting/ShapedRecipePattern cqk
	MAP_CODEC a
	MAX_SIZE f
	data e
	height c
	ingredients d
	width b
	data ()Ljava/util/Optional; d
	firstNonSpace (Ljava/lang/String;)I a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/ShapedRecipePattern; b
	height ()I b
	ingredients ()Lnet/minecraft/core/NonNullList; c
	lastNonSpace (Ljava/lang/String;)I b
	matches (Lnet/minecraft/world/inventory/CraftingContainer;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;IIZ)Z a
	of (Ljava/util/Map;Ljava/util/List;)Lnet/minecraft/world/item/crafting/ShapedRecipePattern; a
	of (Ljava/util/Map;[Ljava/lang/String;)Lnet/minecraft/world/item/crafting/ShapedRecipePattern; a
	shrink (Ljava/util/List;)[Ljava/lang/String; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lnet/minecraft/world/item/crafting/ShapedRecipePattern$Data;)Lcom/mojang/serialization/DataResult; a
	width ()I a
net/minecraft/world/item/crafting/ShapedRecipePattern$Data cqk$a
	MAP_CODEC a
	PATTERN_CODEC d
	SYMBOL_CODEC e
	key b
	pattern c
	key ()Ljava/util/Map; a
	pattern ()Ljava/util/List; b
net/minecraft/world/item/crafting/ShapelessRecipe cql
	category b
	group a
	ingredients d
	result c
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	category ()Lnet/minecraft/world/item/crafting/CraftingBookCategory; d
	getGroup ()Ljava/lang/String; c
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShapelessRecipe$Serializer cql$a
	CODEC x
	codec ()Lcom/mojang/serialization/Codec; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/ShapelessRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/ShapelessRecipe;)V a
net/minecraft/world/item/crafting/ShieldDecorationRecipe cqm
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShulkerBoxColoring cqn
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/SimpleCookingSerializer cqo
	codec y
	factory x
	codec ()Lcom/mojang/serialization/Codec; a
	create (Ljava/lang/String;Lnet/minecraft/world/item/crafting/CookingBookCategory;Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/item/ItemStack;FI)Lnet/minecraft/world/item/crafting/AbstractCookingRecipe; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/AbstractCookingRecipe; b
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/AbstractCookingRecipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/crafting/SimpleCraftingRecipeSerializer cqp
	codec y
	constructor x
	codec ()Lcom/mojang/serialization/Codec; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/CraftingRecipe; b
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/CraftingRecipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/crafting/SimpleCraftingRecipeSerializer$Factory cqp$a
net/minecraft/world/item/crafting/SingleItemRecipe cqq
	group c
	ingredient a
	result b
	serializer e
	type d
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getGroup ()Ljava/lang/String; c
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; e
net/minecraft/world/item/crafting/SingleItemRecipe$Factory cqq$a
net/minecraft/world/item/crafting/SingleItemRecipe$Serializer cqq$b
	codec y
	factory x
	codec ()Lcom/mojang/serialization/Codec; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/SingleItemRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/SingleItemRecipe;)V a
net/minecraft/world/item/crafting/SmeltingRecipe cqr
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; g
net/minecraft/world/item/crafting/SmithingRecipe cqs
	canCraftInDimensions (II)Z a
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; g
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; e
	isAdditionIngredient (Lnet/minecraft/world/item/ItemStack;)Z c
	isBaseIngredient (Lnet/minecraft/world/item/ItemStack;)Z b
	isTemplateIngredient (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/item/crafting/SmithingTransformRecipe cqt
	addition c
	base b
	result d
	template a
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getResultItem (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	isAdditionIngredient (Lnet/minecraft/world/item/ItemStack;)Z c
	isBaseIngredient (Lnet/minecraft/world/item/ItemStack;)Z b
	isIncomplete ()Z i
	isTemplateIngredient (Lnet/minecraft/world/item/ItemStack;)Z a
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/SmithingTransformRecipe$Serializer cqt$a
	CODEC x
	codec ()Lcom/mojang/serialization/Codec; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/SmithingTransformRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/SmithingTransformRecipe;)V a
net/minecraft/world/item/crafting/SmithingTrimRecipe cqu
	addition c
	base b
	template a
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getResultItem (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	isAdditionIngredient (Lnet/minecraft/world/item/ItemStack;)Z c
	isBaseIngredient (Lnet/minecraft/world/item/ItemStack;)Z b
	isIncomplete ()Z i
	isTemplateIngredient (Lnet/minecraft/world/item/ItemStack;)Z a
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/SmithingTrimRecipe$Serializer cqu$a
	CODEC x
	codec ()Lcom/mojang/serialization/Codec; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/SmithingTrimRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/SmithingTrimRecipe;)V a
net/minecraft/world/item/crafting/SmokingRecipe cqv
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; g
net/minecraft/world/item/crafting/StonecutterRecipe cqw
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; g
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/SuspiciousStewRecipe cqx
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/TippedArrowRecipe cqy
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ar_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/enchantment/ArrowDamageEnchantment cra
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowFireEnchantment crb
	getMaxCost (I)I b
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowInfiniteEnchantment crc
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowKnockbackEnchantment crd
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowPiercingEnchantment cre
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/BindingCurseEnchantment crf
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	getMaxCost (I)I b
	getMinCost (I)I a
	isCurse ()Z c
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/DamageEnchantment crg
	ALL a
	ARTHROPODS c
	LEVEL_COST i
	LEVEL_COST_SPAN j
	MIN_COST h
	NAMES g
	UNDEAD b
	type d
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	doPostAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V a
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/DigDurabilityEnchantment crh
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	shouldIgnoreDurabilityDrop (Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/item/enchantment/DiggingEnchantment cri
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/Enchantment crj
	builtInRegistryHolder c
	category e
	descriptionId f
	rarity b
	slots a
	builtInRegistryHolder ()Lnet/minecraft/core/Holder$Reference; j
	byId (I)Lnet/minecraft/world/item/enchantment/Enchantment; c
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	doPostAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V a
	doPostHurt (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V b
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getDamageProtection (ILnet/minecraft/world/damagesource/DamageSource;)I a
	getDescriptionId ()Ljava/lang/String; g
	getFullname (I)Lnet/minecraft/network/chat/Component; d
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	getMinLevel ()I e
	getOrCreateDescriptionId ()Ljava/lang/String; f
	getRarity ()Lnet/minecraft/world/item/enchantment/Enchantment$Rarity; d
	getSlotItems (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Map; a
	isCompatibleWith (Lnet/minecraft/world/item/enchantment/Enchantment;)Z b
	isCurse ()Z c
	isDiscoverable ()Z i
	isTradeable ()Z h
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/Enchantment$Rarity crj$a
	$VALUES f
	COMMON a
	RARE c
	UNCOMMON b
	VERY_RARE d
	weight e
	$values ()[Lnet/minecraft/world/item/enchantment/Enchantment$Rarity; b
	getWeight ()I a
net/minecraft/world/item/enchantment/EnchantmentCategory crk
	$VALUES o
	ARMOR a
	ARMOR_CHEST d
	ARMOR_FEET b
	ARMOR_HEAD e
	ARMOR_LEGS c
	BOW k
	BREAKABLE j
	CROSSBOW m
	DIGGER g
	FISHING_ROD h
	TRIDENT i
	VANISHABLE n
	WEAPON f
	WEARABLE l
	$values ()[Lnet/minecraft/world/item/enchantment/EnchantmentCategory; a
	canEnchant (Lnet/minecraft/world/item/Item;)Z a
net/minecraft/world/item/enchantment/EnchantmentHelper crl
	SWIFT_SNEAK_EXTRA_FACTOR c
	TAG_ENCH_ID a
	TAG_ENCH_LEVEL b
	deserializeEnchantments (Lnet/minecraft/nbt/ListTag;)Ljava/util/Map; a
	doPostDamageEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V b
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V a
	enchantItem (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/item/ItemStack;IZ)Lnet/minecraft/world/item/ItemStack; a
	filterCompatibleEnchantments (Ljava/util/List;Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)V a
	getAvailableEnchantmentResults (ILnet/minecraft/world/item/ItemStack;Z)Ljava/util/List; a
	getBlockEfficiency (Lnet/minecraft/world/entity/LivingEntity;)I g
	getDamageBonus (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/MobType;)F a
	getDamageProtection (Ljava/lang/Iterable;Lnet/minecraft/world/damagesource/DamageSource;)I a
	getDepthStrider (Lnet/minecraft/world/entity/LivingEntity;)I f
	getEnchantmentCost (Lnet/minecraft/util/RandomSource;IILnet/minecraft/world/item/ItemStack;)I a
	getEnchantmentId (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/resources/ResourceLocation; b
	getEnchantmentId (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/resources/ResourceLocation; a
	getEnchantmentLevel (Lnet/minecraft/nbt/CompoundTag;)I a
	getEnchantmentLevel (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;)I a
	getEnchantments (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Map; a
	getFireAspect (Lnet/minecraft/world/entity/LivingEntity;)I d
	getFishingLuckBonus (Lnet/minecraft/world/item/ItemStack;)I b
	getFishingSpeedBonus (Lnet/minecraft/world/item/ItemStack;)I c
	getItemEnchantmentLevel (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/item/ItemStack;)I a
	getKnockbackBonus (Lnet/minecraft/world/entity/LivingEntity;)I c
	getLoyalty (Lnet/minecraft/world/item/ItemStack;)I g
	getMobLooting (Lnet/minecraft/world/entity/LivingEntity;)I h
	getRandomItemWith (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Map$Entry; b
	getRandomItemWith (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Predicate;)Ljava/util/Map$Entry; a
	getRespiration (Lnet/minecraft/world/entity/LivingEntity;)I e
	getRiptide (Lnet/minecraft/world/item/ItemStack;)I h
	getSneakingSpeedBonus (Lnet/minecraft/world/entity/LivingEntity;)F b
	getSweepingDamageRatio (Lnet/minecraft/world/entity/LivingEntity;)F a
	hasAquaAffinity (Lnet/minecraft/world/entity/LivingEntity;)Z i
	hasBindingCurse (Lnet/minecraft/world/item/ItemStack;)Z d
	hasChanneling (Lnet/minecraft/world/item/ItemStack;)Z i
	hasFrostWalker (Lnet/minecraft/world/entity/LivingEntity;)Z j
	hasSilkTouch (Lnet/minecraft/world/item/ItemStack;)Z f
	hasSoulSpeed (Lnet/minecraft/world/entity/LivingEntity;)Z k
	hasVanishingCurse (Lnet/minecraft/world/item/ItemStack;)Z e
	isEnchantmentCompatible (Ljava/util/Collection;Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	runIterationOnInventory (Lnet/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor;Ljava/lang/Iterable;)V a
	runIterationOnItem (Lnet/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor;Lnet/minecraft/world/item/ItemStack;)V a
	selectEnchantment (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/item/ItemStack;IZ)Ljava/util/List; b
	setEnchantmentLevel (Lnet/minecraft/nbt/CompoundTag;I)V a
	setEnchantments (Ljava/util/Map;Lnet/minecraft/world/item/ItemStack;)V a
	storeEnchantment (Lnet/minecraft/resources/ResourceLocation;I)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor crl$a
net/minecraft/world/item/enchantment/EnchantmentInstance crm
	enchantment a
	level b
net/minecraft/world/item/enchantment/Enchantments crn
	ALL_DAMAGE_PROTECTION a
	AQUA_AFFINITY g
	ARMOR_SLOTS N
	BANE_OF_ARTHROPODS p
	BINDING_CURSE k
	BLAST_PROTECTION d
	BLOCK_EFFICIENCY u
	BLOCK_FORTUNE x
	CHANNELING H
	DEPTH_STRIDER i
	FALL_PROTECTION c
	FIRE_ASPECT r
	FIRE_PROTECTION b
	FISHING_LUCK C
	FISHING_SPEED D
	FLAMING_ARROWS A
	FROST_WALKER j
	IMPALING F
	INFINITY_ARROWS B
	KNOCKBACK q
	LOYALTY E
	MENDING L
	MOB_LOOTING s
	MULTISHOT I
	PIERCING K
	POWER_ARROWS y
	PROJECTILE_PROTECTION e
	PUNCH_ARROWS z
	QUICK_CHARGE J
	RESPIRATION f
	RIPTIDE G
	SHARPNESS n
	SILK_TOUCH v
	SMITE o
	SOUL_SPEED l
	SWEEPING_EDGE t
	SWIFT_SNEAK m
	THORNS h
	UNBREAKING w
	VANISHING_CURSE M
	register (Ljava/lang/String;Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/item/enchantment/Enchantment; a
net/minecraft/world/item/enchantment/FireAspectEnchantment cro
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/FishingSpeedEnchantment crp
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/FrostWalkerEnchantment crq
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isTreasureOnly ()Z b
	onEntityMoved (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
net/minecraft/world/item/enchantment/KnockbackEnchantment crr
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/LootBonusEnchantment crs
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/MendingEnchantment crt
	getMaxCost (I)I b
	getMinCost (I)I a
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/MultiShotEnchantment cru
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMinCost (I)I a
net/minecraft/world/item/enchantment/OxygenEnchantment crv
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ProtectionEnchantment crw
	type a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getDamageProtection (ILnet/minecraft/world/damagesource/DamageSource;)I a
	getExplosionKnockbackAfterDampener (Lnet/minecraft/world/entity/LivingEntity;D)D a
	getFireAfterDampener (Lnet/minecraft/world/entity/LivingEntity;I)I a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ProtectionEnchantment$Type crw$a
	$VALUES h
	ALL a
	EXPLOSION d
	FALL c
	FIRE b
	PROJECTILE e
	levelCost g
	minCost f
	$values ()[Lnet/minecraft/world/item/enchantment/ProtectionEnchantment$Type; c
	getLevelCost ()I b
	getMinCost ()I a
net/minecraft/world/item/enchantment/QuickChargeEnchantment crx
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/SoulSpeedEnchantment cry
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isDiscoverable ()Z i
	isTradeable ()Z h
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/SweepingEdgeEnchantment crz
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	getSweepingDamageRatio (I)F e
net/minecraft/world/item/enchantment/SwiftSneakEnchantment csa
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isDiscoverable ()Z i
	isTradeable ()Z h
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/ThornsEnchantment csb
	CHANCE_PER_LEVEL a
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	doPostHurt (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V b
	getDamage (ILnet/minecraft/util/RandomSource;)I b
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	shouldHit (ILnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/item/enchantment/TridentChannelingEnchantment csc
	getMaxCost (I)I b
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentImpalerEnchantment csd
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentLoyaltyEnchantment cse
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentRiptideEnchantment csf
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/UntouchingEnchantment csg
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMinCost (I)I a
net/minecraft/world/item/enchantment/VanishingCurseEnchantment csh
	getMaxCost (I)I b
	getMinCost (I)I a
	isCurse ()Z c
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/WaterWalkerEnchantment csi
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/WaterWorkerEnchantment csj
	getMaxCost (I)I b
	getMinCost (I)I a
net/minecraft/world/item/trading/Merchant csm
	canRestock ()Z gq
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; gi
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; gg
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; ge
	getVillagerXp ()I w
	isClientSide ()Z gm
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V l
	openTradingScreen (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;I)V a
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V t
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	showProgressBar ()Z gh
net/minecraft/world/item/trading/MerchantOffer csn
	baseCostA a
	costB b
	demand h
	maxUses e
	priceMultiplier i
	result c
	rewardExp f
	specialPriceDiff g
	uses d
	xp j
	addToSpecialPriceDiff (I)V a
	assemble ()Lnet/minecraft/world/item/ItemStack; f
	copy ()Lnet/minecraft/world/item/trading/MerchantOffer; u
	createTag ()Lnet/minecraft/nbt/CompoundTag; t
	getBaseCostA ()Lnet/minecraft/world/item/ItemStack; a
	getCostA ()Lnet/minecraft/world/item/ItemStack; b
	getCostB ()Lnet/minecraft/world/item/ItemStack; c
	getDemand ()I k
	getMaxUses ()I i
	getPriceMultiplier ()F n
	getResult ()Lnet/minecraft/world/item/ItemStack; d
	getSpecialPriceDiff ()I m
	getUses ()I g
	getXp ()I o
	increaseUses ()V j
	isOutOfStock ()Z p
	isRequiredItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	needsRestock ()Z r
	resetSpecialPriceDiff ()V l
	resetUses ()V h
	satisfiedBy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	setSpecialPriceDiff (I)V b
	setToOutOfStock ()V q
	shouldRewardExp ()Z s
	take (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	updateDemand ()V e
net/minecraft/world/item/trading/MerchantOffers cso
	copy ()Lnet/minecraft/world/item/trading/MerchantOffers; b
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/trading/MerchantOffers; b
	createTag ()Lnet/minecraft/nbt/CompoundTag; a
	getRecipeFor (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/trading/MerchantOffer; a
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/BaseCommandBlock csq
	DEFAULT_NAME c
	TIME_FORMAT b
	command i
	lastExecution d
	lastOutput h
	name j
	successCount f
	trackOutput g
	updateLastExecution e
	acceptsFailure ()Z x_
	acceptsSuccess ()Z l_
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; i
	getCommand ()Ljava/lang/String; m
	getLastOutput ()Lnet/minecraft/network/chat/Component; l
	getLevel ()Lnet/minecraft/server/level/ServerLevel; e
	getName ()Lnet/minecraft/network/chat/Component; n
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	getSuccessCount ()I k
	isTrackOutput ()Z o
	isValid ()Z j
	load (Lnet/minecraft/nbt/CompoundTag;)V b
	onUpdated ()V f
	performCommand (Lnet/minecraft/world/level/Level;)Z a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	setCommand (Ljava/lang/String;)V a
	setLastOutput (Lnet/minecraft/network/chat/Component;)V c
	setName (Lnet/minecraft/network/chat/Component;)V b
	setSuccessCount (I)V a
	setTrackOutput (Z)V a
	shouldInformAdmins ()Z W_
	usedBy (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/BaseSpawner csr
	EVENT_SPAWN c
	LOGGER a
	SPAWN_DATA_TAG b
	displayEntity l
	maxNearbyEntities m
	maxSpawnDelay j
	minSpawnDelay i
	nextSpawnData f
	oSpin h
	requiredPlayerRange n
	spawnCount k
	spawnDelay d
	spawnPotentials e
	spawnRange o
	spin g
	broadcastEvent (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
	clientTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	delay (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	getOrCreateDisplayEntity (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/Entity; b
	getOrCreateNextSpawnData (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/SpawnData; a
	getSpin ()D a
	getoSpin ()D b
	isNearPlayer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z c
	load (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)V a
	onEventTriggered (Lnet/minecraft/world/level/Level;I)Z a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	serverTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	setEntityId (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)V a
	setNextSpawnData (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/SpawnData;)V a
net/minecraft/world/level/BlockAndTintGetter css
	canSeeSky (Lnet/minecraft/core/BlockPos;)Z h
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getBrightness (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/BlockPos;)I a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; z_
	getRawBrightness (Lnet/minecraft/core/BlockPos;I)I b
	getShade (Lnet/minecraft/core/Direction;Z)F a
net/minecraft/world/level/BlockCollisions cst
	box a
	cachedBlockGetter h
	cachedBlockGetterPos i
	collisionGetter f
	context b
	cursor c
	entityShape e
	onlySuffocatingBlocks g
	pos d
	resultProvider j
	getChunk (II)Lnet/minecraft/world/level/BlockGetter; a
net/minecraft/world/level/BlockEventData csu
	block b
	paramA c
	paramB d
	pos a
	block ()Lnet/minecraft/world/level/block/Block; b
	paramA ()I c
	paramB ()I d
	pos ()Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/BlockGetter csv
	clip (Lnet/minecraft/world/level/ClipContext;)Lnet/minecraft/world/phys/BlockHitResult; a
	clipWithInteractionOverride (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/BlockHitResult; a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Ljava/util/Optional; a
	getBlockFloorHeight (Lnet/minecraft/core/BlockPos;)D j
	getBlockFloorHeight (Lnet/minecraft/world/phys/shapes/VoxelShape;Ljava/util/function/Supplier;)D a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockStates (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getLightEmission (Lnet/minecraft/core/BlockPos;)I i
	getMaxLightLevel ()I O
	isBlockInLine (Lnet/minecraft/world/level/ClipBlockStateContext;)Lnet/minecraft/world/phys/BlockHitResult; a
	traverseBlocks (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object; a
net/minecraft/world/level/ChunkPos csw
	COORD_BITS h
	COORD_MASK i
	HASH_A l
	HASH_C m
	HASH_Z_XOR n
	INVALID_CHUNK_POS a
	REGION_BITS j
	REGION_MASK k
	REGION_MAX_INDEX d
	REGION_SIZE c
	SAFETY_MARGIN g
	ZERO b
	x e
	z f
	asLong (II)J c
	asLong (Lnet/minecraft/core/BlockPos;)J a
	distanceSquared (II)I e
	distanceSquared (J)I c
	distanceSquared (Lnet/minecraft/world/level/ChunkPos;)I b
	getBlockAt (III)Lnet/minecraft/core/BlockPos; a
	getBlockX (I)I a
	getBlockZ (I)I b
	getChessboardDistance (Lnet/minecraft/world/level/ChunkPos;)I a
	getMaxBlockX ()I f
	getMaxBlockZ ()I g
	getMiddleBlockPosition (I)Lnet/minecraft/core/BlockPos; c
	getMiddleBlockX ()I b
	getMiddleBlockZ ()I c
	getMinBlockX ()I d
	getMinBlockZ ()I e
	getRegionLocalX ()I j
	getRegionLocalZ ()I k
	getRegionX ()I h
	getRegionZ ()I i
	getWorldPosition ()Lnet/minecraft/core/BlockPos; l
	getX (J)I a
	getZ (J)I b
	hash (II)I d
	maxFromRegion (II)Lnet/minecraft/world/level/ChunkPos; b
	minFromRegion (II)Lnet/minecraft/world/level/ChunkPos; a
	rangeClosed (Lnet/minecraft/world/level/ChunkPos;I)Ljava/util/stream/Stream; a
	rangeClosed (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/ChunkPos;)Ljava/util/stream/Stream; a
	toLong ()J a
net/minecraft/world/level/ClipBlockStateContext csx
	block c
	from a
	to b
	getFrom ()Lnet/minecraft/world/phys/Vec3; b
	getTo ()Lnet/minecraft/world/phys/Vec3; a
	isTargetBlock ()Ljava/util/function/Predicate; c
net/minecraft/world/level/ClipContext csy
	block c
	collisionContext e
	fluid d
	from a
	to b
	getBlockShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFluidShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFrom ()Lnet/minecraft/world/phys/Vec3; b
	getTo ()Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/level/ClipContext$Block csy$a
	$VALUES f
	COLLIDER a
	FALLDAMAGE_RESETTING d
	OUTLINE b
	VISUAL c
	shapeGetter e
	$values ()[Lnet/minecraft/world/level/ClipContext$Block; a
net/minecraft/world/level/ClipContext$Fluid csy$b
	$VALUES f
	ANY c
	NONE a
	SOURCE_ONLY b
	WATER d
	canPick e
	$values ()[Lnet/minecraft/world/level/ClipContext$Fluid; a
	canPick (Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/ClipContext$ShapeGetter csy$c
net/minecraft/world/level/CollisionGetter csz
	borderCollision (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	collidesWithSuffocatingBlock (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Z f
	findFreePosition (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/Vec3;DDD)Ljava/util/Optional; a
	findSupportingBlock (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/Optional; g
	getBlockCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/lang/Iterable; e
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/lang/Iterable; d
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; c
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; D_
	isUnobstructed (Lnet/minecraft/world/entity/Entity;)Z f
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	isUnobstructed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Z a
	noBlockCollision (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Z b
	noCollision (Lnet/minecraft/world/entity/Entity;)Z g
	noCollision (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Z a
	noCollision (Lnet/minecraft/world/phys/AABB;)Z b
net/minecraft/world/level/ColorResolver cta
net/minecraft/world/level/CommonLevelAccessor ctb
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Ljava/util/Optional; a
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; c
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
net/minecraft/world/level/CustomSpawner ctc
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/DataPackConfig ctd
	CODEC b
	DEFAULT a
	disabled d
	enabled c
	getDisabled ()Ljava/util/List; b
	getEnabled ()Ljava/util/List; a
net/minecraft/world/level/EmptyBlockGetter cte
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/EmptyBlockGetter; a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getHeight ()I K_
	getMinBuildHeight ()I J_
net/minecraft/world/level/EntityBasedExplosionDamageCalculator ctf
	source a
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Ljava/util/Optional; a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
net/minecraft/world/level/EntityGetter ctg
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a_
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; c
	getNearbyEntities (Ljava/lang/Class;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getNearbyPlayers (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getNearestEntity (Ljava/lang/Class;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDDLnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/entity/LivingEntity; a
	getNearestEntity (Ljava/util/List;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDD)Lnet/minecraft/world/entity/LivingEntity; a
	getNearestPlayer (DDDDLjava/util/function/Predicate;)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (DDDDZ)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/Entity;D)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;DDD)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDD)Lnet/minecraft/world/entity/player/Player; a
	getPlayerByUUID (Ljava/util/UUID;)Lnet/minecraft/world/entity/player/Player; b
	hasNearbyAlivePlayer (DDDD)Z a
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	players ()Ljava/util/List; x
net/minecraft/world/level/Explosion cth
	EXPLOSION_DAMAGE_CALCULATOR a
	MAX_DROPS_PER_COMBINED_STACK b
	blockInteraction d
	damageCalculator m
	damageSource l
	explosionSound p
	fire c
	hitPlayers r
	largeExplosionParticles o
	level f
	radius k
	random e
	smallExplosionParticles n
	source j
	toBlow q
	x g
	y h
	z i
	addOrAppendStack (Ljava/util/List;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	center ()Lnet/minecraft/world/phys/Vec3; b
	clearToBlow ()V h
	explode ()V c
	finalizeExplosion (Z)V a
	getBlockInteraction ()Lnet/minecraft/world/level/Explosion$BlockInteraction; j
	getDefaultDamageSource (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	getDirectSourceEntity ()Lnet/minecraft/world/entity/Entity; g
	getExplosionSound ()Lnet/minecraft/sounds/SoundEvent; m
	getHitPlayers ()Ljava/util/Map; e
	getIndirectSourceEntity ()Lnet/minecraft/world/entity/LivingEntity; f
	getIndirectSourceEntityInternal (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/LivingEntity; b
	getLargeExplosionParticles ()Lnet/minecraft/core/particles/ParticleOptions; l
	getSeenPercent (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;)F a
	getSmallExplosionParticles ()Lnet/minecraft/core/particles/ParticleOptions; k
	getToBlow ()Ljava/util/List; i
	interactsWithBlocks ()Z d
	makeDamageCalculator (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/ExplosionDamageCalculator; a
	radius ()F a
net/minecraft/world/level/Explosion$BlockInteraction cth$a
	$VALUES e
	DESTROY b
	DESTROY_WITH_DECAY c
	KEEP a
	TRIGGER_BLOCK d
	$values ()[Lnet/minecraft/world/level/Explosion$BlockInteraction; a
net/minecraft/world/level/ExplosionDamageCalculator cti
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Ljava/util/Optional; a
	getEntityDamageAmount (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/entity/Entity;)F b
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
	shouldDamageEntity (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/world/level/FoliageColor ctj
	pixels a
	get (DD)I a
	getBirchColor ()I b
	getDefaultColor ()I c
	getEvergreenColor ()I a
	getMangroveColor ()I d
	init ([I)V a
net/minecraft/world/level/ForcedChunksSavedData ctk
	FILE_ID a
	TAG_FORCED b
	chunks c
	factory ()Lnet/minecraft/world/level/saveddata/SavedData$Factory; a
	getChunks ()Lit/unimi/dsi/fastutil/longs/LongSet; b
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/ForcedChunksSavedData; b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/GameRules ctl
	DEFAULT_RANDOM_TICK_SPEED a
	GAME_RULE_TYPES aa
	LOGGER Z
	RULE_ANNOUNCE_ADVANCEMENTS A
	RULE_BLOCK_EXPLOSION_DROP_DECAY Q
	RULE_COMMANDBLOCKOUTPUT j
	RULE_COMMAND_MODIFICATION_BLOCK_LIMIT z
	RULE_DAYLIGHT l
	RULE_DISABLE_ELYTRA_MOVEMENT_CHECK t
	RULE_DISABLE_RAIDS B
	RULE_DOBLOCKDROPS h
	RULE_DOENTITYDROPS i
	RULE_DOFIRETICK b
	RULE_DOINSOMNIA C
	RULE_DOMOBLOOT f
	RULE_DOMOBSPAWNING e
	RULE_DO_IMMEDIATE_RESPAWN D
	RULE_DO_PATROL_SPAWNING K
	RULE_DO_TRADER_SPAWNING L
	RULE_DO_VINES_SPREAD X
	RULE_DO_WARDEN_SPAWNING M
	RULE_DROWNING_DAMAGE G
	RULE_ENDER_PEARLS_VANISH_ON_DEATH Y
	RULE_FALL_DAMAGE H
	RULE_FIRE_DAMAGE I
	RULE_FORGIVE_DEAD_PLAYERS N
	RULE_FREEZE_DAMAGE J
	RULE_GLOBAL_SOUND_EVENTS W
	RULE_KEEPINVENTORY d
	RULE_LAVA_SOURCE_CONVERSION V
	RULE_LIMITED_CRAFTING w
	RULE_LOGADMINCOMMANDS m
	RULE_MAX_COMMAND_CHAIN_LENGTH x
	RULE_MAX_COMMAND_FORK_COUNT y
	RULE_MAX_ENTITY_CRAMMING u
	RULE_MOBGRIEFING c
	RULE_MOB_EXPLOSION_DROP_DECAY R
	RULE_NATURAL_REGENERATION k
	RULE_PLAYERS_NETHER_PORTAL_CREATIVE_DELAY F
	RULE_PLAYERS_NETHER_PORTAL_DEFAULT_DELAY E
	RULE_PLAYERS_SLEEPING_PERCENTAGE P
	RULE_PROJECTILESCANBREAKBLOCKS g
	RULE_RANDOMTICKING o
	RULE_REDUCEDDEBUGINFO q
	RULE_SENDCOMMANDFEEDBACK p
	RULE_SHOWDEATHMESSAGES n
	RULE_SNOW_ACCUMULATION_HEIGHT T
	RULE_SPAWN_RADIUS s
	RULE_SPECTATORSGENERATECHUNKS r
	RULE_TNT_EXPLOSION_DROP_DECAY S
	RULE_UNIVERSAL_ANGER O
	RULE_WATER_SOURCE_CONVERSION U
	RULE_WEATHER_CYCLE v
	rules ab
	assignCap (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules;Lnet/minecraft/server/MinecraftServer;)V a
	assignFrom (Lnet/minecraft/world/level/GameRules;Lnet/minecraft/server/MinecraftServer;)V a
	callVisitorCap (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V a
	copy ()Lnet/minecraft/world/level/GameRules; b
	createTag ()Lnet/minecraft/nbt/CompoundTag; a
	getBoolean (Lnet/minecraft/world/level/GameRules$Key;)Z b
	getInt (Lnet/minecraft/world/level/GameRules$Key;)I c
	getRule (Lnet/minecraft/world/level/GameRules$Key;)Lnet/minecraft/world/level/GameRules$Value; a
	loadFromTag (Lcom/mojang/serialization/DynamicLike;)V a
	register (Ljava/lang/String;Lnet/minecraft/world/level/GameRules$Category;Lnet/minecraft/world/level/GameRules$Type;)Lnet/minecraft/world/level/GameRules$Key; a
	visitGameRuleTypes (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;)V a
net/minecraft/world/level/GameRules$BooleanValue ctl$a
	value b
	copy ()Lnet/minecraft/world/level/GameRules$BooleanValue; e
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	create (Z)Lnet/minecraft/world/level/GameRules$Type; a
	create (ZLjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$Type; a
	deserialize (Ljava/lang/String;)V a
	get ()Z a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$BooleanValue; d
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	serialize ()Ljava/lang/String; b
	set (ZLnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$BooleanValue;Lnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$Category ctl$b
	$VALUES i
	CHAT f
	DROPS d
	MISC g
	MOBS b
	PLAYER a
	SPAWNING c
	UPDATES e
	descriptionId h
	$values ()[Lnet/minecraft/world/level/GameRules$Category; b
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/level/GameRules$GameRuleTypeVisitor ctl$c
	visit (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V a
	visitBoolean (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V b
	visitInteger (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V c
net/minecraft/world/level/GameRules$IntegerValue ctl$d
	value b
	copy ()Lnet/minecraft/world/level/GameRules$IntegerValue; e
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	create (I)Lnet/minecraft/world/level/GameRules$Type; a
	create (ILjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$Type; a
	deserialize (Ljava/lang/String;)V a
	get ()I a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$IntegerValue; d
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	safeParse (Ljava/lang/String;)I c
	serialize ()Ljava/lang/String; b
	set (ILnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$IntegerValue;Lnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	tryDeserialize (Ljava/lang/String;)Z b
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$Key ctl$e
	category b
	id a
	getCategory ()Lnet/minecraft/world/level/GameRules$Category; c
	getDescriptionId ()Ljava/lang/String; b
	getId ()Ljava/lang/String; a
net/minecraft/world/level/GameRules$Type ctl$f
	argument a
	callback c
	constructor b
	visitorCaller d
	callVisitor (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;Lnet/minecraft/world/level/GameRules$Key;)V a
	createArgument (Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; a
	createRule ()Lnet/minecraft/world/level/GameRules$Value; a
net/minecraft/world/level/GameRules$Value ctl$g
	type a
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	deserialize (Ljava/lang/String;)V a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	onChanged (Lnet/minecraft/server/MinecraftServer;)V a
	serialize ()Ljava/lang/String; b
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	setFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V b
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$VisitorCaller ctl$h
net/minecraft/world/level/GameType ctm
	$VALUES m
	ADVENTURE c
	BY_ID g
	CODEC f
	CREATIVE b
	DEFAULT_MODE e
	NOT_SET h
	SPECTATOR d
	SURVIVAL a
	id i
	longName l
	name j
	shortName k
	$values ()[Lnet/minecraft/world/level/GameType; i
	byId (I)Lnet/minecraft/world/level/GameType; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/GameType; a
	byName (Ljava/lang/String;Lnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/GameType; a
	byNullableId (I)Lnet/minecraft/world/level/GameType; b
	getId ()I a
	getLongDisplayName ()Lnet/minecraft/network/chat/Component; d
	getName ()Ljava/lang/String; b
	getNullableId (Lnet/minecraft/world/level/GameType;)I a
	getSerializedName ()Ljava/lang/String; c
	getShortDisplayName ()Lnet/minecraft/network/chat/Component; e
	isBlockPlacingRestricted ()Z f
	isCreative ()Z g
	isSurvival ()Z h
	updatePlayerAbilities (Lnet/minecraft/world/entity/player/Abilities;)V a
net/minecraft/world/level/GrassColor ctn
	pixels a
	get (DD)I a
	getDefaultColor ()I a
	init ([I)V a
net/minecraft/world/level/ItemLike cto
	asItem ()Lnet/minecraft/world/item/Item; k
net/minecraft/world/level/Level ctp
	END j
	LONG_PARTICLE_CLIP_RANGE l
	MAX_BRIGHTNESS n
	MAX_ENTITY_SPAWN_Y p
	MAX_LEVEL_SIZE k
	MIN_ENTITY_SPAWN_Y q
	NETHER i
	OVERWORLD h
	RESOURCE_KEY_CODEC g
	SHORT_PARTICLE_CLIP_RANGE m
	TICKS_PER_DAY o
	addend u
	biomeManager H
	blockEntityTickers r
	damageSources K
	dimension I
	dimensionTypeId D
	dimensionTypeRegistration E
	isClientSide B
	isDebug d
	levelData A
	neighborUpdater s
	oRainLevel v
	oThunderLevel x
	pendingBlockEntityTickers a
	profiler F
	rainLevel w
	randValue t
	random z
	registryAccess J
	skyDarken e
	subTickCount L
	thread c
	threadSafeRandom f
	thunderLevel y
	tickingBlockEntities b
	worldBorder G
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V b
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V b
	addBlockEntityTicker (Lnet/minecraft/world/level/block/entity/TickingBlockEntity;)V a
	addDestroyBlockEffect (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	blockEntityChanged (Lnet/minecraft/core/BlockPos;)V q
	blockEvent (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;II)V a
	broadcastDamageEvent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;)V a
	broadcastEntityEvent (Lnet/minecraft/world/entity/Entity;B)V a
	createFireworks (DDDDDDLnet/minecraft/nbt/CompoundTag;)V a
	damageSources ()Lnet/minecraft/world/damagesource/DamageSources; ai
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	dimension ()Lnet/minecraft/resources/ResourceKey; ae
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; E_
	dimensionTypeId ()Lnet/minecraft/resources/ResourceKey; ac
	dimensionTypeRegistration ()Lnet/minecraft/core/Holder; ad
	disconnect ()V W
	explode (Lnet/minecraft/world/entity/Entity;DDDFLnet/minecraft/world/level/Level$ExplosionInteraction;)Lnet/minecraft/world/level/Explosion; a
	explode (Lnet/minecraft/world/entity/Entity;DDDFZLnet/minecraft/world/level/Level$ExplosionInteraction;)Lnet/minecraft/world/level/Explosion; a
	explode (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLnet/minecraft/world/level/Level$ExplosionInteraction;)Lnet/minecraft/world/level/Explosion; a
	explode (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLnet/minecraft/world/level/Level$ExplosionInteraction;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/level/Explosion; a
	explode (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLnet/minecraft/world/level/Level$ExplosionInteraction;ZLnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/level/Explosion; a
	explode (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;Lnet/minecraft/world/phys/Vec3;FZLnet/minecraft/world/level/Level$ExplosionInteraction;)Lnet/minecraft/world/level/Explosion; a
	fillReportDetails (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReportCategory; a
	gatherChunkSourceStats ()Ljava/lang/String; H
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; G_
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockRandomPos (IIII)Lnet/minecraft/core/BlockPos; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (II)Lnet/minecraft/world/level/chunk/LevelChunk; d
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/LevelChunk; m
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d_
	getDayTime ()J Y
	getDestroyType (Lnet/minecraft/world/level/GameRules$Key;)Lnet/minecraft/world/level/Explosion$BlockInteraction; a
	getEntities ()Lnet/minecraft/world/level/entity/LevelEntityGetter; G
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;Ljava/util/List;)V a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;Ljava/util/List;I)V a
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFreeMapId ()I v
	getGameRules ()Lnet/minecraft/world/level/GameRules; Z
	getGameTime ()J X
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; B_
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; z_
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; af
	getProfilerSupplier ()Ljava/util/function/Supplier; ag
	getRainLevel (F)F d
	getRandom ()Lnet/minecraft/util/RandomSource; F_
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; r
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; K
	getSeaLevel ()I A_
	getServer ()Lnet/minecraft/server/MinecraftServer; o
	getSharedSpawnAngle ()F U
	getSharedSpawnPos ()Lnet/minecraft/core/BlockPos; T
	getSkyDarken ()I C_
	getSunAngle (F)F a
	getThunderLevel (F)F b
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; D_
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	guardEntityTick (Ljava/util/function/Consumer;Lnet/minecraft/world/entity/Entity;)V a
	isClientSide ()Z y_
	isDay ()Z P
	isDebug ()Z ah
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isInSpawnableBounds (Lnet/minecraft/core/BlockPos;)Z l
	isInWorldBounds (Lnet/minecraft/core/BlockPos;)Z k
	isInWorldBoundsHorizontal (Lnet/minecraft/core/BlockPos;)Z g
	isLoaded (Lnet/minecraft/core/BlockPos;)Z p
	isNight ()Z Q
	isOutsideSpawnableHeight (I)Z b
	isRaining ()Z ab
	isRainingAt (Lnet/minecraft/core/BlockPos;)Z r
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	isThundering ()Z aa
	loadedAndEntityCanStandOn (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	loadedAndEntityCanStandOnFace (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;)Z a
	mayInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;)Z a
	neighborChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	neighborShapeChanged (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II)V a
	nextSubTickCount ()J H_
	noSave ()Z t
	onBlockStateChange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	playLocalSound (DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playLocalSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playLocalSound (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSeededSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundSource;FFJ)V a
	playSeededSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFJ)V a
	playSeededSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundSource;FFJ)V a
	playSound (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;)V a
	playSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	prepareWeather ()V V
	registryAccess ()Lnet/minecraft/core/RegistryAccess; I_
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V o
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendPacketToServer (Lnet/minecraft/network/protocol/Packet;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	setBlockAndUpdate (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlocksDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V b
	setMapData (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setRainLevel (F)V e
	setSkyFlashTime (I)V c
	setSpawnSettings (ZZ)V b
	setThunderLevel (F)V c
	shouldTickBlocksAt (J)Z a
	shouldTickBlocksAt (Lnet/minecraft/core/BlockPos;)Z n
	shouldTickDeath (Lnet/minecraft/world/entity/Entity;)Z h
	tickBlockEntities ()V R
	tickRateManager ()Lnet/minecraft/world/TickRateManager; s
	updateNeighborsAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	updateNeighborsAtExceptFromFacing (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;)V a
	updateNeighbourForOutputSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V c
	updateSkyBrightness ()V S
net/minecraft/world/level/Level$ExplosionInteraction ctp$a
	$VALUES f
	BLOCK b
	BLOW e
	MOB c
	NONE a
	TNT d
	$values ()[Lnet/minecraft/world/level/Level$ExplosionInteraction; a
net/minecraft/world/level/LevelAccessor ctq
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	blockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V b
	createTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;I)Lnet/minecraft/world/ticks/ScheduledTick; a
	createTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/ticks/TickPriority;)Lnet/minecraft/world/ticks/ScheduledTick; a
	dayTime ()J aj
	gameEvent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;)V a
	gameEvent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;)V a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)V a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)V a
	getBlockTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; N
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; L
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d_
	getDifficulty ()Lnet/minecraft/world/Difficulty; ak
	getFluidTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; M
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; B_
	getRandom ()Lnet/minecraft/util/RandomSource; F_
	getServer ()Lnet/minecraft/server/MinecraftServer; o
	hasChunk (II)Z b
	levelEvent (ILnet/minecraft/core/BlockPos;I)V c
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	neighborShapeChanged (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II)V a
	nextSubTickCount ()J H_
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;I)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;ILnet/minecraft/world/ticks/TickPriority;)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;I)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;ILnet/minecraft/world/ticks/TickPriority;)V a
net/minecraft/world/level/LevelHeightAccessor ctr
	create (II)Lnet/minecraft/world/level/LevelHeightAccessor; e
	getHeight ()I K_
	getMaxBuildHeight ()I al
	getMaxSection ()I ao
	getMinBuildHeight ()I J_
	getMinSection ()I an
	getSectionIndex (I)I e
	getSectionIndexFromSectionY (I)I f
	getSectionYFromSectionIndex (I)I g
	getSectionsCount ()I am
	isOutsideBuildHeight (I)Z d
	isOutsideBuildHeight (Lnet/minecraft/core/BlockPos;)Z s
net/minecraft/world/level/LevelReader cts
	canSeeSkyFromBelowWater (Lnet/minecraft/core/BlockPos;)Z v
	containsAnyLiquid (Lnet/minecraft/world/phys/AABB;)Z d
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; E_
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; I
	getBiome (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Holder; t
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; G_
	getBlockStatesIfLoaded (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; c
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/ChunkAccess; y
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getHeight ()I K_
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getLightLevelDependentMagicValue (Lnet/minecraft/core/BlockPos;)F x
	getMaxLocalRawBrightness (Lnet/minecraft/core/BlockPos;)I A
	getMaxLocalRawBrightness (Lnet/minecraft/core/BlockPos;I)I c
	getMinBuildHeight ()I J_
	getPathfindingCostFromLightLevels (Lnet/minecraft/core/BlockPos;)F w
	getSeaLevel ()I A_
	getSkyDarken ()I C_
	getUncachedNoiseBiome (III)Lnet/minecraft/core/Holder; a
	hasChunk (II)Z b
	hasChunkAt (II)Z f
	hasChunkAt (Lnet/minecraft/core/BlockPos;)Z B
	hasChunksAt (IIII)Z b
	hasChunksAt (IIIIII)Z a
	hasChunksAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Z a
	holderLookup (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/HolderLookup; a
	isClientSide ()Z y_
	isEmptyBlock (Lnet/minecraft/core/BlockPos;)Z u
	isWaterAt (Lnet/minecraft/core/BlockPos;)Z z
	registryAccess ()Lnet/minecraft/core/RegistryAccess; I_
net/minecraft/world/level/LevelSettings ctt
	allowCommands e
	dataConfiguration g
	difficulty d
	gameRules f
	gameType b
	hardcore c
	levelName a
	allowCommands ()Z e
	copy ()Lnet/minecraft/world/level/LevelSettings; h
	difficulty ()Lnet/minecraft/world/Difficulty; d
	gameRules ()Lnet/minecraft/world/level/GameRules; f
	gameType ()Lnet/minecraft/world/level/GameType; b
	getDataConfiguration ()Lnet/minecraft/world/level/WorldDataConfiguration; g
	hardcore ()Z c
	levelName ()Ljava/lang/String; a
	parse (Lcom/mojang/serialization/Dynamic;Lnet/minecraft/world/level/WorldDataConfiguration;)Lnet/minecraft/world/level/LevelSettings; a
	withDataConfiguration (Lnet/minecraft/world/level/WorldDataConfiguration;)Lnet/minecraft/world/level/LevelSettings; a
	withDifficulty (Lnet/minecraft/world/Difficulty;)Lnet/minecraft/world/level/LevelSettings; a
	withGameType (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/LevelSettings; a
net/minecraft/world/level/LevelSimulatedRW ctu
net/minecraft/world/level/LevelSimulatedReader ctv
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Ljava/util/Optional; a
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
net/minecraft/world/level/LevelTimeAccess ctw
	dayTime ()J aj
	getMoonBrightness ()F ap
	getMoonPhase ()I aq
	getTimeOfDay (F)F f
net/minecraft/world/level/LevelWriter ctx
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z b
	destroyBlock (Lnet/minecraft/core/BlockPos;Z)Z b
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;)Z a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
net/minecraft/world/level/LightLayer cty
	$VALUES c
	BLOCK b
	SKY a
	$values ()[Lnet/minecraft/world/level/LightLayer; a
net/minecraft/world/level/LocalMobCapCalculator ctz
	chunkMap c
	playerMobCounts b
	playersNearChunk a
	addMob (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/MobCategory;)V a
	canSpawn (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/ChunkPos;)Z a
	getPlayersNear (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/List; a
net/minecraft/world/level/LocalMobCapCalculator$MobCounts ctz$a
	counts a
	add (Lnet/minecraft/world/entity/MobCategory;)V a
	canSpawn (Lnet/minecraft/world/entity/MobCategory;)Z b
net/minecraft/world/level/NaturalSpawner cua
	LOGGER c
	MAGIC_NUMBER e
	MIN_SPAWN_DISTANCE d
	SPAWNING_CATEGORIES f
	SPAWN_DISTANCE_BLOCK b
	SPAWN_DISTANCE_CHUNK a
	canSpawnMobAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/biome/MobSpawnSettings$SpawnerData;Lnet/minecraft/core/BlockPos;)Z a
	createState (ILjava/lang/Iterable;Lnet/minecraft/world/level/NaturalSpawner$ChunkGetter;Lnet/minecraft/world/level/LocalMobCapCalculator;)Lnet/minecraft/world/level/NaturalSpawner$SpawnState; a
	getMobForSpawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/Mob; a
	getRandomPosWithin (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/core/BlockPos; a
	getRandomSpawnMobAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; a
	getRoughBiome (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/world/level/biome/Biome; a
	getTopNonCollidingPos (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/entity/EntityType;II)Lnet/minecraft/core/BlockPos; a
	isInNetherFortressBounds (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/StructureManager;)Z a
	isRightDistanceToPlayerAndSpawnPoint (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos$MutableBlockPos;D)Z a
	isSpawnPositionOk (Lnet/minecraft/world/entity/SpawnPlacements$Type;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Z a
	isValidEmptySpawnBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/entity/EntityType;)Z a
	isValidPositionForMob (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;D)Z a
	isValidSpawnPostitionForType (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/MobSpawnSettings$SpawnerData;Lnet/minecraft/core/BlockPos$MutableBlockPos;D)Z a
	mobsAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Holder;)Lnet/minecraft/util/random/WeightedRandomList; a
	spawnCategoryForChunk (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/NaturalSpawner$SpawnPredicate;Lnet/minecraft/world/level/NaturalSpawner$AfterSpawnCallback;)V a
	spawnCategoryForPosition (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	spawnCategoryForPosition (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/NaturalSpawner$SpawnPredicate;Lnet/minecraft/world/level/NaturalSpawner$AfterSpawnCallback;)V a
	spawnForChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/NaturalSpawner$SpawnState;ZZZ)V a
	spawnMobsForChunkGeneration (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/NaturalSpawner$AfterSpawnCallback cua$a
net/minecraft/world/level/NaturalSpawner$ChunkGetter cua$b
net/minecraft/world/level/NaturalSpawner$SpawnPredicate cua$c
net/minecraft/world/level/NaturalSpawner$SpawnState cua$d
	lastCharge h
	lastCheckedPos f
	lastCheckedType g
	localMobCapCalculator e
	mobCategoryCounts b
	spawnPotential c
	spawnableChunkCount a
	unmodifiableMobCategoryCounts d
	afterSpawn (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	canSpawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	canSpawnForCategory (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/ChunkPos;)Z a
	getMobCategoryCounts ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; b
	getSpawnableChunkCount ()I a
net/minecraft/world/level/NoiseColumn cub
	column b
	minY a
	getBlock (I)Lnet/minecraft/world/level/block/state/BlockState; a
	setBlock (ILnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/PathNavigationRegion cuc
	allEmpty d
	centerX a
	centerZ b
	chunks c
	level e
	plains f
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/ChunkAccess; d
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; c
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getHeight ()I K_
	getMinBuildHeight ()I J_
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; a
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; D_
net/minecraft/world/level/PotentialCalculator cud
	charges a
	addCharge (Lnet/minecraft/core/BlockPos;D)V a
	getPotentialEnergyChange (Lnet/minecraft/core/BlockPos;D)D b
net/minecraft/world/level/PotentialCalculator$PointCharge cud$a
	charge b
	pos a
	getPotentialChange (Lnet/minecraft/core/BlockPos;)D a
net/minecraft/world/level/ServerLevelAccessor cue
	addFreshEntityWithPassengers (Lnet/minecraft/world/entity/Entity;)V a_
	getLevel ()Lnet/minecraft/server/level/ServerLevel; E
net/minecraft/world/level/SignalGetter cuf
	DIRECTIONS C
	getBestNeighborSignal (Lnet/minecraft/core/BlockPos;)I D
	getControlInputSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)I a
	getDirectSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getDirectSignalTo (Lnet/minecraft/core/BlockPos;)I e_
	getSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I c
	hasNeighborSignal (Lnet/minecraft/core/BlockPos;)Z C
	hasSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
net/minecraft/world/level/SpawnData cug
	CODEC b
	ENTITY_TAG a
	LIST_CODEC c
	customSpawnRules e
	entityToSpawn d
	customSpawnRules ()Ljava/util/Optional; d
	entityToSpawn ()Lnet/minecraft/nbt/CompoundTag; c
	getCustomSpawnRules ()Ljava/util/Optional; b
	getEntityToSpawn ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/SpawnData$CustomSpawnRules cug$a
	CODEC a
	LIGHT_RANGE d
	blockLightLimit b
	skyLightLimit c
	blockLightLimit ()Lnet/minecraft/util/InclusiveRange; a
	checkLightBoundaries (Lnet/minecraft/util/InclusiveRange;)Lcom/mojang/serialization/DataResult; a
	lightLimit (Ljava/lang/String;)Lcom/mojang/serialization/MapCodec; a
	skyLightLimit ()Lnet/minecraft/util/InclusiveRange; b
net/minecraft/world/level/Spawner cuh
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;Ljava/lang/String;)V a
	getEntityKey (Lnet/minecraft/nbt/CompoundTag;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getSpawnEntityDisplayName (Lnet/minecraft/world/item/ItemStack;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	setEntityId (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/StructureManager cui
	level a
	structureCheck c
	worldOptions b
	addReference (Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	addReferenceForStructure (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/structure/Structure;JLnet/minecraft/world/level/chunk/StructureAccess;)V a
	checkStructurePresence (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/Structure;Z)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; a
	fillStartsForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;Lit/unimi/dsi/fastutil/longs/LongSet;Ljava/util/function/Consumer;)V a
	forWorldGenRegion (Lnet/minecraft/server/level/WorldGenRegion;)Lnet/minecraft/world/level/StructureManager; a
	getAllStructuresAt (Lnet/minecraft/core/BlockPos;)Ljava/util/Map; b
	getStartForStructure (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/chunk/StructureAccess;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStructureAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStructureWithPieceAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStructureWithPieceAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStructureWithPieceAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; b
	hasAnyStructureAt (Lnet/minecraft/core/BlockPos;)Z a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; b
	setStartForStructure (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;Lnet/minecraft/world/level/chunk/StructureAccess;)V a
	shouldGenerateStructures ()Z a
	startsForStructure (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/structure/Structure;)Ljava/util/List; a
	startsForStructure (Lnet/minecraft/world/level/ChunkPos;Ljava/util/function/Predicate;)Ljava/util/List; a
	structureHasPieceAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)Z a
net/minecraft/world/level/WorldDataConfiguration cuj
	CODEC b
	DEFAULT c
	ENABLED_FEATURES_ID a
	dataPacks d
	enabledFeatures e
	dataPacks ()Lnet/minecraft/world/level/DataPackConfig; a
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; b
	expandFeatures (Lnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/world/level/WorldDataConfiguration; a
net/minecraft/world/level/WorldGenLevel cuk
	ensureCanWrite (Lnet/minecraft/core/BlockPos;)Z f_
	getSeed ()J C
	setCurrentlyGenerating (Ljava/util/function/Supplier;)V a
net/minecraft/world/level/biome/AmbientAdditionsSettings cul
	CODEC a
	soundEvent b
	tickChance c
	getSoundEvent ()Lnet/minecraft/core/Holder; a
	getTickChance ()D b
net/minecraft/world/level/biome/AmbientMoodSettings cum
	CODEC a
	LEGACY_CAVE_SETTINGS b
	blockSearchExtent e
	soundEvent c
	soundPositionOffset f
	tickDelay d
	getBlockSearchExtent ()I c
	getSoundEvent ()Lnet/minecraft/core/Holder; a
	getSoundPositionOffset ()D d
	getTickDelay ()I b
net/minecraft/world/level/biome/AmbientParticleSettings cun
	CODEC a
	options b
	probability c
	canSpawn (Lnet/minecraft/util/RandomSource;)Z a
	getOptions ()Lnet/minecraft/core/particles/ParticleOptions; a
net/minecraft/world/level/biome/Biome cuo
	BIOME_INFO_NOISE e
	CODEC c
	DIRECT_CODEC a
	FROZEN_TEMPERATURE_NOISE g
	LIST_CODEC d
	NETWORK_CODEC b
	TEMPERATURE_CACHE_SIZE h
	TEMPERATURE_NOISE f
	climateSettings i
	generationSettings j
	mobSettings k
	specialEffects l
	temperatureCache m
	coldEnoughToSnow (Lnet/minecraft/core/BlockPos;)Z b
	getAmbientAdditions ()Ljava/util/Optional; n
	getAmbientLoop ()Ljava/util/Optional; l
	getAmbientMood ()Ljava/util/Optional; m
	getAmbientParticle ()Ljava/util/Optional; k
	getBackgroundMusic ()Ljava/util/Optional; o
	getBaseTemperature ()F g
	getFogColor ()I e
	getFoliageColor ()I f
	getFoliageColorFromTexture ()I q
	getGenerationSettings ()Lnet/minecraft/world/level/biome/BiomeGenerationSettings; d
	getGrassColor (DD)I a
	getGrassColorFromTexture ()I p
	getHeightAdjustedTemperature (Lnet/minecraft/core/BlockPos;)F e
	getMobSettings ()Lnet/minecraft/world/level/biome/MobSpawnSettings; b
	getPrecipitationAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/biome/Biome$Precipitation; a
	getSkyColor ()I a
	getSpecialEffects ()Lnet/minecraft/world/level/biome/BiomeSpecialEffects; h
	getTemperature (Lnet/minecraft/core/BlockPos;)F f
	getWaterColor ()I i
	getWaterFogColor ()I j
	hasPrecipitation ()Z c
	shouldFreeze (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	shouldFreeze (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Z)Z a
	shouldMeltFrozenOceanIcebergSlightly (Lnet/minecraft/core/BlockPos;)Z d
	shouldSnow (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	warmEnoughToRain (Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/biome/Biome$BiomeBuilder cuo$a
	downfall d
	generationSettings g
	hasPrecipitation a
	mobSpawnSettings f
	specialEffects e
	temperature b
	temperatureModifier c
	build ()Lnet/minecraft/world/level/biome/Biome; a
	downfall (F)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; b
	generationSettings (Lnet/minecraft/world/level/biome/BiomeGenerationSettings;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	hasPrecipitation (Z)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	mobSpawnSettings (Lnet/minecraft/world/level/biome/MobSpawnSettings;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	specialEffects (Lnet/minecraft/world/level/biome/BiomeSpecialEffects;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	temperature (F)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	temperatureAdjustment (Lnet/minecraft/world/level/biome/Biome$TemperatureModifier;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
net/minecraft/world/level/biome/Biome$ClimateSettings cuo$b
	CODEC a
	downfall e
	hasPrecipitation b
	temperature c
	temperatureModifier d
	downfall ()F d
	hasPrecipitation ()Z a
	temperature ()F b
	temperatureModifier ()Lnet/minecraft/world/level/biome/Biome$TemperatureModifier; c
net/minecraft/world/level/biome/Biome$Precipitation cuo$c
	$VALUES f
	CODEC d
	NONE a
	RAIN b
	SNOW c
	name e
	$values ()[Lnet/minecraft/world/level/biome/Biome$Precipitation; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/biome/Biome$TemperatureModifier cuo$d
	$VALUES e
	CODEC c
	FROZEN b
	NONE a
	name d
	$values ()[Lnet/minecraft/world/level/biome/Biome$TemperatureModifier; b
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
	modifyTemperature (Lnet/minecraft/core/BlockPos;F)F a
net/minecraft/world/level/biome/BiomeGenerationSettings cup
	CODEC b
	EMPTY a
	LOGGER c
	carvers d
	featureSet g
	features e
	flowerFeatures f
	features ()Ljava/util/List; b
	getCarvers (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/lang/Iterable; a
	getFlowerFeatures ()Ljava/util/List; a
	hasFeature (Lnet/minecraft/world/level/levelgen/placement/PlacedFeature;)Z a
net/minecraft/world/level/biome/BiomeGenerationSettings$Builder cup$a
	placedFeatures a
	worldCarvers b
	addCarver (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
	addFeature (Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
net/minecraft/world/level/biome/BiomeGenerationSettings$PlainBuilder cup$b
	carvers a
	features b
	addCarver (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$PlainBuilder; a
	addFeature (ILnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$PlainBuilder; a
	addFeature (Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$PlainBuilder; a
	addFeatureStepsUpTo (I)V a
	build ()Lnet/minecraft/world/level/biome/BiomeGenerationSettings; a
net/minecraft/world/level/biome/BiomeManager cuq
	CHUNK_CENTER_QUART a
	ZOOM c
	ZOOM_BITS b
	ZOOM_MASK d
	biomeZoomSeed f
	noiseBiomeSource e
	getBiome (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Holder; a
	getFiddle (J)D b
	getFiddledDistance (JIIIDDD)D a
	getNoiseBiomeAtPosition (DDD)Lnet/minecraft/core/Holder; a
	getNoiseBiomeAtPosition (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Holder; b
	getNoiseBiomeAtQuart (III)Lnet/minecraft/core/Holder; a
	obfuscateSeed (J)J a
	withDifferentSource (Lnet/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource;)Lnet/minecraft/world/level/biome/BiomeManager; a
net/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource cuq$a
net/minecraft/world/level/biome/BiomeResolver cur
net/minecraft/world/level/biome/BiomeSource cus
	CODEC a
	possibleBiomes b
	addDebugInfo (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Climate$Sampler;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	collectPossibleBiomes ()Ljava/util/stream/Stream; b
	findBiomeHorizontal (IIIIILjava/util/function/Predicate;Lnet/minecraft/util/RandomSource;ZLnet/minecraft/world/level/biome/Climate$Sampler;)Lcom/mojang/datafixers/util/Pair; a
	findBiomeHorizontal (IIIILjava/util/function/Predicate;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/biome/Climate$Sampler;)Lcom/mojang/datafixers/util/Pair; a
	findClosestBiome3d (Lnet/minecraft/core/BlockPos;IIILjava/util/function/Predicate;Lnet/minecraft/world/level/biome/Climate$Sampler;Lnet/minecraft/world/level/LevelReader;)Lcom/mojang/datafixers/util/Pair; a
	getBiomesWithin (IIIILnet/minecraft/world/level/biome/Climate$Sampler;)Ljava/util/Set; a
	possibleBiomes ()Ljava/util/Set; c
net/minecraft/world/level/biome/BiomeSources cut
	bootstrap (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/biome/BiomeSpecialEffects cuu
	CODEC a
	ambientAdditionsSettings l
	ambientLoopSoundEvent j
	ambientMoodSettings k
	ambientParticleSettings i
	backgroundMusic m
	fogColor b
	foliageColorOverride f
	grassColorModifier h
	grassColorOverride g
	skyColor e
	waterColor c
	waterFogColor d
	getAmbientAdditionsSettings ()Ljava/util/Optional; k
	getAmbientLoopSoundEvent ()Ljava/util/Optional; i
	getAmbientMoodSettings ()Ljava/util/Optional; j
	getAmbientParticleSettings ()Ljava/util/Optional; h
	getBackgroundMusic ()Ljava/util/Optional; l
	getFogColor ()I a
	getFoliageColorOverride ()Ljava/util/Optional; e
	getGrassColorModifier ()Lnet/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier; g
	getGrassColorOverride ()Ljava/util/Optional; f
	getSkyColor ()I d
	getWaterColor ()I b
	getWaterFogColor ()I c
net/minecraft/world/level/biome/BiomeSpecialEffects$Builder cuu$a
	ambientAdditionsSettings k
	ambientLoopSoundEvent i
	ambientMoodSettings j
	ambientParticle h
	backgroundMusic l
	fogColor a
	foliageColorOverride e
	grassColorModifier g
	grassColorOverride f
	skyColor d
	waterColor b
	waterFogColor c
	ambientAdditionsSound (Lnet/minecraft/world/level/biome/AmbientAdditionsSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientLoopSound (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientMoodSound (Lnet/minecraft/world/level/biome/AmbientMoodSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientParticle (Lnet/minecraft/world/level/biome/AmbientParticleSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	backgroundMusic (Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	build ()Lnet/minecraft/world/level/biome/BiomeSpecialEffects; a
	fogColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	foliageColorOverride (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; e
	grassColorModifier (Lnet/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	grassColorOverride (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; f
	skyColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; d
	waterColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; b
	waterFogColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; c
net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier cuu$b
	$VALUES f
	CODEC d
	DARK_FOREST b
	NONE a
	SWAMP c
	name e
	$values ()[Lnet/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier; b
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
	modifyColor (DDI)I a
net/minecraft/world/level/biome/Biomes cuv
	BADLANDS A
	BAMBOO_JUNGLE z
	BASALT_DELTAS ag
	BEACH M
	BIRCH_FOREST k
	CHERRY_GROVE E
	COLD_OCEAN U
	CRIMSON_FOREST ae
	DARK_FOREST l
	DEEP_COLD_OCEAN V
	DEEP_DARK ab
	DEEP_FROZEN_OCEAN X
	DEEP_LUKEWARM_OCEAN R
	DEEP_OCEAN T
	DESERT f
	DRIPSTONE_CAVES Z
	END_BARRENS al
	END_HIGHLANDS ai
	END_MIDLANDS aj
	ERODED_BADLANDS B
	FLOWER_FOREST j
	FOREST i
	FROZEN_OCEAN W
	FROZEN_PEAKS H
	FROZEN_RIVER L
	GROVE F
	ICE_SPIKES e
	JAGGED_PEAKS I
	JUNGLE x
	LUKEWARM_OCEAN Q
	LUSH_CAVES aa
	MANGROVE_SWAMP h
	MEADOW D
	MUSHROOM_FIELDS Y
	NETHER_WASTES ac
	OCEAN S
	OLD_GROWTH_BIRCH_FOREST m
	OLD_GROWTH_PINE_TAIGA n
	OLD_GROWTH_SPRUCE_TAIGA o
	PLAINS b
	RIVER K
	SAVANNA r
	SAVANNA_PLATEAU s
	SMALL_END_ISLANDS ak
	SNOWY_BEACH N
	SNOWY_PLAINS d
	SNOWY_SLOPES G
	SNOWY_TAIGA q
	SOUL_SAND_VALLEY af
	SPARSE_JUNGLE y
	STONY_PEAKS J
	STONY_SHORE O
	SUNFLOWER_PLAINS c
	SWAMP g
	TAIGA p
	THE_END ah
	THE_VOID a
	WARM_OCEAN P
	WARPED_FOREST ad
	WINDSWEPT_FOREST v
	WINDSWEPT_GRAVELLY_HILLS u
	WINDSWEPT_HILLS t
	WINDSWEPT_SAVANNA w
	WOODED_BADLANDS C
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/biome/CheckerboardColumnBiomeSource cuw
	CODEC b
	allowedBiomes c
	bitShift d
	size e
	codec ()Lcom/mojang/serialization/Codec; a
	collectPossibleBiomes ()Ljava/util/stream/Stream; b
net/minecraft/world/level/biome/Climate cux
	DEBUG_SLOW_BIOME_SEARCH b
	PARAMETER_COUNT a
	QUANTIZATION_FACTOR c
	empty ()Lnet/minecraft/world/level/biome/Climate$Sampler; a
	findSpawnPosition (Ljava/util/List;Lnet/minecraft/world/level/biome/Climate$Sampler;)Lnet/minecraft/core/BlockPos; a
	parameters (FFFFFFF)Lnet/minecraft/world/level/biome/Climate$ParameterPoint; a
	parameters (Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;F)Lnet/minecraft/world/level/biome/Climate$ParameterPoint; a
	quantizeCoord (F)J a
	target (FFFFFF)Lnet/minecraft/world/level/biome/Climate$TargetPoint; a
	unquantizeCoord (J)F a
net/minecraft/world/level/biome/Climate$DistanceMetric cux$a
net/minecraft/world/level/biome/Climate$Parameter cux$b
	CODEC a
	max c
	min b
	distance (J)J a
	distance (Lnet/minecraft/world/level/biome/Climate$Parameter;)J a
	max ()J b
	min ()J a
	point (F)Lnet/minecraft/world/level/biome/Climate$Parameter; a
	span (FF)Lnet/minecraft/world/level/biome/Climate$Parameter; a
	span (Lnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/world/level/biome/Climate$Parameter; b
	span (Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/world/level/biome/Climate$Parameter; a
net/minecraft/world/level/biome/Climate$ParameterList cux$c
	index b
	values a
	codec (Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/Codec; a
	findValue (Lnet/minecraft/world/level/biome/Climate$TargetPoint;)Ljava/lang/Object; a
	findValueBruteForce (Lnet/minecraft/world/level/biome/Climate$TargetPoint;)Ljava/lang/Object; b
	findValueIndex (Lnet/minecraft/world/level/biome/Climate$TargetPoint;)Ljava/lang/Object; c
	findValueIndex (Lnet/minecraft/world/level/biome/Climate$TargetPoint;Lnet/minecraft/world/level/biome/Climate$DistanceMetric;)Ljava/lang/Object; a
	values ()Ljava/util/List; a
net/minecraft/world/level/biome/Climate$ParameterPoint cux$d
	CODEC a
	continentalness d
	depth f
	erosion e
	humidity c
	offset h
	temperature b
	weirdness g
	continentalness ()Lnet/minecraft/world/level/biome/Climate$Parameter; d
	depth ()Lnet/minecraft/world/level/biome/Climate$Parameter; f
	erosion ()Lnet/minecraft/world/level/biome/Climate$Parameter; e
	fitness (Lnet/minecraft/world/level/biome/Climate$TargetPoint;)J a
	humidity ()Lnet/minecraft/world/level/biome/Climate$Parameter; c
	offset ()J h
	parameterSpace ()Ljava/util/List; a
	temperature ()Lnet/minecraft/world/level/biome/Climate$Parameter; b
	weirdness ()Lnet/minecraft/world/level/biome/Climate$Parameter; g
net/minecraft/world/level/biome/Climate$RTree cux$e
	CHILDREN_PER_NODE a
	lastResult c
	root b
	bucketize (Ljava/util/List;)Ljava/util/List; b
	build (ILjava/util/List;)Lnet/minecraft/world/level/biome/Climate$RTree$Node; a
	buildParameterSpace (Ljava/util/List;)Ljava/util/List; c
	comparator (IZ)Ljava/util/Comparator; a
	cost ([Lnet/minecraft/world/level/biome/Climate$Parameter;)J a
	create (Ljava/util/List;)Lnet/minecraft/world/level/biome/Climate$RTree; a
	search (Lnet/minecraft/world/level/biome/Climate$TargetPoint;Lnet/minecraft/world/level/biome/Climate$DistanceMetric;)Ljava/lang/Object; a
	sort (Ljava/util/List;IIZ)V a
net/minecraft/world/level/biome/Climate$RTree$Leaf cux$e$a
	value b
	search ([JLnet/minecraft/world/level/biome/Climate$RTree$Leaf;Lnet/minecraft/world/level/biome/Climate$DistanceMetric;)Lnet/minecraft/world/level/biome/Climate$RTree$Leaf; a
net/minecraft/world/level/biome/Climate$RTree$Node cux$e$b
	parameterSpace a
	distance ([J)J a
	search ([JLnet/minecraft/world/level/biome/Climate$RTree$Leaf;Lnet/minecraft/world/level/biome/Climate$DistanceMetric;)Lnet/minecraft/world/level/biome/Climate$RTree$Leaf; a
net/minecraft/world/level/biome/Climate$RTree$SubTree cux$e$c
	children b
	search ([JLnet/minecraft/world/level/biome/Climate$RTree$Leaf;Lnet/minecraft/world/level/biome/Climate$DistanceMetric;)Lnet/minecraft/world/level/biome/Climate$RTree$Leaf; a
net/minecraft/world/level/biome/Climate$Sampler cux$f
	continentalness c
	depth e
	erosion d
	humidity b
	spawnTarget g
	temperature a
	weirdness f
	continentalness ()Lnet/minecraft/world/level/levelgen/DensityFunction; d
	depth ()Lnet/minecraft/world/level/levelgen/DensityFunction; f
	erosion ()Lnet/minecraft/world/level/levelgen/DensityFunction; e
	findSpawnPosition ()Lnet/minecraft/core/BlockPos; a
	humidity ()Lnet/minecraft/world/level/levelgen/DensityFunction; c
	sample (III)Lnet/minecraft/world/level/biome/Climate$TargetPoint; a
	spawnTarget ()Ljava/util/List; h
	temperature ()Lnet/minecraft/world/level/levelgen/DensityFunction; b
	weirdness ()Lnet/minecraft/world/level/levelgen/DensityFunction; g
net/minecraft/world/level/biome/Climate$SpawnFinder cux$g
	result a
	getSpawnPositionAndFitness (Ljava/util/List;Lnet/minecraft/world/level/biome/Climate$Sampler;II)Lnet/minecraft/world/level/biome/Climate$SpawnFinder$Result; a
	radialSearch (Ljava/util/List;Lnet/minecraft/world/level/biome/Climate$Sampler;FF)V a
net/minecraft/world/level/biome/Climate$SpawnFinder$Result cux$g$a
	fitness b
	location a
	fitness ()J b
	location ()Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/biome/Climate$TargetPoint cux$h
	continentalness c
	depth e
	erosion d
	humidity b
	temperature a
	weirdness f
	continentalness ()J d
	depth ()J f
	erosion ()J e
	humidity ()J c
	temperature ()J b
	toParameterArray ()[J a
	weirdness ()J g
net/minecraft/world/level/biome/FeatureSorter cuy
	buildFeaturesPerStep (Ljava/util/List;Ljava/util/function/Function;Z)Ljava/util/List; a
net/minecraft/world/level/biome/FeatureSorter$StepFeatureData cuy$b
	features a
	indexMapping b
	features ()Ljava/util/List; a
	indexMapping ()Ljava/util/function/ToIntFunction; b
net/minecraft/world/level/biome/FixedBiomeSource cuz
	CODEC b
	biome c
	codec ()Lcom/mojang/serialization/Codec; a
	collectPossibleBiomes ()Ljava/util/stream/Stream; b
	findBiomeHorizontal (IIIIILjava/util/function/Predicate;Lnet/minecraft/util/RandomSource;ZLnet/minecraft/world/level/biome/Climate$Sampler;)Lcom/mojang/datafixers/util/Pair; a
	findClosestBiome3d (Lnet/minecraft/core/BlockPos;IIILjava/util/function/Predicate;Lnet/minecraft/world/level/biome/Climate$Sampler;Lnet/minecraft/world/level/LevelReader;)Lcom/mojang/datafixers/util/Pair; a
	getBiomesWithin (IIIILnet/minecraft/world/level/biome/Climate$Sampler;)Ljava/util/Set; a
net/minecraft/world/level/biome/MobSpawnSettings cva
	CODEC c
	DEFAULT_CREATURE_SPAWN_PROBABILITY e
	EMPTY b
	EMPTY_MOB_LIST a
	LOGGER d
	creatureGenerationProbability f
	mobSpawnCosts h
	spawners g
	getCreatureProbability ()F a
	getMobSpawnCost (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost; a
	getMobs (Lnet/minecraft/world/entity/MobCategory;)Lnet/minecraft/util/random/WeightedRandomList; a
net/minecraft/world/level/biome/MobSpawnSettings$Builder cva$a
	creatureGenerationProbability c
	mobSpawnCosts b
	spawners a
	addMobCharge (Lnet/minecraft/world/entity/EntityType;DD)Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; a
	addSpawn (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/biome/MobSpawnSettings$SpawnerData;)Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; a
	build ()Lnet/minecraft/world/level/biome/MobSpawnSettings; a
	creatureGenerationProbability (F)Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; a
net/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost cva$b
	CODEC a
	charge c
	energyBudget b
	charge ()D b
	energyBudget ()D a
net/minecraft/world/level/biome/MobSpawnSettings$SpawnerData cva$c
	CODEC a
	maxCount d
	minCount c
	type b
net/minecraft/world/level/biome/MultiNoiseBiomeSource cvb
	CODEC c
	DIRECT_CODEC b
	ENTRY_CODEC d
	PRESET_CODEC e
	parameters f
	addDebugInfo (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Climate$Sampler;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	collectPossibleBiomes ()Ljava/util/stream/Stream; b
	createFromList (Lnet/minecraft/world/level/biome/Climate$ParameterList;)Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource; a
	createFromPreset (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource; a
	getNoiseBiome (Lnet/minecraft/world/level/biome/Climate$TargetPoint;)Lnet/minecraft/core/Holder; a
	parameters ()Lnet/minecraft/world/level/biome/Climate$ParameterList; d
	stable (Lnet/minecraft/resources/ResourceKey;)Z a
net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList cvc
	CODEC b
	DIRECT_CODEC a
	parameters d
	preset c
	knownPresets ()Ljava/util/Map; b
	parameters ()Lnet/minecraft/world/level/biome/Climate$ParameterList; a
net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset cvc$a
	BY_NAME f
	CODEC c
	NETHER a
	OVERWORLD b
	id d
	provider e
	generateOverworldBiomes (Ljava/util/function/Function;)Lnet/minecraft/world/level/biome/Climate$ParameterList; a
	id ()Lnet/minecraft/resources/ResourceLocation; b
	provider ()Lnet/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset$SourceProvider; c
	usedBiomes ()Ljava/util/stream/Stream; a
net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset$SourceProvider cvc$a$a
net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterLists cvd
	NETHER a
	OVERWORLD b
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/biome/OverworldBiomeBuilder cve
	DEPTH_DEEP_DARK_DRYNESS_THRESHOLD n
	EROSION_DEEP_DARK_DRYNESS_THRESHOLD m
	EROSION_INDEX_1_START f
	EROSION_INDEX_2_START g
	FAR_INLAND_START e
	FROZEN_RANGE s
	FULL_RANGE o
	HIGH_END j
	HIGH_START a
	LOW_START i
	MIDDLE_BIOMES D
	MIDDLE_BIOMES_VARIANT E
	MID_INLAND_START d
	NEAR_INLAND_START c
	OCEANS C
	PEAK_END l
	PEAK_SIZE k
	PEAK_START b
	PLATEAU_BIOMES F
	PLATEAU_BIOMES_VARIANT G
	SHATTERED_BIOMES H
	UNFROZEN_RANGE t
	VALLEY_SIZE h
	coastContinentalness x
	deepOceanContinentalness v
	erosions r
	farInlandContinentalness B
	humidities q
	inlandContinentalness y
	midInlandContinentalness A
	mushroomFieldsContinentalness u
	nearInlandContinentalness z
	oceanContinentalness w
	temperatures p
	addBiomes (Ljava/util/function/Consumer;)V a
	addBottomBiome (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;FLnet/minecraft/resources/ResourceKey;)V c
	addDebugBiomes (Ljava/util/function/Consumer;)V b
	addHighSlice (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;)V b
	addInlandBiomes (Ljava/util/function/Consumer;)V d
	addLowSlice (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;)V d
	addMidSlice (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;)V c
	addOffCoastBiomes (Ljava/util/function/Consumer;)V c
	addPeaks (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;)V a
	addSurfaceBiome (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;FLnet/minecraft/resources/ResourceKey;)V a
	addUndergroundBiome (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;FLnet/minecraft/resources/ResourceKey;)V b
	addUndergroundBiomes (Ljava/util/function/Consumer;)V e
	addValleys (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;)V e
	getContinentalnessThresholds ()[Lnet/minecraft/world/level/biome/Climate$Parameter; e
	getDebugStringForContinentalness (D)Ljava/lang/String; b
	getDebugStringForErosion (D)Ljava/lang/String; c
	getDebugStringForHumidity (D)Ljava/lang/String; e
	getDebugStringForNoiseValue (D[Lnet/minecraft/world/level/biome/Climate$Parameter;)Ljava/lang/String; a
	getDebugStringForPeaksAndValleys (D)Ljava/lang/String; a
	getDebugStringForTemperature (D)Ljava/lang/String; d
	getErosionThresholds ()[Lnet/minecraft/world/level/biome/Climate$Parameter; d
	getHumidityThresholds ()[Lnet/minecraft/world/level/biome/Climate$Parameter; c
	getPeaksAndValleysThresholds ()[Lnet/minecraft/world/level/biome/Climate$Parameter; f
	getTemperatureThresholds ()[Lnet/minecraft/world/level/biome/Climate$Parameter; b
	getWeirdnessThresholds ()[Lnet/minecraft/world/level/biome/Climate$Parameter; g
	isDeepDarkRegion (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)Z a
	maybePickWindsweptSavannaBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; a
	pickBadlandsBiome (ILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; a
	pickBeachBiome (II)Lnet/minecraft/resources/ResourceKey; a
	pickMiddleBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; a
	pickMiddleBiomeOrBadlandsIfHot (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; b
	pickMiddleBiomeOrBadlandsIfHotOrSlopeIfCold (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; c
	pickPeakBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; f
	pickPlateauBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; e
	pickShatteredBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; h
	pickShatteredCoastBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; d
	pickSlopeBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; g
	spawnTarget ()Ljava/util/List; a
net/minecraft/world/level/biome/TheEndBiomeSource cvf
	CODEC b
	barrens g
	end c
	highlands d
	islands f
	midlands e
	codec ()Lcom/mojang/serialization/Codec; a
	collectPossibleBiomes ()Ljava/util/stream/Stream; b
	create (Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/TheEndBiomeSource; a
net/minecraft/world/level/block/AbstractBannerBlock cvh
	color a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
	isPossibleToRespawnInThis (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/AbstractCandleBlock cvi
	LIGHT_PER_CANDLE a
	LIT b
	addParticlesAndSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/util/RandomSource;)V a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canBeLit (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	codec ()Lcom/mojang/serialization/MapCodec; a
	extinguish (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	getParticleOffsets (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/Iterable; b
	isLit (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	onExplosionHit (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;Ljava/util/function/BiConsumer;)V a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	setLit (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Z)V a
net/minecraft/world/level/block/AbstractCauldronBlock cvj
	FLOOR_LEVEL a
	INSIDE h
	LEG_DEPTH g
	LEG_HEIGHT f
	LEG_WIDTH e
	SHAPE b
	SIDE_THICKNESS d
	interactions c
	canReceiveStalactiteDrip (Lnet/minecraft/world/level/material/Fluid;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getContentHeight (Lnet/minecraft/world/level/block/state/BlockState;)D b
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isEntityInsideContent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	isFull (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	receiveStalactiteDrip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/AbstractChestBlock cvk
	blockEntityType a
	codec ()Lcom/mojang/serialization/MapCodec; a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
net/minecraft/world/level/block/AbstractFurnaceBlock cvl
	FACING a
	LIT b
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	createFurnaceTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/AbstractSkullBlock cvm
	POWERED a
	type b
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getEquipmentSlot ()Lnet/minecraft/world/entity/EquipmentSlot; g
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getType ()Lnet/minecraft/world/level/block/SkullBlock$Type; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/AirBlock cvn
	CODEC a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/AmethystBlock cvo
	CODEC a
	codec ()Lcom/mojang/serialization/MapCodec; a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
net/minecraft/world/level/block/AmethystClusterBlock cvp
	CODEC b
	FACING d
	WATERLOGGED c
	aabbOffset l
	downAabb j
	eastAabb g
	height k
	northAabb e
	southAabb f
	upAabb i
	westAabb h
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/AnvilBlock cvq
	BASE c
	CODEC a
	CONTAINER_TITLE l
	FACING b
	FALL_DAMAGE_MAX n
	FALL_DAMAGE_PER_DISTANCE m
	X_AXIS_AABB j
	X_LEG1 d
	X_LEG2 e
	X_TOP f
	Z_AXIS_AABB k
	Z_LEG1 g
	Z_LEG2 h
	Z_TOP i
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	damage (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; e
	falling (Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I b
	getFallDamageSource (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onBrokenAfterFall (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/AttachedStemBlock cvr
	AABBS d
	AABB_OFFSET c
	CODEC a
	FACING b
	fruit e
	seed g
	stem f
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/AzaleaBlock cvs
	CODEC a
	SHAPE b
	codec ()Lcom/mojang/serialization/MapCodec; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/BambooSaplingBlock cvt
	CODEC a
	SAPLING_AABB_OFFSET b
	SAPLING_SHAPE c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	growBamboo (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BambooStalkBlock cvu
	AGE h
	AGE_THICK_BAMBOO o
	AGE_THIN_BAMBOO n
	CODEC a
	COLLISION_AABB_OFFSET d
	COLLISION_SHAPE g
	LARGE_LEAVES_AABB_OFFSET c
	LARGE_SHAPE f
	LEAVES i
	MAX_HEIGHT k
	SMALL_LEAVES_AABB_OFFSET b
	SMALL_SHAPE e
	STAGE j
	STAGE_DONE_GROWING m
	STAGE_GROWING l
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getHeightAboveUpToMax (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getHeightBelowUpToMax (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	growBamboo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;I)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BannerBlock cvv
	BY_COLOR c
	CODEC a
	ROTATION b
	SHAPE d
	byColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/Block; a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BarrelBlock cvw
	CODEC a
	FACING b
	OPEN c
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BarrierBlock cvx
	CODEC a
	WATERLOGGED b
	canPlaceLiquid (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F d
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	pickupBlock (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseCoralFanBlock cvy
	AABB b
	CODEC a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/BaseCoralPlantBlock cvz
	AABB_OFFSET b
	CODEC a
	SHAPE c
	codec ()Lcom/mojang/serialization/MapCodec; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/BaseCoralPlantTypeBlock cwa
	AABB a
	WATERLOGGED d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	scanForWater (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z e
	tryScheduleDieTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseCoralWallFanBlock cwb
	CODEC b
	FACING c
	SHAPES e
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseEntityBlock cwc
	codec ()Lcom/mojang/serialization/MapCodec; a
	createTickerHelper (Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/world/level/block/entity/BlockEntityTicker;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
net/minecraft/world/level/block/BaseFireBlock cwd
	AABB_OFFSET a
	DOWN_AABB b
	SECONDS_ON_FIRE c
	fireDamage d
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canBePlacedAt (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z f
	codec ()Lcom/mojang/serialization/MapCodec; a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	inPortalDimension (Lnet/minecraft/world/level/Level;)Z a
	isPortal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/block/state/BlockState; a
	spawnDestroyParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/BasePressurePlateBlock cwe
	AABB b
	PRESSED_AABB a
	TOUCH_AABB c
	type d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	checkPressed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getEntityCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/AABB;Ljava/lang/Class;)I a
	getPressedTime ()I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	isPossibleToRespawnInThis (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateNeighbours (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseRailBlock cwf
	FLAT_AABB a
	HALF_BLOCK_AABB b
	WATERLOGGED c
	isStraight d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; c
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isRail (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isRail (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	isStraight ()Z b
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	shouldBeRemoved (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/properties/RailShape;)Z a
	updateDir (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseTorchBlock cwg
	AABB b
	AABB_STANDING_OFFSET a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BeaconBeamBlock cwh
	getColor ()Lnet/minecraft/world/item/DyeColor; b
net/minecraft/world/level/block/BeaconBlock cwi
	CODEC a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BedBlock cwj
	BASE e
	CODEC a
	EAST_SHAPE m
	HEIGHT d
	LEG_NORTH_EAST h
	LEG_NORTH_WEST f
	LEG_SOUTH_EAST i
	LEG_SOUTH_WEST g
	LEG_WIDTH n
	NORTH_SHAPE j
	OCCUPIED c
	PART b
	SOUTH_SHAPE k
	WEST_SHAPE l
	color o
	bedAboveStandUpOffsets (Lnet/minecraft/core/Direction;)[[I a
	bedStandUpOffsets (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)[[I a
	bedSurroundStandUpOffsets (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)[[I b
	bounceUp (Lnet/minecraft/world/entity/Entity;)V a
	canSetSpawn (Lnet/minecraft/world/level/Level;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	findBunkBedStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Ljava/util/Optional; a
	findStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;F)Ljava/util/Optional; a
	findStandUpPositionAtOffset (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;[[IZ)Ljava/util/Optional; a
	getBedOrientation (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction; a
	getBlockType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$BlockType; h
	getColor ()Lnet/minecraft/world/item/DyeColor; b
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; g
	getNeighbourDirection (Lnet/minecraft/world/level/block/state/properties/BedPart;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBunkBed (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	kickVillagerOutOfBed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BeehiveBlock cwk
	CODEC a
	FACING b
	HONEY_LEVEL c
	MAX_HONEY_LEVELS d
	SHEARED_HONEYCOMB_COUNT e
	angerNearbyBees (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dropHoneycomb (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootParams$Builder;)Ljava/util/List; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	hiveContainsBees (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z c
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/block/state/BlockState; a
	releaseBeesAndResetHoneyLevel (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)V a
	resetHoneyLevel (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	spawnFluidParticle (Lnet/minecraft/world/level/Level;DDDDD)V a
	spawnParticle (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/VoxelShape;D)V a
	trySpawnDripParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BeetrootBlock cwl
	AGE c
	CODEC a
	MAX_AGE b
	SHAPE_BY_AGE g
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAgeProperty ()Lnet/minecraft/world/level/block/state/properties/IntegerProperty; b
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; d
	getBonemealAgeIncrease (Lnet/minecraft/world/level/Level;)I a
	getMaxAge ()I c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/BellBlock cwm
	ATTACHMENT c
	BELL_BOTTOM_SHAPE i
	BELL_SHAPE j
	BELL_TOP_SHAPE h
	CEILING_SHAPE G
	CODEC a
	EAST_WEST_BETWEEN l
	EAST_WEST_FLOOR_SHAPE g
	EVENT_BELL_RING e
	FACING b
	NORTH_SOUTH_BETWEEN k
	NORTH_SOUTH_FLOOR_SHAPE f
	POWERED d
	TO_EAST n
	TO_NORTH o
	TO_SOUTH F
	TO_WEST m
	attemptToRing (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	attemptToRing (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; n
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getVoxelShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isProperHit (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;D)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onExplosionHit (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;Ljava/util/function/BiConsumer;)V a
	onHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/player/Player;Z)Z a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BigDripleafBlock cwn
	CODEC a
	DELAY_UNTIL_NEXT_TILT_STATE e
	ENTITY_DETECTION_MIN_Y h
	LEAF_SHAPES j
	LOWEST_LEAF_TOP i
	MAX_GEN_HEIGHT f
	NO_TICK d
	STEM_SHAPES l
	STEM_SLICER k
	STEM_WIDTH g
	TILT c
	WATERLOGGED b
	shapesCache m
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	canEntityTilt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	canPlaceAt (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canReplace (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/core/Direction;)Z a
	placeWithRandomHeight (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	playTiltSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;)V a
	resetTilt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	setTilt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Tilt;)V a
	setTiltAndScheduleTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Tilt;Lnet/minecraft/sounds/SoundEvent;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BigDripleafStemBlock cwo
	CODEC a
	EAST_SHAPE d
	NORTH_SHAPE b
	SOUTH_SHAPE c
	STEM_WIDTH g
	WATERLOGGED f
	WEST_SHAPE e
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/core/Direction;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BlastFurnaceBlock cwp
	CODEC c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/Block cwq
	BLOCK_STATE_REGISTRY q
	CACHE_SIZE g
	CODEC p
	INDESTRUCTIBLE B
	INSTANT C
	LOGGER a
	OCCLUSION_CACHE h
	SHAPE_FULL_BLOCK_CACHE c
	UPDATE_ALL z
	UPDATE_ALL_IMMEDIATE A
	UPDATE_CLIENTS s
	UPDATE_IMMEDIATE u
	UPDATE_INVISIBLE t
	UPDATE_KNOWN_SHAPE v
	UPDATE_LIMIT D
	UPDATE_MOVE_BY_PISTON x
	UPDATE_NEIGHBORS r
	UPDATE_NONE y
	UPDATE_SUPPRESS_DROPS w
	builtInRegistryHolder b
	defaultBlockState d
	descriptionId e
	item f
	stateDefinition E
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	asBlock ()Lnet/minecraft/world/level/block/Block; q
	asItem ()Lnet/minecraft/world/item/Item; k
	box (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	builtInRegistryHolder ()Lnet/minecraft/core/Holder$Reference; r
	byItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/block/Block; a
	canSupportCenter (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSupportRigidBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	codec ()Lcom/mojang/serialization/MapCodec; a
	copyProperty (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/world/level/block/state/BlockState; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	defaultBlockState ()Lnet/minecraft/world/level/block/state/BlockState; o
	destroy (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	dropFromExplosion (Lnet/minecraft/world/level/Explosion;)Z a
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V c
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;)V a
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getDescriptionId ()Ljava/lang/String; h
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)Ljava/util/List; a
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	getExplosionResistance ()F e
	getFriction ()F i
	getId (Lnet/minecraft/world/level/block/state/BlockState;)I i
	getJumpFactor ()F l
	getName ()Lnet/minecraft/network/chat/MutableComponent; f
	getShapeForEachState (Ljava/util/function/Function;)Lcom/google/common/collect/ImmutableMap; a
	getSoundType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/SoundType; m
	getSpeedFactor ()F j
	getStateDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; n
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	handlePrecipitation (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome$Precipitation;)V a
	hasDynamicShape ()Z p
	isExceptionForConnection (Lnet/minecraft/world/level/block/state/BlockState;)Z j
	isFaceFull (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z a
	isPossibleToRespawnInThis (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isShapeFullBlock (Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/block/state/BlockState; a
	popExperience (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;I)V a
	popResource (Lnet/minecraft/world/level/Level;Ljava/util/function/Supplier;Lnet/minecraft/world/item/ItemStack;)V a
	popResource (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	popResourceFromFace (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;)V a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	pushEntitiesUp (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	registerDefaultState (Lnet/minecraft/world/level/block/state/BlockState;)V k
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	shouldRenderFace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;)Z a
	spawnDestroyParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	stateById (I)Lnet/minecraft/world/level/block/state/BlockState; a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	tryDropExperience (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/util/valueproviders/IntProvider;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
	updateFromNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	updateOrDestroy (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	updateOrDestroy (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
	withPropertiesOf (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; l
net/minecraft/world/level/block/Block$BlockStatePairKey cwq$a
	direction c
	first a
	second b
net/minecraft/world/level/block/BlockTypes cwr
	CODEC a
	bootstrap (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/MapCodec; a
net/minecraft/world/level/block/Blocks cws
	ACACIA_BUTTON gz
	ACACIA_DOOR ko
	ACACIA_FENCE kg
	ACACIA_FENCE_GATE jY
	ACACIA_HANGING_SIGN dd
	ACACIA_LEAVES aI
	ACACIA_LOG Y
	ACACIA_PLANKS r
	ACACIA_PRESSURE_PLATE dD
	ACACIA_SAPLING B
	ACACIA_SIGN cH
	ACACIA_SLAB jx
	ACACIA_STAIRS hP
	ACACIA_TRAPDOOR eC
	ACACIA_WALL_HANGING_SIGN do
	ACACIA_WALL_SIGN cU
	ACACIA_WOOD as
	ACTIVATOR_RAIL hh
	AIR a
	ALLIUM bV
	AMETHYST_BLOCK qt
	AMETHYST_CLUSTER qv
	ANCIENT_DEBRIS pj
	ANDESITE g
	ANDESITE_SLAB nB
	ANDESITE_STAIRS no
	ANDESITE_WALL nN
	ANVIL gS
	ATTACHED_MELON_STEM fc
	ATTACHED_PUMPKIN_STEM fb
	AZALEA sy
	AZALEA_LEAVES aM
	AZURE_BLUET bW
	BAMBOO mZ
	BAMBOO_BLOCK ae
	BAMBOO_BUTTON gD
	BAMBOO_DOOR ks
	BAMBOO_FENCE kk
	BAMBOO_FENCE_GATE kc
	BAMBOO_HANGING_SIGN dk
	BAMBOO_MOSAIC w
	BAMBOO_MOSAIC_SLAB jC
	BAMBOO_MOSAIC_STAIRS hU
	BAMBOO_PLANKS v
	BAMBOO_PRESSURE_PLATE dH
	BAMBOO_SAPLING mY
	BAMBOO_SIGN cM
	BAMBOO_SLAB jB
	BAMBOO_STAIRS hT
	BAMBOO_TRAPDOOR eG
	BAMBOO_WALL_HANGING_SIGN dv
	BAMBOO_WALL_SIGN cZ
	BARREL nU
	BARRIER hW
	BASALT dY
	BEACON fO
	BEDROCK F
	BEEHIVE pf
	BEETROOTS kD
	BEE_NEST pe
	BELL od
	BIG_DRIPLEAF sD
	BIG_DRIPLEAF_STEM sE
	BIRCH_BUTTON gx
	BIRCH_DOOR km
	BIRCH_FENCE ke
	BIRCH_FENCE_GATE jW
	BIRCH_HANGING_SIGN dc
	BIRCH_LEAVES aG
	BIRCH_LOG W
	BIRCH_PLANKS p
	BIRCH_PRESSURE_PLATE dB
	BIRCH_SAPLING z
	BIRCH_SIGN cG
	BIRCH_SLAB jv
	BIRCH_STAIRS fL
	BIRCH_TRAPDOOR eA
	BIRCH_WALL_HANGING_SIGN dn
	BIRCH_WALL_SIGN cT
	BIRCH_WOOD aq
	BLACKSTONE pr
	BLACKSTONE_SLAB pu
	BLACKSTONE_STAIRS ps
	BLACKSTONE_WALL pt
	BLACK_BANNER iY
	BLACK_BED bo
	BLACK_CANDLE qb
	BLACK_CANDLE_CAKE qs
	BLACK_CARPET iz
	BLACK_CONCRETE lL
	BLACK_CONCRETE_POWDER mb
	BLACK_GLAZED_TERRACOTTA lv
	BLACK_SHULKER_BOX lf
	BLACK_STAINED_GLASS ex
	BLACK_STAINED_GLASS_PANE hO
	BLACK_TERRACOTTA hy
	BLACK_WALL_BANNER jo
	BLACK_WOOL bP
	BLAST_FURNACE nW
	BLUE_BANNER iU
	BLUE_BED bk
	BLUE_CANDLE pX
	BLUE_CANDLE_CAKE qo
	BLUE_CARPET iv
	BLUE_CONCRETE lH
	BLUE_CONCRETE_POWDER lX
	BLUE_GLAZED_TERRACOTTA lr
	BLUE_ICE mW
	BLUE_ORCHID bU
	BLUE_SHULKER_BOX lb
	BLUE_STAINED_GLASS et
	BLUE_STAINED_GLASS_PANE hK
	BLUE_TERRACOTTA hu
	BLUE_WALL_BANNER jk
	BLUE_WOOL bL
	BONE_BLOCK kM
	BOOKSHELF cl
	BRAIN_CORAL mx
	BRAIN_CORAL_BLOCK mn
	BRAIN_CORAL_FAN mH
	BRAIN_CORAL_WALL_FAN mR
	BREWING_STAND fs
	BRICKS cj
	BRICK_SLAB jJ
	BRICK_STAIRS fi
	BRICK_WALL nF
	BROWN_BANNER iV
	BROWN_BED bl
	BROWN_CANDLE pY
	BROWN_CANDLE_CAKE qp
	BROWN_CARPET iw
	BROWN_CONCRETE lI
	BROWN_CONCRETE_POWDER lY
	BROWN_GLAZED_TERRACOTTA ls
	BROWN_MUSHROOM cf
	BROWN_MUSHROOM_BLOCK eT
	BROWN_SHULKER_BOX lc
	BROWN_STAINED_GLASS eu
	BROWN_STAINED_GLASS_PANE hL
	BROWN_TERRACOTTA hv
	BROWN_WALL_BANNER jl
	BROWN_WOOL bM
	BUBBLE_COLUMN nd
	BUBBLE_CORAL my
	BUBBLE_CORAL_BLOCK mo
	BUBBLE_CORAL_FAN mI
	BUBBLE_CORAL_WALL_FAN mS
	BUDDING_AMETHYST qu
	CACTUS dQ
	CAKE eg
	CALCITE qN
	CALIBRATED_SCULK_SENSOR qR
	CAMPFIRE og
	CANDLE pL
	CANDLE_CAKE qc
	CARROTS gt
	CARTOGRAPHY_TABLE nX
	CARVED_PUMPKIN ee
	CAULDRON ft
	CAVE_AIR nc
	CAVE_VINES sv
	CAVE_VINES_PLANT sw
	CHAIN eX
	CHAIN_COMMAND_BLOCK kH
	CHERRY_BUTTON gA
	CHERRY_DOOR kp
	CHERRY_FENCE kh
	CHERRY_FENCE_GATE jZ
	CHERRY_HANGING_SIGN de
	CHERRY_LEAVES aJ
	CHERRY_LOG Z
	CHERRY_PLANKS s
	CHERRY_PRESSURE_PLATE dE
	CHERRY_SAPLING C
	CHERRY_SIGN cI
	CHERRY_SLAB jy
	CHERRY_STAIRS hQ
	CHERRY_TRAPDOOR eD
	CHERRY_WALL_HANGING_SIGN dp
	CHERRY_WALL_SIGN cV
	CHERRY_WOOD at
	CHEST cv
	CHIPPED_ANVIL gT
	CHISELED_BOOKSHELF cm
	CHISELED_COPPER rj
	CHISELED_DEEPSLATE ta
	CHISELED_NETHER_BRICKS pI
	CHISELED_POLISHED_BLACKSTONE py
	CHISELED_QUARTZ_BLOCK he
	CHISELED_RED_SANDSTONE jq
	CHISELED_SANDSTONE aW
	CHISELED_STONE_BRICKS eK
	CHISELED_TUFF qH
	CHISELED_TUFF_BRICKS qM
	CHORUS_FLOWER kv
	CHORUS_PLANT ku
	CLAY dR
	COAL_BLOCK iB
	COAL_ORE R
	COARSE_DIRT k
	COBBLED_DEEPSLATE sK
	COBBLED_DEEPSLATE_SLAB sM
	COBBLED_DEEPSLATE_STAIRS sL
	COBBLED_DEEPSLATE_WALL sN
	COBBLESTONE m
	COBBLESTONE_SLAB jI
	COBBLESTONE_STAIRS cQ
	COBBLESTONE_WALL fP
	COBWEB bs
	COCOA fC
	COMMAND_BLOCK fN
	COMPARATOR gY
	COMPOSTER pc
	CONDUIT mX
	COPPER_BLOCK qW
	COPPER_BULB sk
	COPPER_DOOR rM
	COPPER_GRATE sc
	COPPER_ORE ra
	COPPER_TRAPDOOR rU
	CORNFLOWER cc
	CRACKED_DEEPSLATE_BRICKS tb
	CRACKED_DEEPSLATE_TILES tc
	CRACKED_NETHER_BRICKS pJ
	CRACKED_POLISHED_BLACKSTONE_BRICKS px
	CRACKED_STONE_BRICKS eJ
	CRAFTER tq
	CRAFTING_TABLE cA
	CREEPER_HEAD gM
	CREEPER_WALL_HEAD gN
	CRIMSON_BUTTON oS
	CRIMSON_DOOR oU
	CRIMSON_FENCE oK
	CRIMSON_FENCE_GATE oO
	CRIMSON_FUNGUS ox
	CRIMSON_HANGING_SIGN dh
	CRIMSON_HYPHAE ou
	CRIMSON_NYLIUM ow
	CRIMSON_PLANKS oE
	CRIMSON_PRESSURE_PLATE oI
	CRIMSON_ROOTS oD
	CRIMSON_SIGN oW
	CRIMSON_SLAB oG
	CRIMSON_STAIRS oQ
	CRIMSON_STEM os
	CRIMSON_TRAPDOOR oM
	CRIMSON_WALL_HANGING_SIGN dt
	CRIMSON_WALL_SIGN oY
	CRYING_OBSIDIAN pk
	CUT_COPPER rf
	CUT_COPPER_SLAB rv
	CUT_COPPER_STAIRS rr
	CUT_RED_SANDSTONE jr
	CUT_RED_SANDSTONE_SLAB jP
	CUT_SANDSTONE aX
	CUT_SANDSTONE_SLAB jG
	CYAN_BANNER iS
	CYAN_BED bi
	CYAN_CANDLE pV
	CYAN_CANDLE_CAKE qm
	CYAN_CARPET it
	CYAN_CONCRETE lF
	CYAN_CONCRETE_POWDER lV
	CYAN_GLAZED_TERRACOTTA lp
	CYAN_SHULKER_BOX kZ
	CYAN_STAINED_GLASS er
	CYAN_STAINED_GLASS_PANE hI
	CYAN_TERRACOTTA hs
	CYAN_WALL_BANNER ji
	CYAN_WOOL bJ
	DAMAGED_ANVIL gU
	DANDELION bR
	DARK_OAK_BUTTON gB
	DARK_OAK_DOOR kq
	DARK_OAK_FENCE ki
	DARK_OAK_FENCE_GATE ka
	DARK_OAK_HANGING_SIGN dg
	DARK_OAK_LEAVES aK
	DARK_OAK_LOG aa
	DARK_OAK_PLANKS t
	DARK_OAK_PRESSURE_PLATE dF
	DARK_OAK_SAPLING D
	DARK_OAK_SIGN cK
	DARK_OAK_SLAB jz
	DARK_OAK_STAIRS hR
	DARK_OAK_TRAPDOOR eE
	DARK_OAK_WALL_HANGING_SIGN dr
	DARK_OAK_WALL_SIGN cX
	DARK_OAK_WOOD au
	DARK_PRISMARINE ib
	DARK_PRISMARINE_SLAB ih
	DARK_PRISMARINE_STAIRS ie
	DAYLIGHT_DETECTOR gZ
	DEAD_BRAIN_CORAL ms
	DEAD_BRAIN_CORAL_BLOCK mi
	DEAD_BRAIN_CORAL_FAN mC
	DEAD_BRAIN_CORAL_WALL_FAN mM
	DEAD_BUBBLE_CORAL mt
	DEAD_BUBBLE_CORAL_BLOCK mj
	DEAD_BUBBLE_CORAL_FAN mD
	DEAD_BUBBLE_CORAL_WALL_FAN mN
	DEAD_BUSH bv
	DEAD_FIRE_CORAL mu
	DEAD_FIRE_CORAL_BLOCK mk
	DEAD_FIRE_CORAL_FAN mE
	DEAD_FIRE_CORAL_WALL_FAN mO
	DEAD_HORN_CORAL mv
	DEAD_HORN_CORAL_BLOCK ml
	DEAD_HORN_CORAL_FAN mF
	DEAD_HORN_CORAL_WALL_FAN mP
	DEAD_TUBE_CORAL mr
	DEAD_TUBE_CORAL_BLOCK mh
	DEAD_TUBE_CORAL_FAN mB
	DEAD_TUBE_CORAL_WALL_FAN mL
	DECORATED_POT tp
	DEEPSLATE sJ
	DEEPSLATE_BRICKS sW
	DEEPSLATE_BRICK_SLAB sY
	DEEPSLATE_BRICK_STAIRS sX
	DEEPSLATE_BRICK_WALL sZ
	DEEPSLATE_COAL_ORE S
	DEEPSLATE_COPPER_ORE rb
	DEEPSLATE_DIAMOND_ORE cy
	DEEPSLATE_EMERALD_ORE fF
	DEEPSLATE_GOLD_ORE O
	DEEPSLATE_IRON_ORE Q
	DEEPSLATE_LAPIS_ORE aS
	DEEPSLATE_REDSTONE_ORE dJ
	DEEPSLATE_TILES sS
	DEEPSLATE_TILE_SLAB sU
	DEEPSLATE_TILE_STAIRS sT
	DEEPSLATE_TILE_WALL sV
	DETECTOR_RAIL bq
	DIAMOND_BLOCK cz
	DIAMOND_ORE cx
	DIORITE e
	DIORITE_SLAB nE
	DIORITE_STAIRS nr
	DIORITE_WALL nR
	DIRT j
	DIRT_PATH kE
	DISPENSER aU
	DRAGON_EGG fA
	DRAGON_HEAD gO
	DRAGON_WALL_HEAD gP
	DRIED_KELP_BLOCK me
	DRIPSTONE_BLOCK su
	DROPPER hi
	EMERALD_BLOCK fJ
	EMERALD_ORE fE
	ENCHANTING_TABLE fr
	ENDER_CHEST fG
	END_GATEWAY kF
	END_PORTAL fx
	END_PORTAL_FRAME fy
	END_ROD kt
	END_STONE fz
	END_STONE_BRICKS kz
	END_STONE_BRICK_SLAB nx
	END_STONE_BRICK_STAIRS nj
	END_STONE_BRICK_WALL nQ
	EXPOSED_CHISELED_COPPER ri
	EXPOSED_COPPER qX
	EXPOSED_COPPER_BULB sl
	EXPOSED_COPPER_DOOR rN
	EXPOSED_COPPER_GRATE sd
	EXPOSED_COPPER_TRAPDOOR rV
	EXPOSED_CUT_COPPER re
	EXPOSED_CUT_COPPER_SLAB ru
	EXPOSED_CUT_COPPER_STAIRS rq
	FARMLAND cC
	FERN bu
	FIRE cr
	FIRE_CORAL mz
	FIRE_CORAL_BLOCK mp
	FIRE_CORAL_FAN mJ
	FIRE_CORAL_WALL_FAN mT
	FLETCHING_TABLE nY
	FLOWERING_AZALEA sz
	FLOWERING_AZALEA_LEAVES aN
	FLOWER_POT fR
	FROGSPAWN tn
	FROSTED_ICE kI
	FURNACE cD
	GILDED_BLACKSTONE pC
	GLASS aQ
	GLASS_PANE eY
	GLOWSTONE ec
	GLOW_LICHEN fg
	GOLD_BLOCK ch
	GOLD_ORE N
	GRANITE c
	GRANITE_SLAB nA
	GRANITE_STAIRS nn
	GRANITE_WALL nJ
	GRASS_BLOCK i
	GRAVEL L
	GRAY_BANNER iQ
	GRAY_BED bg
	GRAY_CANDLE pT
	GRAY_CANDLE_CAKE qk
	GRAY_CARPET ir
	GRAY_CONCRETE lD
	GRAY_CONCRETE_POWDER lT
	GRAY_GLAZED_TERRACOTTA ln
	GRAY_SHULKER_BOX kX
	GRAY_STAINED_GLASS ep
	GRAY_STAINED_GLASS_PANE hG
	GRAY_TERRACOTTA hq
	GRAY_WALL_BANNER jg
	GRAY_WOOL bH
	GREEN_BANNER iW
	GREEN_BED bm
	GREEN_CANDLE pZ
	GREEN_CANDLE_CAKE qq
	GREEN_CARPET ix
	GREEN_CONCRETE lJ
	GREEN_CONCRETE_POWDER lZ
	GREEN_GLAZED_TERRACOTTA lt
	GREEN_SHULKER_BOX ld
	GREEN_STAINED_GLASS ev
	GREEN_STAINED_GLASS_PANE hM
	GREEN_TERRACOTTA hw
	GREEN_WALL_BANNER jm
	GREEN_WOOL bN
	GRINDSTONE nZ
	HANGING_ROOTS sG
	HAY_BLOCK ij
	HEAVY_WEIGHTED_PRESSURE_PLATE gX
	HONEYCOMB_BLOCK ph
	HONEY_BLOCK pg
	HOPPER hc
	HORN_CORAL mA
	HORN_CORAL_BLOCK mq
	HORN_CORAL_FAN mK
	HORN_CORAL_WALL_FAN mU
	ICE dO
	INFESTED_CHISELED_STONE_BRICKS eS
	INFESTED_COBBLESTONE eO
	INFESTED_CRACKED_STONE_BRICKS eR
	INFESTED_DEEPSLATE td
	INFESTED_MOSSY_STONE_BRICKS eQ
	INFESTED_STONE eN
	INFESTED_STONE_BRICKS eP
	IRON_BARS eW
	IRON_BLOCK ci
	IRON_DOOR dy
	IRON_ORE P
	IRON_TRAPDOOR hY
	JACK_O_LANTERN ef
	JIGSAW pb
	JUKEBOX dT
	JUNGLE_BUTTON gy
	JUNGLE_DOOR kn
	JUNGLE_FENCE kf
	JUNGLE_FENCE_GATE jX
	JUNGLE_HANGING_SIGN df
	JUNGLE_LEAVES aH
	JUNGLE_LOG X
	JUNGLE_PLANKS q
	JUNGLE_PRESSURE_PLATE dC
	JUNGLE_SAPLING A
	JUNGLE_SIGN cJ
	JUNGLE_SLAB jw
	JUNGLE_STAIRS fM
	JUNGLE_TRAPDOOR eB
	JUNGLE_WALL_HANGING_SIGN dq
	JUNGLE_WALL_SIGN cW
	JUNGLE_WOOD ar
	KELP mc
	KELP_PLANT md
	LADDER cO
	LANTERN oe
	LAPIS_BLOCK aT
	LAPIS_ORE aR
	LARGE_AMETHYST_BUD qw
	LARGE_FERN iI
	LAVA H
	LAVA_CAULDRON fv
	LECTERN oa
	LEVER dw
	LIGHT hX
	LIGHTNING_ROD ss
	LIGHT_BLUE_BANNER iM
	LIGHT_BLUE_BED bc
	LIGHT_BLUE_CANDLE pP
	LIGHT_BLUE_CANDLE_CAKE qg
	LIGHT_BLUE_CARPET in
	LIGHT_BLUE_CONCRETE lz
	LIGHT_BLUE_CONCRETE_POWDER lP
	LIGHT_BLUE_GLAZED_TERRACOTTA lj
	LIGHT_BLUE_SHULKER_BOX kT
	LIGHT_BLUE_STAINED_GLASS el
	LIGHT_BLUE_STAINED_GLASS_PANE hC
	LIGHT_BLUE_TERRACOTTA hm
	LIGHT_BLUE_WALL_BANNER jc
	LIGHT_BLUE_WOOL bD
	LIGHT_GRAY_BANNER iR
	LIGHT_GRAY_BED bh
	LIGHT_GRAY_CANDLE pU
	LIGHT_GRAY_CANDLE_CAKE ql
	LIGHT_GRAY_CARPET is
	LIGHT_GRAY_CONCRETE lE
	LIGHT_GRAY_CONCRETE_POWDER lU
	LIGHT_GRAY_GLAZED_TERRACOTTA lo
	LIGHT_GRAY_SHULKER_BOX kY
	LIGHT_GRAY_STAINED_GLASS eq
	LIGHT_GRAY_STAINED_GLASS_PANE hH
	LIGHT_GRAY_TERRACOTTA hr
	LIGHT_GRAY_WALL_BANNER jh
	LIGHT_GRAY_WOOL bI
	LIGHT_WEIGHTED_PRESSURE_PLATE gW
	LILAC iE
	LILY_OF_THE_VALLEY ce
	LILY_PAD fm
	LIME_BANNER iO
	LIME_BED be
	LIME_CANDLE pR
	LIME_CANDLE_CAKE qi
	LIME_CARPET ip
	LIME_CONCRETE lB
	LIME_CONCRETE_POWDER lR
	LIME_GLAZED_TERRACOTTA ll
	LIME_SHULKER_BOX kV
	LIME_STAINED_GLASS en
	LIME_STAINED_GLASS_PANE hE
	LIME_TERRACOTTA ho
	LIME_WALL_BANNER je
	LIME_WOOL bF
	LODESTONE pq
	LOOM nT
	MAGENTA_BANNER iL
	MAGENTA_BED bb
	MAGENTA_CANDLE pO
	MAGENTA_CANDLE_CAKE qf
	MAGENTA_CARPET im
	MAGENTA_CONCRETE ly
	MAGENTA_CONCRETE_POWDER lO
	MAGENTA_GLAZED_TERRACOTTA li
	MAGENTA_SHULKER_BOX kS
	MAGENTA_STAINED_GLASS ek
	MAGENTA_STAINED_GLASS_PANE hB
	MAGENTA_TERRACOTTA hl
	MAGENTA_WALL_BANNER jb
	MAGENTA_WOOL bC
	MAGMA_BLOCK kJ
	MANGROVE_BUTTON gC
	MANGROVE_DOOR kr
	MANGROVE_FENCE kj
	MANGROVE_FENCE_GATE kb
	MANGROVE_HANGING_SIGN dj
	MANGROVE_LEAVES aL
	MANGROVE_LOG ab
	MANGROVE_PLANKS u
	MANGROVE_PRESSURE_PLATE dG
	MANGROVE_PROPAGULE E
	MANGROVE_ROOTS ac
	MANGROVE_SIGN cL
	MANGROVE_SLAB jA
	MANGROVE_STAIRS hS
	MANGROVE_TRAPDOOR eF
	MANGROVE_WALL_HANGING_SIGN ds
	MANGROVE_WALL_SIGN cY
	MANGROVE_WOOD av
	MEDIUM_AMETHYST_BUD qx
	MELON fa
	MELON_STEM fe
	MOSSY_COBBLESTONE cn
	MOSSY_COBBLESTONE_SLAB nw
	MOSSY_COBBLESTONE_STAIRS ni
	MOSSY_COBBLESTONE_WALL fQ
	MOSSY_STONE_BRICKS eI
	MOSSY_STONE_BRICK_SLAB nu
	MOSSY_STONE_BRICK_STAIRS ng
	MOSSY_STONE_BRICK_WALL nI
	MOSS_BLOCK sC
	MOSS_CARPET sA
	MOVING_PISTON bQ
	MUD sI
	MUDDY_MANGROVE_ROOTS ad
	MUD_BRICKS eM
	MUD_BRICK_SLAB jL
	MUD_BRICK_STAIRS fk
	MUD_BRICK_WALL nL
	MUSHROOM_STEM eV
	MYCELIUM fl
	NETHERITE_BLOCK pi
	NETHERRACK dV
	NETHER_BRICKS fn
	NETHER_BRICK_FENCE fo
	NETHER_BRICK_SLAB jM
	NETHER_BRICK_STAIRS fp
	NETHER_BRICK_WALL nM
	NETHER_GOLD_ORE T
	NETHER_PORTAL ed
	NETHER_QUARTZ_ORE hb
	NETHER_SPROUTS or
	NETHER_WART fq
	NETHER_WART_BLOCK kK
	NOTE_BLOCK aY
	NOT_CLOSED_SHULKER ts
	OAK_BUTTON gv
	OAK_DOOR cN
	OAK_FENCE dU
	OAK_FENCE_GATE fh
	OAK_HANGING_SIGN da
	OAK_LEAVES aE
	OAK_LOG U
	OAK_PLANKS n
	OAK_PRESSURE_PLATE dz
	OAK_SAPLING x
	OAK_SIGN cE
	OAK_SLAB jt
	OAK_STAIRS cu
	OAK_TRAPDOOR ey
	OAK_WALL_HANGING_SIGN dl
	OAK_WALL_SIGN cR
	OAK_WOOD ao
	OBSERVER kO
	OBSIDIAN co
	OCHRE_FROGLIGHT tk
	ORANGE_BANNER iK
	ORANGE_BED ba
	ORANGE_CANDLE pN
	ORANGE_CANDLE_CAKE qe
	ORANGE_CARPET il
	ORANGE_CONCRETE lx
	ORANGE_CONCRETE_POWDER lN
	ORANGE_GLAZED_TERRACOTTA lh
	ORANGE_SHULKER_BOX kR
	ORANGE_STAINED_GLASS ej
	ORANGE_STAINED_GLASS_PANE hA
	ORANGE_TERRACOTTA hk
	ORANGE_TULIP bY
	ORANGE_WALL_BANNER ja
	ORANGE_WOOL bB
	OXEYE_DAISY cb
	OXIDIZED_CHISELED_COPPER rg
	OXIDIZED_COPPER qZ
	OXIDIZED_COPPER_BULB sn
	OXIDIZED_COPPER_DOOR rO
	OXIDIZED_COPPER_GRATE sf
	OXIDIZED_COPPER_TRAPDOOR rW
	OXIDIZED_CUT_COPPER rc
	OXIDIZED_CUT_COPPER_SLAB rs
	OXIDIZED_CUT_COPPER_STAIRS ro
	PACKED_ICE iC
	PACKED_MUD eL
	PEARLESCENT_FROGLIGHT tm
	PEONY iG
	PETRIFIED_OAK_SLAB jH
	PIGLIN_HEAD gQ
	PIGLIN_WALL_HEAD gR
	PINK_BANNER iP
	PINK_BED bf
	PINK_CANDLE pS
	PINK_CANDLE_CAKE qj
	PINK_CARPET iq
	PINK_CONCRETE lC
	PINK_CONCRETE_POWDER lS
	PINK_GLAZED_TERRACOTTA lm
	PINK_PETALS sB
	PINK_SHULKER_BOX kW
	PINK_STAINED_GLASS eo
	PINK_STAINED_GLASS_PANE hF
	PINK_TERRACOTTA hp
	PINK_TULIP ca
	PINK_WALL_BANNER jf
	PINK_WOOL bG
	PISTON by
	PISTON_HEAD bz
	PITCHER_CROP kB
	PITCHER_PLANT kC
	PLAYER_HEAD gK
	PLAYER_WALL_HEAD gL
	PODZOL l
	POINTED_DRIPSTONE st
	POLISHED_ANDESITE h
	POLISHED_ANDESITE_SLAB nD
	POLISHED_ANDESITE_STAIRS nq
	POLISHED_BASALT dZ
	POLISHED_BLACKSTONE pv
	POLISHED_BLACKSTONE_BRICKS pw
	POLISHED_BLACKSTONE_BRICK_SLAB pz
	POLISHED_BLACKSTONE_BRICK_STAIRS pA
	POLISHED_BLACKSTONE_BRICK_WALL pB
	POLISHED_BLACKSTONE_BUTTON pG
	POLISHED_BLACKSTONE_PRESSURE_PLATE pF
	POLISHED_BLACKSTONE_SLAB pE
	POLISHED_BLACKSTONE_STAIRS pD
	POLISHED_BLACKSTONE_WALL pH
	POLISHED_DEEPSLATE sO
	POLISHED_DEEPSLATE_SLAB sQ
	POLISHED_DEEPSLATE_STAIRS sP
	POLISHED_DEEPSLATE_WALL sR
	POLISHED_DIORITE f
	POLISHED_DIORITE_SLAB nv
	POLISHED_DIORITE_STAIRS nh
	POLISHED_GRANITE d
	POLISHED_GRANITE_SLAB ns
	POLISHED_GRANITE_STAIRS ne
	POLISHED_TUFF qD
	POLISHED_TUFF_SLAB qE
	POLISHED_TUFF_STAIRS qF
	POLISHED_TUFF_WALL qG
	POPPY bT
	POTATOES gu
	POTTED_ACACIA_SAPLING fX
	POTTED_ALLIUM gf
	POTTED_AZALEA ti
	POTTED_AZURE_BLUET gg
	POTTED_BAMBOO na
	POTTED_BIRCH_SAPLING fV
	POTTED_BLUE_ORCHID ge
	POTTED_BROWN_MUSHROOM gq
	POTTED_CACTUS gs
	POTTED_CHERRY_SAPLING fY
	POTTED_CORNFLOWER gm
	POTTED_CRIMSON_FUNGUS pm
	POTTED_CRIMSON_ROOTS po
	POTTED_DANDELION gc
	POTTED_DARK_OAK_SAPLING fZ
	POTTED_DEAD_BUSH gr
	POTTED_FERN gb
	POTTED_FLOWERING_AZALEA tj
	POTTED_JUNGLE_SAPLING fW
	POTTED_LILY_OF_THE_VALLEY gn
	POTTED_MANGROVE_PROPAGULE ga
	POTTED_OAK_SAPLING fT
	POTTED_ORANGE_TULIP gi
	POTTED_OXEYE_DAISY gl
	POTTED_PINK_TULIP gk
	POTTED_POPPY gd
	POTTED_RED_MUSHROOM gp
	POTTED_RED_TULIP gh
	POTTED_SPRUCE_SAPLING fU
	POTTED_TORCHFLOWER fS
	POTTED_WARPED_FUNGUS pn
	POTTED_WARPED_ROOTS pp
	POTTED_WHITE_TULIP gj
	POTTED_WITHER_ROSE go
	POWDER_SNOW qP
	POWDER_SNOW_CAULDRON fw
	POWERED_RAIL bp
	PRISMARINE hZ
	PRISMARINE_BRICKS ia
	PRISMARINE_BRICK_SLAB ig
	PRISMARINE_BRICK_STAIRS id
	PRISMARINE_SLAB if
	PRISMARINE_STAIRS ic
	PRISMARINE_WALL nG
	PUMPKIN eZ
	PUMPKIN_STEM fd
	PURPLE_BANNER iT
	PURPLE_BED bj
	PURPLE_CANDLE pW
	PURPLE_CANDLE_CAKE qn
	PURPLE_CARPET iu
	PURPLE_CONCRETE lG
	PURPLE_CONCRETE_POWDER lW
	PURPLE_GLAZED_TERRACOTTA lq
	PURPLE_SHULKER_BOX la
	PURPLE_STAINED_GLASS es
	PURPLE_STAINED_GLASS_PANE hJ
	PURPLE_TERRACOTTA ht
	PURPLE_WALL_BANNER jj
	PURPLE_WOOL bK
	PURPUR_BLOCK kw
	PURPUR_PILLAR kx
	PURPUR_SLAB jQ
	PURPUR_STAIRS ky
	QUARTZ_BLOCK hd
	QUARTZ_BRICKS pK
	QUARTZ_PILLAR hf
	QUARTZ_SLAB jN
	QUARTZ_STAIRS hg
	RAIL cP
	RAW_COPPER_BLOCK tg
	RAW_GOLD_BLOCK th
	RAW_IRON_BLOCK tf
	REDSTONE_BLOCK ha
	REDSTONE_LAMP fB
	REDSTONE_ORE dI
	REDSTONE_TORCH dK
	REDSTONE_WALL_TORCH dL
	REDSTONE_WIRE cw
	RED_BANNER iX
	RED_BED bn
	RED_CANDLE qa
	RED_CANDLE_CAKE qr
	RED_CARPET iy
	RED_CONCRETE lK
	RED_CONCRETE_POWDER ma
	RED_GLAZED_TERRACOTTA lu
	RED_MUSHROOM cg
	RED_MUSHROOM_BLOCK eU
	RED_NETHER_BRICKS kL
	RED_NETHER_BRICK_SLAB nC
	RED_NETHER_BRICK_STAIRS np
	RED_NETHER_BRICK_WALL nO
	RED_SAND K
	RED_SANDSTONE jp
	RED_SANDSTONE_SLAB jO
	RED_SANDSTONE_STAIRS js
	RED_SANDSTONE_WALL nH
	RED_SHULKER_BOX le
	RED_STAINED_GLASS ew
	RED_STAINED_GLASS_PANE hN
	RED_TERRACOTTA hx
	RED_TULIP bX
	RED_WALL_BANNER jn
	RED_WOOL bO
	REINFORCED_DEEPSLATE to
	REPEATER eh
	REPEATING_COMMAND_BLOCK kG
	RESPAWN_ANCHOR pl
	ROOTED_DIRT sH
	ROSE_BUSH iF
	SAND I
	SANDSTONE aV
	SANDSTONE_SLAB jF
	SANDSTONE_STAIRS fD
	SANDSTONE_WALL nP
	SCAFFOLDING nS
	SCULK qS
	SCULK_CATALYST qU
	SCULK_SENSOR qQ
	SCULK_SHRIEKER qV
	SCULK_VEIN qT
	SEAGRASS bw
	SEA_LANTERN ii
	SEA_PICKLE mV
	SHORT_GRASS bt
	SHROOMLIGHT oy
	SHULKER_BOX kP
	SKELETON_SKULL gE
	SKELETON_WALL_SKULL gF
	SLIME_BLOCK hV
	SMALL_AMETHYST_BUD qy
	SMALL_DRIPLEAF sF
	SMITHING_TABLE ob
	SMOKER nV
	SMOOTH_BASALT te
	SMOOTH_QUARTZ jT
	SMOOTH_QUARTZ_SLAB nz
	SMOOTH_QUARTZ_STAIRS nm
	SMOOTH_RED_SANDSTONE jU
	SMOOTH_RED_SANDSTONE_SLAB nt
	SMOOTH_RED_SANDSTONE_STAIRS nf
	SMOOTH_SANDSTONE jS
	SMOOTH_SANDSTONE_SLAB ny
	SMOOTH_SANDSTONE_STAIRS nl
	SMOOTH_STONE jR
	SMOOTH_STONE_SLAB jE
	SNIFFER_EGG mg
	SNOW dN
	SNOW_BLOCK dP
	SOUL_CAMPFIRE oh
	SOUL_FIRE cs
	SOUL_LANTERN of
	SOUL_SAND dW
	SOUL_SOIL dX
	SOUL_TORCH ea
	SOUL_WALL_TORCH eb
	SPAWNER ct
	SPONGE aO
	SPORE_BLOSSOM sx
	SPRUCE_BUTTON gw
	SPRUCE_DOOR kl
	SPRUCE_FENCE kd
	SPRUCE_FENCE_GATE jV
	SPRUCE_HANGING_SIGN db
	SPRUCE_LEAVES aF
	SPRUCE_LOG V
	SPRUCE_PLANKS o
	SPRUCE_PRESSURE_PLATE dA
	SPRUCE_SAPLING y
	SPRUCE_SIGN cF
	SPRUCE_SLAB ju
	SPRUCE_STAIRS fK
	SPRUCE_TRAPDOOR ez
	SPRUCE_WALL_HANGING_SIGN dm
	SPRUCE_WALL_SIGN cS
	SPRUCE_WOOD ap
	STICKY_PISTON br
	STONE b
	STONECUTTER oc
	STONE_BRICKS eH
	STONE_BRICK_SLAB jK
	STONE_BRICK_STAIRS fj
	STONE_BRICK_WALL nK
	STONE_BUTTON dM
	STONE_PRESSURE_PLATE dx
	STONE_SLAB jD
	STONE_STAIRS nk
	STRIPPED_ACACIA_LOG ai
	STRIPPED_ACACIA_WOOD aA
	STRIPPED_BAMBOO_BLOCK an
	STRIPPED_BIRCH_LOG ag
	STRIPPED_BIRCH_WOOD ay
	STRIPPED_CHERRY_LOG aj
	STRIPPED_CHERRY_WOOD aB
	STRIPPED_CRIMSON_HYPHAE ov
	STRIPPED_CRIMSON_STEM ot
	STRIPPED_DARK_OAK_LOG ak
	STRIPPED_DARK_OAK_WOOD aC
	STRIPPED_JUNGLE_LOG ah
	STRIPPED_JUNGLE_WOOD az
	STRIPPED_MANGROVE_LOG am
	STRIPPED_MANGROVE_WOOD aD
	STRIPPED_OAK_LOG al
	STRIPPED_OAK_WOOD aw
	STRIPPED_SPRUCE_LOG af
	STRIPPED_SPRUCE_WOOD ax
	STRIPPED_WARPED_HYPHAE om
	STRIPPED_WARPED_STEM ok
	STRUCTURE_BLOCK pa
	STRUCTURE_VOID kN
	SUGAR_CANE dS
	SUNFLOWER iD
	SUSPICIOUS_GRAVEL M
	SUSPICIOUS_SAND J
	SWEET_BERRY_BUSH oi
	TALL_GRASS iH
	TALL_SEAGRASS bx
	TARGET pd
	TERRACOTTA iA
	TINTED_GLASS qO
	TNT ck
	TORCH cp
	TORCHFLOWER bS
	TORCHFLOWER_CROP kA
	TRAPPED_CHEST gV
	TRIAL_SPAWNER tr
	TRIPWIRE fI
	TRIPWIRE_HOOK fH
	TUBE_CORAL mw
	TUBE_CORAL_BLOCK mm
	TUBE_CORAL_FAN mG
	TUBE_CORAL_WALL_FAN mQ
	TUFF qz
	TUFF_BRICKS qI
	TUFF_BRICK_SLAB qJ
	TUFF_BRICK_STAIRS qK
	TUFF_BRICK_WALL qL
	TUFF_SLAB qA
	TUFF_STAIRS qB
	TUFF_WALL qC
	TURTLE_EGG mf
	TWISTING_VINES oB
	TWISTING_VINES_PLANT oC
	VERDANT_FROGLIGHT tl
	VINE ff
	VOID_AIR nb
	WALL_TORCH cq
	WARPED_BUTTON oT
	WARPED_DOOR oV
	WARPED_FENCE oL
	WARPED_FENCE_GATE oP
	WARPED_FUNGUS oo
	WARPED_HANGING_SIGN di
	WARPED_HYPHAE ol
	WARPED_NYLIUM on
	WARPED_PLANKS oF
	WARPED_PRESSURE_PLATE oJ
	WARPED_ROOTS oq
	WARPED_SIGN oX
	WARPED_SLAB oH
	WARPED_STAIRS oR
	WARPED_STEM oj
	WARPED_TRAPDOOR oN
	WARPED_WALL_HANGING_SIGN du
	WARPED_WALL_SIGN oZ
	WARPED_WART_BLOCK op
	WATER G
	WATER_CAULDRON fu
	WAXED_CHISELED_COPPER rn
	WAXED_COPPER_BLOCK rw
	WAXED_COPPER_BULB so
	WAXED_COPPER_DOOR rQ
	WAXED_COPPER_GRATE sg
	WAXED_COPPER_TRAPDOOR rY
	WAXED_CUT_COPPER rD
	WAXED_CUT_COPPER_SLAB rL
	WAXED_CUT_COPPER_STAIRS rH
	WAXED_EXPOSED_CHISELED_COPPER rm
	WAXED_EXPOSED_COPPER ry
	WAXED_EXPOSED_COPPER_BULB sp
	WAXED_EXPOSED_COPPER_DOOR rR
	WAXED_EXPOSED_COPPER_GRATE sh
	WAXED_EXPOSED_COPPER_TRAPDOOR rZ
	WAXED_EXPOSED_CUT_COPPER rC
	WAXED_EXPOSED_CUT_COPPER_SLAB rK
	WAXED_EXPOSED_CUT_COPPER_STAIRS rG
	WAXED_OXIDIZED_CHISELED_COPPER rk
	WAXED_OXIDIZED_COPPER rz
	WAXED_OXIDIZED_COPPER_BULB sr
	WAXED_OXIDIZED_COPPER_DOOR rS
	WAXED_OXIDIZED_COPPER_GRATE sj
	WAXED_OXIDIZED_COPPER_TRAPDOOR sa
	WAXED_OXIDIZED_CUT_COPPER rA
	WAXED_OXIDIZED_CUT_COPPER_SLAB rI
	WAXED_OXIDIZED_CUT_COPPER_STAIRS rE
	WAXED_WEATHERED_CHISELED_COPPER rl
	WAXED_WEATHERED_COPPER rx
	WAXED_WEATHERED_COPPER_BULB sq
	WAXED_WEATHERED_COPPER_DOOR rT
	WAXED_WEATHERED_COPPER_GRATE si
	WAXED_WEATHERED_COPPER_TRAPDOOR sb
	WAXED_WEATHERED_CUT_COPPER rB
	WAXED_WEATHERED_CUT_COPPER_SLAB rJ
	WAXED_WEATHERED_CUT_COPPER_STAIRS rF
	WEATHERED_CHISELED_COPPER rh
	WEATHERED_COPPER qY
	WEATHERED_COPPER_BULB sm
	WEATHERED_COPPER_DOOR rP
	WEATHERED_COPPER_GRATE se
	WEATHERED_COPPER_TRAPDOOR rX
	WEATHERED_CUT_COPPER rd
	WEATHERED_CUT_COPPER_SLAB rt
	WEATHERED_CUT_COPPER_STAIRS rp
	WEEPING_VINES oz
	WEEPING_VINES_PLANT oA
	WET_SPONGE aP
	WHEAT cB
	WHITE_BANNER iJ
	WHITE_BED aZ
	WHITE_CANDLE pM
	WHITE_CANDLE_CAKE qd
	WHITE_CARPET ik
	WHITE_CONCRETE lw
	WHITE_CONCRETE_POWDER lM
	WHITE_GLAZED_TERRACOTTA lg
	WHITE_SHULKER_BOX kQ
	WHITE_STAINED_GLASS ei
	WHITE_STAINED_GLASS_PANE hz
	WHITE_TERRACOTTA hj
	WHITE_TULIP bZ
	WHITE_WALL_BANNER iZ
	WHITE_WOOL bA
	WITHER_ROSE cd
	WITHER_SKELETON_SKULL gG
	WITHER_SKELETON_WALL_SKULL gH
	YELLOW_BANNER iN
	YELLOW_BED bd
	YELLOW_CANDLE pQ
	YELLOW_CANDLE_CAKE qh
	YELLOW_CARPET io
	YELLOW_CONCRETE lA
	YELLOW_CONCRETE_POWDER lQ
	YELLOW_GLAZED_TERRACOTTA lk
	YELLOW_SHULKER_BOX kU
	YELLOW_STAINED_GLASS em
	YELLOW_STAINED_GLASS_PANE hD
	YELLOW_TERRACOTTA hn
	YELLOW_WALL_BANNER jd
	YELLOW_WOOL bE
	ZOMBIE_HEAD gI
	ZOMBIE_WALL_HEAD gJ
	always (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	always (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; b
	bed (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/Block; a
	candle (Lnet/minecraft/world/level/material/MapColor;)Lnet/minecraft/world/level/block/Block; b
	flowerPot (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; a
	leaves (Lnet/minecraft/world/level/block/SoundType;)Lnet/minecraft/world/level/block/Block; a
	legacyStair (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; b
	litBlockEmission (I)Ljava/util/function/ToIntFunction; a
	log (Lnet/minecraft/world/level/material/MapColor;Lnet/minecraft/world/level/material/MapColor;)Lnet/minecraft/world/level/block/Block; a
	log (Lnet/minecraft/world/level/material/MapColor;Lnet/minecraft/world/level/material/MapColor;Lnet/minecraft/world/level/block/SoundType;)Lnet/minecraft/world/level/block/Block; a
	netherStem (Lnet/minecraft/world/level/material/MapColor;)Lnet/minecraft/world/level/block/Block; a
	never (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	never (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; a
	ocelotOrParrot (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; c
	pistonBase (Z)Lnet/minecraft/world/level/block/Block; a
	rebuildCache ()V a
	register (Ljava/lang/String;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; a
	register (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; a
	shulkerBox (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/level/material/MapColor;)Lnet/minecraft/world/level/block/Block; a
	stainedGlass (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/Block; b
	stair (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; c
	stoneButton ()Lnet/minecraft/world/level/block/Block; b
	woodenButton (Lnet/minecraft/world/level/block/state/properties/BlockSetType;)Lnet/minecraft/world/level/block/Block; a
net/minecraft/world/level/block/BonemealableBlock cwt
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/BrewingStandBlock cwu
	CODEC a
	HAS_BOTTLE b
	SHAPE c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BrushableBlock cwv
	CODEC a
	DUSTED c
	TICK_DELAY b
	brushCompletedSound f
	brushSound e
	turnsInto d
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBrushCompletedSound ()Lnet/minecraft/sounds/SoundEvent; d
	getBrushSound ()Lnet/minecraft/sounds/SoundEvent; c
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getTurnsInto ()Lnet/minecraft/world/level/block/Block; b
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onBrokenAfterFall (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BubbleColumnBlock cww
	CHECK_PERIOD c
	CODEC a
	DRAG_DOWN b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canExistIn (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getColumnState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; n
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPickupSound ()Ljava/util/Optional; au_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	pickupBlock (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateColumn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	updateColumn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BucketPickup cwx
	getPickupSound ()Ljava/util/Optional; au_
	pickupBlock (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/block/BuddingAmethystBlock cwy
	CODEC b
	DIRECTIONS d
	GROWTH_CHANCE c
	canClusterGrowAtState (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	codec ()Lcom/mojang/serialization/MapCodec; a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/BushBlock cwz
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ButtonBlock cxa
	CEILING_AABB_X e
	CEILING_AABB_Z f
	CODEC a
	EAST_AABB l
	FLOOR_AABB_X g
	FLOOR_AABB_Z h
	HALF_AABB_HEIGHT c
	HALF_AABB_WIDTH d
	NORTH_AABB i
	POWERED b
	PRESSED_CEILING_AABB_X m
	PRESSED_CEILING_AABB_Z n
	PRESSED_DEPTH L
	PRESSED_EAST_AABB J
	PRESSED_FLOOR_AABB_X o
	PRESSED_FLOOR_AABB_Z F
	PRESSED_NORTH_AABB G
	PRESSED_SOUTH_AABB H
	PRESSED_WEST_AABB I
	SOUTH_AABB j
	UNPRESSED_DEPTH M
	WEST_AABB k
	ticksToStayPressed O
	type N
	checkPressed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getSound (Z)Lnet/minecraft/sounds/SoundEvent; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	onExplosionHit (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;Ljava/util/function/BiConsumer;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Z)V a
	press (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateNeighbours (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V f
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CactusBlock cxb
	AABB_OFFSET d
	AGE b
	CODEC a
	COLLISION_SHAPE e
	MAX_AGE c
	OUTLINE_SHAPE f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CakeBlock cxc
	AABB_OFFSET e
	AABB_SIZE_PER_BITE f
	BITES c
	CODEC a
	FULL_CAKE_SIGNAL d
	MAX_BITES b
	SHAPE_BY_BITE g
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	eat (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/InteractionResult; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getOutputSignal (I)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CalibratedSculkSensorBlock cxd
	CODEC a
	FACING b
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getActiveTicks ()I c
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CampfireBlock cxe
	CODEC a
	FACING f
	LIT c
	SHAPE b
	SIGNAL_FIRE d
	SMOKE_DISTANCE h
	VIRTUAL_FENCE_POST g
	WATERLOGGED e
	fireDamage j
	spawnParticles i
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canLight (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dowse (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isLitCampfire (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSmokeSource (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isSmokeyPos (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	makeParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZZ)V a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CandleBlock cxf
	CANDLES f
	CODEC c
	FOUR_AABB n
	LIGHT_EMISSION i
	LIT g
	MAX_CANDLES e
	MIN_CANDLES d
	ONE_AABB k
	PARTICLE_OFFSETS j
	THREE_AABB m
	TWO_AABB l
	WATERLOGGED h
	canBeLit (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canLight (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getParticleOffsets (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/Iterable; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CandleCakeBlock cxg
	AABB_OFFSET e
	BY_CANDLE i
	CAKE_SHAPE f
	CANDLE_SHAPE g
	CODEC c
	LIT d
	PARTICLE_OFFSETS j
	SHAPE h
	candleBlock k
	byCandle (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockState; a
	canLight (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	candleHit (Lnet/minecraft/world/phys/BlockHitResult;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getParticleOffsets (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/Iterable; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CarpetBlock cxh
	CODEC a
	SHAPE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CarrotBlock cxi
	CODEC a
	SHAPE_BY_AGE b
	codec ()Lcom/mojang/serialization/MapCodec; a
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/CartographyTableBlock cxj
	CODEC a
	CONTAINER_TITLE b
	codec ()Lcom/mojang/serialization/MapCodec; a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CarvedPumpkinBlock cxk
	CODEC a
	FACING b
	PUMPKINS_PREDICATE g
	ironGolemBase e
	ironGolemFull f
	snowGolemBase c
	snowGolemFull d
	canSpawnGolem (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	clearPatternBlocks (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOrCreateIronGolemBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; s
	getOrCreateIronGolemFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; y
	getOrCreateSnowGolemBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; b
	getOrCreateSnowGolemFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; g
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	spawnGolemInWorld (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)V a
	trySpawnGolem (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	updatePatternBlocks (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch;)V b
net/minecraft/world/level/block/CauldronBlock cxl
	CODEC d
	POWDER_SNOW_FILL_CHANCE f
	RAIN_FILL_CHANCE e
	canReceiveStalactiteDrip (Lnet/minecraft/world/level/material/Fluid;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	handlePrecipitation (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome$Precipitation;)V a
	isFull (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	receiveStalactiteDrip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)V a
	shouldHandlePrecipitation (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/biome/Biome$Precipitation;)Z a
net/minecraft/world/level/block/CaveVines cxm
	BERRIES t_
	SHAPE s_
	emission (I)Ljava/util/function/ToIntFunction; h_
	hasGlowBerries (Lnet/minecraft/world/level/block/state/BlockState;)Z h_
	use (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CaveVinesBlock cxn
	CHANCE_OF_BERRIES_ON_GROWTH g
	CODEC c
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlocksToGrowWhenBonemealed (Lnet/minecraft/util/RandomSource;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; b
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getGrowIntoState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateBodyAfterConvertedFromHead (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CaveVinesPlantBlock cxo
	CODEC c
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateHeadAfterConvertedFromBody (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CeilingHangingSignBlock cxp
	AABBS i
	AABB_OFFSET d
	ATTACHED c
	CODEC a
	ROTATION b
	SHAPE e
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getYRotationDegrees (Lnet/minecraft/world/level/block/state/BlockState;)F g
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldTryToChainAnotherHangingSign (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/level/block/entity/SignBlockEntity;Lnet/minecraft/world/item/ItemStack;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ChainBlock cxq
	AABB_MAX d
	AABB_MIN c
	CODEC a
	WATERLOGGED b
	X_AXIS_AABB g
	Y_AXIS_AABB e
	Z_AXIS_AABB f
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ChangeOverTimeBlock cxr
	SCAN_DISTANCE x_
	changeOverTime (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a_
	getAge ()Ljava/lang/Enum; c
	getChanceModifier ()F aw_
	getNext (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; i_
	getNextState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; c
net/minecraft/world/level/block/CherryLeavesBlock cxs
	CODEC a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
net/minecraft/world/level/block/ChestBlock cxt
	AABB m
	AABB_HEIGHT h
	AABB_OFFSET g
	CHEST_COMBINER n
	CODEC b
	EAST_AABB l
	EVENT_SET_OPEN_COUNT f
	FACING c
	MENU_PROVIDER_COMBINER o
	NORTH_AABB i
	SOUTH_AABB j
	TYPE d
	WATERLOGGED e
	WEST_AABB k
	blockEntityType ()Lnet/minecraft/world/level/block/entity/BlockEntityType; d
	candidatePartnerFacing (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	codec ()Lcom/mojang/serialization/MapCodec; a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$BlockType; g
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getContainer (Lnet/minecraft/world/level/block/ChestBlock;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/Container; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOpenChestStat ()Lnet/minecraft/stats/Stat; c
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isBlockedChestByBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	isCatSittingOnChest (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z b
	isChestBlockedAt (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	opennessCombiner (Lnet/minecraft/world/level/block/entity/LidBlockEntity;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$Combiner; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ChiseledBookShelfBlock cxu
	BOOKS_PER_ROW b
	CODEC a
	MAX_BOOKS_IN_STORAGE d
	SLOT_OCCUPIED_PROPERTIES c
	addBook (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity;Lnet/minecraft/world/item/ItemStack;I)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getHitSlot (Lnet/minecraft/world/phys/Vec2;)I a
	getRelativeHitCoordinatesForBlockFace (Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/core/Direction;)Ljava/util/Optional; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getSection (F)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	removeBook (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity;I)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ChorusFlowerBlock cxv
	AGE c
	BLOCK_SUPPORT_SHAPE d
	CODEC a
	DEAD_AGE b
	plant e
	allNeighborsEmpty (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	generatePlant (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;I)V a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	growTreeRecursive (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;II)V a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	placeDeadFlower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	placeGrownFlower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ChorusPlantBlock cxw
	CODEC a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateWithConnections (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CocoaBlock cxx
	AGE c
	AGE_0_HALFWIDTH f
	AGE_0_HEIGHT e
	AGE_0_WIDTH d
	AGE_1_HALFWIDTH i
	AGE_1_HEIGHT h
	AGE_1_WIDTH g
	AGE_2_HALFWIDTH l
	AGE_2_HEIGHT k
	AGE_2_WIDTH j
	CODEC a
	EAST_AABB m
	MAX_AGE b
	NORTH_AABB o
	SOUTH_AABB F
	WEST_AABB n
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ColoredFallingBlock cxy
	CODEC a
	dustColor b
	codec ()Lcom/mojang/serialization/MapCodec; a
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I b
net/minecraft/world/level/block/CommandBlock cxz
	CODEC a
	CONDITIONAL c
	FACING b
	LOGGER d
	automatic e
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	execute (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BaseCommandBlock;Z)V a
	executeChain (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComparatorBlock cya
	CODEC a
	MODE b
	calculateOutputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I e
	checkTickOnNeighbor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getInputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getItemFrame (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/decoration/ItemFrame; a
	getOutputSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	refreshOutputState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V f
	shouldTurnOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComposterBlock cyb
	AABB_SIDE_THICKNESS g
	CODEC a
	COMPOSTABLES f
	LEVEL e
	MAX_LEVEL d
	MIN_LEVEL c
	OUTER_SHAPE h
	READY b
	SHAPES i
	add (FLnet/minecraft/world/level/ItemLike;)V a
	addItem (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/level/block/state/BlockState; a
	bootStrap ()V b
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	empty (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	extractProduce (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getContainer (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/WorldlyContainer; a
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	handleFill (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	insertItem (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComposterBlock$EmptyContainer cyb$a
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
net/minecraft/world/level/block/ComposterBlock$InputContainer cyb$b
	changed f
	level d
	pos e
	state c
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getMaxStackSize ()I ak_
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	setChanged ()V e
net/minecraft/world/level/block/ComposterBlock$OutputContainer cyb$c
	changed f
	level d
	pos e
	state c
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getMaxStackSize ()I ak_
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	setChanged ()V e
net/minecraft/world/level/block/ConcretePowderBlock cyc
	CODEC a
	concrete b
	canSolidify (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	codec ()Lcom/mojang/serialization/MapCodec; a
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	shouldSolidify (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	touchesLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ConduitBlock cyd
	CODEC a
	SHAPE c
	SIZE d
	WATERLOGGED b
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CopperBulbBlock cye
	CODEC a
	LIT c
	POWERED b
	checkAndFlip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
net/minecraft/world/level/block/CoralBlock cyf
	CODEC b
	DEAD_CORAL_FIELD a
	deadBlock c
	codec ()Lcom/mojang/serialization/MapCodec; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	scanForWater (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralFanBlock cyg
	CODEC b
	deadBlock c
	codec ()Lcom/mojang/serialization/MapCodec; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralPlantBlock cyh
	AABB_OFFSET b
	CODEC a
	SHAPE c
	deadBlock e
	codec ()Lcom/mojang/serialization/MapCodec; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralWallFanBlock cyi
	CODEC e
	deadBlock f
	codec ()Lcom/mojang/serialization/MapCodec; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CrafterBlock cyj
	CODEC a
	CRAFTING b
	CRAFTING_TICK_DELAY f
	MAX_CRAFTING_TICKS e
	ORIENTATION d
	RECIPE_CACHE g
	TRIGGERED c
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dispenseFrom (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	dispenseItem (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/CrafterBlockEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getPotentialResults (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/inventory/CraftingContainer;)Ljava/util/Optional; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setBlockEntityTriggered (Lnet/minecraft/world/level/block/entity/BlockEntity;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CraftingTableBlock cyk
	CODEC a
	CONTAINER_TITLE b
	codec ()Lcom/mojang/serialization/MapCodec; a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CropBlock cyl
	AGE f
	CODEC d
	MAX_AGE e
	SHAPE_BY_AGE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAge (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getAgeProperty ()Lnet/minecraft/world/level/block/state/properties/IntegerProperty; b
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; d
	getBonemealAgeIncrease (Lnet/minecraft/world/level/Level;)I a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getGrowthSpeed (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getMaxAge ()I c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForAge (I)Lnet/minecraft/world/level/block/state/BlockState; b
	growCrops (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	hasSufficientLight (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isMaxAge (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/CrossCollisionBlock cym
	EAST b
	NORTH a
	PROPERTY_BY_DIRECTION f
	SOUTH c
	WATERLOGGED e
	WEST d
	collisionShapeByIndex g
	shapeByIndex h
	stateToIndex i
	codec ()Lcom/mojang/serialization/MapCodec; a
	getAABBIndex (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	indexFor (Lnet/minecraft/core/Direction;)I a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	makeShapes (FFFFF)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CryingObsidianBlock cyn
	CODEC a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
net/minecraft/world/level/block/DaylightDetectorBlock cyo
	CODEC a
	INVERTED c
	POWER b
	SHAPE d
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	tickEntity (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/DaylightDetectorBlockEntity;)V a
	updateSignalStrength (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/DeadBushBlock cyp
	AABB_OFFSET b
	CODEC a
	SHAPE c
	codec ()Lcom/mojang/serialization/MapCodec; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/block/DecoratedPotBlock cyq
	BOUNDING_BOX d
	CODEC a
	CRACKED c
	HORIZONTAL_FACING e
	SHERDS_DYNAMIC_DROP_ID b
	WATERLOGGED f
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootParams$Builder;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSoundType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/SoundType; m
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DetectorRailBlock cyr
	CODEC d
	POWERED f
	PRESSED_CHECK_PERIOD g
	SHAPE e
	checkPressed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getInteractingMinecartOfType (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List; a
	getSearchBB (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; c
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updatePowerToConnected (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
net/minecraft/world/level/block/DiodeBlock cys
	POWERED d
	SHAPE c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canSurviveOn (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	checkTickOnNeighbor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	codec ()Lcom/mojang/serialization/MapCodec; a
	getAlternateSignal (Lnet/minecraft/world/level/SignalGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I a
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getInputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getOutputSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isDiode (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isLocked (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z c
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	shouldPrioritize (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	shouldTurnOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	sideInputDiodesOnly ()Z b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateNeighborsInFront (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V d
net/minecraft/world/level/block/DirectionalBlock cyt
	FACING a
	codec ()Lcom/mojang/serialization/MapCodec; a
net/minecraft/world/level/block/DirtPathBlock cyu
	CODEC a
	SHAPE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/DispenserBlock cyv
	CODEC a
	DISPENSER_REGISTRY e
	FACING b
	LOGGER d
	TRIGGERED c
	TRIGGER_DURATION f
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dispenseFrom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDispenseMethod (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/core/dispenser/DispenseItemBehavior; a
	getDispensePosition (Lnet/minecraft/core/dispenser/BlockSource;)Lnet/minecraft/core/Position; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	registerBehavior (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/core/dispenser/DispenseItemBehavior;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DoorBlock cyw
	AABB_DOOR_THICKNESS g
	CODEC a
	EAST_AABB k
	FACING b
	HALF f
	HINGE d
	NORTH_AABB i
	OPEN c
	POWERED e
	SOUTH_AABB h
	WEST_AABB j
	type l
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getHinge (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/properties/DoorHingeSide; b
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isOpen (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isWoodenDoor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isWoodenDoor (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onExplosionHit (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;Ljava/util/function/BiConsumer;)V a
	playSound (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setOpen (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	type ()Lnet/minecraft/world/level/block/state/properties/BlockSetType; b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DoubleBlockCombiner cyx
	combineWithNeigbour (Lnet/minecraft/world/level/block/entity/BlockEntityType;Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/world/level/block/state/properties/DirectionProperty;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/function/BiPredicate;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
net/minecraft/world/level/block/DoubleBlockCombiner$BlockType cyx$a
	$VALUES d
	FIRST b
	SECOND c
	SINGLE a
	$values ()[Lnet/minecraft/world/level/block/DoubleBlockCombiner$BlockType; a
net/minecraft/world/level/block/DoubleBlockCombiner$Combiner cyx$b
	acceptDouble (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; a
	acceptNone ()Ljava/lang/Object; b
	acceptSingle (Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult cyx$c
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Double cyx$c$a
	first a
	second b
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Single cyx$c$b
	single a
net/minecraft/world/level/block/DoublePlantBlock cyy
	CODEC a
	HALF b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	copyWaterloggedFrom (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	placeAt (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;I)V a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/block/state/BlockState; a
	preventDropFromBottomPart (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V b
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/DragonEggBlock cyz
	CODEC a
	SHAPE b
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getDelayAfterPlace ()I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	teleport (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DropExperienceBlock cza
	CODEC a
	xpRange b
	codec ()Lcom/mojang/serialization/MapCodec; a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
net/minecraft/world/level/block/DropperBlock czb
	CODEC d
	DISPENSE_BEHAVIOUR f
	LOGGER e
	codec ()Lcom/mojang/serialization/MapCodec; a
	dispenseFrom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	getDispenseMethod (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/core/dispenser/DispenseItemBehavior; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EnchantmentTableBlock czc
	BOOKSHELF_OFFSETS c
	CODEC a
	SHAPE b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isValidBookShelf (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/EndGatewayBlock czd
	CODEC a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EndPortalBlock cze
	CODEC a
	SHAPE b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EndPortalFrameBlock czf
	BASE_SHAPE d
	CODEC a
	EYE_SHAPE e
	FACING b
	FULL_SHAPE f
	HAS_EYE c
	portalShape g
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getOrCreatePortalShape ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/EndRodBlock czg
	CODEC b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/EnderChestBlock czh
	CODEC b
	CONTAINER_TITLE f
	FACING c
	SHAPE e
	WATERLOGGED d
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/EntityBlock czi
	getListener (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/world/level/gameevent/GameEventListener; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EquipableCarvedPumpkinBlock czj
	CODEC c
	codec ()Lcom/mojang/serialization/MapCodec; a
	getEquipmentSlot ()Lnet/minecraft/world/entity/EquipmentSlot; g
net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock czk
	FACE K
	canAttach (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/Fallable czl
	getFallDamageSource (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	onBrokenAfterFall (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
net/minecraft/world/level/block/FallingBlock czm
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	falling (Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	getDelayAfterPlace ()I b
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I b
	isFree (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/FarmBlock czn
	CODEC a
	MAX_MOISTURE d
	MOISTURE b
	SHAPE c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isNearWater (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	shouldMaintainFarmland (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	turnToDirt (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/FenceBlock czo
	CODEC i
	occlusionByIndex j
	codec ()Lcom/mojang/serialization/MapCodec; a
	connectsTo (Lnet/minecraft/world/level/block/state/BlockState;ZLnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSameFence (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FenceGateBlock czp
	CODEC a
	IN_WALL d
	OPEN b
	POWERED c
	X_COLLISION_SHAPE j
	X_OCCLUSION_SHAPE n
	X_OCCLUSION_SHAPE_LOW F
	X_SHAPE f
	X_SHAPE_LOW h
	X_SUPPORT_SHAPE l
	Z_COLLISION_SHAPE i
	Z_OCCLUSION_SHAPE m
	Z_OCCLUSION_SHAPE_LOW o
	Z_SHAPE e
	Z_SHAPE_LOW g
	Z_SUPPORT_SHAPE k
	type G
	codec ()Lcom/mojang/serialization/MapCodec; a
	connectsToDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isWall (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onExplosionHit (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;Ljava/util/function/BiConsumer;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FireBlock czq
	AGE e
	BURN_EASY M
	BURN_HARD O
	BURN_INSTANT L
	BURN_MEDIUM N
	CODEC c
	EAST g
	EAST_AABB n
	IGNITE_EASY I
	IGNITE_HARD K
	IGNITE_INSTANT H
	IGNITE_MEDIUM J
	MAX_AGE d
	NORTH f
	NORTH_AABB o
	PROPERTY_BY_DIRECTION k
	SOUTH h
	SOUTH_AABB F
	UP j
	UP_AABB l
	WEST i
	WEST_AABB m
	burnOdds Q
	igniteOdds P
	shapesCache G
	bootStrap ()V b
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	checkBurnOut (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ILnet/minecraft/util/RandomSource;I)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBurnOdds (Lnet/minecraft/world/level/block/state/BlockState;)I n
	getFireTickDelay (Lnet/minecraft/util/RandomSource;)I a
	getIgniteOdds (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)I a
	getIgniteOdds (Lnet/minecraft/world/level/block/state/BlockState;)I o
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	getStateWithAge (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/block/state/BlockState; a
	isNearRain (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isValidFireLocation (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	setFlammable (Lnet/minecraft/world/level/block/Block;II)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/FletchingTableBlock czr
	CODEC b
	codec ()Lcom/mojang/serialization/MapCodec; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FlowerBlock czs
	AABB_OFFSET c
	CODEC b
	EFFECTS_FIELD a
	SHAPE d
	suspiciousStewEffects e
	codec ()Lcom/mojang/serialization/MapCodec; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSuspiciousEffects ()Ljava/util/List; b
	makeEffectList (Lnet/minecraft/world/effect/MobEffect;I)Ljava/util/List; a
net/minecraft/world/level/block/FlowerPotBlock czt
	AABB_SIZE b
	CODEC a
	POTTED_BY_CONTENT d
	SHAPE c
	potted e
	codec ()Lcom/mojang/serialization/MapCodec; a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getPotted ()Lnet/minecraft/world/level/block/Block; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isEmpty ()Z g
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FrogspawnBlock czu
	CODEC a
	DEFAULT_MAX_HATCH_TICK_DELAY f
	DEFAULT_MIN_HATCH_TICK_DELAY e
	MAX_TADPOLES_SPAWN d
	MIN_TADPOLES_SPAWN c
	SHAPE b
	maxHatchTickDelay h
	minHatchTickDelay g
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	destroyBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getFrogspawnHatchDelay (Lnet/minecraft/util/RandomSource;)I a
	getRandomTadpolePositionOffset (Lnet/minecraft/util/RandomSource;)D b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hatchFrogspawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	mayPlaceOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	setDefaultHatchDelay ()V b
	setHatchDelay (II)V a
	spawnTadpoles (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/FrostedIceBlock czv
	AGE c
	CODEC a
	MAX_AGE b
	NEIGHBORS_TO_AGE f
	NEIGHBORS_TO_MELT g
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fewerNeigboursThan (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;I)Z a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	slightlyMelt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z e
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/FungusBlock czw
	BONEMEAL_SUCCESS_PROBABILITY c
	CODEC a
	SHAPE b
	feature e
	requiredBlock d
	codec ()Lcom/mojang/serialization/MapCodec; a
	getFeature (Lnet/minecraft/world/level/LevelReader;)Ljava/util/Optional; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/FurnaceBlock czx
	CODEC c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/GameMasterBlock czy
net/minecraft/world/level/block/GlazedTerracottaBlock czz
	CODEC a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/GlowLichenBlock daa
	CODEC a
	WATERLOGGED c
	spreader d
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	emission (I)Ljava/util/function/ToIntFunction; b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getSpreader ()Lnet/minecraft/world/level/block/MultifaceSpreader; c
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/GrassBlock dab
	CODEC a
	codec ()Lcom/mojang/serialization/MapCodec; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/GrindstoneBlock dac
	CEILING_EAST_WEST_ALL_LEGS aC
	CEILING_EAST_WEST_GRINDSTONE aD
	CEILING_EAST_WEST_LEFT_LEG aA
	CEILING_EAST_WEST_LEFT_PIVOT ay
	CEILING_EAST_WEST_LEFT_POST aw
	CEILING_EAST_WEST_RIGHT_LEG aB
	CEILING_EAST_WEST_RIGHT_PIVOT az
	CEILING_EAST_WEST_RIGHT_POST ax
	CEILING_NORTH_SOUTH_ALL_LEGS au
	CEILING_NORTH_SOUTH_GRINDSTONE av
	CEILING_NORTH_SOUTH_LEFT_LEG as
	CEILING_NORTH_SOUTH_LEFT_PIVOT aq
	CEILING_NORTH_SOUTH_LEFT_POST ao
	CEILING_NORTH_SOUTH_RIGHT_LEG at
	CEILING_NORTH_SOUTH_RIGHT_PIVOT ar
	CEILING_NORTH_SOUTH_RIGHT_POST ap
	CODEC a
	CONTAINER_TITLE aR
	FLOOR_EAST_WEST_ALL_LEGS F
	FLOOR_EAST_WEST_GRINDSTONE G
	FLOOR_EAST_WEST_LEFT_LEG n
	FLOOR_EAST_WEST_LEFT_PIVOT l
	FLOOR_EAST_WEST_LEFT_POST j
	FLOOR_EAST_WEST_RIGHT_LEG o
	FLOOR_EAST_WEST_RIGHT_PIVOT m
	FLOOR_EAST_WEST_RIGHT_POST k
	FLOOR_NORTH_SOUTH_ALL_LEGS h
	FLOOR_NORTH_SOUTH_GRINDSTONE i
	FLOOR_NORTH_SOUTH_LEFT_LEG f
	FLOOR_NORTH_SOUTH_LEFT_PIVOT d
	FLOOR_NORTH_SOUTH_LEFT_POST b
	FLOOR_NORTH_SOUTH_RIGHT_LEG g
	FLOOR_NORTH_SOUTH_RIGHT_PIVOT e
	FLOOR_NORTH_SOUTH_RIGHT_POST c
	WALL_EAST_ALL_LEGS am
	WALL_EAST_GRINDSTONE an
	WALL_EAST_LEFT_LEG ak
	WALL_EAST_LEFT_PIVOT ai
	WALL_EAST_LEFT_POST ag
	WALL_EAST_RIGHT_LEG al
	WALL_EAST_RIGHT_PIVOT aj
	WALL_EAST_RIGHT_POST ah
	WALL_NORTH_ALL_LEGS W
	WALL_NORTH_GRINDSTONE X
	WALL_NORTH_LEFT_LEG U
	WALL_NORTH_LEFT_PIVOT S
	WALL_NORTH_LEFT_POST Q
	WALL_NORTH_RIGHT_LEG V
	WALL_NORTH_RIGHT_PIVOT T
	WALL_NORTH_RIGHT_POST R
	WALL_SOUTH_ALL_LEGS O
	WALL_SOUTH_GRINDSTONE P
	WALL_SOUTH_LEFT_LEG M
	WALL_SOUTH_LEFT_PIVOT J
	WALL_SOUTH_LEFT_POST H
	WALL_SOUTH_RIGHT_LEG N
	WALL_SOUTH_RIGHT_PIVOT L
	WALL_SOUTH_RIGHT_POST I
	WALL_WEST_ALL_LEGS ae
	WALL_WEST_GRINDSTONE af
	WALL_WEST_LEFT_LEG ac
	WALL_WEST_LEFT_PIVOT aa
	WALL_WEST_LEFT_POST Y
	WALL_WEST_RIGHT_LEG ad
	WALL_WEST_RIGHT_PIVOT ab
	WALL_WEST_RIGHT_POST Z
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getVoxelShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; n
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/GrowingPlantBlock dad
	growthDirection a
	scheduleFluidTicks b
	shape d
	canAttachTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; b
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/LevelAccessor;)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/GrowingPlantBodyBlock dae
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; b
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getHeadPos (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateHeadAfterConvertedFromBody (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/GrowingPlantHeadBlock daf
	AGE e
	MAX_AGE f
	growPerTickProbability c
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlocksToGrowWhenBonemealed (Lnet/minecraft/util/RandomSource;)I a
	getGrowIntoState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; a
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
	getMaxAgeState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; n
	getStateForPlacement (Lnet/minecraft/world/level/LevelAccessor;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isMaxAge (Lnet/minecraft/world/level/block/state/BlockState;)Z o
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	updateBodyAfterConvertedFromHead (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/HalfTransparentBlock dag
	CODEC d
	codec ()Lcom/mojang/serialization/MapCodec; a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/HangingRootsBlock dah
	CODEC a
	SHAPE b
	WATERLOGGED c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/HayBlock dai
	CODEC a
	codec ()Lcom/mojang/serialization/MapCodec; a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
net/minecraft/world/level/block/HoneyBlock daj
	CODEC a
	MIN_FALL_SPEED_TO_BE_CONSIDERED_SLIDING e
	SHAPE b
	SLIDE_ADVANCEMENT_CHECK_INTERVAL g
	SLIDE_STARTS_WHEN_VERTICAL_SPEED_IS_AT_LEAST c
	THROTTLE_SLIDE_SPEED_TO f
	codec ()Lcom/mojang/serialization/MapCodec; a
	doSlideMovement (Lnet/minecraft/world/entity/Entity;)V d
	doesEntityDoHoneyBlockSlideEffects (Lnet/minecraft/world/entity/Entity;)Z c
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isSlidingDown (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	maybeDoSlideAchievement (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)V a
	maybeDoSlideEffects (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)V a
	showJumpParticles (Lnet/minecraft/world/entity/Entity;)V b
	showParticles (Lnet/minecraft/world/entity/Entity;I)V a
	showSlideParticles (Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/HopperBlock dak
	BASE g
	CODEC a
	CONVEX_BASE f
	DOWN_INTERACTION_SHAPE m
	DOWN_SHAPE h
	EAST_INTERACTION_SHAPE n
	EAST_SHAPE i
	ENABLED c
	FACING b
	FUNNEL e
	NORTH_INTERACTION_SHAPE o
	NORTH_SHAPE j
	SOUTH_INTERACTION_SHAPE F
	SOUTH_SHAPE k
	TOP d
	WEST_INTERACTION_SHAPE G
	WEST_SHAPE l
	checkPoweredState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/HorizontalDirectionalBlock dal
	FACING aE
	codec ()Lcom/mojang/serialization/MapCodec; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/HugeMushroomBlock dam
	CODEC a
	DOWN g
	EAST c
	NORTH b
	PROPERTY_BY_DIRECTION h
	SOUTH d
	UP f
	WEST e
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/IceBlock dan
	CODEC e
	codec ()Lcom/mojang/serialization/MapCodec; a
	melt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	meltsInto ()Lnet/minecraft/world/level/block/state/BlockState; b
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/InfestedBlock dao
	BLOCK_BY_HOST_BLOCK c
	CODEC a
	HOST_TO_INFESTED_STATES d
	INFESTED_TO_HOST_STATES e
	hostBlock b
	codec ()Lcom/mojang/serialization/MapCodec; a
	getHostBlock ()Lnet/minecraft/world/level/block/Block; b
	getNewStateWithProperties (Ljava/util/Map;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Supplier;)Lnet/minecraft/world/level/block/state/BlockState; a
	hostStateByInfested (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; o
	infestedStateByHost (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; n
	isCompatibleHostBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	spawnInfestation (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/block/InfestedRotatedPillarBlock dap
	CODEC b
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/IronBarsBlock daq
	CODEC i
	attachsTo (Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/JigsawBlock dar
	CODEC a
	ORIENTATION b
	canAttach (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFrontFacing (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTopFacing (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; n
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/JukeboxBlock das
	CODEC a
	HAS_RECORD b
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/KelpBlock dat
	CODEC c
	GROW_PER_TICK_PROBABILITY h
	SHAPE g
	canAttachTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	canPlaceLiquid (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getBlocksToGrowWhenBonemealed (Lnet/minecraft/util/RandomSource;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/KelpPlantBlock dau
	CODEC c
	canAttachTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canPlaceLiquid (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/LadderBlock dav
	AABB_OFFSET d
	CODEC a
	EAST_AABB e
	FACING b
	NORTH_AABB h
	SOUTH_AABB g
	WATERLOGGED c
	WEST_AABB f
	canAttachTo (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LanternBlock daw
	AABB d
	CODEC a
	HANGING b
	HANGING_AABB e
	WATERLOGGED c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LavaCauldronBlock dax
	CODEC d
	codec ()Lcom/mojang/serialization/MapCodec; a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getContentHeight (Lnet/minecraft/world/level/block/state/BlockState;)D b
	isFull (Lnet/minecraft/world/level/block/state/BlockState;)Z d
net/minecraft/world/level/block/LayeredCauldronBlock day
	BASE_CONTENT_HEIGHT h
	CODEC d
	HEIGHT_PER_LEVEL i
	LEVEL g
	MAX_FILL_LEVEL f
	MIN_FILL_LEVEL e
	precipitationType j
	canReceiveStalactiteDrip (Lnet/minecraft/world/level/material/Fluid;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getContentHeight (Lnet/minecraft/world/level/block/state/BlockState;)D b
	handleEntityOnFireInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	handlePrecipitation (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome$Precipitation;)V a
	isFull (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	lowerFillLevel (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	receiveStalactiteDrip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)V a
net/minecraft/world/level/block/LeavesBlock daz
	CODEC b
	DECAY_DISTANCE c
	DISTANCE d
	PERSISTENT e
	TICK_DELAY a
	WATERLOGGED f
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	decaying (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getDistanceAt (Lnet/minecraft/world/level/block/state/BlockState;)I o
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getLightBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I g
	getOptionalDistanceAt (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/OptionalInt; n
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateDistance (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LecternBlock dba
	CODEC a
	FACING b
	HAS_BOOK d
	PAGE_CHANGE_IMPULSE_TICKS n
	POWERED c
	SHAPE_BASE e
	SHAPE_COLLISION i
	SHAPE_COMMON g
	SHAPE_EAST l
	SHAPE_NORTH k
	SHAPE_POST f
	SHAPE_SOUTH m
	SHAPE_TOP_PLATE h
	SHAPE_WEST j
	changePowered (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	openScreen (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	placeBook (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;)V b
	popBook (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	resetBookState (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	signalPageChange (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	tryPlaceBook (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;)Z a
	updateBelow (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/LevelEvent dbb
	ANIMATION_DRAGON_SUMMON_ROAR ai
	ANIMATION_END_GATEWAY_SPAWN ah
	ANIMATION_TRIAL_SPAWNER_EJECT_ITEM av
	COMPOSTER_FILL Q
	DRIPSTONE_DRIP U
	END_PORTAL_FRAME_FILL T
	LAVA_FIZZ R
	PARTICLES_AND_SOUND_BRUSH_BLOCK_COMPLETE ap
	PARTICLES_AND_SOUND_PLANT_GROWTH V
	PARTICLES_AND_SOUND_WAX_ON ak
	PARTICLES_DESTROY_BLOCK X
	PARTICLES_DRAGON_BLOCK_BREAK ae
	PARTICLES_DRAGON_FIREBALL_SPLASH ac
	PARTICLES_EGG_CRACK aq
	PARTICLES_ELECTRIC_SPARK aj
	PARTICLES_EYE_OF_ENDER_DEATH Z
	PARTICLES_GUST_DUST ar
	PARTICLES_INSTANT_POTION_SPLASH ad
	PARTICLES_MOBBLOCK_SPAWN aa
	PARTICLES_PLANT_GROWTH ab
	PARTICLES_SCRAPE am
	PARTICLES_SCULK_CHARGE an
	PARTICLES_SCULK_SHRIEK ao
	PARTICLES_SHOOT_SMOKE W
	PARTICLES_SHOOT_WHITE_SMOKE ag
	PARTICLES_SPELL_POTION_SPLASH Y
	PARTICLES_TRIAL_SPAWNER_DETECT_PLAYER au
	PARTICLES_TRIAL_SPAWNER_SPAWN as
	PARTICLES_TRIAL_SPAWNER_SPAWN_MOB_AT at
	PARTICLES_WATER_EVAPORATING af
	PARTICLES_WAX_OFF al
	REDSTONE_TORCH_BURNOUT S
	SOUND_ANVIL_BROKEN w
	SOUND_ANVIL_LAND y
	SOUND_ANVIL_USED x
	SOUND_BAT_LIFTOFF s
	SOUND_BLAZE_FIREBALL l
	SOUND_BREWING_STAND_BREW C
	SOUND_CHORUS_DEATH B
	SOUND_CHORUS_GROW A
	SOUND_CRAFTER_CRAFT O
	SOUND_CRAFTER_FAIL P
	SOUND_DISPENSER_DISPENSE a
	SOUND_DISPENSER_FAIL b
	SOUND_DISPENSER_PROJECTILE_LAUNCH c
	SOUND_DRAGON_DEATH v
	SOUND_DRAGON_FIREBALL k
	SOUND_DRIP_LAVA_INTO_CAULDRON L
	SOUND_DRIP_WATER_INTO_CAULDRON M
	SOUND_ENDER_EYE_LAUNCH d
	SOUND_END_PORTAL_SPAWN D
	SOUND_EXTINGUISH_FIRE f
	SOUND_FIREWORK_SHOOT e
	SOUND_GHAST_FIREBALL j
	SOUND_GHAST_WARNING i
	SOUND_GRINDSTONE_USED H
	SOUND_HUSK_TO_ZOMBIE G
	SOUND_PAGE_TURN I
	SOUND_PHANTOM_BITE E
	SOUND_PLAY_JUKEBOX_SONG g
	SOUND_POINTED_DRIPSTONE_LAND K
	SOUND_PORTAL_TRAVEL z
	SOUND_SKELETON_TO_STRAY N
	SOUND_SMITHING_TABLE_USED J
	SOUND_STOP_JUKEBOX_SONG h
	SOUND_WITHER_BLOCK_BREAK p
	SOUND_WITHER_BOSS_SHOOT r
	SOUND_WITHER_BOSS_SPAWN q
	SOUND_ZOMBIE_CONVERTED u
	SOUND_ZOMBIE_DOOR_CRASH o
	SOUND_ZOMBIE_INFECTED t
	SOUND_ZOMBIE_IRON_DOOR n
	SOUND_ZOMBIE_TO_DROWNED F
	SOUND_ZOMBIE_WOODEN_DOOR m
net/minecraft/world/level/block/LeverBlock dbc
	CODEC a
	DEPTH c
	DOWN_AABB_X m
	DOWN_AABB_Z l
	EAST_AABB i
	HEIGHT e
	NORTH_AABB f
	POWERED b
	SOUTH_AABB g
	UP_AABB_X k
	UP_AABB_Z j
	WEST_AABB h
	WIDTH d
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	makeParticle (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;F)V a
	onExplosionHit (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;Ljava/util/function/BiConsumer;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	pull (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d
	updateNeighbours (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/LightBlock dbd
	CODEC a
	LEVEL c
	LIGHT_EMISSION e
	MAX_LEVEL b
	WATERLOGGED d
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	setLightOnStack (Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/LightningRodBlock dbe
	ACTIVATION_TICKS k
	CODEC b
	POWERED d
	RANGE e
	SPARK_CYCLE l
	WATERLOGGED c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	onLightningStrike (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateNeighbours (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LiquidBlock dbf
	CODEC a
	FLOWING_FLUID f
	LEVEL b
	POSSIBLE_FLOW_DIRECTIONS e
	STABLE_SHAPE d
	fluid c
	stateCache g
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fizz (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootParams$Builder;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPickupSound ()Ljava/util/Optional; au_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	pickupBlock (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	shouldSpreadLiquid (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LiquidBlockContainer dbg
	canPlaceLiquid (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/LoomBlock dbh
	CODEC a
	CONTAINER_TITLE b
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/MagmaBlock dbi
	BUBBLE_COLUMN_CHECK_DELAY b
	CODEC a
	codec ()Lcom/mojang/serialization/MapCodec; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/MangroveLeavesBlock dbj
	CODEC a
	codec ()Lcom/mojang/serialization/MapCodec; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/MangrovePropaguleBlock dbk
	AGE b
	CODEC a
	HANGING d
	MAX_AGE c
	SHAPE_PER_AGE j
	WATERLOGGED k
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	createNewHangingPropagule ()Lnet/minecraft/world/level/block/state/BlockState; c
	createNewHangingPropagule (I)Lnet/minecraft/world/level/block/state/BlockState; b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isFullyGrown (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isHanging (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/MangroveRootsBlock dbl
	CODEC a
	WATERLOGGED b
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/Mirror dbm
	$VALUES h
	CODEC d
	FRONT_BACK c
	LEFT_RIGHT b
	NONE a
	id e
	rotation g
	symbol f
	$values ()[Lnet/minecraft/world/level/block/Mirror; d
	getRotation (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/Rotation; a
	getSerializedName ()Ljava/lang/String; c
	mirror (II)I a
	mirror (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; b
	rotation ()Lcom/mojang/math/OctahedralGroup; a
	symbol ()Lnet/minecraft/network/chat/Component; b
net/minecraft/world/level/block/MossBlock dbn
	CODEC a
	codec ()Lcom/mojang/serialization/MapCodec; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/MudBlock dbo
	CODEC a
	SHAPE b
	codec ()Lcom/mojang/serialization/MapCodec; a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F d
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
net/minecraft/world/level/block/MultifaceBlock dbp
	AABB_OFFSET a
	DIRECTIONS b
	DOWN_AABB d
	EAST_AABB f
	NORTH_AABB g
	PROPERTY_BY_DIRECTION i
	SHAPE_BY_DIRECTION j
	SOUTH_AABB h
	UP_AABB c
	WEST_AABB e
	canMirrorX m
	canMirrorZ n
	canRotate l
	shapesCache k
	availableFaces (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Set; h
	calculateMultifaceShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; o
	canAttachTo (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDefaultMultifaceState (Lnet/minecraft/world/level/block/state/StateDefinition;)Lnet/minecraft/world/level/block/state/BlockState; a
	getFaceProperty (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/BooleanProperty; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSpreader ()Lnet/minecraft/world/level/block/MultifaceSpreader; c
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/BlockState; c
	hasAnyFace (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	hasAnyVacantFace (Lnet/minecraft/world/level/block/state/BlockState;)Z p
	hasFace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	isFaceSupported (Lnet/minecraft/core/Direction;)Z a
	isValidStateForPlacement (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	isWaterloggable ()Z g
	mapDirections (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Function;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	pack (Ljava/util/Collection;)B a
	removeFace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	unpack (B)Ljava/util/Set; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/MultifaceSpreader dbq
	DEFAULT_SPREAD_ORDER a
	config b
	canSpreadInAnyDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	getSpreadFromFaceTowardDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadPredicate;)Ljava/util/Optional; a
	spreadAll (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Z)J a
	spreadFromFaceTowardAllDirections (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)J a
	spreadFromFaceTowardDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Z)Ljava/util/Optional; a
	spreadFromFaceTowardRandomDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;Z)Ljava/util/Optional; a
	spreadFromRandomFaceTowardRandomDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	spreadToFace (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadPos;Z)Ljava/util/Optional; a
net/minecraft/world/level/block/MultifaceSpreader$DefaultSpreaderConfig dbq$a
	block a
	canSpreadInto (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadPos;)Z a
	getStateForPlacement (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/BlockState; a
	stateCanBeReplaced (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/MultifaceSpreader$SpreadConfig dbq$b
	canSpreadFrom (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z b
	canSpreadInto (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadPos;)Z a
	getSpreadTypes ()[Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadType; a
	getStateForPlacement (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasFace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	isOtherBlockValidAsSource (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	placeBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
net/minecraft/world/level/block/MultifaceSpreader$SpreadPos dbq$c
	face b
	pos a
	face ()Lnet/minecraft/core/Direction; b
	pos ()Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/block/MultifaceSpreader$SpreadPredicate dbq$d
net/minecraft/world/level/block/MultifaceSpreader$SpreadType dbq$e
	$VALUES d
	SAME_PLANE b
	SAME_POSITION a
	WRAP_AROUND c
	$values ()[Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadType; a
	getSpreadPos (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadPos; a
net/minecraft/world/level/block/MushroomBlock dbr
	AABB_OFFSET b
	CODEC a
	SHAPE c
	feature d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	growMushroom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/MyceliumBlock dbs
	CODEC a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
net/minecraft/world/level/block/NetherPortalBlock dbt
	AABB_OFFSET c
	AXIS b
	CODEC a
	X_AXIS_AABB d
	Z_AXIS_AABB e
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/NetherSproutsBlock dbu
	CODEC a
	SHAPE b
	codec ()Lcom/mojang/serialization/MapCodec; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/block/NetherVines dbv
	BONEMEAL_GROW_PROBABILITY_DECREASE_RATE b
	GROW_PER_TICK_PROBABILITY a
	getBlocksToGrowWhenBonemealed (Lnet/minecraft/util/RandomSource;)I a
	isValidGrowthState (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/NetherWartBlock dbw
	AGE c
	CODEC a
	MAX_AGE b
	SHAPE_BY_AGE d
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/NetherrackBlock dbx
	CODEC a
	codec ()Lcom/mojang/serialization/MapCodec; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/NoteBlock dby
	CODEC a
	INSTRUMENT b
	NOTE d
	NOTE_VOLUME e
	POWERED c
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCustomSoundId (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/resources/ResourceLocation; a
	getPitchFromNote (I)F b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	playNote (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	setInstrument (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; b
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/NyliumBlock dbz
	CODEC a
	canBeNylium (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	codec ()Lcom/mojang/serialization/MapCodec; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	place (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/ObserverBlock dca
	CODEC b
	POWERED c
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	startSignal (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateNeighborsInFront (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/PiglinWallSkullBlock dcb
	AABBS e
	CODEC b
	codec ()Lcom/mojang/serialization/MapCodec; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/PinkPetalsBlock dcc
	AMOUNT e
	CODEC a
	FACING d
	MAX_FLOWERS c
	MIN_FLOWERS b
	SHAPE_BY_PROPERTIES f
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/PipeBlock dcd
	DIRECTIONS a
	DOWN g
	EAST c
	NORTH b
	PROPERTY_BY_DIRECTION h
	SOUTH d
	UP f
	WEST e
	shapeByIndex i
	codec ()Lcom/mojang/serialization/MapCodec; a
	getAABBIndex (Lnet/minecraft/world/level/block/state/BlockState;)I h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	makeShapes (F)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
net/minecraft/world/level/block/PitcherCropBlock dce
	AGE d
	BONEMEAL_INCREASE g
	CODEC c
	COLLISION_SHAPE_BULB j
	COLLISION_SHAPE_CROP k
	DOUBLE_PLANT_AGE_INTERSECTION f
	FULL_LOWER_SHAPE i
	FULL_UPPER_SHAPE h
	LOWER_SHAPE_BY_AGE m
	MAX_AGE e
	UPPER_SHAPE_BY_AGE l
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canGrow (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Z a
	canGrowInto (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getLowerHalf (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/PitcherCropBlock$PosAndState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	grow (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;I)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isDouble (I)Z b
	isLower (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isMaxAge (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	sufficientLight (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/PitcherCropBlock$PosAndState dce$a
	pos a
	state b
	pos ()Lnet/minecraft/core/BlockPos; a
	state ()Lnet/minecraft/world/level/block/state/BlockState; b
net/minecraft/world/level/block/PlayerHeadBlock dcf
	CODEC b
	codec ()Lcom/mojang/serialization/MapCodec; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/PlayerWallHeadBlock dcg
	CODEC b
	codec ()Lcom/mojang/serialization/MapCodec; a
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootParams$Builder;)Ljava/util/List; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/PointedDripstoneBlock dch
	AVERAGE_DAYS_PER_GROWTH H
	BASE_SHAPE R
	CODEC a
	DELAY_BEFORE_FALLING f
	DRIP_PROBABILITY_PER_ANIMATE_TICK g
	DRIP_PROBABILITY_PER_ANIMATE_TICK_IF_UNDER_LIQUID_SOURCE h
	FRUSTUM_SHAPE P
	GROWTH_PROBABILITY_PER_RANDOM_TICK I
	LAVA_TRANSFER_PROBABILITY_PER_RANDOM_TICK k
	MAX_GROWTH_LENGTH J
	MAX_HORIZONTAL_OFFSET S
	MAX_SEARCH_LENGTH_BETWEEN_STALACTITE_TIP_AND_CAULDRON i
	MAX_SEARCH_LENGTH_WHEN_CHECKING_DRIP_TYPE e
	MAX_STALACTITE_HEIGHT_FOR_DAMAGE_CALCULATION o
	MAX_STALAGMITE_SEARCH_RANGE_WHEN_GROWING K
	MIDDLE_SHAPE Q
	MIN_TRIDENT_VELOCITY_TO_BREAK_DRIPSTONE l
	REQUIRED_SPACE_TO_DRIP_THROUGH_NON_SOLID_BLOCK T
	STALACTITE_DAMAGE_PER_FALL_DISTANCE_AND_SIZE m
	STALACTITE_DRIP_START_PIXEL L
	STALACTITE_MAX_DAMAGE n
	STALAGMITE_FALL_DAMAGE_MODIFIER G
	STALAGMITE_FALL_DISTANCE_OFFSET F
	THICKNESS c
	TIP_DIRECTION b
	TIP_MERGE_SHAPE M
	TIP_SHAPE_DOWN O
	TIP_SHAPE_UP N
	WATERLOGGED d
	WATER_TRANSFER_PROBABILITY_PER_RANDOM_TICK j
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	calculateDripstoneThickness (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Lnet/minecraft/world/level/block/state/properties/DripstoneThickness; a
	calculateTipDirection (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; b
	canDrip (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canDripThrough (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canFillCauldron (Lnet/minecraft/world/level/material/Fluid;)Z a
	canGrow (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canTipGrow (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z b
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	createDripstone (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)V a
	createMergedTips (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	findBlockVertical (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$AxisDirection;Ljava/util/function/BiPredicate;Ljava/util/function/Predicate;I)Ljava/util/Optional; a
	findFillableCauldronBelowStalactiteTip (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/core/BlockPos; a
	findRootBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Ljava/util/Optional; a
	findStalactiteTipAboveCauldron (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findTip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	getCauldronFillFluidType (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/Fluid; a
	getDripFluid (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/material/Fluid; a
	getFallDamageSource (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	getFluidAboveStalactite (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getMaxHorizontalOffset ()F at_
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	grow (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	growStalactiteOrStalagmiteIfPossible (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V c
	growStalagmiteBelow (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V b
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isPointedDripstoneWithDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z b
	isStalactite (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isStalactiteStartPos (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	isStalagmite (Lnet/minecraft/world/level/block/state/BlockState;)Z o
	isTip (Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	isUnmergedTipWithDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	isValidPointedDripstonePlacement (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z c
	maybeTransferFluid (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;F)V a
	onBrokenAfterFall (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	spawnDripParticle (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	spawnDripParticle (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)V a
	spawnFallingStalactite (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/PointedDripstoneBlock$FluidInfo dch$a
	fluid b
	pos a
	sourceState c
	fluid ()Lnet/minecraft/world/level/material/Fluid; b
	pos ()Lnet/minecraft/core/BlockPos; a
	sourceState ()Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/level/block/PotatoBlock dci
	CODEC a
	SHAPE_BY_AGE b
	codec ()Lcom/mojang/serialization/MapCodec; a
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/PowderSnowBlock dcj
	CODEC a
	FALLING_COLLISION_SHAPE f
	HORIZONTAL_PARTICLE_MOMENTUM_FACTOR b
	IN_BLOCK_HORIZONTAL_SPEED_MULTIPLIER c
	IN_BLOCK_VERTICAL_SPEED_MULTIPLIER d
	MINIMUM_FALL_DISTANCE_FOR_BIG_SOUND h
	MINIMUM_FALL_DISTANCE_FOR_SOUND g
	NUM_BLOCKS_TO_FALL_INTO_BLOCK e
	canEntityWalkOnPowderSnow (Lnet/minecraft/world/entity/Entity;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getPickupSound ()Ljava/util/Optional; au_
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	pickupBlock (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/PoweredBlock dck
	CODEC a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
net/minecraft/world/level/block/PoweredRailBlock dcl
	CODEC d
	POWERED f
	SHAPE e
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	findPoweredRailSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZI)Z a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; c
	isSameRailWithPower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZILnet/minecraft/world/level/block/state/properties/RailShape;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/world/level/block/PressurePlateBlock dcm
	CODEC e
	POWERED f
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/PumpkinBlock dcn
	CODEC a
	codec ()Lcom/mojang/serialization/MapCodec; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RailBlock dco
	CODEC d
	SHAPE e
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; c
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/world/level/block/RailState dcp
	block c
	connections f
	isStraight e
	level a
	pos b
	state d
	canConnectTo (Lnet/minecraft/world/level/block/RailState;)Z b
	connectTo (Lnet/minecraft/world/level/block/RailState;)V c
	connectsTo (Lnet/minecraft/world/level/block/RailState;)Z a
	countPotentialConnections ()I b
	getConnections ()Ljava/util/List; a
	getRail (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/RailState; b
	getState ()Lnet/minecraft/world/level/block/state/BlockState; c
	hasConnection (Lnet/minecraft/core/BlockPos;)Z c
	hasNeighborRail (Lnet/minecraft/core/BlockPos;)Z d
	hasRail (Lnet/minecraft/core/BlockPos;)Z a
	place (ZZLnet/minecraft/world/level/block/state/properties/RailShape;)Lnet/minecraft/world/level/block/RailState; a
	removeSoftConnections ()V d
	updateConnections (Lnet/minecraft/world/level/block/state/properties/RailShape;)V a
net/minecraft/world/level/block/RedStoneOreBlock dcq
	CODEC a
	LIT b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	interact (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	spawnParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RedStoneWireBlock dcr
	CODEC a
	COLORS G
	E j
	EAST c
	H h
	N k
	NORTH b
	PARTICLE_DENSITY H
	POWER f
	PROPERTY_BY_DIRECTION g
	S l
	SHAPES_CACHE F
	SHAPES_FLOOR n
	SHAPES_UP o
	SHAPE_DOT m
	SOUTH d
	W i
	WEST e
	crossState I
	shouldSignal J
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; n
	calculateTargetStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canSurviveOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	checkCornerChangeAt (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V b
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getColorForPower (I)I b
	getConnectingSide (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/RedstoneSide; a
	getConnectingSide (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Lnet/minecraft/world/level/block/state/properties/RedstoneSide; a
	getConnectionState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getMissingConnections (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getWireSignal (Lnet/minecraft/world/level/block/state/BlockState;)I q
	isCross (Lnet/minecraft/world/level/block/state/BlockState;)Z o
	isDot (Lnet/minecraft/world/level/block/state/BlockState;)Z p
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnParticlesAlongLine (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;FF)V a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateNeighborsOfNeighboringWires (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V c
	updatePowerStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updatesOnShapeChange (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RedstoneLampBlock dcs
	CODEC a
	LIT b
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/RedstoneTorchBlock dct
	CODEC c
	LIT d
	MAX_RECENT_TOGGLES f
	RECENT_TOGGLES h
	RECENT_TOGGLE_TIMER e
	RESTART_DELAY g
	TOGGLE_DELAY i
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	hasNeighborSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	isToggledTooFrequently (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/RedstoneTorchBlock$Toggle dct$a
	pos a
	when b
net/minecraft/world/level/block/RedstoneWallTorchBlock dcu
	CODEC h
	FACING i
	LIT j
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasNeighborSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/RenderShape dcv
	$VALUES d
	ENTITYBLOCK_ANIMATED b
	INVISIBLE a
	MODEL c
	$values ()[Lnet/minecraft/world/level/block/RenderShape; a
net/minecraft/world/level/block/RepeaterBlock dcw
	CODEC a
	DELAY e
	LOCKED b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isLocked (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z c
	sideInputDiodesOnly ()Z b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RespawnAnchorBlock dcx
	CHARGE d
	CODEC a
	MAX_CHARGES c
	MIN_CHARGES b
	RESPAWN_HORIZONTAL_OFFSETS e
	RESPAWN_OFFSETS f
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canBeCharged (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canSetSpawn (Lnet/minecraft/world/level/Level;)Z a
	charge (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	explode (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	findStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; a
	findStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getScaledChargeLevel (Lnet/minecraft/world/level/block/state/BlockState;I)I a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRespawnFuel (Lnet/minecraft/world/item/ItemStack;)Z a
	isWaterThatWouldFlow (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;)Z a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RodBlock dcy
	AABB_MAX g
	AABB_MIN f
	X_AXIS_AABB j
	Y_AXIS_AABB h
	Z_AXIS_AABB i
	codec ()Lcom/mojang/serialization/MapCodec; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/RootedDirtBlock dcz
	CODEC a
	codec ()Lcom/mojang/serialization/MapCodec; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/RootsBlock dda
	AABB_OFFSET b
	CODEC a
	SHAPE c
	codec ()Lcom/mojang/serialization/MapCodec; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/block/RotatedPillarBlock ddb
	AXIS i
	CODEC h
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotatePillar (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; b
net/minecraft/world/level/block/Rotation ddc
	$VALUES h
	CLOCKWISE_180 c
	CLOCKWISE_90 b
	CODEC e
	COUNTERCLOCKWISE_90 d
	NONE a
	id f
	rotation g
	$values ()[Lnet/minecraft/world/level/block/Rotation; b
	getRandom (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/Rotation; a
	getRotated (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/Rotation; a
	getSerializedName ()Ljava/lang/String; c
	getShuffled (Lnet/minecraft/util/RandomSource;)Ljava/util/List; b
	rotate (II)I a
	rotate (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	rotation ()Lcom/mojang/math/OctahedralGroup; a
net/minecraft/world/level/block/SaplingBlock ddd
	AABB_OFFSET g
	CODEC e
	SHAPE h
	STAGE f
	treeGrower i
	advanceTree (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/ScaffoldingBlock dde
	BELOW_BLOCK j
	BOTTOM e
	CODEC a
	DISTANCE c
	STABILITY_MAX_DISTANCE b
	STABLE_SHAPE g
	TICK_DELAY f
	UNSTABLE_SHAPE h
	UNSTABLE_SHAPE_BOTTOM i
	WATERLOGGED d
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getDistance (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBottom (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;I)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SculkBehaviour ddf
	DEFAULT u_
	attemptSpreadVein (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Collection;Z)Z a
	attemptUseCharge (Lnet/minecraft/world/level/block/SculkSpreader$ChargeCursor;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/SculkSpreader;Z)I a
	canChangeBlockStateOnSpread ()Z d
	depositCharge (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	getSculkSpreadDelay ()B b
	onDischarged (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateDecayDelay (I)I i_
net/minecraft/world/level/block/SculkBlock ddg
	CODEC b
	attemptUseCharge (Lnet/minecraft/world/level/block/SculkSpreader$ChargeCursor;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/SculkSpreader;Z)I a
	canChangeBlockStateOnSpread ()Z d
	canPlaceGrowth (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getDecayPenalty (Lnet/minecraft/world/level/block/SculkSpreader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;I)I a
	getRandomGrowthState (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SculkCatalystBlock ddh
	CODEC a
	PULSE b
	xpRange c
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/SculkSensorBlock ddi
	ACTIVE_TICKS d
	CODEC c
	COOLDOWN_TICKS e
	PHASE f
	POWER g
	RESONANCE_PITCH_BEND a
	SHAPE i
	WATERLOGGED h
	activate (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)V a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canActivate (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	deactivate (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	getActiveTicks ()I c
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPhase (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/properties/SculkSensorPhase; h
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	tryResonateVibration (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
	updateNeighbours (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/SculkShriekerBlock ddj
	CAN_SUMMON d
	CODEC a
	COLLIDER e
	SHRIEKING b
	TOP_Y f
	WATERLOGGED c
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/SculkSpreader ddk
	LOGGER m
	MAX_CHARGE b
	MAX_CURSORS e
	MAX_DECAY_FACTOR c
	MAX_GROWTH_RATE_RADIUS a
	SHRIEKER_PLACEMENT_RATE d
	additionalDecayRate k
	chargeDecayRate j
	cursors l
	growthSpawnCost h
	isWorldGeneration f
	noGrowthRadius i
	replaceableBlocks g
	addCursor (Lnet/minecraft/world/level/block/SculkSpreader$ChargeCursor;)V a
	addCursors (Lnet/minecraft/core/BlockPos;I)V a
	additionalDecayRate ()I g
	chargeDecayRate ()I f
	clear ()V j
	createLevelSpreader ()Lnet/minecraft/world/level/block/SculkSpreader; a
	createWorldGenSpreader ()Lnet/minecraft/world/level/block/SculkSpreader; b
	getCursors ()Ljava/util/List; i
	growthSpawnCost ()I d
	isWorldGeneration ()Z h
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	noGrowthRadius ()I e
	replaceableBlocks ()Lnet/minecraft/tags/TagKey; c
	save (Lnet/minecraft/nbt/CompoundTag;)V b
	updateCursors (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Z)V a
net/minecraft/world/level/block/SculkSpreader$ChargeCursor ddk$a
	CODEC b
	DIRECTION_SET i
	MAX_CURSOR_DECAY_DELAY a
	NON_CORNER_NEIGHBOURS c
	charge e
	decayDelay g
	facings h
	pos d
	updateDelay f
	getBlockBehaviour (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/SculkBehaviour; a
	getCharge ()I b
	getDecayDelay ()I c
	getFacingData ()Ljava/util/Set; d
	getPos ()Lnet/minecraft/core/BlockPos; a
	getRandomizedNonCornerNeighbourOffsets (Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getValidMovementPos (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/BlockPos; a
	isMovementUnobstructed (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Z a
	isUnobstructed (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	mergeWith (Lnet/minecraft/world/level/block/SculkSpreader$ChargeCursor;)V a
	shouldUpdate (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Z)Z a
	update (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/SculkSpreader;Z)V a
net/minecraft/world/level/block/SculkVeinBlock ddl
	CODEC c
	WATERLOGGED d
	sameSpaceSpreader f
	veinSpreader e
	attemptPlaceSculk (Lnet/minecraft/world/level/block/SculkSpreader;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	attemptUseCharge (Lnet/minecraft/world/level/block/SculkSpreader$ChargeCursor;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/SculkSpreader;Z)I a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getSameSpaceSpreader ()Lnet/minecraft/world/level/block/MultifaceSpreader; g
	getSpreader ()Lnet/minecraft/world/level/block/MultifaceSpreader; c
	hasSubstrateAccess (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Z a
	onDischarged (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	regrow (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Collection;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SculkVeinBlock$SculkVeinSpreaderConfig ddl$a
	spreadTypes c
	getSpreadTypes ()[Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadType; a
	isOtherBlockValidAsSource (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	stateCanBeReplaced (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/SeaPickleBlock ddm
	CODEC a
	FOUR_AABB h
	MAX_PICKLES b
	ONE_AABB e
	PICKLES c
	THREE_AABB g
	TWO_AABB f
	WATERLOGGED d
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isDead (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SeagrassBlock ddn
	AABB_OFFSET b
	CODEC a
	SHAPE c
	canPlaceLiquid (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ShulkerBoxBlock ddo
	CODEC a
	CONTENTS c
	DOWN_OPEN_AABB f
	EAST_OPEN_AABB h
	FACING b
	NORTH_OPEN_AABB i
	OPEN_AABB_SIZE d
	OPEN_SHAPE_BY_DIRECTION k
	SOUTH_OPEN_AABB j
	UP_OPEN_AABB e
	WES_OPEN_AABB g
	color l
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	canOpen (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockByColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/Block; a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
	getColorFromBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/DyeColor; a
	getColorFromItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/DyeColor; b
	getColoredItemStack (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/ItemStack; b
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootParams$Builder;)Ljava/util/List; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SignBlock ddp
	AABB_OFFSET g
	SHAPE h
	WATERLOGGED f
	type a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getInteractionResult (Z)Lnet/minecraft/world/InteractionResult; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignHitboxCenterPosition (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/Vec3; h
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getWoodType (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/properties/WoodType; a
	getYRotationDegrees (Lnet/minecraft/world/level/block/state/BlockState;)F g
	hasEditableText (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/entity/SignBlockEntity;Z)Z b
	isPossibleToRespawnInThis (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openTextEdit (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/entity/SignBlockEntity;Z)V a
	otherPlayerIsEditingSign (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/entity/SignBlockEntity;)Z a
	type ()Lnet/minecraft/world/level/block/state/properties/WoodType; d
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SimpleWaterloggedBlock ddq
	canPlaceLiquid (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getPickupSound ()Ljava/util/Optional; au_
	pickupBlock (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/SkullBlock ddr
	CODEC c
	MAX d
	PIGLIN_SHAPE g
	ROTATION e
	ROTATIONS b
	SHAPE f
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SkullBlock$Type ddr$a
	CODEC b
	TYPES a
net/minecraft/world/level/block/SkullBlock$Types ddr$b
	$VALUES k
	CREEPER g
	DRAGON i
	PIGLIN h
	PLAYER e
	SKELETON c
	WITHER_SKELETON d
	ZOMBIE f
	name j
	$values ()[Lnet/minecraft/world/level/block/SkullBlock$Types; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/SlabBlock dds
	BOTTOM_AABB d
	CODEC a
	TOP_AABB e
	TYPE b
	WATERLOGGED c
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canPlaceLiquid (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/SlimeBlock ddt
	CODEC a
	bounceUp (Lnet/minecraft/world/entity/Entity;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/SmallDripleafBlock ddu
	AABB_OFFSET e
	CODEC c
	FACING d
	SHAPE f
	WATERLOGGED g
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getMaxVerticalOffset ()F av_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SmithingTableBlock ddv
	CODEC b
	CONTAINER_TITLE c
	codec ()Lcom/mojang/serialization/MapCodec; a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SmokerBlock ddw
	CODEC c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/SnifferEggBlock ddx
	BOOSTED_HATCH_TIME_TICKS e
	CODEC a
	HATCH c
	MAX_HATCH_LEVEL b
	RANDOM_HATCH_OFFSET_TICKS f
	REGULAR_HATCH_TIME_TICKS d
	SHAPE g
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getHatchLevel (Lnet/minecraft/world/level/block/state/BlockState;)I h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hatchBoost (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isReadyToHatch (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/SnowLayerBlock ddy
	CODEC a
	HEIGHT_IMPASSABLE e
	LAYERS c
	MAX_HEIGHT b
	SHAPE_BY_LAYER d
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/SnowyDirtBlock ddz
	CODEC b
	SNOWY c
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSnowySetting (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoulFireBlock dea
	CODEC c
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canSurviveOnBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	codec ()Lcom/mojang/serialization/MapCodec; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoulSandBlock deb
	BUBBLE_COLUMN_CHECK_DELAY c
	CODEC a
	SHAPE b
	codec ()Lcom/mojang/serialization/MapCodec; a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F d
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoundType dec
	AMETHYST Y
	AMETHYST_CLUSTER Z
	ANCIENT_DEBRIS S
	ANVIL n
	AZALEA ao
	AZALEA_LEAVES ax
	BAMBOO s
	BAMBOO_SAPLING t
	BAMBOO_WOOD aS
	BAMBOO_WOOD_HANGING_SIGN aR
	BASALT K
	BIG_DRIPLEAF at
	BONE_BLOCK Q
	CALCITE ag
	CANDLE X
	CAVE_VINES am
	CHAIN U
	CHERRY_LEAVES aW
	CHERRY_SAPLING aV
	CHERRY_WOOD aU
	CHERRY_WOOD_HANGING_SIGN aX
	CHISELED_BOOKSHELF aY
	COPPER aj
	COPPER_BULB ak
	COPPER_GRATE al
	CORAL_BLOCK r
	CROP w
	DECORATED_POT bb
	DECORATED_POT_CRACKED bc
	DEEPSLATE aE
	DEEPSLATE_BRICKS aF
	DEEPSLATE_TILES aG
	DRIPSTONE_BLOCK ah
	EMPTY a
	FLOWERING_AZALEA ap
	FROGLIGHT aI
	FROGSPAWN aJ
	FUNGUS D
	GILDED_BLACKSTONE W
	GLASS h
	GLOW_LICHEN aD
	GRASS d
	GRAVEL c
	HANGING_ROOTS aw
	HANGING_SIGN aP
	HARD_CROP x
	HONEY_BLOCK p
	LADDER m
	LANTERN A
	LARGE_AMETHYST_BUD ac
	LILY_PAD e
	LODESTONE T
	MANGROVE_ROOTS aK
	MEDIUM_AMETHYST_BUD ab
	METAL g
	MOSS as
	MOSS_CARPET aq
	MUD aM
	MUDDY_MANGROVE_ROOTS aL
	MUD_BRICKS aN
	NETHERITE_BLOCK R
	NETHERRACK M
	NETHER_BRICKS N
	NETHER_GOLD_ORE V
	NETHER_ORE P
	NETHER_SPROUTS O
	NETHER_WART z
	NETHER_WOOD aT
	NETHER_WOOD_HANGING_SIGN aQ
	NYLIUM C
	PACKED_MUD aO
	PINK_PETALS ar
	POINTED_DRIPSTONE ai
	POLISHED_DEEPSLATE aH
	POLISHED_TUFF af
	POWDER_SNOW l
	ROOTED_DIRT av
	ROOTS E
	SAND j
	SCAFFOLDING u
	SCULK aA
	SCULK_CATALYST az
	SCULK_SENSOR ay
	SCULK_SHRIEKER aC
	SCULK_VEIN aB
	SHROOMLIGHT F
	SLIME_BLOCK o
	SMALL_AMETHYST_BUD aa
	SMALL_DRIPLEAF au
	SNOW k
	SOUL_SAND I
	SOUL_SOIL J
	SPONGE be
	SPORE_BLOSSOM an
	STEM B
	STONE f
	SUSPICIOUS_GRAVEL ba
	SUSPICIOUS_SAND aZ
	SWEET_BERRY_BUSH v
	TRIAL_SPAWNER bd
	TUFF ad
	TUFF_BRICKS ae
	TWISTING_VINES H
	VINE y
	WART_BLOCK L
	WEEPING_VINES G
	WET_GRASS q
	WET_SPONGE bf
	WOOD b
	WOOL i
	breakSound bi
	fallSound bm
	hitSound bl
	pitch bh
	placeSound bk
	stepSound bj
	volume bg
	getBreakSound ()Lnet/minecraft/sounds/SoundEvent; c
	getFallSound ()Lnet/minecraft/sounds/SoundEvent; g
	getHitSound ()Lnet/minecraft/sounds/SoundEvent; f
	getPitch ()F b
	getPlaceSound ()Lnet/minecraft/sounds/SoundEvent; e
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; d
	getVolume ()F a
net/minecraft/world/level/block/SpawnerBlock ded
	CODEC a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
net/minecraft/world/level/block/SpongeBlock dee
	ALL_DIRECTIONS d
	CODEC a
	MAX_COUNT c
	MAX_DEPTH b
	codec ()Lcom/mojang/serialization/MapCodec; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	removeWaterBreadthFirstSearch (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z b
	tryAbsorbWater (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/block/SporeBlossomBlock def
	ADD_PARTICLE_ATTEMPTS c
	CODEC a
	PARTICLE_XZ_RADIUS d
	PARTICLE_Y_MAX e
	SHAPE b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SpreadingSnowyDirtBlock deg
	canBeGrass (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	canPropagate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z c
	codec ()Lcom/mojang/serialization/MapCodec; a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/StainedGlassBlock deh
	CODEC a
	color c
	codec ()Lcom/mojang/serialization/MapCodec; a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
net/minecraft/world/level/block/StainedGlassPaneBlock dei
	CODEC j
	color k
	codec ()Lcom/mojang/serialization/MapCodec; a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
net/minecraft/world/level/block/StairBlock dej
	BOTTOM_AABB g
	BOTTOM_SHAPES G
	CODEC a
	FACING b
	HALF c
	OCTET_NNN h
	OCTET_NNP i
	OCTET_NPN j
	OCTET_NPP k
	OCTET_PNN l
	OCTET_PNP m
	OCTET_PPN n
	OCTET_PPP o
	SHAPE d
	SHAPE_BY_STATE I
	TOP_AABB f
	TOP_SHAPES F
	WATERLOGGED e
	base J
	baseState H
	canTakeShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z c
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getExplosionResistance ()F e
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShapeIndex (Lnet/minecraft/world/level/block/state/BlockState;)I n
	getStairsShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/properties/StairsShape; i
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isStairs (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	makeShapes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	makeStairShape (ILnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/StandingSignBlock dek
	CODEC a
	ROTATION b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getYRotationDegrees (Lnet/minecraft/world/level/block/state/BlockState;)F g
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/StemBlock del
	AABB_OFFSET d
	AGE c
	CODEC a
	MAX_AGE b
	SHAPE_BY_AGE e
	attachedStem g
	fruit f
	seed h
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/StonecutterBlock dem
	CODEC a
	CONTAINER_TITLE d
	FACING b
	SHAPE c
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/StructureBlock den
	CODEC a
	MODE b
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	trigger (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/StructureVoidBlock deo
	CODEC a
	SHAPE c
	SIZE b
	codec ()Lcom/mojang/serialization/MapCodec; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/SugarCaneBlock dep
	AABB_OFFSET c
	AGE b
	CODEC a
	SHAPE d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SupportType deq
	$VALUES d
	CENTER b
	FULL a
	RIGID c
	$values ()[Lnet/minecraft/world/level/block/SupportType; a
	isSupporting (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/SuspiciousEffectHolder der
	getAllEffectHolders ()Ljava/util/List; c
	getSuspiciousEffects ()Ljava/util/List; b
	tryGet (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/block/SuspiciousEffectHolder; a
net/minecraft/world/level/block/SuspiciousEffectHolder$EffectEntry der$a
	CODEC a
	LIST_CODEC b
	duration d
	effect c
	createEffectInstance ()Lnet/minecraft/world/effect/MobEffectInstance; a
	duration ()I c
	effect ()Lnet/minecraft/world/effect/MobEffect; b
net/minecraft/world/level/block/SweetBerryBushBlock des
	AGE c
	CODEC a
	HURT_SPEED_THRESHOLD d
	MAX_AGE b
	MID_GROWTH_SHAPE f
	SAPLING_SHAPE e
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/TallFlowerBlock det
	CODEC c
	codec ()Lcom/mojang/serialization/MapCodec; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TallGrassBlock deu
	AABB_OFFSET b
	CODEC a
	SHAPE c
	codec ()Lcom/mojang/serialization/MapCodec; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TallSeagrassBlock dev
	AABB_OFFSET e
	CODEC c
	HALF d
	SHAPE f
	canPlaceLiquid (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/TargetBlock dew
	ACTIVATION_TICKS_ARROWS c
	ACTIVATION_TICKS_OTHER d
	CODEC a
	OUTPUT_POWER b
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRedstoneStrength (Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/phys/Vec3;)I a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	setOutputPower (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;ILnet/minecraft/core/BlockPos;I)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateRedstoneOutput (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/Entity;)I a
net/minecraft/world/level/block/TintedGlassBlock dex
	CODEC a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getLightBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I g
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
net/minecraft/world/level/block/TntBlock dey
	CODEC a
	UNSTABLE b
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dropFromExplosion (Lnet/minecraft/world/level/Explosion;)Z a
	explode (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	explode (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
net/minecraft/world/level/block/TorchBlock dez
	CODEC d
	PARTICLE_OPTIONS_FIELD c
	flameParticle e
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
net/minecraft/world/level/block/TorchflowerCropBlock dfa
	AABB_OFFSET g
	AGE c
	BONEMEAL_INCREASE i
	CODEC a
	MAX_AGE b
	SHAPE_BY_AGE h
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAgeProperty ()Lnet/minecraft/world/level/block/state/properties/IntegerProperty; b
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; d
	getBonemealAgeIncrease (Lnet/minecraft/world/level/Level;)I a
	getMaxAge ()I c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForAge (I)Lnet/minecraft/world/level/block/state/BlockState; b
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/TransparentBlock dfb
	CODEC b
	codec ()Lcom/mojang/serialization/MapCodec; a
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F d
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
net/minecraft/world/level/block/TrapDoorBlock dfc
	AABB_THICKNESS f
	BOTTOM_AABB k
	CODEC a
	EAST_OPEN_AABB g
	HALF c
	NORTH_OPEN_AABB j
	OPEN b
	POWERED d
	SOUTH_OPEN_AABB i
	TOP_AABB l
	WATERLOGGED e
	WEST_OPEN_AABB h
	type m
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getType ()Lnet/minecraft/world/level/block/state/properties/BlockSetType; g
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onExplosionHit (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;Ljava/util/function/BiConsumer;)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	toggle (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/TrappedChestBlock dfd
	CODEC n
	codec ()Lcom/mojang/serialization/MapCodec; a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getOpenChestStat ()Lnet/minecraft/stats/Stat; c
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/TrialSpawnerBlock dfe
	CODEC a
	STATE b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/TripWireBlock dff
	AABB i
	ATTACHED c
	CODEC a
	DISARMED d
	EAST f
	NORTH e
	NOT_ATTACHED_AABB j
	POWERED b
	PROPERTY_BY_DIRECTION k
	RECHECK_PERIOD l
	SOUTH g
	WEST h
	hook m
	checkPressed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateSource (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TripWireHookBlock dfg
	AABB_OFFSET g
	ATTACHED d
	CODEC a
	EAST_AABB k
	FACING b
	NORTH_AABB h
	POWERED c
	RECHECK_PERIOD l
	SOUTH_AABB i
	WEST_AABB j
	WIRE_DIST_MAX f
	WIRE_DIST_MIN e
	calculateState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZZILnet/minecraft/world/level/block/state/BlockState;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	emitState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZZZZ)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	notifyNeighbors (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/TurtleEggBlock dfh
	CODEC a
	EGGS f
	HATCH e
	MAX_EGGS d
	MAX_HATCH_LEVEL b
	MIN_EGGS c
	MULTIPLE_EGGS_AABB h
	ONE_EGG_AABB g
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canDestroyEgg (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	decreaseEggs (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	destroyEgg (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;I)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSand (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onSand (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	shouldUpdateHatchLevel (Lnet/minecraft/world/level/Level;)Z a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/TwistingVinesBlock dfi
	CODEC c
	SHAPE g
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	codec ()Lcom/mojang/serialization/MapCodec; a
	getBlocksToGrowWhenBonemealed (Lnet/minecraft/util/RandomSource;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; b
net/minecraft/world/level/block/TwistingVinesPlantBlock dfj
	CODEC c
	SHAPE e
	codec ()Lcom/mojang/serialization/MapCodec; a
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
net/minecraft/world/level/block/VineBlock dfk
	AABB_OFFSET h
	CODEC a
	EAST d
	EAST_AABB k
	NORTH c
	NORTH_AABB l
	PROPERTY_BY_DIRECTION g
	SOUTH e
	SOUTH_AABB m
	UP b
	UP_AABB i
	WEST f
	WEST_AABB j
	shapesCache n
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSpread (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	canSupportAtFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	copyRandomFaces (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; a
	countFaces (Lnet/minecraft/world/level/block/state/BlockState;)I o
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPropertyForFace (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/BooleanProperty; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getUpdatedState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; i
	hasFaces (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	hasHorizontalConnection (Lnet/minecraft/world/level/block/state/BlockState;)Z p
	isAcceptableNeighbour (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallBannerBlock dfl
	CODEC a
	FACING b
	SHAPES c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallBlock dfm
	CODEC a
	EAST_TEST J
	EAST_WALL c
	NORTH_TEST G
	NORTH_WALL d
	POST_COVER_WIDTH m
	POST_TEST F
	POST_WIDTH l
	SOUTH_TEST H
	SOUTH_WALL e
	UP b
	WALL_COVER_END o
	WALL_COVER_START n
	WALL_HEIGHT k
	WALL_WIDTH j
	WATERLOGGED g
	WEST_TEST I
	WEST_WALL f
	collisionShapeByIndex i
	shapeByIndex h
	applyWallShape (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/level/block/state/properties/WallSide;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	codec ()Lcom/mojang/serialization/MapCodec; a
	connectsTo (Lnet/minecraft/world/level/block/state/BlockState;ZLnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isConnected (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	isCovered (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	makeShapes (FFFFFF)Ljava/util/Map; a
	makeWallState (ZLnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/level/block/state/properties/WallSide; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldRaisePost (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	sideUpdate (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/BlockState; a
	topUpdate (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZZZZ)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateSides (Lnet/minecraft/world/level/block/state/BlockState;ZZZZLnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallHangingSignBlock dfn
	AABBS j
	CODEC a
	FACING b
	PLANK_EASTWEST d
	PLANK_NORTHSOUTH c
	SHAPE_EASTWEST i
	SHAPE_NORTHSOUTH e
	canAttachTo (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getDescriptionId ()Ljava/lang/String; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getYRotationDegrees (Lnet/minecraft/world/level/block/state/BlockState;)F g
	isHittingEditableSide (Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldTryToChainAnotherHangingSign (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/level/block/entity/SignBlockEntity;Lnet/minecraft/world/item/ItemStack;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/WallSignBlock dfo
	AABBS i
	AABB_BOTTOM d
	AABB_THICKNESS c
	AABB_TOP e
	CODEC a
	FACING b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignHitboxCenterPosition (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/Vec3; h
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getYRotationDegrees (Lnet/minecraft/world/level/block/state/BlockState;)F g
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallSkullBlock dfp
	AABBS b
	CODEC c
	FACING d
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallTorchBlock dfq
	AABBS i
	AABB_OFFSET h
	CODEC f
	FACING g
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WaterlilyBlock dfr
	AABB b
	CODEC a
	codec ()Lcom/mojang/serialization/MapCodec; a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/block/WaterloggedTransparentBlock dfs
	CODEC a
	WATERLOGGED c
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WeatheringCopper dft
	NEXT_BY_BLOCK v_
	PREVIOUS_BY_BLOCK w_
	getChanceModifier ()F aw_
	getFirst (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; b
	getFirst (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; c
	getNext (Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; c
	getNext (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; i_
	getPrevious (Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; a
	getPrevious (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
net/minecraft/world/level/block/WeatheringCopper$WeatherState dft$a
	$VALUES g
	CODEC e
	EXPOSED b
	OXIDIZED d
	UNAFFECTED a
	WEATHERED c
	name f
	$values ()[Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/WeatheringCopperBulbBlock dfu
	CODEC d
	weatherState e
	codec ()Lcom/mojang/serialization/MapCodec; a
	getAge ()Ljava/lang/Enum; c
	getAge ()Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; g
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/WeatheringCopperDoorBlock dfv
	CODEC l
	weatherState m
	codec ()Lcom/mojang/serialization/MapCodec; a
	getAge ()Ljava/lang/Enum; c
	getAge ()Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; g
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/WeatheringCopperFullBlock dfw
	CODEC d
	weatherState e
	codec ()Lcom/mojang/serialization/MapCodec; a
	getAge ()Ljava/lang/Enum; c
	getAge ()Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; g
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/WeatheringCopperGrateBlock dfx
	CODEC e
	weatherState f
	codec ()Lcom/mojang/serialization/MapCodec; a
	getAge ()Ljava/lang/Enum; c
	getAge ()Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; g
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/WeatheringCopperSlabBlock dfy
	CODEC f
	weatherState g
	codec ()Lcom/mojang/serialization/MapCodec; a
	getAge ()Ljava/lang/Enum; c
	getAge ()Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; g
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/WeatheringCopperStairBlock dfz
	CODEC I
	weatherState J
	codec ()Lcom/mojang/serialization/MapCodec; a
	getAge ()Ljava/lang/Enum; c
	getAge ()Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; g
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/WeatheringCopperTrapDoorBlock dga
	CODEC m
	weatherState n
	codec ()Lcom/mojang/serialization/MapCodec; a
	getAge ()Ljava/lang/Enum; c
	getAge ()Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; s
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/WebBlock dgb
	CODEC a
	codec ()Lcom/mojang/serialization/MapCodec; a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/WeepingVinesBlock dgc
	CODEC c
	SHAPE g
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	codec ()Lcom/mojang/serialization/MapCodec; a
	getBlocksToGrowWhenBonemealed (Lnet/minecraft/util/RandomSource;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; b
net/minecraft/world/level/block/WeepingVinesPlantBlock dgd
	CODEC c
	SHAPE e
	codec ()Lcom/mojang/serialization/MapCodec; a
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
net/minecraft/world/level/block/WeightedPressurePlateBlock dge
	CODEC e
	POWER f
	maxWeight g
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPressedTime ()I b
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WetSpongeBlock dgf
	CODEC a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
net/minecraft/world/level/block/WitherRoseBlock dgg
	CODEC e
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/block/WitherSkullBlock dgh
	CODEC b
	witherPatternBase i
	witherPatternFull h
	canSpawnMob (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Z b
	checkSpawn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/SkullBlockEntity;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	getOrCreateWitherBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; y
	getOrCreateWitherFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; s
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/WitherWallSkullBlock dgi
	CODEC b
	codec ()Lcom/mojang/serialization/MapCodec; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/WoolCarpetBlock dgj
	CODEC c
	color d
	codec ()Lcom/mojang/serialization/MapCodec; a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity dgk
	BURN_COOL_SPEED l
	BURN_TIME_STANDARD k
	DATA_COOKING_PROGRESS h
	DATA_COOKING_TOTAL_TIME i
	DATA_LIT_DURATION g
	DATA_LIT_TIME f
	NUM_DATA_VALUES j
	SLOTS_FOR_DOWN s
	SLOTS_FOR_SIDES t
	SLOTS_FOR_UP r
	SLOT_FUEL d
	SLOT_INPUT c
	SLOT_RESULT e
	cookingProgress w
	cookingTotalTime x
	dataAccess n
	items m
	litDuration v
	litTime u
	quickCheck z
	recipesUsed y
	add (Ljava/util/Map;Lnet/minecraft/tags/TagKey;I)V a
	add (Ljava/util/Map;Lnet/minecraft/world/level/ItemLike;I)V a
	awardUsedRecipes (Lnet/minecraft/world/entity/player/Player;Ljava/util/List;)V a
	awardUsedRecipesAndPopExperience (Lnet/minecraft/server/level/ServerPlayer;)V a
	burn (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/item/crafting/RecipeHolder;Lnet/minecraft/core/NonNullList;I)Z b
	canBurn (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/item/crafting/RecipeHolder;Lnet/minecraft/core/NonNullList;I)Z a
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	clearContent ()V a
	createExperience (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;IF)V a
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getContainerSize ()I b
	getFuel ()Ljava/util/Map; f
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/RecipeHolder; d
	getRecipesToAwardAndPopExperience (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Ljava/util/List; a
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	getTotalCookTime (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity;)I a
	isEmpty ()Z ai_
	isFuel (Lnet/minecraft/world/item/ItemStack;)Z b
	isLit ()Z g
	isNeverAFurnaceFuel (Lnet/minecraft/world/item/Item;)Z b
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity;)V a
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setRecipeUsed (Lnet/minecraft/world/item/crafting/RecipeHolder;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/level/block/entity/BannerBlockEntity dgl
	MAX_PATTERNS a
	TAG_COLOR d
	TAG_PATTERN c
	TAG_PATTERNS b
	baseColor f
	itemPatterns g
	name e
	patterns h
	createPatterns (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/nbt/ListTag;)Ljava/util/List; a
	fromItem (Lnet/minecraft/world/item/ItemStack;)V b
	fromItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/DyeColor;)V a
	getBaseColor ()Lnet/minecraft/world/item/DyeColor; g
	getCustomName ()Lnet/minecraft/network/chat/Component; af
	getItem ()Lnet/minecraft/world/item/ItemStack; f
	getItemPatterns (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/ListTag; a
	getName ()Lnet/minecraft/network/chat/Component; ad
	getPatternCount (Lnet/minecraft/world/item/ItemStack;)I c
	getPatterns ()Ljava/util/List; c
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; j
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ax_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeLastPattern (Lnet/minecraft/world/item/ItemStack;)V d
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/BannerPattern dgm
	hashname a
	byHash (Ljava/lang/String;)Lnet/minecraft/core/Holder; a
	getHashname ()Ljava/lang/String; a
	location (Lnet/minecraft/resources/ResourceKey;Z)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/block/entity/BannerPattern$Builder dgm$a
	patterns a
	addPattern (Lcom/mojang/datafixers/util/Pair;)Lnet/minecraft/world/level/block/entity/BannerPattern$Builder; a
	addPattern (Lnet/minecraft/core/Holder;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/entity/BannerPattern$Builder; a
	addPattern (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/entity/BannerPattern$Builder; a
	toListTag ()Lnet/minecraft/nbt/ListTag; a
net/minecraft/world/level/block/entity/BannerPatterns dgn
	BASE a
	BORDER E
	BRICKS I
	CIRCLE_MIDDLE y
	CREEPER K
	CROSS o
	CURLY_BORDER F
	DIAGONAL_LEFT u
	DIAGONAL_LEFT_MIRROR w
	DIAGONAL_RIGHT v
	DIAGONAL_RIGHT_MIRROR x
	FLOWER M
	GLOBE J
	GRADIENT G
	GRADIENT_UP H
	HALF_HORIZONTAL B
	HALF_HORIZONTAL_MIRROR D
	HALF_VERTICAL A
	HALF_VERTICAL_MIRROR C
	MOJANG N
	PIGLIN O
	RHOMBUS_MIDDLE z
	SKULL L
	SQUARE_BOTTOM_LEFT b
	SQUARE_BOTTOM_RIGHT c
	SQUARE_TOP_LEFT d
	SQUARE_TOP_RIGHT e
	STRAIGHT_CROSS p
	STRIPE_BOTTOM f
	STRIPE_CENTER j
	STRIPE_DOWNLEFT m
	STRIPE_DOWNRIGHT l
	STRIPE_LEFT h
	STRIPE_MIDDLE k
	STRIPE_RIGHT i
	STRIPE_SMALL n
	STRIPE_TOP g
	TRIANGLES_BOTTOM s
	TRIANGLES_TOP t
	TRIANGLE_BOTTOM q
	TRIANGLE_TOP r
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/block/entity/BannerPattern; a
	create (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/block/entity/BarrelBlockEntity dgo
	items e
	openersCounter f
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; l
	getItems ()Lnet/minecraft/core/NonNullList; k
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/sounds/SoundEvent;)V a
	recheckOpen ()V m
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setItems (Lnet/minecraft/core/NonNullList;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V d_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c
	updateBlockState (Lnet/minecraft/world/level/block/state/BlockState;Z)V a
net/minecraft/world/level/block/entity/BaseContainerBlockEntity dgp
	lockKey e
	name f
	canOpen (Lnet/minecraft/world/entity/player/Player;)Z d
	canUnlock (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/LockCode;Lnet/minecraft/network/chat/Component;)Z a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getCustomName ()Lnet/minecraft/network/chat/Component; af
	getDefaultName ()Lnet/minecraft/network/chat/Component; l
	getDisplayName ()Lnet/minecraft/network/chat/Component; Q_
	getName ()Lnet/minecraft/network/chat/Component; ad
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/BeaconBlockEntity dgq
	BEACON_EFFECTS a
	BLOCKS_CHECK_PER_TICK h
	DATA_LEVELS b
	DATA_PRIMARY c
	DATA_SECONDARY d
	DEFAULT_NAME i
	MAX_LEVELS f
	NUM_DATA_VALUES e
	TAG_PRIMARY j
	TAG_SECONDARY k
	VALID_EFFECTS g
	beamSections l
	checkingBeamSections m
	dataAccess w
	lastCheckY r
	levels n
	lockKey v
	name u
	primaryPower s
	secondaryPower t
	applyEffects (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/effect/MobEffect;)V a
	filterEffect (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffect; a
	getBeamSections ()Ljava/util/List; c
	getCustomName ()Lnet/minecraft/network/chat/Component; af
	getDisplayName ()Lnet/minecraft/network/chat/Component; Q_
	getName ()Lnet/minecraft/network/chat/Component; ad
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; j
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; f
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ax_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadEffect (Lnet/minecraft/nbt/CompoundTag;Ljava/lang/String;)Lnet/minecraft/world/effect/MobEffect; a
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setRemoved ()V ay_
	storeEffect (Lnet/minecraft/nbt/CompoundTag;Ljava/lang/String;Lnet/minecraft/world/effect/MobEffect;)V a
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;)V a
	updateBase (Lnet/minecraft/world/level/Level;III)I a
net/minecraft/world/level/block/entity/BeaconBlockEntity$BeaconBeamSection dgq$a
	color a
	height b
	getColor ()[F b
	getHeight ()I c
	increaseHeight ()V a
net/minecraft/world/level/block/entity/BedBlockEntity dgr
	color a
	getColor ()Lnet/minecraft/world/item/DyeColor; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; j
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; c
	setColor (Lnet/minecraft/world/item/DyeColor;)V a
net/minecraft/world/level/block/entity/BeehiveBlockEntity dgs
	BEES f
	ENTITY_DATA c
	HAS_NECTAR e
	IGNORED_BEE_TAGS i
	MAX_OCCUPANTS g
	MIN_OCCUPATION_TICKS b
	MIN_OCCUPATION_TICKS_NECTAR k
	MIN_OCCUPATION_TICKS_NECTARLESS h
	MIN_TICKS_BEFORE_REENTERING_HIVE j
	TAG_FLOWER_POS a
	TICKS_IN_HIVE d
	savedFlowerPos m
	stored l
	addOccupant (Lnet/minecraft/world/entity/Entity;Z)V a
	addOccupantWithPresetTicks (Lnet/minecraft/world/entity/Entity;ZI)V a
	emptyAllLivingFromHive (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)V a
	getHoneyLevel (Lnet/minecraft/world/level/block/state/BlockState;)I a
	getOccupantCount ()I g
	hasSavedFlowerPos ()Z m
	isEmpty ()Z d
	isFireNearby ()Z c
	isFull ()Z f
	isSedated ()Z k
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	releaseAllOccupants (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)Ljava/util/List; a
	releaseOccupant (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData;Ljava/util/List;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;Lnet/minecraft/core/BlockPos;)Z a
	removeIgnoredBeeTags (Lnet/minecraft/nbt/CompoundTag;)V d
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity;)V a
	setBeeReleaseData (ILnet/minecraft/world/entity/animal/Bee;)V a
	setChanged ()V e
	storeBee (Lnet/minecraft/nbt/CompoundTag;IZ)V a
	tickOccupants (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/List;Lnet/minecraft/core/BlockPos;)V a
	writeBees ()Lnet/minecraft/nbt/ListTag; l
net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData dgs$a
	entityData a
	minOccupationTicks c
	ticksInHive b
net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus dgs$b
	$VALUES d
	BEE_RELEASED b
	EMERGENCY c
	HONEY_DELIVERED a
	$values ()[Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus; a
net/minecraft/world/level/block/entity/BellBlockEntity dgt
	DURATION d
	GLOW_DURATION e
	HEAR_BELL_RADIUS j
	HIGHLIGHT_RAIDERS_RADIUS k
	MAX_RESONATION_TICKS g
	MIN_TICKS_BETWEEN_SEARCHES f
	SEARCH_RADIUS i
	TICKS_BEFORE_RESONATION h
	clickDirection c
	lastRingTimestamp l
	nearbyEntities m
	resonating n
	resonationTicks r
	shaking b
	ticks a
	areRaidersNearby (Lnet/minecraft/core/BlockPos;Ljava/util/List;)Z a
	clientTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BellBlockEntity;)V a
	glow (Lnet/minecraft/world/entity/LivingEntity;)V a
	isRaiderWithinRange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	makeRaidersGlow (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V a
	onHit (Lnet/minecraft/core/Direction;)V a
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BellBlockEntity;)V b
	showBellParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V b
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BellBlockEntity;Lnet/minecraft/world/level/block/entity/BellBlockEntity$ResonationEndAction;)V a
	triggerEvent (II)Z a_
	updateEntities ()V c
net/minecraft/world/level/block/entity/BellBlockEntity$ResonationEndAction dgt$a
net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity dgu
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getDefaultName ()Lnet/minecraft/network/chat/Component; l
net/minecraft/world/level/block/entity/BlockEntity dgv
	LOGGER e
	blockState g
	level o
	remove q
	type f
	worldPosition p
	addEntityType (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/block/entity/BlockEntityType;)V a
	clearRemoved ()V t
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getBlockPos ()Lnet/minecraft/core/BlockPos; aB_
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; r
	getLevel ()Lnet/minecraft/world/level/Level; i
	getPosFromTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/core/BlockPos; c
	getType ()Lnet/minecraft/world/level/block/entity/BlockEntityType; v
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; j
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ax_
	hasLevel ()Z n
	isRemoved ()Z s
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadStatic (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onlyOpCanSetNbt ()Z u
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	saveId (Lnet/minecraft/nbt/CompoundTag;)V d
	saveMetadata (Lnet/minecraft/nbt/CompoundTag;)V e
	saveToItem (Lnet/minecraft/world/item/ItemStack;)V e
	saveWithFullMetadata ()Lnet/minecraft/nbt/CompoundTag; o
	saveWithId ()Lnet/minecraft/nbt/CompoundTag; p
	saveWithoutMetadata ()Lnet/minecraft/nbt/CompoundTag; q
	setBlockState (Lnet/minecraft/world/level/block/state/BlockState;)V b
	setChanged ()V e
	setChanged (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setRemoved ()V ay_
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/BlockEntityTicker dgw
net/minecraft/world/level/block/entity/BlockEntityType dgx
	BANNER t
	BARREL A
	BEACON o
	BED y
	BEEHIVE H
	BELL E
	BLAST_FURNACE C
	BREWING_STAND l
	BRUSHABLE_BLOCK N
	CALIBRATED_SCULK_SENSOR J
	CAMPFIRE G
	CHEST b
	CHISELED_BOOKSHELF M
	COMMAND_BLOCK w
	COMPARATOR s
	CONDUIT z
	CRAFTER P
	DAYLIGHT_DETECTOR q
	DECORATED_POT O
	DISPENSER f
	DROPPER g
	ENCHANTING_TABLE m
	ENDER_CHEST d
	END_GATEWAY v
	END_PORTAL n
	FURNACE a
	HANGING_SIGN i
	HOPPER r
	JIGSAW F
	JUKEBOX e
	LECTERN D
	LOGGER R
	MOB_SPAWNER j
	PISTON k
	SCULK_CATALYST K
	SCULK_SENSOR I
	SCULK_SHRIEKER L
	SHULKER_BOX x
	SIGN h
	SKULL p
	SMOKER B
	STRUCTURE_BLOCK u
	TRAPPED_CHEST c
	TRIAL_SPAWNER Q
	builtInRegistryHolder V
	dataType U
	factory S
	validBlocks T
	builtInRegistryHolder ()Lnet/minecraft/core/Holder$Reference; a
	create (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockEntity (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getKey (Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/resources/ResourceLocation; a
	isValid (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/block/entity/BlockEntityType$Builder;)Lnet/minecraft/world/level/block/entity/BlockEntityType; a
net/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier dgx$a
net/minecraft/world/level/block/entity/BlockEntityType$Builder dgx$b
	factory a
	validBlocks b
	build (Lcom/mojang/datafixers/types/Type;)Lnet/minecraft/world/level/block/entity/BlockEntityType; a
	of (Lnet/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/entity/BlockEntityType$Builder; a
net/minecraft/world/level/block/entity/BrewingStandBlockEntity dgy
	DATA_BREW_TIME d
	DATA_FUEL_USES e
	FUEL_SLOT i
	FUEL_USES c
	INGREDIENT_SLOT h
	NUM_DATA_VALUES f
	SLOTS_FOR_DOWN k
	SLOTS_FOR_SIDES l
	SLOTS_FOR_UP j
	brewTime n
	dataAccess g
	fuel t
	ingredient s
	items m
	lastPotionCount r
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	clearContent ()V a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	doBrew (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/NonNullList;)V a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; l
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getPotionBits ()[Z f
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	isBrewable (Lnet/minecraft/core/NonNullList;)Z a
	isEmpty ()Z ai_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BrewingStandBlockEntity;)V a
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/level/block/entity/BrushableBlockEntity dgz
	BRUSH_COOLDOWN_TICKS f
	BRUSH_RESET_TICKS g
	HIT_DIRECTION_TAG d
	ITEM_TAG e
	LOGGER a
	LOOT_TABLE_SEED_TAG c
	LOOT_TABLE_TAG b
	REQUIRED_BRUSHES_TO_BREAK h
	brushCount i
	brushCountResetsAtTick j
	coolDownEndsAtTick k
	hitDirection m
	item l
	lootTable n
	lootTableSeed r
	brush (JLnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/Direction;)Z a
	brushingCompleted (Lnet/minecraft/world/entity/player/Player;)V b
	checkReset ()V c
	dropContent (Lnet/minecraft/world/entity/player/Player;)V c
	getCompletionState ()I k
	getHitDirection ()Lnet/minecraft/core/Direction; f
	getItem ()Lnet/minecraft/world/item/ItemStack; g
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; j
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; d
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ax_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setLootTable (Lnet/minecraft/resources/ResourceLocation;J)V a
	tryLoadLootTable (Lnet/minecraft/nbt/CompoundTag;)Z d
	trySaveLootTable (Lnet/minecraft/nbt/CompoundTag;)Z e
	unpackLootTable (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/entity/CalibratedSculkSensorBlockEntity dha
	createVibrationUser ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User; c
net/minecraft/world/level/block/entity/CalibratedSculkSensorBlockEntity$VibrationUser dha$a
	canReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)Z a
	getBackSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I a
	getListenerRadius ()I a
net/minecraft/world/level/block/entity/CampfireBlockEntity dhb
	BURN_COOL_SPEED a
	NUM_SLOTS b
	cookingProgress d
	cookingTime e
	items c
	quickCheck f
	clearContent ()V a
	cookTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;)V a
	cooldownTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;)V b
	dowse ()V f
	getCookableRecipe (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	getItems ()Lnet/minecraft/core/NonNullList; c
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; j
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; d
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ax_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	markUpdated ()V g
	particleTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;)V c
	placeFood (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;I)Z a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
net/minecraft/world/level/block/entity/ChestBlockEntity dhc
	EVENT_SET_OPEN_COUNT e
	chestLidController h
	items f
	openersCounter g
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; l
	getItems ()Lnet/minecraft/core/NonNullList; k
	getOpenCount (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getOpenNess (F)F a
	lidAnimateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/ChestBlockEntity;)V a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/sounds/SoundEvent;)V a
	recheckOpen ()V m
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setItems (Lnet/minecraft/core/NonNullList;)V a
	signalOpenCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V d_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c
	swapContents (Lnet/minecraft/world/level/block/entity/ChestBlockEntity;Lnet/minecraft/world/level/block/entity/ChestBlockEntity;)V a
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/ChestLidController dhd
	oOpenness c
	openness b
	shouldBeOpen a
	getOpenness (F)F a
	shouldBeOpen (Z)V a
	tickLid ()V a
net/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity dhe
	LOGGER d
	MAX_BOOKS_IN_STORAGE c
	items e
	lastInteractedSlot f
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	canTakeItem (Lnet/minecraft/world/Container;ILnet/minecraft/world/item/ItemStack;)Z a
	clearContent ()V a
	count ()I f
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getLastInteractedSlot ()I g
	getMaxStackSize ()I ak_
	isEmpty ()Z ai_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	updateState (I)V c
net/minecraft/world/level/block/entity/CommandBlockEntity dhf
	auto b
	commandBlock d
	conditionMet c
	powered a
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; c
	getMode ()Lnet/minecraft/world/level/block/entity/CommandBlockEntity$Mode; m
	isAutomatic ()Z f
	isConditional ()Z w
	isPowered ()Z d
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	markConditionMet ()Z l
	onModeSwitch ()V g
	onlyOpCanSetNbt ()Z u
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	scheduleTick ()V x
	setAutomatic (Z)V b
	setPowered (Z)V a
	wasConditionMet ()Z k
net/minecraft/world/level/block/entity/CommandBlockEntity$Mode dhf$a
	$VALUES d
	AUTO b
	REDSTONE c
	SEQUENCE a
	$values ()[Lnet/minecraft/world/level/block/entity/CommandBlockEntity$Mode; a
net/minecraft/world/level/block/entity/ComparatorBlockEntity dhg
	output a
	getOutputSignal ()I c
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setOutputSignal (I)V a
net/minecraft/world/level/block/entity/ConduitBlockEntity dhh
	BLOCK_REFRESH_RATE b
	EFFECT_DURATION c
	KILL_RANGE g
	MIN_ACTIVE_SIZE e
	MIN_KILL_SIZE f
	ROTATION_SPEED d
	VALID_BLOCKS h
	activeRotation i
	destroyTarget m
	destroyTargetUUID n
	effectBlocks l
	isActive j
	isHunting k
	nextAmbientSoundActivation r
	tickCount a
	animationTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/world/entity/Entity;I)V a
	applyEffects (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V b
	clientTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V a
	findDestroyTarget (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/UUID;)Lnet/minecraft/world/entity/LivingEntity; a
	getActiveRotation (F)F a
	getDestroyRangeAABB (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; a
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; j
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; c
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ax_
	isActive ()Z d
	isHunting ()Z f
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V b
	setHunting (Z)V a
	updateClientTarget (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V a
	updateDestroyTarget (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/List;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V a
	updateHunting (Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;Ljava/util/List;)V a
	updateShape (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;)Z a
net/minecraft/world/level/block/entity/ContainerOpenersCounter dhi
	CHECK_TICK_DELAY a
	openCount b
	decrementOpeners (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	getOpenCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getOpenerCount ()I a
	incrementOpeners (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	isOwnContainer (Lnet/minecraft/world/entity/player/Player;)Z a
	onClose (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	onOpen (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	openerCountChanged (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)V a
	recheckOpeners (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	scheduleRecheck (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V d
net/minecraft/world/level/block/entity/CrafterBlockEntity dhj
	CONTAINER_HEIGHT f
	CONTAINER_SIZE g
	CONTAINER_WIDTH e
	DATA_TRIGGERED j
	NUM_DATA k
	SLOT_DISABLED h
	SLOT_ENABLED i
	containerData l
	craftingTicksRemaining s
	items r
	addDisabledSlots (Lnet/minecraft/nbt/CompoundTag;)V d
	addTriggered (Lnet/minecraft/nbt/CompoundTag;)V e
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; l
	getHeight ()I g
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getItems ()Ljava/util/List; h
	getItems ()Lnet/minecraft/core/NonNullList; k
	getRedstoneSignal ()I w
	getWidth ()I f
	isEmpty ()Z ai_
	isSlotDisabled (I)Z c
	isTriggered ()Z m
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/CrafterBlockEntity;)V a
	setCraftingTicksRemaining (I)V d
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setItems (Lnet/minecraft/core/NonNullList;)V a
	setSlotState (IZ)V a
	setTriggered (Z)V a
	slotCanBeDisabled (I)Z e
	smallerStackExist (ILnet/minecraft/world/item/ItemStack;I)Z a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/level/block/entity/DaylightDetectorBlockEntity dhk
net/minecraft/world/level/block/entity/DecoratedPotBlockEntity dhl
	EVENT_POT_WOBBLES g
	TAG_ITEM f
	TAG_SHERDS e
	decorations l
	item m
	lastWobbleStyle i
	lootTable j
	lootTableSeed k
	wobbleStartedAtTick h
	createDecoratedPotItem (Lnet/minecraft/world/level/block/entity/DecoratedPotBlockEntity$Decorations;)Lnet/minecraft/world/item/ItemStack; a
	getContainerBlockEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; y
	getDecorations ()Lnet/minecraft/world/level/block/entity/DecoratedPotBlockEntity$Decorations; m
	getDirection ()Lnet/minecraft/core/Direction; l
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; az_
	getLootTableSeed ()J aA_
	getPotAsItem ()Lnet/minecraft/world/item/ItemStack; w
	getTheItem ()Lnet/minecraft/world/item/ItemStack; x
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; j
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; k
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ax_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setFromItem (Lnet/minecraft/world/item/ItemStack;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;)V a
	setLootTableSeed (J)V a
	setTheItem (Lnet/minecraft/world/item/ItemStack;)V b
	splitTheItem (I)Lnet/minecraft/world/item/ItemStack; c
	triggerEvent (II)Z a_
	wobble (Lnet/minecraft/world/level/block/entity/DecoratedPotBlockEntity$WobbleStyle;)V a
net/minecraft/world/level/block/entity/DecoratedPotBlockEntity$Decorations dhl$a
	EMPTY a
	back b
	front e
	left c
	right d
	back ()Lnet/minecraft/world/item/Item; b
	front ()Lnet/minecraft/world/item/Item; e
	itemFromTag (Lnet/minecraft/nbt/ListTag;I)Lnet/minecraft/world/item/Item; a
	left ()Lnet/minecraft/world/item/Item; c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/entity/DecoratedPotBlockEntity$Decorations; b
	right ()Lnet/minecraft/world/item/Item; d
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	sorted ()Ljava/util/stream/Stream; a
net/minecraft/world/level/block/entity/DecoratedPotBlockEntity$WobbleStyle dhl$b
	$VALUES d
	NEGATIVE b
	POSITIVE a
	duration c
	$values ()[Lnet/minecraft/world/level/block/entity/DecoratedPotBlockEntity$WobbleStyle; a
net/minecraft/world/level/block/entity/DecoratedPotPatterns dhm
	ANGLER y
	ANGLER_NAME d
	ARCHER z
	ARCHER_NAME e
	ARMS_UP A
	ARMS_UP_NAME f
	BASE a
	BASE_NAME b
	BLADE B
	BLADE_NAME g
	BREWER C
	BREWER_NAME h
	BRICK x
	BRICK_NAME c
	BURN D
	BURN_NAME i
	DANGER E
	DANGER_NAME j
	EXPLORER F
	EXPLORER_NAME k
	FRIEND G
	FRIEND_NAME l
	HEART H
	HEARTBREAK I
	HEARTBREAK_NAME n
	HEART_NAME m
	HOWL J
	HOWL_NAME o
	ITEM_TO_POT_TEXTURE S
	MINER K
	MINER_NAME p
	MOURNER L
	MOURNER_NAME q
	PLENTY M
	PLENTY_NAME r
	PRIZE N
	PRIZE_NAME s
	SHEAF O
	SHEAF_NAME t
	SHELTER P
	SHELTER_NAME u
	SKULL Q
	SKULL_NAME v
	SNORT R
	SNORT_NAME w
	bootstrap (Lnet/minecraft/core/Registry;)Ljava/lang/String; a
	create (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	getResourceKey (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/ResourceKey; a
	location (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/block/entity/DispenserBlockEntity dhn
	CONTAINER_SIZE e
	items f
	addItem (Lnet/minecraft/world/item/ItemStack;)I a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; l
	getItems ()Lnet/minecraft/core/NonNullList; k
	getRandomSlot (Lnet/minecraft/util/RandomSource;)I a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setItems (Lnet/minecraft/core/NonNullList;)V a
net/minecraft/world/level/block/entity/DropperBlockEntity dho
	getDefaultName ()Lnet/minecraft/network/chat/Component; l
net/minecraft/world/level/block/entity/EnchantmentTableBlockEntity dhp
	RANDOM k
	flip b
	flipA e
	flipT d
	name l
	oFlip c
	oOpen g
	oRot i
	open f
	rot h
	tRot j
	time a
	bookAnimationTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/EnchantmentTableBlockEntity;)V a
	getCustomName ()Lnet/minecraft/network/chat/Component; af
	getName ()Lnet/minecraft/network/chat/Component; ad
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/EnderChestBlockEntity dhq
	chestLidController a
	openersCounter b
	getOpenNess (F)F a
	lidAnimateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/EnderChestBlockEntity;)V a
	recheckOpen ()V c
	startOpen (Lnet/minecraft/world/entity/player/Player;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z c
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V b
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/FurnaceBlockEntity dhr
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getDefaultName ()Lnet/minecraft/network/chat/Component; l
net/minecraft/world/level/block/entity/HangingSignBlockEntity dhs
	MAX_TEXT_LINE_WIDTH a
	TEXT_LINE_HEIGHT b
	getMaxTextLineWidth ()I d
	getSignInteractionFailedSoundEvent ()Lnet/minecraft/sounds/SoundEvent; f
	getTextLineHeight ()I c
net/minecraft/world/level/block/entity/Hopper dht
	ABOVE z_
	INSIDE y_
	SUCK e
	getLevelX ()D I
	getLevelY ()D J
	getLevelZ ()D K
	getSuckShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; aj_
net/minecraft/world/level/block/entity/HopperBlockEntity dhu
	HOPPER_CONTAINER_SIZE g
	MOVE_ITEM_SPEED f
	cooldownTime i
	items h
	tickedGameTime j
	addItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/item/ItemStack; a
	addItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/entity/item/ItemEntity;)Z a
	canMergeItems (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	canPlaceItemInContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Z a
	canTakeItemFromContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Z a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	ejectItems (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/Container;)Z a
	entityInside (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/entity/HopperBlockEntity;)V a
	getAttachedContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/Container; b
	getContainerAt (Lnet/minecraft/world/level/Level;DDD)Lnet/minecraft/world/Container; a
	getContainerAt (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/Container; a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; l
	getItems ()Lnet/minecraft/core/NonNullList; k
	getItemsAtAndAbove (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/Hopper;)Ljava/util/List; b
	getLevelX ()D I
	getLevelY ()D J
	getLevelZ ()D K
	getSlots (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Ljava/util/stream/IntStream; a
	getSourceContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/Hopper;)Lnet/minecraft/world/Container; c
	inventoryFull ()Z m
	isEmptyContainer (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Z c
	isFullContainer (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Z b
	isOnCooldown ()Z w
	isOnCustomCooldown ()Z x
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	pushItemsTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/HopperBlockEntity;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setCooldown (I)V c
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setItems (Lnet/minecraft/core/NonNullList;)V a
	suckInItems (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/Hopper;)Z a
	tryMoveInItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Lnet/minecraft/world/item/ItemStack; b
	tryMoveItems (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/HopperBlockEntity;Ljava/util/function/BooleanSupplier;)Z a
	tryTakeInItemFromSlot (Lnet/minecraft/world/level/block/entity/Hopper;Lnet/minecraft/world/Container;ILnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/entity/JigsawBlockEntity dhv
	FINAL_STATE g
	JOINT c
	NAME f
	PLACEMENT_PRIORITY d
	POOL b
	SELECTION_PRIORITY e
	TARGET a
	finalState l
	joint k
	name h
	placementPriority m
	pool j
	selectionPriority n
	target i
	generate (Lnet/minecraft/server/level/ServerLevel;IZ)V a
	getFinalState ()Ljava/lang/String; g
	getJoint ()Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType; k
	getName ()Lnet/minecraft/resources/ResourceLocation; c
	getPlacementPriority ()I l
	getPool ()Lnet/minecraft/resources/ResourceKey; f
	getSelectionPriority ()I m
	getTarget ()Lnet/minecraft/resources/ResourceLocation; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; j
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; w
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ax_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setFinalState (Ljava/lang/String;)V a
	setJoint (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType;)V a
	setName (Lnet/minecraft/resources/ResourceLocation;)V a
	setPlacementPriority (I)V a
	setPool (Lnet/minecraft/resources/ResourceKey;)V a
	setSelectionPriority (I)V b
	setTarget (Lnet/minecraft/resources/ResourceLocation;)V b
net/minecraft/world/level/block/entity/JigsawBlockEntity$JointType dhv$a
	$VALUES d
	ALIGNED b
	ROLLABLE a
	name c
	$values ()[Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType; b
	byName (Ljava/lang/String;)Ljava/util/Optional; a
	getSerializedName ()Ljava/lang/String; c
	getTranslatedName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/world/level/block/entity/JukeboxBlockEntity dhw
	SONG_END_PADDING c
	isPlaying h
	item d
	recordStartedTick g
	tickCount f
	ticksSinceLastEvent e
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	canTakeItem (Lnet/minecraft/world/Container;ILnet/minecraft/world/item/ItemStack;)Z a
	getContainerBlockEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; y
	getMaxStackSize ()I ak_
	getTheItem ()Lnet/minecraft/world/item/ItemStack; x
	isRecordPlaying ()Z f
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	playRecordTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/JukeboxBlockEntity;)V a
	popOutRecord ()V k
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setHasRecordBlockState (Lnet/minecraft/world/entity/Entity;Z)V a
	setRecordWithoutPlaying (Lnet/minecraft/world/item/ItemStack;)V a
	setTheItem (Lnet/minecraft/world/item/ItemStack;)V b
	shouldRecordStopPlaying (Lnet/minecraft/world/item/RecordItem;)Z a
	shouldSendJukeboxPlayingEvent ()Z m
	spawnMusicParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	splitTheItem (I)Lnet/minecraft/world/item/ItemStack; c
	startPlaying ()V g
	stopPlaying ()V l
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
net/minecraft/world/level/block/entity/LecternBlockEntity dhx
	DATA_PAGE a
	NUM_DATA b
	NUM_SLOTS d
	SLOT_BOOK c
	book g
	bookAccess e
	dataAccess f
	page h
	pageCount i
	clearContent ()V a
	createCommandSourceStack (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/commands/CommandSourceStack; a
	getBook ()Lnet/minecraft/world/item/ItemStack; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; Q_
	getPage ()I g
	getRedstoneSignal ()I k
	hasBook ()Z f
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onBookItemRemove ()V l
	onlyOpCanSetNbt ()Z u
	resolveBook (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setBook (Lnet/minecraft/world/item/ItemStack;)V a
	setBook (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)V a
	setPage (I)V a
net/minecraft/world/level/block/entity/LidBlockEntity dhy
	getOpenNess (F)F a
net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity dhz
	lootTable m
	lootTableSeed n
	canOpen (Lnet/minecraft/world/entity/player/Player;)Z d
	clearContent ()V a
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getItems ()Lnet/minecraft/core/NonNullList; k
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; az_
	getLootTableSeed ()J aA_
	isEmpty ()Z ai_
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setItems (Lnet/minecraft/core/NonNullList;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;)V a
	setLootTableSeed (J)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/level/block/entity/SculkCatalystBlockEntity dia
	catalystListener a
	getListener ()Lnet/minecraft/world/level/block/entity/SculkCatalystBlockEntity$CatalystListener; c
	getListener ()Lnet/minecraft/world/level/gameevent/GameEventListener; d
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/SculkCatalystBlockEntity;)V a
net/minecraft/world/level/block/entity/SculkCatalystBlockEntity$CatalystListener dia$a
	PULSE_TICKS a
	blockState c
	positionSource d
	sculkSpreader b
	bloom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)V a
	getDeliveryMode ()Lnet/minecraft/world/level/gameevent/GameEventListener$DeliveryMode; c
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	getSculkSpreader ()Lnet/minecraft/world/level/block/SculkSpreader; d
	handleGameEvent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Lnet/minecraft/world/phys/Vec3;)Z a
	tryAwardItSpreadsAdvancement (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)V a
net/minecraft/world/level/block/entity/SculkSensorBlockEntity dib
	LOGGER b
	lastVibrationFrequency g
	vibrationData c
	vibrationListener d
	vibrationUser e
	createVibrationUser ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User; c
	getLastVibrationFrequency ()I f
	getListener ()Lnet/minecraft/world/level/gameevent/GameEventListener; d
	getListener ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Listener; g
	getVibrationData ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data; gg
	getVibrationUser ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User; gh
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setLastVibrationFrequency (I)V a
net/minecraft/world/level/block/entity/SculkSensorBlockEntity$VibrationUser dib$a
	LISTENER_RANGE b
	blockPos c
	positionSource a
	canReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)Z a
	canTriggerAvoidVibration ()Z d
	getListenerRadius ()I a
	getPositionSource ()Lnet/minecraft/world/level/gameevent/PositionSource; b
	onDataChanged ()V e
	onReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V a
	requiresAdjacentChunksToBeTicking ()Z f
net/minecraft/world/level/block/entity/SculkShriekerBlockEntity dic
	DARKNESS_RADIUS h
	LOGGER b
	SHRIEKING_TICKS i
	SOUND_BY_LEVEL j
	WARDEN_SPAWN_ATTEMPTS d
	WARDEN_SPAWN_RANGE_XZ e
	WARDEN_SPAWN_RANGE_Y g
	WARNING_SOUND_RADIUS c
	vibrationData m
	vibrationListener n
	vibrationUser l
	warningLevel k
	canRespond (Lnet/minecraft/server/level/ServerLevel;)Z b
	getListener ()Lnet/minecraft/world/level/gameevent/GameEventListener; d
	getListener ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Listener; c
	getVibrationData ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data; gg
	getVibrationUser ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User; gh
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	playWardenReplySound (Lnet/minecraft/world/level/Level;)V b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	shriek (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Entity;)V a
	tryGetPlayer (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/server/level/ServerPlayer; a
	tryRespond (Lnet/minecraft/server/level/ServerLevel;)V a
	tryShriek (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/server/level/ServerPlayer;)V a
	trySummonWarden (Lnet/minecraft/server/level/ServerLevel;)Z c
	tryToWarn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/server/level/ServerPlayer;)Z b
net/minecraft/world/level/block/entity/SculkShriekerBlockEntity$VibrationUser dic$a
	LISTENER_RADIUS b
	positionSource c
	canReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)Z a
	getListenableEvents ()Lnet/minecraft/tags/TagKey; c
	getListenerRadius ()I a
	getPositionSource ()Lnet/minecraft/world/level/gameevent/PositionSource; b
	onDataChanged ()V e
	onReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V a
	requiresAdjacentChunksToBeTicking ()Z f
net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity did
	COLUMNS e
	CONTAINER_SIZE g
	EVENT_SET_OPEN_COUNT h
	ITEMS_TAG l
	MAX_LID_HEIGHT j
	MAX_LID_ROTATION k
	OPENING_TICK_LENGTH i
	ROWS f
	SLOTS r
	animationStatus u
	color x
	itemStacks s
	openCount t
	progress v
	progressOld w
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	doNeighborUpdates (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V d
	getAnimationStatus ()Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus; m
	getBoundingBox (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/AABB; a
	getColor ()Lnet/minecraft/world/item/DyeColor; w
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; l
	getItems ()Lnet/minecraft/core/NonNullList; k
	getProgress (F)F a
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	isClosed ()Z x
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadFromTag (Lnet/minecraft/nbt/CompoundTag;)V d
	moveCollidedEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setItems (Lnet/minecraft/core/NonNullList;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V d_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity;)V a
	triggerEvent (II)Z a_
	updateAnimation (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus did$a
	$VALUES e
	CLOSED a
	CLOSING d
	OPENED c
	OPENING b
	$values ()[Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus; a
net/minecraft/world/level/block/entity/SignBlockEntity die
	LOGGER a
	MAX_TEXT_LINE_WIDTH b
	TEXT_LINE_HEIGHT c
	backText f
	frontText e
	isWaxed g
	playerWhoMayEdit d
	canExecuteClickCommands (ZLnet/minecraft/world/entity/player/Player;)Z a
	clearInvalidPlayerWhoMayEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;Lnet/minecraft/world/level/Level;Ljava/util/UUID;)V a
	createCommandSourceStack (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/commands/CommandSourceStack; a
	createDefaultSignText ()Lnet/minecraft/world/level/block/entity/SignText; g
	executeClickCommandsIfPresent (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Z a
	getBackText ()Lnet/minecraft/world/level/block/entity/SignText; l
	getFrontText ()Lnet/minecraft/world/level/block/entity/SignText; k
	getMaxTextLineWidth ()I d
	getPlayerWhoMayEdit ()Ljava/util/UUID; w
	getSignInteractionFailedSoundEvent ()Lnet/minecraft/sounds/SoundEvent; f
	getText (Z)Lnet/minecraft/world/level/block/entity/SignText; a
	getTextLineHeight ()I c
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; j
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; m
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ax_
	isFacingFrontText (Lnet/minecraft/world/entity/player/Player;)Z a
	isWaxed ()Z x
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadLine (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	loadLines (Lnet/minecraft/world/level/block/entity/SignText;)Lnet/minecraft/world/level/block/entity/SignText; a
	markUpdated ()V y
	onlyOpCanSetNbt ()Z u
	playerIsTooFarAwayToEdit (Ljava/util/UUID;)Z b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setAllowedPlayerEditor (Ljava/util/UUID;)V a
	setBackText (Lnet/minecraft/world/level/block/entity/SignText;)Z b
	setFrontText (Lnet/minecraft/world/level/block/entity/SignText;)Z c
	setMessages (Lnet/minecraft/world/entity/player/Player;Ljava/util/List;Lnet/minecraft/world/level/block/entity/SignText;)Lnet/minecraft/world/level/block/entity/SignText; a
	setText (Lnet/minecraft/world/level/block/entity/SignText;Z)Z a
	setWaxed (Z)Z b
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/SignBlockEntity;)V a
	updateSignText (Lnet/minecraft/world/entity/player/Player;ZLjava/util/List;)V a
	updateText (Ljava/util/function/UnaryOperator;Z)Z a
net/minecraft/world/level/block/entity/SignText dif
	DIRECT_CODEC a
	LINES b
	LINES_CODEC c
	color f
	filteredMessages e
	hasGlowingText g
	messages d
	renderMessagedFiltered i
	renderMessages h
	emptyMessages ()[Lnet/minecraft/network/chat/Component; c
	filteredMessages ()Ljava/util/Optional; d
	getColor ()Lnet/minecraft/world/item/DyeColor; b
	getMessage (IZ)Lnet/minecraft/network/chat/Component; a
	getMessages (Z)[Lnet/minecraft/network/chat/Component; b
	getRenderMessages (ZLjava/util/function/Function;)[Lnet/minecraft/util/FormattedCharSequence; a
	hasAnyClickCommands (Lnet/minecraft/world/entity/player/Player;)Z b
	hasGlowingText ()Z a
	hasMessage (Lnet/minecraft/world/entity/player/Player;)Z a
	load ([Lnet/minecraft/network/chat/Component;Ljava/util/Optional;Lnet/minecraft/world/item/DyeColor;Z)Lnet/minecraft/world/level/block/entity/SignText; a
	setColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/entity/SignText; a
	setHasGlowingText (Z)Lnet/minecraft/world/level/block/entity/SignText; a
	setMessage (ILnet/minecraft/network/chat/Component;)Lnet/minecraft/world/level/block/entity/SignText; a
	setMessage (ILnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/level/block/entity/SignText; a
net/minecraft/world/level/block/entity/SkullBlockEntity dig
	CHECKED_MAIN_THREAD_EXECUTOR e
	TAG_NOTE_BLOCK_SOUND b
	TAG_SKULL_OWNER a
	animationTickCount h
	isAnimating i
	mainThreadExecutor c
	noteBlockSound g
	owner f
	profileCache d
	animation (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/SkullBlockEntity;)V a
	clear ()V c
	fetchGameProfile (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
	getAnimation (F)F a
	getNoteBlockSound ()Lnet/minecraft/resources/ResourceLocation; f
	getOrResolveGameProfile (Lnet/minecraft/nbt/CompoundTag;)Lcom/mojang/authlib/GameProfile; d
	getOwnerProfile ()Lcom/mojang/authlib/GameProfile; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; j
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; g
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ax_
	hasTextures (Lcom/mojang/authlib/GameProfile;)Z b
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadProfile (Ljava/lang/String;Lnet/minecraft/server/Services;Ljava/util/function/BooleanSupplier;)Ljava/util/concurrent/CompletableFuture; a
	resolveGameProfile (Lnet/minecraft/nbt/CompoundTag;)V e
	resolveGameProfile (Lnet/minecraft/nbt/CompoundTag;Ljava/lang/String;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setOwner (Lcom/mojang/authlib/GameProfile;)V a
	setup (Lnet/minecraft/server/Services;Ljava/util/concurrent/Executor;)V a
	updateOwnerProfile ()V k
net/minecraft/world/level/block/entity/SmokerBlockEntity dih
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getDefaultName ()Lnet/minecraft/network/chat/Component; l
net/minecraft/world/level/block/entity/SpawnerBlockEntity dii
	spawner a
	clientTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/SpawnerBlockEntity;)V a
	getSpawner ()Lnet/minecraft/world/level/BaseSpawner; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; j
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; c
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ax_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onlyOpCanSetNbt ()Z u
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/SpawnerBlockEntity;)V b
	setEntityId (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/util/RandomSource;)V a
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/StructureBlockEntity dij
	AUTHOR_TAG c
	MAX_OFFSET_PER_AXIS a
	MAX_SIZE_PER_AXIS b
	SCAN_CORNER_BLOCKS_RANGE d
	author f
	ignoreEntities m
	integrity t
	metaData g
	mirror j
	mode l
	powered n
	rotation k
	seed u
	showAir r
	showBoundingBox s
	structureName e
	structurePos h
	structureSize i
	calculateEnclosingBoundingBox (Lnet/minecraft/core/BlockPos;Ljava/util/stream/Stream;)Ljava/util/Optional; a
	createRandom (J)Lnet/minecraft/util/RandomSource; b
	createdBy (Lnet/minecraft/world/entity/LivingEntity;)V a
	detectSize ()Z B
	getIntegrity ()F z
	getMetaData ()Ljava/lang/String; w
	getMirror ()Lnet/minecraft/world/level/block/Mirror; l
	getMode ()Lnet/minecraft/world/level/block/state/properties/StructureMode; x
	getRelatedCorners (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; m
	getSeed ()J A
	getShowAir ()Z G
	getShowBoundingBox ()Z H
	getStructureName ()Ljava/lang/String; d
	getStructurePos ()Lnet/minecraft/core/BlockPos; g
	getStructureSize ()Lnet/minecraft/core/Vec3i; k
	getStructureTemplate (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; j
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; c
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ax_
	hasStructureName ()Z f
	isIgnoreEntities ()Z y
	isPowered ()Z F
	isStructureLoadable ()Z E
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadStructureInfo (Lnet/minecraft/server/level/ServerLevel;)Z b
	loadStructureInfo (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate;)V a
	placeStructure (Lnet/minecraft/server/level/ServerLevel;)V c
	placeStructure (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate;)V a
	placeStructureIfSameSize (Lnet/minecraft/server/level/ServerLevel;)Z a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	saveStructure ()Z C
	saveStructure (Z)Z b
	setIgnoreEntities (Z)V a
	setIntegrity (F)V a
	setMetaData (Ljava/lang/String;)V b
	setMirror (Lnet/minecraft/world/level/block/Mirror;)V a
	setMode (Lnet/minecraft/world/level/block/state/properties/StructureMode;)V a
	setPowered (Z)V c
	setRotation (Lnet/minecraft/world/level/block/Rotation;)V a
	setSeed (J)V a
	setShowAir (Z)V d
	setShowBoundingBox (Z)V e
	setStructureName (Ljava/lang/String;)V a
	setStructureName (Lnet/minecraft/resources/ResourceLocation;)V a
	setStructurePos (Lnet/minecraft/core/BlockPos;)V a
	setStructureSize (Lnet/minecraft/core/Vec3i;)V a
	unloadStructure ()V D
	updateBlockState ()V I
	usedBy (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType dij$a
	$VALUES e
	LOAD_AREA c
	SAVE_AREA b
	SCAN_AREA d
	UPDATE_DATA a
	$values ()[Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType; a
net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity dik
	ATTENTION_INTERVAL d
	COOLDOWN_TIME c
	EVENT_COOLDOWN e
	GATEWAY_HEIGHT_ABOVE_SURFACE f
	LOGGER a
	SPAWN_TIME b
	age g
	exactTeleport j
	exitPortal i
	teleportCooldown h
	beamAnimationTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;)V a
	canEntityTeleport (Lnet/minecraft/world/entity/Entity;)Z a
	findExitPortalXZPosTentative (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; b
	findExitPosition (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findOrCreateValidTeleportPos (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findTallestBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	findValidSpawnInChunk (Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/core/BlockPos; a
	getChunk (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getCooldownPercent (F)F b
	getParticleAmount ()I g
	getSpawnPercent (F)F a
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; j
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; f
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ax_
	isChunkEmpty (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	isCoolingDown ()Z d
	isSpawning ()Z c
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setExitPosition (Lnet/minecraft/core/BlockPos;Z)V a
	shouldRenderFace (Lnet/minecraft/core/Direction;)Z a
	spawnGatewayPortal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration;)V a
	teleportEntity (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;)V a
	teleportTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;)V b
	triggerCooldown (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;)V c
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/TheEndPortalBlockEntity dil
	shouldRenderFace (Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/entity/TickingBlockEntity dim
	getPos ()Lnet/minecraft/core/BlockPos; c
	getType ()Ljava/lang/String; d
	isRemoved ()Z b
	tick ()V a
net/minecraft/world/level/block/entity/TrappedChestBlockEntity din
	signalOpenCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)V a
net/minecraft/world/level/block/entity/TrialSpawnerBlockEntity dio
	LOGGER a
	trialSpawner b
	getState ()Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState; f
	getTrialSpawner ()Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawner; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; j
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; c
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ax_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	markUpdated ()V g
	onlyOpCanSetNbt ()Z u
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setEntityId (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/util/RandomSource;)V a
	setState (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState;)V a
net/minecraft/world/level/block/entity/trialspawner/PlayerDetector diq
	PLAYERS a
	SHEEP b
net/minecraft/world/level/block/entity/trialspawner/TrialSpawner dir
	DETECT_PLAYER_SPAWN_BUFFER a
	MAX_MOB_TRACKING_DISTANCE b
	MAX_MOB_TRACKING_DISTANCE_SQR c
	SPAWNING_AMBIENT_SOUND_CHANCE d
	config e
	data f
	overridePeacefulAndMobSpawnRule i
	playerDetector h
	stateAccessor g
	addDetectPlayerParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;I)V a
	addEjectItemParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	addSpawnParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canSpawnInLevel (Lnet/minecraft/world/level/Level;)Z a
	codec ()Lcom/mojang/serialization/Codec; a
	ejectReward (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/resources/ResourceLocation;)V a
	getConfig ()Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawnerConfig; b
	getData ()Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawnerData; c
	getPlayerDetector ()Lnet/minecraft/world/level/block/entity/trialspawner/PlayerDetector; f
	getState ()Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState; d
	inLineOfSight (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	markUpdated ()V e
	overridePeacefulAndMobSpawnRule ()V g
	setPlayerDetector (Lnet/minecraft/world/level/block/entity/trialspawner/PlayerDetector;)V a
	setState (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState;)V a
	shouldMobBeUntracked (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/UUID;)Z a
	spawnMob (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; a
	tickClient (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	tickServer (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V b
net/minecraft/world/level/block/entity/trialspawner/TrialSpawner$StateAccessor dir$a
	getState ()Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState; f
	markUpdated ()V g
	setState (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState;)V a
net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerConfig dis
	DEFAULT a
	MAP_CODEC b
	lootTablesToEject l
	requiredPlayerRange c
	simultaneousMobs f
	simultaneousMobsAddedPerPlayer h
	spawnPotentialsDefinition k
	spawnRange d
	targetCooldownLength j
	ticksBetweenSpawn i
	totalMobs e
	totalMobsAddedPerPlayer g
	calculateTargetSimultaneousMobs (I)I b
	calculateTargetTotalMobs (I)I a
	lootTablesToEject ()Lnet/minecraft/util/random/SimpleWeightedRandomList; j
	requiredPlayerRange ()I a
	simultaneousMobs ()F d
	simultaneousMobsAddedPerPlayer ()F f
	spawnPotentialsDefinition ()Lnet/minecraft/util/random/SimpleWeightedRandomList; i
	spawnRange ()I b
	targetCooldownLength ()I h
	ticksBetweenSpawn ()I g
	totalMobs ()F c
	totalMobsAddedPerPlayer ()F e
net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerData dit
	MAP_CODEC b
	TAG_NEXT_MOB_SPAWNS_AT n
	TAG_SPAWN_DATA a
	cooldownEndsAt e
	currentMobs d
	detectedPlayers c
	displayEntity k
	ejectingLootTable i
	nextMobSpawnsAt f
	nextSpawnData h
	oSpin m
	spawnPotentials j
	spin l
	totalMobsSpawned g
	countAdditionalPlayers (Lnet/minecraft/core/BlockPos;)I a
	getOSpin ()D e
	getOrCreateDisplayEntity (Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawner;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState;)Lnet/minecraft/world/entity/Entity; a
	getOrCreateNextSpawnData (Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawner;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/SpawnData; a
	getSpin ()D d
	getUpdateTag (Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState;)Lnet/minecraft/nbt/CompoundTag; a
	hasFinishedSpawningAllMobs (Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawnerConfig;I)Z a
	hasMobToSpawn ()Z b
	haveAllCurrentMobsDied ()Z c
	isCooldownFinished (Lnet/minecraft/server/level/ServerLevel;)Z a
	isReadyToEjectItems (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawnerConfig;F)Z b
	isReadyToOpenShutter (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawnerConfig;F)Z a
	isReadyToSpawnNextMob (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawnerConfig;I)Z a
	reset ()V a
	setEntityId (Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawner;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/entity/EntityType;)V a
	setSpawnPotentialsFromConfig (Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawnerConfig;)V a
	tryDetectPlayers (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/trialspawner/PlayerDetector;I)V a
net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState diu
	$VALUES n
	ACTIVE c
	COOLDOWN f
	DELAY_BEFORE_EJECT_AFTER_KILLING_LAST_MOB g
	EJECTING_REWARD e
	INACTIVE a
	TIME_BETWEEN_EACH_EJECTION h
	WAITING_FOR_PLAYERS b
	WAITING_FOR_REWARD_EJECTION d
	isCapableOfSpawning m
	lightLevel j
	name i
	particleEmission l
	spinningMobSpeed k
	$values ()[Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState; f
	emitParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	getSerializedName ()Ljava/lang/String; c
	hasSpinningMob ()Z d
	isCapableOfSpawning ()Z e
	lightLevel ()I a
	spinningMobSpeed ()D b
	tickAndGetNext (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawner;Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState; a
net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState$LightLevel diu$a
	HALF_LIT b
	LIT c
	UNLIT a
net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState$ParticleEmission diu$b
	FLAMES_AND_SMOKE c
	NONE a
	SMALL_FLAMES b
	SMOKE_INSIDE_AND_TOP_FACE d
	addParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/Level;)V a
net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState$SpinningMob diu$c
	FAST c
	NONE a
	SLOW b
net/minecraft/world/level/block/grower/TreeGrower diw
	ACACIA h
	AZALEA e
	BIRCH f
	CHERRY i
	CODEC a
	DARK_OAK j
	GROWERS k
	JUNGLE g
	MANGROVE d
	OAK b
	SPRUCE c
	flowers r
	megaTree n
	name l
	secondaryChance m
	secondaryFlowers s
	secondaryMegaTree o
	secondaryTree q
	tree p
	getConfiguredFeature (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; a
	getConfiguredMegaFeature (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/ResourceKey; a
	growTree (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
	hasFlowers (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isTwoByTwoSapling (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;II)Z a
net/minecraft/world/level/block/piston/MovingPistonBlock diz
	CODEC a
	FACING b
	TYPE c
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	destroy (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	getBlockEntity (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity; a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootParams$Builder;)Ljava/util/List; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	newMovingBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;ZZ)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/piston/PistonBaseBlock dja
	CODEC b
	DOWN_AABB m
	EAST_AABB h
	EXTENDED c
	NORTH_AABB k
	PLATFORM_THICKNESS g
	SOUTH_AABB j
	TRIGGER_CONTRACT e
	TRIGGER_DROP f
	TRIGGER_EXTEND d
	UP_AABB l
	WEST_AABB i
	isSticky n
	checkIfExtend (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getNeighborSignal (Lnet/minecraft/world/level/SignalGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isPushable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;ZLnet/minecraft/core/Direction;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	moveBlocks (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/piston/PistonHeadBlock djb
	AABB_OFFSET l
	CODEC b
	DOWN_AABB k
	DOWN_ARM_AABB F
	EAST_AABB f
	EAST_ARM_AABB I
	EDGE_MAX n
	EDGE_MIN m
	NORTH_AABB i
	NORTH_ARM_AABB H
	PLATFORM e
	SHAPES_LONG R
	SHAPES_SHORT Q
	SHORT d
	SHORT_DOWN_ARM_AABB L
	SHORT_EAST_ARM_AABB O
	SHORT_NORTH_ARM_AABB N
	SHORT_SOUTH_ARM_AABB M
	SHORT_UP_ARM_AABB K
	SHORT_WEST_ARM_AABB P
	SOUTH_AABB h
	SOUTH_ARM_AABB G
	TYPE c
	UP_AABB j
	UP_ARM_AABB o
	WEST_AABB g
	WEST_ARM_AABB J
	calculateShape (Lnet/minecraft/core/Direction;Z)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isFittingBase (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	makeShapes (Z)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/piston/PistonMath djc
	getMovementArea (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/core/Direction;D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/level/block/piston/PistonMovingBlockEntity djd
	NOCLIP h
	PUSH_OFFSET c
	TICKS_TO_EXTEND b
	TICK_MOVEMENT a
	deathTicks l
	direction e
	extending f
	isSourcePiston g
	lastTicked k
	movedState d
	progress i
	progressO j
	finalTick ()V l
	fixEntityWithinPistonBase (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;D)V a
	getCollisionRelatedBlockState ()Lnet/minecraft/world/level/block/state/BlockState; w
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getDirection ()Lnet/minecraft/core/Direction; d
	getExtendedProgress (F)F e
	getLastTicked ()J m
	getMovedState ()Lnet/minecraft/world/level/block/state/BlockState; k
	getMovement (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/core/Direction;Lnet/minecraft/world/phys/AABB;)D a
	getMovementDirection ()Lnet/minecraft/core/Direction; g
	getProgress (F)F a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ax_
	getXOff (F)F b
	getYOff (F)F c
	getZOff (F)F d
	isExtending ()Z c
	isSourcePiston ()Z f
	isStickyForEntities ()Z x
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	matchesStickyCritera (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)Z a
	moveByPositionAndProgress (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;)Lnet/minecraft/world/phys/AABB; a
	moveCollidedEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;FLnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;)V a
	moveEntityByPiston (Lnet/minecraft/core/Direction;Lnet/minecraft/world/entity/Entity;DLnet/minecraft/core/Direction;)V a
	moveStuckEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;FLnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;)V b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setLevel (Lnet/minecraft/world/level/Level;)V a
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;)V a
net/minecraft/world/level/block/piston/PistonStructureResolver dje
	MAX_PUSH_DEPTH a
	extending d
	level b
	pistonDirection i
	pistonPos c
	pushDirection f
	startPos e
	toDestroy h
	toPush g
	addBlockLine (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	addBranchingBlocks (Lnet/minecraft/core/BlockPos;)Z a
	canStickToEachOther (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	getPushDirection ()Lnet/minecraft/core/Direction; b
	getToDestroy ()Ljava/util/List; d
	getToPush ()Ljava/util/List; c
	isSticky (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	reorderListAtCollision (II)V a
	resolve ()Z a
net/minecraft/world/level/block/state/BlockBehaviour djg
	UPDATE_SHAPE_ORDER aF
	drops aQ
	dynamicShape aN
	explosionResistance aH
	friction aK
	hasCollision aG
	isRandomlyTicking aI
	jumpFactor aM
	properties aP
	requiredFeatures aO
	soundType aJ
	speedFactor aL
	asBlock ()Lnet/minecraft/world/level/block/Block; q
	asItem ()Lnet/minecraft/world/item/Item; k
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	codec ()Lcom/mojang/serialization/MapCodec; a
	defaultDestroyTime ()F x
	defaultMapColor ()Lnet/minecraft/world/level/material/MapColor; w
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootParams$Builder;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getLightBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I g
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; v
	getMaxHorizontalOffset ()F at_
	getMaxVerticalOffset ()F av_
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	isOcclusionShapeFullBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onExplosionHit (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;Ljava/util/function/BiConsumer;)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	properties ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; t
	propertiesCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; u
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	requiredFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; m
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	simpleCodec (Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec; b
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase djg$a
	cache a
	canOcclude p
	destroySpeed n
	emissiveRendering u
	fluidState z
	hasPostProcess t
	ignitedByLava i
	instrument x
	isAir h
	isRandomlyTicking A
	isRedstoneConductor q
	isSuffocating r
	isViewBlocking s
	legacySolid k
	lightEmission b
	liquid j
	mapColor m
	offsetFunction v
	pushReaction l
	replaceable y
	requiresCorrectToolForDrops o
	spawnTerrainParticles w
	useShapeForLightOcclusion g
	asState ()Lnet/minecraft/world/level/block/state/BlockState; x
	attack (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	blocksMotion ()Z d
	calculateSolid ()Z D
	canBeReplaced ()Z r
	canBeReplaced (Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canBeReplaced (Lnet/minecraft/world/level/material/Fluid;)Z a
	canOcclude ()Z p
	canSurvive (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	emissiveRendering (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z e
	entityCanStandOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	entityCanStandOnFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;)Z a
	entityInside (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlock ()Lnet/minecraft/world/level/block/Block; b
	getBlockHolder ()Lnet/minecraft/core/Holder; c
	getBlockSupportShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; l
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; k
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getDestroyProgress (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getDestroySpeed (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F h
	getDirectSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I c
	getDrops (Lnet/minecraft/world/level/storage/loot/LootParams$Builder;)Ljava/util/List; a
	getFaceOcclusionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFluidState ()Lnet/minecraft/world/level/material/FluidState; u
	getInteractionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLightBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I b
	getLightEmission ()I h
	getMapColor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/MapColor; d
	getMenuProvider (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getOffset (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; n
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; o
	getRenderShape ()Lnet/minecraft/world/level/block/RenderShape; l
	getSeed (Lnet/minecraft/core/BlockPos;)J a
	getShadeBrightness (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F f
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; j
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSoundType ()Lnet/minecraft/world/level/block/SoundType; w
	getTags ()Ljava/util/stream/Stream; s
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getVisualShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	hasAnalogOutputSignal ()Z n
	hasBlockEntity ()Z t
	hasLargeCollisionShape ()Z f
	hasOffsetFunction ()Z q
	hasPostProcess (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z q
	ignitedByLava ()Z j
	initCache ()V a
	instrument ()Lnet/minecraft/world/level/block/state/properties/NoteBlockInstrument; A
	is (Lnet/minecraft/core/Holder;)Z a
	is (Lnet/minecraft/core/HolderSet;)Z a
	is (Lnet/minecraft/resources/ResourceKey;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	is (Lnet/minecraft/tags/TagKey;Ljava/util/function/Predicate;)Z a
	is (Lnet/minecraft/world/level/block/Block;)Z a
	isAir ()Z i
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z r
	isFaceSturdy (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z d
	isFaceSturdy (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/SupportType;)Z a
	isPathfindable (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking ()Z v
	isRedstoneConductor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z g
	isSignalSource ()Z m
	isSolid ()Z e
	isSolidRender (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z i
	isSuffocating (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z o
	isValidSpawn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Z a
	isViewBlocking (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z p
	liquid ()Z k
	mirror (Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onExplosionHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;Ljava/util/function/BiConsumer;)V a
	onPlace (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	propagatesSkylightDown (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	randomTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	requiresCorrectToolForDrops ()Z y
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldSpawnTerrainParticles ()Z z
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnAfterBreak (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	triggerEvent (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V b
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V b
	updateNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	updateNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateShape (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion ()Z g
net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase$Cache djg$a$a
	DIRECTIONS e
	SUPPORT_TYPE_COUNT f
	collisionShape b
	faceSturdy j
	isCollisionShapeFullBlock d
	largeCollisionShape c
	lightBlock h
	occlusionShapes i
	propagatesSkylightDown g
	solidRender a
	getFaceSupportIndex (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/SupportType;)I b
	isFaceSturdy (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/SupportType;)Z a
net/minecraft/world/level/block/state/BlockBehaviour$OffsetFunction djg$b
net/minecraft/world/level/block/state/BlockBehaviour$OffsetType djg$c
	$VALUES d
	NONE a
	XYZ c
	XZ b
	$values ()[Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; a
net/minecraft/world/level/block/state/BlockBehaviour$Properties djg$d
	CODEC a
	canOcclude n
	destroyTime g
	drops m
	dynamicShape D
	emissiveRendering C
	explosionResistance f
	forceSolidOff r
	forceSolidOn s
	friction j
	hasCollision c
	hasPostProcess B
	ignitedByLava p
	instrument v
	isAir o
	isRandomlyTicking i
	isRedstoneConductor y
	isSuffocating z
	isValidSpawn x
	isViewBlocking A
	jumpFactor l
	lightEmission e
	liquid q
	mapColor b
	offsetFunction F
	pushReaction t
	replaceable w
	requiredFeatures E
	requiresCorrectToolForDrops h
	soundType d
	spawnTerrainParticles u
	speedFactor k
	air ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; l
	destroyTime (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; e
	dropsLike (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	dynamicShape ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; f
	emissiveRendering (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; e
	explosionResistance (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; f
	forceSolidOff ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; k
	forceSolidOn ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; j
	friction (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	hasPostProcess (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	ignitedByLava ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; h
	instabreak ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	instrument (Lnet/minecraft/world/level/block/state/properties/NoteBlockInstrument;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	isRedstoneConductor (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	isSuffocating (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	isValidSpawn (Lnet/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	isViewBlocking (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	jumpFactor (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	lightLevel (Ljava/util/function/ToIntFunction;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	liquid ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; i
	mapColor (Ljava/util/function/Function;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	mapColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	mapColor (Lnet/minecraft/world/level/material/MapColor;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	noCollission ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	noLootTable ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; g
	noOcclusion ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	noTerrainParticles ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; n
	of ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	ofFullCopy (Lnet/minecraft/world/level/block/state/BlockBehaviour;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	ofLegacyCopy (Lnet/minecraft/world/level/block/state/BlockBehaviour;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	offsetType (Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	pushReaction (Lnet/minecraft/world/level/material/PushReaction;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	randomTicks ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; e
	replaceable ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; o
	requiredFeatures ([Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	requiresCorrectToolForDrops ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; m
	sound (Lnet/minecraft/world/level/block/SoundType;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	speedFactor (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	strength (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	strength (FF)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
net/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate djg$e
net/minecraft/world/level/block/state/BlockBehaviour$StatePredicate djg$f
net/minecraft/world/level/block/state/BlockState djh
	CODEC b
	asState ()Lnet/minecraft/world/level/block/state/BlockState; x
net/minecraft/world/level/block/state/StateDefinition dji
	NAME_PATTERN a
	owner b
	propertiesByName c
	states d
	any ()Lnet/minecraft/world/level/block/state/StateHolder; b
	appendPropertyCodec (Lcom/mojang/serialization/MapCodec;Ljava/util/function/Supplier;Ljava/lang/String;Lnet/minecraft/world/level/block/state/properties/Property;)Lcom/mojang/serialization/MapCodec; a
	getOwner ()Ljava/lang/Object; c
	getPossibleStates ()Lcom/google/common/collect/ImmutableList; a
	getProperties ()Ljava/util/Collection; d
	getProperty (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/Property; a
net/minecraft/world/level/block/state/StateDefinition$Builder dji$a
	owner a
	properties b
	add ([Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/world/level/block/state/StateDefinition$Builder; a
	create (Ljava/util/function/Function;Lnet/minecraft/world/level/block/state/StateDefinition$Factory;)Lnet/minecraft/world/level/block/state/StateDefinition; a
	validateProperty (Lnet/minecraft/world/level/block/state/properties/Property;)V a
net/minecraft/world/level/block/state/StateDefinition$Factory dji$b
net/minecraft/world/level/block/state/StateHolder djj
	NAME_TAG c
	PROPERTIES_TAG d
	PROPERTY_ENTRY_TO_STRING_FUNCTION a
	neighbours g
	owner e
	propertiesCodec f
	values b
	codec (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	cycle (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/Object; a
	findNextInCollection (Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object; a
	getOptionalValue (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/util/Optional; d
	getProperties ()Ljava/util/Collection; B
	getValue (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/Comparable; c
	getValues ()Lcom/google/common/collect/ImmutableMap; C
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;)Z b
	makeNeighbourValues (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/util/Map; c
	populateNeighbours (Ljava/util/Map;)V a
	setValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/Object; a
	trySetValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/Object; b
net/minecraft/world/level/block/state/pattern/BlockInWorld djl
	cachedEntity f
	entity e
	level a
	loadChunks c
	pos b
	state d
	getEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; b
	getLevel ()Lnet/minecraft/world/level/LevelReader; c
	getPos ()Lnet/minecraft/core/BlockPos; d
	getState ()Lnet/minecraft/world/level/block/state/BlockState; a
	hasState (Ljava/util/function/Predicate;)Ljava/util/function/Predicate; a
net/minecraft/world/level/block/state/pattern/BlockPattern djm
	depth b
	height c
	pattern a
	width d
	createLevelCache (Lnet/minecraft/world/level/LevelReader;Z)Lcom/google/common/cache/LoadingCache; a
	find (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	getDepth ()I a
	getHeight ()I b
	getPattern ()[[[Ljava/util/function/Predicate; d
	getWidth ()I c
	matches (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lcom/google/common/cache/LoadingCache;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	matches (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	translateAndRotate (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;III)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/block/state/pattern/BlockPattern$BlockCacheLoader djm$a
	level a
	loadChunks b
	load (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/pattern/BlockInWorld; a
net/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch djm$b
	cache d
	depth g
	forwards b
	frontTopLeft a
	height f
	up c
	width e
	getBlock (III)Lnet/minecraft/world/level/block/state/pattern/BlockInWorld; a
	getDepth ()I f
	getForwards ()Lnet/minecraft/core/Direction; b
	getFrontTopLeft ()Lnet/minecraft/core/BlockPos; a
	getHeight ()I e
	getUp ()Lnet/minecraft/core/Direction; c
	getWidth ()I d
net/minecraft/world/level/block/state/pattern/BlockPatternBuilder djn
	COMMA_JOINED a
	height d
	lookup c
	pattern b
	width e
	aisle ([Ljava/lang/String;)Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
	build ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; b
	createPattern ()[[[Ljava/util/function/Predicate; c
	ensureAllCharactersMatched ()V d
	start ()Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
	where (CLjava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
net/minecraft/world/level/block/state/predicate/BlockPredicate djp
	block a
	forBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/predicate/BlockPredicate; a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/state/predicate/BlockStatePredicate djq
	ANY a
	definition b
	properties c
	applies (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;)Z a
	forBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/predicate/BlockStatePredicate; a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	where (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/predicate/BlockStatePredicate; a
net/minecraft/world/level/block/state/properties/AttachFace djs
	$VALUES e
	CEILING c
	FLOOR a
	WALL b
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/AttachFace; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/BambooLeaves djt
	$VALUES e
	LARGE c
	NONE a
	SMALL b
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/BambooLeaves; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/BedPart dju
	$VALUES d
	FOOT b
	HEAD a
	name c
	$values ()[Lnet/minecraft/world/level/block/state/properties/BedPart; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/BellAttachType djv
	$VALUES f
	CEILING b
	DOUBLE_WALL d
	FLOOR a
	SINGLE_WALL c
	name e
	$values ()[Lnet/minecraft/world/level/block/state/properties/BellAttachType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/BlockSetType djw
	ACACIA j
	BAMBOO q
	BIRCH i
	CHERRY k
	CODEC a
	COPPER c
	CRIMSON n
	DARK_OAK m
	GOLD d
	IRON b
	JUNGLE l
	MANGROVE p
	OAK g
	POLISHED_BLACKSTONE f
	SPRUCE h
	STONE e
	TYPES F
	WARPED o
	buttonClickOff D
	buttonClickOn E
	canButtonBeActivatedByArrows u
	canOpenByHand s
	canOpenByWindCharge t
	doorClose x
	doorOpen y
	name r
	pressurePlateClickOff B
	pressurePlateClickOn C
	pressurePlateSensitivity v
	soundType w
	trapdoorClose z
	trapdoorOpen A
	buttonClickOff ()Lnet/minecraft/sounds/SoundEvent; n
	buttonClickOn ()Lnet/minecraft/sounds/SoundEvent; o
	canButtonBeActivatedByArrows ()Z e
	canOpenByHand ()Z c
	canOpenByWindCharge ()Z d
	doorClose ()Lnet/minecraft/sounds/SoundEvent; h
	doorOpen ()Lnet/minecraft/sounds/SoundEvent; i
	name ()Ljava/lang/String; b
	pressurePlateClickOff ()Lnet/minecraft/sounds/SoundEvent; l
	pressurePlateClickOn ()Lnet/minecraft/sounds/SoundEvent; m
	pressurePlateSensitivity ()Lnet/minecraft/world/level/block/state/properties/BlockSetType$PressurePlateSensitivity; f
	register (Lnet/minecraft/world/level/block/state/properties/BlockSetType;)Lnet/minecraft/world/level/block/state/properties/BlockSetType; a
	soundType ()Lnet/minecraft/world/level/block/SoundType; g
	trapdoorClose ()Lnet/minecraft/sounds/SoundEvent; j
	trapdoorOpen ()Lnet/minecraft/sounds/SoundEvent; k
	values ()Ljava/util/stream/Stream; a
net/minecraft/world/level/block/state/properties/BlockSetType$PressurePlateSensitivity djw$a
	$VALUES c
	EVERYTHING a
	MOBS b
	$values ()[Lnet/minecraft/world/level/block/state/properties/BlockSetType$PressurePlateSensitivity; a
net/minecraft/world/level/block/state/properties/BlockStateProperties djx
	AGE_1 aq
	AGE_15 aw
	AGE_2 ar
	AGE_25 ax
	AGE_3 as
	AGE_4 at
	AGE_5 au
	AGE_7 av
	ATTACHED a
	ATTACH_FACE U
	AXIS I
	BAMBOO_LEAVES bk
	BED_PART bb
	BELL_ATTACHMENT V
	BERRIES D
	BITES ay
	BLOOM E
	BOTTOM b
	CANDLES az
	CAN_SUMMON G
	CHEST_TYPE bc
	CHISELED_BOOKSHELF_SLOT_0_OCCUPIED bp
	CHISELED_BOOKSHELF_SLOT_1_OCCUPIED bq
	CHISELED_BOOKSHELF_SLOT_2_OCCUPIED br
	CHISELED_BOOKSHELF_SLOT_3_OCCUPIED bs
	CHISELED_BOOKSHELF_SLOT_4_OCCUPIED bt
	CHISELED_BOOKSHELF_SLOT_5_OCCUPIED bu
	CONDITIONAL c
	CRACKED bw
	CRAFTING bx
	DELAY aA
	DISARMED d
	DISTANCE aC
	DOOR_HINGE be
	DOUBLE_BLOCK_HALF ae
	DOWN K
	DRAG e
	DRIPSTONE_THICKNESS bn
	DUSTED bv
	EAST M
	EAST_REDSTONE aa
	EAST_WALL W
	EGGS aD
	ENABLED f
	EXTENDED g
	EYE h
	FACING P
	FACING_HOPPER Q
	FALLING i
	FLOWER_AMOUNT S
	HALF af
	HANGING j
	HAS_BOOK o
	HAS_BOTTLE_0 k
	HAS_BOTTLE_1 l
	HAS_BOTTLE_2 m
	HAS_RECORD n
	HATCH aE
	HORIZONTAL_AXIS H
	HORIZONTAL_FACING R
	INVERTED p
	IN_WALL q
	LAYERS aF
	LEVEL aP
	LEVEL_CAULDRON aK
	LEVEL_COMPOSTER aL
	LEVEL_FLOWING aM
	LEVEL_HONEY aN
	LIT r
	LOCKED s
	MAX_AGE_1 ai
	MAX_AGE_15 ao
	MAX_AGE_2 aj
	MAX_AGE_25 ap
	MAX_AGE_3 ak
	MAX_AGE_4 al
	MAX_AGE_5 am
	MAX_AGE_7 an
	MAX_DISTANCE aB
	MAX_LEVEL_15 aO
	MAX_LEVEL_3 aI
	MAX_LEVEL_8 aJ
	MAX_RESPAWN_ANCHOR_CHARGES aY
	MIN_LEVEL aG
	MIN_LEVEL_CAULDRON aH
	MIN_RESPAWN_ANCHOR_CHARGES aX
	MODE_COMPARATOR bd
	MOISTURE aQ
	NORTH L
	NORTH_REDSTONE ab
	NORTH_WALL X
	NOTE aR
	NOTEBLOCK_INSTRUMENT bf
	OCCUPIED t
	OPEN u
	ORIENTATION T
	PERSISTENT v
	PICKLES aS
	PISTON_TYPE bg
	POWER aT
	POWERED w
	RAIL_SHAPE ag
	RAIL_SHAPE_STRAIGHT ah
	RESPAWN_ANCHOR_CHARGES aZ
	ROTATION_16 ba
	SCULK_SENSOR_PHASE bo
	SHORT x
	SHRIEKING F
	SIGNAL_FIRE y
	SLAB_TYPE bh
	SNOWY z
	SOUTH N
	SOUTH_REDSTONE ac
	SOUTH_WALL Y
	STABILITY_DISTANCE aW
	STABILITY_MAX_DISTANCE aV
	STAGE aU
	STAIRS_SHAPE bi
	STRUCTUREBLOCK_MODE bj
	TILT bl
	TRIAL_SPAWNER_STATE by
	TRIGGERED A
	UNSTABLE B
	UP J
	VERTICAL_DIRECTION bm
	WATERLOGGED C
	WEST O
	WEST_REDSTONE ad
	WEST_WALL Z
net/minecraft/world/level/block/state/properties/BooleanProperty djy
	values a
	create (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/BooleanProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Boolean;)Ljava/lang/String; a
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/ChestType djz
	$VALUES e
	LEFT b
	RIGHT c
	SINGLE a
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/ChestType; b
	getOpposite ()Lnet/minecraft/world/level/block/state/properties/ChestType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/ComparatorMode dka
	$VALUES d
	COMPARE a
	SUBTRACT b
	name c
	$values ()[Lnet/minecraft/world/level/block/state/properties/ComparatorMode; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/DirectionProperty dkb
	create (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;Ljava/util/Collection;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;[Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
net/minecraft/world/level/block/state/properties/DoorHingeSide dkc
	$VALUES c
	LEFT a
	RIGHT b
	$values ()[Lnet/minecraft/world/level/block/state/properties/DoorHingeSide; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/DoubleBlockHalf dkd
	$VALUES d
	LOWER b
	UPPER a
	directionToOther c
	$values ()[Lnet/minecraft/world/level/block/state/properties/DoubleBlockHalf; d
	getDirectionToOther ()Lnet/minecraft/core/Direction; a
	getOtherHalf ()Lnet/minecraft/world/level/block/state/properties/DoubleBlockHalf; b
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/DripstoneThickness dke
	$VALUES g
	BASE e
	FRUSTUM c
	MIDDLE d
	TIP b
	TIP_MERGE a
	name f
	$values ()[Lnet/minecraft/world/level/block/state/properties/DripstoneThickness; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/EnumProperty dkf
	names b
	values a
	create (Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getName (Ljava/lang/Enum;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/Half dkg
	$VALUES d
	BOTTOM b
	TOP a
	name c
	$values ()[Lnet/minecraft/world/level/block/state/properties/Half; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/IntegerProperty dkh
	max c
	min b
	values a
	create (Ljava/lang/String;II)Lnet/minecraft/world/level/block/state/properties/IntegerProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getName (Ljava/lang/Integer;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/NoteBlockInstrument dki
	$VALUES A
	BANJO o
	BASEDRUM b
	BASS e
	BELL g
	BIT n
	CHIME i
	COW_BELL l
	CREEPER s
	CUSTOM_HEAD w
	DIDGERIDOO m
	DRAGON t
	FLUTE f
	GUITAR h
	HARP a
	HAT d
	IRON_XYLOPHONE k
	PIGLIN v
	PLING p
	SKELETON r
	SNARE c
	WITHER_SKELETON u
	XYLOPHONE j
	ZOMBIE q
	name x
	soundEvent y
	type z
	$values ()[Lnet/minecraft/world/level/block/state/properties/NoteBlockInstrument; f
	getSerializedName ()Ljava/lang/String; c
	getSoundEvent ()Lnet/minecraft/core/Holder; a
	hasCustomSound ()Z d
	isTunable ()Z b
	worksAboveNoteBlock ()Z e
net/minecraft/world/level/block/state/properties/NoteBlockInstrument$Type dki$a
	$VALUES d
	BASE_BLOCK a
	CUSTOM c
	MOB_HEAD b
	$values ()[Lnet/minecraft/world/level/block/state/properties/NoteBlockInstrument$Type; a
net/minecraft/world/level/block/state/properties/PistonType dkj
	$VALUES d
	DEFAULT a
	STICKY b
	name c
	$values ()[Lnet/minecraft/world/level/block/state/properties/PistonType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/Property dkk
	clazz a
	codec d
	hashCode c
	name b
	valueCodec e
	codec ()Lcom/mojang/serialization/Codec; d
	generateHashCode ()I b
	getAllValues ()Ljava/util/stream/Stream; c
	getName ()Ljava/lang/String; f
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
	getValueClass ()Ljava/lang/Class; g
	parseValue (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/block/state/StateHolder;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	value (Ljava/lang/Comparable;)Lnet/minecraft/world/level/block/state/properties/Property$Value; b
	value (Lnet/minecraft/world/level/block/state/StateHolder;)Lnet/minecraft/world/level/block/state/properties/Property$Value; a
	valueCodec ()Lcom/mojang/serialization/Codec; e
net/minecraft/world/level/block/state/properties/Property$Value dkk$a
	property a
	value b
	property ()Lnet/minecraft/world/level/block/state/properties/Property; a
	value ()Ljava/lang/Comparable; b
net/minecraft/world/level/block/state/properties/RailShape dkl
	$VALUES l
	ASCENDING_EAST c
	ASCENDING_NORTH e
	ASCENDING_SOUTH f
	ASCENDING_WEST d
	EAST_WEST b
	NORTH_EAST j
	NORTH_SOUTH a
	NORTH_WEST i
	SOUTH_EAST g
	SOUTH_WEST h
	name k
	$values ()[Lnet/minecraft/world/level/block/state/properties/RailShape; d
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
	isAscending ()Z b
net/minecraft/world/level/block/state/properties/RedstoneSide dkm
	$VALUES e
	NONE c
	SIDE b
	UP a
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/RedstoneSide; b
	getSerializedName ()Ljava/lang/String; c
	isConnected ()Z a
net/minecraft/world/level/block/state/properties/RotationSegment dkn
	EAST_90 d
	MAX_SEGMENT_INDEX b
	NORTH_0 c
	SEGMENTED_ANGLE16 a
	SOUTH_180 e
	WEST_270 f
	convertToDegrees (I)F b
	convertToDirection (I)Ljava/util/Optional; a
	convertToSegment (F)I a
	convertToSegment (Lnet/minecraft/core/Direction;)I a
	getMaxSegmentIndex ()I a
net/minecraft/world/level/block/state/properties/SculkSensorPhase dko
	$VALUES e
	ACTIVE b
	COOLDOWN c
	INACTIVE a
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/SculkSensorPhase; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/SlabType dkp
	$VALUES e
	BOTTOM b
	DOUBLE c
	TOP a
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/SlabType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/StairsShape dkq
	$VALUES g
	INNER_LEFT b
	INNER_RIGHT c
	OUTER_LEFT d
	OUTER_RIGHT e
	STRAIGHT a
	name f
	$values ()[Lnet/minecraft/world/level/block/state/properties/StairsShape; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/StructureMode dkr
	$VALUES g
	CORNER c
	DATA d
	LOAD b
	SAVE a
	displayName f
	name e
	$values ()[Lnet/minecraft/world/level/block/state/properties/StructureMode; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/Tilt dks
	$VALUES g
	FULL d
	NONE a
	PARTIAL c
	UNSTABLE b
	causesVibration f
	name e
	$values ()[Lnet/minecraft/world/level/block/state/properties/Tilt; b
	causesVibration ()Z a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/WallSide dkt
	$VALUES e
	LOW b
	NONE a
	TALL c
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/WallSide; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/WoodType dku
	ACACIA e
	BAMBOO l
	BIRCH d
	CHERRY f
	CODEC a
	CRIMSON i
	DARK_OAK h
	JUNGLE g
	MANGROVE k
	OAK b
	SPRUCE c
	TYPES s
	WARPED j
	fenceGateClose q
	fenceGateOpen r
	hangingSignSoundType p
	name m
	setType n
	soundType o
	fenceGateClose ()Lnet/minecraft/sounds/SoundEvent; f
	fenceGateOpen ()Lnet/minecraft/sounds/SoundEvent; g
	hangingSignSoundType ()Lnet/minecraft/world/level/block/SoundType; e
	name ()Ljava/lang/String; b
	register (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/world/level/block/state/properties/WoodType; a
	setType ()Lnet/minecraft/world/level/block/state/properties/BlockSetType; c
	soundType ()Lnet/minecraft/world/level/block/SoundType; d
	values ()Ljava/util/stream/Stream; a
net/minecraft/world/level/border/BorderChangeListener dkw
	onBorderCenterSet (Lnet/minecraft/world/level/border/WorldBorder;DD)V a
	onBorderSetDamagePerBlock (Lnet/minecraft/world/level/border/WorldBorder;D)V b
	onBorderSetDamageSafeZOne (Lnet/minecraft/world/level/border/WorldBorder;D)V c
	onBorderSetWarningBlocks (Lnet/minecraft/world/level/border/WorldBorder;I)V b
	onBorderSetWarningTime (Lnet/minecraft/world/level/border/WorldBorder;I)V a
	onBorderSizeLerping (Lnet/minecraft/world/level/border/WorldBorder;DDJ)V a
	onBorderSizeSet (Lnet/minecraft/world/level/border/WorldBorder;D)V a
net/minecraft/world/level/border/BorderChangeListener$DelegateBorderChangeListener dkw$a
	worldBorder a
	onBorderCenterSet (Lnet/minecraft/world/level/border/WorldBorder;DD)V a
	onBorderSetDamagePerBlock (Lnet/minecraft/world/level/border/WorldBorder;D)V b
	onBorderSetDamageSafeZOne (Lnet/minecraft/world/level/border/WorldBorder;D)V c
	onBorderSetWarningBlocks (Lnet/minecraft/world/level/border/WorldBorder;I)V b
	onBorderSetWarningTime (Lnet/minecraft/world/level/border/WorldBorder;I)V a
	onBorderSizeLerping (Lnet/minecraft/world/level/border/WorldBorder;DDJ)V a
	onBorderSizeSet (Lnet/minecraft/world/level/border/WorldBorder;D)V a
net/minecraft/world/level/border/BorderStatus dkx
	$VALUES e
	GROWING a
	SHRINKING b
	STATIONARY c
	color d
	$values ()[Lnet/minecraft/world/level/border/BorderStatus; b
	getColor ()I a
net/minecraft/world/level/border/WorldBorder dky
	DEFAULT_SETTINGS e
	MAX_CENTER_COORDINATE d
	MAX_SIZE c
	absoluteMaxSize k
	centerX i
	centerZ j
	damagePerBlock b
	damageSafeZone f
	extent l
	listeners a
	warningBlocks h
	warningTime g
	addListener (Lnet/minecraft/world/level/border/BorderChangeListener;)V a
	applySettings (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	clampToBounds (DDD)Lnet/minecraft/core/BlockPos; b
	createSettings ()Lnet/minecraft/world/level/border/WorldBorder$Settings; t
	getAbsoluteMaxSize ()I m
	getCenterX ()D a
	getCenterZ ()D b
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDamagePerBlock ()D o
	getDamageSafeZone ()D n
	getDistanceToBorder (DD)D b
	getDistanceToBorder (Lnet/minecraft/world/entity/Entity;)D a
	getLerpRemainingTime ()J j
	getLerpSpeed ()D p
	getLerpTarget ()D k
	getListeners ()Ljava/util/List; l
	getMaxX ()D g
	getMaxZ ()D h
	getMinX ()D e
	getMinZ ()D f
	getSize ()D i
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; d
	getWarningBlocks ()I r
	getWarningTime ()I q
	isInsideCloseToBorder (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Z a
	isWithinBounds (DD)Z a
	isWithinBounds (DDD)Z a
	isWithinBounds (Lnet/minecraft/core/BlockPos;)Z a
	isWithinBounds (Lnet/minecraft/world/level/ChunkPos;)Z a
	isWithinBounds (Lnet/minecraft/world/phys/AABB;)Z a
	lerpSizeBetween (DDJ)V a
	removeListener (Lnet/minecraft/world/level/border/BorderChangeListener;)V b
	setAbsoluteMaxSize (I)V a
	setCenter (DD)V c
	setDamagePerBlock (D)V c
	setDamageSafeZone (D)V b
	setSize (D)V a
	setWarningBlocks (I)V c
	setWarningTime (I)V b
	tick ()V s
net/minecraft/world/level/border/WorldBorder$BorderExtent dky$a
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
net/minecraft/world/level/border/WorldBorder$MovingBorderExtent dky$b
	from b
	lerpBegin e
	lerpDuration f
	lerpEnd d
	to c
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
net/minecraft/world/level/border/WorldBorder$Settings dky$c
	centerX a
	centerZ b
	damagePerBlock c
	safeZone d
	size g
	sizeLerpTarget i
	sizeLerpTime h
	warningBlocks e
	warningTime f
	getCenterX ()D a
	getCenterZ ()D b
	getDamagePerBlock ()D c
	getSafeZone ()D d
	getSize ()D g
	getSizeLerpTarget ()D i
	getSizeLerpTime ()J h
	getWarningBlocks ()I e
	getWarningTime ()I f
	read (Lcom/mojang/serialization/DynamicLike;Lnet/minecraft/world/level/border/WorldBorder$Settings;)Lnet/minecraft/world/level/border/WorldBorder$Settings; a
	write (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/border/WorldBorder$StaticBorderExtent dky$d
	maxX e
	maxZ f
	minX c
	minZ d
	shape g
	size b
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
	updateBox ()V n
net/minecraft/world/level/chunk/BlockColumn dla
	getBlock (I)Lnet/minecraft/world/level/block/state/BlockState; a
	setBlock (ILnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/chunk/BulkSectionAccess dlb
	acquiredSections b
	lastSection c
	lastSectionKey d
	level a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	getSection (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/LevelChunkSection; a
net/minecraft/world/level/chunk/CarvingMask dlc
	additionalMask c
	mask b
	minY a
	get (III)Z b
	getIndex (III)I c
	set (III)V a
	setAdditionalMask (Lnet/minecraft/world/level/chunk/CarvingMask$Mask;)V a
	stream (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/stream/Stream; a
	toArray ()[J a
net/minecraft/world/level/chunk/CarvingMask$Mask dlc$a
net/minecraft/world/level/chunk/ChunkAccess dld
	EMPTY_REFERENCE_SET o
	LOGGER n
	NO_FILLED_SECTION a
	blendingData g
	blockEntities k
	carverBiomeSettings r
	chunkPos d
	heightmaps h
	inhabitedTime q
	isLightCorrect p
	levelHeightAccessor l
	noiseChunk e
	pendingBlockEntities j
	postProcessing b
	sections m
	skyLightSources i
	structureStarts s
	structuresRefences t
	unsaved c
	upgradeData f
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addPackedPostProcess (SI)V a
	addReferenceForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;J)V a
	carverBiome (Ljava/util/function/Supplier;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings; a
	fillBiomesFromNoise (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/biome/Climate$Sampler;)V a
	findBlockLightSources (Ljava/util/function/BiConsumer;)V a
	findBlocks (Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V a
	getAllReferences ()Ljava/util/Map; h
	getAllStarts ()Ljava/util/Map; g
	getBelowZeroRetrogen ()Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen; x
	getBlendingData ()Lnet/minecraft/world/level/levelgen/blending/BlendingData; t
	getBlockEntitiesPos ()Ljava/util/Set; c
	getBlockEntityNbt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; f
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; g
	getBlockTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; o
	getFluidTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; p
	getHeight ()I K_
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getHeightAccessorForGeneration ()Lnet/minecraft/world/level/LevelHeightAccessor; z
	getHeightmaps ()Ljava/util/Collection; e
	getHighestFilledSectionIndex ()I a
	getHighestGeneratedStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; k
	getHighestSectionPosition ()I b
	getInhabitedTime ()J u
	getListenerRegistry (I)Lnet/minecraft/world/level/gameevent/GameEventListenerRegistry; a
	getMinBuildHeight ()I J_
	getOrCreateHeightmapUnprimed (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap; a
	getOrCreateNoiseChunk (Ljava/util/function/Function;)Lnet/minecraft/world/level/levelgen/NoiseChunk; a
	getOrCreateOffsetList ([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList; a
	getPos ()Lnet/minecraft/world/level/ChunkPos; f
	getPostProcessing ()[Lit/unimi/dsi/fastutil/shorts/ShortList; n
	getReferencesForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getSection (I)Lnet/minecraft/world/level/chunk/LevelChunkSection; b
	getSections ()[Lnet/minecraft/world/level/chunk/LevelChunkSection; d
	getSkyLightSources ()Lnet/minecraft/world/level/lighting/ChunkSkyLightSources; B
	getStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; j
	getTicksForSerialization ()Lnet/minecraft/world/level/chunk/ChunkAccess$TicksToSave; q
	getUpgradeData ()Lnet/minecraft/world/level/chunk/UpgradeData; r
	hasAnyStructureReferences ()Z w
	hasPrimedHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Z b
	incrementInhabitedTime (J)V a
	initializeLightSources ()V A
	isLightCorrect ()Z v
	isOldNoiseGeneration ()Z s
	isUnsaved ()Z i
	isUpgrading ()Z y
	isYSpaceEmpty (II)Z a
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	replaceMissingSections (Lnet/minecraft/core/Registry;[Lnet/minecraft/world/level/chunk/LevelChunkSection;)V a
	setAllReferences (Ljava/util/Map;)V b
	setAllStarts (Ljava/util/Map;)V a
	setBlendingData (Lnet/minecraft/world/level/levelgen/blending/BlendingData;)V a
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockEntityNbt (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	setInhabitedTime (J)V b
	setLightCorrect (Z)V b
	setStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setUnsaved (Z)V a
net/minecraft/world/level/chunk/ChunkAccess$TicksToSave dld$a
	blocks a
	fluids b
	blocks ()Lnet/minecraft/world/ticks/SerializableTickContainer; a
	fluids ()Lnet/minecraft/world/ticks/SerializableTickContainer; b
net/minecraft/world/level/chunk/ChunkGenerator dle
	CODEC a
	biomeSource b
	featuresPerStep c
	generationSettingsGetter d
	addDebugScreenInfo (Ljava/util/List;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/core/BlockPos;)V a
	applyBiomeDecoration (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/StructureManager;)V a
	applyCarvers (Lnet/minecraft/server/level/WorldGenRegion;JLnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	buildSurface (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	createBiomes (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	createReferences (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	createState (Lnet/minecraft/core/HolderLookup;Lnet/minecraft/world/level/levelgen/RandomState;J)Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; a
	createStructures (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;)V a
	fetchReferences (Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/structure/Structure;)I a
	fillFromNoise (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	findNearestMapStructure (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/HolderSet;Lnet/minecraft/core/BlockPos;IZ)Lcom/mojang/datafixers/util/Pair; a
	getBaseColumn (IILnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/NoiseColumn; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I a
	getBiomeGenerationSettings (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings; a
	getBiomeSource ()Lnet/minecraft/world/level/biome/BiomeSource; c
	getFirstFreeHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I b
	getFirstOccupiedHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I c
	getGenDepth ()I d
	getMinY ()I f
	getMobsAt (Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/util/random/WeightedRandomList; a
	getNearestGeneratedStructure (Ljava/util/Set;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement;)Lcom/mojang/datafixers/util/Pair; a
	getNearestGeneratedStructure (Ljava/util/Set;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/StructureManager;IIIZJLnet/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement;)Lcom/mojang/datafixers/util/Pair; a
	getSeaLevel ()I e
	getSpawnHeight (Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	getStructureGeneratingAt (Ljava/util/Set;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/StructureManager;ZLnet/minecraft/world/level/levelgen/structure/placement/StructurePlacement;Lnet/minecraft/world/level/ChunkPos;)Lcom/mojang/datafixers/util/Pair; a
	getTypeNameForDataFixer ()Ljava/util/Optional; b
	getWritableArea (Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
	tryAddReference (Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)Z a
	tryGenerateStructure (Lnet/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;JLnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/SectionPos;)Z a
net/minecraft/world/level/chunk/ChunkGeneratorStructureState dlf
	LOGGER a
	biomeSource c
	concentricRingsSeed e
	hasGeneratedPositions h
	levelSeed d
	placementsForStructure f
	possibleStructureSets i
	randomState b
	ringPositions g
	createForFlat (Lnet/minecraft/world/level/levelgen/RandomState;JLnet/minecraft/world/level/biome/BiomeSource;Ljava/util/stream/Stream;)Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; a
	createForNormal (Lnet/minecraft/world/level/levelgen/RandomState;JLnet/minecraft/world/level/biome/BiomeSource;Lnet/minecraft/core/HolderLookup;)Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; a
	ensureStructuresGenerated ()V b
	generatePositions ()V e
	generateRingPositions (Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement;)Ljava/util/concurrent/CompletableFuture; a
	getLevelSeed ()J d
	getPlacementsForStructure (Lnet/minecraft/core/Holder;)Ljava/util/List; a
	getRingPositionsFor (Lnet/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement;)Ljava/util/List; a
	hasBiomesForStructureSet (Lnet/minecraft/world/level/levelgen/structure/StructureSet;Lnet/minecraft/world/level/biome/BiomeSource;)Z a
	hasStructureChunkInRange (Lnet/minecraft/core/Holder;III)Z a
	possibleStructureSets ()Ljava/util/List; a
	randomState ()Lnet/minecraft/world/level/levelgen/RandomState; c
net/minecraft/world/level/chunk/ChunkGenerators dlg
	bootstrap (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/chunk/ChunkSource dlh
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IIZ)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getChunkForLighting (II)Lnet/minecraft/world/level/chunk/LightChunk; c
	getChunkNow (II)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; p
	getLoadedChunksCount ()I j
	hasChunk (II)Z b
	setSpawnSettings (ZZ)V a
	tick (Ljava/util/function/BooleanSupplier;Z)V a
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
net/minecraft/world/level/chunk/ChunkStatus dli
	BIOMES f
	CARVERS i
	EMPTY c
	FEATURES j
	FULL n
	INITIALIZE_LIGHT k
	LIGHT l
	MAX_STRUCTURE_DISTANCE a
	NOISE g
	PASSTHROUGH_LOAD_TASK p
	POST_FEATURES b
	PRE_FEATURES o
	RANGE_BY_STATUS r
	SPAWN m
	STATUS_BY_RANGE q
	STRUCTURE_REFERENCES e
	STRUCTURE_STARTS d
	SURFACE h
	chunkType y
	generationTask u
	hasLoadDependencies x
	heightmapsAfter z
	index s
	loadingTask v
	parent t
	range w
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	generate (Ljava/util/concurrent/Executor;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/server/level/ThreadedLevelLightEngine;Ljava/util/function/Function;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; a
	getChunkType ()Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType; g
	getDistance (Lnet/minecraft/world/level/chunk/ChunkStatus;)I a
	getIndex ()I c
	getParent ()Lnet/minecraft/world/level/chunk/ChunkStatus; d
	getRange ()I e
	getStatusAroundFullChunk (I)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	getStatusList ()Ljava/util/List; a
	hasLoadDependencies ()Z f
	heightmapsAfter ()Ljava/util/EnumSet; h
	initializeLight (Lnet/minecraft/server/level/ThreadedLevelLightEngine;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	isLighted (Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	isOrAfter (Lnet/minecraft/world/level/chunk/ChunkStatus;)Z b
	lightChunk (Lnet/minecraft/server/level/ThreadedLevelLightEngine;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; b
	load (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/server/level/ThreadedLevelLightEngine;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	maxDistance ()I b
	register (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$GenerationTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;IZLjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$GenerationTask;Lnet/minecraft/world/level/chunk/ChunkStatus$LoadingTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	registerSimple (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
net/minecraft/world/level/chunk/ChunkStatus$ChunkType dli$a
	$VALUES c
	LEVELCHUNK b
	PROTOCHUNK a
	$values ()[Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType; a
net/minecraft/world/level/chunk/ChunkStatus$GenerationTask dli$b
net/minecraft/world/level/chunk/ChunkStatus$LoadingTask dli$c
net/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask dli$d
net/minecraft/world/level/chunk/DataLayer dlj
	LAYER_COUNT a
	LAYER_SIZE b
	NIBBLE_SIZE e
	SIZE c
	data d
	defaultValue f
	copy ()Lnet/minecraft/world/level/chunk/DataLayer; b
	fill (I)V a
	get (I)I d
	get (III)I a
	getByteIndex (I)I f
	getData ()[B a
	getIndex (III)I b
	getNibbleIndex (I)I e
	isDefinitelyFilledWith (I)Z c
	isDefinitelyHomogenous ()Z c
	isEmpty ()Z d
	layerToString (I)Ljava/lang/String; b
	packFilled (I)B g
	set (II)V a
	set (IIII)V a
net/minecraft/world/level/chunk/EmptyLevelChunk dlk
	biome n
	addAndRegisterBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V b
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFullStatus ()Lnet/minecraft/server/level/FullChunkStatus; D
	getLightEmission (Lnet/minecraft/core/BlockPos;)I i
	isEmpty ()Z C
	isYSpaceEmpty (II)Z a
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/chunk/GlobalPalette dll
	registry a
	copy ()Lnet/minecraft/world/level/chunk/Palette; c
	create (ILnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PaletteResize;Ljava/util/List;)Lnet/minecraft/world/level/chunk/Palette; a
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/HashMapPalette dlm
	bits d
	registry a
	resizeHandler c
	values b
	copy ()Lnet/minecraft/world/level/chunk/Palette; c
	create (ILnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PaletteResize;Ljava/util/List;)Lnet/minecraft/world/level/chunk/Palette; a
	getEntries ()Ljava/util/List; d
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/ImposterProtoChunk dln
	allowWrites o
	wrapped n
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addReferenceForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;J)V a
	fillBiomesFromNoise (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/biome/Climate$Sampler;)V a
	findBlocks (Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V a
	fixType (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; c
	getAllReferences ()Ljava/util/Map; h
	getAllStarts ()Ljava/util/Map; g
	getBlendingData ()Lnet/minecraft/world/level/levelgen/blending/BlendingData; t
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntityNbt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; f
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; g
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; o
	getCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/chunk/CarvingMask; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFluidTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; p
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getMaxLightLevel ()I O
	getOrCreateCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/chunk/CarvingMask; b
	getOrCreateHeightmapUnprimed (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap; a
	getPos ()Lnet/minecraft/world/level/ChunkPos; f
	getReferencesForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getSection (I)Lnet/minecraft/world/level/chunk/LevelChunkSection; b
	getSections ()[Lnet/minecraft/world/level/chunk/LevelChunkSection; d
	getSkyLightSources ()Lnet/minecraft/world/level/lighting/ChunkSkyLightSources; B
	getStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; j
	getTicksForSerialization ()Lnet/minecraft/world/level/chunk/ChunkAccess$TicksToSave; q
	getWrapped ()Lnet/minecraft/world/level/chunk/LevelChunk; C
	initializeLightSources ()V A
	isLightCorrect ()Z v
	isUnsaved ()Z i
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setAllReferences (Ljava/util/Map;)V b
	setAllStarts (Ljava/util/Map;)V a
	setBlendingData (Lnet/minecraft/world/level/levelgen/blending/BlendingData;)V a
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockEntityNbt (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	setLightCorrect (Z)V b
	setStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	setUnsaved (Z)V a
net/minecraft/world/level/chunk/LevelChunk dlo
	LOGGER n
	NULL_TICKER o
	blockTicks v
	fluidTicks w
	fullStatus s
	gameEventListenerRegistrySections u
	level r
	loaded q
	postLoad t
	tickersInLevel p
	addAndRegisterBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V b
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addGameEventListener (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/server/level/ServerLevel;)V b
	clearAllBlockEntities ()V I
	createBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; h
	createTicker (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/level/block/entity/BlockEntityTicker;)Lnet/minecraft/world/level/block/entity/TickingBlockEntity; a
	getBlockEntities ()Ljava/util/Map; G
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; g
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; o
	getFluidState (III)Lnet/minecraft/world/level/material/FluidState; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFluidTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; p
	getFullStatus ()Lnet/minecraft/server/level/FullChunkStatus; D
	getLevel ()Lnet/minecraft/world/level/Level; F
	getListenerRegistry (I)Lnet/minecraft/world/level/gameevent/GameEventListenerRegistry; a
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; j
	getTicksForSerialization ()Lnet/minecraft/world/level/chunk/ChunkAccess$TicksToSave; q
	isEmpty ()Z C
	isInLevel ()Z K
	isTicking (Lnet/minecraft/core/BlockPos;)Z k
	postProcessGeneration ()V H
	promotePendingBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	registerAllBlockEntitiesAfterLevelLoad ()V J
	registerTickContainerInLevel (Lnet/minecraft/server/level/ServerLevel;)V a
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	removeBlockEntityTicker (Lnet/minecraft/core/BlockPos;)V l
	removeGameEventListener (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/server/level/ServerLevel;)V a
	removeGameEventListenerRegistry (I)V c
	replaceBiomes (Lnet/minecraft/network/FriendlyByteBuf;)V a
	replaceWithPacketData (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Consumer;)V a
	runPostLoad ()V E
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setFullStatus (Ljava/util/function/Supplier;)V b
	setLoaded (Z)V c
	unpackTicks (J)V c
	unregisterTickContainerFromLevel (Lnet/minecraft/server/level/ServerLevel;)V b
	updateBlockEntityTicker (Lnet/minecraft/world/level/block/entity/BlockEntity;)V c
net/minecraft/world/level/chunk/LevelChunk$BoundTickingBlockEntity dlo$a
	blockEntity b
	loggedInvalidBlockState d
	ticker c
	getPos ()Lnet/minecraft/core/BlockPos; c
	getType ()Ljava/lang/String; d
	isRemoved ()Z b
	tick ()V a
net/minecraft/world/level/chunk/LevelChunk$EntityCreationType dlo$b
	$VALUES d
	CHECK c
	IMMEDIATE a
	QUEUED b
	$values ()[Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType; a
net/minecraft/world/level/chunk/LevelChunk$PostLoadProcessor dlo$c
net/minecraft/world/level/chunk/LevelChunk$RebindableTickingBlockEntityWrapper dlo$d
	ticker b
	getPos ()Lnet/minecraft/core/BlockPos; c
	getType ()Ljava/lang/String; d
	isRemoved ()Z b
	rebind (Lnet/minecraft/world/level/block/entity/TickingBlockEntity;)V a
	tick ()V a
net/minecraft/world/level/chunk/LevelChunkSection dlp
	BIOME_CONTAINER_BITS d
	SECTION_HEIGHT b
	SECTION_SIZE c
	SECTION_WIDTH a
	biomes i
	nonEmptyBlockCount e
	states h
	tickingBlockCount f
	tickingFluidCount g
	acquire ()V a
	fillBiomesFromNoise (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/biome/Climate$Sampler;III)V a
	getBiomes ()Lnet/minecraft/world/level/chunk/PalettedContainerRO; i
	getBlockState (III)Lnet/minecraft/world/level/block/state/BlockState; a
	getFluidState (III)Lnet/minecraft/world/level/material/FluidState; b
	getNoiseBiome (III)Lnet/minecraft/core/Holder; c
	getSerializedSize ()I j
	getStates ()Lnet/minecraft/world/level/chunk/PalettedContainer; h
	hasOnlyAir ()Z c
	isRandomlyTicking ()Z d
	isRandomlyTickingBlocks ()Z e
	isRandomlyTickingFluids ()Z f
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	readBiomes (Lnet/minecraft/network/FriendlyByteBuf;)V b
	recalcBlockCounts ()V g
	release ()V b
	setBlockState (IIILnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	setBlockState (IIILnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V c
net/minecraft/world/level/chunk/LightChunk dlq
	findBlockLightSources (Ljava/util/function/BiConsumer;)V a
	getSkyLightSources ()Lnet/minecraft/world/level/lighting/ChunkSkyLightSources; B
net/minecraft/world/level/chunk/LightChunkGetter dlr
	getChunkForLighting (II)Lnet/minecraft/world/level/chunk/LightChunk; c
	getLevel ()Lnet/minecraft/world/level/BlockGetter; q
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
net/minecraft/world/level/chunk/LinearPalette dls
	bits d
	registry a
	resizeHandler c
	size e
	values b
	copy ()Lnet/minecraft/world/level/chunk/Palette; c
	create (ILnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PaletteResize;Ljava/util/List;)Lnet/minecraft/world/level/chunk/Palette; a
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/MissingPaletteEntryException dlt
net/minecraft/world/level/chunk/Palette dlu
	copy ()Lnet/minecraft/world/level/chunk/Palette; c
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/Palette$Factory dlu$a
net/minecraft/world/level/chunk/PaletteResize dlv
net/minecraft/world/level/chunk/PalettedContainer dlw
	MIN_PALETTE_BITS a
	data d
	dummyPaletteResize b
	registry c
	strategy e
	threadingDetector f
	acquire ()V a
	codec (Lnet/minecraft/core/IdMap;Lcom/mojang/serialization/Codec;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;Ljava/lang/Object;Lnet/minecraft/world/level/chunk/PalettedContainerRO$Unpacker;)Lcom/mojang/serialization/Codec; a
	codecRO (Lnet/minecraft/core/IdMap;Lcom/mojang/serialization/Codec;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;Ljava/lang/Object;)Lcom/mojang/serialization/Codec; b
	codecRW (Lnet/minecraft/core/IdMap;Lcom/mojang/serialization/Codec;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;Ljava/lang/Object;)Lcom/mojang/serialization/Codec; a
	copy ()Lnet/minecraft/world/level/chunk/PalettedContainer; d
	count (Lnet/minecraft/world/level/chunk/PalettedContainer$CountConsumer;)V a
	createOrReuseData (Lnet/minecraft/world/level/chunk/PalettedContainer$Data;I)Lnet/minecraft/world/level/chunk/PalettedContainer$Data; a
	get (I)Ljava/lang/Object; a
	get (III)Ljava/lang/Object; a
	getAll (Ljava/util/function/Consumer;)V a
	getAndSet (IIILjava/lang/Object;)Ljava/lang/Object; a
	getAndSet (ILjava/lang/Object;)Ljava/lang/Object; a
	getAndSetUnchecked (IIILjava/lang/Object;)Ljava/lang/Object; b
	getSerializedSize ()I c
	maybeHas (Ljava/util/function/Predicate;)Z a
	pack (Lnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;)Lnet/minecraft/world/level/chunk/PalettedContainerRO$PackedData; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	recreate ()Lnet/minecraft/world/level/chunk/PalettedContainer; e
	release ()V b
	set (IIILjava/lang/Object;)V c
	set (ILjava/lang/Object;)V b
	swapPalette ([ILjava/util/function/IntUnaryOperator;)V a
	unpack (Lnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;Lnet/minecraft/world/level/chunk/PalettedContainerRO$PackedData;)Lcom/mojang/serialization/DataResult; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/PalettedContainer$Configuration dlw$a
	bits b
	factory a
	bits ()I b
	createData (Lnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PaletteResize;I)Lnet/minecraft/world/level/chunk/PalettedContainer$Data; a
	factory ()Lnet/minecraft/world/level/chunk/Palette$Factory; a
net/minecraft/world/level/chunk/PalettedContainer$CountConsumer dlw$b
net/minecraft/world/level/chunk/PalettedContainer$Data dlw$c
	configuration a
	palette c
	storage b
	configuration ()Lnet/minecraft/world/level/chunk/PalettedContainer$Configuration; c
	copy ()Lnet/minecraft/world/level/chunk/PalettedContainer$Data; b
	copyFrom (Lnet/minecraft/world/level/chunk/Palette;Lnet/minecraft/util/BitStorage;)V a
	getSerializedSize ()I a
	palette ()Lnet/minecraft/world/level/chunk/Palette; e
	storage ()Lnet/minecraft/util/BitStorage; d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/chunk/PalettedContainer$Strategy dlw$d
	GLOBAL_PALETTE_FACTORY f
	HASHMAP_PALETTE_FACTORY c
	LINEAR_PALETTE_FACTORY b
	SECTION_BIOMES e
	SECTION_STATES d
	SINGLE_VALUE_PALETTE_FACTORY a
	sizeBits g
	calculateBitsForSerialization (Lnet/minecraft/core/IdMap;I)I b
	getConfiguration (Lnet/minecraft/core/IdMap;I)Lnet/minecraft/world/level/chunk/PalettedContainer$Configuration; a
	getIndex (III)I a
	size ()I a
net/minecraft/world/level/chunk/PalettedContainerRO dlx
	count (Lnet/minecraft/world/level/chunk/PalettedContainer$CountConsumer;)V a
	get (III)Ljava/lang/Object; a
	getAll (Ljava/util/function/Consumer;)V a
	getSerializedSize ()I c
	maybeHas (Ljava/util/function/Predicate;)Z a
	pack (Lnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;)Lnet/minecraft/world/level/chunk/PalettedContainerRO$PackedData; a
	recreate ()Lnet/minecraft/world/level/chunk/PalettedContainer; e
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/PalettedContainerRO$PackedData dlx$a
	paletteEntries a
	storage b
	paletteEntries ()Ljava/util/List; a
	storage ()Ljava/util/Optional; b
net/minecraft/world/level/chunk/PalettedContainerRO$Unpacker dlx$b
net/minecraft/world/level/chunk/ProtoChunk dly
	belowZeroRetrogen r
	blockTicks s
	carvingMasks q
	entities p
	fluidTicks t
	lightEngine n
	status o
	addEntity (Lnet/minecraft/nbt/CompoundTag;)V b
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addPackedPostProcess (SI)V a
	getBelowZeroRetrogen ()Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen; x
	getBlockEntities ()Ljava/util/Map; D
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; g
	getBlockEntityNbts ()Ljava/util/Map; F
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; o
	getCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/chunk/CarvingMask; a
	getEntities ()Ljava/util/List; E
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFluidTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; p
	getHeightAccessorForGeneration ()Lnet/minecraft/world/level/LevelHeightAccessor; z
	getOrCreateCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/chunk/CarvingMask; b
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; j
	getTicksForSerialization ()Lnet/minecraft/world/level/chunk/ChunkAccess$TicksToSave; q
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	packOffsetCoordinates (Lnet/minecraft/core/BlockPos;)S h
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setBelowZeroRetrogen (Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen;)V a
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;Lnet/minecraft/world/level/chunk/CarvingMask;)V a
	setLightEngine (Lnet/minecraft/world/level/lighting/LevelLightEngine;)V a
	setStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	unpackBlockTicks ()Lnet/minecraft/world/ticks/LevelChunkTicks; G
	unpackFluidTicks ()Lnet/minecraft/world/ticks/LevelChunkTicks; H
	unpackOffsetCoordinates (SILnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/core/BlockPos; a
	unpackTicks (Lnet/minecraft/world/ticks/ProtoChunkTicks;)Lnet/minecraft/world/ticks/LevelChunkTicks; a
net/minecraft/world/level/chunk/SingleValuePalette dlz
	registry a
	resizeHandler c
	value b
	copy ()Lnet/minecraft/world/level/chunk/Palette; c
	create (ILnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PaletteResize;Ljava/util/List;)Lnet/minecraft/world/level/chunk/Palette; a
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/StructureAccess dma
	addReferenceForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;J)V a
	getAllReferences ()Ljava/util/Map; h
	getReferencesForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	setAllReferences (Ljava/util/Map;)V b
	setStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
net/minecraft/world/level/chunk/UpgradeData dmb
	CHUNKY_FIXERS j
	DIRECTIONS d
	EMPTY a
	LOGGER b
	MAP i
	TAG_INDICES c
	index h
	neighborBlockTicks f
	neighborFluidTicks g
	sides e
	isEmpty ()Z a
	loadTicks (Lnet/minecraft/nbt/CompoundTag;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/List;)V a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	upgrade (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	upgradeInside (Lnet/minecraft/world/level/chunk/LevelChunk;)V b
	upgradeSides (Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/core/Direction8;)V a
	write ()Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/world/level/chunk/UpgradeData$BlockFixer dmb$a
	processChunk (Lnet/minecraft/world/level/LevelAccessor;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/chunk/UpgradeData$BlockFixers dmb$b
	$VALUES g
	BLACKLIST a
	CHEST c
	DEFAULT b
	DIRECTIONS f
	LEAVES d
	STEM_BLOCK e
	$values ()[Lnet/minecraft/world/level/chunk/UpgradeData$BlockFixers; a
net/minecraft/world/level/chunk/storage/ChunkScanAccess dmd
	scanChunk (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/StreamTagVisitor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/world/level/chunk/storage/ChunkSerializer dme
	BLOCK_LIGHT_TAG f
	BLOCK_STATE_CODEC h
	BLOCK_TICKS_TAG k
	FLUID_TICKS_TAG l
	HEIGHTMAPS_TAG c
	IS_LIGHT_ON_TAG d
	LOGGER i
	SECTIONS_TAG e
	SKY_LIGHT_TAG g
	TAG_UPGRADE_DATA j
	X_POS_TAG a
	Z_POS_TAG b
	getChunkTypeFromTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType; a
	getListOfCompoundsOrNull (Lnet/minecraft/nbt/CompoundTag;Ljava/lang/String;)Lnet/minecraft/nbt/ListTag; a
	logErrors (Lnet/minecraft/world/level/ChunkPos;ILjava/lang/String;)V a
	makeBiomeCodec (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec; a
	packOffsets ([Lit/unimi/dsi/fastutil/shorts/ShortList;)Lnet/minecraft/nbt/ListTag; a
	packStructureData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/world/level/ChunkPos;Ljava/util/Map;Ljava/util/Map;)Lnet/minecraft/nbt/CompoundTag; a
	postLoadChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/LevelChunk$PostLoadProcessor; a
	read (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/ai/village/poi/PoiManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/ProtoChunk; a
	saveTicks (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/chunk/ChunkAccess$TicksToSave;)V a
	unpackStructureReferences (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Map; a
	unpackStructureStart (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;J)Ljava/util/Map; a
	write (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/chunk/storage/ChunkStorage dmf
	LAST_MONOLYTH_STRUCTURE_DATA_VERSION d
	fixerUpper e
	legacyStructureHandler b
	worker a
	chunkScanner ()Lnet/minecraft/world/level/chunk/storage/ChunkScanAccess; p
	flushWorker ()V o
	getLegacyStructureHandler (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;)Lnet/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler; a
	getVersion (Lnet/minecraft/nbt/CompoundTag;)I a
	injectDatafixingContext (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/resources/ResourceKey;Ljava/util/Optional;)V a
	isOldChunkAround (Lnet/minecraft/world/level/ChunkPos;I)Z b
	read (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; e
	upgradeChunkTag (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;Lnet/minecraft/nbt/CompoundTag;Ljava/util/Optional;)Lnet/minecraft/nbt/CompoundTag; a
	write (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/chunk/storage/EntityStorage dmg
	ENTITIES_TAG c
	LOGGER b
	POSITION_TAG d
	emptyChunks g
	entityDeserializerQueue h
	fixerUpper a
	level e
	worker f
	emptyChunk (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/entity/ChunkEntities; b
	flush (Z)V a
	loadEntities (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; a
	readChunkPos (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/ChunkPos; a
	storeEntities (Lnet/minecraft/world/level/entity/ChunkEntities;)V a
	upgradeChunkTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	writeChunkPos (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/world/level/chunk/storage/IOWorker dmh
	LOGGER a
	REGION_CACHE_SIZE g
	mailbox c
	pendingWrites e
	regionCacheForBlender f
	shutdownRequested b
	storage d
	createOldDataForRegion (II)Ljava/util/concurrent/CompletableFuture; b
	getOrCreateOldDataForRegion (II)Ljava/util/concurrent/CompletableFuture; a
	isOldChunk (Lnet/minecraft/nbt/CompoundTag;)Z a
	isOldChunkAround (Lnet/minecraft/world/level/ChunkPos;I)Z a
	loadAsync (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; a
	runStore (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/storage/IOWorker$PendingStore;)V a
	scanChunk (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/StreamTagVisitor;)Ljava/util/concurrent/CompletableFuture; a
	store (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/concurrent/CompletableFuture; a
	storePendingChunk ()V a
	submitTask (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; a
	synchronize (Z)Ljava/util/concurrent/CompletableFuture; a
	tellStorePending ()V b
net/minecraft/world/level/chunk/storage/IOWorker$PendingStore dmh$a
	data a
	result b
net/minecraft/world/level/chunk/storage/IOWorker$Priority dmh$b
	$VALUES d
	BACKGROUND b
	FOREGROUND a
	SHUTDOWN c
	$values ()[Lnet/minecraft/world/level/chunk/storage/IOWorker$Priority; a
net/minecraft/world/level/chunk/storage/RegionBitmap dmi
	used a
	allocate (I)I a
	force (II)V a
	free (II)V b
	getUsed ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/world/level/chunk/storage/RegionFile dmj
	CHUNK_HEADER_SIZE e
	CHUNK_NOT_PRESENT k
	EXTERNAL_CHUNK_THRESHOLD j
	EXTERNAL_FILE_EXTENSION h
	EXTERNAL_STREAM_FLAG i
	HEADER_OFFSET f
	LOGGER c
	PADDING_BUFFER g
	SECTOR_BYTES d
	SECTOR_INTS a
	externalFileDir m
	file l
	header o
	offsets p
	timestamps q
	usedSectors b
	version n
	clear (Lnet/minecraft/world/level/ChunkPos;)V d
	createChunkInputStream (Lnet/minecraft/world/level/ChunkPos;BLjava/io/InputStream;)Ljava/io/DataInputStream; a
	createExternalChunkInputStream (Lnet/minecraft/world/level/ChunkPos;B)Ljava/io/DataInputStream; a
	createExternalStub ()Ljava/nio/ByteBuffer; c
	createStream (Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream; a
	doesChunkExist (Lnet/minecraft/world/level/ChunkPos;)Z b
	flush ()V a
	getChunkDataInputStream (Lnet/minecraft/world/level/ChunkPos;)Ljava/io/DataInputStream; a
	getChunkDataOutputStream (Lnet/minecraft/world/level/ChunkPos;)Ljava/io/DataOutputStream; c
	getExternalChunkPath (Lnet/minecraft/world/level/ChunkPos;)Ljava/nio/file/Path; f
	getExternalChunkVersion (B)B b
	getNumSectors (I)I a
	getOffset (Lnet/minecraft/world/level/ChunkPos;)I g
	getOffsetIndex (Lnet/minecraft/world/level/ChunkPos;)I h
	getSectorNumber (I)I b
	getTimestamp ()I b
	hasChunk (Lnet/minecraft/world/level/ChunkPos;)Z e
	isExternalStreamChunk (B)Z a
	packSectorOffset (II)I a
	padToFullSector ()V e
	sizeToSectors (I)I c
	write (Lnet/minecraft/world/level/ChunkPos;Ljava/nio/ByteBuffer;)V a
	writeHeader ()V d
	writeToExternalFile (Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Lnet/minecraft/world/level/chunk/storage/RegionFile$CommitOp; a
net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer dmj$a
	pos b
net/minecraft/world/level/chunk/storage/RegionFile$CommitOp dmj$b
net/minecraft/world/level/chunk/storage/RegionFileStorage dmk
	ANVIL_EXTENSION a
	MAX_CACHE_SIZE b
	folder d
	regionCache c
	sync e
	flush ()V a
	getRegionFile (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/chunk/storage/RegionFile; b
	read (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
	scanChunk (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/StreamTagVisitor;)V a
	write (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/chunk/storage/RegionFileVersion dml
	VERSIONS d
	VERSION_DEFLATE b
	VERSION_GZIP a
	VERSION_NONE c
	id e
	inputWrapper f
	outputWrapper g
	fromId (I)Lnet/minecraft/world/level/chunk/storage/RegionFileVersion; a
	getId ()I a
	isValidVersion (I)Z b
	register (Lnet/minecraft/world/level/chunk/storage/RegionFileVersion;)Lnet/minecraft/world/level/chunk/storage/RegionFileVersion; a
	wrap (Ljava/io/InputStream;)Ljava/io/InputStream; a
	wrap (Ljava/io/OutputStream;)Ljava/io/OutputStream; a
net/minecraft/world/level/chunk/storage/RegionFileVersion$StreamWrapper dml$a
net/minecraft/world/level/chunk/storage/SectionStorage dmm
	LOGGER a
	SECTIONS_TAG b
	codec g
	dirty f
	factory h
	fixerUpper i
	levelHeightAccessor c
	registryAccess k
	storage e
	type j
	worker d
	flush (Lnet/minecraft/world/level/ChunkPos;)V a
	get (J)Ljava/util/Optional; c
	getKey (Lnet/minecraft/world/level/ChunkPos;I)J a
	getOrCreate (J)Ljava/lang/Object; f
	getOrLoad (J)Ljava/util/Optional; d
	getVersion (Lcom/mojang/serialization/Dynamic;)I a
	hasWork ()Z a
	onSectionLoad (J)V b
	outsideStoredRange (J)Z e
	readColumn (Lnet/minecraft/world/level/ChunkPos;)V b
	readColumn (Lnet/minecraft/world/level/ChunkPos;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V a
	setDirty (J)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tryRead (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; c
	writeColumn (Lnet/minecraft/world/level/ChunkPos;)V d
	writeColumn (Lnet/minecraft/world/level/ChunkPos;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/world/level/dimension/BuiltinDimensionTypes dmo
	END c
	END_EFFECTS g
	NETHER b
	NETHER_EFFECTS f
	OVERWORLD a
	OVERWORLD_CAVES d
	OVERWORLD_EFFECTS e
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/dimension/DimensionDefaults dmp
	END_GENERATION_HEIGHT k
	END_LEVEL_HEIGHT j
	END_LOGICAL_HEIGHT l
	END_MIN_Y i
	NETHER_GENERATION_HEIGHT g
	NETHER_LEVEL_HEIGHT f
	NETHER_LOGICAL_HEIGHT h
	NETHER_MIN_Y e
	OVERWORLD_GENERATION_HEIGHT c
	OVERWORLD_LEVEL_HEIGHT b
	OVERWORLD_LOGICAL_HEIGHT d
	OVERWORLD_MIN_Y a
net/minecraft/world/level/dimension/DimensionType dmq
	BITS_FOR_Y a
	CODEC j
	DIRECT_CODEC h
	MAX_Y d
	MIN_HEIGHT b
	MIN_Y e
	MOON_BRIGHTNESS_PER_PHASE i
	MOON_PHASES z
	WAY_ABOVE_MAX_Y f
	WAY_BELOW_MIN_Y g
	Y_SIZE c
	ambientLight x
	bedWorks q
	coordinateScale p
	effectsLocation w
	fixedTime k
	hasCeiling m
	hasSkyLight l
	height t
	infiniburn v
	logicalHeight u
	minY s
	monsterSettings y
	natural o
	respawnAnchorWorks r
	ultraWarm n
	ambientLight ()F s
	bedWorks ()Z l
	coordinateScale ()D k
	effectsLocation ()Lnet/minecraft/resources/ResourceLocation; r
	fixedTime ()Ljava/util/OptionalLong; f
	getStorageFolder (Lnet/minecraft/resources/ResourceKey;Ljava/nio/file/Path;)Ljava/nio/file/Path; a
	getTeleportationScale (Lnet/minecraft/world/level/dimension/DimensionType;Lnet/minecraft/world/level/dimension/DimensionType;)D a
	hasCeiling ()Z h
	hasFixedTime ()Z a
	hasRaids ()Z c
	hasSkyLight ()Z g
	height ()I o
	infiniburn ()Lnet/minecraft/tags/TagKey; q
	logicalHeight ()I p
	minY ()I n
	monsterSettings ()Lnet/minecraft/world/level/dimension/DimensionType$MonsterSettings; t
	monsterSpawnBlockLightLimit ()I e
	monsterSpawnLightTest ()Lnet/minecraft/util/valueproviders/IntProvider; d
	moonPhase (J)I b
	natural ()Z j
	parseLegacy (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; a
	piglinSafe ()Z b
	respawnAnchorWorks ()Z m
	timeOfDay (J)F a
	ultraWarm ()Z i
net/minecraft/world/level/dimension/DimensionType$MonsterSettings dmq$a
	CODEC a
	hasRaids c
	monsterSpawnBlockLightLimit e
	monsterSpawnLightTest d
	piglinSafe b
	hasRaids ()Z b
	monsterSpawnBlockLightLimit ()I d
	monsterSpawnLightTest ()Lnet/minecraft/util/valueproviders/IntProvider; c
	piglinSafe ()Z a
net/minecraft/world/level/dimension/LevelStem dmr
	CODEC a
	END d
	NETHER c
	OVERWORLD b
	generator f
	type e
	generator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; b
	type ()Lnet/minecraft/core/Holder; a
net/minecraft/world/level/dimension/end/DragonRespawnAnimation dms
	$VALUES f
	END e
	PREPARING_TO_SUMMON_PILLARS b
	START a
	SUMMONING_DRAGON d
	SUMMONING_PILLARS c
	$values ()[Lnet/minecraft/world/level/dimension/end/DragonRespawnAnimation; a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/dimension/end/EndDragonFight;Ljava/util/List;ILnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/dimension/end/EndDragonFight dmt
	ARENA_SIZE_CHUNKS g
	ARENA_TICKET_LEVEL b
	DRAGON_SPAWN_Y c
	GATEWAY_COUNT h
	GATEWAY_DISTANCE i
	LOGGER d
	MAX_TICKS_BEFORE_DRAGON_RESPAWN e
	TIME_BETWEEN_CRYSTAL_SCANS f
	TIME_BETWEEN_PLAYER_SCANS a
	crystalsAlive q
	dragonEvent k
	dragonKilled t
	dragonUUID w
	exitPortalPattern o
	gateways n
	level l
	needsStateScanning x
	origin m
	portalLocation y
	previouslyKilled u
	respawnCrystals B
	respawnStage z
	respawnTime A
	skipArenaLoadedCheck v
	ticksSinceCrystalsScanned r
	ticksSinceDragonSeen p
	ticksSinceLastPlayerScan s
	validPlayer j
	createNewDragon ()Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon; r
	findExitPortal ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; m
	findOrCreateDragon ()V k
	getCrystalsAlive ()I e
	getDragonUUID ()Ljava/util/UUID; i
	hasActiveExitPortal ()Z l
	hasPreviouslyKilledDragon ()Z f
	isArenaLoaded ()Z n
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/world/damagesource/DamageSource;)V a
	removeAllGateways ()V d
	resetSpikeCrystals ()V h
	respawnDragon (Ljava/util/List;)V a
	saveData ()Lnet/minecraft/world/level/dimension/end/EndDragonFight$Data; b
	scanState ()V j
	setDragonKilled (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)V a
	setRespawnStage (Lnet/minecraft/world/level/dimension/end/DragonRespawnAnimation;)V a
	skipArenaLoadedCheck ()V a
	spawnExitPortal (Z)V a
	spawnNewGateway ()V q
	spawnNewGateway (Lnet/minecraft/core/BlockPos;)V a
	tick ()V c
	tryRespawn ()V g
	updateCrystalCount ()V p
	updateDragon (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)V b
	updatePlayers ()V o
net/minecraft/world/level/dimension/end/EndDragonFight$Data dmt$a
	CODEC a
	DEFAULT b
	dragonKilled d
	dragonUUID g
	exitPortalLocation h
	gateways i
	isRespawning f
	needsStateScanning c
	previouslyKilled e
	dragonKilled ()Z b
	dragonUUID ()Ljava/util/Optional; e
	exitPortalLocation ()Ljava/util/Optional; f
	gateways ()Ljava/util/Optional; g
	isRespawning ()Z d
	needsStateScanning ()Z a
	previouslyKilled ()Z c
net/minecraft/world/level/entity/ChunkEntities dmw
	entities b
	pos a
	getEntities ()Ljava/util/stream/Stream; b
	getPos ()Lnet/minecraft/world/level/ChunkPos; a
	isEmpty ()Z c
net/minecraft/world/level/entity/ChunkStatusUpdateListener dmx
net/minecraft/world/level/entity/EntityAccess dmy
	blockPosition ()Lnet/minecraft/core/BlockPos; dm
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; cH
	getId ()I aj
	getPassengersAndSelf ()Ljava/util/stream/Stream; cS
	getSelfAndPassengers ()Ljava/util/stream/Stream; cR
	getUUID ()Ljava/util/UUID; cw
	isAlwaysTicking ()Z dL
	setLevelCallback (Lnet/minecraft/world/level/entity/EntityInLevelCallback;)V a
	setRemoved (Lnet/minecraft/world/entity/Entity$RemovalReason;)V b
	shouldBeSaved ()Z dK
net/minecraft/world/level/entity/EntityInLevelCallback dmz
	NULL a
	onMove ()V a
	onRemove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
net/minecraft/world/level/entity/EntityLookup dna
	LOGGER a
	byId b
	byUuid c
	add (Lnet/minecraft/world/level/entity/EntityAccess;)V a
	count ()I b
	getAllEntities ()Ljava/lang/Iterable; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/util/AbortableIterationConsumer;)V a
	getEntity (I)Lnet/minecraft/world/level/entity/EntityAccess; a
	getEntity (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; a
	remove (Lnet/minecraft/world/level/entity/EntityAccess;)V b
net/minecraft/world/level/entity/EntityPersistentStorage dnb
	flush (Z)V a
	loadEntities (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; a
	storeEntities (Lnet/minecraft/world/level/entity/ChunkEntities;)V a
net/minecraft/world/level/entity/EntitySection dnc
	LOGGER a
	chunkStatus c
	storage b
	add (Lnet/minecraft/world/level/entity/EntityAccess;)V a
	getEntities ()Ljava/util/stream/Stream; b
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/util/AbortableIterationConsumer;)Lnet/minecraft/util/AbortableIterationConsumer$Continuation; a
	getEntities (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/util/AbortableIterationConsumer;)Lnet/minecraft/util/AbortableIterationConsumer$Continuation; a
	getStatus ()Lnet/minecraft/world/level/entity/Visibility; c
	isEmpty ()Z a
	remove (Lnet/minecraft/world/level/entity/EntityAccess;)Z b
	size ()I d
	updateChunkStatus (Lnet/minecraft/world/level/entity/Visibility;)Lnet/minecraft/world/level/entity/Visibility; a
net/minecraft/world/level/entity/EntitySectionStorage dnd
	entityClass a
	intialSectionVisibility b
	sectionIds d
	sections c
	count ()I b
	createSection (J)Lnet/minecraft/world/level/entity/EntitySection; g
	forEachAccessibleNonEmptySection (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/util/AbortableIterationConsumer;)V a
	getAllChunksWithExistingSections ()Lit/unimi/dsi/fastutil/longs/LongSet; a
	getChunkKeyFromSectionKey (J)J f
	getChunkSections (II)Lit/unimi/dsi/fastutil/longs/LongSortedSet; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/util/AbortableIterationConsumer;)V a
	getEntities (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/util/AbortableIterationConsumer;)V b
	getExistingSectionPositionsInChunk (J)Ljava/util/stream/LongStream; a
	getExistingSectionsInChunk (J)Ljava/util/stream/Stream; b
	getOrCreateSection (J)Lnet/minecraft/world/level/entity/EntitySection; c
	getSection (J)Lnet/minecraft/world/level/entity/EntitySection; d
	remove (J)V e
net/minecraft/world/level/entity/EntityTickList dne
	active a
	iterated c
	passive b
	add (Lnet/minecraft/world/entity/Entity;)V a
	contains (Lnet/minecraft/world/entity/Entity;)Z c
	ensureActiveIsNotIterated ()V a
	forEach (Ljava/util/function/Consumer;)V a
	remove (Lnet/minecraft/world/entity/Entity;)V b
net/minecraft/world/level/entity/EntityTypeTest dnf
	forClass (Ljava/lang/Class;)Lnet/minecraft/world/level/entity/EntityTypeTest; a
	forExactClass (Ljava/lang/Class;)Lnet/minecraft/world/level/entity/EntityTypeTest; b
	getBaseClass ()Ljava/lang/Class; a
	tryCast (Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/world/level/entity/LevelCallback dng
	onCreated (Ljava/lang/Object;)V g
	onDestroyed (Ljava/lang/Object;)V f
	onSectionChange (Ljava/lang/Object;)V a
	onTickingEnd (Ljava/lang/Object;)V d
	onTickingStart (Ljava/lang/Object;)V e
	onTrackingEnd (Ljava/lang/Object;)V b
	onTrackingStart (Ljava/lang/Object;)V c
net/minecraft/world/level/entity/LevelEntityGetter dnh
	get (I)Lnet/minecraft/world/level/entity/EntityAccess; a
	get (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; a
	get (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/util/AbortableIterationConsumer;)V a
	get (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/util/AbortableIterationConsumer;)V a
	get (Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	getAll ()Ljava/lang/Iterable; a
net/minecraft/world/level/entity/LevelEntityGetterAdapter dni
	sectionStorage b
	visibleEntities a
	get (I)Lnet/minecraft/world/level/entity/EntityAccess; a
	get (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; a
	get (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/util/AbortableIterationConsumer;)V a
	get (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/util/AbortableIterationConsumer;)V a
	get (Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	getAll ()Ljava/lang/Iterable; a
net/minecraft/world/level/entity/PersistentEntitySectionManager dnj
	LOGGER a
	callbacks c
	chunkLoadStatuses i
	chunkVisibility h
	chunksToUnload j
	entityGetter g
	knownUuids b
	loadingInbox k
	permanentStorage d
	sectionStorage f
	visibleEntityStorage e
	addEntity (Lnet/minecraft/world/level/entity/EntityAccess;Z)Z a
	addEntityUuid (Lnet/minecraft/world/level/entity/EntityAccess;)Z b
	addLegacyChunkEntities (Ljava/util/stream/Stream;)V a
	addNewEntity (Lnet/minecraft/world/level/entity/EntityAccess;)Z a
	addWorldGenChunkEntities (Ljava/util/stream/Stream;)V b
	areEntitiesLoaded (J)Z a
	autoSave ()V b
	canPositionTick (Lnet/minecraft/core/BlockPos;)Z a
	canPositionTick (Lnet/minecraft/world/level/ChunkPos;)Z a
	count ()I f
	dumpSections (Ljava/io/Writer;)V a
	ensureChunkQueuedForLoad (J)V b
	gatherStats ()Ljava/lang/String; e
	getAllChunksToSave ()Lit/unimi/dsi/fastutil/longs/LongSet; i
	getEffectiveStatus (Lnet/minecraft/world/level/entity/EntityAccess;Lnet/minecraft/world/level/entity/Visibility;)Lnet/minecraft/world/level/entity/Visibility; a
	getEntityGetter ()Lnet/minecraft/world/level/entity/LevelEntityGetter; d
	isLoaded (Ljava/util/UUID;)Z a
	processChunkUnload (J)Z d
	processPendingLoads ()V h
	processUnloads ()V g
	removeSectionIfEmpty (JLnet/minecraft/world/level/entity/EntitySection;)V a
	requestChunkLoad (J)V c
	saveAll ()V c
	startTicking (Lnet/minecraft/world/level/entity/EntityAccess;)V c
	startTracking (Lnet/minecraft/world/level/entity/EntityAccess;)V e
	stopTicking (Lnet/minecraft/world/level/entity/EntityAccess;)V d
	stopTracking (Lnet/minecraft/world/level/entity/EntityAccess;)V f
	storeChunkSections (JLjava/util/function/Consumer;)Z a
	tick ()V a
	unloadEntity (Lnet/minecraft/world/level/entity/EntityAccess;)V g
	updateChunkStatus (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/server/level/FullChunkStatus;)V a
	updateChunkStatus (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/entity/Visibility;)V a
net/minecraft/world/level/entity/PersistentEntitySectionManager$Callback dnj$a
	currentSection e
	currentSectionKey d
	entity c
	onMove ()V a
	onRemove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	updateStatus (Lnet/minecraft/world/level/entity/Visibility;Lnet/minecraft/world/level/entity/Visibility;)V a
net/minecraft/world/level/entity/PersistentEntitySectionManager$ChunkLoadStatus dnj$b
	$VALUES d
	FRESH a
	LOADED c
	PENDING b
	$values ()[Lnet/minecraft/world/level/entity/PersistentEntitySectionManager$ChunkLoadStatus; a
net/minecraft/world/level/entity/TransientEntitySectionManager dnk
	LOGGER a
	callbacks b
	entityGetter f
	entityStorage c
	sectionStorage d
	tickingChunks e
	addEntity (Lnet/minecraft/world/level/entity/EntityAccess;)V a
	count ()I b
	gatherStats ()Ljava/lang/String; c
	getEntityGetter ()Lnet/minecraft/world/level/entity/LevelEntityGetter; a
	removeSectionIfEmpty (JLnet/minecraft/world/level/entity/EntitySection;)V a
	startTicking (Lnet/minecraft/world/level/ChunkPos;)V a
	stopTicking (Lnet/minecraft/world/level/ChunkPos;)V b
net/minecraft/world/level/entity/TransientEntitySectionManager$Callback dnk$a
	currentSection e
	currentSectionKey d
	entity c
	onMove ()V a
	onRemove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
net/minecraft/world/level/entity/Visibility dnl
	$VALUES f
	HIDDEN a
	TICKING c
	TRACKED b
	accessible d
	ticking e
	$values ()[Lnet/minecraft/world/level/entity/Visibility; c
	fromFullChunkStatus (Lnet/minecraft/server/level/FullChunkStatus;)Lnet/minecraft/world/level/entity/Visibility; a
	isAccessible ()Z b
	isTicking ()Z a
net/minecraft/world/level/gameevent/BlockPositionSource dnn
	CODEC a
	pos c
	getPosition (Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getType ()Lnet/minecraft/world/level/gameevent/PositionSourceType; a
net/minecraft/world/level/gameevent/BlockPositionSource$Type dnn$a
	codec ()Lcom/mojang/serialization/Codec; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/BlockPositionSource; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/PositionSource; b
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/BlockPositionSource;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/PositionSource;)V a
net/minecraft/world/level/gameevent/DynamicGameEventListener dno
	lastSection b
	listener a
	add (Lnet/minecraft/server/level/ServerLevel;)V a
	getListener ()Lnet/minecraft/world/level/gameevent/GameEventListener; a
	ifChunkExists (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/SectionPos;Ljava/util/function/Consumer;)V a
	move (Lnet/minecraft/server/level/ServerLevel;)V c
	remove (Lnet/minecraft/server/level/ServerLevel;)V b
net/minecraft/world/level/gameevent/EntityPositionSource dnp
	CODEC a
	entityOrUuidOrId c
	yOffset d
	getId ()I c
	getPosition (Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getType ()Lnet/minecraft/world/level/gameevent/PositionSourceType; a
	getUuid ()Ljava/util/UUID; b
	resolveEntity (Lnet/minecraft/world/level/Level;)V b
net/minecraft/world/level/gameevent/EntityPositionSource$Type dnp$a
	codec ()Lcom/mojang/serialization/Codec; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/EntityPositionSource; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/PositionSource; b
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/EntityPositionSource;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/PositionSource;)V a
net/minecraft/world/level/gameevent/EuclideanGameEventListenerRegistry dnq
	level f
	listeners b
	listenersToAdd d
	listenersToRemove c
	onEmptyAction h
	processing e
	sectionY g
	getPostableListenerPosition (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEventListener;)Ljava/util/Optional; a
	isEmpty ()Z a
	register (Lnet/minecraft/world/level/gameevent/GameEventListener;)V a
	unregister (Lnet/minecraft/world/level/gameevent/GameEventListener;)V b
	visitInRangeListeners (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Lnet/minecraft/world/level/gameevent/GameEventListenerRegistry$ListenerVisitor;)Z a
net/minecraft/world/level/gameevent/EuclideanGameEventListenerRegistry$OnEmptyAction dnq$a
net/minecraft/world/level/gameevent/GameEvent dnr
	BLOCK_ACTIVATE a
	BLOCK_ATTACH b
	BLOCK_CHANGE c
	BLOCK_CLOSE d
	BLOCK_DEACTIVATE e
	BLOCK_DESTROY f
	BLOCK_DETACH g
	BLOCK_OPEN h
	BLOCK_PLACE i
	CONTAINER_CLOSE j
	CONTAINER_OPEN k
	DEFAULT_NOTIFICATION_RADIUS ai
	DRINK l
	EAT m
	ELYTRA_GLIDE n
	ENTITY_ACTION u
	ENTITY_DAMAGE o
	ENTITY_DIE p
	ENTITY_DISMOUNT q
	ENTITY_INTERACT r
	ENTITY_MOUNT s
	ENTITY_PLACE t
	EQUIP v
	EXPLODE w
	FLAP x
	FLUID_PICKUP y
	FLUID_PLACE z
	HIT_GROUND A
	INSTRUMENT_PLAY B
	ITEM_INTERACT_FINISH C
	ITEM_INTERACT_START D
	JUKEBOX_PLAY E
	JUKEBOX_STOP_PLAY F
	LIGHTNING_STRIKE G
	NOTE_BLOCK_PLAY H
	PRIME_FUSE I
	PROJECTILE_LAND J
	PROJECTILE_SHOOT K
	RESONATE_1 T
	RESONATE_10 ac
	RESONATE_11 ad
	RESONATE_12 ae
	RESONATE_13 af
	RESONATE_14 ag
	RESONATE_15 ah
	RESONATE_2 U
	RESONATE_3 V
	RESONATE_4 W
	RESONATE_5 X
	RESONATE_6 Y
	RESONATE_7 Z
	RESONATE_8 aa
	RESONATE_9 ab
	SCULK_SENSOR_TENDRILS_CLICKING L
	SHEAR M
	SHRIEK N
	SPLASH O
	STEP P
	SWIM Q
	TELEPORT R
	UNEQUIP S
	builtInRegistryHolder ak
	notificationRadius aj
	builtInRegistryHolder ()Lnet/minecraft/core/Holder$Reference; b
	getNotificationRadius ()I a
	is (Lnet/minecraft/tags/TagKey;)Z a
	register (Ljava/lang/String;)Lnet/minecraft/world/level/gameevent/GameEvent; a
	register (Ljava/lang/String;I)Lnet/minecraft/world/level/gameevent/GameEvent; a
net/minecraft/world/level/gameevent/GameEvent$Context dnr$a
	affectedState b
	sourceEntity a
	affectedState ()Lnet/minecraft/world/level/block/state/BlockState; b
	of (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/gameevent/GameEvent$Context; a
	of (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/gameevent/GameEvent$Context; a
	of (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/gameevent/GameEvent$Context; a
	sourceEntity ()Lnet/minecraft/world/entity/Entity; a
net/minecraft/world/level/gameevent/GameEvent$ListenerInfo dnr$b
	context c
	distanceToRecipient e
	gameEvent a
	recipient d
	source b
	compareTo (Lnet/minecraft/world/level/gameevent/GameEvent$ListenerInfo;)I a
	context ()Lnet/minecraft/world/level/gameevent/GameEvent$Context; c
	gameEvent ()Lnet/minecraft/world/level/gameevent/GameEvent; a
	recipient ()Lnet/minecraft/world/level/gameevent/GameEventListener; d
	source ()Lnet/minecraft/world/phys/Vec3; b
net/minecraft/world/level/gameevent/GameEventDispatcher dns
	level a
	handleGameEventMessagesInQueue (Ljava/util/List;)V a
	post (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)V a
net/minecraft/world/level/gameevent/GameEventListener dnt
	getDeliveryMode ()Lnet/minecraft/world/level/gameevent/GameEventListener$DeliveryMode; c
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	handleGameEvent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Lnet/minecraft/world/phys/Vec3;)Z a
net/minecraft/world/level/gameevent/GameEventListener$DeliveryMode dnt$a
	$VALUES c
	BY_DISTANCE b
	UNSPECIFIED a
	$values ()[Lnet/minecraft/world/level/gameevent/GameEventListener$DeliveryMode; a
net/minecraft/world/level/gameevent/GameEventListener$Holder dnt$b
	getListener ()Lnet/minecraft/world/level/gameevent/GameEventListener; d
net/minecraft/world/level/gameevent/GameEventListenerRegistry dnu
	NOOP a
	isEmpty ()Z a
	register (Lnet/minecraft/world/level/gameevent/GameEventListener;)V a
	unregister (Lnet/minecraft/world/level/gameevent/GameEventListener;)V b
	visitInRangeListeners (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Lnet/minecraft/world/level/gameevent/GameEventListenerRegistry$ListenerVisitor;)Z a
net/minecraft/world/level/gameevent/GameEventListenerRegistry$ListenerVisitor dnu$a
net/minecraft/world/level/gameevent/PositionSource dnv
	CODEC b
	getPosition (Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getType ()Lnet/minecraft/world/level/gameevent/PositionSourceType; a
net/minecraft/world/level/gameevent/PositionSourceType dnw
	BLOCK a
	ENTITY b
	codec ()Lcom/mojang/serialization/Codec; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/PositionSource; c
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/PositionSource; b
	register (Ljava/lang/String;Lnet/minecraft/world/level/gameevent/PositionSourceType;)Lnet/minecraft/world/level/gameevent/PositionSourceType; a
	toNetwork (Lnet/minecraft/world/level/gameevent/PositionSource;Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/PositionSource;)V a
net/minecraft/world/level/gameevent/vibrations/VibrationInfo dny
	CODEC a
	distance c
	entity g
	gameEvent b
	pos d
	projectileOwnerUuid f
	uuid e
	distance ()F b
	entity ()Lnet/minecraft/world/entity/Entity; f
	gameEvent ()Lnet/minecraft/world/level/gameevent/GameEvent; a
	getEntity (Lnet/minecraft/server/level/ServerLevel;)Ljava/util/Optional; a
	getProjectileOwner (Lnet/minecraft/server/level/ServerLevel;)Ljava/util/Optional; b
	getProjectileOwner (Lnet/minecraft/world/entity/Entity;)Ljava/util/UUID; a
	pos ()Lnet/minecraft/world/phys/Vec3; c
	projectileOwnerUuid ()Ljava/util/UUID; e
	uuid ()Ljava/util/UUID; d
net/minecraft/world/level/gameevent/vibrations/VibrationSelector dnz
	CODEC a
	currentVibrationData b
	addCandidate (Lnet/minecraft/world/level/gameevent/vibrations/VibrationInfo;J)V a
	chosenCandidate (J)Ljava/util/Optional; a
	shouldReplaceVibration (Lnet/minecraft/world/level/gameevent/vibrations/VibrationInfo;J)Z b
	startOver ()V a
net/minecraft/world/level/gameevent/vibrations/VibrationSystem doa
	RESONANCE_EVENTS e_
	VIBRATION_FREQUENCY_FOR_EVENT f_
	getGameEventFrequency (Lnet/minecraft/world/level/gameevent/GameEvent;)I a_
	getRedstoneStrengthForDistance (FI)I a_
	getResonanceEventByFrequency (I)Lnet/minecraft/world/level/gameevent/GameEvent; b
	getVibrationData ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data; gg
	getVibrationUser ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User; gh
net/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data doa$a
	CODEC a
	NBT_TAG_KEY b
	currentVibration c
	reloadVibrationParticle f
	selectionStrategy e
	travelTimeInTicks d
	decrementTravelTime ()V d
	getCurrentVibration ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationInfo; b
	getSelectionStrategy ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSelector; a
	getTravelTimeInTicks ()I c
	setCurrentVibration (Lnet/minecraft/world/level/gameevent/vibrations/VibrationInfo;)V a
	setReloadVibrationParticle (Z)V a
	setTravelTimeInTicks (I)V a
	shouldReloadVibrationParticle ()Z e
net/minecraft/world/level/gameevent/vibrations/VibrationSystem$Listener doa$b
	system a
	distanceBetweenInBlocks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)F a
	forceScheduleVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Lnet/minecraft/world/phys/Vec3;)V b
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	handleGameEvent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Lnet/minecraft/world/phys/Vec3;)Z a
	isOccluded (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	scheduleVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/level/gameevent/vibrations/VibrationSystem$Ticker doa$c
	areAdjacentChunksTicking (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	receiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data;Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User;Lnet/minecraft/world/level/gameevent/vibrations/VibrationInfo;)Z a
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data;Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User;)V a
	tryReloadVibrationParticle (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data;Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User;)V b
	trySelectAndScheduleVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data;Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User;)V a
net/minecraft/world/level/gameevent/vibrations/VibrationSystem$User doa$d
	calculateTravelTimeInTicks (F)I a
	canReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)Z a
	canTriggerAvoidVibration ()Z d
	getListenableEvents ()Lnet/minecraft/tags/TagKey; c
	getListenerRadius ()I a
	getPositionSource ()Lnet/minecraft/world/level/gameevent/PositionSource; b
	isValidVibration (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)Z a
	onDataChanged ()V e
	onReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V a
	requiresAdjacentChunksToBeTicking ()Z f
net/minecraft/world/level/levelgen/Aquifer doc
	computeSubstance (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;D)Lnet/minecraft/world/level/block/state/BlockState; a
	create (Lnet/minecraft/world/level/levelgen/NoiseChunk;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/NoiseRouter;Lnet/minecraft/world/level/levelgen/PositionalRandomFactory;IILnet/minecraft/world/level/levelgen/Aquifer$FluidPicker;)Lnet/minecraft/world/level/levelgen/Aquifer; a
	createDisabled (Lnet/minecraft/world/level/levelgen/Aquifer$FluidPicker;)Lnet/minecraft/world/level/levelgen/Aquifer; a
	shouldScheduleFluidUpdate ()Z a
net/minecraft/world/level/levelgen/Aquifer$FluidPicker doc$a
net/minecraft/world/level/levelgen/Aquifer$FluidStatus doc$b
	fluidLevel a
	fluidType b
	at (I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/Aquifer$NoiseBasedAquifer doc$c
	FLOWING_UPDATE_SIMULARITY k
	MAX_REASONABLE_DISTANCE_TO_AQUIFER_CENTER j
	SURFACE_SAMPLING_OFFSETS_IN_CHUNKS C
	X_RANGE a
	X_SEPARATION d
	X_SPACING g
	Y_RANGE b
	Y_SEPARATION e
	Y_SPACING h
	Z_RANGE c
	Z_SEPARATION f
	Z_SPACING i
	aquiferCache r
	aquiferLocationCache s
	barrierNoise m
	depth v
	erosion u
	fluidLevelFloodednessNoise n
	fluidLevelSpreadNoise o
	globalFluidPicker t
	gridSizeX A
	gridSizeZ B
	lavaNoise p
	minGridX x
	minGridY y
	minGridZ z
	noiseChunk l
	positionalRandomFactory q
	shouldScheduleFluidUpdate w
	calculatePressure (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;Lorg/apache/commons/lang3/mutable/MutableDouble;Lnet/minecraft/world/level/levelgen/Aquifer$FluidStatus;Lnet/minecraft/world/level/levelgen/Aquifer$FluidStatus;)D a
	computeFluid (III)Lnet/minecraft/world/level/levelgen/Aquifer$FluidStatus; b
	computeFluidType (IIILnet/minecraft/world/level/levelgen/Aquifer$FluidStatus;I)Lnet/minecraft/world/level/block/state/BlockState; a
	computeRandomizedFluidSurfaceLevel (IIII)I a
	computeSubstance (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;D)Lnet/minecraft/world/level/block/state/BlockState; a
	computeSurfaceLevel (IIILnet/minecraft/world/level/levelgen/Aquifer$FluidStatus;IZ)I a
	getAquiferStatus (J)Lnet/minecraft/world/level/levelgen/Aquifer$FluidStatus; a
	getIndex (III)I a
	gridX (I)I a
	gridY (I)I b
	gridZ (I)I c
	shouldScheduleFluidUpdate ()Z a
	similarity (II)D a
net/minecraft/world/level/levelgen/Beardifier dod
	BEARD_KERNEL g
	BEARD_KERNEL_RADIUS a
	BEARD_KERNEL_SIZE f
	junctionIterator i
	pieceIterator h
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	computeBeardContribution (IDI)D a
	computeBeardContribution (III)D b
	forStructuresInChunk (Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/levelgen/Beardifier; a
	getBeardContribution (IIII)D a
	getBuryContribution (III)D a
	isInKernelRange (I)Z a
	maxValue ()D b
	minValue ()D a
net/minecraft/world/level/levelgen/Beardifier$Rigid dod$a
	box a
	groundLevelDelta c
	terrainAdjustment b
	box ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	groundLevelDelta ()I c
	terrainAdjustment ()Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment; b
net/minecraft/world/level/levelgen/BelowZeroRetrogen doe
	BITSET_CODEC d
	CODEC a
	EMPTY c
	NON_EMPTY_CHUNK_STATUS e
	RETAINED_RETROGEN_BIOMES f
	UPGRADE_HEIGHT_ACCESSOR b
	missingBedrock h
	targetStatus g
	applyBedrockMask (Lnet/minecraft/world/level/chunk/ProtoChunk;)V b
	getBiomeResolver (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/world/level/biome/BiomeResolver; a
	hasBedrockHole (II)Z a
	hasBedrockHoles ()Z b
	read (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen; a
	replaceOldBedrock (Lnet/minecraft/world/level/chunk/ProtoChunk;)V a
	targetStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; a
net/minecraft/world/level/levelgen/BitRandomSource dof
	DOUBLE_MULTIPLIER c
	FLOAT_MULTIPLIER b
	next (I)I c
	nextBoolean ()Z h
	nextDouble ()D j
	nextFloat ()F i
	nextInt ()I f
	nextInt (I)I a
	nextLong ()J g
net/minecraft/world/level/levelgen/Column dog
	above (I)Lnet/minecraft/world/level/levelgen/Column; c
	around (II)Lnet/minecraft/world/level/levelgen/Column$Range; a
	below (I)Lnet/minecraft/world/level/levelgen/Column; a
	create (Ljava/util/OptionalInt;Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; a
	fromHighest (I)Lnet/minecraft/world/level/levelgen/Column; b
	fromLowest (I)Lnet/minecraft/world/level/levelgen/Column; d
	getCeiling ()Ljava/util/OptionalInt; b
	getFloor ()Ljava/util/OptionalInt; c
	getHeight ()Ljava/util/OptionalInt; d
	inside (II)Lnet/minecraft/world/level/levelgen/Column$Range; b
	line ()Lnet/minecraft/world/level/levelgen/Column; a
	scan (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;ILjava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/Optional; a
	scanDirection (Lnet/minecraft/world/level/LevelSimulatedReader;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos$MutableBlockPos;ILnet/minecraft/core/Direction;)Ljava/util/OptionalInt; a
	withCeiling (Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; b
	withFloor (Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; a
net/minecraft/world/level/levelgen/Column$Line dog$a
	INSTANCE a
	getCeiling ()Ljava/util/OptionalInt; b
	getFloor ()Ljava/util/OptionalInt; c
	getHeight ()Ljava/util/OptionalInt; d
net/minecraft/world/level/levelgen/Column$Range dog$b
	ceiling b
	floor a
	ceiling ()I e
	floor ()I f
	getCeiling ()Ljava/util/OptionalInt; b
	getFloor ()Ljava/util/OptionalInt; c
	getHeight ()Ljava/util/OptionalInt; d
	height ()I g
net/minecraft/world/level/levelgen/Column$Ray dog$c
	edge a
	pointingUp b
	getCeiling ()Ljava/util/OptionalInt; b
	getFloor ()Ljava/util/OptionalInt; c
	getHeight ()Ljava/util/OptionalInt; d
net/minecraft/world/level/levelgen/DebugLevelSource doh
	AIR d
	ALL_BLOCKS i
	BARRIER e
	BARRIER_HEIGHT g
	BLOCK_MARGIN h
	CODEC c
	GRID_HEIGHT k
	GRID_WIDTH j
	HEIGHT f
	addDebugScreenInfo (Ljava/util/List;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/core/BlockPos;)V a
	applyBiomeDecoration (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/StructureManager;)V a
	applyCarvers (Lnet/minecraft/server/level/WorldGenRegion;JLnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	buildSurface (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	fillFromNoise (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	getBaseColumn (IILnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/NoiseColumn; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I a
	getBlockStateFor (II)Lnet/minecraft/world/level/block/state/BlockState; a
	getGenDepth ()I d
	getMinY ()I f
	getSeaLevel ()I e
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
net/minecraft/world/level/levelgen/Density doi
	SURFACE a
	UNRECOVERABLY_DENSE b
	UNRECOVERABLY_THIN c
net/minecraft/world/level/levelgen/DensityFunction doj
	CODEC c
	DIRECT_CODEC b
	HOLDER_HELPER_CODEC d
	abs ()Lnet/minecraft/world/level/levelgen/DensityFunction; d
	clamp (DD)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	cube ()Lnet/minecraft/world/level/levelgen/DensityFunction; f
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	halfNegative ()Lnet/minecraft/world/level/levelgen/DensityFunction; g
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	quarterNegative ()Lnet/minecraft/world/level/levelgen/DensityFunction; h
	square ()Lnet/minecraft/world/level/levelgen/DensityFunction; e
	squeeze ()Lnet/minecraft/world/level/levelgen/DensityFunction; i
net/minecraft/world/level/levelgen/DensityFunction$ContextProvider doj$a
	fillAllDirectly ([DLnet/minecraft/world/level/levelgen/DensityFunction;)V a
	forIndex (I)Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext; a
net/minecraft/world/level/levelgen/DensityFunction$FunctionContext doj$b
	blockX ()I a
	blockY ()I b
	blockZ ()I c
	getBlender ()Lnet/minecraft/world/level/levelgen/blending/Blender; d
net/minecraft/world/level/levelgen/DensityFunction$NoiseHolder doj$c
	CODEC a
	noise c
	noiseData b
	getValue (DDD)D a
	maxValue ()D a
	noise ()Lnet/minecraft/world/level/levelgen/synth/NormalNoise; c
	noiseData ()Lnet/minecraft/core/Holder; b
net/minecraft/world/level/levelgen/DensityFunction$SimpleFunction doj$d
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
net/minecraft/world/level/levelgen/DensityFunction$SinglePointContext doj$e
	blockX a
	blockY b
	blockZ c
	blockX ()I a
	blockY ()I b
	blockZ ()I c
net/minecraft/world/level/levelgen/DensityFunction$Visitor doj$f
	visitNoise (Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder;)Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; a
net/minecraft/world/level/levelgen/DensityFunctions dok
	CODEC c
	DIRECT_CODEC b
	MAX_REASONABLE_NOISE_VALUE a
	NOISE_VALUE_CODEC d
	add (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	blendAlpha ()Lnet/minecraft/world/level/levelgen/DensityFunction; b
	blendDensity (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; f
	blendOffset ()Lnet/minecraft/world/level/levelgen/DensityFunction; c
	bootstrap (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec; a
	cache2d (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; c
	cacheAllInCell (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; e
	cacheOnce (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; d
	constant (D)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	doubleFunctionArgumentCodec (Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/util/KeyDispatchDataCodec; a
	endIslands (J)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	flatCache (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; b
	interpolated (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	lerp (Lnet/minecraft/world/level/levelgen/DensityFunction;DLnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	lerp (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	makeCodec (Lcom/mojang/serialization/MapCodec;)Lnet/minecraft/util/KeyDispatchDataCodec; a
	map (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	mapFromUnitTo (Lnet/minecraft/world/level/levelgen/DensityFunction;DD)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	mappedNoise (Lnet/minecraft/core/Holder;DD)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	mappedNoise (Lnet/minecraft/core/Holder;DDD)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	mappedNoise (Lnet/minecraft/core/Holder;DDDD)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	max (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; d
	min (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; c
	mul (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; b
	noise (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	noise (Lnet/minecraft/core/Holder;D)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	noise (Lnet/minecraft/core/Holder;DD)Lnet/minecraft/world/level/levelgen/DensityFunction; b
	rangeChoice (Lnet/minecraft/world/level/levelgen/DensityFunction;DDLnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	register (Lnet/minecraft/core/Registry;Ljava/lang/String;Lnet/minecraft/util/KeyDispatchDataCodec;)Lcom/mojang/serialization/Codec; a
	shift (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; d
	shiftA (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; b
	shiftB (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; c
	shiftedNoise2d (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;DLnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	singleArgumentCodec (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/util/KeyDispatchDataCodec; a
	singleFunctionArgumentCodec (Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/util/KeyDispatchDataCodec; a
	spline (Lnet/minecraft/util/CubicSpline;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	weirdScaledSampler (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler$RarityValueMapper;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	yClampedGradient (IIDD)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	zero ()Lnet/minecraft/world/level/levelgen/DensityFunction; a
net/minecraft/world/level/levelgen/DensityFunctions$Ap2 dok$a
	argument1 f
	argument2 g
	maxValue i
	minValue h
	type e
	argument1 ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
	argument2 ()Lnet/minecraft/world/level/levelgen/DensityFunction; l
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type; j
net/minecraft/world/level/levelgen/DensityFunctions$BeardifierMarker dok$b
	$VALUES f
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$BeardifierMarker; j
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	maxValue ()D b
	minValue ()D a
net/minecraft/world/level/levelgen/DensityFunctions$BeardifierOrMarker dok$c
	CODEC e
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
net/minecraft/world/level/levelgen/DensityFunctions$BlendAlpha dok$d
	$VALUES f
	CODEC e
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$BlendAlpha; j
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	maxValue ()D b
	minValue ()D a
net/minecraft/world/level/levelgen/DensityFunctions$BlendDensity dok$e
	CODEC e
	input a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; j
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	transform (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;D)D a
net/minecraft/world/level/levelgen/DensityFunctions$BlendOffset dok$f
	$VALUES f
	CODEC e
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$BlendOffset; j
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	maxValue ()D b
	minValue ()D a
net/minecraft/world/level/levelgen/DensityFunctions$Clamp dok$g
	CODEC a
	DATA_CODEC h
	input e
	maxValue g
	minValue f
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; aC_
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	transform (D)D a
net/minecraft/world/level/levelgen/DensityFunctions$Constant dok$h
	CODEC e
	ZERO f
	value a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	maxValue ()D b
	minValue ()D a
	value ()D j
net/minecraft/world/level/levelgen/DensityFunctions$EndIslandDensityFunction dok$i
	CODEC a
	ISLAND_THRESHOLD e
	islandNoise f
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	getHeightValue (Lnet/minecraft/world/level/levelgen/synth/SimplexNoise;II)F a
	maxValue ()D b
	minValue ()D a
net/minecraft/world/level/levelgen/DensityFunctions$HolderHolder dok$j
	function a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	function ()Lnet/minecraft/core/Holder; j
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
net/minecraft/world/level/levelgen/DensityFunctions$Mapped dok$k
	input e
	maxValue g
	minValue f
	type a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	create (Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped; a
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; aC_
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped; b
	maxValue ()D b
	minValue ()D a
	transform (D)D a
	transform (Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type;D)D a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type; k
net/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type dok$k$a
	$VALUES i
	ABS a
	CUBE c
	HALF_NEGATIVE d
	QUARTER_NEGATIVE e
	SQUARE b
	SQUEEZE f
	codec h
	name g
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/DensityFunctions$Marker dok$l
	type a
	wrapped e
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	maxValue ()D b
	minValue ()D a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/DensityFunctions$Marker$Type dok$l$a
	$VALUES h
	Cache2D c
	CacheAllInCell e
	CacheOnce d
	FlatCache b
	Interpolated a
	codec g
	name f
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/DensityFunctions$MarkerOrMarked dok$m
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd dok$n
	argument i
	input f
	maxValue h
	minValue g
	specificType e
	argument ()D n
	argument1 ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
	argument2 ()Lnet/minecraft/world/level/levelgen/DensityFunction; l
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; aC_
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	specificType ()Lnet/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd$Type; m
	transform (D)D a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type; j
net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd$Type dok$n$a
	$VALUES c
	ADD b
	MUL a
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd$Type; a
net/minecraft/world/level/levelgen/DensityFunctions$Noise dok$o
	CODEC e
	DATA_CODEC a
	noise f
	xzScale g
	yScale h
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	noise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; j
	xzScale ()D k
	yScale ()D l
net/minecraft/world/level/levelgen/DensityFunctions$PureTransformer dok$p
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; aC_
	transform (D)D a
net/minecraft/world/level/levelgen/DensityFunctions$RangeChoice dok$q
	CODEC e
	DATA_CODEC a
	input f
	maxExclusive h
	minInclusive g
	whenInRange i
	whenOutOfRange j
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; j
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxExclusive ()D l
	maxValue ()D b
	minInclusive ()D k
	minValue ()D a
	whenInRange ()Lnet/minecraft/world/level/levelgen/DensityFunction; m
	whenOutOfRange ()Lnet/minecraft/world/level/levelgen/DensityFunction; n
net/minecraft/world/level/levelgen/DensityFunctions$Shift dok$r
	CODEC e
	offsetNoise a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	offsetNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; j
net/minecraft/world/level/levelgen/DensityFunctions$ShiftA dok$s
	CODEC e
	offsetNoise a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	offsetNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; j
net/minecraft/world/level/levelgen/DensityFunctions$ShiftB dok$t
	CODEC e
	offsetNoise a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	offsetNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; j
net/minecraft/world/level/levelgen/DensityFunctions$ShiftNoise dok$u
	compute (DDD)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	maxValue ()D b
	minValue ()D a
	offsetNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; j
net/minecraft/world/level/levelgen/DensityFunctions$ShiftedNoise dok$v
	CODEC a
	DATA_CODEC k
	noise j
	shiftX e
	shiftY f
	shiftZ g
	xzScale h
	yScale i
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	noise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; o
	shiftX ()Lnet/minecraft/world/level/levelgen/DensityFunction; j
	shiftY ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
	shiftZ ()Lnet/minecraft/world/level/levelgen/DensityFunction; l
	xzScale ()D m
	yScale ()D n
net/minecraft/world/level/levelgen/DensityFunctions$Spline dok$w
	CODEC a
	DATA_CODEC g
	SPLINE_CODEC f
	spline e
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	spline ()Lnet/minecraft/util/CubicSpline; j
net/minecraft/world/level/levelgen/DensityFunctions$Spline$Coordinate dok$w$a
	CODEC b
	function c
	apply (Ljava/lang/Object;)F a
	apply (Lnet/minecraft/world/level/levelgen/DensityFunctions$Spline$Point;)F a
	function ()Lnet/minecraft/core/Holder; a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunctions$Spline$Coordinate; a
	maxValue ()F c
	minValue ()F b
net/minecraft/world/level/levelgen/DensityFunctions$Spline$Point dok$w$b
	context a
	context ()Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext; a
net/minecraft/world/level/levelgen/DensityFunctions$TransformerWithContext dok$x
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; j
	transform (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;D)D a
net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction dok$y
	LOGGER a
	argument1 ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
	argument2 ()Lnet/minecraft/world/level/levelgen/DensityFunction; l
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	create (Lnet/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction; a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type; j
net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type dok$y$a
	$VALUES g
	ADD a
	MAX d
	MIN c
	MUL b
	codec e
	name f
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler dok$z
	CODEC a
	DATA_CODEC h
	input e
	noise f
	rarityValueMapper g
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; j
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	noise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; k
	rarityValueMapper ()Lnet/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler$RarityValueMapper; l
	transform (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;D)D a
net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler$RarityValueMapper dok$z$a
	$VALUES g
	CODEC c
	TYPE1 a
	TYPE2 b
	mapper e
	maxRarity f
	name d
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler$RarityValueMapper; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/DensityFunctions$YClampedGradient dok$aa
	CODEC a
	DATA_CODEC i
	fromValue g
	fromY e
	toValue h
	toY f
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fromValue ()D l
	fromY ()I j
	maxValue ()D b
	minValue ()D a
	toValue ()D m
	toY ()I k
net/minecraft/world/level/levelgen/FlatLevelSource dol
	CODEC c
	settings d
	addDebugScreenInfo (Ljava/util/List;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/core/BlockPos;)V a
	applyCarvers (Lnet/minecraft/server/level/WorldGenRegion;JLnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	buildSurface (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	createState (Lnet/minecraft/core/HolderLookup;Lnet/minecraft/world/level/levelgen/RandomState;J)Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; a
	fillFromNoise (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	getBaseColumn (IILnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/NoiseColumn; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I a
	getGenDepth ()I d
	getMinY ()I f
	getSeaLevel ()I e
	getSpawnHeight (Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	settings ()Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; g
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
net/minecraft/world/level/levelgen/GenerationStep dom
net/minecraft/world/level/levelgen/GenerationStep$Carving dom$a
	$VALUES e
	AIR a
	CODEC c
	LIQUID b
	name d
	$values ()[Lnet/minecraft/world/level/levelgen/GenerationStep$Carving; b
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/GenerationStep$Decoration dom$b
	$VALUES n
	CODEC l
	FLUID_SPRINGS i
	LAKES b
	LOCAL_MODIFICATIONS c
	RAW_GENERATION a
	STRONGHOLDS f
	SURFACE_STRUCTURES e
	TOP_LAYER_MODIFICATION k
	UNDERGROUND_DECORATION h
	UNDERGROUND_ORES g
	UNDERGROUND_STRUCTURES d
	VEGETAL_DECORATION j
	name m
	$values ()[Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration; b
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/GeodeBlockSettings don
	CODEC i
	alternateInnerLayerProvider c
	cannotReplace g
	fillingProvider a
	innerLayerProvider b
	innerPlacements f
	invalidBlocks h
	middleLayerProvider d
	outerLayerProvider e
net/minecraft/world/level/levelgen/GeodeCrackSettings doo
	CODEC a
	baseCrackSize c
	crackPointOffset d
	generateCrackChance b
net/minecraft/world/level/levelgen/GeodeLayerSettings dop
	CODEC a
	LAYER_RANGE f
	filling b
	innerLayer c
	middleLayer d
	outerLayer e
net/minecraft/world/level/levelgen/Heightmap doq
	LOGGER a
	MATERIAL_MOTION_BLOCKING c
	NOT_AIR b
	chunk f
	data d
	isOpaque e
	getFirstAvailable (I)I a
	getFirstAvailable (II)I a
	getHighestTaken (II)I b
	getIndex (II)I c
	getRawData ()[J a
	primeHeightmaps (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/Set;)V a
	setHeight (III)V a
	setRawData (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	update (IIILnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/Heightmap$Types doq$a
	$VALUES k
	CODEC g
	MOTION_BLOCKING e
	MOTION_BLOCKING_NO_LEAVES f
	OCEAN_FLOOR d
	OCEAN_FLOOR_WG c
	WORLD_SURFACE b
	WORLD_SURFACE_WG a
	isOpaque j
	serializationKey h
	usage i
	$values ()[Lnet/minecraft/world/level/levelgen/Heightmap$Types; f
	getSerializationKey ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
	isOpaque ()Ljava/util/function/Predicate; e
	keepAfterWorldgen ()Z d
	sendToClient ()Z b
net/minecraft/world/level/levelgen/Heightmap$Usage doq$b
	$VALUES d
	CLIENT c
	LIVE_WORLD b
	WORLDGEN a
	$values ()[Lnet/minecraft/world/level/levelgen/Heightmap$Usage; a
net/minecraft/world/level/levelgen/LegacyRandomSource dor
	INCREMENT g
	MODULUS_BITS d
	MODULUS_MASK e
	MULTIPLIER f
	gaussianSource i
	seed h
	fork ()Lnet/minecraft/util/RandomSource; d
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	next (I)I c
	nextGaussian ()D k
	setSeed (J)V b
net/minecraft/world/level/levelgen/LegacyRandomSource$LegacyPositionalRandomFactory dor$a
	seed a
	at (III)Lnet/minecraft/util/RandomSource; a
	fromHashOf (Ljava/lang/String;)Lnet/minecraft/util/RandomSource; a
	parityConfigString (Ljava/lang/StringBuilder;)V a
net/minecraft/world/level/levelgen/MarsagliaPolarGaussian dos
	haveNextNextGaussian c
	nextNextGaussian b
	randomSource a
	nextGaussian ()D b
	reset ()V a
net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator dot
	AIR d
	CODEC c
	globalFluidPicker f
	settings e
	addDebugScreenInfo (Ljava/util/List;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/core/BlockPos;)V a
	applyCarvers (Lnet/minecraft/server/level/WorldGenRegion;JLnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	buildSurface (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	buildSurface (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/levelgen/blending/Blender;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	createBiomes (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	createFluidPicker (Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings;)Lnet/minecraft/world/level/levelgen/Aquifer$FluidPicker; a
	createNoiseChunk (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/levelgen/NoiseChunk; a
	debugPreliminarySurfaceLevel (Lnet/minecraft/world/level/levelgen/NoiseChunk;IIILnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	doCreateBiomes (Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	doFill (Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/ChunkAccess;II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	fillFromNoise (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	generatorSettings ()Lnet/minecraft/core/Holder; g
	getBaseColumn (IILnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/NoiseColumn; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I a
	getGenDepth ()I d
	getMinY ()I f
	getSeaLevel ()I e
	iterateNoiseColumn (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;IILorg/apache/commons/lang3/mutable/MutableObject;Ljava/util/function/Predicate;)Ljava/util/OptionalInt; a
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
	stable (Lnet/minecraft/resources/ResourceKey;)Z a
net/minecraft/world/level/levelgen/NoiseChunk dou
	aquifer m
	arrayIndex I
	arrayInterpolationCounter H
	beardifier s
	blendAlpha q
	blendOffset r
	blender p
	blockStateRule o
	cellCaches j
	cellCountXZ b
	cellCountY c
	cellHeight x
	cellNoiseMinY d
	cellStartBlockX A
	cellStartBlockY B
	cellStartBlockZ C
	cellWidth w
	fillingCell z
	firstCellX e
	firstCellZ f
	firstNoiseX g
	firstNoiseZ h
	inCellX D
	inCellY E
	inCellZ F
	initialDensityNoJaggedness n
	interpolating y
	interpolationCounter G
	interpolators i
	lastBlendingDataPos t
	lastBlendingOutput u
	noiseSettings a
	noiseSizeXZ v
	preliminarySurfaceLevel l
	sliceFillingContextProvider J
	wrapped k
	advanceCellX (I)V b
	aquifer ()Lnet/minecraft/world/level/levelgen/Aquifer; i
	blockX ()I a
	blockY ()I b
	blockZ ()I c
	cachedClimateSampler (Lnet/minecraft/world/level/levelgen/NoiseRouter;Ljava/util/List;)Lnet/minecraft/world/level/biome/Climate$Sampler; a
	cellHeight ()I k
	cellWidth ()I j
	computePreliminarySurfaceLevel (J)I a
	fillAllDirectly ([DLnet/minecraft/world/level/levelgen/DensityFunction;)V a
	fillSlice (ZI)V a
	forChunk (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/DensityFunctions$BeardifierOrMarker;Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings;Lnet/minecraft/world/level/levelgen/Aquifer$FluidPicker;Lnet/minecraft/world/level/levelgen/blending/Blender;)Lnet/minecraft/world/level/levelgen/NoiseChunk; a
	forIndex (I)Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext; a
	forIndex (I)Lnet/minecraft/world/level/levelgen/NoiseChunk; c
	getBlender ()Lnet/minecraft/world/level/levelgen/blending/Blender; d
	getInterpolatedState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getOrComputeBlendingOutput (II)Lnet/minecraft/world/level/levelgen/blending/Blender$BlendingOutput; c
	initializeForFirstCellX ()V f
	preliminarySurfaceLevel (II)I a
	selectCellYZ (II)V b
	stopInterpolation ()V g
	swapSlices ()V h
	updateForX (ID)V b
	updateForY (ID)V a
	updateForZ (ID)V c
	wrap (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	wrapNew (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; b
net/minecraft/world/level/levelgen/NoiseChunk$BlendAlpha dou$a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$BlendOffset dou$b
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$BlockStateFiller dou$c
net/minecraft/world/level/levelgen/NoiseChunk$Cache2D dou$d
	function a
	lastPos2D e
	lastValue f
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$CacheAllInCell dou$e
	noiseFiller e
	values f
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$CacheOnce dou$f
	function e
	lastArray i
	lastArrayCounter g
	lastCounter f
	lastValue h
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$FlatCache dou$g
	noiseFiller e
	values f
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$NoiseChunkDensityFunction dou$h
	maxValue ()D b
	minValue ()D a
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$NoiseInterpolator dou$i
	noise000 h
	noise001 i
	noise010 l
	noise011 m
	noise100 j
	noise101 k
	noise110 n
	noise111 o
	noiseFiller g
	slice0 e
	slice1 f
	value v
	valueXZ00 p
	valueXZ01 r
	valueXZ10 q
	valueXZ11 s
	valueZ0 t
	valueZ1 u
	allocateSlice (II)[[D a
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	selectCellYZ (II)V b
	swapSlices ()V l
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	updateForX (D)V b
	updateForY (D)V a
	updateForZ (D)V c
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseGeneratorSettings dov
	AMPLIFIED e
	CAVES h
	CODEC b
	DIRECT_CODEC a
	END g
	FLOATING_ISLANDS i
	LARGE_BIOMES d
	NETHER f
	OVERWORLD c
	aquifersEnabled r
	defaultBlock k
	defaultFluid l
	disableMobGeneration q
	noiseRouter m
	noiseSettings j
	oreVeinsEnabled s
	seaLevel p
	spawnTarget o
	surfaceRule n
	useLegacyRandomSource t
	aquifersEnabled ()Z m
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	caves (Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; d
	defaultBlock ()Lnet/minecraft/world/level/block/state/BlockState; g
	defaultFluid ()Lnet/minecraft/world/level/block/state/BlockState; h
	disableMobGeneration ()Z a
	dummy ()Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; e
	end (Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; b
	floatingIslands (Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; e
	getRandomSource ()Lnet/minecraft/world/level/levelgen/WorldgenRandom$Algorithm; d
	isAquifersEnabled ()Z b
	nether (Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; c
	noiseRouter ()Lnet/minecraft/world/level/levelgen/NoiseRouter; i
	noiseSettings ()Lnet/minecraft/world/level/levelgen/NoiseSettings; f
	oreVeinsEnabled ()Z c
	overworld (Lnet/minecraft/data/worldgen/BootstapContext;ZZ)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; a
	seaLevel ()I l
	spawnTarget ()Ljava/util/List; k
	surfaceRule ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; j
	useLegacyRandomSource ()Z n
net/minecraft/world/level/levelgen/NoiseRouter dow
	CODEC a
	barrierNoise b
	continents h
	depth j
	erosion i
	finalDensity m
	fluidLevelFloodednessNoise c
	fluidLevelSpreadNoise d
	initialDensityWithoutJaggedness l
	lavaNoise e
	ridges k
	temperature f
	vegetation g
	veinGap p
	veinRidged o
	veinToggle n
	barrierNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction; a
	continents ()Lnet/minecraft/world/level/levelgen/DensityFunction; g
	depth ()Lnet/minecraft/world/level/levelgen/DensityFunction; i
	erosion ()Lnet/minecraft/world/level/levelgen/DensityFunction; h
	field (Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; a
	finalDensity ()Lnet/minecraft/world/level/levelgen/DensityFunction; l
	fluidLevelFloodednessNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction; b
	fluidLevelSpreadNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction; c
	initialDensityWithoutJaggedness ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
	lavaNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction; d
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/NoiseRouter; a
	ridges ()Lnet/minecraft/world/level/levelgen/DensityFunction; j
	temperature ()Lnet/minecraft/world/level/levelgen/DensityFunction; e
	vegetation ()Lnet/minecraft/world/level/levelgen/DensityFunction; f
	veinGap ()Lnet/minecraft/world/level/levelgen/DensityFunction; o
	veinRidged ()Lnet/minecraft/world/level/levelgen/DensityFunction; n
	veinToggle ()Lnet/minecraft/world/level/levelgen/DensityFunction; m
net/minecraft/world/level/levelgen/NoiseRouterData dox
	BASE_3D_NOISE_END A
	BASE_3D_NOISE_NETHER z
	BASE_3D_NOISE_OVERWORLD y
	BLENDING_FACTOR s
	BLENDING_JAGGEDNESS t
	CHEESE_NOISE_TARGET r
	CONTINENTS d
	CONTINENTS_LARGE l
	DEPTH k
	DEPTH_AMPLIFIED K
	DEPTH_LARGE F
	ENTRANCES O
	EROSION e
	EROSION_LARGE m
	FACTOR i
	FACTOR_AMPLIFIED I
	FACTOR_LARGE D
	GLOBAL_OFFSET a
	ISLAND_CHUNK_DISTANCE b
	ISLAND_CHUNK_DISTANCE_SQR c
	JAGGEDNESS j
	JAGGEDNESS_AMPLIFIED J
	JAGGEDNESS_LARGE E
	NOODLE P
	NOODLE_SPACING_AND_STRAIGHTNESS p
	OFFSET h
	OFFSET_AMPLIFIED H
	OFFSET_LARGE C
	ORE_THICKNESS n
	PILLARS Q
	RIDGES f
	RIDGES_FOLDED g
	SHIFT_X w
	SHIFT_Z x
	SLOPED_CHEESE B
	SLOPED_CHEESE_AMPLIFIED L
	SLOPED_CHEESE_END M
	SLOPED_CHEESE_LARGE G
	SPAGHETTI_2D S
	SPAGHETTI_2D_THICKNESS_MODULATOR R
	SPAGHETTI_ROUGHNESS_FUNCTION N
	SURFACE_DENSITY_THRESHOLD q
	VEININESS_FREQUENCY o
	Y v
	ZERO u
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/core/Holder; a
	caves (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/NoiseRouter; b
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	end (Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/NoiseRouter; a
	entrances (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/DensityFunction; d
	floatingIslands (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/NoiseRouter; c
	getFunction (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	nether (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/NoiseRouter; a
	noNewCaves (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/NoiseRouter; b
	noiseGradientDensity (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; b
	none ()Lnet/minecraft/world/level/levelgen/NoiseRouter; a
	noodle (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/DensityFunction; e
	overworld (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;ZZ)Lnet/minecraft/world/level/levelgen/NoiseRouter; a
	peaksAndValleys (F)F a
	peaksAndValleys (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	pillars (Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/DensityFunction; c
	postProcess (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; b
	registerAndWrap (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	registerTerrainNoises (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/core/Holder;Lnet/minecraft/core/Holder;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Z)V a
	slide (Lnet/minecraft/world/level/levelgen/DensityFunction;IIIIDIID)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	slideEnd (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; c
	slideEndLike (Lnet/minecraft/world/level/levelgen/DensityFunction;II)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	slideNetherLike (Lnet/minecraft/core/HolderGetter;II)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	slideOverworld (ZLnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	spaghetti2D (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/DensityFunction; f
	spaghettiRoughnessFunction (Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/DensityFunction; b
	splineWithBlending (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	underground (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	yLimitedInterpolatable (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;III)Lnet/minecraft/world/level/levelgen/DensityFunction; a
net/minecraft/world/level/levelgen/NoiseRouterData$QuantizedSpaghettiRarity dox$a
	getSpaghettiRarity3D (D)D b
	getSphaghettiRarity2D (D)D a
net/minecraft/world/level/levelgen/NoiseSettings doy
	CAVES_NOISE_SETTINGS e
	CODEC a
	END_NOISE_SETTINGS d
	FLOATING_ISLANDS_NOISE_SETTINGS f
	NETHER_NOISE_SETTINGS c
	OVERWORLD_NOISE_SETTINGS b
	height h
	minY g
	noiseSizeHorizontal i
	noiseSizeVertical j
	clampToHeightAccessor (Lnet/minecraft/world/level/LevelHeightAccessor;)Lnet/minecraft/world/level/levelgen/NoiseSettings; a
	create (IIII)Lnet/minecraft/world/level/levelgen/NoiseSettings; a
	getCellHeight ()I a
	getCellWidth ()I b
	guardY (Lnet/minecraft/world/level/levelgen/NoiseSettings;)Lcom/mojang/serialization/DataResult; a
	height ()I d
	minY ()I c
	noiseSizeHorizontal ()I e
	noiseSizeVertical ()I f
net/minecraft/world/level/levelgen/Noises doz
	AQUIFER_BARRIER k
	AQUIFER_FLUID_LEVEL_FLOODEDNESS l
	AQUIFER_FLUID_LEVEL_SPREAD n
	AQUIFER_LAVA m
	BADLANDS_PILLAR Q
	BADLANDS_PILLAR_ROOF R
	BADLANDS_SURFACE S
	CALCITE X
	CAVE_CHEESE D
	CAVE_ENTRANCE B
	CAVE_LAYER C
	CLAY_BANDS_OFFSET P
	CONTINENTALNESS c
	CONTINENTALNESS_LARGE g
	EROSION d
	EROSION_LARGE h
	GRAVEL Y
	GRAVEL_LAYER ad
	ICE ab
	ICEBERG_PILLAR T
	ICEBERG_PILLAR_ROOF U
	ICEBERG_SURFACE V
	JAGGED M
	NETHERRACK af
	NETHER_STATE_SELECTOR ah
	NETHER_WART ag
	NOODLE I
	NOODLE_RIDGE_A K
	NOODLE_RIDGE_B L
	NOODLE_THICKNESS J
	ORE_GAP H
	ORE_VEININESS E
	ORE_VEIN_A F
	ORE_VEIN_B G
	PACKED_ICE aa
	PATCH ae
	PILLAR o
	PILLAR_RARENESS p
	PILLAR_THICKNESS q
	POWDER_SNOW Z
	RIDGE i
	SHIFT j
	SOUL_SAND_LAYER ac
	SPAGHETTI_2D r
	SPAGHETTI_2D_ELEVATION s
	SPAGHETTI_2D_MODULATOR t
	SPAGHETTI_2D_THICKNESS u
	SPAGHETTI_3D_1 v
	SPAGHETTI_3D_2 w
	SPAGHETTI_3D_RARITY x
	SPAGHETTI_3D_THICKNESS y
	SPAGHETTI_ROUGHNESS z
	SPAGHETTI_ROUGHNESS_MODULATOR A
	SURFACE N
	SURFACE_SECONDARY O
	SWAMP W
	TEMPERATURE a
	TEMPERATURE_LARGE e
	VEGETATION b
	VEGETATION_LARGE f
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	instantiate (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/world/level/levelgen/PositionalRandomFactory;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
net/minecraft/world/level/levelgen/OreVeinifier dpa
	CHANCE_OF_RAW_ORE_BLOCK h
	EDGE_ROUNDOFF_BEGIN b
	MAX_EDGE_ROUNDOFF c
	MAX_RICHNESS f
	MAX_RICHNESS_THRESHOLD g
	MIN_RICHNESS e
	SKIP_ORE_IF_GAP_NOISE_IS_BELOW i
	VEININESS_THRESHOLD a
	VEIN_SOLIDNESS d
	create (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/PositionalRandomFactory;)Lnet/minecraft/world/level/levelgen/NoiseChunk$BlockStateFiller; a
net/minecraft/world/level/levelgen/OreVeinifier$VeinType dpa$a
	$VALUES h
	COPPER a
	IRON b
	filler g
	maxY d
	minY c
	ore e
	rawOreBlock f
	$values ()[Lnet/minecraft/world/level/levelgen/OreVeinifier$VeinType; a
net/minecraft/world/level/levelgen/PatrolSpawner dpb
	nextTick a
	spawnPatrolMember (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Z)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/levelgen/PhantomSpawner dpc
	nextTick a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/levelgen/PositionalRandomFactory dpd
	at (III)Lnet/minecraft/util/RandomSource; a
	at (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/util/RandomSource; a
	fromHashOf (Ljava/lang/String;)Lnet/minecraft/util/RandomSource; a
	fromHashOf (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/util/RandomSource; a
	parityConfigString (Ljava/lang/StringBuilder;)V a
net/minecraft/world/level/levelgen/RandomState dpe
	aquiferRandom f
	noiseIntances h
	noises b
	oreRandom g
	positionalRandoms i
	random a
	router c
	sampler d
	surfaceSystem e
	aquiferRandom ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; d
	create (Lnet/minecraft/core/HolderGetter$Provider;Lnet/minecraft/resources/ResourceKey;J)Lnet/minecraft/world/level/levelgen/RandomState; a
	create (Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings;Lnet/minecraft/core/HolderGetter;J)Lnet/minecraft/world/level/levelgen/RandomState; a
	getOrCreateNoise (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
	getOrCreateRandomFactory (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; a
	oreRandom ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	router ()Lnet/minecraft/world/level/levelgen/NoiseRouter; a
	sampler ()Lnet/minecraft/world/level/biome/Climate$Sampler; b
	surfaceSystem ()Lnet/minecraft/world/level/levelgen/SurfaceSystem; c
net/minecraft/world/level/levelgen/RandomSupport dpf
	GOLDEN_RATIO_64 a
	MD5_128 c
	SEED_UNIQUIFIER d
	SILVER_RATIO_64 b
	generateUniqueSeed ()J a
	mixStafford13 (J)J a
	seedFromHashOf (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/RandomSupport$Seed128bit; a
	upgradeSeedTo128bit (J)Lnet/minecraft/world/level/levelgen/RandomSupport$Seed128bit; c
	upgradeSeedTo128bitUnmixed (J)Lnet/minecraft/world/level/levelgen/RandomSupport$Seed128bit; b
net/minecraft/world/level/levelgen/RandomSupport$Seed128bit dpf$a
	seedHi b
	seedLo a
	mixed ()Lnet/minecraft/world/level/levelgen/RandomSupport$Seed128bit; a
	seedHi ()J c
	seedLo ()J b
	xor (JJ)Lnet/minecraft/world/level/levelgen/RandomSupport$Seed128bit; a
	xor (Lnet/minecraft/world/level/levelgen/RandomSupport$Seed128bit;)Lnet/minecraft/world/level/levelgen/RandomSupport$Seed128bit; a
net/minecraft/world/level/levelgen/SingleThreadedRandomSource dpg
	INCREMENT g
	MODULUS_BITS d
	MODULUS_MASK e
	MULTIPLIER f
	gaussianSource i
	seed h
	fork ()Lnet/minecraft/util/RandomSource; d
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	next (I)I c
	nextGaussian ()D k
	setSeed (J)V b
net/minecraft/world/level/levelgen/SurfaceRules dph
	DEEP_UNDER_FLOOR c
	ON_CEILING e
	ON_FLOOR a
	UNDER_CEILING f
	UNDER_FLOOR b
	VERY_DEEP_UNDER_FLOOR d
	abovePreliminarySurface ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; c
	bandlands ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; e
	hole ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; b
	ifTrue (Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	isBiome (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource; a
	isBiome ([Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	noiseCondition (Lnet/minecraft/resources/ResourceKey;D)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	noiseCondition (Lnet/minecraft/resources/ResourceKey;DD)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	not (Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	register (Lnet/minecraft/core/Registry;Ljava/lang/String;Lnet/minecraft/util/KeyDispatchDataCodec;)Lcom/mojang/serialization/Codec; a
	sequence ([Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	state (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	steep ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	stoneDepthCheck (IZILnet/minecraft/world/level/levelgen/placement/CaveSurface;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	stoneDepthCheck (IZLnet/minecraft/world/level/levelgen/placement/CaveSurface;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	temperature ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; d
	verticalGradient (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	waterBlockCheck (II)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	waterStartCheck (II)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; b
	yBlockCheck (Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	yStartCheck (Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; b
net/minecraft/world/level/levelgen/SurfaceRules$AbovePreliminarySurface dph$a
	$VALUES d
	CODEC c
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/SurfaceRules$AbovePreliminarySurface; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$Bandlands dph$b
	$VALUES d
	CODEC c
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/SurfaceRules$Bandlands; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource dph$c
	CODEC a
	biomeNameTest d
	biomes c
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$BlockRuleSource dph$d
	CODEC d
	resultState a
	rule c
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	resultState ()Lnet/minecraft/world/level/block/state/BlockState; b
	rule ()Lnet/minecraft/world/level/levelgen/SurfaceRules$StateRule; c
net/minecraft/world/level/levelgen/SurfaceRules$Condition dph$e
	test ()Z b
net/minecraft/world/level/levelgen/SurfaceRules$ConditionSource dph$f
	CODEC b
	bootstrap (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$Context dph$g
	HOW_FAR_BELOW_PRELIMINARY_SURFACE_LEVEL_TO_BUILD_SURFACE a
	SURFACE_CELL_BITS b
	SURFACE_CELL_MASK d
	SURFACE_CELL_SIZE c
	abovePreliminarySurface i
	biome A
	biomeGetter m
	blockX r
	blockY B
	blockZ s
	chunk k
	context n
	hole h
	lastMinSurfaceLevelUpdate w
	lastPreliminarySurfaceCellOrigin o
	lastSurfaceDepth2Update u
	lastUpdateXZ q
	lastUpdateY y
	minSurfaceLevel x
	noiseChunk l
	pos z
	preliminarySurfaceCache p
	randomState j
	steep g
	stoneDepthAbove E
	stoneDepthBelow D
	surfaceDepth t
	surfaceSecondary v
	system e
	temperature f
	waterHeight C
	blockCoordToSurfaceCell (I)I a
	getMinSurfaceLevel ()I b
	getSurfaceSecondary ()D a
	surfaceCellToBlockCoord (I)I b
	updateXZ (II)V a
	updateY (IIIIII)V a
net/minecraft/world/level/levelgen/SurfaceRules$Context$AbovePreliminarySurfaceCondition dph$g$a
	test ()Z b
net/minecraft/world/level/levelgen/SurfaceRules$Context$HoleCondition dph$g$b
	compute ()Z a
net/minecraft/world/level/levelgen/SurfaceRules$Context$SteepMaterialCondition dph$g$c
	compute ()Z a
net/minecraft/world/level/levelgen/SurfaceRules$Context$TemperatureHelperCondition dph$g$d
	compute ()Z a
net/minecraft/world/level/levelgen/SurfaceRules$Hole dph$h
	$VALUES d
	CODEC c
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/SurfaceRules$Hole; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$LazyCondition dph$i
	context c
	lastUpdate a
	result d
	compute ()Z a
	getContextLastUpdate ()J c
	test ()Z b
net/minecraft/world/level/levelgen/SurfaceRules$LazyXZCondition dph$j
	getContextLastUpdate ()J c
net/minecraft/world/level/levelgen/SurfaceRules$LazyYCondition dph$k
	getContextLastUpdate ()J c
net/minecraft/world/level/levelgen/SurfaceRules$NoiseThresholdConditionSource dph$l
	CODEC e
	maxThreshold d
	minThreshold c
	noise a
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	maxThreshold ()D d
	minThreshold ()D c
	noise ()Lnet/minecraft/resources/ResourceKey; b
net/minecraft/world/level/levelgen/SurfaceRules$NotCondition dph$m
	target a
	target ()Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	test ()Z b
net/minecraft/world/level/levelgen/SurfaceRules$NotConditionSource dph$n
	CODEC c
	target a
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	target ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; b
net/minecraft/world/level/levelgen/SurfaceRules$RuleSource dph$o
	CODEC b
	bootstrap (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$SequenceRule dph$p
	rules a
	rules ()Ljava/util/List; a
net/minecraft/world/level/levelgen/SurfaceRules$SequenceRuleSource dph$q
	CODEC c
	sequence a
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	sequence ()Ljava/util/List; b
net/minecraft/world/level/levelgen/SurfaceRules$StateRule dph$r
	state a
	state ()Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/SurfaceRules$Steep dph$s
	$VALUES d
	CODEC c
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/SurfaceRules$Steep; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$StoneDepthCheck dph$t
	CODEC f
	addSurfaceDepth c
	offset a
	secondaryDepthRange d
	surfaceType e
	addSurfaceDepth ()Z c
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	offset ()I b
	secondaryDepthRange ()I d
	surfaceType ()Lnet/minecraft/world/level/levelgen/placement/CaveSurface; e
net/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule dph$u
net/minecraft/world/level/levelgen/SurfaceRules$Temperature dph$v
	$VALUES d
	CODEC c
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/SurfaceRules$Temperature; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$TestRule dph$w
	condition a
	followup b
	condition ()Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	followup ()Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule; b
net/minecraft/world/level/levelgen/SurfaceRules$TestRuleSource dph$x
	CODEC d
	ifTrue a
	thenRun c
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	ifTrue ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; b
	thenRun ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; c
net/minecraft/world/level/levelgen/SurfaceRules$VerticalGradientConditionSource dph$y
	CODEC e
	falseAtAndAbove d
	randomName a
	trueAtAndBelow c
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	falseAtAndAbove ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; d
	randomName ()Lnet/minecraft/resources/ResourceLocation; b
	trueAtAndBelow ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; c
net/minecraft/world/level/levelgen/SurfaceRules$WaterConditionSource dph$z
	CODEC e
	addStoneDepth d
	offset a
	surfaceDepthMultiplier c
	addStoneDepth ()Z d
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	offset ()I b
	surfaceDepthMultiplier ()I c
net/minecraft/world/level/levelgen/SurfaceRules$YConditionSource dph$aa
	CODEC e
	addStoneDepth d
	anchor a
	surfaceDepthMultiplier c
	addStoneDepth ()Z d
	anchor ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	surfaceDepthMultiplier ()I c
net/minecraft/world/level/levelgen/SurfaceSystem dpi
	BROWN_TERRACOTTA e
	LIGHT_GRAY_TERRACOTTA g
	ORANGE_TERRACOTTA b
	PACKED_ICE h
	RED_TERRACOTTA f
	SNOW_BLOCK i
	TERRACOTTA c
	WHITE_TERRACOTTA a
	YELLOW_TERRACOTTA d
	badlandsPillarNoise n
	badlandsPillarRoofNoise o
	badlandsSurfaceNoise p
	clayBands l
	clayBandsOffsetNoise m
	defaultBlock j
	icebergPillarNoise q
	icebergPillarRoofNoise r
	icebergSurfaceNoise s
	noiseRandom t
	seaLevel k
	surfaceNoise u
	surfaceSecondaryNoise v
	buildSurface (Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/core/Registry;ZLnet/minecraft/world/level/levelgen/WorldGenerationContext;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/NoiseChunk;Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;)V a
	erodedBadlandsExtension (Lnet/minecraft/world/level/chunk/BlockColumn;IIILnet/minecraft/world/level/LevelHeightAccessor;)V a
	frozenOceanExtension (ILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/chunk/BlockColumn;Lnet/minecraft/core/BlockPos$MutableBlockPos;III)V a
	generateBands (Lnet/minecraft/util/RandomSource;)[Lnet/minecraft/world/level/block/state/BlockState; a
	getBand (III)Lnet/minecraft/world/level/block/state/BlockState; a
	getSurfaceDepth (II)I a
	getSurfaceSecondary (II)D b
	isStone (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	makeBands (Lnet/minecraft/util/RandomSource;[Lnet/minecraft/world/level/block/state/BlockState;ILnet/minecraft/world/level/block/state/BlockState;)V a
	topMaterial (Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/NoiseChunk;Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
net/minecraft/world/level/levelgen/ThreadSafeLegacyRandomSource dpj
	INCREMENT g
	MODULUS_BITS d
	MODULUS_MASK e
	MULTIPLIER f
	gaussianSource i
	seed h
	fork ()Lnet/minecraft/util/RandomSource; d
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	next (I)I c
	nextGaussian ()D k
	setSeed (J)V b
net/minecraft/world/level/levelgen/VerticalAnchor dpk
	BOTTOM b
	CODEC a
	TOP c
	aboveBottom (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; b
	absolute (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; a
	belowTop (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; c
	bottom ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; a
	merge (Lcom/mojang/datafixers/util/Either;)Lnet/minecraft/world/level/levelgen/VerticalAnchor; a
	resolveY (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
	split (Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lcom/mojang/datafixers/util/Either; a
	top ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; b
net/minecraft/world/level/levelgen/VerticalAnchor$AboveBottom dpk$a
	CODEC d
	offset e
	offset ()I c
	resolveY (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/VerticalAnchor$Absolute dpk$b
	CODEC d
	y e
	resolveY (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
	y ()I c
net/minecraft/world/level/levelgen/VerticalAnchor$BelowTop dpk$c
	CODEC d
	offset e
	offset ()I c
	resolveY (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/WorldDimensions dpl
	BUILTIN_ORDER c
	CODEC a
	VANILLA_DIMENSION_COUNT d
	dimensions b
	bake (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/levelgen/WorldDimensions$Complete; a
	checkStability (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/dimension/LevelStem;)Lcom/mojang/serialization/Lifecycle; a
	dimensions ()Lnet/minecraft/core/Registry; d
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	isDebug ()Z c
	isStableEnd (Lnet/minecraft/world/level/dimension/LevelStem;)Z c
	isStableNether (Lnet/minecraft/world/level/dimension/LevelStem;)Z b
	isStableOverworld (Lnet/minecraft/world/level/dimension/LevelStem;)Z a
	isVanillaLike (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/dimension/LevelStem;)Z b
	keysInOrder (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
	levels ()Lcom/google/common/collect/ImmutableSet; b
	overworld ()Lnet/minecraft/world/level/chunk/ChunkGenerator; a
	replaceOverworldGenerator (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/world/level/levelgen/WorldDimensions; a
	specialWorldProperty (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/storage/PrimaryLevelData$SpecialWorldProperty; b
	withOverworld (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/core/Registry; a
	withOverworld (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/core/Registry; a
net/minecraft/world/level/levelgen/WorldDimensions$Complete dpl$b
	dimensions a
	specialWorldProperty b
	dimensions ()Lnet/minecraft/core/Registry; c
	dimensionsRegistryAccess ()Lnet/minecraft/core/RegistryAccess$Frozen; b
	lifecycle ()Lcom/mojang/serialization/Lifecycle; a
	specialWorldProperty ()Lnet/minecraft/world/level/storage/PrimaryLevelData$SpecialWorldProperty; d
net/minecraft/world/level/levelgen/WorldGenSettings dpm
	CODEC a
	dimensions c
	options b
	dimensions ()Lnet/minecraft/world/level/levelgen/WorldDimensions; b
	encode (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/levelgen/WorldOptions;Lnet/minecraft/core/RegistryAccess;)Lcom/mojang/serialization/DataResult; a
	encode (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/levelgen/WorldOptions;Lnet/minecraft/world/level/levelgen/WorldDimensions;)Lcom/mojang/serialization/DataResult; a
	options ()Lnet/minecraft/world/level/levelgen/WorldOptions; a
net/minecraft/world/level/levelgen/WorldGenerationContext dpn
	height b
	minY a
	getGenDepth ()I b
	getMinGenY ()I a
net/minecraft/world/level/levelgen/WorldOptions dpo
	CODEC a
	DEMO_OPTIONS b
	generateBonusChest e
	generateStructures d
	legacyCustomOptions f
	seed c
	defaultWithRandomSeed ()Lnet/minecraft/world/level/levelgen/WorldOptions; a
	generateBonusChest ()Z d
	generateStructures ()Z c
	isOldCustomizedWorld ()Z e
	parseSeed (Ljava/lang/String;)Ljava/util/OptionalLong; a
	randomSeed ()J f
	seed ()J b
	withBonusChest (Z)Lnet/minecraft/world/level/levelgen/WorldOptions; a
	withSeed (Ljava/util/OptionalLong;)Lnet/minecraft/world/level/levelgen/WorldOptions; a
	withStructures (Z)Lnet/minecraft/world/level/levelgen/WorldOptions; b
net/minecraft/world/level/levelgen/WorldgenRandom dpp
	count e
	randomSource d
	fork ()Lnet/minecraft/util/RandomSource; d
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	getCount ()I l
	next (I)I c
	seedSlimeChunk (IIJJ)Lnet/minecraft/util/RandomSource; a
	setDecorationSeed (JII)J a
	setFeatureSeed (JII)V b
	setLargeFeatureSeed (JII)V c
	setLargeFeatureWithSalt (JIII)V a
	setSeed (J)V b
net/minecraft/world/level/levelgen/WorldgenRandom$Algorithm dpp$a
	$VALUES d
	LEGACY a
	XOROSHIRO b
	constructor c
	$values ()[Lnet/minecraft/world/level/levelgen/WorldgenRandom$Algorithm; a
	newInstance (J)Lnet/minecraft/util/RandomSource; a
net/minecraft/world/level/levelgen/Xoroshiro128PlusPlus dpq
	CODEC a
	seedHi c
	seedLo b
	nextLong ()J a
net/minecraft/world/level/levelgen/XoroshiroRandomSource dpr
	CODEC b
	DOUBLE_UNIT d
	FLOAT_UNIT c
	gaussianSource f
	randomNumberGenerator e
	consumeCount (I)V b
	fork ()Lnet/minecraft/util/RandomSource; d
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	nextBits (I)J c
	nextBoolean ()Z h
	nextDouble ()D j
	nextFloat ()F i
	nextGaussian ()D k
	nextInt ()I f
	nextInt (I)I a
	nextLong ()J g
	setSeed (J)V b
net/minecraft/world/level/levelgen/XoroshiroRandomSource$XoroshiroPositionalRandomFactory dpr$a
	seedHi b
	seedLo a
	at (III)Lnet/minecraft/util/RandomSource; a
	fromHashOf (Ljava/lang/String;)Lnet/minecraft/util/RandomSource; a
	parityConfigString (Ljava/lang/StringBuilder;)V a
net/minecraft/world/level/levelgen/blending/Blender dps
	DENSITY_BLENDING_RANGE_CELLS e
	DENSITY_BLENDING_RANGE_CHUNKS f
	EMPTY a
	HEIGHT_BLENDING_RANGE_CELLS c
	HEIGHT_BLENDING_RANGE_CHUNKS d
	OLD_CHUNK_XZ_RADIUS g
	SHIFT_NOISE b
	densityBlendingData i
	heightAndBiomeBlendingData h
	addAroundOldChunksCarvingMaskFilter (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ProtoChunk;)V a
	blendBiome (III)Lnet/minecraft/core/Holder; a
	blendDensity (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;D)D a
	blendOffsetAndFactor (II)Lnet/minecraft/world/level/levelgen/blending/Blender$BlendingOutput; a
	distanceToCube (DDDDDD)D a
	empty ()Lnet/minecraft/world/level/levelgen/blending/Blender; a
	generateBorderTick (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos;)V a
	generateBorderTicks (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	getBiomeResolver (Lnet/minecraft/world/level/biome/BiomeResolver;)Lnet/minecraft/world/level/biome/BiomeResolver; a
	getBlendingDataValue (IIILnet/minecraft/world/level/levelgen/blending/Blender$CellValueGetter;)D a
	getBlendingDataValue (Lnet/minecraft/world/level/levelgen/blending/Blender$CellValueGetter;IIIII)D a
	heightToOffset (D)D a
	makeOffsetOldChunkDistanceGetter (Lnet/minecraft/core/Direction8;Lnet/minecraft/world/level/levelgen/blending/BlendingData;)Lnet/minecraft/world/level/levelgen/blending/Blender$DistanceGetter; a
	makeOldChunkDistanceGetter (Lnet/minecraft/world/level/levelgen/blending/BlendingData;Ljava/util/Map;)Lnet/minecraft/world/level/levelgen/blending/Blender$DistanceGetter; a
	of (Lnet/minecraft/server/level/WorldGenRegion;)Lnet/minecraft/world/level/levelgen/blending/Blender; a
net/minecraft/world/level/levelgen/blending/Blender$BlendingOutput dps$a
	alpha a
	blendingOffset b
	alpha ()D a
	blendingOffset ()D b
net/minecraft/world/level/levelgen/blending/Blender$CellValueGetter dps$b
net/minecraft/world/level/levelgen/blending/Blender$DistanceGetter dps$c
net/minecraft/world/level/levelgen/blending/BlendingData dpt
	AIR_DENSITY h
	BLENDING_DENSITY_FACTOR f
	CELLS_PER_SECTION_Y i
	CELL_COLUMN_COUNT o
	CELL_COLUMN_INSIDE_COUNT m
	CELL_COLUMN_OUTSIDE_COUNT n
	CELL_HEIGHT b
	CELL_HORIZONTAL_MAX_INDEX_INSIDE k
	CELL_HORIZONTAL_MAX_INDEX_OUTSIDE l
	CELL_RATIO c
	CELL_WIDTH a
	CODEC e
	DOUBLE_ARRAY_CODEC v
	NO_VALUE d
	QUARTS_PER_SECTION j
	SOLID_DENSITY g
	SURFACE_BLOCKS q
	areaWithOldGeneration p
	biomes t
	densities u
	hasCalculatedData r
	heights s
	addValuesForColumn (ILnet/minecraft/world/level/chunk/ChunkAccess;II)V a
	calculateData (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/Set;)V a
	cellCountPerColumn ()I b
	getAreaWithOldGeneration ()Lnet/minecraft/world/level/LevelHeightAccessor; a
	getBiomeColumn (Lnet/minecraft/world/level/chunk/ChunkAccess;II)Ljava/util/List; b
	getCellYIndex (I)I a
	getColumnMinY ()I d
	getDensity (III)D b
	getDensity ([DI)D a
	getDensityColumn (Lnet/minecraft/world/level/chunk/ChunkAccess;III)[D a
	getHeight (III)D a
	getHeightAtXZ (Lnet/minecraft/world/level/chunk/ChunkAccess;II)I a
	getInsideIndex (II)I a
	getMinY ()I e
	getOrUpdateBlendingData (Lnet/minecraft/server/level/WorldGenRegion;II)Lnet/minecraft/world/level/levelgen/blending/BlendingData; a
	getOutsideIndex (II)I b
	getX (I)I b
	getZ (I)I c
	isGround (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos;)Z a
	iterateBiomes (IIILnet/minecraft/world/level/levelgen/blending/BlendingData$BiomeConsumer;)V a
	iterateDensities (IIIILnet/minecraft/world/level/levelgen/blending/BlendingData$DensityConsumer;)V a
	iterateHeights (IILnet/minecraft/world/level/levelgen/blending/BlendingData$HeightConsumer;)V a
	quartCountPerColumn ()I c
	read1 (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos$MutableBlockPos;)D a
	read7 (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos$MutableBlockPos;)D b
	sideByGenerationAge (Lnet/minecraft/world/level/WorldGenLevel;IIZ)Ljava/util/Set; a
	validateArraySize (Lnet/minecraft/world/level/levelgen/blending/BlendingData;)Lcom/mojang/serialization/DataResult; a
	zeroIfNegative (I)I d
net/minecraft/world/level/levelgen/blending/BlendingData$BiomeConsumer dpt$a
net/minecraft/world/level/levelgen/blending/BlendingData$DensityConsumer dpt$b
net/minecraft/world/level/levelgen/blending/BlendingData$HeightConsumer dpt$c
net/minecraft/world/level/levelgen/blockpredicates/AllOfPredicate dpv
	CODEC a
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/AnyOfPredicate dpw
	CODEC a
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/BlockPredicate dpx
	CODEC b
	ONLY_IN_AIR_OR_WATER_PREDICATE d
	ONLY_IN_AIR_PREDICATE c
	allOf (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	allOf (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	allOf ([Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	alwaysTrue ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; e
	anyOf (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	anyOf (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	anyOf ([Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	hasSturdyFace (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	hasSturdyFace (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	insideWorld (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; d
	matchesBlocks (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; c
	matchesBlocks (Lnet/minecraft/core/Vec3i;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesBlocks (Lnet/minecraft/core/Vec3i;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesBlocks ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesFluids (Lnet/minecraft/core/Vec3i;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	matchesFluids (Lnet/minecraft/core/Vec3i;[Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesFluids ([Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesTag (Lnet/minecraft/core/Vec3i;Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	noFluid ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; d
	noFluid (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; c
	not (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	replaceable ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	replaceable (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	solid ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; c
	solid (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
	wouldSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
net/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType dpy
	ALL_OF j
	ANY_OF i
	HAS_STURDY_FACE d
	INSIDE_WORLD_BOUNDS h
	MATCHING_BLOCKS a
	MATCHING_BLOCK_TAG b
	MATCHING_FLUIDS c
	NOT k
	REPLACEABLE f
	SOLID e
	TRUE l
	WOULD_SURVIVE g
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/CombiningPredicate dpz
	predicates e
	codec (Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/levelgen/blockpredicates/HasSturdyFacePredicate dqa
	CODEC a
	direction f
	offset e
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/InsideWorldBoundsPredicate dqb
	CODEC a
	offset e
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/MatchingBlockTagPredicate dqc
	CODEC e
	tag a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/MatchingBlocksPredicate dqd
	CODEC a
	blocks e
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/MatchingFluidsPredicate dqe
	CODEC a
	fluids e
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/NotPredicate dqf
	CODEC a
	predicate e
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/ReplaceablePredicate dqg
	CODEC a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/SolidPredicate dqh
	CODEC a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/StateTestingPredicate dqi
	offset f
	stateTestingCodec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1; a
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/blockpredicates/TrueBlockPredicate dqj
	CODEC e
	INSTANCE a
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/WouldSurvivePredicate dqk
	CODEC a
	offset e
	state f
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration dqm
	CODEC a
	shape c
	verticalRotation b
net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration$CanyonShapeConfiguration dqm$a
	CODEC a
	distanceFactor b
	horizontalRadiusFactor e
	thickness c
	verticalRadiusCenterFactor g
	verticalRadiusDefaultFactor f
	widthSmoothness d
net/minecraft/world/level/levelgen/carver/CanyonWorldCarver dqn
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	doCarve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;JLnet/minecraft/world/level/levelgen/Aquifer;DDDFFFIIDLnet/minecraft/world/level/chunk/CarvingMask;)V a
	initWidthFactors (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/util/RandomSource;)[F a
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/util/RandomSource;)Z a
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/util/RandomSource;)Z a
	shouldSkip (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;[FDDDI)Z a
	updateVerticalRadius (Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/util/RandomSource;DFF)D a
net/minecraft/world/level/levelgen/carver/CarverConfiguration dqo
	CODEC d
	debugSettings h
	lavaLevel g
	replaceable i
	y e
	yScale f
net/minecraft/world/level/levelgen/carver/CarverDebugSettings dqp
	CODEC b
	DEFAULT a
	airState d
	barrierState g
	debugMode c
	lavaState f
	waterState e
	getAirState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getBarrierState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getLavaState ()Lnet/minecraft/world/level/block/state/BlockState; d
	getWaterState ()Lnet/minecraft/world/level/block/state/BlockState; c
	isDebugMode ()Z a
	of (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; a
	of (ZLnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; a
	of (ZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; a
net/minecraft/world/level/levelgen/carver/CarvingContext dqq
	noiseChunk b
	randomState c
	registryAccess a
	surfaceRule d
	randomState ()Lnet/minecraft/world/level/levelgen/RandomState; d
	registryAccess ()Lnet/minecraft/core/RegistryAccess; c
	topMaterial (Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
net/minecraft/world/level/levelgen/carver/CaveCarverConfiguration dqr
	CODEC a
	floorLevel j
	horizontalRadiusMultiplier b
	verticalRadiusMultiplier c
net/minecraft/world/level/levelgen/carver/CaveWorldCarver dqs
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	createRoom (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/levelgen/Aquifer;DDDFDLnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker;)V a
	createTunnel (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;JLnet/minecraft/world/level/levelgen/Aquifer;DDDDDFFFIIDLnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker;)V a
	getCaveBound ()I a
	getThickness (Lnet/minecraft/util/RandomSource;)F a
	getYScale ()D b
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/util/RandomSource;)Z a
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/util/RandomSource;)Z a
	shouldSkip (DDDD)Z a
net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver dqt
	CODEC b
	DIRECT_CODEC a
	LIST_CODEC c
	config e
	worldCarver d
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	config ()Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration; b
	isStartChunk (Lnet/minecraft/util/RandomSource;)Z a
	worldCarver ()Lnet/minecraft/world/level/levelgen/carver/WorldCarver; a
net/minecraft/world/level/levelgen/carver/NetherWorldCarver dqu
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	getCaveBound ()I a
	getThickness (Lnet/minecraft/util/RandomSource;)F a
	getYScale ()D b
net/minecraft/world/level/levelgen/carver/WorldCarver dqv
	AIR d
	CANYON c
	CAVE a
	CAVE_AIR e
	LAVA g
	NETHER_CAVE b
	WATER f
	configuredCodec i
	liquids h
	canReach (Lnet/minecraft/world/level/ChunkPos;DDIIF)Z a
	canReplaceBlock (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	carveEllipsoid (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/levelgen/Aquifer;DDDDDLnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker;)Z a
	configured (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Lnet/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver; a
	configuredCodec ()Lcom/mojang/serialization/Codec; c
	getCarveState (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;)Lnet/minecraft/world/level/block/state/BlockState; a
	getDebugState (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; b
	getRange ()I d
	isDebugEnabled (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Z b
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/util/RandomSource;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/carver/WorldCarver;)Lnet/minecraft/world/level/levelgen/carver/WorldCarver; a
net/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker dqv$a
net/minecraft/world/level/levelgen/feature/AbstractHugeMushroomFeature dqx
	getTreeHeight (Lnet/minecraft/util/RandomSource;)I a
	getTreeRadiusForHeight (IIII)I a
	isValidPosition (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)Z a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeTrunk (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;ILnet/minecraft/core/BlockPos$MutableBlockPos;)V a
net/minecraft/world/level/levelgen/feature/BambooFeature dqy
	BAMBOO_FINAL_LARGE b
	BAMBOO_TOP_LARGE c
	BAMBOO_TOP_SMALL d
	BAMBOO_TRUNK a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/BasaltColumnsFeature dqz
	CANNOT_PLACE_ON a
	CLUSTERED_REACH b
	CLUSTERED_SIZE c
	UNCLUSTERED_REACH d
	UNCLUSTERED_SIZE an
	canPlaceAt (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	findAir (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;I)Lnet/minecraft/core/BlockPos; a
	findSurface (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos$MutableBlockPos;I)Lnet/minecraft/core/BlockPos; a
	isAirOrLavaOcean (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeColumn (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos;II)Z a
net/minecraft/world/level/levelgen/feature/BasaltPillarFeature dra
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeBaseHangOff (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)V a
	placeHangOff (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/levelgen/feature/BlockBlobFeature drb
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/BlockColumnFeature drc
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	truncate ([IIIZ)V a
net/minecraft/world/level/levelgen/feature/BlockPileFeature drd
	mayPlaceOn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	tryPlaceBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration;)V a
net/minecraft/world/level/levelgen/feature/BlueIceFeature dre
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/BonusChestFeature drf
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/ChorusPlantFeature drg
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/ConfiguredFeature drh
	CODEC b
	DIRECT_CODEC a
	LIST_CODEC c
	config e
	feature d
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration; c
	feature ()Lnet/minecraft/world/level/levelgen/feature/Feature; b
	getFeatures ()Ljava/util/stream/Stream; a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/CoralClawFeature dri
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralFeature drj
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeCoralBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralMushroomFeature drk
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralTreeFeature drl
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/DeltaFeature drm
	CANNOT_REPLACE a
	DIRECTIONS b
	RIM_SPAWN_CHANCE c
	isClear (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/DesertWellFeature drn
	IS_SAND a
	sand b
	sandSlab c
	sandstone d
	water an
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeSusSand (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)V b
net/minecraft/world/level/levelgen/feature/DiskFeature dro
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeColumn (Lnet/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;IILnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
net/minecraft/world/level/levelgen/feature/DripstoneClusterFeature drp
	canBeAdjacentToWater (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	canPlacePool (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z b
	getChanceOfStalagmiteOrStalactite (IIIILnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)D a
	getDripstoneHeight (Lnet/minecraft/util/RandomSource;IIFILnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)I a
	isLava (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeColumn (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;IIFDIFLnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)V a
	randomBetweenBiased (Lnet/minecraft/util/RandomSource;FFFF)F a
	replaceBlocksWithDripstoneBlocks (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/Direction;)V a
net/minecraft/world/level/levelgen/feature/DripstoneUtils drq
	buildBaseToTipColumn (Lnet/minecraft/core/Direction;IZLjava/util/function/Consumer;)V a
	createPointedDripstone (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)Lnet/minecraft/world/level/block/state/BlockState; a
	getDripstoneHeight (DDDD)D a
	growPointedDripstone (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;IZ)V a
	isCircleMostlyEmbeddedInStone (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;I)Z a
	isDripstoneBase (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	isDripstoneBaseOrLava (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isEmptyOrWater (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isEmptyOrWater (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	isEmptyOrWaterOrLava (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z b
	isEmptyOrWaterOrLava (Lnet/minecraft/world/level/block/state/BlockState;)Z e
	isNeitherEmptyNorWater (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	placeDripstoneBlockIfPossible (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/levelgen/feature/EndGatewayFeature drr
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/EndIslandFeature drs
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/EndPodiumFeature drt
	CORNER_ROUNDING d
	END_PODIUM_LOCATION an
	PODIUM_PILLAR_HEIGHT b
	PODIUM_RADIUS a
	RIM_RADIUS c
	active ao
	getLocation (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/Feature dru
	BAMBOO T
	BASALT_COLUMNS Y
	BASALT_PILLAR ad
	BLOCK_COLUMN w
	BLOCK_PILE j
	BLUE_ICE D
	BONUS_CHEST ac
	CHORUS_PLANT l
	CORAL_CLAW Q
	CORAL_MUSHROOM P
	CORAL_TREE O
	DELTA_FEATURE Z
	DESERT_WELL o
	DISK G
	DRIPSTONE_CLUSTER aj
	END_GATEWAY L
	END_ISLAND K
	END_SPIKE J
	FILL_LAYER ab
	FLOWER g
	FOREST_ROCK F
	FOSSIL p
	FREEZE_TOP_LAYER u
	GEODE ai
	GLOWSTONE_BLOB t
	HUGE_BROWN_MUSHROOM r
	HUGE_FUNGUS U
	HUGE_RED_MUSHROOM q
	ICEBERG E
	ICE_SPIKE s
	KELP N
	LAKE H
	LARGE_DRIPSTONE ak
	MONSTER_ROOM C
	MULTIFACE_GROWTH A
	NETHER_FOREST_VEGETATION V
	NO_BONEMEAL_FLOWER h
	NO_OP e
	ORE I
	POINTED_DRIPSTONE al
	RANDOM_BOOLEAN_SELECTOR ah
	RANDOM_PATCH i
	RANDOM_SELECTOR af
	REPLACE_BLOBS aa
	REPLACE_SINGLE_BLOCK m
	ROOT_SYSTEM z
	SCATTERED_ORE ae
	SCULK_PATCH am
	SEAGRASS M
	SEA_PICKLE R
	SIMPLE_BLOCK S
	SIMPLE_RANDOM_SELECTOR ag
	SPRING k
	TREE f
	TWISTING_VINES X
	UNDERWATER_MAGMA B
	VEGETATION_PATCH x
	VINES v
	VOID_START_PLATFORM n
	WATERLOGGED_VEGETATION_PATCH y
	WEEPING_VINES W
	configuredCodec a
	checkNeighbors (Ljava/util/function/Function;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	configuredCodec ()Lcom/mojang/serialization/Codec; a
	isAdjacentToAir (Ljava/util/function/Function;Lnet/minecraft/core/BlockPos;)Z a
	isDirt (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	isGrassOrDirt (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
	isReplaceable (Lnet/minecraft/tags/TagKey;)Ljava/util/function/Predicate; a
	isStone (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	markAboveForPostProcessing (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)V a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/Feature;)Lnet/minecraft/world/level/levelgen/feature/Feature; a
	safeSetBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Predicate;)V a
	setBlock (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/levelgen/feature/FeatureCountTracker drv
	LOGGER a
	data b
	chunkDecorated (Lnet/minecraft/server/level/ServerLevel;)V a
	clearCounts ()V a
	featurePlaced (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;Ljava/util/Optional;)V a
	logCounts ()V b
net/minecraft/world/level/levelgen/feature/FeatureCountTracker$FeatureData drv$a
	feature a
	topFeature b
	feature ()Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	topFeature ()Ljava/util/Optional; b
net/minecraft/world/level/levelgen/feature/FeatureCountTracker$LevelData drv$b
	chunksWithFeatures b
	featureData a
	chunksWithFeatures ()Lorg/apache/commons/lang3/mutable/MutableInt; b
	featureData ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; a
net/minecraft/world/level/levelgen/feature/FeaturePlaceContext drw
	chunkGenerator c
	config f
	level b
	origin e
	random d
	topFeature a
	chunkGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; c
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration; f
	level ()Lnet/minecraft/world/level/WorldGenLevel; b
	origin ()Lnet/minecraft/core/BlockPos; e
	random ()Lnet/minecraft/util/RandomSource; d
	topFeature ()Ljava/util/Optional; a
net/minecraft/world/level/levelgen/feature/FillLayerFeature drx
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/FossilFeature dry
	countEmptyCorners (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)I a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/FossilFeatureConfiguration drz
	CODEC a
	fossilProcessors d
	fossilStructures b
	maxEmptyCornersAllowed f
	overlayProcessors e
	overlayStructures c
net/minecraft/world/level/levelgen/feature/GeodeFeature dsa
	DIRECTIONS a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/GlowstoneFeature dsb
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/HugeBrownMushroomFeature dsc
	getTreeRadiusForHeight (IIII)I a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/HugeFungusConfiguration dsd
	CODEC a
	decorState e
	hatState d
	planted g
	replaceableBlocks f
	stemState c
	validBaseState b
net/minecraft/world/level/levelgen/feature/HugeFungusFeature dse
	HUGE_PROBABILITY a
	isReplaceable (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Z)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeHat (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos;IZ)V b
	placeHatBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos$MutableBlockPos;FFF)V a
	placeHatDropBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	placeStem (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos;IZ)V a
	tryPlaceWeepingVines (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/levelgen/feature/HugeRedMushroomFeature dsf
	getTreeRadiusForHeight (IIII)I a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/IceSpikeFeature dsg
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/IcebergFeature dsh
	belowIsAir (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	carve (IILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;ZDLnet/minecraft/core/BlockPos;II)V a
	generateCutOut (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;IILnet/minecraft/core/BlockPos;ZIDI)V a
	generateIcebergBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;IIIIIIZIDZLnet/minecraft/world/level/block/state/BlockState;)V a
	getEllipseC (III)I a
	heightDependentRadiusEllipse (III)I b
	heightDependentRadiusRound (Lnet/minecraft/util/RandomSource;III)I a
	heightDependentRadiusSteep (Lnet/minecraft/util/RandomSource;III)I b
	isIcebergState (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	removeFloatingSnowLayer (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setIcebergBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;IIZZLnet/minecraft/world/level/block/state/BlockState;)V a
	signedDistanceCircle (IILnet/minecraft/core/BlockPos;ILnet/minecraft/util/RandomSource;)D a
	signedDistanceEllipse (IILnet/minecraft/core/BlockPos;IID)D a
	smooth (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;IIZI)V a
net/minecraft/world/level/levelgen/feature/KelpFeature dsi
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/LakeFeature dsj
	AIR a
	canReplaceBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/LakeFeature$Configuration dsj$a
	CODEC a
	barrier c
	fluid b
	barrier ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; b
	fluid ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; a
net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature dsk
	makeDripstone (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/util/RandomSource;ILnet/minecraft/util/valueproviders/FloatProvider;Lnet/minecraft/util/valueproviders/FloatProvider;)Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$LargeDripstone; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeDebugMarkers (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/Column$Range;Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter;)V a
net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$LargeDripstone dsk$a
	bluntness d
	pointingUp b
	radius c
	root a
	scale e
	getHeight ()I a
	getHeightAtRadius (F)I a
	getMaxY ()I c
	getMinY ()I b
	isSuitableForWind (Lnet/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration;)Z a
	moveBackUntilBaseIsInsideStoneAndShrinkRadiusIfNecessary (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter;)Z a
	placeBlocks (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter;)V a
net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter dsk$b
	originY a
	windSpeed b
	noWind ()Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter; a
	offset (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/levelgen/feature/MonsterRoomFeature dsl
	AIR c
	LOGGER a
	MOBS b
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	randomEntityId (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/EntityType; a
net/minecraft/world/level/levelgen/feature/MultifaceGrowthFeature dsm
	isAirOrWater (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeGrowthIfPossible (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/levelgen/feature/configurations/MultifaceGrowthConfiguration;Lnet/minecraft/util/RandomSource;Ljava/util/List;)Z a
net/minecraft/world/level/levelgen/feature/NetherForestVegetationFeature dsn
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/NoOpFeature dso
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/OreFeature dsp
	canPlaceOre (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	doPlace (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration;DDDDDDIIIII)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	shouldSkipAirCheck (Lnet/minecraft/util/RandomSource;F)Z a
net/minecraft/world/level/levelgen/feature/PointedDripstoneFeature dsq
	createPatchOfDripstoneBlocks (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration;)V a
	getTipDirection (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/RandomBooleanSelectorFeature dsr
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/RandomPatchFeature dss
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/RandomSelectorFeature dst
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/ReplaceBlobsFeature dsu
	findTarget (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/core/BlockPos; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/ReplaceBlockFeature dsv
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/RootSystemFeature dsw
	isAllowedTreeSpace (Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeDirt (Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/util/RandomSource;)V a
	placeDirtAndTree (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos;)Z a
	placeRootedDirt (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/util/RandomSource;IILnet/minecraft/core/BlockPos$MutableBlockPos;)V a
	placeRoots (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;)V a
	spaceForTree (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/ScatteredOreFeature dsx
	MAX_DIST_FROM_ORIGIN a
	getRandomPlacementInOneAxisRelativeToOrigin (Lnet/minecraft/util/RandomSource;I)I a
	offsetTargetPos (Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;I)V a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SculkPatchFeature dsy
	canSpreadFrom (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SeaPickleFeature dsz
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SeagrassFeature dta
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SimpleBlockFeature dtb
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SimpleRandomSelectorFeature dtc
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SnowAndFreezeFeature dtd
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SpikeFeature dte
	NUMBER_OF_SPIKES a
	SPIKE_CACHE c
	SPIKE_DISTANCE b
	getSpikesForLevel (Lnet/minecraft/world/level/WorldGenLevel;)Ljava/util/List; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeSpike (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration;Lnet/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike;)V a
net/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike dte$a
	CODEC a
	centerX b
	centerZ c
	guarded f
	height e
	radius d
	topBoundingBox g
	getCenterX ()I a
	getCenterZ ()I b
	getHeight ()I d
	getRadius ()I c
	getTopBoundingBox ()Lnet/minecraft/world/phys/AABB; f
	isCenterWithinChunk (Lnet/minecraft/core/BlockPos;)Z a
	isGuarded ()Z e
net/minecraft/world/level/levelgen/feature/SpikeFeature$SpikeCacheLoader dte$b
	load (Ljava/lang/Long;)Ljava/util/List; a
net/minecraft/world/level/levelgen/feature/SpringFeature dtf
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/TreeFeature dtg
	BLOCK_UPDATE_FLAGS a
	doPlace (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	getMaxFreeTreeHeight (Lnet/minecraft/world/level/LevelSimulatedReader;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	isAirOrLeaves (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z b
	isVine (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z d
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	setBlock (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setBlockKnownShape (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	updateLeaves (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape; a
	validTreePos (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/levelgen/feature/TwistingVinesFeature dth
	findFirstAirBlockAboveGround (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	isInvalidPlacementLocation (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeWeepingVinesColumn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos$MutableBlockPos;III)V a
net/minecraft/world/level/levelgen/feature/UnderwaterMagmaFeature dti
	getFloorY (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration;)Ljava/util/OptionalInt; a
	isValidPlacement (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z b
	isWaterOrAir (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/VegetationPatchFeature dtj
	distributeVegetation (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/util/RandomSource;Ljava/util/Set;II)V a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeGround (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Ljava/util/function/Predicate;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos$MutableBlockPos;I)Z a
	placeGroundPatch (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;II)Ljava/util/Set; a
	placeVegetation (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/VinesFeature dtk
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature dtl
	PLATFORM_OFFSET a
	PLATFORM_ORIGIN_CHUNK b
	PLATFORM_RADIUS c
	PLATFORM_RADIUS_CHUNKS d
	checkerboardDistance (IIII)I a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/WaterloggedVegetationPatchFeature dtm
	isExposed (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Set;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	isExposedDirection (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/Direction;)Z a
	placeGroundPatch (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;II)Ljava/util/Set; a
	placeVegetation (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/WeepingVinesFeature dtn
	DIRECTIONS a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeRoofNetherWart (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)V a
	placeRoofWeepingVines (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)V b
	placeWeepingVinesColumn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos$MutableBlockPos;III)V a
net/minecraft/world/level/levelgen/feature/WeightedPlacedFeature dto
	CODEC a
	chance c
	feature b
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration dtp
	CODEC a
	allowedPlacement d
	direction c
	layers b
	prioritizeTip e
	allowedPlacement ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; c
	direction ()Lnet/minecraft/core/Direction; b
	layer (Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;)Lnet/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration$Layer; a
	layers ()Ljava/util/List; a
	prioritizeTip ()Z d
	simple (Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;)Lnet/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration; b
net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration$Layer dtp$a
	CODEC a
	height b
	state c
	height ()Lnet/minecraft/util/valueproviders/IntProvider; a
	state ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; b
net/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration dtq
	CODEC a
	stateProvider b
net/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration dtr
	CODEC a
	state b
net/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration dts
	CODEC a
	height c
	reach b
	height ()Lnet/minecraft/util/valueproviders/IntProvider; b
	reach ()Lnet/minecraft/util/valueproviders/IntProvider; a
net/minecraft/world/level/levelgen/feature/configurations/CountConfiguration dtt
	CODEC a
	count b
	count ()Lnet/minecraft/util/valueproviders/IntProvider; a
net/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration dtu
	CODEC a
	contents b
	rim c
	rimSize e
	size d
	contents ()Lnet/minecraft/world/level/block/state/BlockState; a
	rim ()Lnet/minecraft/world/level/block/state/BlockState; b
	rimSize ()Lnet/minecraft/util/valueproviders/IntProvider; d
	size ()Lnet/minecraft/util/valueproviders/IntProvider; c
net/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration dtv
	CODEC a
	halfHeight e
	radius d
	stateProvider b
	target c
	halfHeight ()I d
	radius ()Lnet/minecraft/util/valueproviders/IntProvider; c
	stateProvider ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider; a
	target ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
net/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration dtw
	CODEC a
	chanceOfDripstoneColumnAtMaxDistanceFromCenter j
	density h
	dripstoneBlockLayerThickness g
	floorToCeilingSearchRange b
	height c
	heightDeviation f
	maxDistanceFromCenterAffectingHeightBias l
	maxDistanceFromEdgeAffectingChanceOfDripstoneColumn k
	maxStalagmiteStalactiteHeightDiff e
	radius d
	wetness i
net/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration dtx
	CODEC a
	exact c
	exit b
	delayedExitSearch ()Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration; a
	getExit ()Ljava/util/Optional; b
	isExitExact ()Z c
	knownExit (Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration; a
net/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration dty
	NONE m
	getFeatures ()Ljava/util/stream/Stream; e
net/minecraft/world/level/levelgen/feature/configurations/GeodeConfiguration dtz
	CHANCE_RANGE a
	CODEC b
	distributionPoints j
	geodeBlockSettings c
	geodeCrackSettings e
	geodeLayerSettings d
	invalidBlocksThreshold p
	maxGenOffset n
	minGenOffset l
	noiseMultiplier o
	outerWallDistance i
	placementsRequireLayer0Alternate h
	pointOffset k
	useAlternateLayer0Chance g
	usePotentialPlacementsChance f
net/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration dua
	CODEC a
	capProvider b
	foliageRadius d
	stemProvider c
net/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration dub
	CODEC a
	columnRadius c
	floorToCeilingSearchRange b
	heightScale d
	maxColumnRadiusToCaveHeightRatio e
	minBluntnessForWind j
	minRadiusForWind i
	stalactiteBluntness f
	stalagmiteBluntness g
	windSpeed h
net/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration duc
	CODEC a
	height b
	state c
net/minecraft/world/level/levelgen/feature/configurations/MultifaceGrowthConfiguration dud
	CODEC a
	canBePlacedOn h
	canPlaceOnCeiling e
	canPlaceOnFloor d
	canPlaceOnWall f
	chanceOfSpreading g
	placeBlock b
	searchRange c
	validDirections i
	apply (Lnet/minecraft/world/level/block/Block;)Lcom/mojang/serialization/DataResult; a
	getShuffledDirections (Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getShuffledDirectionsExcept (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/Direction;)Ljava/util/List; a
net/minecraft/world/level/levelgen/feature/configurations/NetherForestVegetationConfig due
	CODEC c
	spreadHeight e
	spreadWidth d
net/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration duf
	CODEC a
	INSTANCE b
net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration dug
	CODEC a
	discardChanceOnAirExposure d
	size c
	targetStates b
	target (Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTest;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState; a
net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState dug$a
	CODEC a
	state c
	target b
net/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration duh
	CODEC a
	chanceOfDirectionalSpread c
	chanceOfSpreadRadius2 d
	chanceOfSpreadRadius3 e
	chanceOfTallerDripstone b
net/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration dui
	CODEC k
	probability l
net/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration duj
	CODEC a
	featureFalse c
	featureTrue b
	getFeatures ()Ljava/util/stream/Stream; e
net/minecraft/world/level/levelgen/feature/configurations/RandomFeatureConfiguration duk
	CODEC a
	defaultFeature c
	features b
	getFeatures ()Ljava/util/stream/Stream; e
net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration dul
	CODEC a
	feature e
	tries b
	xzSpread c
	ySpread d
	feature ()Lnet/minecraft/core/Holder; d
	tries ()I a
	xzSpread ()I b
	ySpread ()I c
net/minecraft/world/level/levelgen/feature/configurations/ReplaceBlockConfiguration dum
	CODEC a
	targetStates b
net/minecraft/world/level/levelgen/feature/configurations/ReplaceSphereConfiguration dun
	CODEC a
	radius d
	replaceState c
	targetState b
	radius ()Lnet/minecraft/util/valueproviders/IntProvider; a
net/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration duo
	CODEC a
	allowedTreePosition o
	allowedVerticalWaterForTree n
	hangingRootPlacementAttempts l
	hangingRootRadius i
	hangingRootStateProvider k
	hangingRootsVerticalSpan j
	requiredVerticalSpaceForTree c
	rootColumnMaxHeight h
	rootPlacementAttempts g
	rootRadius d
	rootReplaceable e
	rootStateProvider f
	treeFeature b
net/minecraft/world/level/levelgen/feature/configurations/SculkPatchConfiguration dup
	CODEC a
	amountPerCharge c
	catalystChance h
	chargeCount b
	extraRareGrowths g
	growthRounds e
	spreadAttempts d
	spreadRounds f
	amountPerCharge ()I b
	catalystChance ()F h
	chargeCount ()I a
	extraRareGrowths ()Lnet/minecraft/util/valueproviders/IntProvider; g
	growthRounds ()I d
	spreadAttempts ()I c
	spreadRounds ()I f
net/minecraft/world/level/levelgen/feature/configurations/SimpleBlockConfiguration duq
	CODEC a
	toPlace b
	toPlace ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; a
net/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration dur
	CODEC a
	features b
	getFeatures ()Ljava/util/stream/Stream; e
net/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration dus
	CODEC a
	crystalBeamTarget d
	crystalInvulnerable b
	spikes c
	getCrystalBeamTarget ()Lnet/minecraft/core/BlockPos; c
	getSpikes ()Ljava/util/List; b
	isCrystalInvulnerable ()Z a
net/minecraft/world/level/levelgen/feature/configurations/SpringConfiguration dut
	CODEC a
	holeCount e
	requiresBlockBelow c
	rockCount d
	state b
	validBlocks f
net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration duu
	CODEC a
	decorators i
	dirtProvider c
	foliagePlacer f
	foliageProvider e
	forceDirt k
	ignoreVines j
	minimumSize h
	rootPlacer g
	trunkPlacer d
	trunkProvider b
net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder duu$a
	decorators h
	dirtProvider f
	foliagePlacer d
	foliageProvider b
	forceDirt j
	ignoreVines i
	minimumSize g
	rootPlacer e
	trunkPlacer c
	trunkProvider a
	build ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration; c
	decorators (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	dirt (Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	forceDirt ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; b
	ignoreVines ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
net/minecraft/world/level/levelgen/feature/configurations/TwistingVinesConfig duv
	CODEC a
	maxHeight d
	spreadHeight c
	spreadWidth b
	maxHeight ()I c
	spreadHeight ()I b
	spreadWidth ()I a
net/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration duw
	CODEC a
	floorSearchRange b
	placementProbabilityPerValidPosition d
	placementRadiusAroundFloor c
net/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration dux
	CODEC a
	depth f
	extraBottomBlockChance g
	extraEdgeColumnChance k
	groundState c
	replaceable b
	surface e
	vegetationChance i
	vegetationFeature d
	verticalRange h
	xzRadius j
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize duz
	CODEC a
	MAX_WIDTH b
	minClippedHeight c
	getSizeAtHeight (II)I a
	minClippedHeight ()Ljava/util/OptionalInt; c
	minClippedHeightCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType dva
	THREE_LAYERS_FEATURE_SIZE b
	TWO_LAYERS_FEATURE_SIZE a
	codec c
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; a
net/minecraft/world/level/levelgen/feature/featuresize/ThreeLayersFeatureSize dvb
	CODEC d
	limit e
	lowerSize g
	middleSize h
	upperLimit f
	upperSize i
	getSizeAtHeight (II)I a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize dvc
	CODEC d
	limit e
	lowerSize f
	upperSize g
	getSizeAtHeight (II)I a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/foliageplacers/AcaciaFoliagePlacer dve
	CODEC a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/BlobFoliagePlacer dvf
	CODEC a
	height b
	blobParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/BushFoliagePlacer dvg
	CODEC c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/CherryFoliagePlacer dvh
	CODEC a
	cornerHoleChance g
	hangingLeavesChance h
	hangingLeavesExtensionChance i
	height b
	wideBottomLayerHoleChance c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/DarkOakFoliagePlacer dvi
	CODEC a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	shouldSkipLocationSigned (Lnet/minecraft/util/RandomSource;IIIIZ)Z b
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FancyFoliagePlacer dvj
	CODEC c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer dvk
	CODEC d
	offset f
	radius e
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;II)V a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	foliagePlacerParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P2; b
	foliageRadius (Lnet/minecraft/util/RandomSource;I)I a
	offset (Lnet/minecraft/util/RandomSource;)I a
	placeLeavesRow (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;IIZ)V a
	placeLeavesRowWithHangingLeavesBelow (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;IIZFF)V a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	shouldSkipLocationSigned (Lnet/minecraft/util/RandomSource;IIIIZ)Z b
	tryPlaceExtension (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;FLnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	tryPlaceLeaf (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment dvk$a
	doubleTrunk c
	pos a
	radiusOffset b
	doubleTrunk ()Z c
	pos ()Lnet/minecraft/core/BlockPos; a
	radiusOffset ()I b
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter dvk$b
	isSet (Lnet/minecraft/core/BlockPos;)Z a
	set (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType dvl
	ACACIA_FOLIAGE_PLACER d
	BLOB_FOLIAGE_PLACER a
	BUSH_FOLIAGE_PLACER e
	CHERRY_FOLIAGE_PLACER k
	DARK_OAK_FOLIAGE_PLACER i
	FANCY_FOLIAGE_PLACER f
	MEGA_JUNGLE_FOLIAGE_PLACER g
	MEGA_PINE_FOLIAGE_PLACER h
	PINE_FOLIAGE_PLACER c
	RANDOM_SPREAD_FOLIAGE_PLACER j
	SPRUCE_FOLIAGE_PLACER b
	codec l
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/MegaJungleFoliagePlacer dvm
	CODEC a
	height b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/MegaPineFoliagePlacer dvn
	CODEC a
	crownHeight b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/PineFoliagePlacer dvo
	CODEC a
	height b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	foliageRadius (Lnet/minecraft/util/RandomSource;I)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/RandomSpreadFoliagePlacer dvp
	CODEC a
	foliageHeight b
	leafPlacementAttempts c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/SpruceFoliagePlacer dvq
	CODEC a
	trunkHeight b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/rootplacers/AboveRootPlacement dvt
	CODEC a
	aboveRootPlacementChance c
	aboveRootProvider b
	aboveRootPlacementChance ()F b
	aboveRootProvider ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; a
net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacement dvu
	CODEC a
	canGrowThrough b
	maxRootLength f
	maxRootWidth e
	muddyRootsIn c
	muddyRootsProvider d
	randomSkewChance g
	canGrowThrough ()Lnet/minecraft/core/HolderSet; a
	maxRootLength ()I e
	maxRootWidth ()I d
	muddyRootsIn ()Lnet/minecraft/core/HolderSet; b
	muddyRootsProvider ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; c
	randomSkewChance ()F f
net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacer dvv
	CODEC c
	ROOT_LENGTH_LIMIT b
	ROOT_WIDTH_LIMIT a
	mangroveRootPlacement h
	canPlaceRoot (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
	placeRoot (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	placeRoots (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	potentialRootPositions (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/List; a
	simulateRoots (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Ljava/util/List;I)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType; a
net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacer dvw
	CODEC d
	aboveRootPlacement g
	rootProvider f
	trunkOffsetY e
	canPlaceRoot (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
	getPotentiallyWaterloggedState (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTrunkOrigin (Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/BlockPos; a
	placeRoot (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	placeRoots (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	rootPlacerParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; a
	type ()Lnet/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType; a
net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType dvx
	MANGROVE_ROOT_PLACER a
	codec b
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType; a
net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider dvz
	CODEC a
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	simple (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider; a
	simple (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType dwa
	DUAL_NOISE_PROVIDER e
	NOISE_PROVIDER d
	NOISE_THRESHOLD_PROVIDER c
	RANDOMIZED_INT_STATE_PROVIDER g
	ROTATED_BLOCK_PROVIDER f
	SIMPLE_STATE_PROVIDER a
	WEIGHTED_STATE_PROVIDER b
	codec h
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/DualNoiseProvider dwb
	CODEC b
	slowNoise l
	slowNoiseParameters j
	slowScale k
	variety i
	getSlowNoiseValue (Lnet/minecraft/core/BlockPos;)D a
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/NoiseBasedStateProvider dwc
	noise f
	parameters d
	scale e
	seed c
	getNoiseValue (Lnet/minecraft/core/BlockPos;D)D a
	noiseCodec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; a
net/minecraft/world/level/levelgen/feature/stateproviders/NoiseProvider dwd
	CODEC g
	states h
	getRandomState (Ljava/util/List;D)Lnet/minecraft/world/level/block/state/BlockState; a
	getRandomState (Ljava/util/List;Lnet/minecraft/core/BlockPos;D)Lnet/minecraft/world/level/block/state/BlockState; a
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	noiseProviderCodec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P4; b
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/NoiseThresholdProvider dwe
	CODEC b
	defaultState i
	highChance h
	highStates k
	lowStates j
	threshold g
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/RandomizedIntStateProvider dwf
	CODEC b
	property e
	propertyName d
	source c
	values f
	findProperty (Lnet/minecraft/world/level/block/state/BlockState;Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/IntegerProperty; a
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/RotatedBlockProvider dwg
	CODEC b
	block c
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider dwh
	CODEC a
	fallback b
	rules c
	fallback ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; a
	getState (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	rules ()Ljava/util/List; b
	simple (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider; a
	simple (Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider; a
net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider$Rule dwh$a
	CODEC a
	ifTrue b
	then c
	ifTrue ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	then ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; b
net/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider dwi
	CODEC b
	state c
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/WeightedStateProvider dwj
	CODEC b
	weightedList c
	create (Lnet/minecraft/util/random/SimpleWeightedRandomList;)Lcom/mojang/serialization/DataResult; a
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/treedecorators/AlterGroundDecorator dwl
	CODEC a
	provider b
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	placeBlockAt (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;Lnet/minecraft/core/BlockPos;)V b
	placeCircle (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;Lnet/minecraft/core/BlockPos;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/AttachedToLeavesDecorator dwm
	CODEC a
	blockProvider e
	directions g
	exclusionRadiusXZ c
	exclusionRadiusY d
	probability b
	requiredEmptyBlocks f
	hasRequiredEmptyBlocks (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/BeehiveDecorator dwn
	CODEC a
	SPAWN_DIRECTIONS c
	WORLDGEN_FACING b
	probability d
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/CocoaDecorator dwo
	CODEC a
	probability b
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/LeaveVineDecorator dwp
	CODEC a
	probability b
	addHangingVine (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator dwq
	CODEC h
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context dwq$a
	decorationSetter b
	leaves e
	level a
	logs d
	random c
	roots f
	isAir (Lnet/minecraft/core/BlockPos;)Z a
	leaves ()Lit/unimi/dsi/fastutil/objects/ObjectArrayList; d
	level ()Lnet/minecraft/world/level/LevelSimulatedReader; a
	logs ()Lit/unimi/dsi/fastutil/objects/ObjectArrayList; c
	placeVine (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;)V a
	random ()Lnet/minecraft/util/RandomSource; b
	roots ()Lit/unimi/dsi/fastutil/objects/ObjectArrayList; e
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType dwr
	ALTER_GROUND e
	ATTACHED_TO_LEAVES f
	BEEHIVE d
	COCOA c
	LEAVE_VINE b
	TRUNK_VINE a
	codec g
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TrunkVineDecorator dws
	CODEC a
	INSTANCE b
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/BendingTrunkPlacer dwu
	CODEC a
	bendLength h
	minHeightForLeaves b
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/CherryTrunkPlacer dwv
	BRANCH_START_CODEC b
	CODEC a
	branchCount h
	branchEndOffsetFromTop l
	branchHorizontalLength i
	branchStartOffsetFromTop j
	secondBranchStartOffsetFromTop k
	generateBranch (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Ljava/util/function/Function;Lnet/minecraft/core/Direction;IZLnet/minecraft/core/BlockPos$MutableBlockPos;)Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment; a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/DarkOakTrunkPlacer dww
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer dwx
	BRANCH_LENGTH_MAGIC j
	BRANCH_SLOPE i
	CLUSTER_DENSITY_MAGIC h
	CODEC a
	TRUNK_HEIGHT_SCALE b
	getLogAxis (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction$Axis; a
	getSteps (Lnet/minecraft/core/BlockPos;)I a
	makeBranches (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	makeLimb (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	treeShape (II)F b
	trimBranches (II)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer$FoliageCoords dwx$a
	attachment a
	branchBase b
	getBranchBase ()I a
net/minecraft/world/level/levelgen/feature/trunkplacers/ForkingTrunkPlacer dwy
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/GiantTrunkPlacer dwz
	CODEC a
	placeLogIfFreeWithOffset (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;III)V a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/MegaJungleTrunkPlacer dxa
	CODEC b
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/StraightTrunkPlacer dxb
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer dxc
	CODEC c
	MAX_BASE_HEIGHT a
	MAX_HEIGHT d
	MAX_RAND b
	baseHeight e
	heightRandA f
	heightRandB g
	getTreeHeight (Lnet/minecraft/util/RandomSource;)I a
	isDirt (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z c
	isFree (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z b
	placeLog (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z b
	placeLog (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Ljava/util/function/Function;)Z a
	placeLogIfFree (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	setDirtAt (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	trunkPlacerParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
	validTreePos (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType dxd
	BENDING_TRUNK_PLACER g
	CHERRY_TRUNK_PLACER i
	DARK_OAK_TRUNK_PLACER e
	FANCY_TRUNK_PLACER f
	FORKING_TRUNK_PLACER b
	GIANT_TRUNK_PLACER c
	MEGA_JUNGLE_TRUNK_PLACER d
	STRAIGHT_TRUNK_PLACER a
	UPWARDS_BRANCHING_TRUNK_PLACER h
	codec j
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/UpwardsBranchingTrunkPlacer dxe
	CODEC a
	canGrowThrough j
	extraBranchLength i
	extraBranchSteps b
	placeBranchPerLogProbability h
	placeBranch (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Ljava/util/List;Lnet/minecraft/core/BlockPos$MutableBlockPos;ILnet/minecraft/core/Direction;II)V a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
	validTreePos (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/flat/FlatLayerInfo dxg
	CODEC a
	block b
	height c
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getHeight ()I a
net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPreset dxh
	CODEC b
	DIRECT_CODEC a
	displayItem c
	settings d
	displayItem ()Lnet/minecraft/core/Holder; a
	settings ()Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; b
net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets dxi
	BOTTOMLESS_PIT f
	CLASSIC_FLAT a
	DESERT g
	OVERWORLD d
	REDSTONE_READY h
	SNOWY_KINGDOM e
	THE_VOID i
	TUNNELERS_DREAM b
	WATER_WORLD c
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets$Bootstrap dxi$a
	context a
	register (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/resources/ResourceKey;Ljava/util/Set;ZZ[Lnet/minecraft/world/level/levelgen/flat/FlatLayerInfo;)V a
	run ()V a
net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings dxj
	CODEC a
	LOGGER b
	addLakes i
	biome e
	decoration h
	lakes j
	layers f
	layersInfo d
	structureOverrides c
	voidGen g
	adjustGenerationSettings (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings; a
	createLakesList (Lnet/minecraft/core/HolderGetter;)Ljava/util/List; b
	getBiome ()Lnet/minecraft/core/Holder; d
	getBiome (Ljava/util/Optional;Lnet/minecraft/core/Holder;)Lnet/minecraft/core/Holder; a
	getDefault (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
	getDefaultBiome (Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/core/Holder; a
	getLayers ()Ljava/util/List; f
	getLayersInfo ()Ljava/util/List; e
	setAddLakes ()V b
	setDecoration ()V a
	structureOverrides ()Ljava/util/Optional; c
	updateLayers ()V g
	validateHeight (Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Lcom/mojang/serialization/DataResult; a
	withBiomeAndLayers (Ljava/util/List;Ljava/util/Optional;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
net/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight dxl
	CODEC a
	LOGGER b
	inner f
	maxInclusive e
	minInclusive d
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/ConstantHeight dxm
	CODEC b
	ZERO a
	value d
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	getValue ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; b
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/ConstantHeight; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/HeightProvider dxn
	CODEC c
	CONSTANT_OR_DISPATCH_CODEC a
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/HeightProviderType dxo
	BIASED_TO_BOTTOM c
	CONSTANT a
	TRAPEZOID e
	UNIFORM b
	VERY_BIASED_TO_BOTTOM d
	WEIGHTED_LIST f
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
net/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight dxp
	CODEC a
	LOGGER b
	maxInclusive e
	minInclusive d
	plateau f
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/UniformHeight dxq
	CODEC a
	LOGGER b
	maxInclusive e
	minInclusive d
	warnedFor f
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/UniformHeight; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight dxr
	CODEC a
	LOGGER b
	inner f
	maxInclusive e
	minInclusive d
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/WeightedListHeight dxs
	CODEC a
	distribution b
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/material/MaterialRuleList dxu
	materialRuleList a
	materialRuleList ()Ljava/util/List; a
net/minecraft/world/level/levelgen/material/WorldGenMaterialRule dxv
	apply (Lnet/minecraft/world/level/levelgen/NoiseChunk;III)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/placement/BiomeFilter dxy
	CODEC a
	INSTANCE c
	biome ()Lnet/minecraft/world/level/levelgen/placement/BiomeFilter; a
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/BlockPredicateFilter dxz
	CODEC a
	predicate c
	forPredicate (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/placement/BlockPredicateFilter; a
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/CarvingMaskPlacement dya
	CODEC a
	step c
	forStep (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/levelgen/placement/CarvingMaskPlacement; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/CaveSurface dyb
	$VALUES g
	CEILING a
	CODEC c
	FLOOR b
	direction d
	id f
	y e
	$values ()[Lnet/minecraft/world/level/levelgen/placement/CaveSurface; d
	getDirection ()Lnet/minecraft/core/Direction; a
	getSerializedName ()Ljava/lang/String; c
	getY ()I b
net/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement dyc
	CODEC a
	count c
	findOnGroundYPosition (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;IIII)I a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	isEmpty (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	of (I)Lnet/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement; a
	of (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/CountPlacement dyd
	CODEC a
	count c
	count (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)I a
	of (I)Lnet/minecraft/world/level/levelgen/placement/CountPlacement; a
	of (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/CountPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement dye
	CODEC a
	allowedSearchCondition e
	directionOfSearch c
	maxSteps f
	targetCondition d
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	scanningFor (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;I)Lnet/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement; a
	scanningFor (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;I)Lnet/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/HeightRangePlacement dyf
	CODEC a
	height c
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	of (Lnet/minecraft/world/level/levelgen/heightproviders/HeightProvider;)Lnet/minecraft/world/level/levelgen/placement/HeightRangePlacement; a
	triangle (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/placement/HeightRangePlacement; b
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
	uniform (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/placement/HeightRangePlacement; a
net/minecraft/world/level/levelgen/placement/HeightmapPlacement dyg
	CODEC a
	heightmap c
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	onHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/placement/HeightmapPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/InSquarePlacement dyh
	CODEC a
	INSTANCE c
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	spread ()Lnet/minecraft/world/level/levelgen/placement/InSquarePlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement dyi
	CODEC a
	noiseFactor d
	noiseOffset e
	noiseToCountRatio c
	count (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)I a
	of (IDD)Lnet/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement dyj
	CODEC a
	aboveNoise e
	belowNoise d
	noiseLevel c
	count (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)I a
	of (DII)Lnet/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/PlacedFeature dyk
	CODEC b
	DIRECT_CODEC a
	LIST_CODEC c
	LIST_OF_LISTS_CODEC d
	feature e
	placement f
	feature ()Lnet/minecraft/core/Holder; b
	getFeatures ()Ljava/util/stream/Stream; a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	placeWithBiomeCheck (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z b
	placeWithContext (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	placement ()Ljava/util/List; c
net/minecraft/world/level/levelgen/placement/PlacementContext dyl
	generator b
	level a
	topFeature c
	generator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; f
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getCarvingMask (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/chunk/CarvingMask; a
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevel ()Lnet/minecraft/world/level/WorldGenLevel; d
	getMinBuildHeight ()I c
	topFeature ()Ljava/util/Optional; e
net/minecraft/world/level/levelgen/placement/PlacementFilter dym
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/placement/PlacementModifier dyn
	CODEC b
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/PlacementModifierType dyo
	BIOME_FILTER e
	BLOCK_PREDICATE_FILTER a
	CARVING_MASK_PLACEMENT o
	COUNT f
	COUNT_ON_EVERY_LAYER i
	ENVIRONMENT_SCAN j
	HEIGHTMAP k
	HEIGHT_RANGE l
	IN_SQUARE m
	NOISE_BASED_COUNT g
	NOISE_THRESHOLD_COUNT h
	RANDOM_OFFSET n
	RARITY_FILTER b
	SURFACE_RELATIVE_THRESHOLD_FILTER c
	SURFACE_WATER_DEPTH_FILTER d
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; a
net/minecraft/world/level/levelgen/placement/RandomOffsetPlacement dyp
	CODEC a
	xzSpread c
	ySpread d
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	horizontal (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/RandomOffsetPlacement; b
	of (Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/RandomOffsetPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
	vertical (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/RandomOffsetPlacement; a
net/minecraft/world/level/levelgen/placement/RarityFilter dyq
	CODEC a
	chance c
	onAverageOnceEvery (I)Lnet/minecraft/world/level/levelgen/placement/RarityFilter; a
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/RepeatingPlacement dyr
	count (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)I a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
net/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter dys
	CODEC a
	heightmap c
	maxInclusive e
	minInclusive d
	of (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)Lnet/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter; a
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter dyt
	CODEC a
	maxWaterDepth c
	forMaxDepth (I)Lnet/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter; a
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/presets/WorldPreset dyv
	CODEC b
	DIRECT_CODEC a
	dimensions c
	createRegistry ()Lnet/minecraft/core/Registry; c
	createWorldDimensions ()Lnet/minecraft/world/level/levelgen/WorldDimensions; a
	overworld ()Ljava/util/Optional; b
	requireOverworld (Lnet/minecraft/world/level/levelgen/presets/WorldPreset;)Lcom/mojang/serialization/DataResult; a
net/minecraft/world/level/levelgen/presets/WorldPresets dyw
	AMPLIFIED d
	DEBUG f
	FLAT b
	LARGE_BIOMES c
	NORMAL a
	SINGLE_BIOME_SURFACE e
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	createNormalWorldDimensions (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/level/levelgen/WorldDimensions; a
	fromSettings (Lnet/minecraft/core/Registry;)Ljava/util/Optional; a
	getNormalOverworld (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/level/dimension/LevelStem; b
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/levelgen/presets/WorldPresets$Bootstrap dyw$a
	biomes c
	context a
	endStem i
	multiNoiseBiomeSourceParameterLists f
	netherStem h
	noiseSettings b
	overworldDimensionType g
	placedFeatures d
	structureSets e
	bootstrap ()V a
	createPresetWithCustomOverworld (Lnet/minecraft/world/level/dimension/LevelStem;)Lnet/minecraft/world/level/levelgen/presets/WorldPreset; a
	makeNoiseBasedOverworld (Lnet/minecraft/world/level/biome/BiomeSource;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/dimension/LevelStem; a
	makeOverworld (Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/world/level/dimension/LevelStem; a
	registerCustomOverworldPreset (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/dimension/LevelStem;)V a
	registerOverworlds (Lnet/minecraft/world/level/biome/BiomeSource;)V a
net/minecraft/world/level/levelgen/structure/BoundingBox dyy
	CODEC a
	LOGGER b
	maxX f
	maxY g
	maxZ h
	minX c
	minY d
	minZ e
	encapsulate (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	encapsulate (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	encapsulatingBoxes (Ljava/lang/Iterable;)Ljava/util/Optional; b
	encapsulatingPositions (Ljava/lang/Iterable;)Ljava/util/Optional; a
	forAllCorners (Ljava/util/function/Consumer;)V a
	fromCorners (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getCenter ()Lnet/minecraft/core/BlockPos; g
	getLength ()Lnet/minecraft/core/Vec3i; c
	getXSpan ()I d
	getYSpan ()I e
	getZSpan ()I f
	infinite ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	inflatedBy (I)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	intersectingChunks ()Ljava/util/stream/Stream; b
	intersects (IIII)Z a
	intersects (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	isInside (III)Z c
	isInside (Lnet/minecraft/core/Vec3i;)Z b
	maxX ()I k
	maxY ()I l
	maxZ ()I m
	minX ()I h
	minY ()I i
	minZ ()I j
	move (III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	move (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	moved (III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	orientBox (IIIIIIIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
net/minecraft/world/level/levelgen/structure/BuiltinStructureSets dyz
	ANCIENT_CITIES q
	BURIED_TREASURES i
	DESERT_PYRAMIDS b
	END_CITIES p
	IGLOOS c
	JUNGLE_TEMPLES d
	MINESHAFTS j
	NETHER_COMPLEXES n
	NETHER_FOSSILS o
	OCEAN_MONUMENTS g
	OCEAN_RUINS m
	PILLAGER_OUTPOSTS f
	RUINED_PORTALS k
	SHIPWRECKS l
	STRONGHOLDS r
	SWAMP_HUTS e
	TRAIL_RUINS s
	TRIAL_CHAMBERS t
	VILLAGES a
	WOODLAND_MANSIONS h
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/levelgen/structure/BuiltinStructures dza
	ANCIENT_CITY F
	BASTION_REMNANT s
	BURIED_TREASURE r
	DESERT_PYRAMID f
	END_CITY q
	FORTRESS o
	IGLOO g
	JUNGLE_TEMPLE e
	MINESHAFT b
	MINESHAFT_MESA c
	NETHER_FOSSIL p
	OCEAN_MONUMENT l
	OCEAN_RUIN_COLD m
	OCEAN_RUIN_WARM n
	PILLAGER_OUTPOST a
	RUINED_PORTAL_DESERT z
	RUINED_PORTAL_JUNGLE A
	RUINED_PORTAL_MOUNTAIN C
	RUINED_PORTAL_NETHER E
	RUINED_PORTAL_OCEAN D
	RUINED_PORTAL_STANDARD y
	RUINED_PORTAL_SWAMP B
	SHIPWRECK h
	SHIPWRECK_BEACHED i
	STRONGHOLD k
	SWAMP_HUT j
	TRAIL_RUINS G
	TRIAL_CHAMBERS H
	VILLAGE_DESERT u
	VILLAGE_PLAINS t
	VILLAGE_SAVANNA v
	VILLAGE_SNOWY w
	VILLAGE_TAIGA x
	WOODLAND_MANSION d
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler dzb
	CURRENT_TO_LEGACY_MAP a
	LEGACY_TO_CURRENT_MAP b
	OLD_STRUCTURE_REGISTRY_KEYS c
	currentKeys h
	dataMap e
	hasLegacyData d
	indexMap f
	legacyKeys g
	getLegacyStructureHandler (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/storage/DimensionDataStorage;)Lnet/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler; a
	hasLegacyStart (IILjava/lang/String;)Z a
	isUnhandledStructureStart (II)Z a
	populateCaches (Lnet/minecraft/world/level/storage/DimensionDataStorage;)V a
	removeIndex (J)V a
	updateFromLegacy (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	updateStructureStart (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/levelgen/structure/PoolElementStructurePiece dzc
	LOGGER d
	element a
	groundLevelDelta h
	junctions i
	position b
	rotation c
	structureTemplateManager j
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addJunction (Lnet/minecraft/world/level/levelgen/structure/pools/JigsawJunction;)V a
	getElement ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElement; b
	getGroundLevelDelta ()I d
	getJunctions ()Ljava/util/List; e
	getPosition ()Lnet/minecraft/core/BlockPos; c
	getRotation ()Lnet/minecraft/world/level/block/Rotation; a
	move (III)V a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/BlockPos;Z)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/PostPlacementProcessor dzd
	NONE a
net/minecraft/world/level/levelgen/structure/ScatteredFeaturePiece dze
	depth c
	height b
	heightPosition d
	width a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	updateAverageGroundHeight (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;I)Z a
	updateHeightPositionToLowestGroundHeight (Lnet/minecraft/world/level/LevelAccessor;I)Z a
net/minecraft/world/level/levelgen/structure/SinglePieceStructure dzf
	constructor d
	depth f
	width e
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
net/minecraft/world/level/levelgen/structure/SinglePieceStructure$PieceConstructor dzf$a
net/minecraft/world/level/levelgen/structure/Structure dzg
	CODEC b
	DIRECT_CODEC a
	settings c
	adjustBoundingBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	afterPlace (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)V a
	biomes ()Lnet/minecraft/core/HolderSet; a
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	findValidGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; b
	generate (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;JLnet/minecraft/world/level/ChunkPos;ILnet/minecraft/world/level/LevelHeightAccessor;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getCornerHeights (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;IIII)[I b
	getLowestY (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;II)I a
	getLowestY (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;IIII)I a
	getLowestYIn5by5BoxOffset7Blocks (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	isValidBiome (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationStub;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Z a
	onTopOfChunkCenter (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;Lnet/minecraft/world/level/levelgen/Heightmap$Types;Ljava/util/function/Consumer;)Ljava/util/Optional; a
	settingsCodec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; a
	simpleCodec (Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	spawnOverrides ()Ljava/util/Map; b
	step ()Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration; c
	terrainAdaptation ()Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment; d
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/Structure$GenerationContext dzg$a
	biomeSource c
	chunkGenerator b
	chunkPos h
	heightAccessor i
	random f
	randomState d
	registryAccess a
	seed g
	structureTemplateManager e
	validBiome j
	biomeSource ()Lnet/minecraft/world/level/biome/BiomeSource; c
	chunkGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; b
	chunkPos ()Lnet/minecraft/world/level/ChunkPos; h
	heightAccessor ()Lnet/minecraft/world/level/LevelHeightAccessor; i
	makeRandom (JLnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/levelgen/WorldgenRandom; a
	random ()Lnet/minecraft/world/level/levelgen/WorldgenRandom; f
	randomState ()Lnet/minecraft/world/level/levelgen/RandomState; d
	registryAccess ()Lnet/minecraft/core/RegistryAccess; a
	seed ()J g
	structureTemplateManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; e
	validBiome ()Ljava/util/function/Predicate; j
net/minecraft/world/level/levelgen/structure/Structure$GenerationStub dzg$b
	generator b
	position a
	generator ()Lcom/mojang/datafixers/util/Either; c
	getPiecesBuilder ()Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder; a
	position ()Lnet/minecraft/core/BlockPos; b
net/minecraft/world/level/levelgen/structure/Structure$StructureSettings dzg$c
	CODEC a
	biomes b
	spawnOverrides c
	step d
	terrainAdaptation e
	biomes ()Lnet/minecraft/core/HolderSet; a
	spawnOverrides ()Ljava/util/Map; b
	step ()Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration; c
	terrainAdaptation ()Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment; d
net/minecraft/world/level/levelgen/structure/StructureCheck dzh
	LOGGER a
	NO_STRUCTURE b
	biomeSource l
	biomes e
	chunkGenerator i
	dimension h
	featureChecks p
	fixerUpper n
	heightAccessor k
	loadedChunks o
	randomState j
	registryAccess d
	seed m
	storageAccess c
	structureConfigs f
	structureTemplateManager g
	canCreateStructure (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/Structure;)Z b
	checkStart (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/Structure;Z)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; a
	checkStructureInfo (Lit/unimi/dsi/fastutil/objects/Object2IntMap;Lnet/minecraft/world/level/levelgen/structure/Structure;Z)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; a
	deduplicateEmptyMap (Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; a
	incrementReference (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/Structure;)V a
	loadStructures (Lnet/minecraft/nbt/CompoundTag;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; a
	onStructureLoad (Lnet/minecraft/world/level/ChunkPos;Ljava/util/Map;)V a
	storeFullResults (JLit/unimi/dsi/fastutil/objects/Object2IntMap;)V a
	tryLoadFromStorage (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/Structure;ZJ)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; a
net/minecraft/world/level/levelgen/structure/StructureCheckResult dzi
	$VALUES d
	CHUNK_LOAD_NEEDED c
	START_NOT_PRESENT b
	START_PRESENT a
	$values ()[Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; a
net/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData dzj
	TAG_All_INDEXES b
	TAG_REMAINING_INDEXES a
	all c
	remaining d
	addIndex (J)V a
	factory ()Lnet/minecraft/world/level/saveddata/SavedData$Factory; a
	getAll ()Lit/unimi/dsi/fastutil/longs/LongSet; b
	hasStartIndex (J)Z b
	hasUnhandledIndex (J)Z c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData; b
	removeIndex (J)V d
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/levelgen/structure/StructurePiece dzk
	CAVE_AIR e
	LOGGER a
	SHAPE_CHECK_BLOCKS i
	boundingBox f
	genDepth g
	mirror c
	orientation b
	rotation d
	type h
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	canBeReplaced (Lnet/minecraft/world/level/LevelReader;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	createBoundingBox (Ljava/util/stream/Stream;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	createChest (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	createChest (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/resources/ResourceLocation;)Z a
	createDispenser (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;Lnet/minecraft/resources/ResourceLocation;)Z a
	createTag (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;)Lnet/minecraft/nbt/CompoundTag; a
	fillColumnDown (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V b
	findCollisionPiece (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateAirBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIII)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIIZLnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector;)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;ZLnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector;)V a
	generateMaybeBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;FIIIIIILnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;ZZ)V a
	generateUpperHalfSphere (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;Z)V a
	getBlock (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/block/state/BlockState; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; f
	getGenDepth ()I g
	getLocatorPosition ()Lnet/minecraft/core/BlockPos; h
	getMirror ()Lnet/minecraft/world/level/block/Mirror; j
	getOrientation ()Lnet/minecraft/core/Direction; i
	getRandomHorizontalDirection (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/Direction; a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType; k
	getWorldPos (III)Lnet/minecraft/core/BlockPos$MutableBlockPos; b
	getWorldX (II)I a
	getWorldY (I)I b
	getWorldZ (II)I b
	isCloseToChunk (Lnet/minecraft/world/level/ChunkPos;I)Z a
	isInterior (Lnet/minecraft/world/level/LevelReader;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z b
	isReplaceableByStructures (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	makeBoundingBox (IIILnet/minecraft/core/Direction;III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	maybeGenerateBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;FIIILnet/minecraft/world/level/block/state/BlockState;)V a
	move (III)V a
	placeBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
	reorient (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	setGenDepth (I)V a
	setOrientation (Lnet/minecraft/core/Direction;)V a
net/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector dzk$a
	next a
	getNext ()Lnet/minecraft/world/level/block/state/BlockState; a
	next (Lnet/minecraft/util/RandomSource;IIIZ)V a
net/minecraft/world/level/levelgen/structure/StructurePieceAccessor dzl
	addPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;)V a
	findCollisionPiece (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
net/minecraft/world/level/levelgen/structure/StructureSet dzm
	CODEC b
	DIRECT_CODEC a
	placement d
	structures c
	entry (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry; a
	entry (Lnet/minecraft/core/Holder;I)Lnet/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry; a
	placement ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacement; b
	structures ()Ljava/util/List; a
net/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry dzm$a
	CODEC a
	structure b
	weight c
	structure ()Lnet/minecraft/core/Holder; a
	weight ()I b
net/minecraft/world/level/levelgen/structure/StructureSpawnOverride dzn
	CODEC a
	boundingBox b
	spawns c
	boundingBox ()Lnet/minecraft/world/level/levelgen/structure/StructureSpawnOverride$BoundingBoxType; a
	spawns ()Lnet/minecraft/util/random/WeightedRandomList; b
net/minecraft/world/level/levelgen/structure/StructureSpawnOverride$BoundingBoxType dzn$a
	$VALUES e
	CODEC c
	PIECE a
	STRUCTURE b
	id d
	$values ()[Lnet/minecraft/world/level/levelgen/structure/StructureSpawnOverride$BoundingBoxType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/structure/StructureStart dzo
	INVALID_START b
	INVALID_START_ID a
	LOGGER c
	cachedBoundingBox h
	chunkPos f
	pieceContainer e
	references g
	structure d
	addReference ()V e
	canBeReferenced ()Z d
	createTag (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getChunkPos ()Lnet/minecraft/world/level/ChunkPos; c
	getMaxReferences ()I g
	getPieces ()Ljava/util/List; i
	getReferences ()I f
	getStructure ()Lnet/minecraft/world/level/levelgen/structure/Structure; h
	isValid ()Z b
	loadStaticStart (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;J)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	placeInChunk (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/world/level/levelgen/structure/StructureType dzp
	BURIED_TREASURE a
	DESERT_PYRAMID b
	END_CITY c
	FORTRESS d
	IGLOO e
	JIGSAW f
	JUNGLE_TEMPLE g
	MINESHAFT h
	NETHER_FOSSIL i
	OCEAN_MONUMENT j
	OCEAN_RUIN k
	RUINED_PORTAL l
	SHIPWRECK m
	STRONGHOLD n
	SWAMP_HUT o
	WOODLAND_MANSION p
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/StructureType; a
net/minecraft/world/level/levelgen/structure/TemplateStructurePiece dzq
	LOGGER h
	placeSettings c
	template b
	templateName a
	templatePosition d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeTemplateLocation ()Lnet/minecraft/resources/ResourceLocation; b
	move (III)V a
	placeSettings ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; e
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
	template ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; c
	templatePosition ()Lnet/minecraft/core/BlockPos; d
net/minecraft/world/level/levelgen/structure/TerrainAdjustment dzr
	$VALUES g
	BEARD_BOX d
	BEARD_THIN c
	BURY b
	CODEC e
	NONE a
	id f
	$values ()[Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator dzt
net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context dzt$a
	chunkGenerator b
	chunkPos d
	config a
	heightAccessor e
	random f
	seed g
	structureTemplateManager c
	chunkGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; b
	chunkPos ()Lnet/minecraft/world/level/ChunkPos; d
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration; a
	heightAccessor ()Lnet/minecraft/world/level/LevelHeightAccessor; e
	random ()Lnet/minecraft/world/level/levelgen/WorldgenRandom; f
	seed ()J g
	structureTemplateManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; c
net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier dzu
net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context dzu$a
	biomeSource b
	chunkGenerator a
	chunkPos e
	config f
	heightAccessor g
	randomState c
	registryAccess j
	seed d
	structureTemplateManager i
	validBiome h
	biomeSource ()Lnet/minecraft/world/level/biome/BiomeSource; b
	chunkGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; a
	chunkPos ()Lnet/minecraft/world/level/ChunkPos; e
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration; f
	heightAccessor ()Lnet/minecraft/world/level/LevelHeightAccessor; g
	randomState ()Lnet/minecraft/world/level/levelgen/RandomState; c
	registryAccess ()Lnet/minecraft/core/RegistryAccess; j
	seed ()J d
	structureTemplateManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; i
	validBiome ()Ljava/util/function/Predicate; h
	validBiomeOnTop (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Z a
net/minecraft/world/level/levelgen/structure/pieces/PiecesContainer dzv
	JIGSAW_RENAME c
	LOGGER b
	RENAMES d
	pieces a
	calculateBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	isEmpty ()Z a
	isInsidePiece (Lnet/minecraft/core/BlockPos;)Z a
	load (Lnet/minecraft/nbt/ListTag;Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;)Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer; a
	pieces ()Ljava/util/List; c
	save (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;)Lnet/minecraft/nbt/Tag; a
net/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext dzw
	registryAccess b
	resourceManager a
	structureTemplateManager c
	fromLevel (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext; a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; b
	resourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; a
	structureTemplateManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; c
net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType dzx
	BURIED_TREASURE_PIECE aa
	DESERT_PYRAMID_PIECE L
	END_CITY_PIECE Y
	IGLOO I
	JIGSAW ad
	JUNGLE_PYRAMID_PIECE G
	MINE_SHAFT_CORRIDOR a
	MINE_SHAFT_CROSSING b
	MINE_SHAFT_ROOM c
	MINE_SHAFT_STAIRS d
	NETHER_FORTRESS_BRIDGE_CROSSING e
	NETHER_FORTRESS_BRIDGE_END_FILLER f
	NETHER_FORTRESS_BRIDGE_STRAIGHT g
	NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS h
	NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY i
	NETHER_FORTRESS_CASTLE_ENTRANCE j
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR m
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING k
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN l
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN n
	NETHER_FORTRESS_CASTLE_STALK_ROOM o
	NETHER_FORTRESS_MONSTER_THRONE p
	NETHER_FORTRESS_ROOM_CROSSING q
	NETHER_FORTRESS_STAIRS_ROOM r
	NETHER_FORTRESS_START s
	NETHER_FOSSIL ac
	OCEAN_MONUMENT_BUILDING M
	OCEAN_MONUMENT_CORE_ROOM N
	OCEAN_MONUMENT_DOUBLE_XY_ROOM P
	OCEAN_MONUMENT_DOUBLE_X_ROOM O
	OCEAN_MONUMENT_DOUBLE_YZ_ROOM R
	OCEAN_MONUMENT_DOUBLE_Y_ROOM Q
	OCEAN_MONUMENT_DOUBLE_Z_ROOM S
	OCEAN_MONUMENT_ENTRY_ROOM T
	OCEAN_MONUMENT_PENTHOUSE U
	OCEAN_MONUMENT_SIMPLE_ROOM V
	OCEAN_MONUMENT_SIMPLE_TOP_ROOM W
	OCEAN_MONUMENT_WING_ROOM X
	OCEAN_RUIN H
	RUINED_PORTAL J
	SHIPWRECK_PIECE ab
	STRONGHOLD_CHEST_CORRIDOR t
	STRONGHOLD_FILLER_CORRIDOR u
	STRONGHOLD_FIVE_CROSSING v
	STRONGHOLD_LEFT_TURN w
	STRONGHOLD_LIBRARY x
	STRONGHOLD_PORTAL_ROOM y
	STRONGHOLD_PRISON_HALL z
	STRONGHOLD_RIGHT_TURN A
	STRONGHOLD_ROOM_CROSSING B
	STRONGHOLD_STAIRS_DOWN C
	STRONGHOLD_START D
	STRONGHOLD_STRAIGHT E
	STRONGHOLD_STRAIGHT_STAIRS_DOWN F
	SWAMPLAND_HUT K
	WOODLAND_MANSION_PIECE Z
	setFullContextPieceId (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType; a
	setPieceId (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$ContextlessType;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType; a
	setTemplatePieceId (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$StructureTemplateType;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType; a
net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$ContextlessType dzx$a
net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$StructureTemplateType dzx$b
net/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder dzy
	pieces a
	addPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;)V a
	build ()Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer; a
	clear ()V b
	findCollisionPiece (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; d
	isEmpty ()Z c
	moveBelowSeaLevel (IILnet/minecraft/util/RandomSource;I)I a
	moveInsideHeights (Lnet/minecraft/util/RandomSource;II)V a
	offsetPiecesVertically (I)V a
net/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement eaa
	CODEC a
	count e
	distance c
	preferredBiomes f
	spread d
	codec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P9; b
	count ()I c
	distance ()I a
	isPlacementChunk (Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;II)Z a
	preferredBiomes ()Lnet/minecraft/core/HolderSet; d
	spread ()I b
	type ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacementType; e
net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement eab
	CODEC a
	separation d
	spacing c
	spreadType e
	getPotentialStructureChunk (JII)Lnet/minecraft/world/level/ChunkPos; a
	isPlacementChunk (Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;II)Z a
	separation ()I b
	spacing ()I a
	spreadType ()Lnet/minecraft/world/level/levelgen/structure/placement/RandomSpreadType; c
	type ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacementType; e
	validate (Lnet/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement;)Lcom/mojang/serialization/DataResult; a
net/minecraft/world/level/levelgen/structure/placement/RandomSpreadType eac
	$VALUES e
	CODEC c
	LINEAR a
	TRIANGULAR b
	id d
	$values ()[Lnet/minecraft/world/level/levelgen/structure/placement/RandomSpreadType; a
	evaluate (Lnet/minecraft/util/RandomSource;I)I a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/structure/placement/StructurePlacement ead
	CODEC b
	HIGHLY_ARBITRARY_RANDOM_SALT a
	exclusionZone g
	frequency e
	frequencyReductionMethod d
	locateOffset c
	salt f
	exclusionZone ()Ljava/util/Optional; j
	frequency ()F h
	frequencyReductionMethod ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReductionMethod; g
	getLocatePos (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/core/BlockPos; a
	isPlacementChunk (Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;II)Z a
	isStructureChunk (Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;II)Z b
	legacyArbitrarySaltProbabilityReducer (JIIIF)Z c
	legacyPillagerOutpostReducer (JIIIF)Z d
	legacyProbabilityReducerWithDouble (JIIIF)Z b
	locateOffset ()Lnet/minecraft/core/Vec3i; f
	placementCodec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P5; a
	probabilityReducer (JIIIF)Z a
	salt ()I i
	type ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacementType; e
net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$ExclusionZone ead$a
	CODEC a
	chunkCount c
	otherSet b
	chunkCount ()I b
	isPlacementForbidden (Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;II)Z a
	otherSet ()Lnet/minecraft/core/Holder; a
net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReducer ead$b
net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReductionMethod ead$c
	$VALUES h
	CODEC e
	DEFAULT a
	LEGACY_TYPE_1 b
	LEGACY_TYPE_2 c
	LEGACY_TYPE_3 d
	name f
	reducer g
	$values ()[Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReductionMethod; a
	getSerializedName ()Ljava/lang/String; c
	shouldGenerate (JIIIF)Z a
net/minecraft/world/level/levelgen/structure/placement/StructurePlacementType eae
	CONCENTRIC_RINGS b
	RANDOM_SPREAD a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacementType; a
net/minecraft/world/level/levelgen/structure/pools/EmptyPoolElement eag
	CODEC a
	INSTANCE b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;Z)Z a
net/minecraft/world/level/levelgen/structure/pools/FeaturePoolElement eah
	CODEC a
	defaultJigsawNBT c
	feature b
	fillDefaultJigsawNBT ()Lnet/minecraft/nbt/CompoundTag; b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;Z)Z a
net/minecraft/world/level/levelgen/structure/pools/JigsawJunction eai
	deltaY d
	destProjection e
	sourceGroundY b
	sourceX a
	sourceZ c
	deserialize (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/levelgen/structure/pools/JigsawJunction; a
	getDeltaY ()I d
	getDestProjection ()Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection; e
	getSourceGroundY ()I b
	getSourceX ()I a
	getSourceZ ()I c
	serialize (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement eaj
	LOGGER a
	addPieces (Lnet/minecraft/world/level/levelgen/RandomState;IZLnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/levelgen/structure/PoolElementStructurePiece;Ljava/util/List;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/level/levelgen/structure/pools/alias/PoolAliasLookup;)V a
	addPieces (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;Lnet/minecraft/core/Holder;Ljava/util/Optional;ILnet/minecraft/core/BlockPos;ZLjava/util/Optional;ILnet/minecraft/world/level/levelgen/structure/pools/alias/PoolAliasLookup;)Ljava/util/Optional; a
	generateJigsaw (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/Holder;Lnet/minecraft/resources/ResourceLocation;ILnet/minecraft/core/BlockPos;Z)Z a
	getRandomNamedJigsaw (Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElement;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/levelgen/WorldgenRandom;)Ljava/util/Optional; a
net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$PieceState eaj$a
	depth c
	free b
	piece a
	depth ()I c
	free ()Lorg/apache/commons/lang3/mutable/MutableObject; b
	piece ()Lnet/minecraft/world/level/levelgen/structure/PoolElementStructurePiece; a
net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$Placer eaj$b
	chunkGenerator c
	maxDepth b
	pieces e
	placing g
	pools a
	random f
	structureTemplateManager d
	readPoolKey (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/pools/alias/PoolAliasLookup;)Lnet/minecraft/resources/ResourceKey; a
	tryPlacingChildren (Lnet/minecraft/world/level/levelgen/structure/PoolElementStructurePiece;Lorg/apache/commons/lang3/mutable/MutableObject;IZLnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/structure/pools/alias/PoolAliasLookup;)V a
net/minecraft/world/level/levelgen/structure/pools/LegacySinglePoolElement eak
	CODEC a
	getSettings (Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
net/minecraft/world/level/levelgen/structure/pools/ListPoolElement eal
	CODEC a
	elements b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;Z)Z a
	setProjection (Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection;)Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElement; a
	setProjectionOnEachElement (Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection;)V b
net/minecraft/world/level/levelgen/structure/pools/SinglePoolElement eam
	CODEC b
	TEMPLATE_CODEC a
	processors d
	template c
	encodeTemplate (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getDataMarkers (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Z)Ljava/util/List; a
	getSettings (Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;Z)Z a
	processorsCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; b
	sortBySelectionPriority (Ljava/util/List;)V a
	templateCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; c
net/minecraft/world/level/levelgen/structure/pools/StructurePoolElement ean
	CODEC e
	EMPTY a
	projection b
	empty ()Ljava/util/function/Function; g
	feature (Lnet/minecraft/core/Holder;)Ljava/util/function/Function; a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getGroundLevelDelta ()I f
	getProjection ()Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection; e
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
	handleDataMarker (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	legacy (Ljava/lang/String;)Ljava/util/function/Function; a
	legacy (Ljava/lang/String;Lnet/minecraft/core/Holder;)Ljava/util/function/Function; a
	list (Ljava/util/List;)Ljava/util/function/Function; b
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;Z)Z a
	projectionCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; d
	setProjection (Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection;)Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElement; a
	single (Ljava/lang/String;)Ljava/util/function/Function; b
	single (Ljava/lang/String;Lnet/minecraft/core/Holder;)Ljava/util/function/Function; b
net/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType eao
	EMPTY d
	FEATURE c
	LEGACY e
	LIST b
	SINGLE a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool eap
	CODEC b
	CODEC_REFERENCE d
	DIRECT_CODEC a
	SIZE_UNSET c
	fallback g
	maxSize h
	rawTemplates e
	templates f
	getFallback ()Lnet/minecraft/core/Holder; a
	getMaxSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;)I a
	getRandomTemplate (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElement; a
	getShuffledTemplates (Lnet/minecraft/util/RandomSource;)Ljava/util/List; b
	size ()I b
net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection eap$a
	$VALUES f
	CODEC c
	RIGID b
	TERRAIN_MATCHING a
	name d
	processors e
	$values ()[Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection; d
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection; a
	getName ()Ljava/lang/String; a
	getProcessors ()Lcom/google/common/collect/ImmutableList; b
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/structure/pools/alias/Direct eaq
	CODEC a
	alias c
	target d
	alias ()Lnet/minecraft/resources/ResourceKey; c
	allTargets ()Ljava/util/stream/Stream; a
	codec ()Lcom/mojang/serialization/Codec; b
	forEachResolved (Lnet/minecraft/util/RandomSource;Ljava/util/function/BiConsumer;)V a
	target ()Lnet/minecraft/resources/ResourceKey; d
net/minecraft/world/level/levelgen/structure/pools/alias/PoolAliasBinding ear
	CODEC b
	allTargets ()Ljava/util/stream/Stream; a
	codec ()Lcom/mojang/serialization/Codec; b
	direct (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pools/alias/Direct; a
	direct (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/structure/pools/alias/Direct; a
	forEachResolved (Lnet/minecraft/util/RandomSource;Ljava/util/function/BiConsumer;)V a
	random (Ljava/lang/String;Lnet/minecraft/util/random/SimpleWeightedRandomList;)Lnet/minecraft/world/level/levelgen/structure/pools/alias/Random; a
	random (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/util/random/SimpleWeightedRandomList;)Lnet/minecraft/world/level/levelgen/structure/pools/alias/Random; a
	randomGroup (Lnet/minecraft/util/random/SimpleWeightedRandomList;)Lnet/minecraft/world/level/levelgen/structure/pools/alias/RandomGroup; a
net/minecraft/world/level/levelgen/structure/pools/alias/PoolAliasBindings eas
	bootstrap (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec; a
	registerTargetsAsPools (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/core/Holder;Ljava/util/List;)V a
net/minecraft/world/level/levelgen/structure/pools/alias/PoolAliasLookup eat
	EMPTY a
net/minecraft/world/level/levelgen/structure/pools/alias/Random eau
	CODEC a
	alias c
	targets d
	alias ()Lnet/minecraft/resources/ResourceKey; c
	allTargets ()Ljava/util/stream/Stream; a
	codec ()Lcom/mojang/serialization/Codec; b
	forEachResolved (Lnet/minecraft/util/RandomSource;Ljava/util/function/BiConsumer;)V a
	targets ()Lnet/minecraft/util/random/SimpleWeightedRandomList; d
net/minecraft/world/level/levelgen/structure/pools/alias/RandomGroup eav
	CODEC a
	groups c
	allTargets ()Ljava/util/stream/Stream; a
	codec ()Lcom/mojang/serialization/Codec; b
	forEachResolved (Lnet/minecraft/util/RandomSource;Ljava/util/function/BiConsumer;)V a
	groups ()Lnet/minecraft/util/random/SimpleWeightedRandomList; c
net/minecraft/world/level/levelgen/structure/structures/BuriedTreasurePieces eay
net/minecraft/world/level/levelgen/structure/structures/BuriedTreasurePieces$BuriedTreasurePiece eay$a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	isLiquid (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/BuriedTreasureStructure eaz
	CODEC d
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/DesertPyramidPiece eba
	DEPTH i
	WIDTH h
	hasPlacedChest j
	potentialSuspiciousSandWorldPositions k
	randomCollapsedRoofPos l
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addCellar (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	addCellarRoom (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V b
	addCellarStairs (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	getPotentialSuspiciousSandWorldPositions ()Ljava/util/List; b
	getRandomCollapsedRoofPos ()Lnet/minecraft/core/BlockPos; c
	placeCollapsedRoof (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIII)V a
	placeCollapsedRoofPiece (Lnet/minecraft/world/level/WorldGenLevel;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	placeSand (III)V c
	placeSandBox (IIIIII)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/DesertPyramidStructure ebb
	CODEC d
	afterPlace (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)V a
	placeSuspiciousSand (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/EndCityPieces ebc
	FAT_TOWER_BRIDGES f
	FAT_TOWER_GENERATOR g
	HOUSE_TOWER_GENERATOR b
	MAX_GEN_DEPTH a
	TOWER_BRIDGES c
	TOWER_BRIDGE_GENERATOR e
	TOWER_GENERATOR d
	addHelper (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece;)Lnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece; a
	addPiece (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/lang/String;Lnet/minecraft/world/level/block/Rotation;Z)Lnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece; a
	recursiveChildren (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$SectionGenerator;ILnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/util/RandomSource;)Z a
	startHouseTower (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece ebc$a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeResourceLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	makeSettings (ZLnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	makeTemplateLocation ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$SectionGenerator ebc$b
	generate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;ILnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/util/RandomSource;)Z a
	init ()V a
net/minecraft/world/level/levelgen/structure/structures/EndCityStructure ebd
	CODEC d
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/IglooPieces ebe
	GENERATION_HEIGHT a
	OFFSETS f
	PIVOTS e
	STRUCTURE_LOCATION_IGLOO b
	STRUCTURE_LOCATION_LABORATORY d
	STRUCTURE_LOCATION_LADDER c
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/levelgen/structure/structures/IglooPieces$IglooPiece ebe$a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makePosition (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/core/BlockPos; a
	makeSettings (Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/IglooStructure ebf
	CODEC d
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/JigsawStructure ebg
	CODEC f
	MAX_DEPTH e
	MAX_TOTAL_STRUCTURE_RANGE d
	maxDepth i
	maxDistanceFromCenter m
	poolAliases n
	projectStartToHeightmap l
	startHeight j
	startJigsawName h
	startPool g
	useExpansionHack k
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	getPoolAliases ()Ljava/util/List; f
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
	verifyRange (Lnet/minecraft/world/level/levelgen/structure/structures/JigsawStructure;)Lcom/mojang/serialization/DataResult; a
net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece ebh
	DEPTH i
	STONE_SELECTOR n
	WIDTH h
	placedHiddenChest k
	placedMainChest j
	placedTrap1 l
	placedTrap2 m
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece$MossStoneSelector ebh$a
	next (Lnet/minecraft/util/RandomSource;IIIZ)V a
net/minecraft/world/level/levelgen/structure/structures/JungleTempleStructure ebi
	CODEC d
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces ebj
	DEFAULT_SHAFT_HEIGHT d
	DEFAULT_SHAFT_LENGTH e
	DEFAULT_SHAFT_WIDTH c
	LOGGER b
	MAGIC_START_Y a
	MAX_CHAIN_HEIGHT g
	MAX_DEPTH h
	MAX_PILLAR_HEIGHT f
	createRandomShaftPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;ILnet/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$Type;)Lnet/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftPiece; a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftPiece; a
net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftCorridor ebj$a
	hasPlacedSpider d
	hasRails b
	numSections h
	spiderCorridor c
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	canHangChainBelow (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	canPlaceColumnOnTopOf (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	createChest (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/resources/ResourceLocation;)Z a
	fillColumnBetween (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos$MutableBlockPos;II)V a
	fillColumnDown (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V b
	fillPillarDownOrChainUp (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V c
	findCorridorSize (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	hasSturdyNeighbours (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)Z a
	maybePlaceCobWeb (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;FIII)V a
	placeDoubleLowerOrUpperSupport (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;III)V a
	placeSupport (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIILnet/minecraft/util/RandomSource;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftCrossing ebj$b
	direction b
	isTwoFloored c
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	findCrossing (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	placeSupportPillar (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftPiece ebj$c
	type a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	canBeReplaced (Lnet/minecraft/world/level/LevelReader;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	isInInvalidLocation (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	isSupportingBox (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)Z a
	setPlanksBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/block/state/BlockState;III)V a
net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftRoom ebj$d
	childEntranceBoxes b
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	move (III)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftStairs ebj$e
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	findStairs (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure ebk
	CODEC d
	type e
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePiecesAndAdjust (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)I a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$Type ebk$a
	$VALUES i
	BY_ID d
	CODEC c
	MESA b
	NORMAL a
	fenceState h
	name e
	planksState g
	woodState f
	$values ()[Lnet/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$Type; f
	byId (I)Lnet/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$Type; a
	getFenceState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getName ()Ljava/lang/String; a
	getPlanksState ()Lnet/minecraft/world/level/block/state/BlockState; d
	getSerializedName ()Ljava/lang/String; c
	getWoodState ()Lnet/minecraft/world/level/block/state/BlockState; b
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces ebl
	BRIDGE_PIECE_WEIGHTS d
	CASTLE_PIECE_WEIGHTS e
	LOWEST_Y_POSITION c
	MAGIC_START_Y a
	MAX_DEPTH b
	findAndCreateBridgePieceFactory (Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$PieceWeight;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$NetherBridgePiece; a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeCrossing ebl$a
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeEndFiller ebl$b
	DEPTH c
	HEIGHT b
	WIDTH a
	selfSeed d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeEndFiller; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeStraight ebl$c
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeStraight; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorStairsPiece ebl$d
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorStairsPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorTBalconyPiece ebl$e
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorTBalconyPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleEntrance ebl$f
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleEntrance; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorCrossingPiece ebl$g
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorCrossingPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorLeftTurnPiece ebl$h
	DEPTH c
	HEIGHT b
	WIDTH a
	isNeedingChest d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorLeftTurnPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorPiece ebl$i
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorRightTurnPiece ebl$j
	DEPTH c
	HEIGHT b
	WIDTH a
	isNeedingChest d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorRightTurnPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleStalkRoom ebl$k
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleStalkRoom; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$MonsterThrone ebl$l
	DEPTH c
	HEIGHT b
	WIDTH a
	hasPlacedSpawner d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$MonsterThrone; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$NetherBridgePiece ebl$m
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;IZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateChildForward (Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateChildLeft (Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; b
	generateChildRight (Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; c
	generatePiece (Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece;Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$NetherBridgePiece; a
	isOkBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	updatePieceWeight (Ljava/util/List;)I a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$PieceWeight ebl$n
	allowInRow e
	maxPlaceCount d
	pieceClass a
	placeCount c
	weight b
	doPlace (I)Z a
	isValid ()Z a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$RoomCrossing ebl$o
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$RoomCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StairsRoom ebl$p
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StairsRoom; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece ebl$q
	availableBridgePieces b
	availableCastlePieces c
	pendingChildren d
	previousPiece a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressStructure ebm
	CODEC e
	FORTRESS_ENEMIES d
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces ebn
	FOSSILS a
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces$NetherFossilPiece ebn$a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeSettings (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFossilStructure ebo
	CODEC d
	height e
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces ebp
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleXRoom ebp$a
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleXYRoom ebp$b
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleYRoom ebp$c
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleYZRoom ebp$d
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleZRoom ebp$e
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitSimpleRoom ebp$f
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitSimpleTopRoom ebp$g
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$MonumentBuilding ebp$h
	BIOME_RANGE_CHECK a
	DEPTH E
	HEIGHT D
	TOP_POSITION F
	WIDTH C
	childPieces I
	coreRoom H
	sourceRoom G
	generateEntranceArchs (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	generateEntranceWall (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V b
	generateLowerWall (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V d
	generateMiddleWall (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V e
	generateRoofPiece (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V c
	generateRoomGraph (Lnet/minecraft/util/RandomSource;)Ljava/util/List; b
	generateUpperWall (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V f
	generateWing (ZILnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$MonumentRoomFitter ebp$i
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentCoreRoom ebp$j
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleXRoom ebp$k
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleXYRoom ebp$l
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleYRoom ebp$m
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleYZRoom ebp$n
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleZRoom ebp$o
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentEntryRoom ebp$p
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPenthouse ebp$q
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece ebp$r
	BASE_BLACK d
	BASE_GRAY b
	BASE_LIGHT c
	DOT_DECO_DATA h
	DO_FILL j
	FILL_BLOCK k
	FILL_KEEP l
	GRIDROOM_DEPTH n
	GRIDROOM_HEIGHT o
	GRIDROOM_LEFTWING_CONNECT_INDEX w
	GRIDROOM_RIGHTWING_CONNECT_INDEX x
	GRIDROOM_SOURCE_INDEX u
	GRIDROOM_TOP_CONNECT_INDEX v
	GRIDROOM_WIDTH m
	GRID_DEPTH q
	GRID_FLOOR_COUNT s
	GRID_HEIGHT r
	GRID_SIZE t
	GRID_WIDTH p
	LAMP_BLOCK i
	LEFTWING_INDEX y
	PENTHOUSE_INDEX A
	RIGHTWING_INDEX z
	roomDefinition B
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	chunkIntersects (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)Z a
	generateBoxOnFillOnly (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;)V a
	generateDefaultFloor (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIZ)V a
	generateWaterBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIII)V b
	getRoomIndex (III)I c
	makeBoundingBox (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	spawnElder (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;III)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentSimpleRoom ebp$s
	mainDesign a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentSimpleTopRoom ebp$t
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentWingRoom ebp$u
	mainDesign a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition ebp$v
	claimed d
	connections b
	hasOpening c
	index a
	isSource e
	scanIndex f
	countOpenings ()I c
	findSource (I)Z a
	isSpecial ()Z b
	setConnection (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)V a
	updateOpenings ()V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentStructure ebq
	CODEC d
	createTopPiece (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/WorldgenRandom;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	regeneratePiecesAfterLoad (Lnet/minecraft/world/level/ChunkPos;JLnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer; a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces ebr
	BIG_RUINS_BRICK g
	BIG_RUINS_CRACKED i
	BIG_RUINS_MOSSY h
	BIG_WARM_RUINS j
	COLD_SUSPICIOUS_BLOCK_PROCESSOR b
	RUINS_BRICK d
	RUINS_CRACKED e
	RUINS_MOSSY f
	WARM_RUINS c
	WARM_SUSPICIOUS_BLOCK_PROCESSOR a
	addClusterRuins (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;)V a
	addPiece (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure;ZF)V a
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure;)V a
	allPositions (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/List; a
	archyRuleProcessor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor; a
	getBigWarmRuin (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/ResourceLocation; b
	getSmallWarmRuin (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces$OceanRuinPiece ebr$a
	biomeType h
	integrity i
	isLarge j
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	create (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces$OceanRuinPiece; a
	getHeight (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeSettings (Lnet/minecraft/world/level/block/Rotation;FLnet/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure$Type;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure ebs
	CODEC d
	biomeTemp e
	clusterProbability g
	largeProbability f
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure$Type ebs$a
	$VALUES e
	CODEC c
	COLD b
	WARM a
	name d
	$values ()[Lnet/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure$Type; b
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece ebt
	LOGGER h
	PROBABILITY_OF_GOLD_GONE i
	PROBABILITY_OF_MAGMA_INSTEAD_OF_LAVA k
	PROBABILITY_OF_MAGMA_INSTEAD_OF_NETHERRACK j
	properties m
	verticalPlacement l
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addNetherrackDripColumn (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V c
	addNetherrackDripColumnsBelowPortal (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;)V a
	canBlockBeReplacedByNetherrackOrMagma (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	getBlockReplaceRule (Lnet/minecraft/world/level/block/Block;FLnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; a
	getBlockReplaceRule (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; a
	getHeightMapType (Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
	getLavaProcessorRule (Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement;Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$Properties;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; a
	getSurfaceY (Lnet/minecraft/world/level/LevelAccessor;IILnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement;)I a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeSettings (Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$Properties;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	makeSettings (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	maybeAddLeavesAbove (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	maybeAddVines (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	placeNetherrackOrMagma (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V d
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
	spreadNetherrack (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;)V b
net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$Properties ebt$a
	CODEC a
	airPocket d
	cold b
	mossiness c
	overgrown e
	replaceWithBlackstone g
	vines f
net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement ebt$b
	$VALUES i
	CODEC g
	IN_MOUNTAIN d
	IN_NETHER f
	ON_LAND_SURFACE a
	ON_OCEAN_FLOOR c
	PARTLY_BURIED b
	UNDERGROUND e
	name h
	$values ()[Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement; a
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure ebu
	CODEC d
	MIN_Y_INDEX h
	PROBABILITY_OF_GIANT_PORTAL g
	STRUCTURE_LOCATION_GIANT_PORTALS f
	STRUCTURE_LOCATION_PORTALS e
	setups i
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	findSuitableY (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement;ZIILnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I a
	getRandomWithinInterval (Lnet/minecraft/util/RandomSource;II)I a
	isCold (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Holder;)Z a
	sample (Lnet/minecraft/world/level/levelgen/WorldgenRandom;F)Z a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure$Setup ebu$a
	CODEC a
	airPocketProbability c
	canBeCold g
	mossiness d
	overgrown e
	placement b
	replaceWithBlackstone h
	vines f
	weight i
	airPocketProbability ()F b
	canBeCold ()Z f
	mossiness ()F c
	overgrown ()Z d
	placement ()Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement; a
	replaceWithBlackstone ()Z g
	vines ()Z e
	weight ()F h
net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces ebv
	MARKERS_TO_LOOT d
	PIVOT a
	STRUCTURE_LOCATION_BEACHED b
	STRUCTURE_LOCATION_OCEAN c
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;Z)V a
net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces$ShipwreckPiece ebv$a
	isBeached h
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeSettings (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/ShipwreckStructure ebw
	CODEC d
	isBeached e
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces ebx
	CHECK_AIR f
	LOWEST_Y_POSITION e
	MAGIC_START_Y a
	MAX_DEPTH d
	SMALL_DOOR_HEIGHT c
	SMALL_DOOR_WIDTH b
	SMOOTH_STONE_SELECTOR k
	STRONGHOLD_PIECE_WEIGHTS g
	currentPieces h
	imposedPiece i
	totalWeight j
	findAndCreatePieceFactory (Ljava/lang/Class;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece; a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; b
	generatePieceFromSmallDoor (Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece; a
	resetPieces ()V a
	updatePieceWeight ()Z b
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$ChestCorridor ebx$a
	DEPTH c
	HEIGHT b
	WIDTH a
	hasPlacedChest d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$ChestCorridor; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FillerCorridor ebx$b
	steps a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	findPieceBox (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FiveCrossing ebx$c
	DEPTH c
	HEIGHT b
	WIDTH a
	leftHigh i
	leftLow d
	rightHigh k
	rightLow j
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FiveCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$LeftTurn ebx$d
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$LeftTurn; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Library ebx$e
	DEPTH d
	HEIGHT b
	TALL_HEIGHT c
	WIDTH a
	isTall i
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Library; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PieceWeight ebx$f
	maxPlaceCount d
	pieceClass a
	placeCount c
	weight b
	doPlace (I)Z a
	isValid ()Z a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PortalRoom ebx$g
	DEPTH c
	HEIGHT b
	WIDTH a
	hasPlacedSpawner d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PortalRoom; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PrisonHall ebx$h
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PrisonHall; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RightTurn ebx$i
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RightTurn; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RoomCrossing ebx$j
	DEPTH c
	HEIGHT b
	WIDTH a
	type d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RoomCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$SmoothStoneSelector ebx$k
	next (Lnet/minecraft/util/RandomSource;IIIZ)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StairsDown ebx$l
	DEPTH c
	HEIGHT b
	WIDTH a
	isSource d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StairsDown; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece ebx$m
	pendingChildren c
	portalRoomPiece b
	previousPiece a
	getLocatorPosition ()Lnet/minecraft/core/BlockPos; h
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Straight ebx$n
	DEPTH c
	HEIGHT b
	WIDTH a
	leftChild d
	rightChild i
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Straight; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StraightStairsDown ebx$o
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StraightStairsDown; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece ebx$p
	entryDoor h
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	generateSmallDoor (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece$SmallDoorType;III)V a
	generateSmallDoorChildForward (Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateSmallDoorChildLeft (Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; b
	generateSmallDoorChildRight (Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; c
	isOkBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	randomSmallDoor (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece$SmallDoorType; b
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece$SmallDoorType ebx$p$a
	$VALUES e
	GRATES c
	IRON_DOOR d
	OPENING a
	WOOD_DOOR b
	$values ()[Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece$SmallDoorType; a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Turn ebx$q
	DEPTH c
	HEIGHT b
	WIDTH a
net/minecraft/world/level/levelgen/structure/structures/StrongholdStructure eby
	CODEC d
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/SwampHutPiece ebz
	spawnedCat i
	spawnedWitch h
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
	spawnCat (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
net/minecraft/world/level/levelgen/structure/structures/SwampHutStructure eca
	CODEC d
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces ecb
	generateMansion (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FirstFloorRoomCollection ecb$a
	get1x1 (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; a
	get1x1Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; b
	get1x2FrontEntrance (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; b
	get1x2Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; c
	get1x2SideEntrance (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; a
	get2x2 (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; d
	get2x2Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection ecb$b
	get1x1 (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; a
	get1x1Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; b
	get1x2FrontEntrance (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; b
	get1x2Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; c
	get1x2SideEntrance (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; a
	get2x2 (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; d
	get2x2Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionGrid ecb$c
	BLOCKED g
	CLEAR b
	CORRIDOR c
	DEFAULT_SIZE a
	ROOM d
	ROOM_1x1 h
	ROOM_1x2 i
	ROOM_2x2 j
	ROOM_CORRIDOR_FLAG n
	ROOM_DOOR_FLAG l
	ROOM_ID_MASK p
	ROOM_ORIGIN_FLAG k
	ROOM_STAIRS_FLAG m
	ROOM_TYPE_MASK o
	START_ROOM e
	TEST_ROOM f
	baseGrid r
	entranceX u
	entranceY v
	floorRooms t
	random q
	thirdFloorGrid s
	cleanEdges (Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;)Z a
	get1x2RoomDirection (Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;IIII)Lnet/minecraft/core/Direction; b
	identifyRooms (Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;)V a
	isHouse (Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;II)Z a
	isRoomId (Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;IIII)Z a
	recursiveCorridor (Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;IILnet/minecraft/core/Direction;I)V a
	setupThirdFloor ()V a
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionPiecePlacer ecb$d
	random b
	startX c
	startY d
	structureTemplateManager a
	addRoom1x1 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection;)V a
	addRoom1x2 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection;Z)V a
	addRoom2x2 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection;)V a
	addRoom2x2Secret (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection;)V a
	createMansion (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionGrid;)V a
	createRoof (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;)V a
	entrance (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData;)V a
	traverseInnerTurn (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData;)V d
	traverseOuterWalls (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/core/Direction;IIII)V a
	traverseTurn (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData;)V c
	traverseWallPiece (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData;)V b
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData ecb$e
	position b
	rotation a
	wallType c
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SecondFloorRoomCollection ecb$f
	get1x1 (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; a
	get1x1Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; b
	get1x2FrontEntrance (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; b
	get1x2Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; c
	get1x2SideEntrance (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; a
	get2x2 (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; d
	get2x2Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid ecb$g
	grid a
	height c
	valueIfOutside d
	width b
	edgesTo (III)Z b
	get (II)I a
	set (III)V a
	set (IIIII)V a
	setif (IIII)V a
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$ThirdFloorRoomCollection ecb$h
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$WoodlandMansionPiece ecb$i
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	makeSettings (Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	makeTemplateLocation ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionStructure ecc
	CODEC d
	afterPlace (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)V a
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/templatesystem/AlwaysTrueTest ece
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/AxisAlignedLinearPosTest ecf
	CODEC a
	axis g
	maxChance d
	maxDist f
	minChance b
	minDist e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/BlackstoneReplaceProcessor ecg
	CODEC a
	INSTANCE b
	replacements c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockAgeProcessor ech
	CODEC a
	NON_MOSSY_REPLACEMENTS e
	PROBABILITY_OF_REPLACING_FULL_BLOCK b
	PROBABILITY_OF_REPLACING_OBSIDIAN d
	PROBABILITY_OF_REPLACING_STAIRS c
	mossiness f
	getRandomBlock (Lnet/minecraft/util/RandomSource;[Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	getRandomBlock (Lnet/minecraft/util/RandomSource;[Lnet/minecraft/world/level/block/state/BlockState;[Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	getRandomFacingStairs (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockState; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	maybeReplaceFullStoneBlock (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; a
	maybeReplaceObsidian (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; d
	maybeReplaceSlab (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; b
	maybeReplaceStairs (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	maybeReplaceWall (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; c
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockIgnoreProcessor eci
	AIR c
	CODEC a
	STRUCTURE_AND_AIR d
	STRUCTURE_BLOCK b
	toIgnore e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockMatchTest ecj
	CODEC a
	block b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockRotProcessor eck
	CODEC a
	integrity c
	rottableBlocks b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockStateMatchTest ecl
	CODEC a
	blockState b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/CappedProcessor ecm
	CODEC a
	delegate b
	limit c
	finalizeProcessing (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/List;Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Ljava/util/List; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
net/minecraft/world/level/levelgen/structure/templatesystem/GravityProcessor ecn
	CODEC a
	heightmap b
	offset c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/JigsawReplacementProcessor eco
	CODEC a
	INSTANCE b
	LOGGER c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/LavaSubmergedBlockProcessor ecp
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/LinearPosTest ecq
	CODEC a
	maxChance d
	maxDist f
	minChance b
	minDist e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/NopProcessor ecr
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
net/minecraft/world/level/levelgen/structure/templatesystem/PosAlwaysTrueTest ecs
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest ect
	CODEC c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType ecu
	ALWAYS_TRUE_TEST a
	AXIS_ALIGNED_LINEAR_POS_TEST c
	LINEAR_POS_TEST b
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule ecv
	CODEC b
	DEFAULT_BLOCK_ENTITY_MODIFIER a
	blockEntityModifier g
	inputPredicate c
	locPredicate d
	outputState f
	posPredicate e
	getOutputState ()Lnet/minecraft/world/level/block/state/BlockState; a
	getOutputTag (Lnet/minecraft/util/RandomSource;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/ProtectedBlockProcessor ecw
	CODEC b
	cannotReplace a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockMatchTest ecx
	CODEC a
	block b
	probability d
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockStateMatchTest ecy
	CODEC a
	blockState b
	probability d
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor ecz
	CODEC a
	rules b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleTest eda
	CODEC c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType edb
	ALWAYS_TRUE_TEST a
	BLOCKSTATE_TEST c
	BLOCK_TEST b
	RANDOM_BLOCKSTATE_TEST f
	RANDOM_BLOCK_TEST e
	TAG_TEST d
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings edc
	boundingBox e
	finalizeEntities k
	ignoreEntities d
	keepLiquids f
	knownShape j
	mirror a
	palette h
	processors i
	random g
	rotation b
	rotationPivot c
	addProcessor (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	clearProcessors ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	copy ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; g
	getKnownShape ()Z h
	getMirror ()Lnet/minecraft/world/level/block/Mirror; c
	getProcessors ()Ljava/util/List; i
	getRandom (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/util/RandomSource; b
	getRandomPalette (Ljava/util/List;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette; a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; d
	getRotationPivot ()Lnet/minecraft/core/BlockPos; e
	isIgnoreEntities ()Z f
	popProcessor (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	setBoundingBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setFinalizeEntities (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; d
	setIgnoreEntities (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setKeepLiquids (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	setKnownShape (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; c
	setMirror (Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRandom (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRotation (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRotationPivot (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	shouldFinalizeEntities ()Z k
	shouldKeepLiquids ()Z j
net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor edd
	finalizeProcessing (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/List;Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Ljava/util/List; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList ede
	list a
	list ()Ljava/util/List; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType edf
	BLACKSTONE_REPLACE l
	BLOCK_AGE k
	BLOCK_IGNORE e
	BLOCK_ROT f
	CAPPED o
	DIRECT_CODEC c
	GRAVITY g
	JIGSAW_REPLACEMENT h
	LAVA_SUBMERGED_BLOCK m
	LIST_CODEC d
	LIST_OBJECT_CODEC b
	NOP j
	PROTECTED_BLOCKS n
	RULE i
	SINGLE_CODEC a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate edg
	BLOCKS_TAG d
	BLOCK_TAG_NBT g
	BLOCK_TAG_POS e
	BLOCK_TAG_STATE f
	ENTITIES_TAG c
	ENTITY_TAG_BLOCKPOS i
	ENTITY_TAG_NBT j
	ENTITY_TAG_POS h
	PALETTE_LIST_TAG b
	PALETTE_TAG a
	SIZE_TAG k
	author o
	entityInfoList m
	palettes l
	size n
	addToLists (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V a
	buildInfoList (Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	calculateConnectedPosition (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	calculateRelativePosition (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	createEntityIgnoreException (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; a
	fillEntityList (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)V a
	fillFromWorld (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Vec3i;ZLnet/minecraft/world/level/block/Block;)V a
	filterBlocks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/world/level/block/Block;)Ljava/util/List; a
	filterBlocks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/world/level/block/Block;Z)Lit/unimi/dsi/fastutil/objects/ObjectArrayList; a
	getAuthor ()Ljava/lang/String; b
	getBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	getSize ()Lnet/minecraft/core/Vec3i; a
	getSize (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getZeroPositionWithTransform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	getZeroPositionWithTransform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;II)Lnet/minecraft/core/BlockPos; a
	load (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/nbt/CompoundTag;)V a
	loadPalette (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/nbt/ListTag;Lnet/minecraft/nbt/ListTag;)V a
	newDoubleList ([D)Lnet/minecraft/nbt/ListTag; a
	newIntegerList ([I)Lnet/minecraft/nbt/ListTag; a
	placeEntities (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)V a
	placeInWorld (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/util/RandomSource;I)Z a
	processBlockInfos (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Ljava/util/List;)Ljava/util/List; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setAuthor (Ljava/lang/String;)V a
	transform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	transform (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; a
	updateShapeAtEdge (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/world/phys/shapes/DiscreteVoxelShape;III)V a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette edg$a
	blocks a
	cache b
	blocks ()Ljava/util/List; a
	blocks (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette edg$b
	DEFAULT_BLOCK_STATE a
	ids b
	lastId c
	addMapping (Lnet/minecraft/world/level/block/state/BlockState;I)V a
	idFor (Lnet/minecraft/world/level/block/state/BlockState;)I a
	stateFor (I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo edg$c
	nbt c
	pos a
	state b
	nbt ()Lnet/minecraft/nbt/CompoundTag; c
	pos ()Lnet/minecraft/core/BlockPos; a
	state ()Lnet/minecraft/world/level/block/state/BlockState; b
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureEntityInfo edg$d
	blockPos b
	nbt c
	pos a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager edh
	LISTER k
	LOGGER a
	STRUCTURE_DIRECTORY_NAME b
	STRUCTURE_FILE_EXTENSION c
	STRUCTURE_TEXT_FILE_EXTENSION d
	blockLookup j
	fixerUpper f
	generatedDir h
	resourceManager g
	sources i
	structureRepository e
	createAndValidatePathToStructure (Ljava/nio/file/Path;Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Ljava/nio/file/Path; b
	createPathToStructure (Ljava/nio/file/Path;Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Ljava/nio/file/Path; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; b
	getOrCreate (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	getPathToGeneratedStructure (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Ljava/nio/file/Path; a
	listFolderContents (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/util/stream/Stream; a
	listGenerated ()Ljava/util/stream/Stream; d
	listGeneratedInNamespace (Ljava/nio/file/Path;)Ljava/util/stream/Stream; a
	listResources ()Ljava/util/stream/Stream; b
	listTemplates ()Ljava/util/stream/Stream; a
	listTestStructures ()Ljava/util/stream/Stream; c
	load (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$InputStreamOpener;Ljava/util/function/Consumer;)Ljava/util/Optional; a
	loadFromGenerated (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; h
	loadFromResource (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; f
	loadFromSnbt (Lnet/minecraft/resources/ResourceLocation;Ljava/nio/file/Path;)Ljava/util/Optional; a
	loadFromTestStructures (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; g
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	readStructure (Ljava/io/InputStream;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	readStructure (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	relativize (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; a
	remove (Lnet/minecraft/resources/ResourceLocation;)V d
	save (Lnet/minecraft/resources/ResourceLocation;)Z c
	tryLoad (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; e
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$InputStreamOpener edh$a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$Source edh$b
	lister b
	loader a
	lister ()Ljava/util/function/Supplier; b
	loader ()Ljava/util/function/Function; a
net/minecraft/world/level/levelgen/structure/templatesystem/TagMatchTest edi
	CODEC a
	tag b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/AppendLoot edk
	CODEC a
	LOGGER b
	lootTable d
	apply (Lnet/minecraft/util/RandomSource;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType; a
net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/AppendStatic edl
	CODEC a
	tag b
	apply (Lnet/minecraft/util/RandomSource;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType; a
net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/Clear edm
	CODEC a
	INSTANCE b
	apply (Lnet/minecraft/util/RandomSource;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType; a
net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/Passthrough edn
	CODEC b
	INSTANCE a
	apply (Lnet/minecraft/util/RandomSource;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType; a
net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifier edo
	CODEC c
	apply (Lnet/minecraft/util/RandomSource;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType; a
net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType edp
	APPEND_LOOT d
	APPEND_STATIC c
	CLEAR a
	PASSTHROUGH b
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType; a
net/minecraft/world/level/levelgen/synth/BlendedNoise edr
	CODEC a
	DATA_CODEC f
	SCALE_RANGE e
	mainNoise i
	maxLimitNoise h
	maxValue o
	minLimitNoise g
	smearScaleMultiplier n
	xzFactor l
	xzMultiplier j
	xzScale p
	yFactor m
	yMultiplier k
	yScale q
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	createUnseeded (DDDDD)Lnet/minecraft/world/level/levelgen/synth/BlendedNoise; a
	maxValue ()D b
	minValue ()D a
	parityConfigString (Ljava/lang/StringBuilder;)V a
	withNewRandom (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/synth/BlendedNoise; a
net/minecraft/world/level/levelgen/synth/ImprovedNoise eds
	SHIFT_UP_EPSILON d
	p e
	xo a
	yo b
	zo c
	gradDot (IDDD)D a
	noise (DDD)D a
	noise (DDDDD)D a
	noiseWithDerivative (DDD[D)D a
	p (I)I a
	parityConfigString (Ljava/lang/StringBuilder;)V a
	sampleAndLerp (IIIDDDD)D a
	sampleWithDerivative (IIIDDD[D)D a
net/minecraft/world/level/levelgen/synth/NoiseUtils edt
	biasTowardsExtreme (DD)D a
	parityNoiseOctaveConfigString (Ljava/lang/StringBuilder;DDD[B)V a
	parityNoiseOctaveConfigString (Ljava/lang/StringBuilder;DDD[I)V a
net/minecraft/world/level/levelgen/synth/NormalNoise edu
	INPUT_FACTOR a
	TARGET_DEVIATION b
	first d
	maxValue f
	parameters g
	second e
	valueFactor c
	create (Lnet/minecraft/util/RandomSource;I[D)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
	create (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters;)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; b
	createLegacyNetherBiome (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters;)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
	expectedDeviation (I)D a
	getValue (DDD)D a
	maxValue ()D a
	parameters ()Lnet/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters; b
	parityConfigString (Ljava/lang/StringBuilder;)V a
net/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters edu$a
	CODEC b
	DIRECT_CODEC a
	amplitudes d
	firstOctave c
	amplitudes ()Lit/unimi/dsi/fastutil/doubles/DoubleList; b
	firstOctave ()I a
net/minecraft/world/level/levelgen/synth/PerlinNoise edv
	ROUND_OFF a
	amplitudes d
	firstOctave c
	lowestFreqInputFactor f
	lowestFreqValueFactor e
	maxValue g
	noiseLevels b
	amplitudes ()Lit/unimi/dsi/fastutil/doubles/DoubleList; c
	create (Lnet/minecraft/util/RandomSource;ID[D)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; a
	create (Lnet/minecraft/util/RandomSource;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; b
	create (Lnet/minecraft/util/RandomSource;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; a
	create (Lnet/minecraft/util/RandomSource;Ljava/util/stream/IntStream;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; b
	createLegacyForBlendedNoise (Lnet/minecraft/util/RandomSource;Ljava/util/stream/IntStream;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; a
	createLegacyForLegacyNetherBiome (Lnet/minecraft/util/RandomSource;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; a
	edgeValue (D)D c
	firstOctave ()I b
	getOctaveNoise (I)Lnet/minecraft/world/level/levelgen/synth/ImprovedNoise; a
	getValue (DDD)D a
	getValue (DDDDDZ)D a
	makeAmplitudes (Lit/unimi/dsi/fastutil/ints/IntSortedSet;)Lcom/mojang/datafixers/util/Pair; a
	maxBrokenValue (D)D a
	maxValue ()D a
	parityConfigString (Ljava/lang/StringBuilder;)V a
	skipOctave (Lnet/minecraft/util/RandomSource;)V a
	wrap (D)D b
net/minecraft/world/level/levelgen/synth/PerlinSimplexNoise edw
	highestFreqInputFactor c
	highestFreqValueFactor b
	noiseLevels a
	getValue (DDZ)D a
net/minecraft/world/level/levelgen/synth/SimplexNoise edx
	F2 f
	G2 g
	GRADIENT a
	SQRT_3 e
	p h
	xo b
	yo c
	zo d
	dot ([IDDD)D a
	getCornerNoise3D (IDDDD)D a
	getValue (DD)D a
	getValue (DDD)D a
	p (I)I a
net/minecraft/world/level/lighting/BlockLightEngine edz
	mutablePos g
	checkNode (J)V a
	getEmission (JLnet/minecraft/world/level/block/state/BlockState;)I a
	propagateDecrease (JJ)V a
	propagateIncrease (JJI)V a
	propagateLightSources (Lnet/minecraft/world/level/ChunkPos;)V b
net/minecraft/world/level/lighting/BlockLightSectionStorage eea
	getLightValue (J)I a
net/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap eea$a
	copy ()Lnet/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap; a
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
net/minecraft/world/level/lighting/ChunkSkyLightSources eeb
	NEGATIVE_INFINITY a
	SIZE b
	heightmap d
	minY c
	mutablePos1 e
	mutablePos2 f
	extendSourcesBelowWorld (I)I c
	fill (I)V a
	fillFrom (Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	findLowestSourceBelow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I a
	findLowestSourceY (Lnet/minecraft/world/level/chunk/ChunkAccess;III)I a
	get (I)I b
	getHighestLowestSourceY ()I a
	getLowestSourceY (II)I a
	index (II)I c
	isEdgeOccluded (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	set (II)V b
	update (Lnet/minecraft/world/level/BlockGetter;III)Z a
	updateEdge (Lnet/minecraft/world/level/BlockGetter;IILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/lighting/DataLayerStorageMap eec
	CACHE_SIZE b
	cacheEnabled e
	lastSectionKeys c
	lastSections d
	map a
	clearCache ()V c
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
	copyDataLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; a
	disableCache ()V d
	getLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; c
	hasLayer (J)Z b
	removeLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; d
	setLayer (JLnet/minecraft/world/level/chunk/DataLayer;)V a
net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint eed
	NO_COMPUTED_LEVEL a
	SOURCE e
	computedLevels c
	hasWork d
	levelCount f
	priorityQueue b
	calculatePriority (II)I a
	checkEdge (JJIIIZ)V a
	checkEdge (JJIZ)V a
	checkNeighbor (JJIZ)V b
	checkNeighborsAfterUpdate (JIZ)V a
	checkNode (J)V f
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLevel (J)I c
	getQueueSize ()I c
	hasWork ()Z b
	isSource (J)Z a
	removeFromQueue (J)V e
	removeIf (Ljava/util/function/LongPredicate;)V a
	runUpdates (I)I b
	setLevel (JI)V a
net/minecraft/world/level/lighting/LayerLightEventListener eee
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
net/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener eee$a
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener; c
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
	hasLightWork ()Z L_
	propagateLightSources (Lnet/minecraft/world/level/ChunkPos;)V b
	runLightUpdates ()I a
	setLightEnabled (Lnet/minecraft/world/level/ChunkPos;Z)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LayerLightSectionStorage eef
	changedSections e
	chunkSource a
	columnsToRetainQueuedDataFor k
	columnsWithSources j
	hasInconsistencies h
	layer i
	queuedSections g
	sectionStates b
	sectionsAffectedByLightUpdates f
	toRemove l
	updatingSectionData d
	visibleSectionData c
	createDataLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; g
	getDataLayer (JZ)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDataLayer (Lnet/minecraft/world/level/lighting/DataLayerStorageMap;J)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDataLayerData (J)Lnet/minecraft/world/level/chunk/DataLayer; d
	getDataLayerToWrite (J)Lnet/minecraft/world/level/chunk/DataLayer; c
	getDebugSectionType (J)Lnet/minecraft/world/level/lighting/LayerLightSectionStorage$SectionType; k
	getLightValue (J)I a
	getStoredLevel (J)I e
	hasInconsistencies ()Z a
	initializeSection (J)V l
	lightOnInSection (J)Z j
	markNewInconsistencies (Lnet/minecraft/world/level/lighting/LightEngine;)V a
	markSectionAndNeighborsAsAffected (J)V f
	onNodeAdded (J)V h
	onNodeRemoved (J)V i
	putSectionState (JB)V a
	queueSectionData (JLnet/minecraft/world/level/chunk/DataLayer;)V a
	removeSection (J)V m
	retainData (JZ)V c
	setLightEnabled (JZ)V b
	setStoredLevel (JI)V a
	storingLightForSection (J)Z b
	swapSectionMap ()V b
	updateSectionStatus (JZ)V d
net/minecraft/world/level/lighting/LayerLightSectionStorage$SectionState eef$a
	EMPTY a
	HAS_DATA_BIT d
	MAX_NEIGHBORS c
	MIN_NEIGHBORS b
	NEIGHBOR_COUNT_BITS e
	hasData (B)Z a
	hasData (BZ)B a
	neighborCount (B)I b
	neighborCount (BI)B a
	type (B)Lnet/minecraft/world/level/lighting/LayerLightSectionStorage$SectionType; c
net/minecraft/world/level/lighting/LayerLightSectionStorage$SectionType eef$b
	$VALUES e
	EMPTY a
	LIGHT_AND_DATA c
	LIGHT_ONLY b
	display d
	$values ()[Lnet/minecraft/world/level/lighting/LayerLightSectionStorage$SectionType; b
	display ()Ljava/lang/String; a
net/minecraft/world/level/lighting/LevelLightEngine eeg
	LIGHT_SECTION_PADDING b
	blockEngine a
	levelHeightAccessor c
	skyEngine d
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	getDebugData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)Ljava/lang/String; a
	getDebugSectionType (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/lighting/LayerLightSectionStorage$SectionType; b
	getLayerListener (Lnet/minecraft/world/level/LightLayer;)Lnet/minecraft/world/level/lighting/LayerLightEventListener; a
	getLightSectionCount ()I c
	getMaxLightSection ()I e
	getMinLightSection ()I d
	getRawBrightness (Lnet/minecraft/core/BlockPos;I)I a
	hasLightWork ()Z L_
	lightOnInSection (Lnet/minecraft/core/SectionPos;)Z a
	propagateLightSources (Lnet/minecraft/world/level/ChunkPos;)V b
	queueSectionData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/chunk/DataLayer;)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	runLightUpdates ()I a
	setLightEnabled (Lnet/minecraft/world/level/ChunkPos;Z)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LeveledPriorityQueue eeh
	firstQueuedLevel c
	levelCount a
	queues b
	checkFirstQueuedLevel (I)V a
	dequeue (JII)V a
	enqueue (JI)V a
	isEmpty ()Z b
	removeFirstLong ()J a
net/minecraft/world/level/lighting/LightEngine eei
	CACHE_SIZE l
	MAX_LEVEL a
	MIN_OPACITY b
	MIN_QUEUE_SIZE g
	PROPAGATION_DIRECTIONS d
	PULL_LIGHT_IN_ENTRY c
	blockNodesToCheck h
	chunkSource e
	decreaseQueue i
	increaseQueue j
	lastChunk n
	lastChunkPos m
	mutablePos k
	storage f
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	checkNode (J)V a
	clearChunkCache ()V c
	enqueueDecrease (JJ)V b
	enqueueIncrease (JJ)V c
	getChunk (II)Lnet/minecraft/world/level/chunk/LightChunk; a
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDebugData (J)Ljava/lang/String; b
	getDebugSectionType (J)Lnet/minecraft/world/level/lighting/LayerLightSectionStorage$SectionType; c
	getLightBlockInto (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;I)I a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
	getOcclusionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;JLnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getOpacity (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)I a
	getState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; c
	hasDifferentLightProperties (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	hasLightWork ()Z L_
	isEmptyShape (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	propagateDecrease (JJ)V a
	propagateDecreases ()I e
	propagateIncrease (JJI)V a
	propagateIncreases ()I d
	queueSectionData (JLnet/minecraft/world/level/chunk/DataLayer;)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	runLightUpdates ()I a
	setLightEnabled (Lnet/minecraft/world/level/ChunkPos;Z)V a
	shapeOccludes (JLnet/minecraft/world/level/block/state/BlockState;JLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LightEngine$QueueEntry eei$a
	DIRECTIONS_MASK d
	DIRECTION_BITS b
	FLAG_FROM_EMPTY_SHAPE e
	FLAG_INCREASE_FROM_EMISSION f
	FROM_LEVEL_BITS a
	LEVEL_MASK c
	decreaseAllDirections (I)J a
	decreaseSkipOneDirection (ILnet/minecraft/core/Direction;)J a
	getFromLevel (J)I a
	increaseLightFromEmission (IZ)J a
	increaseOnlyOneDirection (IZLnet/minecraft/core/Direction;)J b
	increaseSkipOneDirection (IZLnet/minecraft/core/Direction;)J a
	increaseSkySourceInDirections (ZZZZZ)J a
	isFromEmptyShape (J)Z b
	isIncreaseFromEmission (J)Z c
	shouldPropagateInDirection (JLnet/minecraft/core/Direction;)Z a
	withDirection (JLnet/minecraft/core/Direction;)J b
	withLevel (JI)J a
	withoutDirection (JLnet/minecraft/core/Direction;)J c
net/minecraft/world/level/lighting/LightEventListener eej
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	hasLightWork ()Z L_
	propagateLightSources (Lnet/minecraft/world/level/ChunkPos;)V b
	runLightUpdates ()I a
	setLightEnabled (Lnet/minecraft/world/level/ChunkPos;Z)V a
	updateSectionStatus (Lnet/minecraft/core/BlockPos;Z)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/SkyLightEngine eek
	ADD_SKY_SOURCE_ENTRY i
	REMOVE_SKY_SOURCE_ENTRY h
	REMOVE_TOP_SKY_SOURCE_ENTRY g
	emptyChunkSources k
	mutablePos j
	addSourcesAbove (IIII)V b
	checkNode (J)V a
	countEmptySectionsBelowIfAtBorder (J)I d
	crossedSectionEdge (Lnet/minecraft/core/Direction;II)Z a
	getChunkSources (II)Lnet/minecraft/world/level/lighting/ChunkSkyLightSources; b
	getLowestSourceY (III)I a
	isSourceLevel (I)Z a
	propagateDecrease (JJ)V a
	propagateFromEmptySections (JLnet/minecraft/core/Direction;IZI)V a
	propagateIncrease (JJI)V a
	propagateLightSources (Lnet/minecraft/world/level/ChunkPos;)V b
	removeSourcesBelow (IIII)V a
	setLightEnabled (Lnet/minecraft/world/level/ChunkPos;Z)V a
	updateSourcesInColumn (III)V b
net/minecraft/world/level/lighting/SkyLightSectionStorage eel
	createDataLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; g
	getBottomSectionY ()I c
	getLightValue (J)I a
	getLightValue (JZ)I e
	getTopSectionY (J)I m
	hasLightDataAtOrBelow (I)Z a
	isAboveData (J)Z l
	onNodeAdded (J)V h
	onNodeRemoved (J)V i
	repeatFirstLayer (Lnet/minecraft/world/level/chunk/DataLayer;)Lnet/minecraft/world/level/chunk/DataLayer; a
net/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap eel$a
	currentLowestY b
	topSections c
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
	copy ()Lnet/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap; a
net/minecraft/world/level/lighting/SpatialLongSet eem
	map a
net/minecraft/world/level/lighting/SpatialLongSet$InternalMap eem$a
	OUTER_MASK h
	X_BITS a
	X_OFFSET g
	Y_BITS c
	Y_OFFSET d
	Z_BITS b
	Z_OFFSET e
	lastOuterKey j
	lastPos i
	minSize k
	addBit (J)Z c
	getFullKey (JI)J a
	getInnerKey (J)I b
	getOuterKey (J)J a
	removeBit (J)Z d
	removeFirstBit ()J a
	removeFromEntry (IJ)Z b
	removeFromNullEntry (J)Z e
	replaceBit (IJ)Z a
net/minecraft/world/level/material/EmptyFluid eeo
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getBucket ()Lnet/minecraft/world/item/Item; a
	getExplosionResistance ()F c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	isEmpty ()Z b
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/FlowingFluid eep
	CACHE_SIZE e
	FALLING a
	LEVEL b
	OCCLUSION_CACHE f
	shapes g
	affectsFlow (Lnet/minecraft/world/level/material/FluidState;)Z g
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canConvertToSource (Lnet/minecraft/world/level/Level;)Z a
	canHoldFluid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canPassThrough (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	canPassThroughWall (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canSpreadTo (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/Fluid;)Z a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getCacheKey (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)S a
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getFlowing (IZ)Lnet/minecraft/world/level/material/FluidState; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getLegacyLevel (Lnet/minecraft/world/level/material/FluidState;)I e
	getNewLiquid (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSlopeDistance (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;)I a
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getSource (Z)Lnet/minecraft/world/level/material/FluidState; a
	getSpread (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Map; b
	getSpreadDelay (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)I a
	hasSameAbove (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	isSolidFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	isSourceBlockOfThisType (Lnet/minecraft/world/level/material/FluidState;)Z h
	isWaterHole (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	sourceNeighborCount (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)I a
	spread (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V a
	spreadTo (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)V a
	spreadToSides (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V b
net/minecraft/world/level/material/Fluid eeq
	FLUID_STATE_REGISTRY c
	builtInRegistryHolder b
	defaultFluidState a
	stateDefinition d
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/util/RandomSource;)V a
	builtInRegistryHolder ()Lnet/minecraft/core/Holder$Reference; k
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	defaultFluidState ()Lnet/minecraft/world/level/material/FluidState; g
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; h
	getExplosionResistance ()F c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getPickupSound ()Ljava/util/Optional; j
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; f
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	is (Lnet/minecraft/tags/TagKey;)Z a
	isEmpty ()Z b
	isRandomlyTicking ()Z i
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/util/RandomSource;)V b
	registerDefaultState (Lnet/minecraft/world/level/material/FluidState;)V f
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V b
net/minecraft/world/level/material/FluidState eer
	AMOUNT_FULL g
	AMOUNT_MAX b
	CODEC a
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createLegacyBlock ()Lnet/minecraft/world/level/block/state/BlockState; g
	getAmount ()I e
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; h
	getExplosionResistance ()F i
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; c
	getHeight (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight ()F d
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; d
	getTags ()Ljava/util/stream/Stream; k
	getType ()Lnet/minecraft/world/level/material/Fluid; a
	holder ()Lnet/minecraft/core/Holder; j
	is (Lnet/minecraft/core/HolderSet;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	is (Lnet/minecraft/world/level/material/Fluid;)Z b
	isEmpty ()Z c
	isRandomlyTicking ()Z f
	isSource ()Z b
	isSourceOfType (Lnet/minecraft/world/level/material/Fluid;)Z a
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	shouldRenderBackwardUpFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/material/Fluids ees
	EMPTY a
	FLOWING_LAVA d
	FLOWING_WATER b
	LAVA e
	WATER c
	register (Ljava/lang/String;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/material/Fluid; a
net/minecraft/world/level/material/FogType eet
	$VALUES e
	LAVA a
	NONE d
	POWDER_SNOW c
	WATER b
	$values ()[Lnet/minecraft/world/level/material/FogType; a
net/minecraft/world/level/material/LavaFluid eeu
	MIN_LEVEL_CUTOFF e
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/util/RandomSource;)V a
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	canConvertToSource (Lnet/minecraft/world/level/Level;)Z a
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	fizz (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; h
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getExplosionResistance ()F c
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getPickupSound ()Ljava/util/Optional; j
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getSpreadDelay (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)I a
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	hasFlammableNeighbours (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isFlammable (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	isRandomlyTicking ()Z i
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/util/RandomSource;)V b
	spreadTo (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)V a
net/minecraft/world/level/material/LavaFluid$Flowing eeu$a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/LavaFluid$Source eeu$b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/MapColor eev
	CLAY j
	COLOR_BLACK D
	COLOR_BLUE z
	COLOR_BROWN A
	COLOR_CYAN x
	COLOR_GRAY v
	COLOR_GREEN B
	COLOR_LIGHT_BLUE r
	COLOR_LIGHT_GRAY w
	COLOR_LIGHT_GREEN t
	COLOR_MAGENTA q
	COLOR_ORANGE p
	COLOR_PINK u
	COLOR_PURPLE y
	COLOR_RED C
	COLOR_YELLOW s
	CRIMSON_HYPHAE ac
	CRIMSON_NYLIUM aa
	CRIMSON_STEM ab
	DEEPSLATE ah
	DIAMOND F
	DIRT k
	EMERALD H
	FIRE e
	GLOW_LICHEN aj
	GOLD E
	GRASS b
	ICE f
	LAPIS G
	MATERIAL_COLORS am
	METAL g
	NETHER J
	NONE a
	PLANT h
	PODZOL I
	QUARTZ o
	RAW_IRON ai
	SAND c
	SNOW i
	STONE l
	TERRACOTTA_BLACK Z
	TERRACOTTA_BLUE V
	TERRACOTTA_BROWN W
	TERRACOTTA_CYAN T
	TERRACOTTA_GRAY R
	TERRACOTTA_GREEN X
	TERRACOTTA_LIGHT_BLUE N
	TERRACOTTA_LIGHT_GRAY S
	TERRACOTTA_LIGHT_GREEN P
	TERRACOTTA_MAGENTA M
	TERRACOTTA_ORANGE L
	TERRACOTTA_PINK Q
	TERRACOTTA_PURPLE U
	TERRACOTTA_RED Y
	TERRACOTTA_WHITE K
	TERRACOTTA_YELLOW O
	WARPED_HYPHAE af
	WARPED_NYLIUM ad
	WARPED_STEM ae
	WARPED_WART_BLOCK ag
	WATER m
	WOOD n
	WOOL d
	col ak
	id al
	byId (I)Lnet/minecraft/world/level/material/MapColor; a
	byIdUnsafe (I)Lnet/minecraft/world/level/material/MapColor; c
	calculateRGBColor (Lnet/minecraft/world/level/material/MapColor$Brightness;)I a
	getColorFromPackedId (I)I b
	getPackedId (Lnet/minecraft/world/level/material/MapColor$Brightness;)B b
net/minecraft/world/level/material/MapColor$Brightness eev$a
	$VALUES h
	HIGH c
	LOW a
	LOWEST d
	NORMAL b
	VALUES g
	id e
	modifier f
	$values ()[Lnet/minecraft/world/level/material/MapColor$Brightness; a
	byId (I)Lnet/minecraft/world/level/material/MapColor$Brightness; a
	byIdUnsafe (I)Lnet/minecraft/world/level/material/MapColor$Brightness; b
net/minecraft/world/level/material/PushReaction eew
	$VALUES f
	BLOCK c
	DESTROY b
	IGNORE d
	NORMAL a
	PUSH_ONLY e
	$values ()[Lnet/minecraft/world/level/material/PushReaction; a
net/minecraft/world/level/material/WaterFluid eex
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/util/RandomSource;)V a
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	canConvertToSource (Lnet/minecraft/world/level/Level;)Z a
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; h
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getExplosionResistance ()F c
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getPickupSound ()Ljava/util/Optional; j
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
net/minecraft/world/level/material/WaterFluid$Flowing eex$a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/WaterFluid$Source eex$b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/pathfinder/AmphibiousNodeEvaluator efa
	oldWalkableCost m
	oldWaterBorderCost n
	prefersShallowSwimming l
	done ()V b
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; a
	isAmphibious ()Z c
	isVerticalNeighborValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z b
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/pathfinder/BinaryHeap efb
	heap a
	size b
	changeCost (Lnet/minecraft/world/level/pathfinder/Node;F)V a
	clear ()V a
	downHeap (I)V b
	getHeap ()[Lnet/minecraft/world/level/pathfinder/Node; f
	insert (Lnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Node; a
	isEmpty ()Z e
	peek ()Lnet/minecraft/world/level/pathfinder/Node; b
	pop ()Lnet/minecraft/world/level/pathfinder/Node; c
	remove (Lnet/minecraft/world/level/pathfinder/Node;)V b
	size ()I d
	upHeap (I)V a
net/minecraft/world/level/pathfinder/BlockPathTypes efc
	$VALUES B
	BLOCKED a
	BREACH u
	COCOA x
	DAMAGE_CAUTIOUS y
	DAMAGE_FIRE o
	DAMAGE_OTHER q
	DANGER_FIRE n
	DANGER_OTHER p
	DANGER_POWDER_SNOW g
	DANGER_TRAPDOOR z
	DOOR_IRON_CLOSED t
	DOOR_OPEN r
	DOOR_WOOD_CLOSED s
	FENCE h
	LAVA i
	LEAVES v
	OPEN b
	POWDER_SNOW f
	RAIL l
	STICKY_HONEY w
	TRAPDOOR e
	UNPASSABLE_RAIL m
	WALKABLE c
	WALKABLE_DOOR d
	WATER j
	WATER_BORDER k
	malus A
	$values ()[Lnet/minecraft/world/level/pathfinder/BlockPathTypes; b
	getMalus ()F a
net/minecraft/world/level/pathfinder/FlyNodeEvaluator efd
	MAX_START_NODE_CANDIDATES n
	SMALL_MOB_INFLATED_START_NODE_BOUNDING_BOX m
	pathTypeByPosCache l
	canStartAt (Lnet/minecraft/core/BlockPos;)Z a
	done ()V b
	findAcceptedNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getCachedBlockPathType (III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; c
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; a
	hasMalus (Lnet/minecraft/world/level/pathfinder/Node;)Z b
	isOpen (Lnet/minecraft/world/level/pathfinder/Node;)Z c
	iteratePathfindingStartNodeCandidatePositions (Lnet/minecraft/world/entity/Mob;)Ljava/lang/Iterable; a
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/pathfinder/Node efe
	cameFrom h
	closed i
	costMalus k
	f g
	g e
	h f
	hash m
	heapIdx d
	type l
	walkedDistance j
	x a
	y b
	z c
	asBlockPos ()Lnet/minecraft/core/BlockPos; a
	asVec3 ()Lnet/minecraft/world/phys/Vec3; b
	cloneAndMove (III)Lnet/minecraft/world/level/pathfinder/Node; a
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Node; b
	createHash (III)I b
	distanceManhattan (Lnet/minecraft/core/BlockPos;)F c
	distanceManhattan (Lnet/minecraft/world/level/pathfinder/Node;)F d
	distanceTo (Lnet/minecraft/core/BlockPos;)F a
	distanceTo (Lnet/minecraft/world/level/pathfinder/Node;)F a
	distanceToSqr (Lnet/minecraft/core/BlockPos;)F b
	distanceToSqr (Lnet/minecraft/world/level/pathfinder/Node;)F c
	distanceToXZ (Lnet/minecraft/world/level/pathfinder/Node;)F b
	inOpenSet ()Z c
	readContents (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/pathfinder/Node;)V a
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/pathfinder/NodeEvaluator eff
	canFloat i
	canOpenDoors h
	canPassDoors g
	canWalkOverFences j
	entityDepth f
	entityHeight e
	entityWidth d
	level a
	mob b
	nodes c
	canFloat ()Z f
	canOpenDoors ()Z e
	canPassDoors ()Z d
	canWalkOverFences ()Z g
	done ()V b
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getNode (III)Lnet/minecraft/world/level/pathfinder/Node; b
	getNode (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/Node; b
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; a
	getTargetFromNode (Lnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Target; a
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
	setCanFloat (Z)V c
	setCanOpenDoors (Z)V b
	setCanPassDoors (Z)V a
	setCanWalkOverFences (Z)V d
net/minecraft/world/level/pathfinder/Path efg
	debugData b
	distToTarget e
	nextNodeIndex c
	nodes a
	reached f
	target d
	advance ()V a
	canReach ()Z j
	copy ()Lnet/minecraft/world/level/pathfinder/Path; n
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Path; b
	debugData ()Lnet/minecraft/world/level/pathfinder/Path$DebugData; k
	getDistToTarget ()F m
	getEndNode ()Lnet/minecraft/world/level/pathfinder/Node; d
	getEntityPosAtNode (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/phys/Vec3; a
	getNextEntityPos (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3; a
	getNextNode ()Lnet/minecraft/world/level/pathfinder/Node; h
	getNextNodeIndex ()I f
	getNextNodePos ()Lnet/minecraft/core/BlockPos; g
	getNode (I)Lnet/minecraft/world/level/pathfinder/Node; a
	getNodeCount ()I e
	getNodePos (I)Lnet/minecraft/core/BlockPos; d
	getPreviousNode ()Lnet/minecraft/world/level/pathfinder/Node; i
	getTarget ()Lnet/minecraft/core/BlockPos; l
	isDone ()Z c
	notStarted ()Z b
	readNodeArray (Lnet/minecraft/network/FriendlyByteBuf;)[Lnet/minecraft/world/level/pathfinder/Node; c
	replaceNode (ILnet/minecraft/world/level/pathfinder/Node;)V a
	sameAs (Lnet/minecraft/world/level/pathfinder/Path;)Z a
	setDebug ([Lnet/minecraft/world/level/pathfinder/Node;[Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Set;)V a
	setNextNodeIndex (I)V c
	truncateNodes (I)V b
	writeNodeArray (Lnet/minecraft/network/FriendlyByteBuf;[Lnet/minecraft/world/level/pathfinder/Node;)V a
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/pathfinder/Path$DebugData efg$a
	closedSet b
	openSet a
	targetNodes c
	closedSet ()[Lnet/minecraft/world/level/pathfinder/Node; b
	openSet ()[Lnet/minecraft/world/level/pathfinder/Node; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Path$DebugData; b
	targetNodes ()Ljava/util/Set; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/pathfinder/PathComputationType efh
	$VALUES d
	AIR c
	LAND a
	WATER b
	$values ()[Lnet/minecraft/world/level/pathfinder/PathComputationType; a
net/minecraft/world/level/pathfinder/PathFinder efi
	DEBUG e
	FUDGING a
	maxVisitedNodes c
	neighbors b
	nodeEvaluator d
	openSet f
	distance (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)F a
	findPath (Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Map;FIF)Lnet/minecraft/world/level/pathfinder/Path; a
	findPath (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;Ljava/util/Set;FIF)Lnet/minecraft/world/level/pathfinder/Path; a
	getBestH (Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Set;)F a
	reconstructPath (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/pathfinder/Path; a
net/minecraft/world/level/pathfinder/SwimNodeEvaluator efj
	allowBreaching k
	pathTypesByPosCache l
	done ()V b
	findAcceptedNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getCachedBlockType (III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; c
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; a
	isDiagonalNodeValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z a
	isNodeValid (Lnet/minecraft/world/level/pathfinder/Node;)Z b
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/pathfinder/Target efk
	bestHeuristic m
	bestNode n
	reached o
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Target; c
	getBestNode ()Lnet/minecraft/world/level/pathfinder/Node; d
	isReached ()Z f
	setReached ()V e
	updateBest (FLnet/minecraft/world/level/pathfinder/Node;)V a
net/minecraft/world/level/pathfinder/WalkNodeEvaluator efl
	DEFAULT_MOB_JUMP_HEIGHT l
	SPACE_BETWEEN_WALL_POSTS k
	collisionCache n
	pathTypesByPosCache m
	canReachWithoutCollision (Lnet/minecraft/world/level/pathfinder/Node;)Z b
	canStartAt (Lnet/minecraft/core/BlockPos;)Z a
	checkNeighbourBlocks (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	doesBlockHavePartialCollision (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z a
	done ()V b
	evaluateBlockPathType (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	findAcceptedNode (IIIIDLnet/minecraft/core/Direction;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/Node; a
	getBlockPathType (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathTypeRaw (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; b
	getBlockPathTypeStatic (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathTypes (Lnet/minecraft/world/level/BlockGetter;IIILjava/util/EnumSet;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockedNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getCachedBlockType (Lnet/minecraft/world/entity/Mob;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getFloorLevel (Lnet/minecraft/core/BlockPos;)D d
	getFloorLevel (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)D a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getMobJumpHeight ()D h
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getNodeAndUpdateCostToMax (IIILnet/minecraft/world/level/pathfinder/BlockPathTypes;F)Lnet/minecraft/world/level/pathfinder/Node; a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; a
	getStartNode (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/Node; c
	hasCollisions (Lnet/minecraft/world/phys/AABB;)Z a
	isAmphibious ()Z c
	isBurningBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isDiagonalValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z a
	isNeighborValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z a
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/portal/PortalForcer efn
	CREATE_RADIUS c
	FRAME_BOX f
	FRAME_BOX_END l
	FRAME_BOX_START k
	FRAME_HEIGHT d
	FRAME_HEIGHT_END h
	FRAME_HEIGHT_START g
	FRAME_WIDTH e
	FRAME_WIDTH_END j
	FRAME_WIDTH_START i
	NOTHING_FOUND m
	SEARCH_RADIUS b
	TICKET_RADIUS a
	level n
	canHostFrame (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/Direction;I)Z a
	canPortalReplaceBlock (Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	createPortal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$Axis;)Ljava/util/Optional; a
	findPortalAround (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/border/WorldBorder;)Ljava/util/Optional; a
net/minecraft/world/level/portal/PortalInfo efo
	pos a
	speed b
	xRot d
	yRot c
net/minecraft/world/level/portal/PortalShape efp
	FRAME e
	MAX_HEIGHT b
	MAX_WIDTH a
	MIN_HEIGHT d
	MIN_WIDTH c
	SAFE_TRAVEL_MAX_ENTITY_XY f
	SAFE_TRAVEL_MAX_VERTICAL_DELTA g
	axis i
	bottomLeft l
	height m
	level h
	numPortalBlocks k
	rightDir j
	width n
	calculateBottomLeft (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	calculateHeight ()I e
	calculateWidth ()I d
	createPortalBlocks ()V b
	createPortalInfo (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/BlockUtil$FoundRectangle;Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;FF)Lnet/minecraft/world/level/portal/PortalInfo; a
	findCollisionFreePosition (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;)Lnet/minecraft/world/phys/Vec3; a
	findEmptyPortalShape (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$Axis;)Ljava/util/Optional; a
	findPortalShape (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Lnet/minecraft/core/Direction$Axis;)Ljava/util/Optional; a
	getDistanceUntilEdgeAboveFrame (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getDistanceUntilTop (Lnet/minecraft/core/BlockPos$MutableBlockPos;)I a
	getRelativePosition (Lnet/minecraft/BlockUtil$FoundRectangle;Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/EntityDimensions;)Lnet/minecraft/world/phys/Vec3; a
	hasTopFrame (Lnet/minecraft/core/BlockPos$MutableBlockPos;I)Z a
	isComplete ()Z c
	isEmpty (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValid ()Z a
net/minecraft/world/level/redstone/CollectingNeighborUpdater efr
	LOGGER b
	addedThisLayer f
	count g
	level c
	maxChainedNeighborUpdates d
	stack e
	addAndRun (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/redstone/CollectingNeighborUpdater$NeighborUpdates;)V a
	neighborChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	runUpdates ()V a
	shapeUpdate (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II)V a
	updateNeighborsAtExceptFromFacing (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;)V a
net/minecraft/world/level/redstone/CollectingNeighborUpdater$FullNeighborUpdate efr$a
	block c
	movedByPiston e
	neighborPos d
	pos b
	state a
	block ()Lnet/minecraft/world/level/block/Block; c
	movedByPiston ()Z e
	neighborPos ()Lnet/minecraft/core/BlockPos; d
	pos ()Lnet/minecraft/core/BlockPos; b
	runNext (Lnet/minecraft/world/level/Level;)Z a
	state ()Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/redstone/CollectingNeighborUpdater$MultiNeighborUpdate efr$b
	idx d
	skipDirection c
	sourceBlock b
	sourcePos a
	runNext (Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/level/redstone/CollectingNeighborUpdater$NeighborUpdates efr$c
	runNext (Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/level/redstone/CollectingNeighborUpdater$ShapeUpdate efr$d
	direction a
	neighborPos d
	pos c
	state b
	updateFlags e
	updateLimit f
	direction ()Lnet/minecraft/core/Direction; a
	neighborPos ()Lnet/minecraft/core/BlockPos; d
	pos ()Lnet/minecraft/core/BlockPos; c
	runNext (Lnet/minecraft/world/level/Level;)Z a
	state ()Lnet/minecraft/world/level/block/state/BlockState; b
	updateFlags ()I e
	updateLimit ()I f
net/minecraft/world/level/redstone/CollectingNeighborUpdater$SimpleNeighborUpdate efr$e
	block b
	neighborPos c
	pos a
	block ()Lnet/minecraft/world/level/block/Block; b
	neighborPos ()Lnet/minecraft/core/BlockPos; c
	pos ()Lnet/minecraft/core/BlockPos; a
	runNext (Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/level/redstone/InstantNeighborUpdater efs
	level b
	neighborChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	shapeUpdate (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II)V a
net/minecraft/world/level/redstone/NeighborUpdater eft
	UPDATE_ORDER a
	executeShapeUpdate (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II)V a
	executeUpdate (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	neighborChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	shapeUpdate (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II)V a
	updateNeighborsAtExceptFromFacing (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;)V a
net/minecraft/world/level/redstone/Redstone efu
	SIGNAL_MAX b
	SIGNAL_MIN a
	SIGNAL_NONE c
net/minecraft/world/level/saveddata/SavedData efw
	LOGGER a
	dirty b
	isDirty ()Z d
	save (Ljava/io/File;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setDirty ()V c
	setDirty (Z)V a
net/minecraft/world/level/saveddata/SavedData$Factory efw$a
	constructor a
	deserializer b
	type c
	constructor ()Ljava/util/function/Supplier; a
	deserializer ()Ljava/util/function/Function; b
	type ()Lnet/minecraft/util/datafix/DataFixTypes; c
net/minecraft/world/level/saveddata/maps/MapBanner efx
	color b
	name c
	pos a
	fromWorld (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/saveddata/maps/MapBanner; a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
	getDecoration ()Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; c
	getId ()Ljava/lang/String; f
	getName ()Lnet/minecraft/network/chat/Component; d
	getPos ()Lnet/minecraft/core/BlockPos; a
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapBanner; a
	save ()Lnet/minecraft/nbt/CompoundTag; e
net/minecraft/world/level/saveddata/maps/MapDecoration efy
	name e
	rot d
	type a
	x b
	y c
	getImage ()B a
	name ()Lnet/minecraft/network/chat/Component; g
	renderOnFrame ()Z b
	rot ()B f
	type ()Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; c
	x ()B d
	y ()B e
net/minecraft/world/level/saveddata/maps/MapDecoration$Type efy$a
	$VALUES P
	BANNER_BLACK z
	BANNER_BLUE v
	BANNER_BROWN w
	BANNER_CYAN t
	BANNER_GRAY r
	BANNER_GREEN x
	BANNER_LIGHT_BLUE n
	BANNER_LIGHT_GRAY s
	BANNER_LIME p
	BANNER_MAGENTA m
	BANNER_ORANGE l
	BANNER_PINK q
	BANNER_PURPLE u
	BANNER_RED y
	BANNER_WHITE k
	BANNER_YELLOW o
	BLUE_MARKER d
	CODEC I
	DESERT_VILLAGE B
	FRAME b
	JUNGLE_TEMPLE G
	MANSION i
	MONUMENT j
	PLAINS_VILLAGE C
	PLAYER a
	PLAYER_OFF_LIMITS h
	PLAYER_OFF_MAP g
	RED_MARKER c
	RED_X A
	SAVANNA_VILLAGE D
	SNOWY_VILLAGE E
	SWAMP_HUT H
	TAIGA_VILLAGE F
	TARGET_POINT f
	TARGET_X e
	icon K
	isExplorationMapElement N
	mapColor M
	name J
	renderedOnFrame L
	trackCount O
	$values ()[Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; h
	byIcon (B)Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; a
	getIcon ()B a
	getMapColor ()I f
	getSerializedName ()Ljava/lang/String; c
	hasMapColor ()Z e
	isExplorationMapElement ()Z b
	isRenderedOnFrame ()Z d
	shouldTrackCount ()Z g
net/minecraft/world/level/saveddata/maps/MapFrame efz
	entityId c
	pos a
	rotation b
	frameId (Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	getEntityId ()I d
	getId ()Ljava/lang/String; e
	getPos ()Lnet/minecraft/core/BlockPos; b
	getRotation ()I c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapFrame; a
	save ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/saveddata/maps/MapIndex ega
	FILE_NAME a
	usedAuxIds b
	factory ()Lnet/minecraft/world/level/saveddata/SavedData$Factory; a
	getFreeAuxValueForMap ()I b
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapIndex; b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/saveddata/maps/MapItemSavedData egb
	HALF_MAP_SIZE k
	LOGGER i
	MAP_SIZE j
	MAX_SCALE a
	TRACKED_DECORATION_LIMIT b
	bannerMarkers p
	carriedBy n
	carriedByPlayers o
	centerX c
	centerZ d
	colors g
	decorations q
	dimension e
	frameMarkers r
	locked h
	scale f
	trackedDecorationCount s
	trackingPosition l
	unlimitedTracking m
	addClientSideDecorations (Ljava/util/List;)V a
	addDecoration (Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;Lnet/minecraft/world/level/LevelAccessor;Ljava/lang/String;DDDLnet/minecraft/network/chat/Component;)V a
	addTargetDecoration (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;)V a
	checkBanners (Lnet/minecraft/world/level/BlockGetter;II)V a
	createForClient (BZLnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	createFresh (DDBZZLnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	factory ()Lnet/minecraft/world/level/saveddata/SavedData$Factory; a
	getBanners ()Ljava/util/Collection; e
	getDecorations ()Ljava/lang/Iterable; g
	getHoldingPlayer (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer; a
	getUpdatePacket (ILnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	isExplorationMap ()Z f
	isTrackedCountOverLimit (I)Z b
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; b
	locked ()Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; b
	removeDecoration (Ljava/lang/String;)V a
	removedFromFrame (Lnet/minecraft/core/BlockPos;I)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	scaled (I)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	setColor (IIB)V b
	setColorsDirty (II)V a
	setDecorationsDirty ()V h
	tickCarriedBy (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	toggleBanner (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	updateColor (IIB)Z a
net/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer egb$a
	dirtyData d
	dirtyDecorations i
	maxDirtyX g
	maxDirtyY h
	minDirtyX e
	minDirtyY f
	player a
	step b
	tick j
	createPatch ()Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData$MapPatch; a
	markColorsDirty (II)V a
	markDecorationsDirty ()V b
	nextUpdatePacket (I)Lnet/minecraft/network/protocol/Packet; a
net/minecraft/world/level/saveddata/maps/MapItemSavedData$MapPatch egb$b
	height d
	mapColors e
	startX a
	startY b
	width c
	applyToMap (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
net/minecraft/world/level/storage/CommandStorage ege
	ID_PREFIX a
	namespaces b
	storage c
	createId (Ljava/lang/String;)Ljava/lang/String; c
	factory (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData$Factory; b
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/nbt/CompoundTag; a
	keys ()Ljava/util/stream/Stream; a
	newStorage (Ljava/lang/String;)Lnet/minecraft/world/level/storage/CommandStorage$Container; a
	set (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/storage/CommandStorage$Container ege$a
	TAG_CONTENTS a
	storage b
	get (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	getKeys (Ljava/lang/String;)Ljava/util/stream/Stream; b
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/storage/CommandStorage$Container; b
	put (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/storage/DataVersion egf
	MAIN_SERIES a
	series c
	version b
	getSeries ()Ljava/lang/String; b
	getVersion ()I c
	isCompatible (Lnet/minecraft/world/level/storage/DataVersion;)Z a
	isSideSeries ()Z a
net/minecraft/world/level/storage/DerivedLevelData egg
	worldData a
	wrapped b
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getAllowCommands ()Z o
	getClearWeatherTime ()I h
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getLevelName ()Ljava/lang/String; g
	getRainTime ()I l
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; u
	getSpawnAngle ()F d
	getThunderTime ()I j
	getWanderingTraderId ()Ljava/util/UUID; x
	getWanderingTraderSpawnChance ()I w
	getWanderingTraderSpawnDelay ()I v
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; r
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isInitialized ()Z p
	isRaining ()Z k
	isThundering ()Z i
	setClearWeatherTime (I)V a
	setDayTime (J)V b
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setRainTime (I)V f
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/world/level/storage/DimensionDataStorage egh
	LOGGER a
	cache b
	dataFolder d
	fixerUpper c
	computeIfAbsent (Lnet/minecraft/world/level/saveddata/SavedData$Factory;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; a
	get (Lnet/minecraft/world/level/saveddata/SavedData$Factory;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; b
	getDataFile (Ljava/lang/String;)Ljava/io/File; a
	isGzip (Ljava/io/PushbackInputStream;)Z a
	readSavedData (Ljava/util/function/Function;Lnet/minecraft/util/datafix/DataFixTypes;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; a
	readTagFromDisk (Ljava/lang/String;Lnet/minecraft/util/datafix/DataFixTypes;I)Lnet/minecraft/nbt/CompoundTag; a
	save ()V a
	set (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/SavedData;)V a
net/minecraft/world/level/storage/LevelData egi
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getSpawnAngle ()F d
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isRaining ()Z k
	isThundering ()Z i
	setRaining (Z)V b
net/minecraft/world/level/storage/LevelDataAndDimensions egj
	dimensions b
	worldData a
	dimensions ()Lnet/minecraft/world/level/levelgen/WorldDimensions$Complete; b
	worldData ()Lnet/minecraft/world/level/storage/WorldData; a
net/minecraft/world/level/storage/LevelResource egk
	DATAPACK_DIR j
	GENERATED_DIR i
	ICON_FILE g
	LEVEL_DATA_FILE e
	LOCK_FILE h
	MAP_RESOURCE_FILE k
	OLD_LEVEL_DATA_FILE f
	PLAYER_ADVANCEMENTS_DIR a
	PLAYER_DATA_DIR c
	PLAYER_OLD_DATA_DIR d
	PLAYER_STATS_DIR b
	ROOT l
	id m
	getId ()Ljava/lang/String; a
net/minecraft/world/level/storage/LevelStorageException egl
	messageComponent a
	getMessageComponent ()Lnet/minecraft/network/chat/Component; a
net/minecraft/world/level/storage/LevelStorageSource egm
	ALLOWED_SYMLINKS_CONFIG_NAME a
	FORMATTER c
	LOGGER b
	NO_SYMLINKS_ALLOWED e
	TAG_DATA d
	UNCOMPRESSED_NBT_QUOTA f
	backupDir h
	baseDir g
	fixerUpper i
	worldDirValidator j
	createAccess (Ljava/lang/String;)Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess; e
	createDefault (Ljava/nio/file/Path;)Lnet/minecraft/world/level/storage/LevelStorageSource; b
	findLevelCandidates ()Lnet/minecraft/world/level/storage/LevelStorageSource$LevelCandidates; b
	getBackupPath ()Ljava/nio/file/Path; d
	getBaseDir ()Ljava/nio/file/Path; c
	getFileModificationTime (Ljava/nio/file/Path;)Ljava/time/Instant; d
	getFileModificationTime (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelDirectory;)J a
	getLevelDataAndDimensions (Lcom/mojang/serialization/Dynamic;Lnet/minecraft/world/level/WorldDataConfiguration;Lnet/minecraft/core/Registry;Lnet/minecraft/core/RegistryAccess$Frozen;)Lnet/minecraft/world/level/storage/LevelDataAndDimensions; a
	getLevelPath (Ljava/lang/String;)Ljava/nio/file/Path; c
	getName ()Ljava/lang/String; a
	getPackConfig (Lcom/mojang/serialization/Dynamic;Lnet/minecraft/server/packs/repository/PackRepository;Z)Lnet/minecraft/server/WorldLoader$PackConfig; a
	getStorageVersion ()I f
	getWorldDirValidator ()Lnet/minecraft/world/level/validation/DirectoryValidator; e
	isNewLevelIdAcceptable (Ljava/lang/String;)Z a
	levelExists (Ljava/lang/String;)Z b
	loadLevelSummaries (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelCandidates;)Ljava/util/concurrent/CompletableFuture; a
	makeLevelSummary (Lcom/mojang/serialization/Dynamic;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelDirectory;Z)Lnet/minecraft/world/level/storage/LevelSummary; a
	parseFeatureFlagsFromSummary (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/flag/FeatureFlagSet; b
	parseValidator (Ljava/nio/file/Path;)Lnet/minecraft/world/level/validation/DirectoryValidator; a
	readDataConfig (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/WorldDataConfiguration; a
	readLevelDataTagFixed (Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Lcom/mojang/serialization/Dynamic; a
	readLevelDataTagRaw (Ljava/nio/file/Path;)Lnet/minecraft/nbt/CompoundTag; c
	readLevelSummary (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelDirectory;Z)Lnet/minecraft/world/level/storage/LevelSummary; a
	readLightweightData (Ljava/nio/file/Path;)Lnet/minecraft/nbt/Tag; e
	validateAndCreateAccess (Ljava/lang/String;)Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess; d
	wrapWithRegistryOps (Lcom/mojang/serialization/Dynamic;Lnet/minecraft/core/RegistryAccess$Frozen;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/world/level/storage/LevelStorageSource$LevelCandidates egm$a
	levels a
	isEmpty ()Z a
	levels ()Ljava/util/List; b
net/minecraft/world/level/storage/LevelStorageSource$LevelDirectory egm$b
	path a
	corruptedDataFile (Ljava/time/LocalDateTime;)Ljava/nio/file/Path; a
	dataFile ()Ljava/nio/file/Path; b
	directoryName ()Ljava/lang/String; a
	iconFile ()Ljava/nio/file/Path; d
	lockFile ()Ljava/nio/file/Path; e
	oldDataFile ()Ljava/nio/file/Path; c
	path ()Ljava/nio/file/Path; f
	rawDataFile (Ljava/time/LocalDateTime;)Ljava/nio/file/Path; b
	resourcePath (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path; a
net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess egm$c
	levelDirectory c
	levelId d
	lock b
	resources e
	checkLock ()V m
	createPlayerStorage ()Lnet/minecraft/world/level/storage/PlayerDataStorage; e
	deleteLevel ()V i
	getDataTag ()Lcom/mojang/serialization/Dynamic; f
	getDataTag (Z)Lcom/mojang/serialization/Dynamic; b
	getDataTagFallback ()Lcom/mojang/serialization/Dynamic; g
	getDimensionPath (Lnet/minecraft/resources/ResourceKey;)Ljava/nio/file/Path; a
	getFileModificationTime (Z)Ljava/time/Instant; a
	getIconFile ()Ljava/util/Optional; h
	getLevelDirectory ()Lnet/minecraft/world/level/storage/LevelStorageSource$LevelDirectory; c
	getLevelId ()Ljava/lang/String; d
	getLevelPath (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path; a
	getSummary (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/storage/LevelSummary; a
	hasWorldData ()Z k
	makeWorldBackup ()J j
	modifyLevelDataWithoutDatafix (Ljava/util/function/Consumer;)V a
	parent ()Lnet/minecraft/world/level/storage/LevelStorageSource; b
	renameAndDropPlayer (Ljava/lang/String;)V b
	renameLevel (Ljava/lang/String;)V a
	restoreLevelDataFromOld ()Z l
	safeClose ()V a
	saveDataTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/storage/WorldData;)V a
	saveDataTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/storage/WorldData;Lnet/minecraft/nbt/CompoundTag;)V a
	saveLevelData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/storage/LevelSummary egn
	PLAY_WORLD a
	experimental g
	icon h
	info i
	levelId d
	levelVersion c
	locked f
	requiresManualConversion e
	settings b
	backupStatus ()Lnet/minecraft/world/level/storage/LevelSummary$BackupStatus; o
	canDelete ()Z x
	canEdit ()Z v
	canRecreate ()Z w
	compareTo (Lnet/minecraft/world/level/storage/LevelSummary;)I a
	createInfo ()Lnet/minecraft/network/chat/Component; y
	getGameMode ()Lnet/minecraft/world/level/GameType; h
	getIcon ()Ljava/nio/file/Path; c
	getInfo ()Lnet/minecraft/network/chat/Component; s
	getLastPlayed ()J f
	getLevelId ()Ljava/lang/String; a
	getLevelName ()Ljava/lang/String; b
	getSettings ()Lnet/minecraft/world/level/LevelSettings; g
	getWorldVersionName ()Lnet/minecraft/network/chat/MutableComponent; k
	hasCheats ()Z j
	isCompatible ()Z r
	isDisabled ()Z q
	isDowngrade ()Z n
	isExperimental ()Z e
	isHardcore ()Z i
	isLocked ()Z p
	levelVersion ()Lnet/minecraft/world/level/storage/LevelVersion; l
	primaryActionActive ()Z u
	primaryActionMessage ()Lnet/minecraft/network/chat/Component; t
	requiresManualConversion ()Z d
	shouldBackup ()Z m
net/minecraft/world/level/storage/LevelSummary$BackupStatus egn$a
	$VALUES g
	DOWNGRADE b
	NONE a
	UPGRADE_TO_SNAPSHOT c
	severe e
	shouldBackup d
	translationKey f
	$values ()[Lnet/minecraft/world/level/storage/LevelSummary$BackupStatus; d
	getTranslationKey ()Ljava/lang/String; c
	isSevere ()Z b
	shouldBackup ()Z a
net/minecraft/world/level/storage/LevelSummary$CorruptedLevelSummary egn$b
	INFO b
	RECOVER c
	lastPlayed d
	canEdit ()Z v
	canRecreate ()Z w
	getInfo ()Lnet/minecraft/network/chat/Component; s
	getLastPlayed ()J f
	getLevelName ()Ljava/lang/String; b
	isDisabled ()Z q
	primaryActionActive ()Z u
	primaryActionMessage ()Lnet/minecraft/network/chat/Component; t
net/minecraft/world/level/storage/LevelSummary$SymlinkLevelSummary egn$c
	INFO c
	MORE_INFO_BUTTON b
	canEdit ()Z v
	canRecreate ()Z w
	getInfo ()Lnet/minecraft/network/chat/Component; s
	getLastPlayed ()J f
	getLevelName ()Ljava/lang/String; b
	isDisabled ()Z q
	primaryActionActive ()Z u
	primaryActionMessage ()Lnet/minecraft/network/chat/Component; t
net/minecraft/world/level/storage/LevelVersion ego
	lastPlayed b
	levelDataVersion a
	minecraftVersion d
	minecraftVersionName c
	snapshot e
	lastPlayed ()J b
	levelDataVersion ()I a
	minecraftVersion ()Lnet/minecraft/world/level/storage/DataVersion; d
	minecraftVersionName ()Ljava/lang/String; c
	parse (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/storage/LevelVersion; a
	snapshot ()Z e
net/minecraft/world/level/storage/PlayerDataStorage egp
	LOGGER b
	fixerUpper a
	playerDir c
	getSeenPlayers ()[Ljava/lang/String; a
	load (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/nbt/CompoundTag; b
	save (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/storage/PrimaryLevelData egq
	LEVEL_NAME a
	LOGGER f
	PLAYER b
	WORLD_GEN_SETTINGS c
	clearWeatherTime s
	customBossEvents B
	dayTime p
	difficultyLocked y
	endDragonFightData A
	gameTime o
	initialized x
	knownServerBrands F
	loadedPlayerTag q
	rainTime u
	raining t
	removedFeatureFlags H
	scheduledEvents I
	settings g
	spawnAngle n
	specialWorldProperty i
	thunderTime w
	thundering v
	version r
	wanderingTraderId E
	wanderingTraderSpawnChance D
	wanderingTraderSpawnDelay C
	wasModded G
	worldBorder z
	worldGenSettingsLifecycle j
	worldOptions h
	xSpawn k
	ySpawn l
	zSpawn m
	createTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	endDragonFightData ()Lnet/minecraft/world/level/dimension/end/EndDragonFight$Data; E
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getAllowCommands ()Z o
	getClearWeatherTime ()I h
	getCustomBossEvents ()Lnet/minecraft/nbt/CompoundTag; G
	getDataConfiguration ()Lnet/minecraft/world/level/WorldDataConfiguration; F
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getKnownServerBrands ()Ljava/util/Set; I
	getLevelName ()Ljava/lang/String; g
	getLevelSettings ()Lnet/minecraft/world/level/LevelSettings; L
	getLoadedPlayerTag ()Lnet/minecraft/nbt/CompoundTag; y
	getRainTime ()I l
	getRemovedFeatureFlags ()Ljava/util/Set; J
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; u
	getSpawnAngle ()F d
	getThunderTime ()I j
	getVersion ()I z
	getWanderingTraderId ()Ljava/util/UUID; x
	getWanderingTraderSpawnChance ()I w
	getWanderingTraderSpawnDelay ()I v
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; r
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDebugWorld ()Z C
	isDifficultyLocked ()Z t
	isFlatWorld ()Z B
	isHardcore ()Z n
	isInitialized ()Z p
	isRaining ()Z k
	isThundering ()Z i
	overworldData ()Lnet/minecraft/world/level/storage/ServerLevelData; K
	parse (Lcom/mojang/serialization/Dynamic;Lnet/minecraft/world/level/LevelSettings;Lnet/minecraft/world/level/storage/PrimaryLevelData$SpecialWorldProperty;Lnet/minecraft/world/level/levelgen/WorldOptions;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/world/level/storage/PrimaryLevelData; a
	setClearWeatherTime (I)V a
	setCustomBossEvents (Lnet/minecraft/nbt/CompoundTag;)V a
	setDataConfiguration (Lnet/minecraft/world/level/WorldDataConfiguration;)V a
	setDayTime (J)V b
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V d
	setEndDragonFightData (Lnet/minecraft/world/level/dimension/end/EndDragonFight$Data;)V a
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setModdedInfo (Ljava/lang/String;Z)V a
	setRainTime (I)V f
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setTagData (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/CompoundTag;)V a
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
	stringCollectionToTag (Ljava/util/Set;)Lnet/minecraft/nbt/ListTag; a
	wasModded ()Z H
	worldGenOptions ()Lnet/minecraft/world/level/levelgen/WorldOptions; A
	worldGenSettingsLifecycle ()Lcom/mojang/serialization/Lifecycle; D
net/minecraft/world/level/storage/PrimaryLevelData$SpecialWorldProperty egq$a
	$VALUES d
	DEBUG c
	FLAT b
	NONE a
	$values ()[Lnet/minecraft/world/level/storage/PrimaryLevelData$SpecialWorldProperty; a
net/minecraft/world/level/storage/ServerLevelData egr
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getAllowCommands ()Z o
	getClearWeatherTime ()I h
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getLevelName ()Ljava/lang/String; g
	getRainTime ()I l
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; u
	getThunderTime ()I j
	getWanderingTraderId ()Ljava/util/UUID; x
	getWanderingTraderSpawnChance ()I w
	getWanderingTraderSpawnDelay ()I v
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; r
	isInitialized ()Z p
	setClearWeatherTime (I)V a
	setDayTime (J)V b
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setRainTime (I)V f
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
net/minecraft/world/level/storage/WorldData egs
	ANVIL_VERSION_ID d
	MCREGION_VERSION_ID e
	createTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; M
	endDragonFightData ()Lnet/minecraft/world/level/dimension/end/EndDragonFight$Data; E
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getAllowCommands ()Z o
	getCustomBossEvents ()Lnet/minecraft/nbt/CompoundTag; G
	getDataConfiguration ()Lnet/minecraft/world/level/WorldDataConfiguration; F
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getKnownServerBrands ()Ljava/util/Set; I
	getLevelName ()Ljava/lang/String; g
	getLevelSettings ()Lnet/minecraft/world/level/LevelSettings; L
	getLoadedPlayerTag ()Lnet/minecraft/nbt/CompoundTag; y
	getRemovedFeatureFlags ()Ljava/util/Set; J
	getStorageVersionName (I)Ljava/lang/String; i
	getVersion ()I z
	isDebugWorld ()Z C
	isDifficultyLocked ()Z t
	isFlatWorld ()Z B
	isHardcore ()Z n
	overworldData ()Lnet/minecraft/world/level/storage/ServerLevelData; K
	setCustomBossEvents (Lnet/minecraft/nbt/CompoundTag;)V a
	setDataConfiguration (Lnet/minecraft/world/level/WorldDataConfiguration;)V a
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V d
	setEndDragonFightData (Lnet/minecraft/world/level/dimension/end/EndDragonFight$Data;)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setModdedInfo (Ljava/lang/String;Z)V a
	wasModded ()Z H
	worldGenOptions ()Lnet/minecraft/world/level/levelgen/WorldOptions; A
	worldGenSettingsLifecycle ()Lcom/mojang/serialization/Lifecycle; D
net/minecraft/world/level/storage/WritableLevelData egt
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/world/level/storage/loot/BuiltInLootTables egu
	ABANDONED_MINESHAFT u
	ANCIENT_CITY P
	ANCIENT_CITY_ICE_BOX Q
	ARMORER_GIFT ax
	BASTION_BRIDGE N
	BASTION_HOGLIN_STABLE O
	BASTION_OTHER M
	BASTION_TREASURE L
	BURIED_TREASURE G
	BUTCHER_GIFT ay
	CARTOGRAPHER_GIFT az
	CAT_MORNING_GIFT aw
	CLERIC_GIFT aA
	DESERT_PYRAMID z
	DESERT_PYRAMID_ARCHAEOLOGY aP
	DESERT_WELL_ARCHAEOLOGY aO
	EMPTY a
	END_CITY_TREASURE c
	FARMER_GIFT aB
	FISHERMAN_GIFT aC
	FISHING as
	FISHING_FISH av
	FISHING_JUNK at
	FISHING_TREASURE au
	FLETCHER_GIFT aD
	IGLOO_CHEST C
	IMMUTABLE_LOCATIONS aV
	JUNGLE_TEMPLE A
	JUNGLE_TEMPLE_DISPENSER B
	LEATHERWORKER_GIFT aE
	LIBRARIAN_GIFT aF
	LOCATIONS aU
	MASON_GIFT aG
	NETHER_BRIDGE v
	OCEAN_RUIN_COLD_ARCHAEOLOGY aT
	OCEAN_RUIN_WARM_ARCHAEOLOGY aS
	PIGLIN_BARTERING aL
	PILLAGER_OUTPOST K
	RUINED_PORTAL R
	SHEEP_BLACK ar
	SHEEP_BLUE an
	SHEEP_BROWN ao
	SHEEP_CYAN al
	SHEEP_GRAY aj
	SHEEP_GREEN ap
	SHEEP_LIGHT_BLUE af
	SHEEP_LIGHT_GRAY ak
	SHEEP_LIME ah
	SHEEP_MAGENTA ae
	SHEEP_ORANGE ad
	SHEEP_PINK ai
	SHEEP_PURPLE am
	SHEEP_RED aq
	SHEEP_WHITE ac
	SHEEP_YELLOW ag
	SHEPHERD_GIFT aH
	SHIPWRECK_MAP H
	SHIPWRECK_SUPPLY I
	SHIPWRECK_TREASURE J
	SIMPLE_DUNGEON d
	SNIFFER_DIGGING aK
	SPAWNER_TRIAL_CHAMBER_CONSUMABLES aN
	SPAWNER_TRIAL_CHAMBER_KEY aM
	SPAWN_BONUS_CHEST b
	STRONGHOLD_CORRIDOR y
	STRONGHOLD_CROSSING x
	STRONGHOLD_LIBRARY w
	TOOLSMITH_GIFT aI
	TRAIL_RUINS_ARCHAEOLOGY_COMMON aQ
	TRAIL_RUINS_ARCHAEOLOGY_RARE aR
	TRIAL_CHAMBERS_CHAMBER_DISPENSER Z
	TRIAL_CHAMBERS_CORRIDOR U
	TRIAL_CHAMBERS_CORRIDOR_DISPENSER Y
	TRIAL_CHAMBERS_CORRIDOR_POT ab
	TRIAL_CHAMBERS_ENTRANCE X
	TRIAL_CHAMBERS_INTERSECTION V
	TRIAL_CHAMBERS_INTERSECTION_BARREL W
	TRIAL_CHAMBERS_REWARD S
	TRIAL_CHAMBERS_SUPPLY T
	TRIAL_CHAMBERS_WATER_DISPENSER aa
	UNDERWATER_RUIN_BIG F
	UNDERWATER_RUIN_SMALL E
	VILLAGE_ARMORER g
	VILLAGE_BUTCHER k
	VILLAGE_CARTOGRAPHER h
	VILLAGE_DESERT_HOUSE p
	VILLAGE_FISHER m
	VILLAGE_FLETCHER l
	VILLAGE_MASON i
	VILLAGE_PLAINS_HOUSE q
	VILLAGE_SAVANNA_HOUSE t
	VILLAGE_SHEPHERD j
	VILLAGE_SNOWY_HOUSE s
	VILLAGE_TAIGA_HOUSE r
	VILLAGE_TANNERY n
	VILLAGE_TEMPLE o
	VILLAGE_TOOLSMITH f
	VILLAGE_WEAPONSMITH e
	WEAPONSMITH_GIFT aJ
	WOODLAND_MANSION D
	all ()Ljava/util/Set; a
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	register (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/IntRange egv
	CODEC a
	RECORD_CODEC b
	limiter e
	max d
	min c
	predicate f
	clamp (Lnet/minecraft/world/level/storage/loot/LootContext;I)I a
	exact (I)Lnet/minecraft/world/level/storage/loot/IntRange; a
	getReferencedContextParams ()Ljava/util/Set; a
	lowerBound (I)Lnet/minecraft/world/level/storage/loot/IntRange; b
	range (II)Lnet/minecraft/world/level/storage/loot/IntRange; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;I)Z b
	unpackExact ()Ljava/util/OptionalInt; b
	upperBound (I)Lnet/minecraft/world/level/storage/loot/IntRange; c
net/minecraft/world/level/storage/loot/IntRange$IntChecker egv$a
net/minecraft/world/level/storage/loot/IntRange$IntLimiter egv$b
net/minecraft/world/level/storage/loot/LootContext egw
	lootDataResolver c
	params a
	random b
	visitedElements d
	addDynamicDrops (Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/Consumer;)V a
	createVisitedEntry (Lnet/minecraft/world/level/storage/loot/LootTable;)Lnet/minecraft/world/level/storage/loot/LootContext$VisitedEntry; a
	createVisitedEntry (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/LootContext$VisitedEntry; a
	createVisitedEntry (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/LootContext$VisitedEntry; a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; d
	getLuck ()F c
	getParam (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; b
	getParamOrNull (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; c
	getRandom ()Lnet/minecraft/util/RandomSource; b
	getResolver ()Lnet/minecraft/world/level/storage/loot/LootDataResolver; a
	hasParam (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Z a
	hasVisitedElement (Lnet/minecraft/world/level/storage/loot/LootContext$VisitedEntry;)Z a
	popVisitedElement (Lnet/minecraft/world/level/storage/loot/LootContext$VisitedEntry;)V c
	pushVisitedElement (Lnet/minecraft/world/level/storage/loot/LootContext$VisitedEntry;)Z b
net/minecraft/world/level/storage/loot/LootContext$Builder egw$a
	params a
	random b
	create (Ljava/util/Optional;)Lnet/minecraft/world/level/storage/loot/LootContext; a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; a
	withOptionalRandomSeed (J)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
net/minecraft/world/level/storage/loot/LootContext$EntityTarget egw$b
	$VALUES h
	CODEC e
	DIRECT_KILLER c
	KILLER b
	KILLER_PLAYER d
	THIS a
	name f
	param g
	$values ()[Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; b
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; a
	getParam ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/storage/loot/LootContext$VisitedEntry egw$c
	type a
	value b
	type ()Lnet/minecraft/world/level/storage/loot/LootDataType; a
	value ()Ljava/lang/Object; b
net/minecraft/world/level/storage/loot/LootContextUser egx
	getReferencedContextParams ()Ljava/util/Set; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootDataId egy
	location b
	type a
	location ()Lnet/minecraft/resources/ResourceLocation; b
	type ()Lnet/minecraft/world/level/storage/loot/LootDataType; a
net/minecraft/world/level/storage/loot/LootDataManager egz
	EMPTY_LOOT_TABLE_KEY a
	GSON c
	LOGGER b
	elements d
	typeKeys e
	apply (Ljava/util/Map;)V a
	castAndValidate (Lnet/minecraft/world/level/storage/loot/ValidationContext;Lnet/minecraft/world/level/storage/loot/LootDataId;Ljava/lang/Object;)V a
	getKeys (Lnet/minecraft/world/level/storage/loot/LootDataType;)Ljava/util/Collection; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	scheduleElementParse (Lnet/minecraft/world/level/storage/loot/LootDataType;Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;Ljava/util/Map;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/world/level/storage/loot/LootDataResolver eha
net/minecraft/world/level/storage/loot/LootDataType ehb
	LOGGER d
	MODIFIER b
	PREDICATE a
	TABLE c
	codec e
	directory f
	validator g
	createLootTableValidator ()Lnet/minecraft/world/level/storage/loot/LootDataType$Validator; d
	createSimpleValidator ()Lnet/minecraft/world/level/storage/loot/LootDataType$Validator; c
	deserialize (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonElement;)Ljava/util/Optional; a
	directory ()Ljava/lang/String; a
	runValidation (Lnet/minecraft/world/level/storage/loot/ValidationContext;Lnet/minecraft/world/level/storage/loot/LootDataId;Ljava/lang/Object;)V a
	values ()Ljava/util/stream/Stream; b
net/minecraft/world/level/storage/loot/LootDataType$Validator ehb$a
net/minecraft/world/level/storage/loot/LootParams ehc
	dynamicDrops c
	level a
	luck d
	params b
	addDynamicDrops (Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/Consumer;)V a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; a
	getLuck ()F b
	getOptionalParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; c
	getParamOrNull (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; d
	getParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; b
	hasParam (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Z a
net/minecraft/world/level/storage/loot/LootParams$Builder ehc$a
	dynamicDrops c
	level a
	luck d
	params b
	create (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/LootParams; a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; a
	getOptionalParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; b
	getParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; a
	withDynamicDrop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootParams$DynamicDrop;)Lnet/minecraft/world/level/storage/loot/LootParams$Builder; a
	withLuck (F)Lnet/minecraft/world/level/storage/loot/LootParams$Builder; a
	withOptionalParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;Ljava/lang/Object;)Lnet/minecraft/world/level/storage/loot/LootParams$Builder; b
	withParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;Ljava/lang/Object;)Lnet/minecraft/world/level/storage/loot/LootParams$Builder; a
net/minecraft/world/level/storage/loot/LootParams$DynamicDrop ehc$b
net/minecraft/world/level/storage/loot/LootPool ehd
	CODEC a
	bonusRolls h
	compositeCondition d
	compositeFunction f
	conditions c
	entries b
	functions e
	rolls g
	addRandomItem (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V b
	addRandomItems (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	lootPool ()Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootPool$Builder ehd$a
	bonusRolls e
	conditions b
	entries a
	functions c
	rolls d
	add (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; b
	build ()Lnet/minecraft/world/level/storage/loot/LootPool; b
	setBonusRolls (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; b
	setRolls (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	unwrap ()Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	unwrap ()Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; d
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; b
net/minecraft/world/level/storage/loot/LootTable ehe
	CODEC c
	DEFAULT_PARAM_SET b
	EMPTY a
	LOGGER d
	compositeFunction i
	functions h
	paramSet e
	pools g
	randomSequence f
	createStackSplitter (Lnet/minecraft/server/level/ServerLevel;Ljava/util/function/Consumer;)Ljava/util/function/Consumer; a
	fill (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/storage/loot/LootParams;J)V a
	getAvailableSlots (Lnet/minecraft/world/Container;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getParamSet ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootContext;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList; a
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)V b
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootParams;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList; a
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootParams;J)Lit/unimi/dsi/fastutil/objects/ObjectArrayList; a
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootParams;JLjava/util/function/Consumer;)V a
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootParams;Ljava/util/function/Consumer;)V b
	getRandomItemsRaw (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)V a
	getRandomItemsRaw (Lnet/minecraft/world/level/storage/loot/LootParams;Ljava/util/function/Consumer;)V a
	lootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	shuffleAndSplitItems (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;ILnet/minecraft/util/RandomSource;)V a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootTable$Builder ehe$a
	functions b
	paramSet c
	pools a
	randomSequence d
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; b
	build ()Lnet/minecraft/world/level/storage/loot/LootTable; b
	setParamSet (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	setRandomSequence (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	unwrap ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	unwrap ()Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; c
	withPool (Lnet/minecraft/world/level/storage/loot/LootPool$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
net/minecraft/world/level/storage/loot/ValidationContext ehf
	params b
	reporter a
	resolver c
	visitedElements d
	enterElement (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/LootDataId;)Lnet/minecraft/world/level/storage/loot/ValidationContext; a
	forChild (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/ValidationContext; a
	hasVisitedElement (Lnet/minecraft/world/level/storage/loot/LootDataId;)Z a
	reportProblem (Ljava/lang/String;)V b
	resolver ()Lnet/minecraft/world/level/storage/loot/LootDataResolver; a
	setParams (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/ValidationContext; a
	validateUser (Lnet/minecraft/world/level/storage/loot/LootContextUser;)V a
net/minecraft/world/level/storage/loot/entries/AlternativesEntry ehg
	CODEC a
	alternatives (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	alternatives ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	compose (Ljava/util/List;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder ehg$a
	entries a
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; aD_
	otherwise (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer ehh
	ALWAYS_FALSE b
	ALWAYS_TRUE c
net/minecraft/world/level/storage/loot/entries/CompositeEntryBase ehi
	children d
	composedChildren a
	compose (Ljava/util/List;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	createCodec (Lnet/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor;)Lcom/mojang/serialization/Codec; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor ehi$a
net/minecraft/world/level/storage/loot/entries/DynamicLoot ehj
	CODEC a
	name j
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	dynamicEntry (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/EmptyLootItem ehk
	CODEC a
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	emptyItem ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/EntryGroup ehl
	CODEC a
	compose (Ljava/util/List;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	list ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; a
net/minecraft/world/level/storage/loot/entries/EntryGroup$Builder ehl$a
	entries a
	append (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; b
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; aD_
net/minecraft/world/level/storage/loot/entries/LootItem ehm
	CODEC a
	item j
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	lootTableItem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
net/minecraft/world/level/storage/loot/entries/LootPoolEntries ehn
	ALTERNATIVES g
	CODEC a
	DYNAMIC e
	EMPTY b
	GROUP i
	ITEM c
	REFERENCE d
	SEQUENCE h
	TAG f
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/LootPoolEntry eho
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getWeight (F)I a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer ehp
	compositeCondition a
	conditions e
	canRun (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	commonFields (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder ehp$a
	conditions a
	append (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; b
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getConditions ()Ljava/util/List; f
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; aD_
	otherwise (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	then (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; e
	unwrap ()Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; d
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; a
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; b
net/minecraft/world/level/storage/loot/entries/LootPoolEntryType ehq
	codec a
	codec ()Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer ehr
	DEFAULT_QUALITY f
	DEFAULT_WEIGHT d
	compositeFunction a
	entry j
	functions i
	quality h
	weight g
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	simpleBuilder (Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	singletonFields (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P4; b
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder ehr$a
	functions c
	quality b
	weight a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; b
	getFunctions ()Ljava/util/List; a
	setQuality (I)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	setWeight (I)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	unwrap ()Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; c
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder ehr$b
	constructor c
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; aD_
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder; g
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryBase ehr$c
	getWeight (F)I a
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor ehr$d
net/minecraft/world/level/storage/loot/entries/LootTableReference ehs
	CODEC a
	name j
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	lootTableReference (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/SequentialEntry eht
	CODEC a
	compose (Ljava/util/List;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	sequential ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; a
net/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder eht$a
	entries a
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; aD_
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; a
	then (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; c
net/minecraft/world/level/storage/loot/entries/TagEntry ehu
	CODEC a
	expand k
	tag j
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	expandTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	expandTag (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)Z a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	tagContents (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount ehw
	CODEC a
	FORMULAS b
	FORMULA_CODEC d
	FORMULA_TYPE_CODEC c
	enchantment e
	formula f
	addBonusBinomialDistributionCount (Lnet/minecraft/world/item/enchantment/Enchantment;FI)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	addOreBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	addUniformBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; b
	addUniformBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;I)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$BinomialWithBonusCount ehw$a
	CODEC d
	TYPE a
	extraRounds b
	probability c
	calculateNewCount (Lnet/minecraft/util/RandomSource;II)I a
	extraRounds ()I b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaType; a
	probability ()F c
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula ehw$b
	calculateNewCount (Lnet/minecraft/util/RandomSource;II)I a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaType; a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaType ehw$c
	codec b
	id a
	codec ()Lcom/mojang/serialization/Codec; b
	id ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$OreDrops ehw$d
	CODEC a
	TYPE b
	calculateNewCount (Lnet/minecraft/util/RandomSource;II)I a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaType; a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$UniformBonusCount ehw$e
	CODEC a
	TYPE b
	bonusMultiplier c
	bonusMultiplier ()I b
	calculateNewCount (Lnet/minecraft/util/RandomSource;II)I a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaType; a
net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay ehx
	CODEC a
	explosionDecay ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/CopyBlockState ehy
	CODEC a
	block b
	properties c
	copyState (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	serialize (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/String; a
net/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder ehy$a
	block a
	properties b
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	copy (Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/CopyNameFunction ehz
	CODEC a
	source b
	copyName (Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource ehz$a
	$VALUES h
	BLOCK_ENTITY d
	CODEC e
	KILLER b
	KILLER_PLAYER c
	THIS a
	name f
	param g
	$values ()[Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction eia
	CODEC a
	operations c
	source b
	copyData (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	copyData (Lnet/minecraft/world/level/storage/loot/providers/nbt/NbtProvider;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder eia$a
	ops b
	source a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	copy (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	copy (Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation eia$b
	CODEC a
	op d
	sourcePath b
	targetPath c
	apply (Ljava/util/function/Supplier;Lnet/minecraft/nbt/Tag;)V a
	op ()Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy; c
	sourcePath ()Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Path; a
	targetPath ()Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Path; b
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy eia$c
	$VALUES f
	APPEND b
	CODEC d
	MERGE c
	REPLACE a
	name e
	$values ()[Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy; a
	getSerializedName ()Ljava/lang/String; c
	merge (Lnet/minecraft/nbt/Tag;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Ljava/util/List;)V a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Path eia$d
	CODEC a
	path c
	string b
	of (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Path; a
	path ()Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; b
	string ()Ljava/lang/String; a
net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction eib
	CODEC a
	ENCHANTMENT_SET_CODEC c
	LOGGER b
	enchantments d
	enchantItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/ItemStack; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	randomApplicableEnchantment ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	randomEnchantment ()Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; c
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder eib$a
	enchantments a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	withEnchantment (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction eic
	CODEC a
	levels b
	treasure c
	enchantWithLevels (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder eic$a
	levels a
	treasure b
	allowTreasure ()Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; e
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction eid
	CODEC f
	DEFAULT_DECORATION b
	DEFAULT_DESTINATION a
	DEFAULT_SEARCH_RADIUS d
	DEFAULT_SKIP_EXISTING e
	DEFAULT_ZOOM c
	destination h
	mapDecoration i
	searchRadius k
	skipKnownStructures l
	zoom j
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	makeExplorationMap ()Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; c
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder eid$a
	destination a
	mapDecoration b
	searchRadius d
	skipKnownStructures e
	zoom c
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	setDestination (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setMapDecoration (Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setSearchRadius (I)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setSkipKnownStructures (Z)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setZoom (B)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/FillPlayerHead eie
	CODEC a
	entityTarget b
	fillPlayerHead (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/FunctionReference eif
	CODEC a
	LOGGER b
	name c
	functionReference (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/functions/FunctionUserBuilder eig
	apply (Ljava/lang/Iterable;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; b
	apply ([Ljava/lang/Object;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; a
	unwrap ()Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; c
net/minecraft/world/level/storage/loot/functions/LimitCount eih
	CODEC a
	limiter b
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	limitCount (Lnet/minecraft/world/level/storage/loot/IntRange;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction eii
	compositePredicates a
	predicates g
	apply (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; b
	commonFields (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	simpleBuilder (Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder eii$a
	conditions a
	getConditions ()Ljava/util/List; g
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; f
	unwrap ()Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; d
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; b
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder eii$b
	constructor a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder; a
net/minecraft/world/level/storage/loot/functions/LootItemFunction eij
	decorate (Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/util/function/Consumer; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
net/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder eij$a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
net/minecraft/world/level/storage/loot/functions/LootItemFunctionType eik
	codec a
	codec ()Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/storage/loot/functions/LootItemFunctions eil
	APPLY_BONUS r
	CODEC b
	COPY_NAME o
	COPY_NBT w
	COPY_STATE x
	ENCHANT_RANDOMLY e
	ENCHANT_WITH_LEVELS d
	EXPLORATION_MAP m
	EXPLOSION_DECAY t
	FILL_PLAYER_HEAD v
	FURNACE_SMELT h
	IDENTITY a
	LIMIT_COUNT q
	LOOTING_ENCHANT i
	REFERENCE B
	SEQUENCE C
	SET_ATTRIBUTES k
	SET_BANNER_PATTERN y
	SET_CONTENTS p
	SET_COUNT c
	SET_DAMAGE j
	SET_ENCHANTMENTS f
	SET_INSTRUMENT A
	SET_LOOT_TABLE s
	SET_LORE u
	SET_NAME l
	SET_NBT g
	SET_POTION z
	SET_STEW_EFFECT n
	TYPED_CODEC D
	compose (Ljava/util/List;)Ljava/util/function/BiFunction; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction eim
	CODEC b
	NO_LIMIT a
	limit d
	value c
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	hasLimit ()Z c
	lootingMultiplier (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder eim$a
	count a
	limit b
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
	setLimit (I)Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SequenceFunction ein
	CODEC a
	INLINE_CODEC b
	compositeFunction d
	functions c
	apply (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	of (Ljava/util/List;)Lnet/minecraft/world/level/storage/loot/functions/SequenceFunction; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction eio
	CODEC a
	modifiers b
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	modifier (Ljava/lang/String;Lnet/minecraft/core/Holder;Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setAttributes ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder eio$a
	modifiers a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; a
	withModifier (Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier eio$b
	CODEC a
	SLOTS_CODEC h
	amount e
	attribute c
	id g
	name b
	operation d
	slots f
	amount ()Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider; d
	attribute ()Lnet/minecraft/core/Holder; b
	id ()Ljava/util/Optional; f
	name ()Ljava/lang/String; a
	operation ()Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; c
	slots ()Ljava/util/List; e
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder eio$c
	amount d
	attribute b
	id e
	name a
	operation c
	slots f
	build ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier; a
	forSlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
	withUuid (Ljava/util/UUID;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction eip
	CODEC a
	PATTERN_CODEC b
	append d
	patterns c
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setBannerPattern (Z)Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder eip$a
	append b
	patterns a
	addPattern (Lnet/minecraft/core/Holder;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder; a
	addPattern (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder; a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetContainerContents eiq
	CODEC a
	entries c
	type b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setContents (Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder eiq$a
	entries a
	type b
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; a
	withEntry (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; a
net/minecraft/world/level/storage/loot/functions/SetContainerLootTable eir
	CODEC a
	name b
	seed c
	type d
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
	withLootTable (Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	withLootTable (Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/resources/ResourceLocation;J)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction eis
	CODEC a
	add c
	enchantments b
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	updateEnchantment (Ljava/util/Map;Lnet/minecraft/world/item/enchantment/Enchantment;I)V a
net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder eis$a
	add b
	enchantments a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder; a
	withEnchantment (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetInstrumentFunction eit
	CODEC a
	options b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setInstrumentOptions (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetItemCountFunction eiu
	CODEC a
	add c
	value b
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setCount (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	setCount (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Z)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction eiv
	CODEC a
	LOGGER b
	add d
	damage c
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setDamage (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	setDamage (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Z)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetLoreFunction eiw
	CODEC a
	lore c
	replace b
	resolutionContext d
	getLoreTag (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/nbt/ListTag; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setLore ()Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder eiw$a
	lore c
	replace a
	resolutionContext b
	addLine (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	setReplace (Z)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	setResolutionContext (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetNameFunction eix
	CODEC a
	LOGGER b
	name c
	resolutionContext d
	createResolver (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Ljava/util/function/UnaryOperator; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	setName (Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetNbtFunction eiy
	CODEC a
	tag b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetPotionFunction eiz
	CODEC a
	potion b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setPotion (Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction eja
	CODEC a
	EFFECTS_LIST b
	effects c
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	stewEffect ()Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder eja$a
	effects a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; a
	withEffect (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$EffectEntry eja$b
	CODEC a
	duration c
	effect b
	duration ()Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider; b
	effect ()Lnet/minecraft/core/Holder; a
net/minecraft/world/level/storage/loot/functions/SmeltItemFunction ejb
	CODEC a
	LOGGER b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	smelted ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
net/minecraft/world/level/storage/loot/parameters/LootContextParam eje
	name a
	getName ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSet ejf
	all b
	required a
	builder ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; c
	getAllowed ()Ljava/util/Set; b
	getRequired ()Ljava/util/Set; a
	isAllowed (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Z a
	validateUser (Lnet/minecraft/world/level/storage/loot/ValidationContext;Lnet/minecraft/world/level/storage/loot/LootContextUser;)V a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder ejf$a
	optional b
	required a
	build ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
	optional (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; b
	required (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSets ejg
	ADVANCEMENT_ENTITY l
	ADVANCEMENT_LOCATION m
	ADVANCEMENT_REWARD k
	ALL_PARAMS n
	ARCHAEOLOGY h
	BLOCK o
	CHEST c
	CODEC a
	COMMAND d
	EMPTY b
	ENTITY g
	FISHING f
	GIFT i
	PIGLIN_BARTER j
	REGISTRY p
	SELECTOR e
	register (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
net/minecraft/world/level/storage/loot/parameters/LootContextParams ejh
	BLOCK_ENTITY h
	BLOCK_STATE g
	DAMAGE_SOURCE c
	DIRECT_KILLER_ENTITY e
	EXPLOSION_RADIUS j
	KILLER_ENTITY d
	LAST_DAMAGE_PLAYER b
	ORIGIN f
	THIS_ENTITY a
	TOOL i
	create (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam; a
net/minecraft/world/level/storage/loot/predicates/AllOfCondition ejj
	CODEC a
	INLINE_CODEC b
	allOf (Ljava/util/List;)Lnet/minecraft/world/level/storage/loot/predicates/AllOfCondition; a
	allOf ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/AllOfCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
net/minecraft/world/level/storage/loot/predicates/AllOfCondition$Builder ejj$a
	create (Ljava/util/List;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; a
net/minecraft/world/level/storage/loot/predicates/AnyOfCondition ejk
	CODEC a
	anyOf ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/AnyOfCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
net/minecraft/world/level/storage/loot/predicates/AnyOfCondition$Builder ejk$a
	create (Ljava/util/List;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; a
net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition ejl
	CODEC a
	enchantment b
	values c
	bonusLevelFlatChance (Lnet/minecraft/world/item/enchantment/Enchantment;[F)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	enchantment ()Lnet/minecraft/core/Holder; c
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	values ()Ljava/util/List; d
net/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition ejm
	composedPredicate a
	terms c
	createCodec (Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	createInlineCodec (Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition$Builder ejm$a
	terms a
	addTerm (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)V a
	create (Ljava/util/List;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; a
net/minecraft/world/level/storage/loot/predicates/ConditionReference ejn
	CODEC a
	LOGGER c
	name b
	conditionReference (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	name ()Lnet/minecraft/resources/ResourceLocation; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder ejo
	unwrap ()Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; d
	when (Ljava/lang/Iterable;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; a_
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; b
net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition ejp
	CODEC a
	predicate b
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	hasDamageSource (Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	predicate ()Ljava/util/Optional; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition ejq
	CODEC a
	entityTarget c
	scores b
	entityTarget ()Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; d
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	hasScore (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/scores/Scoreboard;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/IntRange;)Z a
	hasScores (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder; a
	scores ()Ljava/util/Map; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder ejq$a
	entityTarget b
	scores a
	withScore (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/IntRange;)Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/ExplosionCondition ejr
	CODEC a
	INSTANCE b
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	survivesExplosion ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition ejs
	CODEC a
	term b
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	invert (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	term ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LocationCheck ejt
	CODEC a
	OFFSET_CODEC d
	offset c
	predicate b
	checkLocation (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	checkLocation (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	offset ()Lnet/minecraft/core/BlockPos; d
	predicate ()Ljava/util/Optional; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition eju
	CODEC a
	block b
	properties c
	block ()Lnet/minecraft/core/Holder; c
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	hasBlockStateProperties (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder; a
	properties ()Ljava/util/Optional; d
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition;)Lcom/mojang/serialization/DataResult; a
net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder eju$a
	block a
	properties b
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/LootItemCondition ejv
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder ejv$a
net/minecraft/world/level/storage/loot/predicates/LootItemConditionType ejw
	codec a
	codec ()Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/storage/loot/predicates/LootItemConditions ejx
	ALL_OF d
	ANY_OF c
	BLOCK_STATE_PROPERTY j
	CODEC a
	DAMAGE_SOURCE_PROPERTIES n
	ENTITY_PROPERTIES g
	ENTITY_SCORES i
	INVERTED b
	KILLED_BY_PLAYER h
	LOCATION_CHECK o
	MATCH_TOOL k
	RANDOM_CHANCE e
	RANDOM_CHANCE_WITH_LOOTING f
	REFERENCE q
	SURVIVES_EXPLOSION m
	TABLE_BONUS l
	TIME_CHECK r
	TYPED_CODEC t
	VALUE_CHECK s
	WEATHER_CHECK p
	andConditions (Ljava/util/List;)Ljava/util/function/Predicate; a
	orConditions (Ljava/util/List;)Ljava/util/function/Predicate; b
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition ejy
	CODEC a
	entityTarget c
	predicate b
	entityPresent (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	entityTarget ()Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; d
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	hasProperties (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	hasProperties (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	predicate ()Ljava/util/Optional; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition ejz
	CODEC a
	INSTANCE b
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	killedByPlayer ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition eka
	CODEC a
	probability b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	probability ()F c
	randomChance (F)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition ekb
	CODEC a
	lootingMultiplier c
	percent b
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	lootingMultiplier ()F d
	percent ()F c
	randomChanceAndLootingBoost (FF)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/MatchTool ekc
	CODEC a
	predicate b
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	predicate ()Ljava/util/Optional; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	toolMatches (Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/TimeCheck ekd
	CODEC a
	period b
	value c
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	period ()Ljava/util/Optional; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	time (Lnet/minecraft/world/level/storage/loot/IntRange;)Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder; a
	value ()Lnet/minecraft/world/level/storage/loot/IntRange; d
net/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder ekd$a
	period a
	value b
	build ()Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck; a
	setPeriod (J)Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder; a
net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition eke
	CODEC a
	provider b
	range c
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	hasValue (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Lnet/minecraft/world/level/storage/loot/IntRange;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	provider ()Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider; c
	range ()Lnet/minecraft/world/level/storage/loot/IntRange; d
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/WeatherCheck ekf
	CODEC a
	isRaining b
	isThundering c
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	isRaining ()Ljava/util/Optional; d
	isThundering ()Ljava/util/Optional; e
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	weather ()Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; c
net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder ekf$a
	isRaining a
	isThundering b
	build ()Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck; a
	setRaining (Z)Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; a
	setThundering (Z)Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; b
net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider ekh
	BLOCK_ENTITY a
	BLOCK_ENTITY_ID d
	BLOCK_ENTITY_PROVIDER e
	CODEC b
	GETTER_CODEC f
	INLINE_CODEC c
	getter g
	forContextEntity (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/providers/nbt/NbtProvider; a
	forEntity (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Getter; b
	get (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/nbt/Tag; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; a
net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Getter ekh$a
	get (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/nbt/Tag; a
	getId ()Ljava/lang/String; a
	getReferencedContextParams ()Ljava/util/Set; b
net/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType eki
	codec a
	codec ()Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/storage/loot/providers/nbt/NbtProvider ekj
	get (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/nbt/Tag; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; a
net/minecraft/world/level/storage/loot/providers/nbt/NbtProviders ekk
	CODEC a
	CONTEXT c
	STORAGE b
	TYPED_CODEC d
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; a
net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider ekl
	CODEC a
	id b
	get (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/nbt/Tag; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; a
	id ()Lnet/minecraft/resources/ResourceLocation; c
net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator ekn
	CODEC a
	n b
	p c
	binomial (IF)Lnet/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator; a
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getInt (Lnet/minecraft/world/level/storage/loot/LootContext;)I a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; b
	n ()Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider; c
	p ()Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider; d
net/minecraft/world/level/storage/loot/providers/number/ConstantValue eko
	CODEC a
	INLINE_CODEC b
	value c
	exactly (F)Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue; a
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; b
	value ()F c
net/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType ekp
	codec a
	codec ()Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/storage/loot/providers/number/NumberProvider ekq
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getInt (Lnet/minecraft/world/level/storage/loot/LootContext;)I a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; b
net/minecraft/world/level/storage/loot/providers/number/NumberProviders ekr
	BINOMIAL d
	CODEC a
	CONSTANT b
	SCORE e
	TYPED_CODEC f
	UNIFORM c
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; a
net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue eks
	CODEC a
	scale d
	score c
	target b
	fromScoreboard (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue; a
	fromScoreboard (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Ljava/lang/String;F)Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue; a
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; b
	scale ()F e
	score ()Ljava/lang/String; d
	target ()Lnet/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider; c
net/minecraft/world/level/storage/loot/providers/number/UniformGenerator ekt
	CODEC a
	max c
	min b
	between (FF)Lnet/minecraft/world/level/storage/loot/providers/number/UniformGenerator; a
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getInt (Lnet/minecraft/world/level/storage/loot/LootContext;)I a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; b
	max ()Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider; d
	min ()Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider; c
net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider ekv
	CODEC a
	INLINE_CODEC b
	target c
	forTarget (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider; a
	getReferencedContextParams ()Ljava/util/Set; b
	getScoreHolder (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/scores/ScoreHolder; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; a
	target ()Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; c
net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider ekw
	CODEC a
	name b
	forName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider; a
	getReferencedContextParams ()Ljava/util/Set; b
	getScoreHolder (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/scores/ScoreHolder; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; a
	name ()Ljava/lang/String; c
net/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType ekx
	codec a
	codec ()Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider eky
	getReferencedContextParams ()Ljava/util/Set; b
	getScoreHolder (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/scores/ScoreHolder; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; a
net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProviders ekz
	CODEC a
	CONTEXT c
	FIXED b
	TYPED_CODEC d
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; a
net/minecraft/world/level/timers/FunctionCallback elc
	functionId a
	handle (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
net/minecraft/world/level/timers/FunctionCallback$Serializer elc$a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/FunctionCallback; a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/FunctionCallback;)V a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/FunctionTagCallback eld
	tagId a
	handle (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
net/minecraft/world/level/timers/FunctionTagCallback$Serializer eld$a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/FunctionTagCallback; a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/FunctionTagCallback;)V a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/TimerCallback ele
net/minecraft/world/level/timers/TimerCallback$Serializer ele$a
	cls b
	id a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	getCls ()Ljava/lang/Class; b
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/TimerCallbacks elf
	LOGGER b
	SERVER_CALLBACKS a
	classToSerializer d
	idToSerializer c
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; a
	getSerializer (Ljava/lang/Class;)Lnet/minecraft/world/level/timers/TimerCallback$Serializer; a
	register (Lnet/minecraft/world/level/timers/TimerCallback$Serializer;)Lnet/minecraft/world/level/timers/TimerCallbacks; a
	serialize (Lnet/minecraft/world/level/timers/TimerCallback;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/timers/TimerQueue elg
	CALLBACK_DATA_TAG b
	LOGGER a
	TIMER_NAME_TAG c
	TIMER_TRIGGER_TIME_TAG d
	callbacksRegistry e
	events h
	queue f
	sequentialId g
	createComparator ()Ljava/util/Comparator; c
	getEventsIds ()Ljava/util/Set; a
	loadEvent (Lnet/minecraft/nbt/CompoundTag;)V a
	remove (Ljava/lang/String;)I a
	schedule (Ljava/lang/String;JLnet/minecraft/world/level/timers/TimerCallback;)V a
	store ()Lnet/minecraft/nbt/ListTag; b
	storeEvent (Lnet/minecraft/world/level/timers/TimerQueue$Event;)Lnet/minecraft/nbt/CompoundTag; a
	tick (Ljava/lang/Object;J)V a
net/minecraft/world/level/timers/TimerQueue$Event elg$a
	callback d
	id c
	sequentialId b
	triggerTime a
net/minecraft/world/level/validation/ContentValidationException eli
	directory a
	entries b
	getMessage (Ljava/nio/file/Path;Ljava/util/List;)Ljava/lang/String; a
net/minecraft/world/level/validation/DirectoryValidator elj
	symlinkTargetAllowList a
	validateDirectory (Ljava/nio/file/Path;Z)Ljava/util/List; a
	validateKnownDirectory (Ljava/nio/file/Path;Ljava/util/List;)V b
	validateSymlink (Ljava/nio/file/Path;)Ljava/util/List; a
	validateSymlink (Ljava/nio/file/Path;Ljava/util/List;)V a
net/minecraft/world/level/validation/ForbiddenSymlinkInfo elk
	link a
	target b
	link ()Ljava/nio/file/Path; a
	target ()Ljava/nio/file/Path; b
net/minecraft/world/level/validation/PathAllowList ell
	COMMENT_PREFIX b
	LOGGER a
	compiledPaths d
	entries c
	getForFileSystem (Ljava/nio/file/FileSystem;)Ljava/nio/file/PathMatcher; a
	readPlain (Ljava/io/BufferedReader;)Lnet/minecraft/world/level/validation/PathAllowList; a
net/minecraft/world/level/validation/PathAllowList$ConfigEntry ell$a
	pattern b
	type a
	compile (Ljava/nio/file/FileSystem;)Ljava/nio/file/PathMatcher; a
	glob (Ljava/lang/String;)Lnet/minecraft/world/level/validation/PathAllowList$ConfigEntry; b
	parse (Ljava/lang/String;)Ljava/util/Optional; a
	pattern ()Ljava/lang/String; b
	prefix (Ljava/lang/String;)Lnet/minecraft/world/level/validation/PathAllowList$ConfigEntry; d
	regex (Ljava/lang/String;)Lnet/minecraft/world/level/validation/PathAllowList$ConfigEntry; c
	type ()Lnet/minecraft/world/level/validation/PathAllowList$EntryType; a
net/minecraft/world/level/validation/PathAllowList$EntryType ell$b
	FILESYSTEM a
	PREFIX b
net/minecraft/world/phys/AABB elo
	EPSILON g
	maxX d
	maxY e
	maxZ f
	minX a
	minY b
	minZ c
	clip (Ljava/lang/Iterable;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	clip (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Ljava/util/Optional; b
	clipPoint ([DLnet/minecraft/core/Direction;DDDDDDDDLnet/minecraft/core/Direction;DDD)Lnet/minecraft/core/Direction; a
	contains (DDD)Z e
	contains (Lnet/minecraft/world/phys/Vec3;)Z d
	contract (DDD)Lnet/minecraft/world/phys/AABB; a
	deflate (D)Lnet/minecraft/world/phys/AABB; h
	deflate (DDD)Lnet/minecraft/world/phys/AABB; f
	distanceToSqr (Lnet/minecraft/world/phys/Vec3;)D e
	encapsulatingFullBlocks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; a
	expandTowards (DDD)Lnet/minecraft/world/phys/AABB; b
	expandTowards (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; b
	getCenter ()Lnet/minecraft/world/phys/Vec3; f
	getDirection (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/phys/Vec3;[DLnet/minecraft/core/Direction;DDD)Lnet/minecraft/core/Direction; a
	getSize ()D a
	getXsize ()D b
	getYsize ()D c
	getZsize ()D d
	hasNaN ()Z e
	inflate (D)Lnet/minecraft/world/phys/AABB; g
	inflate (DDD)Lnet/minecraft/world/phys/AABB; c
	intersect (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/AABB; a
	intersects (DDDDDD)Z a
	intersects (Lnet/minecraft/world/phys/AABB;)Z c
	intersects (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	max (Lnet/minecraft/core/Direction$Axis;)D b
	min (Lnet/minecraft/core/Direction$Axis;)D a
	minmax (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/AABB; b
	move (DDD)Lnet/minecraft/world/phys/AABB; d
	move (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; a
	move (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; c
	of (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/phys/AABB; a
	ofSize (Lnet/minecraft/world/phys/Vec3;DDD)Lnet/minecraft/world/phys/AABB; a
	setMaxX (D)Lnet/minecraft/world/phys/AABB; d
	setMaxY (D)Lnet/minecraft/world/phys/AABB; e
	setMaxZ (D)Lnet/minecraft/world/phys/AABB; f
	setMinX (D)Lnet/minecraft/world/phys/AABB; a
	setMinY (D)Lnet/minecraft/world/phys/AABB; b
	setMinZ (D)Lnet/minecraft/world/phys/AABB; c
	unitCubeFromLowerCorner (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/phys/BlockHitResult elp
	blockPos c
	direction b
	inside e
	miss d
	getBlockPos ()Lnet/minecraft/core/BlockPos; a
	getDirection ()Lnet/minecraft/core/Direction; b
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
	isInside ()Z d
	miss (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	withDirection (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/BlockHitResult; a
	withPosition (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
net/minecraft/world/phys/EntityHitResult elq
	entity b
	getEntity ()Lnet/minecraft/world/entity/Entity; a
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
net/minecraft/world/phys/HitResult elr
	location a
	distanceTo (Lnet/minecraft/world/entity/Entity;)D a
	getLocation ()Lnet/minecraft/world/phys/Vec3; e
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
net/minecraft/world/phys/HitResult$Type elr$a
	$VALUES d
	BLOCK b
	ENTITY c
	MISS a
	$values ()[Lnet/minecraft/world/phys/HitResult$Type; a
net/minecraft/world/phys/Vec2 els
	MAX g
	MIN h
	NEG_UNIT_X d
	NEG_UNIT_Y f
	ONE b
	UNIT_X c
	UNIT_Y e
	ZERO a
	x i
	y j
	add (F)Lnet/minecraft/world/phys/Vec2; b
	add (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/world/phys/Vec2; b
	distanceToSqr (Lnet/minecraft/world/phys/Vec2;)F d
	dot (Lnet/minecraft/world/phys/Vec2;)F a
	equals (Lnet/minecraft/world/phys/Vec2;)Z c
	length ()F b
	lengthSquared ()F c
	negated ()Lnet/minecraft/world/phys/Vec2; d
	normalized ()Lnet/minecraft/world/phys/Vec2; a
	scale (F)Lnet/minecraft/world/phys/Vec2; a
net/minecraft/world/phys/Vec3 elt
	CODEC a
	ZERO b
	x c
	y d
	z e
	add (DDD)Lnet/minecraft/world/phys/Vec3; b
	add (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; e
	align (Ljava/util/EnumSet;)Lnet/minecraft/world/phys/Vec3; a
	atBottomCenterOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; c
	atCenterOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; b
	atLowerCornerOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; a
	atLowerCornerWithOffset (Lnet/minecraft/core/Vec3i;DDD)Lnet/minecraft/world/phys/Vec3; a
	closerThan (Lnet/minecraft/core/Position;D)Z a
	closerThan (Lnet/minecraft/world/phys/Vec3;DD)Z a
	cross (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; c
	directionFromRotation (FF)Lnet/minecraft/world/phys/Vec3; a
	directionFromRotation (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/world/phys/Vec3; a
	distanceTo (Lnet/minecraft/world/phys/Vec3;)D f
	distanceToSqr (DDD)D c
	distanceToSqr (Lnet/minecraft/world/phys/Vec3;)D g
	dot (Lnet/minecraft/world/phys/Vec3;)D b
	fromRGB24 (I)Lnet/minecraft/world/phys/Vec3; a
	get (Lnet/minecraft/core/Direction$Axis;)D a
	horizontalDistance ()D h
	horizontalDistanceSqr ()D i
	length ()D f
	lengthSqr ()D g
	lerp (Lnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
	multiply (DDD)Lnet/minecraft/world/phys/Vec3; d
	multiply (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; h
	normalize ()Lnet/minecraft/world/phys/Vec3; d
	offsetRandom (Lnet/minecraft/util/RandomSource;F)Lnet/minecraft/world/phys/Vec3; a
	relative (Lnet/minecraft/core/Direction;D)Lnet/minecraft/world/phys/Vec3; a
	reverse ()Lnet/minecraft/world/phys/Vec3; e
	scale (D)Lnet/minecraft/world/phys/Vec3; a
	subtract (DDD)Lnet/minecraft/world/phys/Vec3; a
	subtract (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; d
	toVector3f ()Lorg/joml/Vector3f; j
	upFromBottomCenterOf (Lnet/minecraft/core/Vec3i;D)Lnet/minecraft/world/phys/Vec3; a
	vectorTo (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	with (Lnet/minecraft/core/Direction$Axis;D)Lnet/minecraft/world/phys/Vec3; a
	x ()D a
	xRot (F)Lnet/minecraft/world/phys/Vec3; a
	y ()D b
	yRot (F)Lnet/minecraft/world/phys/Vec3; b
	z ()D c
	zRot (F)Lnet/minecraft/world/phys/Vec3; c
net/minecraft/world/phys/shapes/ArrayVoxelShape elv
	xs b
	ys c
	zs d
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape elw
	storage d
	xMax h
	xMin e
	yMax i
	yMin f
	zMax j
	zMin g
	clearZStrip (IIII)V b
	fill (III)V c
	fillUpdateBounds (IIIZ)V a
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	forAllBoxes (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Z)V a
	getIndex (III)I a
	isEmpty ()Z a
	isFull (III)Z b
	isXZRectangleFull (IIIII)Z a
	isZStripFull (IIII)Z a
	join (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape; a
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
	withFilledBounds (IIIIIIIII)Lnet/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape; a
net/minecraft/world/phys/shapes/BooleanOp elx
	AND i
	CAUSED_BY n
	CAUSES l
	FALSE a
	FIRST m
	NOT_AND h
	NOT_FIRST d
	NOT_OR b
	NOT_SAME g
	NOT_SECOND f
	ONLY_FIRST e
	ONLY_SECOND c
	OR o
	SAME j
	SECOND k
	TRUE p
net/minecraft/world/phys/shapes/CollisionContext ely
	canStandOnFluid (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)Z a
	empty ()Lnet/minecraft/world/phys/shapes/CollisionContext; a
	isAbove (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/BlockPos;Z)Z a
	isDescending ()Z b
	isHoldingItem (Lnet/minecraft/world/item/Item;)Z a
	of (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/shapes/CollisionContext; a
net/minecraft/world/phys/shapes/CubePointRange elz
	parts a
net/minecraft/world/phys/shapes/CubeVoxelShape ema
	findIndex (Lnet/minecraft/core/Direction$Axis;D)I a
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/DiscreteCubeMerger emb
	firstDiv b
	result a
	secondDiv c
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/DiscreteVoxelShape emc
	AXIS_VALUES d
	xSize a
	ySize b
	zSize c
	fill (III)V c
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	firstFull (Lnet/minecraft/core/Direction$Axis;II)I a
	forAllAxisEdges (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Lnet/minecraft/core/AxisCycle;Z)V a
	forAllAxisFaces (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer;Lnet/minecraft/core/AxisCycle;)V a
	forAllBoxes (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Z)V b
	forAllEdges (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Z)V a
	forAllFaces (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer;)V a
	getSize (Lnet/minecraft/core/Direction$Axis;)I c
	getXSize ()I b
	getYSize ()I c
	getZSize ()I d
	isEmpty ()Z a
	isFull (III)Z b
	isFull (Lnet/minecraft/core/AxisCycle;III)Z b
	isFullWide (III)Z d
	isFullWide (Lnet/minecraft/core/AxisCycle;III)Z a
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
	lastFull (Lnet/minecraft/core/Direction$Axis;II)I b
net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer emc$a
net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer emc$b
net/minecraft/world/phys/shapes/EntityCollisionContext emd
	EMPTY a
	canStandOnFluid e
	descending b
	entity f
	entityBottom c
	heldItem d
	canStandOnFluid (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)Z a
	getEntity ()Lnet/minecraft/world/entity/Entity; c
	isAbove (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/BlockPos;Z)Z a
	isDescending ()Z b
	isHoldingItem (Lnet/minecraft/world/item/Item;)Z a
net/minecraft/world/phys/shapes/IdenticalMerger eme
	coords a
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/IndexMerger emf
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/IndexMerger$IndexConsumer emf$a
net/minecraft/world/phys/shapes/IndirectMerger emg
	EMPTY a
	firstIndices c
	result b
	resultLength e
	secondIndices d
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/NonOverlappingMerger emh
	lower a
	swap c
	upper b
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	forNonSwappedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z b
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/OffsetDoubleList emi
	delegate a
	offset b
net/minecraft/world/phys/shapes/Shapes emj
	BIG_EPSILON b
	BLOCK d
	EMPTY e
	EPSILON a
	INFINITY c
	block ()Lnet/minecraft/world/phys/shapes/VoxelShape; b
	blockOccudes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z a
	box (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	collide (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/AABB;Ljava/lang/Iterable;D)D a
	create (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	create (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	createIndexMerger (ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Lnet/minecraft/world/phys/shapes/IndexMerger; a
	empty ()Lnet/minecraft/world/phys/shapes/VoxelShape; a
	faceShapeOccludes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z b
	findBits (DD)I a
	getFaceShape (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	join (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	joinIsNotEmpty (Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Z a
	joinIsNotEmpty (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Z c
	joinUnoptimized (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	lcm (II)J a
	mergedFaceOccludes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z b
	or (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	or (Lnet/minecraft/world/phys/shapes/VoxelShape;[Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer emj$a
net/minecraft/world/phys/shapes/SliceShape emk
	SLICE_COORDS d
	axis c
	delegate b
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
	makeSlice (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape; a
net/minecraft/world/phys/shapes/SubShape eml
	endX h
	endY i
	endZ j
	parent d
	startX e
	startY f
	startZ g
	clampToShape (Lnet/minecraft/core/Direction$Axis;I)I a
	fill (III)V c
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	isFull (III)Z b
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
net/minecraft/world/phys/shapes/VoxelShape emm
	faces b
	shape a
	bounds ()Lnet/minecraft/world/phys/AABB; a
	calculateFace (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	clip (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	closestPointTo (Lnet/minecraft/world/phys/Vec3;)Ljava/util/Optional; a
	collide (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/AABB;D)D a
	collideX (Lnet/minecraft/core/AxisCycle;Lnet/minecraft/world/phys/AABB;D)D a
	findIndex (Lnet/minecraft/core/Direction$Axis;D)I a
	forAllBoxes (Lnet/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer;)V b
	forAllEdges (Lnet/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer;)V a
	get (Lnet/minecraft/core/Direction$Axis;I)D a
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
	getFaceShape (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isEmpty ()Z c
	max (Lnet/minecraft/core/Direction$Axis;)D c
	max (Lnet/minecraft/core/Direction$Axis;DD)D b
	min (Lnet/minecraft/core/Direction$Axis;)D b
	min (Lnet/minecraft/core/Direction$Axis;DD)D a
	move (DDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	optimize ()Lnet/minecraft/world/phys/shapes/VoxelShape; d
	singleEncompassing ()Lnet/minecraft/world/phys/shapes/VoxelShape; b
	toAabbs ()Ljava/util/List; e
net/minecraft/world/scores/DisplaySlot emo
	$VALUES x
	BELOW_NAME c
	BY_ID u
	CODEC t
	LIST a
	SIDEBAR b
	TEAM_AQUA o
	TEAM_BLACK d
	TEAM_BLUE m
	TEAM_DARK_AQUA g
	TEAM_DARK_BLUE e
	TEAM_DARK_GRAY l
	TEAM_DARK_GREEN f
	TEAM_DARK_PURPLE i
	TEAM_DARK_RED h
	TEAM_GOLD j
	TEAM_GRAY k
	TEAM_GREEN n
	TEAM_LIGHT_PURPLE q
	TEAM_RED p
	TEAM_WHITE s
	TEAM_YELLOW r
	id v
	name w
	$values ()[Lnet/minecraft/world/scores/DisplaySlot; b
	getSerializedName ()Ljava/lang/String; c
	id ()I a
	teamColorToSlot (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/world/scores/DisplaySlot; a
net/minecraft/world/scores/Objective emp
	criteria c
	displayAutoUpdate g
	displayName d
	formattedDisplayName e
	name b
	numberFormat h
	renderType f
	scoreboard a
	createFormattedDisplayName ()Lnet/minecraft/network/chat/Component; i
	displayAutoUpdate ()Z e
	getCriteria ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getFormattedDisplayName ()Lnet/minecraft/network/chat/Component; g
	getName ()Ljava/lang/String; b
	getRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; h
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; a
	numberFormat ()Lnet/minecraft/network/chat/numbers/NumberFormat; f
	numberFormatOrDefault (Lnet/minecraft/network/chat/numbers/NumberFormat;)Lnet/minecraft/network/chat/numbers/NumberFormat; a
	setDisplayAutoUpdate (Z)V a
	setDisplayName (Lnet/minecraft/network/chat/Component;)V a
	setNumberFormat (Lnet/minecraft/network/chat/numbers/NumberFormat;)V b
	setRenderType (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)V a
net/minecraft/world/scores/PlayerScoreEntry emq
	display c
	numberFormatOverride d
	owner a
	value b
	display ()Lnet/minecraft/network/chat/Component; e
	formatValue (Lnet/minecraft/network/chat/numbers/NumberFormat;)Lnet/minecraft/network/chat/MutableComponent; a
	isHidden ()Z a
	numberFormatOverride ()Lnet/minecraft/network/chat/numbers/NumberFormat; f
	owner ()Ljava/lang/String; c
	ownerName ()Lnet/minecraft/network/chat/Component; b
	value ()I d
net/minecraft/world/scores/PlayerScores emr
	scores a
	get (Lnet/minecraft/world/scores/Objective;)Lnet/minecraft/world/scores/Score; a
	getOrCreate (Lnet/minecraft/world/scores/Objective;Ljava/util/function/Consumer;)Lnet/minecraft/world/scores/Score; a
	hasScores ()Z a
	listRawScores ()Ljava/util/Map; c
	listScores ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; b
	remove (Lnet/minecraft/world/scores/Objective;)Z b
	setScore (Lnet/minecraft/world/scores/Objective;Lnet/minecraft/world/scores/Score;)V a
net/minecraft/world/scores/PlayerTeam ems
	BIT_FRIENDLY_FIRE a
	BIT_SEE_INVISIBLES b
	allowFriendlyFire i
	collisionRule n
	color m
	deathMessageVisibility l
	displayName f
	displayNameStyle o
	name d
	nameTagVisibility k
	playerPrefix g
	playerSuffix h
	players e
	scoreboard c
	seeFriendlyInvisibles j
	canSeeFriendlyInvisibles ()Z i
	formatNameForTeam (Lnet/minecraft/world/scores/Team;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	getCollisionRule ()Lnet/minecraft/world/scores/Team$CollisionRule; l
	getColor ()Lnet/minecraft/ChatFormatting; n
	getDeathMessageVisibility ()Lnet/minecraft/world/scores/Team$Visibility; k
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getFormattedDisplayName ()Lnet/minecraft/network/chat/MutableComponent; d
	getFormattedName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; d
	getName ()Ljava/lang/String; b
	getNameTagVisibility ()Lnet/minecraft/world/scores/Team$Visibility; j
	getPlayerPrefix ()Lnet/minecraft/network/chat/Component; e
	getPlayerSuffix ()Lnet/minecraft/network/chat/Component; f
	getPlayers ()Ljava/util/Collection; g
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; a
	isAllowFriendlyFire ()Z h
	packOptions ()I m
	setAllowFriendlyFire (Z)V a
	setCollisionRule (Lnet/minecraft/world/scores/Team$CollisionRule;)V a
	setColor (Lnet/minecraft/ChatFormatting;)V a
	setDeathMessageVisibility (Lnet/minecraft/world/scores/Team$Visibility;)V b
	setDisplayName (Lnet/minecraft/network/chat/Component;)V a
	setNameTagVisibility (Lnet/minecraft/world/scores/Team$Visibility;)V a
	setPlayerPrefix (Lnet/minecraft/network/chat/Component;)V b
	setPlayerSuffix (Lnet/minecraft/network/chat/Component;)V c
	setSeeFriendlyInvisibles (Z)V b
	unpackOptions (I)V a
net/minecraft/world/scores/ReadOnlyScoreInfo emt
	formatValue (Lnet/minecraft/network/chat/numbers/NumberFormat;)Lnet/minecraft/network/chat/MutableComponent; a
	isLocked ()Z b
	numberFormat ()Lnet/minecraft/network/chat/numbers/NumberFormat; c
	safeFormatValue (Lnet/minecraft/world/scores/ReadOnlyScoreInfo;Lnet/minecraft/network/chat/numbers/NumberFormat;)Lnet/minecraft/network/chat/MutableComponent; a
	value ()I a
net/minecraft/world/scores/Score emu
	TAG_DISPLAY c
	TAG_FORMAT d
	TAG_LOCKED b
	TAG_SCORE a
	display g
	locked f
	numberFormat h
	value e
	display ()Lnet/minecraft/network/chat/Component; d
	display (Lnet/minecraft/network/chat/Component;)V a
	isLocked ()Z b
	numberFormat ()Lnet/minecraft/network/chat/numbers/NumberFormat; c
	numberFormat (Lnet/minecraft/network/chat/numbers/NumberFormat;)V b
	read (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/scores/Score; a
	setLocked (Z)V a
	value ()I a
	value (I)V a
	write ()Lnet/minecraft/nbt/CompoundTag; e
net/minecraft/world/scores/ScoreAccess emv
	add (I)I b
	display ()Lnet/minecraft/network/chat/Component; g
	display (Lnet/minecraft/network/chat/Component;)V a
	get ()I a
	increment ()I b
	lock ()V f
	locked ()Z d
	numberFormatOverride (Lnet/minecraft/network/chat/numbers/NumberFormat;)V a
	reset ()V c
	set (I)V a
	unlock ()V e
net/minecraft/world/scores/ScoreHolder emw
	WILDCARD cv
	WILDCARD_NAME a_
	forNameOnly (Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreHolder; d
	fromGameProfile (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/world/scores/ScoreHolder; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; Q_
	getFeedbackDisplayName ()Lnet/minecraft/network/chat/Component; gU
	getScoreboardName ()Ljava/lang/String; cy
net/minecraft/world/scores/Scoreboard emx
	HIDDEN_SCORE_PREFIX a
	LOGGER b
	displayObjectives f
	objectivesByCriteria d
	objectivesByName c
	playerScores e
	teamsByName g
	teamsByPlayer h
	addObjective (Ljava/lang/String;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;ZLnet/minecraft/network/chat/numbers/NumberFormat;)Lnet/minecraft/world/scores/Objective; a
	addPlayerTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; c
	addPlayerToTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)Z a
	entityRemoved (Lnet/minecraft/world/entity/Entity;)V a
	forAllObjectives (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Lnet/minecraft/world/scores/ScoreHolder;Ljava/util/function/Consumer;)V a
	getDisplayObjective (Lnet/minecraft/world/scores/DisplaySlot;)Lnet/minecraft/world/scores/Objective; a
	getObjective (Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; a
	getObjectiveNames ()Ljava/util/Collection; d
	getObjectives ()Ljava/util/Collection; c
	getOrCreatePlayerInfo (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerScores; f
	getOrCreatePlayerScore (Lnet/minecraft/world/scores/ScoreHolder;Lnet/minecraft/world/scores/Objective;)Lnet/minecraft/world/scores/ScoreAccess; c
	getOrCreatePlayerScore (Lnet/minecraft/world/scores/ScoreHolder;Lnet/minecraft/world/scores/Objective;Z)Lnet/minecraft/world/scores/ScoreAccess; a
	getPlayerScoreInfo (Lnet/minecraft/world/scores/ScoreHolder;Lnet/minecraft/world/scores/Objective;)Lnet/minecraft/world/scores/ReadOnlyScoreInfo; d
	getPlayerTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; b
	getPlayerTeams ()Ljava/util/Collection; g
	getPlayersTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; e
	getTeamNames ()Ljava/util/Collection; f
	getTrackedPlayers ()Ljava/util/Collection; e
	listPlayerScores (Lnet/minecraft/world/scores/Objective;)Ljava/util/Collection; i
	listPlayerScores (Lnet/minecraft/world/scores/ScoreHolder;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; c
	loadPlayerScores (Lnet/minecraft/nbt/ListTag;)V a
	onObjectiveAdded (Lnet/minecraft/world/scores/Objective;)V a
	onObjectiveChanged (Lnet/minecraft/world/scores/Objective;)V b
	onObjectiveRemoved (Lnet/minecraft/world/scores/Objective;)V c
	onPlayerRemoved (Lnet/minecraft/world/scores/ScoreHolder;)V a
	onPlayerScoreRemoved (Lnet/minecraft/world/scores/ScoreHolder;Lnet/minecraft/world/scores/Objective;)V b
	onScoreChanged (Lnet/minecraft/world/scores/ScoreHolder;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/world/scores/Score;)V a
	onScoreLockChanged (Lnet/minecraft/world/scores/ScoreHolder;Lnet/minecraft/world/scores/Objective;)V a
	onTeamAdded (Lnet/minecraft/world/scores/PlayerTeam;)V a
	onTeamChanged (Lnet/minecraft/world/scores/PlayerTeam;)V b
	onTeamRemoved (Lnet/minecraft/world/scores/PlayerTeam;)V c
	removeObjective (Lnet/minecraft/world/scores/Objective;)V j
	removePlayerFromTeam (Ljava/lang/String;)Z d
	removePlayerFromTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)V b
	removePlayerTeam (Lnet/minecraft/world/scores/PlayerTeam;)V d
	resetAllPlayerScores (Lnet/minecraft/world/scores/ScoreHolder;)V b
	resetSinglePlayerScore (Lnet/minecraft/world/scores/ScoreHolder;Lnet/minecraft/world/scores/Objective;)V e
	savePlayerScores ()Lnet/minecraft/nbt/ListTag; h
	setDisplayObjective (Lnet/minecraft/world/scores/DisplaySlot;Lnet/minecraft/world/scores/Objective;)V a
net/minecraft/world/scores/ScoreboardSaveData emy
	FILE_ID a
	LOGGER b
	scoreboard c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/scores/ScoreboardSaveData; b
	loadDisplaySlots (Lnet/minecraft/nbt/CompoundTag;)V c
	loadObjectives (Lnet/minecraft/nbt/ListTag;)V b
	loadTeamPlayers (Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/nbt/ListTag;)V a
	loadTeams (Lnet/minecraft/nbt/ListTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	saveDisplaySlots (Lnet/minecraft/nbt/CompoundTag;)V d
	saveObjectives ()Lnet/minecraft/nbt/ListTag; b
	saveTeams ()Lnet/minecraft/nbt/ListTag; a
net/minecraft/world/scores/Team emz
	canSeeFriendlyInvisibles ()Z i
	getCollisionRule ()Lnet/minecraft/world/scores/Team$CollisionRule; l
	getColor ()Lnet/minecraft/ChatFormatting; n
	getDeathMessageVisibility ()Lnet/minecraft/world/scores/Team$Visibility; k
	getFormattedName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; d
	getName ()Ljava/lang/String; b
	getNameTagVisibility ()Lnet/minecraft/world/scores/Team$Visibility; j
	getPlayers ()Ljava/util/Collection; g
	isAlliedTo (Lnet/minecraft/world/scores/Team;)Z a
	isAllowFriendlyFire ()Z h
net/minecraft/world/scores/Team$CollisionRule emz$a
	$VALUES h
	ALWAYS a
	BY_NAME g
	NEVER b
	PUSH_OTHER_TEAMS c
	PUSH_OWN_TEAM d
	id f
	name e
	$values ()[Lnet/minecraft/world/scores/Team$CollisionRule; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/scores/Team$CollisionRule; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/world/scores/Team$Visibility emz$b
	$VALUES h
	ALWAYS a
	BY_NAME g
	HIDE_FOR_OTHER_TEAMS c
	HIDE_FOR_OWN_TEAM d
	NEVER b
	id f
	name e
	$values ()[Lnet/minecraft/world/scores/Team$Visibility; c
	byName (Ljava/lang/String;)Lnet/minecraft/world/scores/Team$Visibility; a
	getAllNames ()[Ljava/lang/String; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
net/minecraft/world/scores/criteria/ObjectiveCriteria ena
	AIR h
	ARMOR i
	CRITERIA_CACHE o
	CUSTOM_CRITERIA n
	DEATH_COUNT c
	DUMMY a
	EXPERIENCE j
	FOOD g
	HEALTH f
	KILLED_BY_TEAM m
	KILL_COUNT_ALL e
	KILL_COUNT_PLAYERS d
	LEVEL k
	TEAM_KILL l
	TRIGGER b
	name p
	readOnly q
	renderType r
	byName (Ljava/lang/String;)Ljava/util/Optional; a
	getCustomCriteriaNames ()Ljava/util/Set; c
	getDefaultRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; f
	getName ()Ljava/lang/String; d
	getStat (Lnet/minecraft/stats/StatType;Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	isReadOnly ()Z e
	registerCustom (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; b
	registerCustom (Ljava/lang/String;ZLnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; a
net/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType ena$a
	$VALUES e
	CODEC c
	HEARTS b
	INTEGER a
	id d
	$values ()[Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; b
	byId (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; a
	getId ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/ticks/BlackholeTickAccess end
	CONTAINER_BLACKHOLE a
	LEVEL_BLACKHOLE b
	emptyContainer ()Lnet/minecraft/world/ticks/TickContainerAccess; a
	emptyLevelList ()Lnet/minecraft/world/ticks/LevelTickAccess; b
net/minecraft/world/ticks/ContainerSingleItem ene
	clearContent ()V a
	getContainerBlockEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; y
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getTheItem ()Lnet/minecraft/world/item/ItemStack; x
	isEmpty ()Z ai_
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	removeTheItem ()Lnet/minecraft/world/item/ItemStack; h
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setTheItem (Lnet/minecraft/world/item/ItemStack;)V b
	splitTheItem (I)Lnet/minecraft/world/item/ItemStack; c
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/ticks/LevelChunkTicks enf
	onTickAdded d
	pendingTicks b
	tickQueue a
	ticksPerPosition c
	count ()I a
	getAll ()Ljava/util/stream/Stream; d
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	load (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Function;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/ticks/LevelChunkTicks; a
	peek ()Lnet/minecraft/world/ticks/ScheduledTick; b
	poll ()Lnet/minecraft/world/ticks/ScheduledTick; c
	removeIf (Ljava/util/function/Predicate;)V a
	save (JLjava/util/function/Function;)Lnet/minecraft/nbt/ListTag; a
	save (JLjava/util/function/Function;)Lnet/minecraft/nbt/Tag; b
	schedule (Lnet/minecraft/world/ticks/ScheduledTick;)V a
	scheduleUnchecked (Lnet/minecraft/world/ticks/ScheduledTick;)V b
	setOnTickAdded (Ljava/util/function/BiConsumer;)V a
	unpack (J)V a
net/minecraft/world/ticks/LevelTickAccess eng
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/ticks/LevelTicks enh
	CONTAINER_DRAIN_ORDER a
	allContainers d
	alreadyRunThisTick h
	chunkScheduleUpdater j
	containersToTick f
	nextTickForContainer e
	profiler c
	tickCheck b
	toRunThisTick g
	toRunThisTickSet i
	addContainer (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/ticks/LevelChunkTicks;)V a
	calculateTickSetIfNeeded ()V d
	canScheduleMoreTicks (I)Z a
	cleanupAfterTick ()V c
	clearArea (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	collectTicks (JILnet/minecraft/util/profiling/ProfilerFiller;)V a
	copyArea (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/Vec3i;)V a
	copyAreaFrom (Lnet/minecraft/world/ticks/LevelTicks;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/Vec3i;)V a
	count ()I a
	drainContainers (JI)V a
	drainFromCurrentContainer (Ljava/util/Queue;Lnet/minecraft/world/ticks/LevelChunkTicks;JI)V a
	forContainersInArea (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/ticks/LevelTicks$PosAndContainerConsumer;)V a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	removeContainer (Lnet/minecraft/world/level/ChunkPos;)V a
	rescheduleLeftoverContainers ()V b
	runCollectedTicks (Ljava/util/function/BiConsumer;)V a
	schedule (Lnet/minecraft/world/ticks/ScheduledTick;)V a
	scheduleForThisTick (Lnet/minecraft/world/ticks/ScheduledTick;)V c
	sortContainersToTick (J)V a
	tick (JILjava/util/function/BiConsumer;)V a
	updateContainerScheduling (Lnet/minecraft/world/ticks/ScheduledTick;)V b
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/ticks/LevelTicks$PosAndContainerConsumer enh$a
net/minecraft/world/ticks/ProtoChunkTicks eni
	ticks a
	ticksPerPosition b
	count ()I a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	load (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Function;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/ticks/ProtoChunkTicks; a
	save (JLjava/util/function/Function;)Lnet/minecraft/nbt/Tag; b
	schedule (Lnet/minecraft/world/ticks/SavedTick;)V a
	schedule (Lnet/minecraft/world/ticks/ScheduledTick;)V a
	scheduledTicks ()Ljava/util/List; b
net/minecraft/world/ticks/SavedTick enj
	TAG_DELAY j
	TAG_ID f
	TAG_PRIORITY k
	TAG_X g
	TAG_Y h
	TAG_Z i
	UNIQUE_TICK_HASH a
	delay d
	pos c
	priority e
	type b
	delay ()I c
	loadTick (Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Function;)Ljava/util/Optional; a
	loadTickList (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Function;Lnet/minecraft/world/level/ChunkPos;Ljava/util/function/Consumer;)V a
	pos ()Lnet/minecraft/core/BlockPos; b
	priority ()Lnet/minecraft/world/ticks/TickPriority; d
	probe (Ljava/lang/Object;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/ticks/SavedTick; a
	save (Ljava/util/function/Function;)Lnet/minecraft/nbt/CompoundTag; a
	saveTick (Ljava/lang/String;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/ticks/TickPriority;)Lnet/minecraft/nbt/CompoundTag; a
	saveTick (Lnet/minecraft/world/ticks/ScheduledTick;Ljava/util/function/Function;J)Lnet/minecraft/nbt/CompoundTag; a
	type ()Ljava/lang/Object; a
	unpack (JJ)Lnet/minecraft/world/ticks/ScheduledTick; a
net/minecraft/world/ticks/ScheduledTick enk
	DRAIN_ORDER a
	INTRA_TICK_DRAIN_ORDER b
	UNIQUE_TICK_HASH c
	pos e
	priority g
	subTickOrder h
	triggerTick f
	type d
	pos ()Lnet/minecraft/core/BlockPos; b
	priority ()Lnet/minecraft/world/ticks/TickPriority; d
	probe (Ljava/lang/Object;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/ticks/ScheduledTick; a
	subTickOrder ()J e
	triggerTick ()J c
	type ()Ljava/lang/Object; a
net/minecraft/world/ticks/SerializableTickContainer enl
	save (JLjava/util/function/Function;)Lnet/minecraft/nbt/Tag; b
net/minecraft/world/ticks/TickAccess enm
	count ()I a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	schedule (Lnet/minecraft/world/ticks/ScheduledTick;)V a
net/minecraft/world/ticks/TickContainerAccess enn
net/minecraft/world/ticks/TickPriority eno
	$VALUES i
	EXTREMELY_HIGH a
	EXTREMELY_LOW g
	HIGH c
	LOW e
	NORMAL d
	VERY_HIGH b
	VERY_LOW f
	value h
	$values ()[Lnet/minecraft/world/ticks/TickPriority; b
	byValue (I)Lnet/minecraft/world/ticks/TickPriority; a
	getValue ()I a
net/minecraft/world/ticks/WorldGenTickAccess enp
	containerGetter a
	count ()I a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	schedule (Lnet/minecraft/world/ticks/ScheduledTick;)V a
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/client/ClientBrandRetriever net/minecraft/client/ClientBrandRetriever
	VANILLA_NAME a
net/minecraft/client/main/Main net/minecraft/client/main/Main
	LOGGER a
	emptyStringToEmptyOptional (Ljava/lang/String;)Ljava/util/Optional; b
	ofNullable (Ljava/lang/Integer;)Ljava/util/OptionalInt; a
	parseArgument (Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;)Ljava/lang/Object; a
	stringHasValue (Ljava/lang/String;)Z c
	unescapeJavaArgument (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/server/Main net/minecraft/server/Main
	LOGGER a
	forceUpgrade (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lnet/minecraft/core/Registry;)V a
	loadOrCreateConfig (Lnet/minecraft/server/dedicated/DedicatedServerProperties;Lcom/mojang/serialization/Dynamic;ZLnet/minecraft/server/packs/repository/PackRepository;)Lnet/minecraft/server/WorldLoader$InitConfig; a
	writePidFile (Ljava/nio/file/Path;)V a
net/minecraft/server/MinecraftServer net/minecraft/server/MinecraftServer
	ABSOLUTE_MAX_WORLD_SIZE d
	ANONYMOUS_PLAYER_PROFILE f
	AUTOSAVE_INTERVAL w
	AVERAGE_TICK_TIME_SMOOTHING m
	DEMO_SETTINGS e
	LOGGER l
	MAX_STATUS_PLAYER_SAMPLE u
	MAX_TICK_LATENCY y
	MIMINUM_AUTOSAVE_TICKS x
	OVERLOADED_THRESHOLD_NANOS o
	OVERLOADED_TICKS_THRESHOLD p
	OVERLOADED_TICKS_WARNING_INTERVAL r
	OVERLOADED_WARNING_INTERVAL_NANOS q
	PREPARE_LEVELS_DEFAULT_DELAY_NANOS t
	START_CHUNK_RADIUS c
	START_TICKING_CHUNK_COUNT v
	STATUS_EXPIRE_TIME_NANOS s
	TICK_STATS_SPAN n
	VANILLA_BRAND b
	aggregatedTickTimesNanos ad
	allowFlight Z
	commandStorage aq
	connection H
	customBossEvents ar
	debugCommandProfiler F
	debugCommandProfilerDelayStart G
	delayedTasksMaxNextTickTimeNanos am
	enforceWhitelist at
	executor av
	fixerUpper M
	functionManager as
	isDemo ag
	isReady ah
	isSaving aA
	keyPair ae
	lastOverloadWarningNanos ai
	lastServerStatus aj
	levels Q
	localIp N
	mayHaveDelayedTasks an
	metricsRecorder A
	motd aa
	nextTickTimeNanos al
	onMetricsRecordingFinished D
	onMetricsRecordingStopped C
	onlineMode W
	packRepository ao
	playerDataStorage h
	playerIdleTimeout ab
	playerList R
	port O
	preventProxyConnections X
	profiler B
	progressListenerFactory I
	proxy i
	pvp Y
	random L
	registries P
	resources ax
	running S
	scoreboard ap
	serverId aw
	serverThread ak
	services j
	singleplayerProfile af
	smoothedTickTimeMillis au
	status J
	statusIcon K
	stopped T
	storageSource g
	structureTemplateManager ay
	tickCount U
	tickRateManager az
	tickTimesNanos ac
	tickables z
	ticksUntilAutosave V
	willStartRecordingMetrics E
	worldData k
	acceptsFailure ()Z x_
	acceptsSuccess ()Z l_
	addTickable (Ljava/lang/Runnable;)V b
	areNpcsEnabled ()Z Z
	buildPlayerStatus ()Lnet/minecraft/network/protocol/status/ServerStatus$Players; bx
	buildServerStatus ()Lnet/minecraft/network/protocol/status/ServerStatus; bo
	cancelRecordingMetrics ()V aV
	computeNextAutosaveInterval ()I bn
	configurePackRepository (Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/world/level/DataPackConfig;ZLnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/world/level/WorldDataConfiguration; a
	constructOrExtractCrashReport (Ljava/lang/Throwable;)Lnet/minecraft/CrashReport; a
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; aF
	createGameModeForPlayer (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/level/ServerPlayerGameMode; b
	createLevels (Lnet/minecraft/server/level/progress/ChunkProgressListener;)V a
	createTextFilterForPlayer (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/network/TextFilter; a
	doRunTask (Ljava/lang/Runnable;)V d
	doRunTask (Lnet/minecraft/server/TickTask;)V b
	dumpClasspath (Ljava/nio/file/Path;)V e
	dumpGameRules (Ljava/nio/file/Path;)V d
	dumpMiscStats (Ljava/nio/file/Path;)V c
	dumpNativeModules (Ljava/nio/file/Path;)V g
	dumpServerProperties (Ljava/nio/file/Path;)V a
	dumpThreads (Ljava/nio/file/Path;)V f
	endMetricsRecordingTick ()V bA
	enforceSecureProfile ()Z ay
	executeIfPossible (Ljava/lang/Runnable;)V c
	fillServerSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; a
	fillSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; b
	finishRecordingMetrics ()V aU
	forceDifficulty ()V r
	forceSynchronousWrites ()Z aW
	forceTimeSynchronization ()V C
	getAbsoluteMaxWorldSize ()I au
	getAdvancements ()Lnet/minecraft/server/ServerAdvancementManager; aB
	getAllLevels ()Ljava/lang/Iterable; H
	getAverageTickTimeNanos ()J aP
	getChatDecorator ()Lnet/minecraft/network/chat/ChatDecorator; bi
	getCommandStorage ()Lnet/minecraft/world/level/storage/CommandStorage; aI
	getCommands ()Lnet/minecraft/commands/Commands; aE
	getCompressionThreshold ()I ax
	getConnection ()Lnet/minecraft/server/network/ServerConnectionListener; af
	getCurrentSmoothedTickTime ()F aN
	getCustomBossEvents ()Lnet/minecraft/server/bossevents/CustomBossEvents; aL
	getDefaultGameType ()Lnet/minecraft/world/level/GameType; v_
	getFile (Ljava/lang/String;)Ljava/io/File; c
	getFixerUpper ()Lcom/mojang/datafixers/DataFixer; aA
	getForcedGameType ()Lnet/minecraft/world/level/GameType; bb
	getFunctionCompilationLevel ()I j
	getFunctions ()Lnet/minecraft/server/ServerFunctionManager; aC
	getGameRules ()Lnet/minecraft/world/level/GameRules; aK
	getKeyPair ()Ljava/security/KeyPair; N
	getLevel (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/server/level/ServerLevel; a
	getLocalIp ()Ljava/lang/String; u
	getLootData ()Lnet/minecraft/world/level/storage/loot/LootDataManager; aJ
	getMaxChainedNeighborUpdates ()I bh
	getMaxPlayers ()I K
	getModdedStatus ()Lnet/minecraft/util/ModCheck; M
	getMotd ()Ljava/lang/String; ac
	getNextTickTime ()J az
	getOperatorUserPermissionLevel ()I i
	getPackRepository ()Lnet/minecraft/server/packs/repository/PackRepository; aD
	getPlayerCount ()I J
	getPlayerIdleTimeout ()I an
	getPlayerList ()Lnet/minecraft/server/players/PlayerList; ae
	getPlayerNames ()[Ljava/lang/String; L
	getPort ()I O
	getPreventProxyConnections ()Z X
	getProfileCache ()Lnet/minecraft/server/players/GameProfileCache; ar
	getProfileKeySignatureValidator ()Lnet/minecraft/util/SignatureValidator; ap
	getProfilePermissions (Lcom/mojang/authlib/GameProfile;)I c
	getProfileRepository ()Lcom/mojang/authlib/GameProfileRepository; aq
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; aR
	getProxy ()Ljava/net/Proxy; am
	getRateLimitPacketsPerSecond ()I m
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; aG
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; bc
	getRunningThread ()Ljava/lang/Thread; aw
	getScaledTrackingDistance (I)I b
	getScoreboard ()Lnet/minecraft/server/ServerScoreboard; aH
	getSelectedPacks (Lnet/minecraft/server/packs/repository/PackRepository;)Lnet/minecraft/world/level/DataPackConfig; a
	getServerDirectory ()Ljava/io/File; z
	getServerResourcePack ()Ljava/util/Optional; U
	getServerVersion ()Ljava/lang/String; I
	getSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; ao
	getSingleplayerProfile ()Lcom/mojang/authlib/GameProfile; P
	getSpawnProtectionRadius ()I aj
	getSpawnRadius (Lnet/minecraft/server/level/ServerLevel;)I a
	getStatus ()Lnet/minecraft/network/protocol/status/ServerStatus; as
	getStructureManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; aX
	getTickCount ()I ai
	getTickTimesNanos ()[J aQ
	getWorldData ()Lnet/minecraft/world/level/storage/WorldData; aY
	getWorldPath (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path; a
	getWorldScreenshotFile ()Ljava/util/Optional; y
	halt (Z)V a
	hasGui ()Z ah
	haveTime ()Z bk
	hidesOnlinePlayers ()Z al
	initServer ()Z e
	initializeKeyPair ()V R
	invalidateStatus ()V at
	isCommandBlockEnabled ()Z o
	isCurrentlySaving ()Z bd
	isDedicatedServer ()Z l
	isDemo ()Z T
	isEnforceWhitelist ()Z aM
	isEpollEnabled ()Z n
	isFlightAllowed ()Z ab
	isHardcore ()Z h
	isNetherEnabled ()Z D
	isPaused ()Z A
	isPublished ()Z p
	isPvpAllowed ()Z aa
	isReady ()Z ag
	isRecordingMetrics ()Z aS
	isResourcePackRequired ()Z V
	isRunning ()Z v
	isShutdown ()Z E
	isSingleplayer ()Z Q
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	isSpawningAnimals ()Z Y
	isSpawningMonsters ()Z S
	isStopped ()Z ad
	isTimeProfilerRunning ()Z be
	isUnderSpawnProtection (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	kickUnlistedPlayers (Lnet/minecraft/commands/CommandSourceStack;)V a
	levelKeys ()Ljava/util/Set; G
	loadLevel ()V u_
	loadStatusIcon ()Ljava/util/Optional; bm
	logChatMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType$Bound;Ljava/lang/String;)V a
	logIPs ()Z bj
	logTickTime (J)V a
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	onServerExit ()V g
	onTickRateChanged ()V B
	overworld ()Lnet/minecraft/server/level/ServerLevel; F
	pollTask ()Z x
	pollTaskInternal ()Z bl
	prepareLevels (Lnet/minecraft/server/level/progress/ChunkProgressListener;)V b
	publishServer (Lnet/minecraft/world/level/GameType;ZI)Z a
	readScoreboard (Lnet/minecraft/world/level/storage/DimensionDataStorage;)V a
	registries ()Lnet/minecraft/core/LayeredRegistryAccess; ba
	registryAccess ()Lnet/minecraft/core/RegistryAccess$Frozen; aZ
	reloadResources (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; a
	repliesToStatus ()Z ak
	runServer ()V w
	saveAllChunks (ZZZ)Z a
	saveDebugReport (Ljava/nio/file/Path;)V b
	saveEverything (ZZZ)Z b
	scheduleExecutables ()Z av
	sendDifficultyUpdate (Lnet/minecraft/server/level/ServerPlayer;)V c
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	setDefaultGameType (Lnet/minecraft/world/level/GameType;)V a
	setDemo (Z)V c
	setDifficulty (Lnet/minecraft/world/Difficulty;Z)V a
	setDifficultyLocked (Z)V b
	setEnforceWhitelist (Z)V h
	setFlightAllowed (Z)V g
	setId (Ljava/lang/String;)V b
	setInitialSpawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/storage/ServerLevelData;ZZ)V a
	setLocalIp (Ljava/lang/String;)V a_
	setMotd (Ljava/lang/String;)V d
	setPlayerIdleTimeout (I)V c
	setPlayerList (Lnet/minecraft/server/players/PlayerList;)V a
	setPort (I)V a
	setPreventProxyConnections (Z)V e
	setPvpAllowed (Z)V f
	setSingleplayerProfile (Lcom/mojang/authlib/GameProfile;)V b
	setUsesAuthentication (Z)V d
	setupDebugLevel (Lnet/minecraft/world/level/storage/WorldData;)V a
	shouldInformAdmins ()Z W_
	shouldRconBroadcast ()Z k
	shouldRun (Ljava/lang/Runnable;)Z e
	shouldRun (Lnet/minecraft/server/TickTask;)Z a
	spin (Ljava/util/function/Function;)Lnet/minecraft/server/MinecraftServer; a
	startMetricsRecordingTick ()V bz
	startRecordingMetrics (Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V a
	startTimeProfiler ()V bf
	stopRecordingMetrics ()V aT
	stopServer ()V t
	stopTimeProfiler ()Lnet/minecraft/util/profiling/ProfileResults; bg
	synchronizeTime (Lnet/minecraft/server/level/ServerLevel;)V b
	tickChildren (Ljava/util/function/BooleanSupplier;)V b
	tickRateManager ()Lnet/minecraft/server/ServerTickRateManager; aO
	tickServer (Ljava/util/function/BooleanSupplier;)V a
	updateMobSpawningFlags ()V by
	usesAuthentication ()Z W
	waitUntilNextTick ()V w_
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; f
	wrapRunnable (Ljava/lang/Runnable;)Lnet/minecraft/server/TickTask; a
net/minecraft/data/Main net/minecraft/data/Main
	bindRegistries (Ljava/util/function/BiFunction;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/data/DataProvider$Factory; a
	createStandardGenerator (Ljava/nio/file/Path;Ljava/util/Collection;ZZZZZLnet/minecraft/WorldVersion;Z)Lnet/minecraft/data/DataGenerator; a
